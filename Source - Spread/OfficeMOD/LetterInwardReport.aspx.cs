using System;
using System.Collections.Generic;
using System.Linq;
//using System.Web.UI.WebControls.ImageButton;
using System.Web.UI.WebControls;
using System.Data;
using System.Collections;
using System.Drawing;
public partial class LetterInwardReport : System.Web.UI.Page
{
    static ArrayList ItemList = new ArrayList();
    static ArrayList Itemindex = new ArrayList();
    static ArrayList ItemList_stud = new ArrayList();
    static ArrayList Itemindex_stud = new ArrayList();
    static ArrayList ItemList_par = new ArrayList();
    static ArrayList Itemindex_par = new ArrayList();
    static ArrayList ItemList_comp = new ArrayList();
    static ArrayList Itemindex_comp = new ArrayList();
    static ArrayList ItemList_indi = new ArrayList();
    static ArrayList Itemindex_indi = new ArrayList();
    static ArrayList ItemList_mag = new ArrayList();
    static ArrayList Itemindex_mag = new ArrayList();
    static ArrayList ItemList_othr = new ArrayList();
    static ArrayList Itemindex_othr = new ArrayList();
    static ArrayList ItemList_all = new ArrayList();
    static ArrayList Itemindex_all = new ArrayList();
    int tt;
    static string path1 = "";
    string usercode = string.Empty;
    string collegecode1 = string.Empty;
    string collegecode = string.Empty;
    string singleuser = string.Empty;
    string group_user = string.Empty;
    string staffcodesession = "";
    int count = 0;
    int i;
    static string val_move = "";
    string error = "";
    static int btnflag;
    bool check = false;
    Boolean Cellclick = false;
    DAccess2 d2 = new DAccess2();
    DataSet ds = new DataSet();
    DataSet ds1 = new DataSet();
    DataSet ds2 = new DataSet();
    DataSet ds3 = new DataSet();
    DataSet ds4 = new DataSet();
    DataSet ds5 = new DataSet();
    DataSet ds6 = new DataSet();
    string date = DateTime.Now.ToString("dd/MM/yyyy");
    Hashtable hat = new Hashtable();
    Hashtable hat1 = new Hashtable();
    Hashtable hat2 = new Hashtable();
    Hashtable hat3 = new Hashtable();
    Hashtable hat4 = new Hashtable();
    Hashtable hat5 = new Hashtable();
    Hashtable hat6 = new Hashtable();
    Hashtable hat7 = new Hashtable();
    static ArrayList colord = new ArrayList();
    static ArrayList colordAll = new ArrayList();
    static ArrayList colordstudent = new ArrayList();
    static ArrayList colordcompany = new ArrayList();
    static ArrayList colordothers = new ArrayList();

    protected void Page_Load(object sender, EventArgs e)
    {
        try
        {
            if (Session["collegecode"] == null)
            {
                Response.Redirect("~/Default.aspx");
            }
            DataSet statusdataset = new DataSet();
            usercode = Session["usercode"].ToString();
            collegecode1 = Session["collegecode"].ToString();
            singleuser = Session["single_user"].ToString();
            group_user = Session["group_code"].ToString();
            collegecode1 = Session["collegecode"].ToString();
            staffcodesession = Session["Staff_Code"].ToString();
            //DataSet actiontaken_ds = new DataSet();
            //ddl_viewdetails1.Items.Clear();//delsi
            //actiontaken_ds.Tables.Clear();
            //string sql = "select MasterCode,MasterValue from CO_MasterValues where MasterCriteria ='TAcst' and CollegeCode ='" + collegecode1 + "'";
            //actiontaken_ds = d2.select_method_wo_parameter(sql, "TEXT");
            //if (actiontaken_ds.Tables[0].Rows.Count > 0 || actiontaken_ds.Tables[0].Rows.Count==0)
            //{
            //    for(int i=0;i<actiontaken_ds.Tables[0].Rows.Count;i++)
            //    {
            //        string check_completed = Convert.ToString(actiontaken_ds.Tables[0].Rows[i]["MasterValue"]);
            //        if (check_completed != "Completed")
            //        {
            //            ddl_viewdetails1.Items.Insert(1, new ListItem("Completed", "1"));
            //        }
            //    }

            //    //ddl_viewdetails1.DataSource = ds;
            //    //ddl_viewdetails1.DataTextField = "MasterValue";
            //    //ddl_viewdetails1.DataValueField = "MasterCode";
            //    //ddl_viewdetails1.DataBind();
            //    //ddl_viewdetails1.Items.Insert(0, new ListItem("Select", "0"));
            //}
            //else
            //{
            //    ddl_viewdetails1.Items.Insert(0, new ListItem("Select", "0"));
            //}



            if (!IsPostBack)
            {
                loaddoc();
                //txt_fromtime.Text = DateTime.Now.ToLongTimeString();
                txt_fromdate.Text = DateTime.Now.ToString("dd/MM/yyyy");
                txt_fromdate.Attributes.Add("readonly", "readonly");
                //   txt_totime.Text = DateTime.Now.ToLongTimeString();
                txt_todate.Text = DateTime.Now.ToString("dd/MM/yyyy");
                txt_popviewdate.Text = DateTime.Now.ToString("dd/MM/yyyy");
                txt_popviewdate.Attributes.Add("readonly", "readonly");
                txt_todate.Attributes.Add("readonly", "readonly");
                txt_viewtime.Text = DateTime.Now.ToString("HH:mm:ss");
                Fpspread1.Visible = false;
                loaddesc();
                binddept();
                //div1.Visible = false;
                div_student.Visible = false;
                lbl_err.Visible = false;
                div_staff.Visible = false;
                Fpspread2.Visible = false;
                div_parent.Visible = false;
                Fpspread3.Visible = false;
                div_company.Visible = false;
                Fpspread4.Visible = false;
                div_individual.Visible = false;
                Fpspread5.Visible = false;
                div_mag.Visible = false;
                Fpspread6.Visible = false;
                div_others.Visible = false;
                Fpspread7.Visible = false;
                Fpspread9.Visible = false;
                div_all.Visible = false;
                lbl_err_other.Visible = false;
                lbl_err_mag.Visible = false;
                lbl_err_indi.Visible = false;
                lbl_err_comp.Visible = false;
                lbl_err_parent.Visible = false;
                lbl_err_staff.Visible = false;
                lbl_err_stud.Visible = false;
                popup_select.Visible = false;
                cbl();
                cb_selectall.Checked = true;
                div_report.Visible = false;
                lbl_norec.Visible = false;
                Fpspread1.Sheets[0].RowCount = 0;
                Fpspread1.Sheets[0].ColumnCount = 0;
                loadhour();
                loadsecond();
                loadminits();
                ItemList.Clear();
                Itemindex.Clear();
                ItemList_stud.Clear();
                Itemindex_stud.Clear();
                ItemList_par.Clear();
                Itemindex_par.Clear();
                ItemList_comp.Clear();
                Itemindex_comp.Clear();
                ItemList_indi.Clear();
                Itemindex_indi.Clear();
                ItemList_mag.Clear();
                Itemindex_mag.Clear();
                ItemList_othr.Clear();
                Itemindex_othr.Clear();
                ItemList_all.Clear();
                Itemindex_all.Clear();
                btn_del_stud.Visible = false;
                //popview.Visible = true;
                //val_move = "";
                loaddesc();
                loaddesc1();
                access();
                bindcollege();
                timevalue();
                loadstatus();
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");

        }
    }

    public void lb2_Click(object sender, EventArgs e)
    {
        Session.Abandon();
        Session.Clear();
        Session.RemoveAll();
        System.Web.Security.FormsAuthentication.SignOut();
        Response.Redirect("~/Default.aspx", false);
    }

    public void loadhour()
    {
        try
        {
            ddl_hour.Items.Clear();
            ddl_endhour.Items.Clear();
            for (int i = 1; i <= 12; i++)
            {
                ddl_hour.Items.Add(Convert.ToString(i));
                ddl_endhour.Items.Add(Convert.ToString(i));
                ddl_hour.SelectedIndex = ddl_hour.Items.Count - 1;
                ddl_endhour.SelectedIndex = ddl_endhour.Items.Count - 1;
            }
        }
        catch
        {
        }
    }

    public void loadsecond()
    {
        ddl_seconds.Items.Clear();
        ddl_endsecnonds.Items.Clear();
        for (int i = 0; i <= 60; i++)
        {
            string value = Convert.ToString(i);
            if (value.Length == 1)
            {
                value = "0" + "" + value;
            }
            ddl_seconds.Items.Add(Convert.ToString(value));
            ddl_endsecnonds.Items.Add(Convert.ToString(value));
        }
    }

    public void loadminits()
    {
        ddl_minits.Items.Clear();
        ddl_endminit.Items.Clear();
        for (int i = 0; i <= 59; i++)
        {
            string value = Convert.ToString(i);
            if (value.Length == 1)
            {
                value = "0" + "" + value;
            }
            ddl_minits.Items.Add(Convert.ToString(value));
            ddl_endminit.Items.Add(Convert.ToString(value));
        }
    }

    protected void btn_time_Click(object sender, EventArgs e)
    {
    }

    protected void cb_all_CheckedChanged(object sender, EventArgs e)
    {
        if (cb_selectall.Checked == true)
        {
            for (int i = 0; i < cbl_select.Items.Count; i++)
            {
                cbl_select.Items[i].Selected = true;
            }
        }
        else
        {
            for (int i = 0; i < cbl_select.Items.Count; i++)
            {
                cbl_select.Items[i].Selected = false;
            }
        }
        cb();
    }

    protected void cbl_select_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            for (int i = 0; i < cbl_select.Items.Count; i++)
            {
                if (cbl_select.Items[i].Selected == true)
                {
                    if (i == 0)
                    {
                        imgbtn_all.Visible = true;
                        Label2.Visible = true;
                    }
                    else if (i == 1)
                    {
                        imgbtn_stud.Visible = true;
                        lbl_student.Visible = true;
                        txt_stud.Visible = true;
                        lbl_stud.Visible = true;
                    }
                    else if (i == 2)
                    {
                        imgbtn_staff.Visible = true;
                        lbl_staff.Visible = true;
                        txt_stf.Visible = true;
                        lbl_stf.Visible = true;
                    }
                    else if (i == 3)
                    {
                        imgbtn_parents.Visible = true;
                        lbl_parents.Visible = true;
                        txt_parnt.Visible = true;
                        lbl_parnt.Visible = true;
                    }
                    else if (i == 4)
                    {
                        imgbtn_company.Visible = true;
                        lbl_company.Visible = true;
                        lbl_comp.Visible = true;
                        txt_comp.Visible = true;
                    }
                    else if (i == 5)
                    {
                        imgbtn_individual.Visible = true;
                        lbl_individual.Visible = true;
                        lbl_indiv.Visible = true;
                        txt_indiv.Visible = true;
                    }
                    else if (i == 6)
                    {
                        imgbtn_magazine.Visible = true;
                        lbl_magazine.Visible = true;
                        lbl_magaz.Visible = true;
                        txt_magaz.Visible = true;
                    }
                    else if (i == 7)
                    {
                        imgbtn_others.Visible = true;
                        lbl_others.Visible = true;
                        lbl_othr.Visible = true;
                        txt_othr.Visible = true;
                    }
                }
                else
                {
                    if (i == 0)
                    {
                        imgbtn_all.Visible = false;
                        Label2.Visible = false;
                    }
                    else if (i == 1)
                    {
                        imgbtn_stud.Visible = false;
                        lbl_student.Visible = false;
                        txt_stud.Visible = false;
                        lbl_stud.Visible = false;
                    }
                    else if (i == 2)
                    {
                        imgbtn_staff.Visible = false;
                        lbl_staff.Visible = false;
                        txt_stf.Visible = false;
                        lbl_stf.Visible = false;
                    }
                    else if (i == 3)
                    {
                        imgbtn_parents.Visible = false;
                        lbl_parents.Visible = false;
                        txt_parnt.Visible = false;
                        lbl_parnt.Visible = false;
                    }
                    else if (i == 4)
                    {
                        imgbtn_company.Visible = false;
                        lbl_company.Visible = false;
                        lbl_comp.Visible = false;
                        txt_comp.Visible = false;
                    }
                    else if (i == 5)
                    {
                        imgbtn_individual.Visible = false;
                        lbl_individual.Visible = false;
                        lbl_indiv.Visible = false;
                        txt_indiv.Visible = false;
                    }
                    else if (i == 6)
                    {
                        imgbtn_magazine.Visible = false;
                        lbl_magazine.Visible = false;
                        lbl_magaz.Visible = false;
                        txt_magaz.Visible = false;
                    }
                    else if (i == 7)
                    {
                        imgbtn_others.Visible = false;
                        lbl_others.Visible = false;
                        lbl_othr.Visible = false;
                        txt_othr.Visible = false;
                    }
                }
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void cb()
    {
        if (cb_selectall.Checked == true)
        {
            imgbtn_all.Visible = true;
            Label2.Visible = true;
            imgbtn_stud.Visible = true;
            lbl_student.Visible = true;
            txt_stud.Visible = true;
            lbl_stud.Visible = true;
            imgbtn_staff.Visible = true;
            lbl_staff.Visible = true;
            txt_stf.Visible = true;
            lbl_stf.Visible = true;
            imgbtn_parents.Visible = true;
            lbl_parents.Visible = true;
            txt_parnt.Visible = true;
            lbl_parnt.Visible = true;
            imgbtn_company.Visible = true;
            lbl_company.Visible = true;
            lbl_comp.Visible = true;
            txt_comp.Visible = true;
            imgbtn_individual.Visible = true;
            lbl_individual.Visible = true;
            lbl_indiv.Visible = true;
            txt_indiv.Visible = true;
            imgbtn_magazine.Visible = true;
            lbl_magazine.Visible = true;
            lbl_magaz.Visible = true;
            txt_magaz.Visible = true;
            imgbtn_others.Visible = true;
            lbl_others.Visible = true;
            lbl_othr.Visible = true;
            txt_othr.Visible = true;
        }
        else
        {
            imgbtn_all.Visible = false;
            Label2.Visible = false;
            imgbtn_stud.Visible = false;
            lbl_student.Visible = false;
            txt_stud.Visible = false;
            lbl_stud.Visible = false;
            imgbtn_staff.Visible = false;
            lbl_staff.Visible = false;
            txt_stf.Visible = false;
            lbl_stf.Visible = false;
            imgbtn_parents.Visible = false;
            lbl_parents.Visible = false;
            txt_parnt.Visible = false;
            lbl_parnt.Visible = false;
            imgbtn_company.Visible = false;
            lbl_company.Visible = false;
            lbl_comp.Visible = false;
            txt_comp.Visible = false;
            imgbtn_individual.Visible = false;
            lbl_individual.Visible = false;
            lbl_indiv.Visible = false;
            txt_indiv.Visible = false;
            imgbtn_magazine.Visible = false;
            lbl_magazine.Visible = false;
            lbl_magaz.Visible = false;
            txt_magaz.Visible = false;
            imgbtn_others.Visible = false;
            lbl_others.Visible = false;
            lbl_othr.Visible = false;
            txt_othr.Visible = false;
        }
    }

    public void tag_Click(object sender, EventArgs e)
    {
        if (popup_select.Visible)
        {
            popup_select.Visible = false;
        }
        else
        {
            popup_select.Visible = true;
        }
    }

    public void cbl()
    {
        try
        {
            if (cbl_select.Items.Count > 0)
            {
                for (int i = 0; i < cbl_select.Items.Count; i++)
                {
                    cbl_select.Items[i].Selected = true;
                }
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void btn_go_Click(object sender, EventArgs e)
    {
        div_company.Visible = false;
        div_individual.Visible = false;
        div_mag.Visible = false;
        div_others.Visible = false;
        div_parent.Visible = false;
        div_staff.Visible = false;
        div_all.Visible = false;
        Fpspread9.Visible = false;
        //popup_select.Visible = false;
        //popwindow1.Visible = false;
        view();
    }

    public void view()
    {
        try
        {
            pcolumnorder0.Visible = false;
            pheaderfilter0.Visible = false;
            lbl_err_stud.Visible = false;
            string[] ay = txt_fromdate.Text.Split('/');
            string[] ay1 = txt_todate.Text.Split('/');
            DateTime dt = new DateTime();
            DateTime dt1 = new DateTime();
            dt = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
            dt1 = Convert.ToDateTime(ay1[1] + "/" + ay1[0] + "/" + ay1[2]);
            string fnlquery = "";
            int i;
            string stud = Convert.ToString(txt_stud.Text);
            string appno = d2.GetFunction("select app_no  from Registration where Stud_Name ='" + stud + "'");
            string staff = Convert.ToString(txt_stf.Text);
            string code = d2.GetFunction("select staff_code  from staffmaster where staff_name ='" + staff + "'");
            string parent = Convert.ToString(txt_parnt.Text);
            string appno1 = d2.GetFunction("select a.app_no from Registration r,applyn a where a.app_no=r.App_No and a.parent_name='" + parent + "'");
            string company = Convert.ToString(txt_comp.Text);
            string indi = Convert.ToString(txt_indiv.Text);
            string mag = Convert.ToString(txt_magaz.Text);
            string others = Convert.ToString(txt_othr.Text);
            string query = "select r.Stud_Name,r.Roll_No,MoveTo,ToDeptCode,PaymentType,ViewStatus,DDName,DDNo,BankCode,BranchName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalMovementsID,TapalInwardDate,ToCCDeptCode,individual_code,ccindividual_code,RefNo,type,Priority,TapalType,TapalSubject from TapalInward t,Registration r where T.App_No =r.App_No and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and r.App_No='" + appno + "' and MemType ='" + 1 + "'";
            fnlquery = query + " select distinct s.staff_name,s.staff_code,MoveTo,ToDeptCode,ViewStatus,t.BankCode,BranchName,PaymentType,DDNo,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalInwardDate,TapalMovementsID,ToCCDeptCode,individual_code,ccindividual_code,RefNo,TapalSubject,type,Priority,TapalType from TapalInward t,Registration r,staffmaster s where T.staff_code =s.staff_code and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and MemType ='" + 2 + "' and t.staff_code='" + code + "'";
            fnlquery = fnlquery + " select distinct r.Stud_Name,r.Roll_No,a.parent_name,MoveTo,ViewStatus,t.BankCode,BranchName,TapalInwardDate,PaymentType,DDNo,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalMovementsID,ToDeptCode,ToCCDeptCode,individual_code,ccindividual_code,RefNo,type,Priority,TapalType,TapalSubject from TapalInward t,Registration r,applyn a where T.App_No =r.App_No and a.app_no =r.App_No and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and MemType ='" + 3 + "' and type='" + tt + "' and r.App_No='" + appno1 + "'";
            fnlquery = fnlquery + " select distinct FromName,MoveTo,ToDeptCode,ToCCDeptCode,ViewStatus,t.BankCode,BranchName,TapalInwardDate,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,DDNo,Paymentamount,TapalMovementsID,individual_code,ccindividual_code,RefNo,type,TapalSubject,Priority,TapalType from TapalInward t,Registration r,staffmaster s where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and  MemType ='" + 4 + "' and FromName='" + company + "'";
            fnlquery = fnlquery + " select distinct FromName,MoveTo,ToDeptCode,ToCCDeptCode,ViewStatus,t.BankCode,BranchName,TapalInwardDate,PaymentType,DDName,DDNo,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalMovementsID,individual_code,ccindividual_code,RefNo,TapalSubject,type,Priority,TapalType from TapalInward t,Registration r,staffmaster s where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and MemType ='" + 5 + "' and FromName='" + indi + "'";
            fnlquery = fnlquery + " select distinct MagazineName,MagazineType,MoveTo,ToDeptCode,ViewStatus,t.BankCode,BranchName,TapalInwardDate,PaymentType,DDName,DDNo,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalMovementsID,ToCCDeptCode,individual_code,ccindividual_code,RefNo,type,Priority,TapalType,TapalSubject from TapalInward t,Registration r,staffmaster s where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and MemType ='" + 6 + "' and MagazineName='" + mag + "'";
            fnlquery = fnlquery + " select distinct FromName,MoveTo,ToDeptCode,ToCCDeptCode,individual_code,t.BankCode,BranchName,ViewStatus,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,DDNo,Paymentamount,TapalMovementsID,TapalInwardDate,ccindividual_code,RefNo,type,Priority,TapalType,TapalSubject from TapalInward t,Registration r,staffmaster s where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and  MemType ='" + 7 + "' and FromName='" + others + "'";
            fnlquery = fnlquery + " select * from lettertbl where Memtype='1'";
            fnlquery = fnlquery + " select * from lettertbl where Memtype='2'";
            fnlquery = fnlquery + " select * from lettertbl where Memtype='3'";
            fnlquery = fnlquery + " select * from lettertbl where Memtype='4'";
            fnlquery = fnlquery + " select * from lettertbl where Memtype='5'";
            fnlquery = fnlquery + " select * from lettertbl where Memtype='6'";
            fnlquery = fnlquery + " select * from lettertbl where Memtype='7'";
            ds = d2.select_method_wo_parameter(fnlquery, "Text");
            if (txt_stud.Text != "" || txt_stf.Text != "" || txt_comp.Text != "" || txt_parnt.Text != "" || txt_indiv.Text != "" || txt_magaz.Text != "" || txt_othr.Text != "")
            {
                if (ds.Tables[0].Rows.Count > 0 || ds.Tables[1].Rows.Count > 0 || ds.Tables[2].Rows.Count > 0 || ds.Tables[3].Rows.Count > 0 || ds.Tables[4].Rows.Count > 0 || ds.Tables[5].Rows.Count > 0 || ds.Tables[6].Rows.Count > 0)
                {
                    //gdiv1.Visible = true;
                    div_student.Visible = true;
                    Fpspread1.Visible = true;
                    div_report.Visible = true;
                    Fpspread1.Sheets[0].RowCount = 0;
                    FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
                    darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
                    darkstyle.ForeColor = Color.Black;
                    darkstyle.HorizontalAlign = HorizontalAlign.Center;
                    // Fpspread1.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
                    Fpspread1.Sheets[0].RowHeader.Visible = false;
                    Fpspread1.CommandBar.Visible = false;
                    Fpspread1.Sheets[0].AutoPostBack = false;
                    Fpspread1.Sheets[0].RowCount = 0;
                    //Fpspread1.Sheets[0].ColumnCount = 0;
                    Fpspread1.Sheets[0].ColumnCount = 17;
                    Fpspread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 1, 17);
                    Fpspread1.Sheets[0].ColumnHeader.Cells[0, 0].Text = " ";
                    if (txt_stud.Text != "")
                    {
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            Fpspread1.Sheets[0].RowCount += 1;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 16].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Text = "S.No";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                            //   Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].ForeColor = ColorTranslator.FromHtml("white");
                            Fpspread1.Columns[0].Width = 50;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Text = "View";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Text = "Roll No";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                            //   Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].ForeColor = ColorTranslator.FromHtml("white");
                            Fpspread1.Columns[1].Width = 150;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Text = "Student Name";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                            //   Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].ForeColor = ColorTranslator.FromHtml("white");
                            Fpspread1.Columns[2].Width = 100;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Text = "Subject";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                            //    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].ForeColor = ColorTranslator.FromHtml("white");
                            Fpspread1.Columns[3].Width = 200;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Text = "Move To";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].HorizontalAlign = HorizontalAlign.Center;
                            //   Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].ForeColor = ColorTranslator.FromHtml("white");
                            Fpspread1.Columns[4].Width = 200;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Text = "To Department";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].HorizontalAlign = HorizontalAlign.Center;
                            //   Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].ForeColor = ColorTranslator.FromHtml("white");
                            Fpspread1.Columns[5].Width = 300;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Text = "CC Department";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].HorizontalAlign = HorizontalAlign.Center;
                            //  Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].ForeColor = ColorTranslator.FromHtml("white");
                            Fpspread1.Columns[6].Width = 300;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Text = "To Individual";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].HorizontalAlign = HorizontalAlign.Center;
                            //Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].ForeColor = ColorTranslator.FromHtml("white");
                            Fpspread1.Columns[7].Width = 300;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Text = "CC Individual";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                            // Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].ForeColor = ColorTranslator.FromHtml("white");
                            Fpspread1.Columns[8].Width = 300;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Text = "Reference No";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].HorizontalAlign = HorizontalAlign.Center;
                            //Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].ForeColor = ColorTranslator.FromHtml("white");
                            Fpspread1.Columns[9].Width = 300;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Text = "Document Priority";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].HorizontalAlign = HorizontalAlign.Center;
                            //  Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].ForeColor = ColorTranslator.FromHtml("white");
                            Fpspread1.Columns[10].Width = 50;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Text = "Delivery Mode";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].HorizontalAlign = HorizontalAlign.Center;
                            //  Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].ForeColor = ColorTranslator.FromHtml("white");
                            Fpspread1.Columns[11].Width = 200;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Text = "Type";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].HorizontalAlign = HorizontalAlign.Center;
                            // Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].ForeColor = ColorTranslator.FromHtml("white");
                            Fpspread1.Columns[12].Width = 150;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Text = "Payement Type";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Columns[13].Width = 150;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Text = "Payement Date";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Columns[14].Width = 150;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 16].Text = "Payement Amount";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 16].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 16].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Columns[15].Width = 150;
                            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
                            {
                                string typevalue = "";
                                string movevalue = "";
                                string todeptsplit = "";
                                string todeptsplit1 = "";
                                string ccdeptsplit = "";
                                string ccdeptsplit1 = "";
                                string toindisplit = "";
                                string toindisplit1 = "";
                                string ccindisplit = "";
                                string ccindisplit1 = "";
                                string department_to = "";
                                string department_cc = "";
                                string staff_to = "";
                                string staff_cc = "";
                                string priorityvalue = "";
                                string modevalue = "";
                                string paymenttype = "";
                                string type1 = Convert.ToString((ds.Tables[0].Rows[i]["type"]));
                                if (type1 == "False")
                                {
                                    typevalue = Convert.ToString("IN");
                                }
                                if (type1 == "True")
                                {
                                    typevalue = Convert.ToString("OUT");
                                }
                                string todept = ds.Tables[0].Rows[i]["ToDeptCode"].ToString();
                                string ccdept = ds.Tables[0].Rows[i]["ToCCDeptCode"].ToString();
                                string toindi = ds.Tables[0].Rows[i]["individual_code"].ToString();
                                string ccindi = ds.Tables[0].Rows[i]["ccindividual_code"].ToString();
                                string moveto = ds.Tables[0].Rows[i]["MoveTo"].ToString();
                                if (toindi.Trim() == "")
                                {
                                    staff_to = "";
                                }
                                if (ccindi.Trim() == "")
                                {
                                    staff_cc = "";
                                }
                                if (moveto == "1")
                                {
                                    movevalue = "Department";
                                    if (todept.Trim() == "" || todept.Trim() == "0")
                                    {
                                        department_to = "";
                                    }
                                    else
                                    {
                                        string[] split = todept.Split(',');
                                        if (split.Length == 1)
                                        {
                                            department_to = getdepartment(todept);
                                        }
                                        else
                                        {
                                            todeptsplit = getdepartment(split[0]);
                                            todeptsplit1 = getdepartment(split[1]);
                                            department_to = todeptsplit + "," + todeptsplit1;
                                        }
                                    }
                                    if (ccdept.Trim() == "" || ccdept.Trim() == "")
                                    {
                                        department_cc = "";
                                    }
                                    else
                                    {
                                        string[] split1 = ccdept.Split(',');
                                        if (split1.Length == 1)
                                        {
                                            department_cc = getdepartment(ccdept);
                                        }
                                        else
                                        {
                                            ccdeptsplit = getdepartment(split1[0]);
                                            ccdeptsplit1 = getdepartment(split1[1]);
                                            department_cc = ccdeptsplit + "," + ccdeptsplit1;
                                        }
                                    }
                                }
                                if (moveto == "2")
                                {
                                    movevalue = "Individual";
                                    string[] split = toindi.Split(',');
                                    if (split.Length == 1)
                                    {
                                        staff_to = getstaffname(toindi);
                                    }
                                    else
                                    {
                                        toindisplit = getstaffname(split[0]);
                                        toindisplit1 = getstaffname(split[1]);
                                        staff_to = toindisplit + "," + toindisplit1;
                                    }
                                    string[] split1 = ccindi.Split(',');
                                    if (split1.Length == 1)
                                    {
                                        staff_cc = getstaffname(ccindi);
                                    }
                                    else
                                    {
                                        ccindisplit = getstaffname(split1[0]);
                                        ccindisplit1 = getstaffname(split1[1]);
                                        staff_cc = ccindisplit + "," + ccindisplit1;
                                    }
                                }
                                if (moveto == "3")
                                {
                                    movevalue = "Department and Individual";
                                    if (todept.Trim() == "" || todept.Trim() == "0")
                                    {
                                        department_to = "";
                                    }
                                    else
                                    {
                                        string[] split = todept.Split(',');
                                        if (split.Length == 1)
                                        {
                                            department_to = getdepartment(todept);
                                        }
                                        else
                                        {
                                            todeptsplit = getdepartment(split[0]);
                                            todeptsplit1 = getdepartment(split[1]);
                                            department_to = todeptsplit + "," + todeptsplit1;
                                        }
                                    }
                                    if (ccdept.Trim() == "" || ccdept.Trim() == "0")
                                    {
                                        department_cc = "";
                                    }
                                    else
                                    {
                                        string[] split1 = ccdept.Split(',');
                                        if (split1.Length == 1)
                                        {
                                            department_cc = getdepartment(ccdept);
                                        }
                                        else
                                        {
                                            ccdeptsplit = getdepartment(split1[0]);
                                            ccdeptsplit1 = getdepartment(split1[1]);
                                            department_cc = ccdeptsplit + "," + ccdeptsplit1;
                                        }
                                    }
                                    string[] split2 = toindi.Split(',');
                                    if (split2.Length == 1)
                                    {
                                        staff_to = getstaffname(toindi);
                                    }
                                    else
                                    {
                                        toindisplit = getstaffname(split2[0]);
                                        toindisplit1 = getstaffname(split2[1]);
                                        staff_to = toindisplit + "," + toindisplit1;
                                    }
                                    string[] split3 = ccindi.Split(',');
                                    if (split3.Length == 1)
                                    {
                                        staff_cc = getstaffname(ccindi);
                                    }
                                    else
                                    {
                                        ccindisplit = getstaffname(split3[0]);
                                        ccindisplit1 = getstaffname(split3[1]);
                                        staff_cc = ccindisplit + "," + ccindisplit1;
                                    }
                                }
                                string priority = ds.Tables[0].Rows[i]["Priority"].ToString();
                                if (priority.Trim() == "0")
                                {
                                    priorityvalue = "";
                                }
                                else
                                {
                                    priorityvalue = gettext(priority);
                                }
                                string mode = ds.Tables[0].Rows[i]["TapalType"].ToString();
                                if (mode.Trim() == "0")
                                {
                                    modevalue = "";
                                }
                                else
                                {
                                    modevalue = gettext1(mode);
                                }
                                //>>>>>>>>>>>>>
                                DataView dv = new DataView();
                                string getappno = d2.GetFunction("select app_no  from Registration  where roll_No='" + Convert.ToString(ds.Tables[0].Rows[i]["Roll_No"]) + "'");
                                string date = Convert.ToString(ds.Tables[0].Rows[i]["TapalInwardDate"]);
                                string tapalpk = Convert.ToString(ds.Tables[0].Rows[i]["TapalMovementsID"]);
                                string[] splitdate = date.Split('/');
                                string dnew = splitdate[0] + "/" + splitdate[1] + "/" + splitdate[2];
                                if (ds.Tables[7].Rows.Count > 0)
                                {
                                    ds.Tables[7].DefaultView.RowFilter = "MemCode='" + getappno + "' and TapalInwardFk='" + tapalpk + "' and date='" + dnew + "'";
                                    dv = ds.Tables[7].DefaultView;
                                    {
                                        if (dv.Count > 0)
                                        {
                                            string imagetext = Convert.ToString(dv[0]["filename"]);
                                            Fpspread1.Sheets[0].RowCount++;
                                            Fpspread1.ActiveSheetView.Cells[Fpspread1.Sheets[0].RowCount - 1, 1].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Text = imagetext.ToString();
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Tag = Convert.ToString(dv[0]["fileid"]);
                                        }
                                        else
                                        {
                                            Fpspread1.Sheets[0].RowCount++;
                                        }
                                        //>>>>>>>>>>>>>>>>>
                                    }
                                }
                                else
                                {
                                    Fpspread1.Sheets[0].RowCount++;
                                }
                                string paytype = Convert.ToString(ds.Tables[0].Rows[i]["PaymentType"]);
                                string pay = "";
                                if (paytype == "0")
                                {
                                    pay = "Cheque";
                                }
                                else if (paytype == "1")
                                {
                                    pay = "DD";
                                }
                                else
                                {
                                    pay = "";
                                }
                                string View = Convert.ToString(ds.Tables[0].Rows[i]["ViewStatus"]);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(i + 1);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(ds.Tables[0].Rows[i]["Roll_No"]);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(ds.Tables[0].Rows[i]["Roll_No"]);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Text = Convert.ToString(ds.Tables[0].Rows[i]["Stud_Name"]);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Tag = Convert.ToString(ds.Tables[0].Rows[i]["Stud_Name"]);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Text = Convert.ToString(ds.Tables[0].Rows[i]["TapalSubject"]);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Text = Convert.ToString(movevalue);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Text = Convert.ToString(department_to); ;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Text = Convert.ToString(department_cc);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Text = Convert.ToString(staff_to);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Text = Convert.ToString(staff_cc);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].HorizontalAlign = HorizontalAlign.Center;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Text = Convert.ToString(ds.Tables[0].Rows[i]["RefNo"]);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Text = Convert.ToString(priorityvalue);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Text = Convert.ToString(modevalue);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Text = Convert.ToString(typevalue);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Text = pay;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Text = Convert.ToString(ds.Tables[0].Rows[i]["DDDate"]);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 16].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 16].Text = Convert.ToString(ds.Tables[0].Rows[i]["Paymentamount"]);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 16].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 16].Font.Size = FontUnit.Medium;
                                if (View == "True")
                                {
                                    Fpspread1.Sheets[0].Rows[Fpspread1.Sheets[0].RowCount - 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                }
                            }
                        }
                        else
                        {
                            lbl_err_stud.Visible = true;
                            lbl_err_stud.Text = "Record Not found in this Particular Student";
                            error = lbl_err_stud.Text;
                        }
                    }
                    if (txt_stf.Text != "")
                    {
                        if (ds.Tables[1].Rows.Count > 0)
                        {
                            Fpspread1.Sheets[0].RowCount += 1;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Text = "S.No";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Text = "View";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Columns[1].Width = 100;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Text = "Staff Name";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Columns[2].Width = 150;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Text = "Subject";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Columns[3].Width = 150;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Text = "Move To";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Columns[4].Width = 150;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Text = "To Department";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Columns[5].Width = 150;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Text = "CC Department";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Columns[6].Width = 150;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Text = "To Individual";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Columns[7].Width = 150;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Text = "CC Individual";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Columns[8].Width = 150;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Text = "Reference No";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Columns[9].Width = 150;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Text = "Document Priority";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Columns[10].Width = 150;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Text = "Delivery Mode";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Columns[11].Width = 150;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Text = "Type";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Columns[12].Width = 100;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Text = "Payement Type";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Columns[13].Width = 150;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Text = "Payement Date";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Columns[14].Width = 150;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Text = "Payement Amount";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Font.Bold = true;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Columns[15].Width = 150;
                            for (int j = 0; j < ds.Tables[1].Rows.Count; j++)
                            {
                                string typevalue1 = "";
                                string movevalue1 = "";
                                string todeptsplit1 = "";
                                string todeptsplit12 = "";
                                string ccdeptsplit1 = "";
                                string ccdeptsplit12 = "";
                                string toindisplit1 = "";
                                string toindisplit12 = "";
                                string ccindisplit1 = "";
                                string ccindisplit12 = "";
                                string department_to1 = "";
                                string department_cc1 = "";
                                string staff_to1 = "";
                                string staff_cc1 = "";
                                string priorityvalue1 = "";
                                string modevalue1 = "";
                                string type2 = Convert.ToString((ds.Tables[1].Rows[j]["type"]));
                                if (type2 == "False")
                                {
                                    typevalue1 = Convert.ToString("IN");
                                }
                                if (type2 == "True")
                                {
                                    typevalue1 = Convert.ToString("OUT");
                                }
                                string todept1 = ds.Tables[1].Rows[j]["ToDeptCode"].ToString();
                                string ccdept1 = ds.Tables[1].Rows[j]["ToCCDeptCode"].ToString();
                                string toindi1 = ds.Tables[1].Rows[j]["individual_code"].ToString();
                                string ccindi1 = ds.Tables[1].Rows[j]["ccindividual_code"].ToString();
                                string moveto1 = ds.Tables[1].Rows[j]["MoveTo"].ToString();
                                if (moveto1 == "1")
                                {
                                    movevalue1 = "Department";
                                    if (todept1.Trim() == "0" || todept1.Trim() == "")
                                    {
                                        department_to1 = "";
                                    }
                                    else
                                    {
                                        string[] split = todept1.Split(',');
                                        if (split.Length == 1)
                                        {
                                            department_to1 = getdepartment(todept1);
                                        }
                                        else
                                        {
                                            todeptsplit1 = getdepartment(split[0]);
                                            todeptsplit12 = getdepartment(split[1]);
                                            department_to1 = todeptsplit1 + "," + todeptsplit12;
                                        }
                                    }
                                    if (ccdept1.Trim() == "0" || ccdept1.Trim() == "")
                                    {
                                        department_cc1 = "";
                                    }
                                    else
                                    {
                                        string[] split1 = ccdept1.Split(',');
                                        if (split1.Length == 1)
                                        {
                                            department_cc1 = getdepartment(ccdept1);
                                        }
                                        else
                                        {
                                            ccdeptsplit1 = getdepartment(split1[0]);
                                            ccdeptsplit12 = getdepartment(split1[1]);
                                            department_cc1 = ccdeptsplit1 + "," + ccdeptsplit12;
                                        }
                                    }
                                }
                                if (moveto1 == "2")
                                {
                                    movevalue1 = "Individual";
                                    if (toindi1.Trim() == "0" || toindi1.Trim() == "")
                                    {
                                        staff_to1 = "";
                                    }
                                    else
                                    {
                                        string[] split = toindi1.Split(',');
                                        if (split.Length == 1)
                                        {
                                            staff_to1 = getstaffname(toindi1);
                                        }
                                        else
                                        {
                                            toindisplit1 = getstaffname(split[0]);
                                            toindisplit12 = getstaffname(split[1]);
                                            staff_to1 = toindisplit1 + "," + toindisplit12;
                                        }
                                    }
                                    if (ccindi1.Trim() == "0" || ccindi1.Trim() == "")
                                    {
                                        staff_cc1 = "";
                                    }
                                    else
                                    {
                                        string[] split1 = ccindi1.Split(',');
                                        if (split1.Length == 1)
                                        {
                                            staff_cc1 = getstaffname(ccindi1);
                                        }
                                        else
                                        {
                                            ccindisplit1 = getstaffname(split1[0]);
                                            ccindisplit12 = getstaffname(split1[1]);
                                            staff_cc1 = ccindisplit1 + "," + ccindisplit12;
                                        }
                                    }
                                }
                                if (moveto1 == "3")
                                {
                                    movevalue1 = "Department and Individual";
                                    if (todept1.Trim() == "0" || todept1.Trim() == "")
                                    {
                                        department_to1 = "";
                                    }
                                    else
                                    {
                                        string[] split = todept1.Split(',');
                                        if (split.Length == 1)
                                        {
                                            department_to1 = getdepartment(todept1);
                                        }
                                        else
                                        {
                                            todeptsplit1 = getdepartment(split[0]);
                                            todeptsplit12 = getdepartment(split[1]);
                                            department_to1 = todeptsplit1 + "," + todeptsplit12;
                                        }
                                    }
                                    if (ccdept1.Trim() == "0" || ccdept1.Trim() == "")
                                    {
                                        department_cc1 = "";
                                    }
                                    else
                                    {
                                        string[] split1 = ccdept1.Split(',');
                                        if (split1.Length == 1)
                                        {
                                            department_cc1 = getdepartment(ccdept1);
                                        }
                                        else
                                        {
                                            ccdeptsplit1 = getdepartment(split1[0]);
                                            ccdeptsplit12 = getdepartment(split1[1]);
                                            department_cc1 = ccdeptsplit1 + "," + ccdeptsplit12;
                                        }
                                    }
                                    if (toindi1.Trim() == "")
                                    {
                                        staff_to1 = "";
                                    }
                                    else
                                    {
                                        string[] split2 = toindi1.Split(',');
                                        if (split2.Length == 1)
                                        {
                                            staff_to1 = getstaffname(toindi1);
                                        }
                                        else
                                        {
                                            toindisplit1 = getstaffname(split2[0]);
                                            toindisplit12 = getstaffname(split2[1]);
                                            staff_to1 = toindisplit1 + "," + toindisplit12;
                                        }
                                    }
                                    if (ccindi1.Trim() == "")
                                    {
                                        staff_cc1 = "";
                                    }
                                    else
                                    {
                                        string[] split3 = ccindi1.Split(',');
                                        if (split3.Length == 1)
                                        {
                                            staff_cc1 = getstaffname(ccindi1);
                                        }
                                        else
                                        {
                                            ccindisplit1 = getstaffname(split3[0]);
                                            ccindisplit12 = getstaffname(split3[1]);
                                            staff_cc1 = ccindisplit1 + "," + ccindisplit12;
                                        }
                                    }
                                }
                                string priority1 = ds.Tables[1].Rows[j]["Priority"].ToString();
                                if (priority1.Trim() == "0")
                                {
                                    priorityvalue1 = "";
                                }
                                else
                                {
                                    priorityvalue1 = gettext(priority1);
                                }
                                string mode1 = ds.Tables[1].Rows[j]["TapalType"].ToString();
                                if (mode1.Trim() == "0")
                                {
                                    modevalue1 = "";
                                }
                                else
                                {
                                    modevalue1 = gettext1(mode1);
                                }
                                DataView dv = new DataView();
                                string getappno = d2.GetFunction("select staff_code  from staffmaster  where staff_name='" + Convert.ToString(ds.Tables[1].Rows[j]["staff_name"]) + "'");
                                string date = Convert.ToString(ds.Tables[1].Rows[j]["TapalInwardDate"]);
                                string tapalpk = Convert.ToString(ds.Tables[1].Rows[j]["TapalMovementsID"]);
                                string[] splitdate = date.Split('/');
                                string dnew = splitdate[0] + "/" + splitdate[1] + "/" + splitdate[2];
                                if (ds.Tables[8].Rows.Count > 0)
                                {
                                    ds.Tables[8].DefaultView.RowFilter = "MemCode='" + getappno + "' and TapalInwardFk='" + tapalpk + "' and date='" + dnew + "'";
                                    dv = ds.Tables[8].DefaultView;
                                    {
                                        if (dv.Count > 0)
                                        {
                                            string imagetext = Convert.ToString(dv[0]["filename"]);
                                            Fpspread1.Sheets[0].RowCount++;
                                            Fpspread1.ActiveSheetView.Cells[Fpspread1.Sheets[0].RowCount - 1, 1].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Text = imagetext.ToString();
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Tag = Convert.ToString(dv[0]["fileid"]);
                                        }
                                        else
                                        {
                                            Fpspread1.Sheets[0].RowCount++;
                                        }
                                    }
                                }
                                else
                                {
                                    Fpspread1.Sheets[0].RowCount++;
                                }
                                string View = Convert.ToString(ds.Tables[1].Rows[j]["ViewStatus"]);
                                string paytype = Convert.ToString(ds.Tables[1].Rows[j]["PaymentType"]);
                                string pay = "";
                                if (paytype == "0")
                                {
                                    pay = "Cheque";
                                }
                                else if (paytype == "1")
                                {
                                    pay = "DD";
                                }
                                else
                                {
                                    pay = "";
                                }
                                //Fpspread1.Sheets[0].RowCount++;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(j + 1);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(ds.Tables[1].Rows[j]["staff_name"]);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Text = Convert.ToString(ds.Tables[1].Rows[j]["TapalSubject"]);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Text = Convert.ToString(movevalue1);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Text = Convert.ToString(department_to1);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Text = Convert.ToString(department_cc1);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Text = Convert.ToString(staff_to1);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Text = Convert.ToString(staff_cc1);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Text = Convert.ToString(ds.Tables[1].Rows[j]["RefNo"]);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Text = Convert.ToString(priorityvalue1);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Text = Convert.ToString(modevalue1);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Text = Convert.ToString(typevalue1);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Text = pay;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Text = Convert.ToString(ds.Tables[1].Rows[j]["DDDate"]);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Text = Convert.ToString(ds.Tables[1].Rows[j]["Paymentamount"]);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Font.Size = FontUnit.Medium;
                                if (View == "True")
                                {
                                    Fpspread1.Sheets[0].Rows[Fpspread1.Sheets[0].RowCount - 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                }
                            }
                        }
                    }
                    if (txt_parnt.Text != "")
                    {
                        Fpspread1.Sheets[0].RowCount += 1;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        // Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Text = "S.No";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[1].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Text = "View";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Text = "Parent Name";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[2].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Text = "Subject";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[3].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Text = "Move To";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[4].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Text = "To Department";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[5].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Text = "CC Department";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[6].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Text = "To Individual";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[7].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Text = "CC Individual";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[8].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Text = "Reference No";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[9].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Text = "Document Priority";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[10].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Text = "Delivery Mode";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[11].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Text = "Type";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[12].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Text = "Payement Type";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[13].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Text = "Payement Date";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[14].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Text = "Payement Amount";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[15].Width = 150;
                        for (int k = 0; k < ds.Tables[2].Rows.Count; k++)
                        {
                            string typevalue = "";
                            string movevalue = "";
                            string todeptsplit = "";
                            string todeptsplit1 = "";
                            string ccdeptsplit = "";
                            string ccdeptsplit1 = "";
                            string toindisplit = "";
                            string toindisplit1 = "";
                            string ccindisplit = "";
                            string ccindisplit1 = "";
                            string department_to = "";
                            string department_cc = "";
                            string staff_to = "";
                            string staff_cc = "";
                            string priorityvalue = "";
                            string modevalue = "";
                            string type1 = Convert.ToString((ds.Tables[2].Rows[k]["type"]));
                            if (type1 == "False")
                            {
                                typevalue = Convert.ToString("IN");
                            }
                            if (type1 == "True")
                            {
                                typevalue = Convert.ToString("OUT");
                            }
                            string todept = ds.Tables[2].Rows[k]["ToDeptCode"].ToString();
                            string ccdept = ds.Tables[2].Rows[k]["ToCCDeptCode"].ToString();
                            string toindi = ds.Tables[2].Rows[k]["individual_code"].ToString();
                            string ccindi = ds.Tables[2].Rows[k]["ccindividual_code"].ToString();
                            string moveto = ds.Tables[2].Rows[k]["MoveTo"].ToString();
                            if (moveto == "1")
                            {
                                movevalue = "Department";
                                if (todept.Trim() == "" || todept.Trim() == "0")
                                {
                                    department_to = "";
                                }
                                else
                                {
                                    string[] split = todept.Split(',');
                                    if (split.Length == 1)
                                    {
                                        department_to = getdepartment(todept);
                                    }
                                    else
                                    {
                                        todeptsplit = getdepartment(split[0]);
                                        todeptsplit1 = getdepartment(split[1]);
                                        department_to = todeptsplit + "," + todeptsplit1;
                                    }
                                }
                                if (ccdept.Trim() == "" || ccdept.Trim() == "0")
                                {
                                    department_cc = "";
                                }
                                else
                                {
                                    string[] split1 = ccdept.Split(',');
                                    if (split1.Length == 1)
                                    {
                                        department_cc = getdepartment(ccdept);
                                    }
                                    else
                                    {
                                        ccdeptsplit = getdepartment(split1[0]);
                                        ccdeptsplit1 = getdepartment(split1[1]);
                                        department_cc = ccdeptsplit + "," + ccdeptsplit1;
                                    }
                                }
                            }
                            if (moveto == "2")
                            {
                                movevalue = "Individual";
                                string[] split = toindi.Split(',');
                                if (split.Length == 1)
                                {
                                    staff_to = getstaffname(toindi);
                                }
                                else
                                {
                                    toindisplit = getstaffname(split[0]);
                                    toindisplit1 = getstaffname(split[1]);
                                    staff_to = toindisplit + "," + toindisplit1;
                                }
                                string[] split1 = ccindi.Split(',');
                                if (split1.Length == 1)
                                {
                                    staff_cc = getstaffname(ccindi);
                                }
                                else
                                {
                                    ccindisplit = getstaffname(split1[0]);
                                    ccindisplit1 = getstaffname(split1[1]);
                                    staff_cc = ccindisplit + "," + ccindisplit1;
                                }
                            }
                            if (moveto == "3")
                            {
                                movevalue = "Department and Individual";
                                if (todept.Trim() == "" || todept.Trim() == "0")
                                {
                                    department_to = "";
                                }
                                else
                                {
                                    string[] split = todept.Split(',');
                                    if (split.Length == 1)
                                    {
                                        department_to = getdepartment(todept);
                                    }
                                    else
                                    {
                                        todeptsplit = getdepartment(split[0]);
                                        todeptsplit1 = getdepartment(split[1]);
                                        department_to = todeptsplit + "," + todeptsplit1;
                                    }
                                }
                                if (ccdept.Trim() == "" || ccdept.Trim() == "0")
                                {
                                    department_cc = "";
                                }
                                else
                                {
                                    string[] split1 = ccdept.Split(',');
                                    if (split1.Length == 1)
                                    {
                                        department_cc = getdepartment(ccdept);
                                    }
                                    else
                                    {
                                        ccdeptsplit = getdepartment(split1[0]);
                                        ccdeptsplit1 = getdepartment(split1[1]);
                                        department_cc = ccdeptsplit + "," + ccdeptsplit1;
                                    }
                                }
                                string[] split2 = toindi.Split(',');
                                if (toindi.Trim() == "" || toindi.Trim() == "0")
                                {
                                    staff_to = "";
                                }
                                else
                                {
                                    if (split2.Length == 1)
                                    {
                                        staff_to = getstaffname(toindi);
                                    }
                                    else
                                    {
                                        toindisplit = getstaffname(split2[0]);
                                        toindisplit1 = getstaffname(split2[1]);
                                        staff_to = toindisplit + "," + toindisplit1;
                                    }
                                }
                                string[] split3 = ccindi.Split(',');
                                if (ccindi.Trim() == "" || ccindi.Trim() == "0")
                                {
                                    staff_cc = "";
                                }
                                else
                                {
                                    if (split3.Length == 1)
                                    {
                                        staff_cc = getstaffname(ccindi);
                                    }
                                    else
                                    {
                                        ccindisplit = getstaffname(split3[0]);
                                        ccindisplit1 = getstaffname(split3[1]);
                                        staff_cc = ccindisplit + "," + ccindisplit1;
                                    }
                                }
                            }
                            string priority = ds.Tables[2].Rows[k]["Priority"].ToString();
                            if (priority.Trim() == "0" || priority.Trim() == "")
                            {
                                priorityvalue = "";
                            }
                            else
                            {
                                priorityvalue = gettext(priority);
                            }
                            string mode = ds.Tables[2].Rows[k]["TapalType"].ToString();
                            if (mode.Trim() == "0" || mode.Trim() == "")
                            {
                                modevalue = "";
                            }
                            else
                            {
                                modevalue = gettext1(mode);
                            }
                            DataView dv = new DataView();
                            string getappno = d2.GetFunction("select app_no  from Registration  where roll_No='" + Convert.ToString(ds.Tables[2].Rows[k]["Roll_No"]) + "'");
                            string date = Convert.ToString(ds.Tables[2].Rows[k]["TapalInwardDate"]);
                            string tapalpk = Convert.ToString(ds.Tables[2].Rows[k]["TapalMovementsID"]);
                            string[] splitdate = date.Split('/');
                            DateTime dnew = Convert.ToDateTime(splitdate[1] + "/" + splitdate[0] + "/" + splitdate[2]);
                            if (ds.Tables[9].Rows.Count > 0)
                            {
                                ds.Tables[9].DefaultView.RowFilter = "MemCode='" + getappno + "' and TapalInwardFk='" + tapalpk + "' and date='" + dnew.ToString("MM/dd/yyyy") + "'";
                                dv = ds.Tables[9].DefaultView;
                                {
                                    if (dv.Count > 0)
                                    {
                                        string imagetext = Convert.ToString(dv[0]["filename"]);
                                        Fpspread1.Sheets[0].RowCount++;
                                        Fpspread1.ActiveSheetView.Cells[Fpspread1.Sheets[0].RowCount - 1, 1].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Text = imagetext.ToString();
                                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Tag = Convert.ToString(dv[0]["fileid"]);
                                    }
                                    else
                                    {
                                        Fpspread1.Sheets[0].RowCount++;
                                    }
                                }
                            }
                            else
                            {
                                Fpspread1.Sheets[0].RowCount++;
                            }
                            string paytype = Convert.ToString(ds.Tables[2].Rows[k]["PaymentType"]);
                            string pay = "";
                            if (paytype == "0")
                            {
                                pay = "Cheque";
                            }
                            else if (paytype == "1")
                            {
                                pay = "DD";
                            }
                            else
                            {
                                pay = "";
                            }
                            string View = Convert.ToString(ds.Tables[2].Rows[k]["ViewStatus"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(k + 1);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(ds.Tables[2].Rows[k]["parent_name"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(ds.Tables[2].Rows[k]["parent_name"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Text = Convert.ToString(ds.Tables[2].Rows[k]["TapalSubject"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Text = Convert.ToString(movevalue);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Text = Convert.ToString(department_to);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Text = Convert.ToString(department_cc);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Text = Convert.ToString(staff_to);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Text = Convert.ToString(staff_cc);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Text = Convert.ToString(ds.Tables[2].Rows[k]["RefNo"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Text = Convert.ToString(priorityvalue);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Text = Convert.ToString(modevalue);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Text = Convert.ToString(typevalue);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Text = pay;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Text = Convert.ToString(ds.Tables[2].Rows[k]["DDDate"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Text = Convert.ToString(ds.Tables[2].Rows[k]["Paymentamount"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Font.Size = FontUnit.Medium;
                            if (View == "True")
                            {
                                Fpspread1.Sheets[0].Rows[Fpspread1.Sheets[0].RowCount - 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                            }
                        }
                    }
                    if (txt_comp.Text != "")
                    {
                        Fpspread1.Sheets[0].RowCount += 1;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Text = "S.No";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Text = "View";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[1].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Text = "Company Name";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[2].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Text = "Subject";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[4].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Text = "Move To";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Text = "To Department";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Text = "CC Department";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Text = "To Individual";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Text = "CC Individual";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Text = "Reference No";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Text = "Document Priority";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Text = "Delivery Mode";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Text = "Type";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Text = "Payement Type";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[13].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Text = "Payement Date";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[14].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Text = "Payement Amount";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[15].Width = 150;
                        Fpspread1.Columns[5].Width = 150;
                        Fpspread1.Columns[6].Width = 150;
                        Fpspread1.Columns[7].Width = 150;
                        Fpspread1.Columns[8].Width = 150;
                        Fpspread1.Columns[9].Width = 150;
                        Fpspread1.Columns[10].Width = 150;
                        Fpspread1.Columns[11].Width = 150;
                        Fpspread1.Columns[12].Width = 150;
                        Fpspread1.Columns[13].Width = 150;
                        Fpspread1.Columns[14].Width = 150;
                        Fpspread1.Columns[15].Width = 150;
                        for (int l = 0; l < ds.Tables[3].Rows.Count; l++)
                        {
                            string typevalue = "";
                            string movevalue = "";
                            string todeptsplit = "";
                            string todeptsplit1 = "";
                            string ccdeptsplit = "";
                            string ccdeptsplit1 = "";
                            string toindisplit = "";
                            string toindisplit1 = "";
                            string ccindisplit = "";
                            string ccindisplit1 = "";
                            string department_to = "";
                            string department_cc = "";
                            string staff_to = "";
                            string staff_cc = "";
                            string priorityvalue = "";
                            string modevalue = "";
                            string type1 = Convert.ToString((ds.Tables[3].Rows[l]["type"]));
                            if (type1 == "False")
                            {
                                typevalue = Convert.ToString("IN");
                            }
                            if (type1 == "True")
                            {
                                typevalue = Convert.ToString("OUT");
                            }
                            string todept = ds.Tables[3].Rows[l]["ToDeptCode"].ToString();
                            string ccdept = ds.Tables[3].Rows[l]["ToCCDeptCode"].ToString();
                            string toindi = ds.Tables[3].Rows[l]["individual_code"].ToString();
                            string ccindi = ds.Tables[3].Rows[l]["ccindividual_code"].ToString();
                            string moveto = ds.Tables[3].Rows[l]["MoveTo"].ToString();
                            if (moveto == "1")
                            {
                                movevalue = "Department";
                                if (todept.Trim() == "0" || todept.Trim() == "")
                                {
                                    department_to = "";
                                }
                                else
                                {
                                    string[] split = todept.Split(',');
                                    if (split.Length == 1)
                                    {
                                        department_to = getdepartment(todept);
                                    }
                                    else
                                    {
                                        todeptsplit = getdepartment(split[0]);
                                        todeptsplit1 = getdepartment(split[1]);
                                        department_to = todeptsplit + "," + todeptsplit1;
                                    }
                                }
                                if (ccdept.Trim() == "0" || ccdept.Trim() == "")
                                {
                                    department_cc = "";
                                }
                                else
                                {
                                    string[] split1 = ccdept.Split(',');
                                    if (split1.Length == 1)
                                    {
                                        department_cc = getdepartment(ccdept);
                                    }
                                    else
                                    {
                                        ccdeptsplit = getdepartment(split1[0]);
                                        ccdeptsplit1 = getdepartment(split1[1]);
                                        department_cc = ccdeptsplit + "," + ccdeptsplit1;
                                    }
                                }
                            }
                            if (moveto == "2")
                            {
                                movevalue = "Individual";
                                if (toindi.Trim() == "0" || toindi.Trim() == "")
                                {
                                    staff_to = "";
                                }
                                else
                                {
                                    string[] split = toindi.Split(',');
                                    if (split.Length == 1)
                                    {
                                        staff_to = getstaffname(toindi);
                                    }
                                    else
                                    {
                                        toindisplit = getstaffname(split[0]);
                                        toindisplit1 = getstaffname(split[1]);
                                        staff_to = toindisplit + "," + toindisplit1;
                                    }
                                }
                                if (ccindi.Trim() == "0" || ccindi.Trim() == "")
                                {
                                    staff_cc = "";
                                }
                                else
                                {
                                    string[] split1 = ccindi.Split(',');
                                    if (split1.Length == 1)
                                    {
                                        staff_cc = getstaffname(ccindi);
                                    }
                                    else
                                    {
                                        ccindisplit = getstaffname(split1[0]);
                                        ccindisplit1 = getstaffname(split1[1]);
                                        staff_cc = ccindisplit + "," + ccindisplit1;
                                    }
                                }
                            }
                            if (moveto == "3")
                            {
                                movevalue = "Department and Individual";
                                if (todept.Trim() == "0" || todept.Trim() == "")
                                {
                                    department_to = "";
                                }
                                else
                                {
                                    string[] split = todept.Split(',');
                                    if (split.Length == 1)
                                    {
                                        department_to = getdepartment(todept);
                                    }
                                    else
                                    {
                                        todeptsplit = getdepartment(split[0]);
                                        todeptsplit1 = getdepartment(split[1]);
                                        department_to = todeptsplit + "," + todeptsplit1;
                                    }
                                }
                                if (ccdept.Trim() == "0" || ccdept.Trim() == "")
                                {
                                    department_cc = "";
                                }
                                else
                                {
                                    string[] split1 = ccdept.Split(',');
                                    if (split1.Length == 1)
                                    {
                                        department_cc = getdepartment(ccdept);
                                    }
                                    else
                                    {
                                        ccdeptsplit = getdepartment(split1[0]);
                                        ccdeptsplit1 = getdepartment(split1[1]);
                                        department_cc = ccdeptsplit + "," + ccdeptsplit1;
                                    }
                                }
                                if (toindi.Trim() == "")
                                {
                                    staff_to = "";
                                }
                                else
                                {
                                    string[] split2 = toindi.Split(',');
                                    if (split2.Length == 1)
                                    {
                                        staff_to = getstaffname(toindi);
                                    }
                                    else
                                    {
                                        toindisplit = getstaffname(split2[0]);
                                        toindisplit1 = getstaffname(split2[1]);
                                        staff_to = toindisplit + "," + toindisplit1;
                                    }
                                }
                                if (ccindi.Trim() == "")
                                {
                                    staff_cc = "";
                                }
                                else
                                {
                                    string[] split3 = ccindi.Split(',');
                                    if (split3.Length == 1)
                                    {
                                        staff_cc = getstaffname(ccindi);
                                    }
                                    else
                                    {
                                        ccindisplit = getstaffname(split3[0]);
                                        ccindisplit1 = getstaffname(split3[1]);
                                        staff_cc = ccindisplit + "," + ccindisplit1;
                                    }
                                }
                            }
                            string priority = ds.Tables[3].Rows[l]["Priority"].ToString();
                            if (priority.Trim() == "0")
                            {
                                priorityvalue = "";
                            }
                            else
                            {
                                priorityvalue = gettext(priority);
                            }
                            string mode = ds.Tables[3].Rows[l]["TapalType"].ToString();
                            if (mode.Trim() == "0")
                            {
                                modevalue = "";
                            }
                            else
                            {
                                modevalue = gettext1(mode);
                            }
                            DataView dv = new DataView();
                            string getappno = d2.GetFunction("select FromName  from TapalInward  where FromName='" + Convert.ToString(ds.Tables[3].Rows[l]["FromName"]) + "'");
                            string date = Convert.ToString(ds.Tables[3].Rows[l]["TapalInwardDate"]);
                            string tapalpk = Convert.ToString(ds.Tables[3].Rows[l]["TapalMovementsID"]);
                            string[] splitdate = date.Split('/');
                            //  DateTime dnew = Convert.ToDateTime(splitdate[1] + "/" + splitdate[0] + "/" + splitdate[2]);
                            string dnew = splitdate[0] + "/" + splitdate[1] + "/" + splitdate[2];
                            if (ds.Tables[10].Rows.Count > 0)
                            {
                                ds.Tables[10].DefaultView.RowFilter = "MemCode='" + getappno + "' and TapalInwardFk='" + tapalpk + "' and date='" + dnew + "'";
                                dv = ds.Tables[10].DefaultView;
                                {
                                    if (dv.Count > 0)
                                    {
                                        string imagetext = Convert.ToString(dv[0]["filename"]);
                                        Fpspread1.Sheets[0].RowCount++;
                                        Fpspread1.ActiveSheetView.Cells[Fpspread1.Sheets[0].RowCount - 1, 1].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Text = imagetext.ToString();
                                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Tag = Convert.ToString(dv[0]["fileid"]);
                                    }
                                    else
                                    {
                                        Fpspread1.Sheets[0].RowCount++;
                                    }
                                }
                            }
                            else
                            {
                                Fpspread1.Sheets[0].RowCount++;
                            }
                            string View = Convert.ToString(ds.Tables[3].Rows[l]["ViewStatus"]);
                            string paytype = Convert.ToString(ds.Tables[3].Rows[l]["PaymentType"]);
                            string pay = "";
                            if (paytype == "0")
                            {
                                pay = "Cheque";
                            }
                            else if (paytype == "1")
                            {
                                pay = "DD";
                            }
                            else
                            {
                                pay = "";
                            }
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(l + 1);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(ds.Tables[3].Rows[l]["FromName"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Text = Convert.ToString(ds.Tables[3].Rows[l]["TapalSubject"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Text = Convert.ToString(movevalue);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Text = Convert.ToString(department_to);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Text = Convert.ToString(department_cc);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Text = Convert.ToString(staff_to);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Font.Name = "Book Antiqua";
                            // Fpspread1.Sheets[0].Cells[i, 6].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Text = Convert.ToString(staff_cc);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Text = Convert.ToString(ds.Tables[3].Rows[l]["RefNo"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Text = Convert.ToString(priorityvalue);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Text = Convert.ToString(modevalue);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Text = Convert.ToString(typevalue);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Text = pay;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Text = Convert.ToString(ds.Tables[3].Rows[l]["DDDate"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Text = Convert.ToString(ds.Tables[3].Rows[l]["Paymentamount"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Font.Size = FontUnit.Medium;
                            // Fpspread1.Sheets[0].SpanModel.Add(Fpspread1.Sheets[0].RowCount - 1, 11, 1, 2);
                            if (View == "True")
                            {
                                Fpspread1.Sheets[0].Rows[Fpspread1.Sheets[0].RowCount - 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                            }
                        }
                    }
                    if (txt_indiv.Text != "")
                    {
                        Fpspread1.Sheets[0].RowCount += 1;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Text = "S.No";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Text = "View";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Text = "Name";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Text = "Subject";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Text = "Move To";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Text = "To Department";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Text = "CC Department";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Text = "To Individual";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Text = "CC Individual";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Text = "Reference No";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Text = "Document Priority";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Text = "Delivery Mode";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Text = "Type";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Text = "Payement Type";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[13].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Text = "Payement Date";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[14].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Text = "Payement Amount";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[15].Width = 150;
                        Fpspread1.Columns[5].Width = 150;
                        Fpspread1.Columns[6].Width = 150;
                        Fpspread1.Columns[7].Width = 150;
                        Fpspread1.Columns[8].Width = 150;
                        Fpspread1.Columns[9].Width = 150;
                        Fpspread1.Columns[10].Width = 150;
                        Fpspread1.Columns[11].Width = 150;
                        Fpspread1.Columns[1].Width = 150;
                        Fpspread1.Columns[2].Width = 150;
                        Fpspread1.Columns[3].Width = 150;
                        Fpspread1.Columns[4].Width = 150;
                        for (int m = 0; m < ds.Tables[4].Rows.Count; m++)
                        {
                            string typevalue = "";
                            string movevalue = "";
                            string todeptsplit = "";
                            string todeptsplit1 = "";
                            string ccdeptsplit = "";
                            string ccdeptsplit1 = "";
                            string toindisplit = "";
                            string toindisplit1 = "";
                            string ccindisplit = "";
                            string ccindisplit1 = "";
                            string department_to = "";
                            string department_cc = "";
                            string staff_to = "";
                            string staff_cc = "";
                            string priorityvalue = "";
                            string modevalue = "";
                            string type1 = Convert.ToString((ds.Tables[4].Rows[m]["type"]));
                            if (type1 == "False")
                            {
                                typevalue = Convert.ToString("IN");
                            }
                            if (type1 == "True")
                            {
                                typevalue = Convert.ToString("OUT");
                            }
                            string todept = ds.Tables[4].Rows[m]["ToDeptCode"].ToString();
                            string ccdept = ds.Tables[4].Rows[m]["ToCCDeptCode"].ToString();
                            string toindi = ds.Tables[4].Rows[m]["individual_code"].ToString();
                            string ccindi = ds.Tables[4].Rows[m]["ccindividual_code"].ToString();
                            string moveto = ds.Tables[4].Rows[m]["MoveTo"].ToString();
                            if (moveto == "1")
                            {
                                movevalue = "Department";
                                if (todept.Trim() == "0" || todept.Trim() == "")
                                {
                                    department_to = "";
                                }
                                else
                                {
                                    string[] split = todept.Split(',');
                                    if (split.Length == 1)
                                    {
                                        department_to = getdepartment(todept);
                                    }
                                    else
                                    {
                                        todeptsplit = getdepartment(split[0]);
                                        todeptsplit1 = getdepartment(split[1]);
                                        department_to = todeptsplit + "," + todeptsplit1;
                                    }
                                }
                                if (ccdept.Trim() == "0" || ccdept.Trim() == "")
                                {
                                    department_cc = "";
                                }
                                else
                                {
                                    string[] split1 = ccdept.Split(',');
                                    if (split1.Length == 1)
                                    {
                                        department_cc = getdepartment(ccdept);
                                    }
                                    else
                                    {
                                        ccdeptsplit = getdepartment(split1[0]);
                                        ccdeptsplit1 = getdepartment(split1[1]);
                                        department_cc = ccdeptsplit + "," + ccdeptsplit1;
                                    }
                                }
                            }
                            if (moveto == "2")
                            {
                                movevalue = "Individual";
                                if (toindi.Trim() == "0" || toindi.Trim() == "")
                                {
                                    staff_to = "";
                                }
                                else
                                {
                                    string[] split = toindi.Split(',');
                                    if (split.Length == 1)
                                    {
                                        staff_to = getstaffname(toindi);
                                    }
                                    else
                                    {
                                        toindisplit = getstaffname(split[0]);
                                        toindisplit1 = getstaffname(split[1]);
                                        staff_to = toindisplit + "," + toindisplit1;
                                    }
                                }
                                if (ccindi.Trim() == "0" || ccindi.Trim() == "")
                                {
                                    staff_cc = "";
                                }
                                else
                                {
                                    string[] split1 = ccindi.Split(',');
                                    if (split1.Length == 1)
                                    {
                                        staff_cc = getstaffname(ccindi);
                                    }
                                    else
                                    {
                                        ccindisplit = getstaffname(split1[0]);
                                        ccindisplit1 = getstaffname(split1[1]);
                                        staff_cc = ccindisplit + "," + ccindisplit1;
                                    }
                                }
                            }
                            if (moveto == "3")
                            {
                                movevalue = "Department and Individual";
                                if (todept.Trim() == "0" || todept.Trim() == "")
                                {
                                    department_to = "";
                                }
                                else
                                {
                                    string[] split = todept.Split(',');
                                    if (split.Length == 1)
                                    {
                                        department_to = getdepartment(todept);
                                    }
                                    else
                                    {
                                        todeptsplit = getdepartment(split[0]);
                                        todeptsplit1 = getdepartment(split[1]);
                                        department_to = todeptsplit + "," + todeptsplit1;
                                    }
                                }
                                if (ccdept.Trim() == "0" || ccdept.Trim() == "")
                                {
                                    department_cc = "";
                                }
                                else
                                {
                                    string[] split1 = ccdept.Split(',');
                                    if (split1.Length == 1)
                                    {
                                        department_cc = getdepartment(ccdept);
                                    }
                                    else
                                    {
                                        ccdeptsplit = getdepartment(split1[0]);
                                        ccdeptsplit1 = getdepartment(split1[1]);
                                        department_cc = ccdeptsplit + "," + ccdeptsplit1;
                                    }
                                }
                                if (toindi.Trim() == "")
                                {
                                    staff_to = "";
                                }
                                else
                                {
                                    string[] split2 = toindi.Split(',');
                                    if (split2.Length == 1)
                                    {
                                        staff_to = getstaffname(toindi);
                                    }
                                    else
                                    {
                                        toindisplit = getstaffname(split2[0]);
                                        toindisplit1 = getstaffname(split2[1]);
                                        staff_to = toindisplit + "," + toindisplit1;
                                    }
                                }
                                if (ccindi.Trim() == "")
                                {
                                    staff_cc = "";
                                }
                                else
                                {
                                    string[] split3 = ccindi.Split(',');
                                    if (split3.Length == 1)
                                    {
                                        staff_cc = getstaffname(ccindi);
                                    }
                                    else
                                    {
                                        ccindisplit = getstaffname(split3[0]);
                                        ccindisplit1 = getstaffname(split3[1]);
                                        staff_cc = ccindisplit + "," + ccindisplit1;
                                    }
                                }
                            }
                            string priority = ds.Tables[4].Rows[m]["Priority"].ToString();
                            if (priority.Trim() == "0")
                            {
                                priorityvalue = "";
                            }
                            else
                            {
                                priorityvalue = gettext(priority);
                            }
                            string mode = ds.Tables[4].Rows[m]["TapalType"].ToString();
                            if (mode.Trim() == "0")
                            {
                                modevalue = "";
                            }
                            else
                            {
                                modevalue = gettext1(mode);
                            }
                            DataView dv = new DataView();
                            string getappno = d2.GetFunction("select FromName  from TapalInward  where FromName='" + Convert.ToString(ds.Tables[4].Rows[m]["FromName"]) + "'");
                            string date = Convert.ToString(ds.Tables[4].Rows[m]["TapalInwardDate"]);
                            string tapalpk = Convert.ToString(ds.Tables[4].Rows[m]["TapalMovementsID"]);
                            string[] splitdate = date.Split('/');
                            string dnew = splitdate[0] + "/" + splitdate[1] + "/" + splitdate[2];
                            if (ds.Tables[11].Rows.Count > 0)
                            {
                                ds.Tables[11].DefaultView.RowFilter = "MemCode='" + getappno + "' and TapalInwardFk='" + tapalpk + "' and date='" + dnew + "'";
                                dv = ds.Tables[11].DefaultView;
                                {
                                    if (dv.Count > 0)
                                    {
                                        string imagetext = Convert.ToString(dv[0]["filename"]);
                                        Fpspread1.Sheets[0].RowCount++;
                                        Fpspread1.ActiveSheetView.Cells[Fpspread1.Sheets[0].RowCount - 1, 1].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Text = imagetext.ToString();
                                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Tag = Convert.ToString(dv[0]["fileid"]);
                                    }
                                    else
                                    {
                                        Fpspread1.Sheets[0].RowCount++;
                                    }
                                }
                            }
                            else
                            {
                                Fpspread1.Sheets[0].RowCount++;
                            }
                            string View = Convert.ToString(ds.Tables[4].Rows[m]["ViewStatus"]);
                            string paytype = Convert.ToString(ds.Tables[4].Rows[m]["PaymentType"]);
                            string pay = "";
                            if (paytype == "0")
                            {
                                pay = "Cheque";
                            }
                            else if (paytype == "1")
                            {
                                pay = "DD";
                            }
                            else
                            {
                                pay = "";
                            }
                            // Fpspread1.Sheets[0].RowCount++;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(m + 1);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(ds.Tables[4].Rows[m]["FromName"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Text = Convert.ToString(ds.Tables[4].Rows[m]["TapalSubject"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Text = Convert.ToString(movevalue);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Text = Convert.ToString(department_to);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Text = Convert.ToString(department_cc);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Text = Convert.ToString(staff_to);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Text = Convert.ToString(staff_cc);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Text = Convert.ToString(ds.Tables[4].Rows[m]["RefNo"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Text = Convert.ToString(priorityvalue);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Text = Convert.ToString(modevalue);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Text = Convert.ToString(typevalue);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Text = pay;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Text = Convert.ToString(ds.Tables[4].Rows[m]["DDDate"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Text = Convert.ToString(ds.Tables[4].Rows[m]["Paymentamount"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Font.Size = FontUnit.Medium;
                            if (View == "True")
                            {
                                Fpspread1.Sheets[0].Rows[Fpspread1.Sheets[0].RowCount - 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                            }
                        }
                    }
                    if (txt_magaz.Text != "")
                    {
                        Fpspread1.Sheets[0].RowCount += 1;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 16].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Text = "S.No";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Text = "View";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Text = "Magazine Name";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Text = "Mazine Type";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Text = "Subject";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Text = "Move To";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Text = "To Department";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Text = "CC Department";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Text = "To Individual";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Text = "CC Individual";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Text = "Reference No";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Text = "Document Priority";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Text = "Delivery Mode";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Text = "Type";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Text = "Payement Type";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[13].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Text = "Payement Date";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[14].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 16].Text = "Payement Amount";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 16].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 16].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[15].Width = 150;
                        Fpspread1.Columns[5].Width = 150;
                        Fpspread1.Columns[6].Width = 150;
                        Fpspread1.Columns[7].Width = 150;
                        Fpspread1.Columns[8].Width = 150;
                        Fpspread1.Columns[9].Width = 150;
                        Fpspread1.Columns[10].Width = 150;
                        Fpspread1.Columns[11].Width = 150;
                        Fpspread1.Columns[1].Width = 150;
                        Fpspread1.Columns[2].Width = 150;
                        Fpspread1.Columns[3].Width = 150;
                        Fpspread1.Columns[4].Width = 150;
                        for (int n = 0; n < ds.Tables[5].Rows.Count; n++)
                        {
                            string typevalue = "";
                            string movevalue = "";
                            string todeptsplit = "";
                            string todeptsplit1 = "";
                            string ccdeptsplit = "";
                            string ccdeptsplit1 = "";
                            string toindisplit = "";
                            string toindisplit1 = "";
                            string ccindisplit = "";
                            string ccindisplit1 = "";
                            string department_to = "";
                            string department_cc = "";
                            string staff_to = "";
                            string staff_cc = "";
                            string priorityvalue = "";
                            string modevalue = "";
                            string type1 = Convert.ToString((ds.Tables[5].Rows[n]["type"]));
                            if (type1 == "False")
                            {
                                typevalue = Convert.ToString("IN");
                            }
                            if (type1 == "True")
                            {
                                typevalue = Convert.ToString("OUT");
                            }
                            string todept = ds.Tables[5].Rows[n]["ToDeptCode"].ToString();
                            string ccdept = ds.Tables[5].Rows[n]["ToCCDeptCode"].ToString();
                            string toindi = ds.Tables[5].Rows[n]["individual_code"].ToString();
                            string ccindi = ds.Tables[5].Rows[n]["ccindividual_code"].ToString();
                            string moveto = ds.Tables[5].Rows[n]["MoveTo"].ToString();
                            if (moveto == "1")
                            {
                                movevalue = "Department";
                                if (todept.Trim() == "0" || todept.Trim() == "")
                                {
                                    department_to = "";
                                }
                                else
                                {
                                    string[] split = todept.Split(',');
                                    if (split.Length == 1)
                                    {
                                        department_to = getdepartment(todept);
                                    }
                                    else
                                    {
                                        todeptsplit = getdepartment(split[0]);
                                        todeptsplit1 = getdepartment(split[1]);
                                        department_to = todeptsplit + "," + todeptsplit1;
                                    }
                                }
                                if (ccdept.Trim() == "0" || ccdept.Trim() == "")
                                {
                                    department_cc = "";
                                }
                                else
                                {
                                    string[] split1 = ccdept.Split(',');
                                    if (split1.Length == 1)
                                    {
                                        department_cc = getdepartment(ccdept);
                                    }
                                    else
                                    {
                                        ccdeptsplit = getdepartment(split1[0]);
                                        ccdeptsplit1 = getdepartment(split1[1]);
                                        department_cc = ccdeptsplit + "," + ccdeptsplit1;
                                    }
                                }
                            }
                            if (moveto == "2")
                            {
                                movevalue = "Individual";
                                if (toindi.Trim() == "0" || toindi.Trim() == "")
                                {
                                    staff_to = "";
                                }
                                else
                                {
                                    string[] split = toindi.Split(',');
                                    if (split.Length == 1)
                                    {
                                        staff_to = getstaffname(toindi);
                                    }
                                    else
                                    {
                                        toindisplit = getstaffname(split[0]);
                                        toindisplit1 = getstaffname(split[1]);
                                        staff_to = toindisplit + "," + toindisplit1;
                                    }
                                }
                                if (ccindi.Trim() == "0" || ccindi.Trim() == "")
                                {
                                    staff_cc = "";
                                }
                                else
                                {
                                    string[] split1 = ccindi.Split(',');
                                    if (split1.Length == 1)
                                    {
                                        staff_cc = getstaffname(ccindi);
                                    }
                                    else
                                    {
                                        ccindisplit = getstaffname(split1[0]);
                                        ccindisplit1 = getstaffname(split1[1]);
                                        staff_cc = ccindisplit + "," + ccindisplit1;
                                    }
                                }
                            }
                            if (moveto == "3")
                            {
                                movevalue = "Department and Individual";
                                if (todept.Trim() == "0" || todept.Trim() == "")
                                {
                                    department_to = "";
                                }
                                else
                                {
                                    string[] split = todept.Split(',');
                                    if (split.Length == 1)
                                    {
                                        department_to = getdepartment(todept);
                                    }
                                    else
                                    {
                                        todeptsplit = getdepartment(split[0]);
                                        todeptsplit1 = getdepartment(split[1]);
                                        department_to = todeptsplit + "," + todeptsplit1;
                                    }
                                }
                                if (ccdept.Trim() == "0" || ccdept.Trim() == "")
                                {
                                    department_cc = "";
                                }
                                else
                                {
                                    string[] split1 = ccdept.Split(',');
                                    if (split1.Length == 1)
                                    {
                                        department_cc = getdepartment(ccdept);
                                    }
                                    else
                                    {
                                        ccdeptsplit = getdepartment(split1[0]);
                                        ccdeptsplit1 = getdepartment(split1[1]);
                                        department_cc = ccdeptsplit + "," + ccdeptsplit1;
                                    }
                                }
                                if (toindi.Trim() == "")
                                {
                                    staff_to = "";
                                }
                                else
                                {
                                    string[] split2 = toindi.Split(',');
                                    if (split2.Length == 1)
                                    {
                                        staff_to = getstaffname(toindi);
                                    }
                                    else
                                    {
                                        toindisplit = getstaffname(split2[0]);
                                        toindisplit1 = getstaffname(split2[1]);
                                        staff_to = toindisplit + "," + toindisplit1;
                                    }
                                }
                                if (ccindi.Trim() == "")
                                {
                                    staff_cc = "";
                                }
                                else
                                {
                                    string[] split3 = ccindi.Split(',');
                                    if (split3.Length == 1)
                                    {
                                        staff_cc = getstaffname(ccindi);
                                    }
                                    else
                                    {
                                        ccindisplit = getstaffname(split3[0]);
                                        ccindisplit1 = getstaffname(split3[1]);
                                        staff_cc = ccindisplit + "," + ccindisplit1;
                                    }
                                }
                            }
                            string priority = ds.Tables[5].Rows[n]["Priority"].ToString();
                            if (priority.Trim() == "0")
                            {
                                priorityvalue = "";
                            }
                            else
                            {
                                priorityvalue = gettext(priority);
                            }
                            string mode = ds.Tables[5].Rows[n]["TapalType"].ToString();
                            if (mode.Trim() == "0")
                            {
                                modevalue = "";
                            }
                            else
                            {
                                modevalue = gettext1(mode);
                            }
                            DataView dv = new DataView();
                            string getappno = d2.GetFunction("select MagazineName  from TapalInward  where MagazineName='" + Convert.ToString(ds.Tables[5].Rows[n]["MagazineName"]) + "'");
                            string date = Convert.ToString(ds.Tables[5].Rows[n]["TapalInwardDate"]);
                            string tapalpk = Convert.ToString(ds.Tables[5].Rows[n]["TapalMovementsID"]);
                            string[] splitdate = date.Split('/');
                            string dnew = splitdate[0] + "/" + splitdate[1] + "/" + splitdate[2];
                            if (ds.Tables[12].Rows.Count > 0)
                            {
                                ds.Tables[12].DefaultView.RowFilter = "MemCode='" + getappno + "' and TapalInwardFk='" + tapalpk + "' and date='" + dnew + "'";
                                dv = ds.Tables[12].DefaultView;
                                {
                                    if (dv.Count > 0)
                                    {
                                        string imagetext = Convert.ToString(dv[0]["filename"]);
                                        Fpspread1.Sheets[0].RowCount++;
                                        Fpspread1.ActiveSheetView.Cells[Fpspread1.Sheets[0].RowCount - 1, 1].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Text = imagetext.ToString();
                                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Tag = Convert.ToString(dv[0]["fileid"]);
                                    }
                                    else
                                    {
                                        Fpspread1.Sheets[0].RowCount++;
                                    }
                                }
                            }
                            else
                            {
                                Fpspread1.Sheets[0].RowCount++;
                            }
                            string View = Convert.ToString(ds.Tables[5].Rows[n]["ViewStatus"]);
                            string paytype = Convert.ToString(ds.Tables[5].Rows[n]["PaymentType"]);
                            string pay = "";
                            if (paytype == "0")
                            {
                                pay = "Cheque";
                            }
                            else if (paytype == "1")
                            {
                                pay = "DD";
                            }
                            else
                            {
                                pay = "";
                            }
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(n + 1);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(ds.Tables[5].Rows[n]["MagazineName"]);
                            //  Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 1].Tag = Convert.ToString(ds.Tables[0].Rows[i]["Roll_No"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Text = Convert.ToString(ds.Tables[5].Rows[n]["MagazineType"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Text = Convert.ToString(ds.Tables[5].Rows[n]["TapalSubject"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Text = Convert.ToString(movevalue);
                            // Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(ds.Tables[0].Rows[i]["MoveTo"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Text = Convert.ToString(department_to);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Text = Convert.ToString(department_cc);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Text = Convert.ToString(staff_to);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Text = Convert.ToString(staff_cc);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Text = Convert.ToString(ds.Tables[5].Rows[n]["RefNo"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Text = Convert.ToString(priorityvalue);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Text = Convert.ToString(modevalue);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Text = Convert.ToString(typevalue);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Text = pay;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Text = Convert.ToString(ds.Tables[5].Rows[n]["DDDate"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 16].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 16].Text = Convert.ToString(ds.Tables[5].Rows[n]["Paymentamount"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 16].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 16].Font.Size = FontUnit.Medium;
                            if (View == "True")
                            {
                                Fpspread1.Sheets[0].Rows[Fpspread1.Sheets[0].RowCount - 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                            }
                        }
                    }
                    if (txt_othr.Text != "")
                    {
                        Fpspread1.Sheets[0].RowCount += 1;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Text = "S.No";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Text = "View";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Text = "Name";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Text = "Subject";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Text = "Move To";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Text = "To Department";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Text = "CC Department";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Text = "To Individual";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Text = "CC Individual";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Text = "Reference No";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Text = "Document Priority";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Text = "Delivery Mode";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Text = "Type";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Text = "Payement Type";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[13].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Text = "Payement Date";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[14].Width = 150;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Text = "Payement Amount";
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Font.Bold = true;
                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread1.Columns[15].Width = 150;
                        Fpspread1.Columns[5].Width = 150;
                        Fpspread1.Columns[6].Width = 150;
                        Fpspread1.Columns[7].Width = 150;
                        Fpspread1.Columns[8].Width = 150;
                        Fpspread1.Columns[9].Width = 150;
                        Fpspread1.Columns[10].Width = 150;
                        Fpspread1.Columns[11].Width = 150;
                        Fpspread1.Columns[1].Width = 150;
                        Fpspread1.Columns[2].Width = 150;
                        Fpspread1.Columns[3].Width = 150;
                        Fpspread1.Columns[4].Width = 150;
                        for (int s = 0; s < ds.Tables[6].Rows.Count; s++)
                        {
                            string typevalue = "";
                            string movevalue = "";
                            string todeptsplit = "";
                            string todeptsplit1 = "";
                            string ccdeptsplit = "";
                            string ccdeptsplit1 = "";
                            string toindisplit = "";
                            string toindisplit1 = "";
                            string ccindisplit = "";
                            string ccindisplit1 = "";
                            string department_to = "";
                            string department_cc = "";
                            string staff_to = "";
                            string staff_cc = "";
                            string priorityvalue = "";
                            string modevalue = "";
                            string type1 = Convert.ToString((ds.Tables[6].Rows[s]["type"]));
                            if (type1 == "False")
                            {
                                typevalue = Convert.ToString("IN");
                            }
                            if (type1 == "True")
                            {
                                typevalue = Convert.ToString("OUT");
                            }
                            string todept = ds.Tables[6].Rows[s]["ToDeptCode"].ToString();
                            string ccdept = ds.Tables[6].Rows[s]["ToCCDeptCode"].ToString();
                            string toindi = ds.Tables[6].Rows[s]["individual_code"].ToString();
                            string ccindi = ds.Tables[6].Rows[s]["ccindividual_code"].ToString();
                            string moveto = ds.Tables[6].Rows[s]["MoveTo"].ToString();
                            if (moveto == "1")
                            {
                                movevalue = "Department";
                                if (todept.Trim() == "0" || todept.Trim() == "")
                                {
                                    department_to = "";
                                }
                                else
                                {
                                    string[] split = todept.Split(',');
                                    if (split.Length == 1)
                                    {
                                        department_to = getdepartment(todept);
                                    }
                                    else
                                    {
                                        todeptsplit = getdepartment(split[0]);
                                        todeptsplit1 = getdepartment(split[1]);
                                        department_to = todeptsplit + "," + todeptsplit1;
                                    }
                                }
                                if (ccdept.Trim() == "0" || ccdept.Trim() == "")
                                {
                                    department_cc = "";
                                }
                                else
                                {
                                    string[] split1 = ccdept.Split(',');
                                    if (split1.Length == 1)
                                    {
                                        department_cc = getdepartment(ccdept);
                                    }
                                    else
                                    {
                                        ccdeptsplit = getdepartment(split1[0]);
                                        ccdeptsplit1 = getdepartment(split1[1]);
                                        department_cc = ccdeptsplit + "," + ccdeptsplit1;
                                    }
                                }
                            }
                            if (moveto == "2")
                            {
                                movevalue = "Individual";
                                if (toindi.Trim() == "0" || toindi.Trim() == "")
                                {
                                    staff_to = "";
                                }
                                else
                                {
                                    string[] split = toindi.Split(',');
                                    if (split.Length == 1)
                                    {
                                        staff_to = getstaffname(toindi);
                                    }
                                    else
                                    {
                                        toindisplit = getstaffname(split[0]);
                                        toindisplit1 = getstaffname(split[1]);
                                        staff_to = toindisplit + "," + toindisplit1;
                                    }
                                }
                                if (ccindi.Trim() == "0" || ccindi.Trim() == "")
                                {
                                    staff_cc = "";
                                }
                                else
                                {
                                    string[] split1 = ccindi.Split(',');
                                    if (split1.Length == 1)
                                    {
                                        staff_cc = getstaffname(ccindi);
                                    }
                                    else
                                    {
                                        ccindisplit = getstaffname(split1[0]);
                                        ccindisplit1 = getstaffname(split1[1]);
                                        staff_cc = ccindisplit + "," + ccindisplit1;
                                    }
                                }
                            }
                            if (moveto == "3")
                            {
                                movevalue = "Department and Individual";
                                if (todept.Trim() == "0" || todept.Trim() == "")
                                {
                                    department_to = "";
                                }
                                else
                                {
                                    string[] split = todept.Split(',');
                                    if (split.Length == 1)
                                    {
                                        department_to = getdepartment(todept);
                                    }
                                    else
                                    {
                                        todeptsplit = getdepartment(split[0]);
                                        todeptsplit1 = getdepartment(split[1]);
                                        department_to = todeptsplit + "," + todeptsplit1;
                                    }
                                }
                                if (ccdept.Trim() == "0" || ccdept.Trim() == "")
                                {
                                    department_cc = "";
                                }
                                else
                                {
                                    string[] split1 = ccdept.Split(',');
                                    if (split1.Length == 1)
                                    {
                                        department_cc = getdepartment(ccdept);
                                    }
                                    else
                                    {
                                        ccdeptsplit = getdepartment(split1[0]);
                                        ccdeptsplit1 = getdepartment(split1[1]);
                                        department_cc = ccdeptsplit + "," + ccdeptsplit1;
                                    }
                                }
                                if (toindi.Trim() == "")
                                {
                                    staff_to = "";
                                }
                                else
                                {
                                    string[] split2 = toindi.Split(',');
                                    if (split2.Length == 1)
                                    {
                                        staff_to = getstaffname(toindi);
                                    }
                                    else
                                    {
                                        toindisplit = getstaffname(split2[0]);
                                        toindisplit1 = getstaffname(split2[1]);
                                        staff_to = toindisplit + "," + toindisplit1;
                                    }
                                }
                                if (ccindi.Trim() == "")
                                {
                                    staff_cc = "";
                                }
                                else
                                {
                                    string[] split3 = ccindi.Split(',');
                                    if (split3.Length == 1)
                                    {
                                        staff_cc = getstaffname(ccindi);
                                    }
                                    else
                                    {
                                        ccindisplit = getstaffname(split3[0]);
                                        ccindisplit1 = getstaffname(split3[1]);
                                        staff_cc = ccindisplit + "," + ccindisplit1;
                                    }
                                }
                            }
                            string priority = ds.Tables[6].Rows[s]["Priority"].ToString();
                            if (priority.Trim() == "0")
                            {
                                priorityvalue = "";
                            }
                            else
                            {
                                priorityvalue = gettext(priority);
                            }
                            string mode = ds.Tables[6].Rows[s]["TapalType"].ToString();
                            if (mode.Trim() == "0")
                            {
                                modevalue = "";
                            }
                            else
                            {
                                modevalue = gettext1(mode);
                            }
                            DataView dv = new DataView();
                            string getappno = d2.GetFunction("select FromName  from TapalInward  where FromName='" + Convert.ToString(ds.Tables[6].Rows[s]["FromName"]) + "'");
                            string date = Convert.ToString(ds.Tables[6].Rows[s]["TapalInwardDate"]);
                            string tapalpk = Convert.ToString(ds.Tables[6].Rows[s]["TapalMovementsID"]);
                            string[] splitdate = date.Split('/');
                            string dnew = splitdate[0] + "/" + splitdate[1] + "/" + splitdate[2];
                            if (ds.Tables[13].Rows.Count > 0)
                            {
                                ds.Tables[13].DefaultView.RowFilter = "MemCode='" + getappno + "' and TapalInwardFk='" + tapalpk + "' and date='" + dnew + "'";
                                dv = ds.Tables[13].DefaultView;
                                {
                                    if (dv.Count > 0)
                                    {
                                        string imagetext = Convert.ToString(dv[0]["filename"]);
                                        Fpspread1.Sheets[0].RowCount++;
                                        Fpspread1.ActiveSheetView.Cells[Fpspread1.Sheets[0].RowCount - 1, 1].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Text = imagetext.ToString();
                                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Tag = Convert.ToString(dv[0]["fileid"]);
                                    }
                                    else
                                    {
                                        Fpspread1.Sheets[0].RowCount++;
                                    }
                                }
                            }
                            else
                            {
                                Fpspread1.Sheets[0].RowCount++;
                            }
                            string View = Convert.ToString(ds.Tables[6].Rows[s]["ViewStatus"]);
                            string paytype = Convert.ToString(ds.Tables[6].Rows[s]["PaymentType"]);
                            string pay = "";
                            if (paytype == "0")
                            {
                                pay = "Cheque";
                            }
                            else if (paytype == "1")
                            {
                                pay = "DD";
                            }
                            else
                            {
                                pay = "";
                            }
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(s + 1);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(ds.Tables[6].Rows[s]["FromName"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Text = Convert.ToString(ds.Tables[6].Rows[s]["TapalSubject"]);
                            // Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - , 2].Tag = Convert.ToString(ds.Tables[0].Rows[i]["MoveTo"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Text = Convert.ToString(movevalue);
                            // Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(ds.Tables[0].Rows[i]["MoveTo"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Text = Convert.ToString(department_to);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 5].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Text = Convert.ToString(department_cc);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 6].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Text = Convert.ToString(staff_to);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 7].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Text = Convert.ToString(staff_cc);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 8].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Text = Convert.ToString(ds.Tables[6].Rows[s]["RefNo"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 9].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Text = Convert.ToString(priorityvalue);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 10].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Text = Convert.ToString(modevalue);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 11].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Text = Convert.ToString(typevalue);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 12].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Text = pay;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 13].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Text = Convert.ToString(ds.Tables[6].Rows[s]["DDDate"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 14].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].HorizontalAlign = HorizontalAlign.Left;
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Text = Convert.ToString(ds.Tables[6].Rows[s]["Paymentamount"]);
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 15].Font.Size = FontUnit.Medium;
                            if (View == "True")
                            {
                                Fpspread1.Sheets[0].Rows[Fpspread1.Sheets[0].RowCount - 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                            }
                        }
                    }
                    Fpspread1.Sheets[0].PageSize = Fpspread1.Sheets[0].RowCount;
                    Fpspread1.Width = 850;
                    Fpspread1.Height = 500;
                }
                else
                {
                    div_student.Visible = true;
                    Fpspread1.Visible = false;
                    lbl_err_stud.Visible = true;
                    lbl_err_stud.Text = "No Record Found";
                    div_report.Visible = false;
                    btn_del_stud.Visible = false;
                    div_all.Visible = false;
                    div_company.Visible = false;
                    div_individual.Visible = false;
                    div_mag.Visible = false;
                    div_others.Visible = false;
                    div_parent.Visible = false;
                    div_staff.Visible = false;
                }
            }
            else
            {
                div_student.Visible = true;
                Fpspread1.Visible = false;
                lbl_err_stud.Visible = true;
                div_report.Visible = false;
                lbl_err_stud.Text = "Invalid Search";
                btn_del_stud.Visible = false;
                div_all.Visible = false;
                div_company.Visible = false;
                div_individual.Visible = false;
                div_mag.Visible = false;
                div_others.Visible = false;
                div_parent.Visible = false;
                div_staff.Visible = false;
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void txt_fromdate_TextChanged(object sender, EventArgs e)
    {
        try
        {
            if (txt_fromdate.Text != "" && txt_todate.Text != "")
            {
                DateTime dt = new DateTime();
                DateTime dt1 = new DateTime();
                string firstdate = Convert.ToString(txt_fromdate.Text);
                string seconddate = Convert.ToString(txt_todate.Text);
                string[] split = firstdate.Split('/');
                dt = Convert.ToDateTime(split[1] + "/" + split[0] + "/" + split[2]);
                split = seconddate.Split('/');
                dt1 = Convert.ToDateTime(split[1] + "/" + split[0] + "/" + split[2]);
                TimeSpan ts = dt1 - dt;
                int days = ts.Days;
                if (dt > dt1)
                {
                    // imgdiv2.Visible = true;
                    txt_fromdate.Text = DateTime.Now.ToString("dd/MM/yyyy");
                    lbl_erroralert.Visible = false;
                }
                else
                {
                    //lbl_erroralert.Visible = true;
                    //lbl_erroralert.Text = "Enter FromDate less than or equal to the ToDate";
                }
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void txt_todate_TextChanged(object sender, EventArgs e)
    {
        try
        {
            if (txt_todate.Text != "" && txt_fromdate.Text != "")
            {
                DateTime dt = new DateTime();
                DateTime dt1 = new DateTime();
                DateTime dt2 = new DateTime();
                string firstdate = Convert.ToString(txt_fromdate.Text);
                string seconddate = Convert.ToString(txt_todate.Text);
                string[] split = firstdate.Split('/');
                dt = Convert.ToDateTime(split[1] + "/" + split[0] + "/" + split[2]);
                split = seconddate.Split('/');
                dt1 = Convert.ToDateTime(split[1] + "/" + split[0] + "/" + split[2]);
                split = date.Split('/');
                dt2 = Convert.ToDateTime(split[1] + "/" + split[0] + "/" + split[2]);
                TimeSpan ts = dt1 - dt;
                int days = ts.Days;
                if (dt2 < dt1)
                {
                    //imgdiv2.Visible = true;
                    //lbl_erroralert.Text = "Enter FromDate less than or equal to the ToDate";
                    txt_todate.Text = DateTime.Now.ToString("dd/MM/yyyy");
                }
                else
                {
                }
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void imgbtn_stud_Click(object sender, EventArgs e)
    {


        try
        {
            string linkname = "";
            bool entryflag = false;

            linkname = "Letter Inward student";
            int count = 0;
            string selcol = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + collegecode1 + "'";
            ds.Clear();
            ds = d2.select_method_wo_parameter(selcol, "Text");
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                string value = Convert.ToString(ds.Tables[0].Rows[0]["LinkValue"]);
                string[] value1 = value.Split(',');
                if (value1.Length > 0)
                {
                    for (int i = 0; i < value1.Length; i++)
                    {
                        string val = value1[i].ToString();
                        for (int k = 0; k < cblcolumnorder0.Items.Count; k++)
                        {
                            if (val == cblcolumnorder0.Items[k].Value)
                            {
                                cblcolumnorder0.Items[k].Selected = true;
                                count++;
                            }
                        }
                    }
                    if (count == cblcolumnorder0.Items.Count)
                        CheckBox_column.Checked = true;
                    else
                        CheckBox_column.Checked = false;
                }
            }
            loadcolumns_stud(sender, e);
            stud_search();//delsistudref
        }
        catch (Exception ex)
        {

        }


    }

    public void stud_search()
    {
        try
        {
            Iscompleted.Visible = false;
            Iscompleted.Checked = false;
            ViewState["staff"] = 1;
            loaddesc();
            string applid = string.Empty;
            string RequestStaffApp_No = string.Empty;
            applid = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            RequestStaffApp_No = d2.GetFunction("select ReqStaffAppNo  from RQ_RequestHierarchy where RequestType=12 and ReqAppStaffAppNo in('" + applid + "')");
            td_stud.BgColor = "#c4c4c4";
            td_staff.BgColor = "white";
            td_par.BgColor = "white";
            td_comp.BgColor = "white";
            td_indi.BgColor = "white";
            td_mag.BgColor = "white";
            td_othr.BgColor = "white";
            td_search.BgColor = "white";
            td_all.BgColor = "white";
            lbl_stud_tit.Visible = true;
            lbl_norec.Visible = false;
            Fpspread1.Sheets[0].Visible = true;
            pheaderfilter0.Visible = true;
            pcolumnorder0.Visible = true;
            //Fpspread2.Sheets[0].PageSize = Fpspread1.Sheets[0].RowCount;
            Fpspread1.Sheets[0].RowHeader.Visible = false;
            Fpspread1.CommandBar.Visible = false;
            Fpspread1.Sheets[0].AutoPostBack = false;
            Fpspread1.Sheets[0].RowCount = 0;
            Fpspread1.Sheets[0].ColumnHeader.RowCount = 1;
            Fpspread1.Sheets[0].ColumnCount = 4;
            FarPoint.Web.Spread.StyleInfo darkstyle2 = new FarPoint.Web.Spread.StyleInfo();
            darkstyle2.BackColor = ColorTranslator.FromHtml("#0CA6CA");
            darkstyle2.ForeColor = Color.Black;
            darkstyle2.HorizontalAlign = HorizontalAlign.Center;
            Fpspread1.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle2;
            string fromhr = Convert.ToString(ddl_hour.SelectedItem.Text);
            string frommm = Convert.ToString(ddl_minits.SelectedItem.Text);
            string fromday = Convert.ToString(ddl_timeformate.SelectedItem.Text);
            string tohr = Convert.ToString(ddl_endhour.SelectedItem.Text);
            string tomm = Convert.ToString(ddl_endminit.SelectedItem.Text);
            string today = Convert.ToString(ddl_endformate.SelectedItem.Text);
            string fromtime = fromhr + ":" + frommm + ":" + fromday;
            string Totime = tohr + ":" + tomm + ":" + today;
            string[] ay = txt_fromdate.Text.Split('/');
            string[] ay1 = txt_todate.Text.Split('/');
            int memtype = 1;
            DateTime dt = new DateTime();
            DateTime dt1 = new DateTime();
            dt = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
            dt1 = Convert.ToDateTime(ay1[1] + "/" + ay1[0] + "/" + ay1[2]);
            if (rdo_in.Checked == true)
            {
                tt = 0;
            }
            else
            {
                tt = 1;
            }

            string approvalstatus = string.Empty;
            if (rdo_req.Checked == true)
                approvalstatus = "0";
            if (rdo_approve.Checked == true)
                approvalstatus = "1";

            string query = "";
            string ddlpriority = Convert.ToString(ddl_stf_docpri.SelectedItem.Value);
            string actionstatus = "";
            if (cbl_status.Items.Count > 0)
                actionstatus = Convert.ToString(getCblSelectedValue(cbl_status));
            //if (actionstatus.Trim() == "")
            //    actionstatus = "0";

            //string query = "";
            //string actionstatus = "";
            //if (cbl_status.Items.Count > 0)
            //    actionstatus = Convert.ToString(getCblSelectedValue(cbl_status));
            //if (actionstatus.Trim() == "")
            //    actionstatus = "0";
            // ViewStatus
            if (Session["Staff_Code"] != null && Session["Staff_Code"] != "")
            {
                //query = "select ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus,r.Stud_Name,r.Roll_No,MoveTo,t.App_No,MemType,ViewStatus,ActionDesc,ActionStatus,ToDeptCode,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,DDNo,Paymentamount,BankCode,BranchName,TapalMovementsID,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,individual_code,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,ccindividual_code,RefNo,TapalSubject,type,Priority,TapalType from TapalInward t,Registration r where T.App_No =r.App_No and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and TapalInwardTime between '" + fromtime + "' and '" + Totime + "'  and MemType ='" + memtype + "' and type='" + tt + "' and ((individual_code like '" + Session["Staff_Code"].ToString() + "%' or individual_code like '%" + Session["Staff_Code"].ToString() + ",') or (ccindividual_code like '" + Session["Staff_Code"].ToString() + "%' or ccindividual_code like '%" + Session["Staff_Code"].ToString() + ",'))  and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') order by TapalInwardDate";
                //query = query + " select * from lettertbl where Memtype='1'";
                if (Convert.ToString(RequestStaffApp_No) != "" && Convert.ToString(RequestStaffApp_No) != "0")//delsi2202
                {
                    query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus,r.Stud_Name,r.Roll_No,MoveTo,t.App_No,MemType,ViewStatus,TapalCode,ActionDesc,fd.ActionStatus,ForwardPerson,agreestatus,finalcompletioncheck,ToDeptCode,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,DDNo,Paymentamount,BankCode,BranchName,TapalMovementsID,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,individual_code,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,ccindividual_code,RefNo,TapalSubject,type,Priority,TapalType from RQ_RequestHierarchy rh, TapalInward t left join letterForwardDetails fd on fd.tapalmovementid=t.tapalmovementsid,Registration r where rh.ReqStaffAppNo=t.ToDeptCode and T.App_No =r.App_No and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and MemType ='" + memtype + "' and type='" + tt + "'  and rh.ReqAppStaffAppNo='" + applid + "' and rh.ReqStaffAppNo=t.ToDeptCode and rh.RequestType='12'and isnull(t.ReqAppStatus,0)=" + approvalstatus + " and t.ToDeptCode=rh.ReqStaffAppNo";
                    //modified by kowshi09.05.2018
                    if (rdo_req.Checked == true)
                    {
                        query += "  and isnull(t.ReqApproveStage,0)=isnull(rh.ReqApproveStage,0)-1";

                    }
                    if (ddlpriority != "0")
                    {
                        query += " and Priority ='" + ddlpriority + "'";

                    }

                    if (actionstatus != "")//&& actionstatus != "0"
                    {
                        query += " and ISNULL(fd.ActionStatus,0) in('" + actionstatus + "')";
                    }
                    else
                    {
                        query += " and ISNULL(fd.ActionStatus,0) in('0','1')";
                    }
                    if (cb_finallyCom.Checked == true)
                    {
                        query += " and finalcompletioncheck='1'";
                    }
                    query = query + " order by TapalInwardDate";
                    query = query + " select * from lettertbl where Memtype='" + memtype + "'";
                    if (approvalstatus == "1")
                    {
                        txt_viewdetails3.Visible = false;
                        btn_add1.Visible = false;
                        btn_ad.Visible = false;

                        ddl_viewdetails1.Visible = false;
                        btn_min.Visible = false;
                        ddl_viewdetails2.Visible = false;

                        btn_min1.Visible = false;
                        lbl_doc_state.Visible = false;
                        lbl_remarks.Visible = false;
                        lbl_remrks.Visible = false;
                        txt_viewdetails4.Visible = false;
                        txt_receiveperson.Visible = false;
                        btn_question.Visible = false;
                        btn_received_question.Visible = false;
                        lbl_receiveperson.Visible = false;
                        lbl_persnname.Visible = false;

                        lbl_popviewdate.Visible = false;
                        txt_popviewdate.Visible = false;
                        lbl_view_time.Visible = false;
                        txt_viewtime.Visible = false;

                        btn_popexit.Visible = false;
                        btn_pop1go.Visible = false;
                        // btn_pop1go.Text = "Approve";

                    }
                    if (approvalstatus == "0")
                    {

                        txt_viewdetails4.Visible = true;
                        txt_receiveperson.Visible = true;
                        btn_question.Visible = true;
                        btn_received_question.Visible = true;
                        lbl_receiveperson.Visible = true;
                        lbl_persnname.Visible = true;

                        btn_pop1go.Text = "Forward";

                    }

                    txt_viewdetails3.Visible = false;
                    btn_add1.Visible = false;
                    btn_ad.Visible = false;

                    ddl_viewdetails1.Visible = false;
                    btn_min.Visible = false;
                    ddl_viewdetails2.Visible = false;

                    btn_min1.Visible = false;
                    lbl_doc_state.Visible = false;
                    lbl_remarks.Visible = false;
                    lbl_remrks.Visible = false;
                }
                else
                {
                    if (approvalstatus == "1")
                    {
                        query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus,r.Stud_Name,r.Roll_No,MoveTo,t.App_No,MemType,ViewStatus,TapalCode,FromName,ActionDesc,fd.ActionStatus,ForwardPerson,agreestatus,ToDeptCode,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,DDNo,Paymentamount,t.BankCode,BranchName,TapalMovementsID,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,RefNo,TapalSubject,type,Priority,TapalType,isnull(t.ReqApproveStage,0)ReqApproveStage ,isnull(t.ReqAppStatus,0)ReqAppStatus , isnull(t.ReqApprovedStaffAppNo,0)ReqApprovedStaffAppNo from hr_privilege hr, TapalInward t, letterForwardDetails fd,Registration r where fd.tapalmovementid=t.tapalmovementsid and T.App_No =r.App_No and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and MemType ='" + memtype + "' and type='" + tt + "' and hr.dept_code=t.ToDeptCode and isnull(t.ReqAppStatus,0)=1 and fd.forwardperson in('" + staffcodesession + "')";
                        //modified by kowshi09.05.2018

                        if (ddlpriority != "0")
                        {
                            query += " and Priority ='" + ddlpriority + "'";

                        }
                        if (actionstatus != "")//&& actionstatus != "0"
                        {
                            query += " and ISNULL(fd.ActionStatus,0) in('" + actionstatus + "')";
                        }

                        else
                        {
                            query += " and ISNULL(fd.ActionStatus,0) in('0','1')";
                        }
                        query = query + " order by TapalInwardDate";
                        query = query + " select * from lettertbl where Memtype='" + memtype + "'";


                        txt_viewdetails4.Visible = false;
                        txt_receiveperson.Visible = false;
                        btn_question.Visible = false;
                        btn_received_question.Visible = false;
                        lbl_receiveperson.Visible = false;
                        lbl_persnname.Visible = false;

                    }

                }



            }
            else
            {
                query = "select ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus,r.Stud_Name,r.Roll_No,MoveTo,t.App_No,MemType,ViewStatus,TapalCode,ActionDesc,ActionStatus,ToDeptCode,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,DDNo,Paymentamount,TapalMovementsID,BankCode,BranchName,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,individual_code,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,ccindividual_code,RefNo,TapalSubject,type,Priority,TapalType from TapalInward t,Registration r where T.App_No =r.App_No and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and MemType ='" + memtype + "' and type='" + tt + "' and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') order by TapalInwardDate";
                query = query + " select * from lettertbl where Memtype='1'";
            }   //modified by kowshi09.05.2018
            // ds = d2.select_method_wo_parameter(query, "Text");
            if (query == "")
            {
                Fpspread1.Sheets[0].Visible = false;
                //div1.Visible = false;
                lbl_err_stud.Visible = true;
                lbl_err_stud.Text = "Kindly Select All List ";
                lbl_pending_studClr.Visible = false;
                lbl_pending_stud.Visible = false;
                lbl_accept_studClr.Visible = false;
                lbl_accept_stud.Visible = false;
                lbl_reject_studClr.Visible = false;
                lbl_reject_stud.Visible = false;
                div_report.Visible = false;
                btn_del_stud.Visible = false;
            }
            else
            {
                if (query != "")
                {
                    ds = d2.select_method(query, hat, "Text");
                    if (ds.Tables[0].Rows.Count == 0)
                    {
                        Fpspread1.Sheets[0].Visible = false;
                        Fpspread1.Visible = false;
                        lbl_err_stud.Visible = true;
                        lbl_err_stud.Text = "No Records Found";
                        lbl_pending_studClr.Visible = false;
                        lbl_pending_stud.Visible = false;
                        lbl_accept_studClr.Visible = false;
                        lbl_accept_stud.Visible = false;
                        lbl_reject_studClr.Visible = false;
                        lbl_reject_stud.Visible = false;
                        div_report.Visible = false;
                        pheaderfilter0.Visible = false;
                        pcolumnorder0.Visible = false;
                        btn_del_stud.Visible = false;
                    }
                    else
                    {
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            lbl_err_stud.Visible = false;
                            lbl_pending_studClr.Visible = true;
                            lbl_pending_stud.Visible = true;
                            lbl_accept_studClr.Visible = true;
                            lbl_accept_stud.Visible = true;
                            lbl_reject_studClr.Visible = true;
                            lbl_reject_stud.Visible = true;
                            for (int i = 0; i < cblcolumnorder0.Items.Count; i++)
                            {
                                if (cblcolumnorder0.Items[i].Selected == true)
                                {
                                    hat1.Add(cblcolumnorder0.Items[i].Text, cblcolumnorder0.Items[i].Value);
                                    string colvalue = cblcolumnorder0.Items[i].Text;
                                    if (ItemList_stud.Contains(colvalue) == false)
                                    {
                                        ItemList_stud.Add(cblcolumnorder0.Items[i].Text);
                                    }
                                    tborder0.Text = "";
                                    for (int j = 0; j < ItemList_stud.Count; j++)
                                    {
                                        tborder0.Text = tborder0.Text + ItemList_stud[j].ToString();
                                        tborder0.Text = tborder0.Text + "(" + (j + 1).ToString() + ")  ";
                                    }
                                }
                                cblcolumnorder0.Items[0].Enabled = false;
                            }
                            if (ItemList_stud.Count == 0)
                            {
                                for (int i = 0; i < 3; i++)
                                {
                                    cblcolumnorder.Items[i].Selected = true;
                                    hat1.Add(cblcolumnorder0.Items[i].Text, cblcolumnorder0.Items[i].Value);
                                    string colvalue = cblcolumnorder0.Items[i].Text;
                                    if (ItemList_stud.Contains(colvalue) == false)
                                    {
                                        ItemList_stud.Add(cblcolumnorder0.Items[i].Text);
                                    }
                                    tborder0.Text = "";
                                    for (int j = 0; j < ItemList_stud.Count; j++)
                                    {
                                        tborder0.Text = tborder0.Text + ItemList_stud[j].ToString();
                                        tborder0.Text = tborder0.Text + "(" + (j + 1).ToString() + ")  ";
                                    }
                                }
                            }
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;

                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Attachment";
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Sheets[0].ColumnHeader.Columns[2].Width = 200;
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 3].Text = "View Details";
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                            //Fpspread1.Columns[1].Locked = true;
                            FarPoint.Web.Spread.StyleInfo style2 = new FarPoint.Web.Spread.StyleInfo();
                            style2.Font.Size = 14;
                            style2.Font.Name = "Book Antiqua";
                            style2.Font.Bold = true;
                            style2.HorizontalAlign = HorizontalAlign.Center;
                            style2.ForeColor = Color.Black;
                            style2.BackColor = Color.AliceBlue;
                            Fpspread1.Sheets[0].PageSize = Fpspread1.Sheets[0].RowCount;
                            for (int i = 0; i < ItemList_stud.Count; i++)
                            {
                                string value1 = ItemList_stud[i].ToString();
                                int a = value1.Length;
                                Fpspread1.Sheets[0].ColumnCount++;
                                Fpspread1.Sheets[0].ColumnHeader.Cells[Fpspread1.Sheets[0].ColumnHeader.RowCount - 1, Fpspread1.Sheets[0].ColumnCount - 1].Text = ItemList_stud[i].ToString();
                                Fpspread1.Sheets[0].ColumnHeader.Cells[Fpspread1.Sheets[0].ColumnHeader.RowCount - 1, Fpspread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].ColumnHeader.Cells[Fpspread1.Sheets[0].ColumnHeader.RowCount - 1, Fpspread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                Fpspread1.Sheets[0].ColumnHeader.Cells[Fpspread1.Sheets[0].ColumnHeader.RowCount - 1, Fpspread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                            }
                            FarPoint.Web.Spread.ButtonCellType btn = new FarPoint.Web.Spread.ButtonCellType();
                            Fpspread1.Sheets[0].RowCount = 0;
                            DataView dv = new DataView();
                            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                            {
                                string color1 = Convert.ToString(ds.Tables[0].Rows[i]["ViewStatus"]);
                                string color2 = Convert.ToString(ds.Tables[0].Rows[i]["agreestatus"]);
                                string forwardper = string.Empty;
                                forwardper = Convert.ToString(ds.Tables[0].Rows[i]["ForwardPerson"]);
                                Fpspread1.Sheets[0].RowCount++;
                                count++;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Text = count.ToString();
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["TapalMovementsID"]);
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                if (color1 == "True")
                                {
                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                }

                                if (color2 == "1")
                                {
                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#7FFFD4");
                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#7FFFD4");
                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#7FFFD4");

                                }
                                if (color2 == "2")
                                {
                                    Fpspread1.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#CD5C5C");
                                    Fpspread1.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#CD5C5C");
                                    Fpspread1.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#CD5C5C");

                                }
                                FarPoint.Web.Spread.CheckBoxCellType cb = new FarPoint.Web.Spread.CheckBoxCellType();
                                cb.AutoPostBack = true;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].CellType = cb;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Tag = forwardper;//delsi 1005
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].CellType = btn;
                                btn.Text = "View";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                                string getappno = d2.GetFunction("select app_no  from Registration  where roll_No='" + Convert.ToString(ds.Tables[0].Rows[i]["Roll_No"]) + "'");
                                string date = Convert.ToString(ds.Tables[0].Rows[i]["TapalInwardDate"]);
                                string tapalpk = Convert.ToString(ds.Tables[0].Rows[i]["TapalMovementsID"]);
                                string[] splitdate = date.Split('/');
                                DateTime dnew = Convert.ToDateTime(splitdate[1] + "/" + splitdate[0] + "/" + splitdate[2]);

                                if (ds.Tables[1].Rows.Count > 0)
                                {
                                    ds.Tables[1].DefaultView.RowFilter = "fileid='" + getappno + "' and TapalInwardFk='" + tapalpk + "' and date='" + dnew.ToString("MM/dd/yyyy") + "'";
                                    dv = ds.Tables[1].DefaultView;
                                    if (dv.Count > 0)
                                    {
                                        string imgtxt = string.Empty;
                                        for (int file = 0; file < dv.Count; file++)
                                        {
                                            string imagetext = Convert.ToString(dv[file]["filename"]);
                                            if (imgtxt == "")
                                            {
                                                imgtxt = imagetext;
                                            }
                                            else
                                            {
                                                imgtxt = imgtxt + "," + imagetext;
                                            }

                                            Fpspread1.ActiveSheetView.Cells[Fpspread1.Sheets[0].RowCount - 1, 2].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Text = imgtxt.ToString();
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(dv[file]["fileid"]);
                                        }
                                    }
                                    else
                                    {
                                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Locked = true;
                                    }
                                }

                                int c = 3;
                                string typevalue = "";
                                string movevalue = "";
                                string todeptsplit = "";
                                string todeptsplit1 = "";
                                string ccdeptsplit = "";
                                string ccdeptsplit1 = "";
                                string toindisplit = "";
                                string toindisplit1 = "";
                                string ccindisplit = "";
                                string ccindisplit1 = "";
                                string department_to = "";
                                string department_cc = "";
                                string staff_to = "";
                                string staff_cc = "";
                                string priorityvalue = "";
                                string modevalue = "";
                                string action = "";
                                string document = "";
                                string res_staff = "";
                                string paymenttype = "";
                                string bankname = "";
                                string reveivedPer_Name = "";

                                if (ItemList_stud.Count > 0 && hat1.Count > 0)
                                {
                                    for (int j = 0; j < ItemList_stud.Count; j++)
                                    {
                                        string k = Convert.ToString(ItemList_stud[j].ToString());
                                        string names = Convert.ToString(hat1[k].ToString());
                                        c++;
                                        string val = ds.Tables[0].Rows[i][names].ToString();
                                        if (names == "BankCode")
                                        {
                                            if (val != "")
                                            {
                                                bankname = gettextbank(val);
                                            }
                                            else
                                            {
                                                bankname = "";
                                            }
                                        }
                                        if (names == "ActionDesc")
                                        {
                                            if (val == "" || val == "0")
                                            {
                                                document = "";
                                            }
                                            else
                                            {
                                                document = gettextpop(val);
                                            }
                                        }
                                        if (names == "ActionStatus")
                                        {
                                            if (val == "0" || val == "")
                                            {
                                                action = "Pending";
                                            }
                                            if (val == "1")
                                            {
                                                action = "Completed";
                                            }
                                        }

                                        if (names == "ForwardPerson")//delsi0801
                                        {
                                            if (val == "0" || val == "")
                                            {
                                                reveivedPer_Name = "";
                                            }
                                            else
                                            {
                                                reveivedPer_Name = getstaffname(val);
                                            }
                                        }

                                        if (names == "ResponseStaff")
                                        {
                                            if (val == "0" || val == "")
                                            {
                                                res_staff = "";
                                            }
                                            else
                                            {
                                                res_staff = getstaffname(val);
                                            }
                                        }
                                        if (names == "MoveTo")
                                        {
                                            if (val == "1")
                                            {
                                                movevalue = "Department";
                                            }
                                            if (val == "2")
                                            {
                                                movevalue = "Individual";
                                            }
                                            if (val == "3")
                                            {
                                                movevalue = "Department and Individual";
                                            }
                                        }
                                        if (names == "ToDeptCode")
                                        {
                                            if (val.Trim() == "0" || val.Trim() == "")
                                            {
                                                department_to = "";
                                            }
                                            else
                                            {
                                                string[] split = val.Split(',');
                                                if (split.Length == 1)
                                                {
                                                    department_to = getdepartment(val);
                                                }
                                                else
                                                {
                                                    todeptsplit = getdepartment(split[0]);
                                                    todeptsplit1 = getdepartment(split[1]);
                                                    department_to = todeptsplit + "," + todeptsplit1;
                                                }
                                            }
                                        }
                                        if (names == "ToCCDeptCode")
                                        {
                                            if (val.Trim() == "0" || val.Trim() == "")
                                            {
                                                department_cc = "";
                                            }
                                            else
                                            {
                                                string[] split1 = val.Split(',');
                                                if (split1.Length == 1)
                                                {
                                                    department_cc = getdepartment(val);
                                                }
                                                else
                                                {
                                                    ccdeptsplit = getdepartment(split1[0]);
                                                    ccdeptsplit1 = getdepartment(split1[1]);
                                                    department_cc = ccdeptsplit + "," + ccdeptsplit1;
                                                }
                                            }
                                        }
                                        if (names == "individual_code")
                                        {
                                            if (val.Trim() == "0" || val.Trim() == "")
                                            {
                                                staff_to = "";
                                            }
                                            else
                                            {
                                                string[] split = val.Split(',');
                                                if (split.Length == 1)
                                                {
                                                    staff_to = getstaffname(val);
                                                }
                                                else
                                                {
                                                    toindisplit = getstaffname(split[0]);
                                                    toindisplit1 = getstaffname(split[1]);
                                                    staff_to = toindisplit + "," + toindisplit1;
                                                }
                                            }
                                        }
                                        if (names == "ccindividual_code")
                                        {
                                            if (val.Trim() == "0" || val.Trim() == "")
                                            {
                                                staff_cc = "";
                                            }
                                            else
                                            {
                                                string[] split1 = val.Split(',');
                                                if (split1.Length == 1)
                                                {
                                                    staff_cc = getstaffname(val);
                                                }
                                                else
                                                {
                                                    ccindisplit = getstaffname(split1[0]);
                                                    ccindisplit1 = getstaffname(split1[1]);
                                                    staff_cc = ccindisplit + "," + ccindisplit1;
                                                }
                                            }
                                        }
                                        if (names == "Priority")
                                        {
                                            if (val.Trim() == "0")
                                            {
                                                priorityvalue = "";
                                            }
                                            else
                                            {
                                                priorityvalue = gettext(val);
                                            }
                                        }
                                        if (names == "PaymentType")
                                        {
                                            if (val.Trim() == "0")
                                            {
                                                paymenttype = "Cheque";
                                            }
                                            else if (val.Trim() == "1")
                                            {
                                                paymenttype = "DD";
                                            }
                                            else
                                            {
                                                paymenttype = "";
                                            }
                                        }
                                        if (names == "TapalType")
                                        {
                                            if (val.Trim() == "0")
                                            {
                                                modevalue = "";
                                            }
                                            else
                                            {
                                                modevalue = gettext1(val);
                                            }
                                        }
                                        if (names == "type")
                                            if (val == "False")
                                            {
                                                typevalue = Convert.ToString("IN");
                                            }
                                        if (val == "True")
                                        {
                                            typevalue = Convert.ToString("OUT");
                                        }
                                        FarPoint.Web.Spread.TextCellType textcel_type = new FarPoint.Web.Spread.TextCellType();
                                        Fpspread1.Sheets[0].Columns[2].CellType = textcel_type;
                                        if (names == "MoveTo")
                                        {
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Text = movevalue;
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else if (names == "ResponseStaff")
                                        {
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Text = res_staff;
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else if (names == "ActionDesc")
                                        {
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Text = document;
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                        }
                                        else if (names == "BankCode")
                                        {
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Text = bankname;
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                        }
                                        else if (names == "PaymentType")
                                        {
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Text = paymenttype;
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                        }
                                        else if (names == "ActionStatus")
                                        {
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Text = action;
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                        }
                                        else if (names == "ToDeptCode")
                                        {
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Text = department_to;
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                        }
                                        else if (names == "ToCCDeptCode")
                                        {
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Text = department_cc;
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                        }
                                        else if (names == "individual_code")
                                        {
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Text = staff_to;
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                        }
                                        else if (names == "ccindividual_code")
                                        {
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Text = staff_cc;
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                        }
                                        else if (names == "Priority")
                                        {
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Text = priorityvalue;
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                        }
                                        else if (names == "TapalType")
                                        {
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Text = modevalue;
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                        }
                                        else if (names == "type")
                                        {
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Text = typevalue;
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Column.Width = 50;
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                        }
                                        else if (names == "ForwardPerson")
                                        {
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Text = reveivedPer_Name;
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else if (names == "TapalCode")//added by kowshi09.05.2018
                                        {
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else
                                        {
                                            if (names == "Stud_Name")
                                            {
                                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Tag = Convert.ToString(ds.Tables[0].Rows[i]["MemType"]);
                                            }
                                            else
                                            {
                                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                            }
                                            if (names == "RefNo")
                                            {
                                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                            }
                                            else
                                            {
                                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Left;
                                            }
                                            if (names == "TapalSubject")
                                            {
                                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Tag = Convert.ToString(ds.Tables[0].Rows[i]["ViewStatus"]);
                                            }
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Tag = Convert.ToString(ds.Tables[0].Rows[i]["App_No"]);
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                        }
                                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Font.Name = "Book Antiqua";
                                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Font.Size = FontUnit.Medium;
                                        Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                        string color = Convert.ToString(ds.Tables[0].Rows[i]["ViewStatus"]);
                                        string colors = Convert.ToString(ds.Tables[0].Rows[i]["agreestatus"]);
                                        if (color == "True")
                                        {
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                        }

                                        if (colors == "1")
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#7FFFD4");
                                        if (colors == "2")
                                            Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#CD5C5C");
                                    }
                                }
                            }
                            Fpspread1.Sheets[0].PageSize = Fpspread1.Sheets[0].RowCount;
                            if (CheckBox_column0.Checked == true)
                            {
                                Fpspread1.Width = 900;
                                Fpspread1.Height = 420;
                            }
                            else
                            {
                                Fpspread1.Width = 830;
                                Fpspread1.Height = 420;
                            }
                            //div1.Visible = true;
                            pheaderfilter0.Visible = true;
                            pcolumnorder0.Visible = true;
                            Fpspread1.Visible = true;
                            btn_del_stud.Visible = true;
                            div_report.Visible = true;
                        }
                    }
                }
            }
            div_student.Visible = true;
            div_staff.Visible = false;
            div_parent.Visible = false;
            div_individual.Visible = false;
            div_company.Visible = false;
            div_mag.Visible = false;
            div_others.Visible = false;
            div_all.Visible = false;
        }
        catch (Exception ex)
        { }
    }

    public string getdepartment(string dept)
    {
        string appno = d2.GetFunction("select Dept_Name  from Department where Dept_Code ='" + dept + "'");
        return appno;
    }

    public string getstaffname(string staff)
    {
        string codestaff = d2.GetFunction("select staff_name  from staffmaster where staff_code ='" + staff + "'");
        return codestaff;
    }

    public string gettext(string text)
    {
        string text_val = d2.GetFunction("select MasterValue  from CO_MasterValues where MasterCriteria='TAPri' and MasterCode ='" + text + "'");
        return text_val;
    }

    public string gettext1(string text)
    {
        string text_val = d2.GetFunction("select MasterValue  from CO_MasterValues where MasterCriteria='TASta' and MasterCode ='" + text + "'");
        return text_val;
    }

    public string gettextpop(string text)
    {
        string text_val = d2.GetFunction("select MasterValue  from CO_MasterValues where MasterCriteria='TDSta' and MasterCode ='" + text + "'");
        return text_val;
    }

    public string gettextpopact(string text)
    {
        string text_val = d2.GetFunction("select  MasterValue  from CO_MasterValues where MasterCriteria='TAcst' and MasterCode ='" + text + "'");
        return text_val;
    }

    public string gettextbank(string text)
    {
        string text_val = d2.GetFunction("select BankName from FM_FinBankMaster where BankPK ='" + text + "'");
        return text_val;
    }

    public string getstudenamespd(string txt)
    {
        string text = d2.GetFunction("select Stud_Name from Registration where CC=0 and DelFlag =0 and Exam_Flag <>'DEBAR' and Roll_No='" + txt + "'");
        return text;
    }

    public void imgbtn_staff_Click(object sender, EventArgs e)
    {
        try
        {
            string linkname = "";
            bool entryflag = false;

            linkname = "Letter Inward";
            int count = 0;
            string selcol = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + collegecode1 + "'";
            ds.Clear();
            ds = d2.select_method_wo_parameter(selcol, "Text");
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                string value = Convert.ToString(ds.Tables[0].Rows[0]["LinkValue"]);
                string[] value1 = value.Split(',');
                if (value1.Length > 0)
                {
                    for (int i = 0; i < value1.Length; i++)
                    {
                        string val = value1[i].ToString();
                        for (int k = 0; k < cblcolumnorder.Items.Count; k++)
                        {
                            if (val == cblcolumnorder.Items[k].Value)
                            {
                                cblcolumnorder.Items[k].Selected = true;
                                count++;
                            }
                        }
                    }
                    if (count == cblcolumnorder.Items.Count)
                        CheckBox_column.Checked = true;
                    else
                        CheckBox_column.Checked = false;
                }
            }
            loadcolumns(sender, e);
            staff_search();
        }


        catch (Exception ex)
        {

        }
    }

    public void staff_search()
    {
        try
        {
            //delsisref
            ViewState["staff"] = 2;
            Iscompleted.Visible = false;
            Iscompleted.Checked = false;
            DataSet ds = new DataSet();
            string usercodeqty = string.Empty;
            string group_user = "";
            string cmd = "";
            string singleuser = Session["single_user"].ToString();
            if (singleuser == "True")
            {
                usercodeqty = " and user_code='" + Convert.ToString(Session["usercode"]) + "'";
            }
            else
            {
                group_user = Session["group_code"].ToString();
                if (group_user.Contains(';'))
                {
                    string[] group_semi = group_user.Split(';');
                    group_user = group_semi[0].ToString();
                    usercodeqty = " and group_code='" + group_user + "'";
                }
            }
            string applid = ""; string dept = "";
            applid = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            dept = d2.GetFunction("select dept_code from stafftrans where latestrec='1' and staff_code='" + staffcodesession + "'");
            td_stud.BgColor = "white";
            td_staff.BgColor = "#c4c4c4";
            td_par.BgColor = "white";
            td_comp.BgColor = "white";
            td_indi.BgColor = "white";
            td_mag.BgColor = "white";
            td_othr.BgColor = "white";
            td_search.BgColor = "white";
            td_all.BgColor = "white";
            lbl_norec.Visible = false;
            Fpspread2.Sheets[0].Visible = true;
            Fpspread2.Sheets[0].RowHeader.Visible = false;
            Fpspread2.CommandBar.Visible = false;
            Fpspread2.Sheets[0].AutoPostBack = false;
            Fpspread2.Sheets[0].RowCount = 0;
            Fpspread2.Sheets[0].ColumnHeader.RowCount = 1;
            Fpspread2.Sheets[0].ColumnCount = 4;
            FarPoint.Web.Spread.StyleInfo darkstyle1 = new FarPoint.Web.Spread.StyleInfo();
            darkstyle1.BackColor = ColorTranslator.FromHtml("#0CA6CA");
            darkstyle1.ForeColor = Color.Black;
            darkstyle1.HorizontalAlign = HorizontalAlign.Center;
            Fpspread2.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle1;
            string fromhr = Convert.ToString(ddl_hour.SelectedItem.Text);
            string frommm = Convert.ToString(ddl_minits.SelectedItem.Text);
            string fromday = Convert.ToString(ddl_timeformate.SelectedItem.Text);
            string tohr = Convert.ToString(ddl_endhour.SelectedItem.Text);
            string tomm = Convert.ToString(ddl_endminit.SelectedItem.Text);
            string today = Convert.ToString(ddl_endformate.SelectedItem.Text);
            string fromtime = fromhr + ":" + frommm + ":" + fromday;
            string Totime = tohr + ":" + tomm + ":" + today;
            string[] ay = txt_fromdate.Text.Split('/');
            string[] ay1 = txt_todate.Text.Split('/');
            int memtype = 2;
            DateTime dt = new DateTime();
            DateTime dt1 = new DateTime();
            dt = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
            dt1 = Convert.ToDateTime(ay1[1] + "/" + ay1[0] + "/" + ay1[2]);
            if (rdo_in.Checked == true)
            {
                tt = 0;
            }
            else
            {
                tt = 1;
            }
            string RequestStaffApp_No;
            string approvalstatus = string.Empty;
            if (rdo_req.Checked == true)
                approvalstatus = "0";
            if (rdo_approve.Checked == true)
                approvalstatus = "1";
            string ddlpriority = Convert.ToString(ddl_stf_docpri.SelectedItem.Value);
            string query = "";
            string actionstatus = "";
            if (cbl_status.Items.Count > 0)
                actionstatus = Convert.ToString(getCblSelectedValue(cbl_status));
            //if (actionstatus.Trim() == "")
            //    actionstatus = "0";
            RequestStaffApp_No = d2.GetFunction("select ReqStaffAppNo  from RQ_RequestHierarchy where RequestType=12 and ReqAppStaffAppNo in('" + applid + "')");
            if (cbtimebased.Checked == false)
            {
                //if (ddlpriority != "0")
                //{
                //    if (Session["Staff_Code"] != null && Session["Staff_Code"] != "")
                //    {
                //        query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus,t.BankCode,BranchName, t.staff_code, s.staff_name,MoveTo,ActionDesc,ActionStatus,DDNo,TapalMovementsID,ToDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,TapalSubject,type,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,Priority,TapalType from TapalInward t,Registration r,staffmaster s,hr_privilege hr where hr.dept_code=t.ToDeptCode and T.staff_code =s.staff_code and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and MemType ='" + memtype + "' and type='" + tt + "' and Priority='" + ddlpriority + "'  and ((individual_code like '" + Session["Staff_Code"].ToString() + "%' or individual_code like '%" + Session["Staff_Code"].ToString() + ",') or (ccindividual_code like '" + Session["Staff_Code"].ToString() + "%' or ccindividual_code like '%" + Session["Staff_Code"].ToString() + ",')) and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') and " + usercodeqty + " ";
                //        query = query + " order by TapalInwardDate";
                //        query = query + " select * from lettertbl where Memtype='2'";
                //    }
                //    else
                //    {
                //        query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus, t.staff_code,t.BankCode,BranchName, s.staff_name,MoveTo,ActionDesc,ActionStatus,DDNo,TapalMovementsID,ToDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,TapalSubject,type,Priority,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalType from TapalInward t,Registration r,staffmaster s,hr_privilege hr where hr.dept_code=t.ToDeptCode and T.staff_code =s.staff_code and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and MemType ='" + memtype + "' and type='" + tt + "' and Priority='" + ddlpriority + "' and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') " + usercodeqty + " order by TapalInwardDate";
                //        query = query + " select * from lettertbl where Memtype='2'";
                //    }
                //}
                //else
                //{
                if (Session["Staff_Code"] != null && Session["Staff_Code"] != "")
                {
                    if (Convert.ToString(RequestStaffApp_No) != "" && Convert.ToString(RequestStaffApp_No) != "0")
                    {

                        query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus,t.BankCode,BranchName,TapalCode, t.staff_code,s.staff_name,MoveTo,ActionDesc,fd.ActionStatus,ForwardPerson,agreestatus,finalcompletioncheck,DDNo,Priority,TapalMovementsID,ToDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,ccindividual_code,RefNo,TapalSubject,type,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,Priority,TapalType,isnull(t.ReqApproveStage,0)ReqApproveStage ,isnull(t.ReqAppStatus,0)ReqAppStatus , isnull(t.ReqApprovedStaffAppNo,0)ReqApprovedStaffAppNo,DateTime from staffmaster s,hr_privilege hr,RQ_RequestHierarchy rh,TapalInward t left join letterForwardDetails fd on fd.tapalmovementid=t.tapalmovementsid where hr.dept_code=t.ToDeptCode and T.staff_code =s.staff_code and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and MemType ='" + memtype + "' and type='" + tt + "' and rh.ReqAppStaffAppNo='" + applid + "' and rh.ReqStaffAppNo=t.ToDeptCode and rh.RequestType='12' and isnull(t.ReqAppStatus,0)=" + approvalstatus + "  and t.ToDeptCode=rh.ReqStaffAppNo ";
                        if (rdo_req.Checked == true)
                        {
                            query += "  and isnull(t.ReqApproveStage,0)=isnull(rh.ReqApproveStage,0)-1";
                        }
                        //if (rdo_approve.Checked == true)
                        //{
                        //    query += "and (rh.ReqApproveStage) =isnull(t.ReqApproveStage,0)"; 

                        //}
                        if (ddlpriority != "0")
                        {
                            query += " and Priority ='" + ddlpriority + "'";
                        }
                        if (actionstatus != "")//&& actionstatus != "0"
                        {
                            query += " and ISNULL(fd.ActionStatus,0) in('" + actionstatus + "') ";
                        }
                        else
                        {
                            query += " and ISNULL(fd.ActionStatus,0) in('0','1')";
                        }
                        if (cb_finallyCom.Checked == true)
                        {
                            query += " and finalcompletioncheck='1'";
                        }
                        //and rh.ReqStaffAppNo='" + dept + "' " + usercodeqty + "  and  hr.user_code="+usercodeqty+"
                        //for individual and isnull(individual_code,'')='' and isnull(ccindividual_code,'')=''
                        query = query + " order by TapalInwardDate";
                        query = query + " select * from lettertbl where Memtype='2'";
                        if (approvalstatus == "1")
                        {
                            txt_viewdetails3.Visible = false;
                            btn_add1.Visible = false;
                            btn_ad.Visible = false;

                            ddl_viewdetails1.Visible = false;
                            btn_min.Visible = false;
                            ddl_viewdetails2.Visible = false;

                            btn_min1.Visible = false;
                            lbl_doc_state.Visible = false;
                            lbl_remarks.Visible = false;
                            lbl_remrks.Visible = false;
                            txt_viewdetails4.Visible = false;
                            txt_receiveperson.Visible = false;
                            btn_question.Visible = false;
                            btn_received_question.Visible = false;
                            lbl_receiveperson.Visible = false;
                            lbl_persnname.Visible = false;

                            lbl_popviewdate.Visible = false;
                            txt_popviewdate.Visible = false;
                            lbl_view_time.Visible = false;
                            txt_viewtime.Visible = false;

                            btn_popexit.Visible = false;
                            btn_pop1go.Visible = false;
                            btn_pop1go.Text = "Approve";
                        }
                        if (approvalstatus == "0")
                        {

                            txt_viewdetails4.Visible = true;
                            txt_receiveperson.Visible = true;
                            btn_question.Visible = true;
                            btn_received_question.Visible = true;
                            lbl_receiveperson.Visible = true;
                            lbl_persnname.Visible = true;
                            btn_pop1go.Text = "Forward";
                        }

                        txt_viewdetails3.Visible = false;
                        btn_add1.Visible = false;
                        btn_ad.Visible = false;

                        ddl_viewdetails1.Visible = false;
                        btn_min.Visible = false;
                        ddl_viewdetails2.Visible = false;

                        btn_min1.Visible = false;
                        lbl_doc_state.Visible = false;
                        lbl_remarks.Visible = false;
                        lbl_remrks.Visible = false;
                    }
                    else
                    {
                        //query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus,t.BankCode,BranchName, t.staff_code,s.staff_name,MoveTo,ActionDesc,ActionStatus,DDNo,Priority,TapalMovementsID,ToDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,ccindividual_code,RefNo,TapalSubject,type,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,Priority,TapalType,TapalType,isnull(t.ReqApproveStage,0)ReqApproveStage ,isnull(t.ReqAppStatus,0)ReqAppStatus , isnull(t.ReqApprovedStaffAppNo,0)ReqApprovedStaffAppNo from TapalInward t,Registration r,staffmaster s,hr_privilege hr where  T.staff_code =s.staff_code and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and MemType ='" + memtype + "' and type='" + tt + "' and hr.dept_code=t.ToDeptCode and isnull(t.ReqAppStatus,0)=1 and(isnull(individual_code,0)='" + staffcodesession + "' or isnull(ccindividual_code,0)='" + staffcodesession + "')  order by TapalInwardDate ";

                        if (approvalstatus == "1")
                        {
                            query = "select distinct  ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus,t.BankCode,BranchName,TapalCode,t.staff_code,s.staff_name,MoveTo,ActionDesc,fd.ActionStatus,ForwardPerson,agreestatus,DDNo,Priority,TapalMovementsID,ToDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,RefNo,TapalSubject,type,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,Priority,TapalType,TapalType,isnull(t.ReqApproveStage,0)ReqApproveStage ,isnull(t.ReqAppStatus,0)ReqAppStatus , isnull(t.ReqApprovedStaffAppNo,0)ReqApprovedStaffAppNo,DateTime from TapalInward t,staffmaster s,hr_privilege hr, letterForwardDetails fd where fd.tapalmovementid=t.tapalmovementsid and  T.staff_code =s.staff_code and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and MemType ='" + memtype + "' and type='" + tt + "' and hr.dept_code=t.ToDeptCode and isnull(t.ReqAppStatus,0)=1 and fd.forwardperson in('" + staffcodesession + "')";
                            if (actionstatus != "")//&& actionstatus != "0"
                            {
                                query += " and ISNULL(fd.ActionStatus,0) in('" + actionstatus + "')";
                            }
                            else
                            {
                                query += " and ISNULL(fd.ActionStatus,0) in('0','1')";
                            }
                            query = query + " order by TapalInwardDate";
                            query = query + " select * from lettertbl where Memtype='2'";

                            txt_viewdetails4.Visible = false;
                            txt_receiveperson.Visible = false;
                            btn_question.Visible = false;
                            btn_received_question.Visible = false;
                            lbl_receiveperson.Visible = false;
                            lbl_persnname.Visible = false;
                        }
                    }
                    //--and(isnull(individual_code,0)='1019' or isnull(ccindividual_code,0)='1019') 
                    //and ((individual_code like '" + Session["Staff_Code"].ToString() + "%' or individual_code like '%" + Session["Staff_Code"].ToString() + ",') or (ccindividual_code like '" + Session["Staff_Code"].ToString() + "%' or ccindividual_code like '%" + Session["Staff_Code"].ToString() + ",'))individual_code,
                }
                else//delsi select dept_code from stafftrans where latestrec='1' and staff_code=''
                {
                    //query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus, t.staff_code,t.BankCode,BranchName, s.staff_name,MoveTo,ActionDesc,ActionStatus,DDNo,TapalMovementsID,ToDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,TapalSubject,type,Priority,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalType,isnull(t.ReqApproveStage,0)ReqApproveStage ,isnull(t.ReqAppStatus,0)ReqAppStatus , isnull(t.ReqApprovedStaffAppNo,0)ReqApprovedStaffAppNo from TapalInward t, Registration r,staffmaster s,hr_privilege hr,RQ_RequestHierarchy rh where hr.dept_code=t.ToDeptCode and T.staff_code =s.staff_code and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and MemType ='" + memtype + "' and type='" + tt + "'" + usercodeqty + " and rh.ReqStaffAppNo=t.ToDeptCode and rh.RequestType='12' and isnull(t.ReqAppStatus,0)=" + approvalstatus + " and rh.ReqStaffAppNo='" + dept + "' and t.ToDeptCode=rh.ReqStaffAppNo order by TapalInwardDate";
                    //query = query + " select * from lettertbl where Memtype='2'";
                    query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus, t.staff_code,t.BankCode,BranchName ,TapalCode ,s.staff_name,MoveTo,ActionDesc,ActionStatus,DDNo,TapalMovementsID,ToDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,TapalSubject,type,Priority,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalType from TapalInward t,Registration r,staffmaster s,hr_privilege hr where hr.dept_code=t.ToDeptCode and T.staff_code =s.staff_code and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and MemType ='" + memtype + "' and type='" + tt + "' and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') " + usercodeqty + " order by TapalInwardDate";
                    query = query + " select * from lettertbl where Memtype='2'";
                }
                //}
            }
            if (cbtimebased.Checked == true)
            {
                if (ddlpriority != "0")
                {
                    if (Session["Staff_Code"] != null && Session["Staff_Code"] != "")
                    {
                        query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,Convert(varchar(11),TapalInwardTime,103) as Tapaltime,ViewStatus,t.BankCode,BranchName, t.staff_code,TapalCode, s.staff_name,MoveTo,ActionDesc,ActionStatus,DDNo,TapalMovementsID,ToDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,TapalSubject,type,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,Priority,TapalType from TapalInward t,Registration r,staffmaster s,hr_privilege hr where hr.dept_code=t.ToDeptCode, T.staff_code =s.staff_code and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and TapalInwardTime between '" + fromtime + "' and '" + Totime + "' and MemType ='" + memtype + "' and type='" + tt + "' and Priority='" + ddlpriority + "'  and ((individual_code like '" + Session["Staff_Code"].ToString() + "%' or individual_code like '%" + Session["Staff_Code"].ToString() + ",') or (ccindividual_code like '" + Session["Staff_Code"].ToString() + "%' or ccindividual_code like '%" + Session["Staff_Code"].ToString() + ",')) and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') " + usercodeqty + "";

                        query = query + " order by TapalInwardDate";
                        query = query + " select * from lettertbl where Memtype='2'";
                    }
                    else
                    {
                        query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,Convert(varchar(11),TapalInwardTime,103) as Tapaltime,ViewStatus, t.staff_code,t.BankCode,BranchName,TapalCode, s.staff_name,MoveTo,ActionDesc,ActionStatus,DDNo,TapalMovementsID,ToDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,TapalSubject,type,Priority,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalType from TapalInward t,Registration r,staffmaster s,hr_privilege hr where hr.dept_code=t.ToDeptCode and T.staff_code =s.staff_code and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and TapalInwardTime between '" + fromtime + "' and '" + Totime + "'  and MemType ='" + memtype + "' and type='" + tt + "' and Priority='" + ddlpriority + "' and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') " + usercodeqty + " order by TapalInwardDate";
                        query = query + " select * from lettertbl where Memtype='2'";
                    }
                }
                else
                {
                    if (Session["Staff_Code"] != null && Session["Staff_Code"] != "")
                    {
                        query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,Convert(varchar(11),TapalInwardTime,103) as Tapaltime,ViewStatus,t.BankCode,BranchName, t.staff_code,TapalCode, s.staff_name,MoveTo,ActionDesc,ActionStatus,DDNo,TapalMovementsID,ToDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,TapalSubject,type,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,Priority,TapalType from TapalInward t,Registration r,staffmaster s,hr_privilege hr where hr.dept_code=t.ToDeptCode and T.staff_code =s.staff_code and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and TapalInwardTime between '" + fromtime + "' and '" + Totime + "' and MemType ='" + memtype + "' and type='" + tt + "'  and ((individual_code like '" + Session["Staff_Code"].ToString() + "%' or individual_code like '%" + Session["Staff_Code"].ToString() + ",') or (ccindividual_code like '" + Session["Staff_Code"].ToString() + "%' or ccindividual_code like '%" + Session["Staff_Code"].ToString() + ",')) and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') " + usercodeqty + "";
                        query = query + " order by TapalInwardDate";
                        query = query + " select * from lettertbl where Memtype='2'";
                    }
                    else
                    {
                        query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,Convert(varchar(11),TapalInwardTime,103) as Tapaltime,ViewStatus, t.staff_code,t.BankCode,BranchName,TapalCode, s.staff_name,MoveTo,ActionDesc,ActionStatus,DDNo,TapalMovementsID,ToDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,TapalSubject,type,Priority,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalType from TapalInward t,Registration r,staffmaster s,hr_privilege hr where hr.dept_code=t.ToDeptCode and T.staff_code =s.staff_code and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and TapalInwardTime between '" + fromtime + "' and '" + Totime + "' and MemType ='" + memtype + "' and type='" + tt + "' and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') " + usercodeqty + " order by TapalInwardDate";
                        query = query + " select * from lettertbl where Memtype='2'";
                    }
                }
            }
            //ds = d2.select_method_wo_parameter(query, "Text");
            if (query == "")
            {
                Fpspread2.Sheets[0].Visible = false;
                //div2.Visible = false;
                lbl_err_staff.Visible = true;
                lbl_err_staff.Text = "Kindly Select All List ";
                div_report.Visible = false;
                btn_del_stud.Visible = false;
            }
            else
            {
                if (query != "")
                {
                    ds = d2.select_method(query, hat, "Text");
                    if (ds.Tables[0].Rows.Count == 0)
                    {
                        Fpspread2.Sheets[0].Visible = false;
                        Fpspread2.Visible = false;
                        lbl_err_staff.Visible = true;
                        lbl_err_staff.Text = "No Records Found";
                        div_report.Visible = false;
                        pheaderfilter.Visible = false;
                        pcolumnorder.Visible = false;
                        btn_del_stud.Visible = false;
                    }
                    else
                    {
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            lbl_err_staff.Visible = false;
                            for (int i = 0; i < cblcolumnorder.Items.Count; i++)
                            {
                                if (cblcolumnorder.Items[i].Selected == true)
                                {
                                    hat.Add(cblcolumnorder.Items[i].Text, cblcolumnorder.Items[i].Value);
                                    string colvalue = cblcolumnorder.Items[i].Text;
                                    if (ItemList.Contains(colvalue) == false)
                                    {
                                        ItemList.Add(cblcolumnorder.Items[i].Text);
                                    }
                                    tborder.Text = "";
                                    for (int j = 0; j < ItemList.Count; j++)
                                    {
                                        tborder.Text = tborder.Text + ItemList[j].ToString();
                                        tborder.Text = tborder.Text + "(" + (j + 1).ToString() + ")  ";
                                    }
                                }
                                cblcolumnorder.Items[0].Enabled = false;
                            }
                            if (ItemList.Count == 0)
                            {
                                for (int i = 0; i < 3; i++)
                                {
                                    cblcolumnorder.Items[i].Selected = true;
                                    hat.Add(cblcolumnorder.Items[i].Text, cblcolumnorder.Items[i].Value);
                                    string colvalue = cblcolumnorder.Items[i].Text;
                                    if (ItemList.Contains(colvalue) == false)
                                    {
                                        ItemList.Add(cblcolumnorder.Items[i].Text);
                                    }
                                    tborder.Text = "";
                                    for (int j = 0; j < ItemList.Count; j++)
                                    {
                                        tborder.Text = tborder.Text + ItemList[j].ToString();
                                        tborder.Text = tborder.Text + "(" + (j + 1).ToString() + ")  ";
                                    }
                                }
                            }
                            Fpspread2.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                            Fpspread2.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                            Fpspread2.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                            Fpspread2.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                            Fpspread2.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread2.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
                            Fpspread2.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                            Fpspread2.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                            Fpspread2.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                            Fpspread2.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread2.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Attachment";
                            Fpspread2.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                            Fpspread2.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                            Fpspread2.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                            Fpspread2.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread2.Sheets[0].ColumnHeader.Cells[0, 3].Text = "View Details";
                            Fpspread2.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                            Fpspread2.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                            Fpspread2.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                            Fpspread2.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                            FarPoint.Web.Spread.StyleInfo style2 = new FarPoint.Web.Spread.StyleInfo();
                            style2.Font.Size = 14;
                            style2.Font.Name = "Book Antiqua";
                            style2.Font.Bold = true;
                            style2.HorizontalAlign = HorizontalAlign.Center;
                            style2.ForeColor = Color.Black;
                            style2.BackColor = Color.AliceBlue;
                            Fpspread2.Sheets[0].PageSize = Fpspread2.Sheets[0].RowCount;
                            for (int i = 0; i < ItemList.Count; i++)
                            {
                                string value1 = ItemList[i].ToString();
                                int a = value1.Length;
                                Fpspread2.Sheets[0].ColumnCount++;
                                Fpspread2.Sheets[0].ColumnHeader.Cells[Fpspread2.Sheets[0].ColumnHeader.RowCount - 1, Fpspread2.Sheets[0].ColumnCount - 1].Text = ItemList[i].ToString();
                                Fpspread2.Sheets[0].ColumnHeader.Cells[Fpspread2.Sheets[0].ColumnHeader.RowCount - 1, Fpspread2.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                Fpspread2.Sheets[0].ColumnHeader.Cells[Fpspread2.Sheets[0].ColumnHeader.RowCount - 1, Fpspread2.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                Fpspread2.Sheets[0].ColumnHeader.Cells[Fpspread2.Sheets[0].ColumnHeader.RowCount - 1, Fpspread2.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                            }
                            Fpspread2.Sheets[0].RowCount = 0;
                            DataView dv = new DataView();
                            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                            {
                                Fpspread2.Sheets[0].RowCount++;
                                count++;
                                Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 0].Text = count.ToString();
                                Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["TapalMovementsID"]);
                                string forwardper = string.Empty;
                                forwardper = Convert.ToString(ds.Tables[0].Rows[i]["ForwardPerson"]);

                                Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                                Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                string color1 = Convert.ToString(ds.Tables[0].Rows[i]["ViewStatus"]);
                                string color2 = Convert.ToString(ds.Tables[0].Rows[i]["agreestatus"]);//delsis0501
                                if (color1 == "True")
                                {
                                    Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                    Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                    Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                }
                                if (color2 == "1")
                                {
                                    Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#7FFFD4");
                                    Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#7FFFD4");
                                    Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#7FFFD4");

                                }
                                if (color2 == "2")
                                {
                                    Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#CD5C5C");
                                    Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#CD5C5C");
                                    Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#CD5C5C");
                                }
                                FarPoint.Web.Spread.CheckBoxCellType cb = new FarPoint.Web.Spread.CheckBoxCellType();
                                cb.AutoPostBack = true;
                                Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 1].CellType = cb;
                                Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 1].Tag = forwardper;
                                Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                                Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                                FarPoint.Web.Spread.ButtonCellType btn_type = new FarPoint.Web.Spread.ButtonCellType();
                                btn_type.Text = "View";
                                Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 3].CellType = btn_type;
                                Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                                Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                                Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                                string getappno = d2.GetFunction("select staff_code  from staffmaster  where staff_name='" + Convert.ToString(ds.Tables[0].Rows[i]["staff_name"]) + "'");
                                string date = Convert.ToString(ds.Tables[0].Rows[i]["TapalInwardDate"]);
                                string tapalpk = Convert.ToString(ds.Tables[0].Rows[i]["TapalMovementsID"]);
                                string[] splitdate = date.Split('/');
                                DateTime dnew = Convert.ToDateTime(splitdate[1] + "/" + splitdate[0] + "/" + splitdate[2]);

                                if (ds.Tables[1].Rows.Count > 0)
                                {
                                    ds.Tables[1].DefaultView.RowFilter = "MemCode='" + getappno + "' and TapalInwardFk='" + tapalpk + "' and date='" + dnew.ToString("MM/dd/yyyy") + "'";
                                    dv = ds.Tables[1].DefaultView;
                                    if (dv.Count > 0)
                                    {
                                        string imagetext = Convert.ToString(dv[0]["filename"]);
                                        Fpspread2.ActiveSheetView.Cells[Fpspread2.Sheets[0].RowCount - 1, 2].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                                        Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 2].Text = imagetext.ToString();
                                        Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(dv[0]["fileid"]);
                                    }
                                    else
                                    {
                                        Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 2].Locked = true;
                                    }
                                }

                                int c = 3;
                                string typevalue = "";
                                string reveivedPer_Name = "";
                                string movevalue = "";
                                string todeptsplit = "";
                                string todeptsplit1 = "";
                                string ccdeptsplit = "";
                                string ccdeptsplit1 = "";
                                string toindisplit = "";
                                string toindisplit1 = "";
                                string ccindisplit = "";
                                string ccindisplit1 = "";
                                string department_to = "";
                                string department_cc = "";
                                string staff_to = "";
                                string staff_cc = "";
                                string priorityvalue = "";
                                string modevalue = "";
                                string action = "";
                                string document = "";
                                string res_staff = "";
                                string paymenttype = "";
                                string bankname = "";
                                if (ItemList.Count > 0 && hat.Count > 0)
                                {
                                    for (int j = 0; j < ItemList.Count; j++)
                                    {
                                        string k = Convert.ToString(ItemList[j].ToString());
                                        string names = Convert.ToString(hat[k].ToString());
                                        string val = ds.Tables[0].Rows[i][names].ToString();
                                        if (names == "BankCode")
                                        {
                                            if (val != "")
                                            {
                                                bankname = gettextbank(val);
                                            }
                                            else
                                            {
                                                bankname = "";
                                            }
                                        }
                                        if (names == "ActionDesc")
                                        {
                                            if (val == "" || val == "0")
                                            {
                                                document = "";
                                            }
                                            else
                                            {
                                                document = gettextpop(val);
                                            }
                                        }
                                        if (names == "ResponseStaff")
                                        {
                                            if (val == "0" || val == "")
                                            {
                                                res_staff = "";
                                            }
                                            else
                                            {
                                                res_staff = getstaffname(val);
                                            }
                                        }
                                        if (names == "ActionStatus")
                                        {
                                            if (val == "0" || val == "")
                                            {
                                                action = "Pending";
                                            }
                                            if (val == "1")
                                            {
                                                action = "Completed";
                                                //action = gettextpopact(val);
                                            }
                                        }
                                        if (names == "ForwardPerson")//delsi0801
                                        {
                                            if (val == "0" || val == "")
                                            {
                                                reveivedPer_Name = "";
                                            }
                                            else
                                            {
                                                reveivedPer_Name = getstaffname(val);
                                            }
                                        }
                                        if (names == "MoveTo")
                                        {
                                            if (val == "1")
                                            {
                                                movevalue = "Department";
                                            }
                                            if (val == "2")
                                            {
                                                movevalue = "Individual";
                                            }
                                            if (val == "3")
                                            {
                                                movevalue = "Department and Individual";
                                            }
                                        }
                                        if (names == "PaymentType")
                                        {
                                            if (val.Trim() == "0")
                                            {
                                                paymenttype = "Cheque";
                                            }
                                            else if (val.Trim() == "1")
                                            {
                                                paymenttype = "DD";
                                            }
                                            else
                                            {
                                                paymenttype = "";
                                            }
                                        }
                                        if (names == "ToDeptCode")
                                        {
                                            if (val.Trim() == "0" || val.Trim() == "")
                                            {
                                                department_to = "";
                                            }
                                            else
                                            {
                                                string[] split = val.Split(',');
                                                if (split.Length == 1)
                                                {
                                                    department_to = getdepartment(val);
                                                }
                                                else
                                                {
                                                    todeptsplit = getdepartment(split[0]);
                                                    todeptsplit1 = getdepartment(split[1]);
                                                    department_to = todeptsplit + "," + todeptsplit1;
                                                }
                                            }
                                        }
                                        if (names == "ToCCDeptCode")
                                        {
                                            if (val.Trim() == "0" || val.Trim() == "")
                                            {
                                                department_cc = "";
                                            }
                                            else
                                            {
                                                string[] split1 = val.Split(',');
                                                if (split1.Length == 1)
                                                {
                                                    department_cc = getdepartment(val);
                                                }
                                                else
                                                {
                                                    ccdeptsplit = getdepartment(split1[0]);
                                                    ccdeptsplit1 = getdepartment(split1[1]);
                                                    department_cc = ccdeptsplit + "," + ccdeptsplit1;
                                                }
                                            }
                                        }
                                        if (names == "individual_code")
                                        {
                                            if (val.Trim() == "0" || val.Trim() == "")
                                            {
                                                staff_to = "";
                                            }
                                            else
                                            {
                                                string[] split = val.Split(',');
                                                if (split.Length == 1)
                                                {
                                                    staff_to = getstaffname(val);
                                                }
                                                else
                                                {
                                                    toindisplit = getstaffname(split[0]);
                                                    toindisplit1 = getstaffname(split[1]);
                                                    staff_to = toindisplit + "," + toindisplit1;
                                                }
                                            }
                                        }
                                        if (names == "ccindividual_code")
                                        {
                                            if (val.Trim() == "0" || val.Trim() == "")
                                            {
                                                staff_cc = "";
                                            }
                                            else
                                            {
                                                string[] split1 = val.Split(',');
                                                if (split1.Length == 1)
                                                {
                                                    staff_cc = getstaffname(val);
                                                }
                                                else
                                                {
                                                    ccindisplit = getstaffname(split1[0]);
                                                    ccindisplit1 = getstaffname(split1[1]);
                                                    staff_cc = ccindisplit + "," + ccindisplit1;
                                                }
                                            }
                                        }
                                        if (names == "Priority")
                                        {
                                            if (val.Trim() == "0")
                                            {
                                                priorityvalue = "";
                                            }
                                            else
                                            {
                                                priorityvalue = gettext(val);
                                            }
                                        }
                                        if (names == "TapalType")
                                        {
                                            if (val.Trim() == "0")
                                            {
                                                modevalue = "";
                                            }
                                            else
                                            {
                                                modevalue = gettext1(val);
                                            }
                                        }
                                        if (names == "type")
                                            if (val == "False")
                                            {
                                                typevalue = Convert.ToString("IN");
                                            }
                                        if (val == "True")
                                        {
                                            typevalue = Convert.ToString("OUT");
                                        }
                                        c++;
                                        FarPoint.Web.Spread.TextCellType textcel_type = new FarPoint.Web.Spread.TextCellType();
                                        Fpspread2.Sheets[0].Columns[2].CellType = textcel_type;
                                        if (names == "MoveTo")
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Text = movevalue;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                        }
                                        else if (names == "ResponseStaff")
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Text = res_staff;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else if (names == "BankCode")
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Text = bankname;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                        }
                                        else if (names == "ActionDesc")
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Text = document;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                        }
                                        else if (names == "ActionStatus")
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Text = action;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                        }
                                        else if (names == "PaymentType")
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Text = paymenttype;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                        }
                                        else if (names == "ToDeptCode")
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Text = department_to;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                        }
                                        else if (names == "ToCCDeptCode")
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Text = department_cc;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                        }
                                        else if (names == "individual_code")
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Text = staff_to;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                        }
                                        else if (names == "ccindividual_code")
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Text = staff_cc;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                        }
                                        else if (names == "Priority")
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Text = priorityvalue;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                        }
                                        else if (names == "TapalType")
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Text = modevalue;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                        }
                                        else if (names == "type")
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Text = typevalue;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Width = 50;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                        }
                                        else if (names == "ForwardPerson")
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Text = reveivedPer_Name;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else if (names == "TapalCode")//added by kowshi09.05.2018
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else if (names == "DateTime")//added by saranya 21.08.2018
                                        {
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else
                                        {
                                            if (names == "RefNo")
                                            {
                                                Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                            }
                                            else
                                            {
                                                Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Left;
                                            }
                                            if (names == "TapalInwardDate")
                                            {
                                                Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                            }
                                            else if (names == "TapalInwardTime")
                                            {
                                                Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Width = 80;
                                            }

                                            else
                                            {
                                                Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                            }
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Tag = Convert.ToString(ds.Tables[0].Rows[i]["staff_code"]);
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                        }
                                        Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Font.Name = "Book Antiqua";
                                        Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Font.Size = FontUnit.Medium;
                                        string color = Convert.ToString(ds.Tables[0].Rows[i]["ViewStatus"]);
                                        string colors = Convert.ToString(ds.Tables[0].Rows[i]["agreestatus"]);
                                        if (color == "True")
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                        }
                                        if (colors == "1")
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#7FFFD4");

                                        if (colors == "2")
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#CD5C5C");

                                    }
                                }
                            }
                            Fpspread2.Sheets[0].PageSize = Fpspread2.Sheets[0].RowCount;
                            //  div2.Visible = true;
                            if (CheckBox_column.Checked == true)
                            {
                                Fpspread2.Width = 900;
                                Fpspread2.Height = 420;
                            }
                            else
                            {
                                Fpspread2.Width = 800;
                                Fpspread2.Height = 420;
                            }
                            pheaderfilter.Visible = true;
                            pcolumnorder.Visible = true;
                            Fpspread2.Visible = true;
                            div_report.Visible = true;
                            btn_del_stud.Visible = true;
                        }
                    }
                }
            }
            //spread_staff();
            div_staff.Visible = true;
            div_student.Visible = false;
            div_parent.Visible = false;
            div_others.Visible = false;
            div_company.Visible = false;
            div_individual.Visible = false;
            div_mag.Visible = false;
            div_all.Visible = false;
        }
        catch (Exception ex)//delsi1005
        {
            //d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void imgbtn_parents_Click(object sender, EventArgs e)
    {
        parent_search();
    }

    public void parent_search()
    {
        td_stud.BgColor = "white";
        td_staff.BgColor = "white";
        td_par.BgColor = "#c4c4c4";
        td_comp.BgColor = "white";
        td_indi.BgColor = "white";
        td_mag.BgColor = "white";
        td_othr.BgColor = "white";
        td_search.BgColor = "white";
        lbl_norec.Visible = false;
        Fpspread3.Sheets[0].Visible = true;
        FarPoint.Web.Spread.StyleInfo darkstyle33 = new FarPoint.Web.Spread.StyleInfo();
        darkstyle33.BackColor = ColorTranslator.FromHtml("#0CA6CA");
        darkstyle33.ForeColor = Color.Black;
        darkstyle33.HorizontalAlign = HorizontalAlign.Center;
        Fpspread3.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle33;
        Fpspread3.Sheets[0].PageSize = Fpspread3.Sheets[0].RowCount;
        Fpspread3.Sheets[0].RowHeader.Visible = false;
        Fpspread3.CommandBar.Visible = false;
        Fpspread3.Sheets[0].AutoPostBack = false;
        Fpspread3.Sheets[0].RowCount = 0;
        string fromhr = Convert.ToString(ddl_hour.SelectedItem.Text);
        string frommm = Convert.ToString(ddl_minits.SelectedItem.Text);
        string fromday = Convert.ToString(ddl_timeformate.SelectedItem.Text);
        string tohr = Convert.ToString(ddl_endhour.SelectedItem.Text);
        string tomm = Convert.ToString(ddl_endminit.SelectedItem.Text);
        string today = Convert.ToString(ddl_endformate.SelectedItem.Text);
        string fromtime = fromhr + ":" + frommm + ":" + fromday;
        string Totime = tohr + ":" + tomm + ":" + today;
        string[] ay = txt_fromdate.Text.Split('/');
        string[] ay1 = txt_todate.Text.Split('/');
        int memtype = 3;
        DateTime dt = new DateTime();
        DateTime dt1 = new DateTime();
        dt = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
        dt1 = Convert.ToDateTime(ay1[1] + "/" + ay1[0] + "/" + ay1[2]);
        if (rdo_in.Checked == true)
        {
            tt = 0;
        }
        else
        {
            tt = 1;
        }
        string query = "";
        string actionstatus = "";
        if (cbl_status.Items.Count > 0)
            actionstatus = Convert.ToString(getCblSelectedValue(cbl_status));
        if (actionstatus.Trim() == "")
            actionstatus = "0";
        if (Session["Staff_Code"] != null && Session["Staff_Code"] != "")
        {
            query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,DDNo,BankCode,BranchName,ViewStatus,t.App_No, r.Stud_Name,r.Roll_No,a.parent_name,ActionDesc,ActionStatus,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalMovementsID,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,MoveTo,ToDeptCode,ToCCDeptCode,individual_code,tostudentno,ccindividual_code,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,RefNo,type,TapalSubject,Priority,TapalType from TapalInward t,Registration r,applyn a where T.App_No =r.App_No and a.app_no =r.App_No and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'   and MemType ='" + memtype + "' and type='" + tt + "' and ((individual_code like '" + Session["Staff_Code"].ToString() + "%' or individual_code like '%" + Session["Staff_Code"].ToString() + ",') or (ccindividual_code like '" + Session["Staff_Code"].ToString() + "%' or ccindividual_code like '%" + Session["Staff_Code"].ToString() + ",')) and ISNULL(t.ViewStatus,0) in('" + actionstatus + "')  order by TapalInwardDate";
            query = query + " select * from lettertbl where Memtype='3'";
        }
        else
        {
            query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,DDNo,ViewStatus,t.App_No, BankCode,BranchName,r.Stud_Name,r.Roll_No,a.parent_name,ActionDesc,ActionStatus,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalMovementsID,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,MoveTo,ToDeptCode,ToCCDeptCode,individual_code,tostudentno,ccindividual_code,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,RefNo,type,TapalSubject,Priority,TapalType from TapalInward t,Registration r,applyn a where T.App_No =r.App_No and a.app_no =r.App_No and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'   and MemType ='" + memtype + "' and type='" + tt + "' and ISNULL(t.ViewStatus,0) in('" + actionstatus + "')  order by TapalInwardDate";
            query = query + " select * from lettertbl where Memtype='3'";
        }
        if (query == "")
        {
            Fpspread3.Sheets[0].Visible = false;
            //div3.Visible = false;
            lbl_err_parent.Visible = true;
            lbl_err_parent.Text = "Kindly Select All List ";
            div_report.Visible = false;
            btn_del_stud.Visible = false;
        }
        else
        {
            if (query != "")
            {
                ds = d2.select_method(query, hat, "Text");
                if (ds.Tables[0].Rows.Count == 0)
                {
                    Fpspread3.Sheets[0].Visible = false;
                    Fpspread3.Visible = false;
                    lbl_err_parent.Visible = true;
                    lbl_err_parent.Text = "No Records Found";
                    div_report.Visible = false;
                    pheaderfilter1.Visible = false;
                    pcolumnorder1.Visible = false;
                    btn_del_stud.Visible = false;
                }
                else
                {
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        lbl_err_parent.Visible = false;
                        for (int i = 0; i < cblcolumnorder1.Items.Count; i++)
                        {
                            if (cblcolumnorder1.Items[i].Selected == true)
                            {
                                hat2.Add(cblcolumnorder1.Items[i].Text, cblcolumnorder1.Items[i].Value);
                                string colvalue = cblcolumnorder1.Items[i].Text;
                                if (ItemList_par.Contains(colvalue) == false)
                                {
                                    ItemList_par.Add(cblcolumnorder1.Items[i].Text);
                                }
                                tborder1.Text = "";
                                for (int j = 0; j < ItemList_par.Count; j++)
                                {
                                    tborder1.Text = tborder1.Text + ItemList_par[j].ToString();
                                    tborder1.Text = tborder1.Text + "(" + (j + 1).ToString() + ")  ";
                                }
                            }
                            cblcolumnorder1.Items[0].Enabled = false;
                        }
                        if (ItemList_par.Count == 0)
                        {
                            for (int i = 0; i < 3; i++)
                            {
                                cblcolumnorder1.Items[i].Selected = true;
                                hat2.Add(cblcolumnorder1.Items[i].Text, cblcolumnorder1.Items[i].Value);
                                string colvalue = cblcolumnorder.Items[i].Text;
                                if (ItemList_par.Contains(colvalue) == false)
                                {
                                    ItemList_par.Add(cblcolumnorder1.Items[i].Text);
                                }
                                tborder1.Text = "";
                                for (int j = 0; j < ItemList_par.Count; j++)
                                {
                                    tborder1.Text = tborder1.Text + ItemList_par[j].ToString();
                                    tborder1.Text = tborder1.Text + "(" + (j + 1).ToString() + ")  ";
                                }
                            }
                        }
                        Fpspread3.Sheets[0].ColumnHeader.RowCount = 1;
                        Fpspread3.Sheets[0].ColumnCount = 4;
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Attachment";
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 3].Text = "View Details";
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                        FarPoint.Web.Spread.StyleInfo style2 = new FarPoint.Web.Spread.StyleInfo();
                        style2.Font.Size = 14;
                        style2.Font.Name = "Book Antiqua";
                        style2.Font.Bold = true;
                        style2.HorizontalAlign = HorizontalAlign.Center;
                        style2.ForeColor = Color.Black;
                        style2.BackColor = Color.AliceBlue;
                        Fpspread3.Sheets[0].PageSize = Fpspread3.Sheets[0].RowCount;
                        for (int i = 0; i < ItemList_par.Count; i++)
                        {
                            string value1 = ItemList_par[i].ToString();
                            int a = value1.Length;
                            Fpspread3.Sheets[0].ColumnCount++;
                            Fpspread3.Sheets[0].ColumnHeader.Cells[Fpspread3.Sheets[0].ColumnHeader.RowCount - 1, Fpspread3.Sheets[0].ColumnCount - 1].Text = ItemList_par[i].ToString();
                            Fpspread3.Sheets[0].ColumnHeader.Cells[Fpspread3.Sheets[0].ColumnHeader.RowCount - 1, Fpspread3.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                            Fpspread3.Sheets[0].ColumnHeader.Cells[Fpspread3.Sheets[0].ColumnHeader.RowCount - 1, Fpspread3.Sheets[0].ColumnCount - 1].Font.Bold = true;
                            Fpspread3.Sheets[0].ColumnHeader.Cells[Fpspread3.Sheets[0].ColumnHeader.RowCount - 1, Fpspread3.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                        }
                        Fpspread3.Sheets[0].RowCount = 0;
                        DataView dv = new DataView();
                        for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                        {
                            Fpspread3.Sheets[0].RowCount++;
                            count++;
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 0].Text = count.ToString();
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["TapalMovementsID"]);
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                            string color1 = Convert.ToString(ds.Tables[0].Rows[i]["ViewStatus"]);
                            if (color1 == "True")
                            {
                                Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                            }
                            FarPoint.Web.Spread.CheckBoxCellType cb = new FarPoint.Web.Spread.CheckBoxCellType();
                            cb.AutoPostBack = true;
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 1].CellType = cb;
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                            FarPoint.Web.Spread.ButtonCellType btn_type = new FarPoint.Web.Spread.ButtonCellType();
                            btn_type.Text = "View";
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 3].CellType = btn_type;
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                            string getappno = d2.GetFunction("select app_no  from Registration  where roll_No='" + Convert.ToString(ds.Tables[0].Rows[i]["Roll_No"]) + "'");
                            string date = Convert.ToString(ds.Tables[0].Rows[i]["TapalInwardDate"]);
                            string tapalpk = Convert.ToString(ds.Tables[0].Rows[i]["TapalMovementsID"]);
                            string[] splitdate = date.Split('/');
                            DateTime dnew = Convert.ToDateTime(splitdate[1] + "/" + splitdate[0] + "/" + splitdate[2]);
                            if (ds.Tables[1].Rows.Count > 0)
                            {
                                ds.Tables[1].DefaultView.RowFilter = "MemCode='" + getappno + "' and TapalInwardFk='" + tapalpk + "' and date='" + dnew.ToString("MM/dd/yyyy") + "'";
                                dv = ds.Tables[1].DefaultView;
                                if (dv.Count > 0)
                                {
                                    string imagetext = Convert.ToString(dv[0]["filename"]);
                                    //if (imagetext != "")
                                    //{
                                    Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 2].Column.Locked = false;
                                    Fpspread3.ActiveSheetView.Cells[Fpspread3.Sheets[0].RowCount - 1, 2].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                                    Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 2].Text = imagetext.ToString();
                                    Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(dv[0]["fileid"]);
                                    //}
                                    //else
                                }
                                else
                                {
                                    Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 2].Locked = true;
                                }
                            }
                            int c = 3;
                            string typevalue = "";
                            string movevalue = "";
                            string todeptsplit = "";
                            string todeptsplit1 = "";
                            string ccdeptsplit = "";
                            string ccdeptsplit1 = "";
                            string toindisplit = "";
                            string toindisplit1 = "";
                            string ccindisplit = "";
                            string ccindisplit1 = "";
                            string department_to = "";
                            string department_cc = "";
                            string staff_to = "";
                            string staff_cc = "";
                            string studto = "";
                            string tostudsplit = "";
                            string tostudsplit1 = "";
                            string priorityvalue = "";
                            string modevalue = "";
                            string action = "";
                            string document = "";
                            string res_staff = "";
                            string paymenttype = "";
                            string bankname = "";
                            if (ItemList_par.Count > 0 && hat2.Count > 0)
                            {
                                for (int j = 0; j < ItemList_par.Count; j++)
                                {
                                    string k = Convert.ToString(ItemList_par[j].ToString());
                                    string names = Convert.ToString(hat2[k].ToString());
                                    string val = ds.Tables[0].Rows[i][names].ToString();
                                    if (names == "ActionDesc")
                                    {
                                        if (val == "" || val == "0")
                                        {
                                            document = "";
                                        }
                                        else
                                        {
                                            document = gettextpop(val);
                                        }
                                    }
                                    if (names == "ResponseStaff")
                                    {
                                        if (val == "0" || val == "")
                                        {
                                            res_staff = "";
                                        }
                                        else
                                        {
                                            res_staff = getstaffname(val);
                                        }
                                    }
                                    if (names == "ActionStatus")
                                    {
                                        if (val == "0" || val == "")
                                        {
                                            action = "";
                                        }
                                        else
                                        {
                                            action = gettextpopact(val);
                                        }
                                    }
                                    if (names == "BankCode")
                                    {
                                        if (val != "")
                                        {
                                            bankname = gettextbank(val);
                                        }
                                        else
                                        {
                                            bankname = "";
                                        }
                                    }
                                    if (names == "MoveTo")
                                    {
                                        if (val == "1")
                                        {
                                            movevalue = "Department";
                                        }
                                        if (val == "2")
                                        {
                                            movevalue = "Individual";
                                        }
                                        if (val == "3")
                                        {
                                            movevalue = "Department and Individual";
                                        }
                                    }
                                    if (names == "ToDeptCode")
                                    {
                                        if (val.Trim() == "0" || val.Trim() == "")
                                        {
                                            department_to = "";
                                        }
                                        else
                                        {
                                            string[] split = val.Split(',');
                                            if (split.Length == 1)
                                            {
                                                department_to = getdepartment(val);
                                            }
                                            else
                                            {
                                                todeptsplit = getdepartment(split[0]);
                                                todeptsplit1 = getdepartment(split[1]);
                                                department_to = todeptsplit + "," + todeptsplit1;
                                            }
                                        }
                                    }
                                    if (names == "PaymentType")
                                    {
                                        if (val.Trim() == "0")
                                        {
                                            paymenttype = "Cheque";
                                        }
                                        else if (val.Trim() == "1")
                                        {
                                            paymenttype = "DD";
                                        }
                                        else
                                        {
                                            paymenttype = "";
                                        }
                                    }
                                    if (names == "ToCCDeptCode")
                                    {
                                        if (val.Trim() == "0" || val.Trim() == "")
                                        {
                                            department_cc = "";
                                        }
                                        else
                                        {
                                            string[] split1 = val.Split(',');
                                            if (split1.Length == 1)
                                            {
                                                department_cc = getdepartment(val);
                                            }
                                            else
                                            {
                                                ccdeptsplit = getdepartment(split1[0]);
                                                ccdeptsplit1 = getdepartment(split1[1]);
                                                department_cc = ccdeptsplit + "," + ccdeptsplit1;
                                            }
                                        }
                                    }
                                    if (names == "individual_code")
                                    {
                                        if (val.Trim() == "0" || val.Trim() == "")
                                        {
                                            staff_to = "";
                                        }
                                        else
                                        {
                                            string[] split = val.Split(',');
                                            if (split.Length == 1)
                                            {
                                                staff_to = getstaffname(val);
                                            }
                                            else
                                            {
                                                toindisplit = getstaffname(split[0]);
                                                toindisplit1 = getstaffname(split[1]);
                                                staff_to = toindisplit + "," + toindisplit1;
                                            }
                                        }
                                    }
                                    if (names == "ccindividual_code")
                                    {
                                        if (val.Trim() == "0" || val.Trim() == "")
                                        {
                                            staff_cc = "";
                                        }
                                        else
                                        {
                                            string[] split1 = val.Split(',');
                                            if (split1.Length == 1)
                                            {
                                                staff_cc = getstaffname(val);
                                            }
                                            else
                                            {
                                                ccindisplit = getstaffname(split1[0]);
                                                ccindisplit1 = getstaffname(split1[1]);
                                                staff_cc = ccindisplit + "," + ccindisplit1;
                                            }
                                        }
                                    }
                                    if (names == "tostudentno")
                                    {
                                        if (val.Trim() == "0" || val.Trim() == "")
                                        {
                                            studto = "";
                                        }
                                        else
                                        {
                                            string[] split1 = val.Split(',');
                                            if (split1.Length == 1)
                                            {
                                                studto = getstudenamespd(val);
                                            }
                                            else
                                            {
                                                tostudsplit = getstudenamespd(split1[0]);
                                                tostudsplit1 = getstudenamespd(split1[1]);
                                                studto = tostudsplit + "," + tostudsplit1;
                                            }
                                        }
                                    }
                                    if (names == "Priority")
                                    {
                                        if (val.Trim() == "0")
                                        {
                                            priorityvalue = "";
                                        }
                                        else
                                        {
                                            priorityvalue = gettext(val);
                                        }
                                    }
                                    if (names == "TapalType")
                                    {
                                        if (val.Trim() == "0")
                                        {
                                            modevalue = "";
                                        }
                                        else
                                        {
                                            modevalue = gettext1(val);
                                        }
                                    }
                                    if (names == "type")
                                        if (val == "False")
                                        {
                                            typevalue = Convert.ToString("IN");
                                        }
                                    if (val == "True")
                                    {
                                        typevalue = Convert.ToString("OUT");
                                    }
                                    c++;
                                    FarPoint.Web.Spread.TextCellType textcel_type = new FarPoint.Web.Spread.TextCellType();
                                    Fpspread3.Sheets[0].Columns[2].CellType = textcel_type;
                                    if (names == "MoveTo")
                                    {
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Text = movevalue;
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                    }
                                    else if (names == "ResponseStaff")
                                    {
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Text = res_staff;
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                    }
                                    else if (names == "BankCode")
                                    {
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Text = bankname;
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                    }
                                    else if (names == "ActionDesc")
                                    {
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Text = document;
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                    }
                                    else if (names == "PaymentType")
                                    {
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Text = paymenttype;
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                    }
                                    else if (names == "ActionStatus")
                                    {
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Text = action;
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                    }
                                    else if (names == "ToDeptCode")
                                    {
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Text = department_to;
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                    }
                                    else if (names == "ToCCDeptCode")
                                    {
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Text = department_cc;
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                    }
                                    else if (names == "individual_code")
                                    {
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Text = staff_to;
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                    }
                                    else if (names == "ccindividual_code")
                                    {
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Text = staff_cc;
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                    }
                                    else if (names == "tostudentno")
                                    {
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Text = studto;
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                    }
                                    else if (names == "Priority")
                                    {
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Text = priorityvalue;
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                    }
                                    else if (names == "TapalType")
                                    {
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Text = modevalue;
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                    }
                                    else if (names == "type")
                                    {
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Text = typevalue;
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Column.Width = 50;
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                    }
                                    else
                                    {
                                        if (names == "RefNo")
                                        {
                                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                        }
                                        else
                                        {
                                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Left;
                                        }
                                        if (names == "TapalInwardDate")
                                        {
                                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                        }
                                        else if (names == "TapalInwardTime")
                                        {
                                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Column.Width = 80;
                                        }
                                        else
                                        {
                                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Tag = Convert.ToString(ds.Tables[0].Rows[i]["App_No"]);
                                    }
                                    Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Font.Name = "Book Antiqua";
                                    Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Font.Size = FontUnit.Medium;
                                    Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                    string color = Convert.ToString(ds.Tables[0].Rows[i]["ViewStatus"]);
                                    if (color == "True")
                                    {
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                    }
                                }
                            }
                        }
                        Fpspread3.Sheets[0].PageSize = Fpspread3.Sheets[0].RowCount;
                        //div3.Visible = true;
                        if (CheckBox_column11.Checked == true)
                        {
                            Fpspread3.Width = 900;
                            Fpspread3.Height = 420;
                        }
                        else
                        {
                            Fpspread3.Width = 850;
                            Fpspread3.Height = 420;
                        }
                        pheaderfilter1.Visible = true;
                        pcolumnorder1.Visible = true;
                        Fpspread3.Visible = true;
                        div_report.Visible = true;
                        btn_del_stud.Visible = true;
                    }
                }
            }
        }
        //spread_parent();
        div_parent.Visible = true;
        div_student.Visible = false;
        div_staff.Visible = false;
        div_company.Visible = false;
        div_individual.Visible = false;
        div_mag.Visible = false;
        div_others.Visible = false;
        div_all.Visible = false;
    }

    public void imgbtn_company_Click(object sender, EventArgs e)
    {

        try
        {
            string linkname = "";
            bool entryflag = false;

            linkname = "Letter Inward company";
            int count = 0;
            string selcol = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + collegecode1 + "'";
            ds.Clear();
            ds = d2.select_method_wo_parameter(selcol, "Text");
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                string value = Convert.ToString(ds.Tables[0].Rows[0]["LinkValue"]);
                string[] value1 = value.Split(',');
                if (value1.Length > 0)
                {
                    for (int i = 0; i < value1.Length; i++)
                    {
                        string val = value1[i].ToString();
                        for (int k = 0; k < cblcolumnorder2.Items.Count; k++)
                        {
                            if (val == cblcolumnorder2.Items[k].Value)
                            {
                                cblcolumnorder2.Items[k].Selected = true;
                                count++;
                            }
                        }
                    }
                    if (count == cblcolumnorder2.Items.Count)
                        CheckBox_column.Checked = true;
                    else
                        CheckBox_column.Checked = false;
                }
            }
            loadcolumns_company(sender, e);
            company_search();//delsicomref
        }
        catch (Exception ex)
        {

        }


    }

    public void company_search()
    {
        try
        {
            Iscompleted.Visible = false;
            Iscompleted.Checked = false;
            ViewState["staff"] = 4;
            string applid = string.Empty;
            string RequestStaffApp_No = string.Empty;
            applid = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            RequestStaffApp_No = d2.GetFunction("select ReqStaffAppNo  from RQ_RequestHierarchy where RequestType=12 and ReqAppStaffAppNo in('" + applid + "')");
            td_stud.BgColor = "white";
            td_staff.BgColor = "white";
            td_par.BgColor = "white";
            td_comp.BgColor = "#c4c4c4";
            td_indi.BgColor = "white";
            td_mag.BgColor = "white";
            td_othr.BgColor = "white";
            td_search.BgColor = "white";
            lbl_norec.Visible = false;
            Fpspread4.Sheets[0].Visible = true;
            FarPoint.Web.Spread.StyleInfo darkstyle111 = new FarPoint.Web.Spread.StyleInfo();
            darkstyle111.BackColor = ColorTranslator.FromHtml("#0CA6CA");
            darkstyle111.ForeColor = Color.Black;
            darkstyle111.HorizontalAlign = HorizontalAlign.Center;
            Fpspread4.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle111;
            Fpspread4.Sheets[0].RowHeader.Visible = false;
            Fpspread4.CommandBar.Visible = false;
            Fpspread4.Sheets[0].AutoPostBack = false;
            Fpspread4.Sheets[0].RowCount = 0;
            string fromhr = Convert.ToString(ddl_hour.SelectedItem.Text);
            string frommm = Convert.ToString(ddl_minits.SelectedItem.Text);
            string fromday = Convert.ToString(ddl_timeformate.SelectedItem.Text);
            string tohr = Convert.ToString(ddl_endhour.SelectedItem.Text);
            string tomm = Convert.ToString(ddl_endminit.SelectedItem.Text);
            string today = Convert.ToString(ddl_endformate.SelectedItem.Text);
            string fromtime = fromhr + ":" + frommm + ":" + fromday;
            string Totime = tohr + ":" + tomm + ":" + today;
            string[] ay = txt_fromdate.Text.Split('/');
            string[] ay1 = txt_todate.Text.Split('/');
            int memtype = 4;
            DateTime dt = new DateTime();
            DateTime dt1 = new DateTime();
            dt = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
            dt1 = Convert.ToDateTime(ay1[1] + "/" + ay1[0] + "/" + ay1[2]);

            if (rdo_in.Checked == true)
            {
                tt = 0;
            }
            else
            {
                tt = 1;
            }
            string approvalstatus = string.Empty;
            if (rdo_req.Checked == true)
                approvalstatus = "0";
            if (rdo_approve.Checked == true)
                approvalstatus = "1";

            string query = "";
            string ddlpriority = Convert.ToString(ddl_stf_docpri.SelectedItem.Value);
            string actionstatus = "";
            if (cbl_status.Items.Count > 0)
                actionstatus = Convert.ToString(getCblSelectedValue(cbl_status));
            //if (actionstatus.Trim() == "")
            //    actionstatus = "0";
            if (cbtimebased.Checked == false)
            {
                //if (ddlpriority != "0")
                //{
                //    if (Session["Staff_Code"] != null && Session["Staff_Code"] != "")
                //    {
                //        query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus,t.BankCode,BranchName,DDNo,FromName,MoveTo,ToDeptCode,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalMovementsID,ActionDesc,ActionStatus,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,type,TapalSubject,Priority,TapalType from TapalInward t,Registration r,staffmaster s where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and  MemType ='" + memtype + "' and type='" + tt + "' and Priority='" + ddlpriority + "' and ((individual_code like '" + Session["Staff_Code"].ToString() + "%' or individual_code like '%" + Session["Staff_Code"].ToString() + ",') or (ccindividual_code like '" + Session["Staff_Code"].ToString() + "%' or ccindividual_code like '%" + Session["Staff_Code"].ToString() + ",')) and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') order by TapalInwardDate";
                //        query = query + " select * from lettertbl where Memtype='4'";
                //    }
                //    else
                //    {
                //        query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus,DDNo,FromName,MoveTo,t.BankCode,BranchName,ToDeptCode,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalMovementsID,ActionDesc,ActionStatus,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,type,TapalSubject,Priority,TapalType from TapalInward t,Registration r,staffmaster s where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and  MemType ='" + memtype + "' and type='" + tt + "' and Priority='" + ddlpriority + "' and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') order by TapalInwardDate";
                //        query = query + " select * from lettertbl where Memtype='4'";
                //    }
                //}
                // else
                //{
                if (Session["Staff_Code"] != null && Session["Staff_Code"] != "")
                {
                    if (Convert.ToString(RequestStaffApp_No) != "" && Convert.ToString(RequestStaffApp_No) != "0")
                    {
                        query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus,t.BankCode,BranchName,DDNo,TapalCode,FromName,MoveTo,ToDeptCode,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalMovementsID,ActionDesc,fd.ActionStatus,ForwardPerson,agreestatus,finalcompletioncheck,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,type,TapalSubject,Priority,TapalType from staffmaster s,RQ_RequestHierarchy rh,TapalInward t left join letterForwardDetails fd on fd.tapalmovementid=t.tapalmovementsid where rh.ReqStaffAppNo=t.ToDeptCode and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and  MemType ='" + memtype + "' and type='" + tt + "' and rh.ReqAppStaffAppNo='" + applid + "' and rh.ReqStaffAppNo=t.ToDeptCode and rh.RequestType='12' and isnull(t.ReqAppStatus,0)=" + approvalstatus + " and t.ToDeptCode=rh.ReqStaffAppNo";

                        if (rdo_req.Checked == true)
                        {
                            query += "  and isnull(t.ReqApproveStage,0)=isnull(rh.ReqApproveStage,0)-1";
                        }
                        if (ddlpriority != "0")
                        {
                            query += " and Priority ='" + ddlpriority + "'";
                        }
                        if (actionstatus != "")//&& actionstatus != "0"
                        {
                            query += " and ISNULL(fd.ActionStatus,0) in('" + actionstatus + "')";
                        }
                        else
                        {
                            query += " and ISNULL(fd.ActionStatus,0) in('0','1')";
                        }
                        if (cb_finallyCom.Checked == true)
                        {
                            query += " and finalcompletioncheck='1'";
                        }
                        query = query + " order by TapalInwardDate";
                        query = query + " select * from lettertbl where Memtype='4'";
                        if (approvalstatus == "1")
                        {
                            txt_viewdetails3.Visible = false;
                            btn_add1.Visible = false;
                            btn_ad.Visible = false;

                            ddl_viewdetails1.Visible = false;
                            btn_min.Visible = false;
                            ddl_viewdetails2.Visible = false;

                            btn_min1.Visible = false;
                            lbl_doc_state.Visible = false;
                            lbl_remarks.Visible = false;
                            lbl_remrks.Visible = false;
                            txt_viewdetails4.Visible = false;
                            txt_receiveperson.Visible = false;
                            btn_question.Visible = false;
                            btn_received_question.Visible = false;
                            lbl_receiveperson.Visible = false;
                            lbl_persnname.Visible = false;

                            lbl_popviewdate.Visible = false;
                            txt_popviewdate.Visible = false;
                            lbl_view_time.Visible = false;
                            txt_viewtime.Visible = false;

                            btn_popexit.Visible = false;
                            btn_pop1go.Visible = false;
                            // btn_pop1go.Text = "Approve";
                        }
                        if (approvalstatus == "0")
                        {
                            txt_viewdetails4.Visible = true;
                            txt_receiveperson.Visible = true;
                            btn_question.Visible = true;
                            btn_received_question.Visible = true;
                            lbl_receiveperson.Visible = true;
                            lbl_persnname.Visible = true;
                            btn_pop1go.Text = "Forward";
                        }

                        txt_viewdetails3.Visible = false;
                        btn_add1.Visible = false;
                        btn_ad.Visible = false;

                        ddl_viewdetails1.Visible = false;
                        btn_min.Visible = false;
                        ddl_viewdetails2.Visible = false;

                        btn_min1.Visible = false;
                        lbl_doc_state.Visible = false;
                        lbl_remarks.Visible = false;
                        lbl_remrks.Visible = false;
                    }
                    else
                    {
                        //query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus,t.BankCode,BranchName, MoveTo,ActionDesc,ActionStatus,DDNo,FromName,Priority,PaymentType,TapalMovementsID,ToDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,ccindividual_code,RefNo,TapalSubject,type,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,Priority,TapalType,TapalType,isnull(t.ReqApproveStage,0)ReqApproveStage ,isnull(t.ReqAppStatus,0)ReqAppStatus , isnull(t.ReqApprovedStaffAppNo,0)ReqApprovedStaffAppNo from TapalInward t,staffmaster s,hr_privilege hr where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and MemType ='" + memtype + "' and type='" + tt + "' and hr.dept_code=t.ToDeptCode and isnull(t.ReqAppStatus,0)=1 and(isnull(individual_code,0)='" + staffcodesession + "' or isnull(ccindividual_code,0)='" + staffcodesession + "')  order by TapalInwardDate ";
                        if (approvalstatus == "1")
                        {
                            query = " select distinct  ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus,t.BankCode,BranchName,MoveTo,ActionDesc,TapalCode,fd.ActionStatus,ForwardPerson,agreestatus,DDNo,FromName,TapalMovementsID,ToDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,ccindividual_code,RefNo,TapalSubject,type,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,Priority,TapalType,TapalType,isnull(t.ReqApproveStage,0)ReqApproveStage ,isnull(t.ReqAppStatus,0)ReqAppStatus , isnull(t.ReqApprovedStaffAppNo,0)ReqApprovedStaffAppNo,datetime from TapalInward t,staffmaster s,hr_privilege hr,letterForwardDetails fd where fd.tapalmovementid=t.tapalmovementsid and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and MemType ='" + memtype + "' and type='" + tt + "' and hr.dept_code=t.ToDeptCode and isnull(t.ReqAppStatus,0)=1 and fd.forwardperson in('" + staffcodesession + "')";
                            if (ddlpriority != "0")
                            {
                                query += " and Priority ='" + ddlpriority + "'";
                            }
                            if (actionstatus != "")//&& actionstatus != "0"
                            {
                                query += " and ISNULL(fd.ActionStatus,0) in('" + actionstatus + "')";
                            }
                            else
                            {
                                query += " and ISNULL(fd.ActionStatus,0) in('0','1')";
                            }
                            query = query + " order by TapalInwardDate";
                            query = query + " select * from lettertbl where Memtype='4'";


                            txt_viewdetails4.Visible = false;
                            txt_receiveperson.Visible = false;
                            btn_question.Visible = false;
                            btn_received_question.Visible = false;
                            lbl_receiveperson.Visible = false;
                            lbl_persnname.Visible = false;
                        }
                    }
                    //query = "  select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus,DDNo,FromName,MoveTo,t.BankCode,BranchName,ToDeptCode,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalMovementsID,ActionDesc,ActionStatus,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,type,TapalSubject,Priority,TapalType from TapalInward t,Registration r,staffmaster s,RQ_RequestHierarchy rh where rh.ReqStaffAppNo=t.ToDeptCode and TapalInwardDate between '12/14/2017' and '12/14/2017' and  MemType ='4' and type='0'  and ISNULL(t.ActionStatus,0) in('0') and rh.RequestType='12' and isnull(t.ReqAppStatus,0)=0 and rh.ReqAppStaffAppNo='2401' order by TapalInwardDate";                     
                }
                else//delsi
                {
                    query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus,DDNo,FromName,MoveTo,t.BankCode,BranchName,ToDeptCode,TapalCode,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalMovementsID,ActionDesc,ActionStatus,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,type,TapalSubject,Priority,TapalType from TapalInward t,Registration r,staffmaster s where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and  MemType ='" + memtype + "' and type='" + tt + "'  and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') order by TapalInwardDate";
                    query = query + " select * from lettertbl where Memtype='4'";
                }
                //}
            }
            if (cbtimebased.Checked == true)
            {
                if (ddlpriority != "0")
                {
                    if (Session["Staff_Code"] != null && Session["Staff_Code"] != "")
                    {
                        query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,Convert(varchar(11),TapalInwardTime,103) as Tapaltime,ViewStatus,t.BankCode,BranchName,DDNo,FromName,MoveTo,TapalCode,ToDeptCode,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalMovementsID,ActionDesc,ActionStatus,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,type,TapalSubject,Priority,TapalType from TapalInward t,Registration r,staffmaster s where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and TapalInwardTime between '" + fromtime + "' and '" + Totime + "' and  MemType ='" + memtype + "' and type='" + tt + "' and Priority='" + ddlpriority + "' and ((individual_code like '" + Session["Staff_Code"].ToString() + "%' or individual_code like '%" + Session["Staff_Code"].ToString() + ",') or (ccindividual_code like '" + Session["Staff_Code"].ToString() + "%' or ccindividual_code like '%" + Session["Staff_Code"].ToString() + ",')) and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') order by TapalInwardDate";
                        query = query + " select * from lettertbl where Memtype='4'";
                    }
                    else
                    {
                        query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,Convert(varchar(11),TapalInwardTime,103) as Tapaltime,ViewStatus,DDNo,FromName,MoveTo,t.BankCode,BranchName,TapalCode,ToDeptCode,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalMovementsID,ActionDesc,ActionStatus,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,type,TapalSubject,Priority,TapalType from TapalInward t,Registration r,staffmaster s where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and TapalInwardTime between '" + fromtime + "' and '" + Totime + "' and  MemType ='" + memtype + "' and type='" + tt + "' and Priority='" + ddlpriority + "' and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') order by TapalInwardDate";
                        query = query + " select * from lettertbl where Memtype='4'";
                    }
                }
                else
                {
                    if (Session["Staff_Code"] != null && Session["Staff_Code"] != "")
                    {
                        query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,Convert(varchar(11),TapalInwardTime,103) as Tapaltime,ViewStatus,t.BankCode,BranchName,DDNo,FromName,MoveTo,TapalCode,ToDeptCode,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalMovementsID,ActionDesc,ActionStatus,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,type,TapalSubject,Priority,TapalType from TapalInward t,Registration r,staffmaster s where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and TapalInwardTime between '" + fromtime + "' and '" + Totime + "' and  MemType ='" + memtype + "' and type='" + tt + "' and ((individual_code like '" + Session["Staff_Code"].ToString() + "%' or individual_code like '%" + Session["Staff_Code"].ToString() + ",') or (ccindividual_code like '" + Session["Staff_Code"].ToString() + "%' or ccindividual_code like '%" + Session["Staff_Code"].ToString() + ",')) and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') order by TapalInwardDate";
                        query = query + " select * from lettertbl where Memtype='4'";
                    }
                    else//delsi
                    {
                        query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,Convert(varchar(11),TapalInwardTime,103) as Tapaltime,ViewStatus,DDNo,FromName,MoveTo,t.BankCode,BranchName,TapalCode,ToDeptCode,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalMovementsID,ActionDesc,ActionStatus,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,type,TapalSubject,Priority,TapalType from TapalInward t,Registration r,staffmaster s where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and TapalInwardTime between '" + fromtime + "' and '" + Totime + "' and  MemType ='" + memtype + "' and type='" + tt + "'  and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') order by TapalInwardDate";
                        query = query + " select * from lettertbl where Memtype='4'";
                    }
                }
            }
            if (query == "")
            {
                Fpspread4.Sheets[0].Visible = false;
                // div4.Visible = false;
                lbl_err_comp.Visible = true;
                lbl_err_comp.Text = "Kindly Select All List ";
                div_report.Visible = false;
                btn_del_stud.Visible = false;
            }
            else
            {
                if (query != "")
                {
                    ds = d2.select_method(query, hat, "Text");
                    if (ds.Tables[0].Rows.Count == 0)
                    {
                        Fpspread4.Sheets[0].Visible = false;
                        Fpspread4.Visible = false;
                        lbl_err_comp.Visible = true;
                        lbl_err_comp.Text = "No Records Found";
                        div_report.Visible = false;
                        pheaderfilter2.Visible = false;
                        pcolumnorder2.Visible = false;
                        btn_del_stud.Visible = false;
                    }
                    else
                    {
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            lbl_err_comp.Visible = false;
                            for (int i = 0; i < cblcolumnorder2.Items.Count; i++)
                            {
                                if (cblcolumnorder2.Items[i].Selected == true)
                                {
                                    hat3.Add(cblcolumnorder2.Items[i].Text, cblcolumnorder2.Items[i].Value);
                                    string colvalue = cblcolumnorder2.Items[i].Text;
                                    if (ItemList_comp.Contains(colvalue) == false)
                                    {
                                        ItemList_comp.Add(cblcolumnorder2.Items[i].Text);
                                    }
                                    tborder2.Text = "";
                                    for (int j = 0; j < ItemList_comp.Count; j++)
                                    {
                                        tborder2.Text = tborder2.Text + ItemList_comp[j].ToString();
                                        tborder2.Text = tborder2.Text + "(" + (j + 1).ToString() + ")  ";
                                    }
                                }
                                cblcolumnorder2.Items[0].Enabled = false;
                            }
                            if (ItemList_comp.Count == 0)
                            {
                                for (int i = 0; i < 3; i++)
                                {
                                    cblcolumnorder2.Items[i].Selected = true;
                                    hat3.Add(cblcolumnorder2.Items[i].Text, cblcolumnorder2.Items[i].Value);
                                    string colvalue = cblcolumnorder2.Items[i].Text;
                                    if (ItemList_comp.Contains(colvalue) == false)
                                    {
                                        ItemList_comp.Add(cblcolumnorder2.Items[i].Text);
                                    }
                                    tborder2.Text = "";
                                    for (int j = 0; j < ItemList_comp.Count; j++)
                                    {
                                        tborder2.Text = tborder2.Text + ItemList_comp[j].ToString();
                                        tborder2.Text = tborder2.Text + "(" + (j + 1).ToString() + ")  ";
                                    }
                                }
                            }
                            Fpspread4.Sheets[0].ColumnHeader.RowCount = 1;
                            Fpspread4.Sheets[0].ColumnCount = 3;
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Attachment";
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 2].Text = "View Details";
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                            FarPoint.Web.Spread.StyleInfo style2 = new FarPoint.Web.Spread.StyleInfo();
                            style2.Font.Size = 13;
                            style2.Font.Name = "Book Antiqua";
                            style2.Font.Bold = true;
                            style2.HorizontalAlign = HorizontalAlign.Center;
                            style2.ForeColor = Color.Black;
                            style2.BackColor = Color.AliceBlue;
                            Fpspread4.Sheets[0].PageSize = Fpspread4.Sheets[0].RowCount;
                            for (int i = 0; i < ItemList_comp.Count; i++)
                            {
                                string value1 = ItemList_comp[i].ToString();
                                int a = value1.Length;
                                Fpspread4.Sheets[0].ColumnCount++;
                                Fpspread4.Sheets[0].ColumnHeader.Cells[Fpspread4.Sheets[0].ColumnHeader.RowCount - 1, Fpspread4.Sheets[0].ColumnCount - 1].Text = ItemList_comp[i].ToString();
                                Fpspread4.Sheets[0].ColumnHeader.Cells[Fpspread4.Sheets[0].ColumnHeader.RowCount - 1, Fpspread4.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                Fpspread4.Sheets[0].ColumnHeader.Cells[Fpspread4.Sheets[0].ColumnHeader.RowCount - 1, Fpspread4.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                Fpspread4.Sheets[0].ColumnHeader.Cells[Fpspread4.Sheets[0].ColumnHeader.RowCount - 1, Fpspread4.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                            }
                            Fpspread4.Sheets[0].RowCount = 0;
                            DataView dv = new DataView();
                            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                            {
                                Fpspread4.Sheets[0].RowCount++;
                                count++;
                                string forwardper = string.Empty;
                                forwardper = Convert.ToString(ds.Tables[0].Rows[i]["ForwardPerson"]);
                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 0].Text = count.ToString();
                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["TapalMovementsID"]);
                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                string color1 = Convert.ToString(ds.Tables[0].Rows[i]["ViewStatus"]);
                                string color2 = Convert.ToString(ds.Tables[0].Rows[i]["agreestatus"]);
                                if (color1 == "True")
                                {
                                    Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                    Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                    Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                }
                                if (color2 == "1")
                                {
                                    Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#7FFFD4");
                                    Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#7FFFD4");
                                    Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#7FFFD4");
                                }
                                if (color2 == "2")
                                {
                                    Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#CD5C5C");
                                    Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#CD5C5C");
                                    Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#CD5C5C");
                                }
                                FarPoint.Web.Spread.ButtonCellType btn_type = new FarPoint.Web.Spread.ButtonCellType();
                                btn_type.Text = "View";
                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 2].CellType = btn_type;

                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 1].Tag = forwardper;
                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;

                                string getappno = d2.GetFunction("select FromName  from TapalInward  where FromName='" + Convert.ToString(ds.Tables[0].Rows[i]["FromName"]) + "'");
                                string date = Convert.ToString(ds.Tables[0].Rows[i]["TapalInwardDate"]);
                                string tapalpk = Convert.ToString(ds.Tables[0].Rows[i]["TapalMovementsID"]);
                                string[] splitdate = date.Split('/');
                                DateTime dnew = Convert.ToDateTime(splitdate[1] + "/" + splitdate[0] + "/" + splitdate[2]);
                                if (ds.Tables[1].Rows.Count > 0)
                                {
                                    ds.Tables[1].DefaultView.RowFilter = "TapalInwardFk='" + tapalpk + "' and date='" + dnew.ToString("MM/dd/yyyy") + "'";
                                    dv = ds.Tables[1].DefaultView;
                                    if (dv.Count > 0)
                                    {
                                        string imagetext = Convert.ToString(dv[0]["filename"]);
                                        Fpspread4.ActiveSheetView.Cells[Fpspread4.Sheets[0].RowCount - 1, 1].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                                        Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 1].Text = imagetext.ToString();
                                        Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 1].Tag = Convert.ToString(dv[0]["fileid"]);
                                    }
                                    else
                                    {
                                        Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 1].Locked = true;
                                    }
                                }

                                int c = 2;
                                string typevalue = "";
                                string movevalue = "";
                                string todeptsplit = "";
                                string todeptsplit1 = "";
                                string ccdeptsplit = "";
                                string ccdeptsplit1 = "";
                                string toindisplit = "";
                                string toindisplit1 = "";
                                string ccindisplit = "";
                                string ccindisplit1 = "";
                                string department_to = "";
                                string department_cc = "";
                                string staff_to = "";
                                string staff_cc = "";
                                string priorityvalue = "";
                                string modevalue = "";
                                string action = "";
                                string document = "";
                                string res_staff = "";
                                string paymenttype = "";
                                string bankname = "";
                                string reveivedPer_Name = "";
                                if (ItemList_comp.Count > 0 && hat3.Count > 0)
                                {
                                    for (int j = 0; j < ItemList_comp.Count; j++)
                                    {
                                        string k = Convert.ToString(ItemList_comp[j].ToString());
                                        string names = Convert.ToString(hat3[k].ToString());
                                        string val = ds.Tables[0].Rows[i][names].ToString();
                                        if (names == "ResponseStaff")
                                        {
                                            if (val == "0" || val == "")
                                            {
                                                res_staff = "";
                                            }
                                            else
                                            {
                                                res_staff = getstaffname(val);
                                            }
                                        }
                                        if (names == "ActionDesc")
                                        {
                                            if (val == "" || val == "0")
                                            {
                                                document = "";
                                            }
                                            else
                                            {
                                                document = gettextpop(val);
                                            }
                                        }
                                        if (names == "BankCode")
                                        {
                                            if (val != "")
                                            {
                                                bankname = gettextbank(val);
                                            }
                                            else
                                            {
                                                bankname = "";
                                            }
                                        }
                                        if (names == "ActionStatus")
                                        {
                                            if (val == "0" || val == "")
                                            {
                                                action = "Pending";
                                            }
                                            if (val == "1")
                                            {
                                                action = "Completed";

                                            }
                                            //else
                                            //{
                                            //    action = gettextpopact(val);
                                            //}
                                        }
                                        if (names == "ForwardPerson")//delsi0801
                                        {
                                            if (val == "0" || val == "")
                                            {
                                                reveivedPer_Name = "";
                                            }
                                            else
                                            {
                                                reveivedPer_Name = getstaffname(val);
                                            }
                                        }


                                        if (names == "PaymentType")
                                        {
                                            if (val.Trim() == "0")
                                            {
                                                paymenttype = "Cheque";
                                            }
                                            else if (val.Trim() == "1")
                                            {
                                                paymenttype = "DD";
                                            }
                                            else
                                            {
                                                paymenttype = "";
                                            }
                                        }
                                        if (names == "MoveTo")
                                        {
                                            if (val == "1")
                                            {
                                                movevalue = "Department";
                                            }
                                            if (val == "2")
                                            {
                                                movevalue = "Individual";
                                            }
                                            if (val == "3")
                                            {
                                                movevalue = "Department and Individual";
                                            }
                                        }
                                        if (names == "ToDeptCode")
                                        {
                                            if (val.Trim() == "0" || val.Trim() == "")
                                            {
                                                department_to = "";
                                            }
                                            else
                                            {
                                                string[] split = val.Split(',');
                                                if (split.Length == 1)
                                                {
                                                    department_to = getdepartment(val);
                                                }
                                                else
                                                {
                                                    todeptsplit = getdepartment(split[0]);
                                                    todeptsplit1 = getdepartment(split[1]);
                                                    department_to = todeptsplit + "," + todeptsplit1;
                                                }
                                            }
                                        }
                                        if (names == "ToCCDeptCode")
                                        {
                                            if (val.Trim() == "0" || val.Trim() == "")
                                            {
                                                department_cc = "";
                                            }
                                            else
                                            {
                                                string[] split1 = val.Split(',');
                                                if (split1.Length == 1)
                                                {
                                                    department_cc = getdepartment(val);
                                                }
                                                else
                                                {
                                                    ccdeptsplit = getdepartment(split1[0]);
                                                    ccdeptsplit1 = getdepartment(split1[1]);
                                                    department_cc = ccdeptsplit + "," + ccdeptsplit1;
                                                }
                                            }
                                        }
                                        if (names == "individual_code")
                                        {
                                            if (val.Trim() == "0" || val.Trim() == "")
                                            {
                                                staff_to = "";
                                            }
                                            else
                                            {
                                                string[] split = val.Split(',');
                                                if (split.Length == 1)
                                                {
                                                    staff_to = getstaffname(val);
                                                }
                                                else
                                                {
                                                    toindisplit = getstaffname(split[0]);
                                                    toindisplit1 = getstaffname(split[1]);
                                                    staff_to = toindisplit + "," + toindisplit1;
                                                }
                                            }
                                        }
                                        if (names == "ccindividual_code")
                                        {
                                            if (val.Trim() == "0" || val.Trim() == "")
                                            {
                                                staff_cc = "";
                                            }
                                            else
                                            {
                                                string[] split1 = val.Split(',');
                                                if (split1.Length == 1)
                                                {
                                                    staff_cc = getstaffname(val);
                                                }
                                                else
                                                {
                                                    ccindisplit = getstaffname(split1[0]);
                                                    ccindisplit1 = getstaffname(split1[1]);
                                                    staff_cc = ccindisplit + "," + ccindisplit1;
                                                }
                                            }
                                        }
                                        if (names == "Priority")
                                        {
                                            if (val.Trim() == "0")
                                            {
                                                priorityvalue = "";
                                            }
                                            else
                                            {
                                                priorityvalue = gettext(val);
                                            }
                                        }
                                        if (names == "TapalType")
                                        {
                                            if (val.Trim() == "0")
                                            {
                                                modevalue = "";
                                            }
                                            else
                                            {
                                                modevalue = gettext1(val);
                                            }
                                        }
                                        if (names == "type")
                                            if (val == "False")
                                            {
                                                typevalue = Convert.ToString("IN");
                                            }
                                        if (val == "True")
                                        {
                                            typevalue = Convert.ToString("OUT");
                                        }
                                        c++;
                                        FarPoint.Web.Spread.TextCellType textcel_type = new FarPoint.Web.Spread.TextCellType();
                                        Fpspread4.Sheets[0].Columns[2].CellType = textcel_type;
                                        if (names == "MoveTo")
                                        {
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Text = movevalue;
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else if (names == "ResponseStaff")
                                        {
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Text = res_staff;
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else if (names == "ActionDesc")
                                        {
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Text = document;
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                        }
                                        else if (names == "BankCode")
                                        {
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Text = bankname;
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else if (names == "PaymentType")
                                        {
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Text = paymenttype;
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                        }
                                        else if (names == "ActionStatus")
                                        {
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Text = action;
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                        }
                                        else if (names == "ToDeptCode")
                                        {
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Text = department_to;
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                        }
                                        else if (names == "ToCCDeptCode")
                                        {
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Text = department_cc;
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                        }
                                        else if (names == "individual_code")
                                        {
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Text = staff_to;
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                        }
                                        else if (names == "ccindividual_code")
                                        {
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Text = staff_cc;
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                        }
                                        else if (names == "Priority")
                                        {
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Text = priorityvalue;
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                        }
                                        else if (names == "TapalType")
                                        {
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Text = modevalue;
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                        }
                                        else if (names == "type")
                                        {
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Text = typevalue;
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Column.Width = 50;
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                        }

                                        else if (names == "ForwardPerson")
                                        {
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Text = reveivedPer_Name;
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else if (names == "TapalCode")//added by kowshi09.05.2018
                                        {
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else if (names == "DateTime")//added by saranya 21.08.2018
                                        {
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else
                                        {
                                            if (names == "RefNo")
                                            {
                                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                            }
                                            else
                                            {
                                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Left;
                                            }
                                            if (names == "TapalInwardDate")
                                            {
                                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                            }
                                            else if (names == "TapalInwardTime")
                                            {
                                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Column.Width = 70;
                                            }
                                            else
                                            {
                                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                            }
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                        }
                                        Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Font.Name = "Book Antiqua";
                                        Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Font.Size = FontUnit.Medium;
                                        Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                        string color = Convert.ToString(ds.Tables[0].Rows[i]["ViewStatus"]);
                                        string colors = Convert.ToString(ds.Tables[0].Rows[i]["agreestatus"]);
                                        if (color == "True")
                                        {
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                        }
                                        if (colors == "1")
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#7FFFD4");
                                        if (colors == "2")
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#CD5C5C");
                                    }
                                }
                            }
                            Fpspread4.Sheets[0].PageSize = Fpspread4.Sheets[0].RowCount;
                            //  div4.Visible = true;
                            Fpspread4.Visible = true;
                            btn_del_stud.Visible = true;
                            pheaderfilter2.Visible = true;
                            pcolumnorder2.Visible = true;
                            if (CheckBox_column2.Checked == true)
                            {
                                Fpspread4.Width = 900;
                                Fpspread4.Height = 400;
                            }
                            else
                            {
                                Fpspread4.Width = 600;
                                Fpspread4.Height = 400;
                            }
                            Fpspread4.Visible = true;
                            div_report.Visible = true;
                        }
                    }
                }
            }
            div_company.Visible = true;
            div_student.Visible = false;
            div_staff.Visible = false;
            div_parent.Visible = false;
            div_individual.Visible = false;
            div_mag.Visible = false;
            div_others.Visible = false;
            div_all.Visible = false;
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");

        }
    }

    public void imgbtn_individual_Click(object sender, EventArgs e)
    {
        idiv_search();
    }

    public void idiv_search()
    {
        td_stud.BgColor = "white";
        td_staff.BgColor = "white";
        td_par.BgColor = "white";
        td_comp.BgColor = "white";
        td_indi.BgColor = "#c4c4c4";
        td_mag.BgColor = "white";
        td_othr.BgColor = "white";
        td_search.BgColor = "white";
        lbl_norec.Visible = false;
        Fpspread5.Sheets[0].Visible = true;
        FarPoint.Web.Spread.StyleInfo darkstyle111 = new FarPoint.Web.Spread.StyleInfo();
        darkstyle111.BackColor = ColorTranslator.FromHtml("#0CA6CA");
        darkstyle111.ForeColor = Color.Black;
        darkstyle111.HorizontalAlign = HorizontalAlign.Center;
        Fpspread5.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle111;
        Fpspread5.Sheets[0].RowHeader.Visible = false;
        Fpspread5.CommandBar.Visible = false;
        Fpspread5.Sheets[0].AutoPostBack = false;
        Fpspread5.Sheets[0].RowCount = 0;
        string fromhr = Convert.ToString(ddl_hour.SelectedItem.Text);
        string frommm = Convert.ToString(ddl_minits.SelectedItem.Text);
        string fromday = Convert.ToString(ddl_timeformate.SelectedItem.Text);
        string tohr = Convert.ToString(ddl_endhour.SelectedItem.Text);
        string tomm = Convert.ToString(ddl_endminit.SelectedItem.Text);
        string today = Convert.ToString(ddl_endformate.SelectedItem.Text);
        string fromtime = fromhr + ":" + frommm + ":" + fromday;
        string Totime = tohr + ":" + tomm + ":" + today;
        string[] ay = txt_fromdate.Text.Split('/');
        string[] ay1 = txt_todate.Text.Split('/');
        int memtype = 5;
        DateTime dt = new DateTime();
        DateTime dt1 = new DateTime();
        dt = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
        dt1 = Convert.ToDateTime(ay1[1] + "/" + ay1[0] + "/" + ay1[2]);
        if (rdo_in.Checked == true)
        {
            tt = 0;
        }
        else
        {
            tt = 1;
        }
        string query = ""; string actionstatus = "";
        if (cbl_status.Items.Count > 0)
            actionstatus = Convert.ToString(getCblSelectedValue(cbl_status));
        if (actionstatus.Trim() == "")
            actionstatus = "0";
        if (Session["Staff_Code"] != null && Session["Staff_Code"] != "")
        {
            query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus,DDNo,t.BankCode,BranchName,FromName,MoveTo,TapalMovementsID,ToDeptCode,ActionDesc,ActionStatus,CONVERT(varchar(10),TapalInwardTime,108)as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,type,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalSubject,Priority,TapalType from TapalInward t,Registration r,staffmaster s where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and  MemType ='" + memtype + "' and type='" + tt + "' and ((individual_code like '" + Session["Staff_Code"].ToString() + "%' or individual_code like '%" + Session["Staff_Code"].ToString() + ",') or (ccindividual_code like '" + Session["Staff_Code"].ToString() + "%' or ccindividual_code like '%" + Session["Staff_Code"].ToString() + ",')) and ISNULL(t.ViewStatus,0) in('" + actionstatus + "')order by TapalInwardDate";
            query = query + " select * from lettertbl where Memtype='5'";
        }
        else
        {
            query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus,DDNo,t.BankCode,BranchName,FromName,MoveTo,TapalMovementsID,ToDeptCode,ActionDesc,ActionStatus,CONVERT(varchar(10),TapalInwardTime,108)as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,type,TapalSubject,Priority,TapalType from TapalInward t,Registration r,staffmaster s where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and  MemType ='" + memtype + "' and type='" + tt + "' and ISNULL(t.ViewStatus,0) in('" + actionstatus + "') order by TapalInwardDate";
            query = query + " select * from lettertbl where Memtype='5'";
        }
        if (query == "")
        {
            Fpspread5.Sheets[0].Visible = false;
            //div5.Visible = false;
            lbl_err_indi.Visible = true;
            lbl_err_indi.Text = "Kindly Select All List ";
            div_report.Visible = false;
            btn_del_stud.Visible = false;
        }
        else
        {
            if (query != "")
            {
                ds = d2.select_method(query, hat, "Text");
                if (ds.Tables[0].Rows.Count == 0)
                {
                    Fpspread5.Sheets[0].Visible = false;
                    Fpspread5.Visible = false;
                    lbl_err_indi.Visible = true;
                    lbl_err_indi.Text = "No Records Found";
                    div_report.Visible = false;
                    pheaderfilter3.Visible = false;
                    pcolumnorder3.Visible = false;
                    btn_del_stud.Visible = false;
                }
                else
                {
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        lbl_err_indi.Visible = false;
                        for (int i = 0; i < cblcolumnorder3.Items.Count; i++)
                        {
                            if (cblcolumnorder3.Items[i].Selected == true)
                            {
                                hat4.Add(cblcolumnorder3.Items[i].Text, cblcolumnorder3.Items[i].Value);
                                string colvalue = cblcolumnorder3.Items[i].Text;
                                if (ItemList_indi.Contains(colvalue) == false)
                                {
                                    ItemList_indi.Add(cblcolumnorder3.Items[i].Text);
                                }
                                tborder3.Text = "";
                                for (int j = 0; j < ItemList_indi.Count; j++)
                                {
                                    tborder3.Text = tborder3.Text + ItemList_indi[j].ToString();
                                    tborder3.Text = tborder3.Text + "(" + (j + 1).ToString() + ")  ";
                                }
                            }
                            cblcolumnorder3.Items[0].Enabled = false;
                        }
                        if (ItemList_indi.Count == 0)
                        {
                            for (int i = 0; i < 3; i++)
                            {
                                cblcolumnorder3.Items[i].Selected = true;
                                hat4.Add(cblcolumnorder3.Items[i].Text, cblcolumnorder3.Items[i].Value);
                                string colvalue = cblcolumnorder3.Items[i].Text;
                                if (ItemList_indi.Contains(colvalue) == false)
                                {
                                    ItemList_indi.Add(cblcolumnorder3.Items[i].Text);
                                }
                                tborder3.Text = "";
                                for (int j = 0; j < ItemList_indi.Count; j++)
                                {
                                    tborder3.Text = tborder3.Text + ItemList_indi[j].ToString();
                                    tborder3.Text = tborder3.Text + "(" + (j + 1).ToString() + ")  ";
                                }
                            }
                        }
                        Fpspread5.Sheets[0].ColumnHeader.RowCount = 1;
                        Fpspread5.Sheets[0].ColumnCount = 4;
                        Fpspread5.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                        Fpspread5.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                        Fpspread5.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                        Fpspread5.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                        Fpspread5.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread5.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
                        Fpspread5.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                        Fpspread5.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                        Fpspread5.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                        Fpspread5.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread5.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Attachment";
                        Fpspread5.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                        Fpspread5.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                        Fpspread5.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                        Fpspread5.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread5.Sheets[0].ColumnHeader.Cells[0, 3].Text = "View Details";
                        Fpspread5.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                        Fpspread5.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                        Fpspread5.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                        Fpspread5.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                        FarPoint.Web.Spread.StyleInfo style2 = new FarPoint.Web.Spread.StyleInfo();
                        style2.Font.Size = 13;
                        style2.Font.Name = "Book Antiqua";
                        style2.Font.Bold = true;
                        style2.HorizontalAlign = HorizontalAlign.Center;
                        style2.ForeColor = Color.Black;
                        style2.BackColor = Color.AliceBlue;
                        Fpspread5.Sheets[0].PageSize = Fpspread5.Sheets[0].RowCount;
                        for (int i = 0; i < ItemList_indi.Count; i++)
                        {
                            string value1 = ItemList_indi[i].ToString();
                            int a = value1.Length;
                            Fpspread5.Sheets[0].ColumnCount++;
                            Fpspread5.Sheets[0].ColumnHeader.Cells[Fpspread5.Sheets[0].ColumnHeader.RowCount - 1, Fpspread5.Sheets[0].ColumnCount - 1].Text = ItemList_indi[i].ToString();
                            Fpspread5.Sheets[0].ColumnHeader.Cells[Fpspread5.Sheets[0].ColumnHeader.RowCount - 1, Fpspread5.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                            Fpspread5.Sheets[0].ColumnHeader.Cells[Fpspread5.Sheets[0].ColumnHeader.RowCount - 1, Fpspread5.Sheets[0].ColumnCount - 1].Font.Bold = true;
                            Fpspread5.Sheets[0].ColumnHeader.Cells[Fpspread5.Sheets[0].ColumnHeader.RowCount - 1, Fpspread5.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                        }
                        Fpspread5.Sheets[0].RowCount = 0;
                        DataView dv = new DataView();
                        for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                        {
                            Fpspread5.Sheets[0].RowCount++;
                            count++;
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].Text = count.ToString();
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["TapalMovementsID"]);
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                            string color1 = Convert.ToString(ds.Tables[0].Rows[i]["ViewStatus"]);
                            if (color1 == "True")
                            {
                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                            }
                            FarPoint.Web.Spread.CheckBoxCellType cb = new FarPoint.Web.Spread.CheckBoxCellType();
                            cb.AutoPostBack = true;
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].CellType = cb;
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                            FarPoint.Web.Spread.ButtonCellType btn_type = new FarPoint.Web.Spread.ButtonCellType();
                            btn_type.Text = "View";
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 3].CellType = btn_type;
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                            string getappno = d2.GetFunction("select FromName  from TapalInward  where FromName='" + Convert.ToString(ds.Tables[0].Rows[i]["FromName"]) + "'");
                            string date = Convert.ToString(ds.Tables[0].Rows[i]["TapalInwardDate"]);
                            string tapalpk = Convert.ToString(ds.Tables[0].Rows[i]["TapalMovementsID"]);
                            string[] splitdate = date.Split('/');
                            DateTime dnew = Convert.ToDateTime(splitdate[1] + "/" + splitdate[0] + "/" + splitdate[2]);
                            if (ds.Tables[1].Rows.Count > 0)
                            {
                                ds.Tables[1].DefaultView.RowFilter = "MemCode='" + getappno + "' and TapalInwardFk='" + tapalpk + "' and date='" + dnew.ToString("MM/dd/yyyy") + "'";
                                dv = ds.Tables[1].DefaultView;
                                if (dv.Count > 0)
                                {
                                    string imagetext = Convert.ToString(dv[0]["filename"]);
                                    Fpspread5.ActiveSheetView.Cells[Fpspread5.Sheets[0].RowCount - 1, 2].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                                    Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 2].Text = imagetext.ToString();
                                    Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(dv[0]["fileid"]);
                                }
                                else
                                {
                                    Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 2].Locked = true;
                                }
                            }
                            int c = 3;
                            string typevalue = "";
                            string movevalue = "";
                            string todeptsplit = "";
                            string todeptsplit1 = "";
                            string ccdeptsplit = "";
                            string ccdeptsplit1 = "";
                            string toindisplit = "";
                            string toindisplit1 = "";
                            string ccindisplit = "";
                            string ccindisplit1 = "";
                            string department_to = "";
                            string department_cc = "";
                            string staff_to = "";
                            string staff_cc = "";
                            string priorityvalue = "";
                            string modevalue = "";
                            string action = "";
                            string document = "";
                            string res_staff = "";
                            string paymenttype = "";
                            string bankname = "";
                            if (ItemList_indi.Count > 0 && hat4.Count > 0)
                            {
                                for (int j = 0; j < ItemList_indi.Count; j++)
                                {
                                    string k = Convert.ToString(ItemList_indi[j].ToString());
                                    string names = Convert.ToString(hat4[k].ToString());
                                    c++;
                                    string val = ds.Tables[0].Rows[i][names].ToString();
                                    if (names == "ResponseStaff")
                                    {
                                        if (val == "0" || val == "")
                                        {
                                            res_staff = "";
                                        }
                                        else
                                        {
                                            res_staff = getstaffname(val);
                                        }
                                    }
                                    if (names == "BankCode")
                                    {
                                        if (val != "")
                                        {
                                            bankname = gettextbank(val);
                                        }
                                        else
                                        {
                                            bankname = "";
                                        }
                                    }
                                    if (names == "ActionDesc")
                                    {
                                        if (val == "" || val == "0")
                                        {
                                            document = "";
                                        }
                                        else
                                        {
                                            document = gettextpop(val);
                                        }
                                    }
                                    if (names == "ActionStatus")
                                    {
                                        if (val == "0" || val == "")
                                        {
                                            action = "";
                                        }
                                        else
                                        {
                                            action = gettextpopact(val);
                                        }
                                    }
                                    if (names == "MoveTo")
                                    {
                                        if (val == "1")
                                        {
                                            movevalue = "Department";
                                        }
                                        if (val == "2")
                                        {
                                            movevalue = "Individual";
                                        }
                                        if (val == "3")
                                        {
                                            movevalue = "Department and Individual";
                                        }
                                    }
                                    if (names == "ToDeptCode")
                                    {
                                        if (val.Trim() == "0" || val.Trim() == "")
                                        {
                                            department_to = "";
                                        }
                                        else
                                        {
                                            string[] split = val.Split(',');
                                            if (split.Length == 1)
                                            {
                                                department_to = getdepartment(val);
                                            }
                                            else
                                            {
                                                todeptsplit = getdepartment(split[0]);
                                                todeptsplit1 = getdepartment(split[1]);
                                                department_to = todeptsplit + "," + todeptsplit1;
                                            }
                                        }
                                    }
                                    if (names == "PaymentType")
                                    {
                                        if (val.Trim() == "0")
                                        {
                                            paymenttype = "Cheque";
                                        }
                                        else if (val.Trim() == "1")
                                        {
                                            paymenttype = "DD";
                                        }
                                        else
                                        {
                                            paymenttype = "";
                                        }
                                    }
                                    if (names == "ToCCDeptCode")
                                    {
                                        if (val.Trim() == "0" || val.Trim() == "")
                                        {
                                            department_cc = "";
                                        }
                                        else
                                        {
                                            string[] split1 = val.Split(',');
                                            if (split1.Length == 1)
                                            {
                                                department_cc = getdepartment(val);
                                            }
                                            else
                                            {
                                                ccdeptsplit = getdepartment(split1[0]);
                                                ccdeptsplit1 = getdepartment(split1[1]);
                                                department_cc = ccdeptsplit + "," + ccdeptsplit1;
                                            }
                                        }
                                    }
                                    if (names == "individual_code")
                                    {
                                        if (val.Trim() == "0" || val.Trim() == "")
                                        {
                                            staff_to = "";
                                        }
                                        else
                                        {
                                            string[] split = val.Split(',');
                                            if (split.Length == 1)
                                            {
                                                staff_to = getstaffname(val);
                                            }
                                            else
                                            {
                                                toindisplit = getstaffname(split[0]);
                                                toindisplit1 = getstaffname(split[1]);
                                                staff_to = toindisplit + "," + toindisplit1;
                                            }
                                        }
                                    }
                                    if (names == "ccindividual_code")
                                    {
                                        if (val.Trim() == "0" || val.Trim() == "")
                                        {
                                            staff_cc = "";
                                        }
                                        else
                                        {
                                            string[] split1 = val.Split(',');
                                            if (split1.Length == 1)
                                            {
                                                staff_cc = getstaffname(val);
                                            }
                                            else
                                            {
                                                ccindisplit = getstaffname(split1[0]);
                                                ccindisplit1 = getstaffname(split1[1]);
                                                staff_cc = ccindisplit + "," + ccindisplit1;
                                            }
                                        }
                                    }
                                    if (names == "Priority")
                                    {
                                        if (val.Trim() == "0")
                                        {
                                            priorityvalue = "";
                                        }
                                        else
                                        {
                                            priorityvalue = gettext(val);
                                        }
                                    }
                                    if (names == "TapalType")
                                    {
                                        if (val.Trim() == "0")
                                        {
                                            modevalue = "";
                                        }
                                        else
                                        {
                                            modevalue = gettext1(val);
                                        }
                                    }
                                    if (names == "type")
                                        if (val == "False")
                                        {
                                            typevalue = Convert.ToString("IN");
                                        }
                                    if (val == "True")
                                    {
                                        typevalue = Convert.ToString("OUT");
                                    }
                                    FarPoint.Web.Spread.TextCellType textcel_type = new FarPoint.Web.Spread.TextCellType();
                                    Fpspread5.Sheets[0].Columns[2].CellType = textcel_type;
                                    if (names == "MoveTo")
                                    {
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Text = movevalue;
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                    }
                                    else if (names == "ResponseStaff")
                                    {
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Text = res_staff;
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                    }
                                    else if (names == "BankCode")
                                    {
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Text = bankname;
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                    }
                                    else if (names == "PaymentType")
                                    {
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Text = paymenttype;
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                    }
                                    else if (names == "ActionDesc")
                                    {
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Text = document;
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                    }
                                    else if (names == "ActionStatus")
                                    {
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Text = action;
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                    }
                                    else if (names == "ToDeptCode")
                                    {
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Text = department_to;
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                    }
                                    else if (names == "ToCCDeptCode")
                                    {
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Text = department_cc;
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                    }
                                    else if (names == "individual_code")
                                    {
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Text = staff_to;
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                    }
                                    else if (names == "ccindividual_code")
                                    {
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Text = staff_cc;
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                    }
                                    else if (names == "Priority")
                                    {
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Text = priorityvalue;
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                    }
                                    else if (names == "TapalType")
                                    {
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Text = modevalue;
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                    }
                                    else if (names == "type")
                                    {
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Text = typevalue;
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Column.Width = 50;
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                    }
                                    else
                                    {
                                        if (names == "RefNo")
                                        {
                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                        }
                                        else
                                        {
                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Left;
                                        }
                                        if (names == "TapalInwardDate")
                                        {
                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                        }
                                        else if (names == "TapalInwardTime")
                                        {
                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Column.Width = 80;
                                        }
                                        else
                                        {
                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                    }
                                    Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Font.Name = "Book Antiqua";
                                    Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Font.Size = FontUnit.Medium;
                                    Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                    string color = Convert.ToString(ds.Tables[0].Rows[i]["ViewStatus"]);
                                    if (color == "True")
                                    {
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                    }
                                }
                            }
                        }
                        Fpspread5.Sheets[0].PageSize = Fpspread5.Sheets[0].RowCount;
                        //div5.Visible = true;
                        if (CheckBox_column3.Checked == true)
                        {
                            Fpspread5.Width = 900;
                            Fpspread5.Height = 420;
                        }
                        else
                        {
                            Fpspread5.Width = 740;
                            Fpspread5.Height = 420;
                        }
                        Fpspread5.Visible = true;
                        btn_del_stud.Visible = true;
                        pheaderfilter3.Visible = true;
                        pcolumnorder3.Visible = true;
                        div_report.Visible = true;
                    }
                }
            }
        }
        //  spread_indi();
        div_individual.Visible = true;
        div_staff.Visible = false;
        div_company.Visible = false;
        div_student.Visible = false;
        div_mag.Visible = false;
        div_others.Visible = false;
        div_parent.Visible = false;
        div_all.Visible = false;
    }

    public void imgbtn_magazine_Click(object sender, EventArgs e)
    {
        mag_search();
    }

    public void mag_search()
    {
        td_stud.BgColor = "white";
        td_staff.BgColor = "white";
        td_par.BgColor = "white";
        td_comp.BgColor = "white";
        td_indi.BgColor = "white";
        td_mag.BgColor = "#c4c4c4";
        td_othr.BgColor = "white";
        td_search.BgColor = "white";
        lbl_norec.Visible = true;
        Fpspread6.Sheets[0].Visible = true;
        FarPoint.Web.Spread.StyleInfo darkstyle111 = new FarPoint.Web.Spread.StyleInfo();
        darkstyle111.BackColor = ColorTranslator.FromHtml("#0CA6CA");
        darkstyle111.ForeColor = Color.Black;
        darkstyle111.HorizontalAlign = HorizontalAlign.Center;
        Fpspread6.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle111;
        Fpspread6.Sheets[0].RowHeader.Visible = false;
        Fpspread6.CommandBar.Visible = false;
        Fpspread6.Sheets[0].AutoPostBack = false;
        Fpspread6.Sheets[0].RowCount = 0;
        string fromhr = Convert.ToString(ddl_hour.SelectedItem.Text);
        string frommm = Convert.ToString(ddl_minits.SelectedItem.Text);
        string fromday = Convert.ToString(ddl_timeformate.SelectedItem.Text);
        string tohr = Convert.ToString(ddl_endhour.SelectedItem.Text);
        string tomm = Convert.ToString(ddl_endminit.SelectedItem.Text);
        string today = Convert.ToString(ddl_endformate.SelectedItem.Text);
        string fromtime = fromhr + ":" + frommm + ":" + fromday;
        string Totime = tohr + ":" + tomm + ":" + today;
        string[] ay = txt_fromdate.Text.Split('/');
        string[] ay1 = txt_todate.Text.Split('/');
        int memtype = 6;
        DateTime dt = new DateTime();
        DateTime dt1 = new DateTime();
        dt = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
        dt1 = Convert.ToDateTime(ay1[1] + "/" + ay1[0] + "/" + ay1[2]);
        if (rdo_in.Checked == true)
        {
            tt = 0;
        }
        else
        {
            tt = 1;
        }
        string query = ""; string actionstatus = "";
        if (cbl_status.Items.Count > 0)
            actionstatus = Convert.ToString(getCblSelectedValue(cbl_status));
        if (actionstatus.Trim() == "")
            actionstatus = "0";
        if (Session["Staff_Code"] != null && Session["Staff_Code"] != "")
        {
            query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus,t.BankCode,BranchName,DDNo,MagazineName,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalMovementsID,MagazineType,ActionDesc,ActionStatus,MoveTo,CONVERT(varchar(10),TapalInwardTime,108)as TapalInwardTime,ToDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,ToCCDeptCode,individual_code,ccindividual_code,RefNo,type,Priority,TapalType,TapalSubject from TapalInward t,Registration r,staffmaster s where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and MemType ='" + memtype + "' and type='" + tt + "' and ((individual_code like '" + Session["Staff_Code"].ToString() + "%' or individual_code like '%" + Session["Staff_Code"].ToString() + ",') or (ccindividual_code like '" + Session["Staff_Code"].ToString() + "%' or ccindividual_code like '%" + Session["Staff_Code"].ToString() + ",')) and ISNULL(t.ViewStatus,0) in('" + actionstatus + "') order by TapalInwardDate";
            query = query + " select * from lettertbl where Memtype='6'";
        }
        else
        {
            query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus,DDNo,t.BankCode,BranchName,MagazineName,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalMovementsID,MagazineType,ActionDesc,ActionStatus,MoveTo,CONVERT(varchar(10),TapalInwardTime,108)as TapalInwardTime,ToDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,ToCCDeptCode,individual_code,ccindividual_code,RefNo,type,Priority,TapalType,TapalSubject from TapalInward t,Registration r,staffmaster s where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and MemType ='" + memtype + "' and type='" + tt + "' and ISNULL(t.ViewStatus,0) in('" + actionstatus + "') order by TapalInwardDate";
            query = query + " select * from lettertbl where Memtype='6'";
        }
        if (query == "")
        {
            Fpspread6.Sheets[0].Visible = false;
            //div6.Visible = false;
            lbl_err_mag.Visible = true;
            lbl_err_mag.Text = "Kindly Select All List ";
            div_report.Visible = false;
            btn_del_stud.Visible = false;
        }
        else
        {
            if (query != "")
            {
                ds = d2.select_method(query, hat, "Text");
                if (ds.Tables[0].Rows.Count == 0)
                {
                    Fpspread6.Sheets[0].Visible = false;
                    Fpspread6.Visible = false;
                    lbl_err_mag.Visible = true;
                    lbl_err_mag.Text = "No Records Found";
                    div_report.Visible = false;
                    pheaderfilter4.Visible = false;
                    pcolumnorder4.Visible = false;
                    btn_del_stud.Visible = false;
                }
                else
                {
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        lbl_err_mag.Visible = false;
                        for (int i = 0; i < cblcolumnorder4.Items.Count; i++)
                        {
                            if (cblcolumnorder4.Items[i].Selected == true)
                            {
                                hat5.Add(cblcolumnorder4.Items[i].Text, cblcolumnorder4.Items[i].Value);
                                string colvalue = cblcolumnorder4.Items[i].Text;
                                if (ItemList_mag.Contains(colvalue) == false)
                                {
                                    ItemList_mag.Add(cblcolumnorder4.Items[i].Text);
                                }
                                tborder4.Text = "";
                                for (int j = 0; j < ItemList_mag.Count; j++)
                                {
                                    tborder4.Text = tborder4.Text + ItemList_mag[j].ToString();
                                    tborder4.Text = tborder4.Text + "(" + (j + 1).ToString() + ")  ";
                                }
                            }
                            cblcolumnorder4.Items[0].Enabled = false;
                        }
                        if (ItemList_mag.Count == 0)
                        {
                            for (int i = 0; i < 3; i++)
                            {
                                cblcolumnorder4.Items[i].Selected = true;
                                hat5.Add(cblcolumnorder4.Items[i].Text, cblcolumnorder4.Items[i].Value);
                                string colvalue = cblcolumnorder4.Items[i].Text;
                                if (ItemList_mag.Contains(colvalue) == false)
                                {
                                    ItemList_mag.Add(cblcolumnorder4.Items[i].Text);
                                }
                                tborder4.Text = "";
                                for (int j = 0; j < ItemList_mag.Count; j++)
                                {
                                    tborder4.Text = tborder4.Text + ItemList_mag[j].ToString();
                                    tborder4.Text = tborder4.Text + "(" + (j + 1).ToString() + ")  ";
                                }
                            }
                        }
                        Fpspread6.Sheets[0].ColumnHeader.RowCount = 1;
                        Fpspread6.Sheets[0].ColumnCount = 4;
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Attachment";
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 3].Text = "View Details";
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                        FarPoint.Web.Spread.StyleInfo style2 = new FarPoint.Web.Spread.StyleInfo();
                        style2.Font.Size = 15;
                        style2.Font.Name = "Book Antiqua";
                        style2.Font.Bold = true;
                        style2.HorizontalAlign = HorizontalAlign.Center;
                        style2.ForeColor = Color.Black;
                        style2.BackColor = Color.AliceBlue;
                        Fpspread6.Sheets[0].PageSize = Fpspread6.Sheets[0].RowCount;
                        for (int i = 0; i < ItemList_mag.Count; i++)
                        {
                            string value1 = ItemList_mag[i].ToString();
                            int a = value1.Length;
                            Fpspread6.Sheets[0].ColumnCount++;
                            Fpspread6.Sheets[0].ColumnHeader.Cells[Fpspread6.Sheets[0].ColumnHeader.RowCount - 1, Fpspread6.Sheets[0].ColumnCount - 1].Text = ItemList_mag[i].ToString();
                            Fpspread6.Sheets[0].ColumnHeader.Cells[Fpspread6.Sheets[0].ColumnHeader.RowCount - 1, Fpspread6.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                            Fpspread6.Sheets[0].ColumnHeader.Cells[Fpspread6.Sheets[0].ColumnHeader.RowCount - 1, Fpspread6.Sheets[0].ColumnCount - 1].Font.Bold = true;
                            Fpspread6.Sheets[0].ColumnHeader.Cells[Fpspread6.Sheets[0].ColumnHeader.RowCount - 1, Fpspread6.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                        }
                        Fpspread6.Sheets[0].RowCount = 0;
                        DataView dv = new DataView();
                        for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                        {
                            Fpspread6.Sheets[0].RowCount++;
                            count++;
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 0].Text = count.ToString();
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["TapalMovementsID"]);
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                            string color1 = Convert.ToString(ds.Tables[0].Rows[i]["ViewStatus"]);
                            if (color1 == "True")
                            {
                                Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                            }
                            FarPoint.Web.Spread.CheckBoxCellType cb = new FarPoint.Web.Spread.CheckBoxCellType();
                            cb.AutoPostBack = true;
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 1].CellType = cb;
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                            FarPoint.Web.Spread.ButtonCellType btn_type = new FarPoint.Web.Spread.ButtonCellType();
                            btn_type.Text = "View";
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 3].CellType = btn_type;
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                            string getappno = d2.GetFunction("select MagazineName  from TapalInward  where MagazineName='" + Convert.ToString(ds.Tables[0].Rows[i]["MagazineName"]) + "'");
                            string date = Convert.ToString(ds.Tables[0].Rows[i]["TapalInwardDate"]);
                            string tapalpk = Convert.ToString(ds.Tables[0].Rows[i]["TapalMovementsID"]);
                            string[] splitdate = date.Split('/');
                            DateTime dnew = Convert.ToDateTime(splitdate[1] + "/" + splitdate[0] + "/" + splitdate[2]);
                            if (ds.Tables[1].Rows.Count > 0)
                            {
                                ds.Tables[1].DefaultView.RowFilter = "MemCode='" + getappno + "' and TapalInwardFk='" + tapalpk + "' and date='" + dnew.ToString("MM/dd/yyyy") + "'";
                                dv = ds.Tables[1].DefaultView;
                                if (dv.Count > 0)
                                {
                                    string imagetext = Convert.ToString(dv[0]["filename"]);
                                    Fpspread6.ActiveSheetView.Cells[Fpspread6.Sheets[0].RowCount - 1, 2].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                                    Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 2].Text = imagetext.ToString();
                                    Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(dv[0]["fileid"]);
                                }
                                else
                                {
                                    Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 2].Locked = true;
                                }
                            }
                            int c = 3;
                            string typevalue = "";
                            string movevalue = "";
                            string todeptsplit = "";
                            string todeptsplit1 = "";
                            string ccdeptsplit = "";
                            string ccdeptsplit1 = "";
                            string toindisplit = "";
                            string toindisplit1 = "";
                            string ccindisplit = "";
                            string ccindisplit1 = "";
                            string department_to = "";
                            string department_cc = "";
                            string staff_to = "";
                            string staff_cc = "";
                            string priorityvalue = "";
                            string modevalue = "";
                            string action = "";
                            string document = "";
                            string res_staff = "";
                            string paymenttype = "";
                            string bankname = "";
                            if (ItemList_mag.Count > 0 && hat5.Count > 0)
                            {
                                for (int j = 0; j < ItemList_mag.Count; j++)
                                {
                                    string k = Convert.ToString(ItemList_mag[j].ToString());
                                    string names = Convert.ToString(hat5[k].ToString());
                                    c++;
                                    string val = ds.Tables[0].Rows[i][names].ToString();
                                    if (names == "ResponseStaff")
                                    {
                                        if (val == "0" || val == "")
                                        {
                                            res_staff = "";
                                        }
                                        else
                                        {
                                            res_staff = getstaffname(val);
                                        }
                                    }
                                    if (names == "ActionDesc")
                                    {
                                        if (val == "" || val == "0")
                                        {
                                            document = "";
                                        }
                                        else
                                        {
                                            document = gettextpop(val);
                                        }
                                    }
                                    if (names == "PaymentType")
                                    {
                                        if (val.Trim() == "0")
                                        {
                                            paymenttype = "Cheque";
                                        }
                                        else if (val.Trim() == "1")
                                        {
                                            paymenttype = "DD";
                                        }
                                        else
                                        {
                                            paymenttype = "";
                                        }
                                    }
                                    if (names == "BankCode")
                                    {
                                        if (val != "")
                                        {
                                            bankname = gettextbank(val);
                                        }
                                        else
                                        {
                                            bankname = "";
                                        }
                                    }
                                    if (names == "ActionStatus")
                                    {
                                        if (val == "0" || val == "")
                                        {
                                            action = "";
                                        }
                                        else
                                        {
                                            action = gettextpopact(val);
                                        }
                                    }
                                    if (names == "MoveTo")
                                    {
                                        if (val == "1")
                                        {
                                            movevalue = "Department";
                                        }
                                        if (val == "2")
                                        {
                                            movevalue = "Individual";
                                        }
                                        if (val == "3")
                                        {
                                            movevalue = "Department and Individual";
                                        }
                                    }
                                    if (names == "ToDeptCode")
                                    {
                                        if (val.Trim() == "0" || val.Trim() == "")
                                        {
                                            department_to = "";
                                        }
                                        else
                                        {
                                            string[] split = val.Split(',');
                                            if (split.Length == 1)
                                            {
                                                department_to = getdepartment(val);
                                            }
                                            else
                                            {
                                                todeptsplit = getdepartment(split[0]);
                                                todeptsplit1 = getdepartment(split[1]);
                                                department_to = todeptsplit + "," + todeptsplit1;
                                            }
                                        }
                                    }
                                    if (names == "ToCCDeptCode")
                                    {
                                        if (val.Trim() == "0" || val.Trim() == "")
                                        {
                                            department_cc = "";
                                        }
                                        else
                                        {
                                            string[] split1 = val.Split(',');
                                            if (split1.Length == 1)
                                            {
                                                department_cc = getdepartment(val);
                                            }
                                            else
                                            {
                                                ccdeptsplit = getdepartment(split1[0]);
                                                ccdeptsplit1 = getdepartment(split1[1]);
                                                department_cc = ccdeptsplit + "," + ccdeptsplit1;
                                            }
                                        }
                                    }
                                    if (names == "individual_code")
                                    {
                                        if (val.Trim() == "0" || val.Trim() == "")
                                        {
                                            staff_to = "";
                                        }
                                        else
                                        {
                                            string[] split = val.Split(',');
                                            if (split.Length == 1)
                                            {
                                                staff_to = getstaffname(val);
                                            }
                                            else
                                            {
                                                toindisplit = getstaffname(split[0]);
                                                toindisplit1 = getstaffname(split[1]);
                                                staff_to = toindisplit + "," + toindisplit1;
                                            }
                                        }
                                    }
                                    if (names == "ccindividual_code")
                                    {
                                        if (val.Trim() == "0" || val.Trim() == "")
                                        {
                                            staff_cc = "";
                                        }
                                        else
                                        {
                                            string[] split1 = val.Split(',');
                                            if (split1.Length == 1)
                                            {
                                                staff_cc = getstaffname(val);
                                            }
                                            else
                                            {
                                                ccindisplit = getstaffname(split1[0]);
                                                ccindisplit1 = getstaffname(split1[1]);
                                                staff_cc = ccindisplit + "," + ccindisplit1;
                                            }
                                        }
                                    }
                                    if (names == "Priority")
                                    {
                                        if (val.Trim() == "0")
                                        {
                                            priorityvalue = "";
                                        }
                                        else
                                        {
                                            priorityvalue = gettext(val);
                                        }
                                    }
                                    if (names == "TapalType")
                                    {
                                        if (val.Trim() == "0")
                                        {
                                            modevalue = "";
                                        }
                                        else
                                        {
                                            modevalue = gettext1(val);
                                        }
                                    }
                                    if (names == "type")
                                        if (val == "False")
                                        {
                                            typevalue = Convert.ToString("IN");
                                        }
                                    if (val == "True")
                                    {
                                        typevalue = Convert.ToString("OUT");
                                    }
                                    FarPoint.Web.Spread.TextCellType textcel_type = new FarPoint.Web.Spread.TextCellType();
                                    Fpspread6.Sheets[0].Columns[2].CellType = textcel_type;
                                    if (names == "MoveTo")
                                    {
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Text = movevalue;
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                    }
                                    else if (names == "ResponseStaff")
                                    {
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Text = res_staff;
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                    }
                                    else if (names == "BankCode")
                                    {
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Text = bankname;
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                    }
                                    else if (names == "ActionDesc")
                                    {
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Text = document;
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                    }
                                    else if (names == "PaymentType")
                                    {
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Text = paymenttype;
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                    }
                                    else if (names == "ActionStatus")
                                    {
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Text = action;
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                    }
                                    else if (names == "ToDeptCode")
                                    {
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Text = department_to;
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                    }
                                    else if (names == "ToCCDeptCode")
                                    {
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Text = department_cc;
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                    }
                                    else if (names == "individual_code")
                                    {
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Text = staff_to;
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                    }
                                    else if (names == "ccindividual_code")
                                    {
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Text = staff_cc;
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                    }
                                    else if (names == "Priority")
                                    {
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Text = priorityvalue;
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                    }
                                    else if (names == "TapalType")
                                    {
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Text = modevalue;
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                    }
                                    else if (names == "type")
                                    {
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Text = typevalue;
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Column.Width = 50;
                                    }
                                    else
                                    {
                                        if (names == "RefNo")
                                        {
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                        }
                                        else
                                        {
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Left;
                                        }
                                        if (names == "TapalInwardDate")
                                        {
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                        }
                                        else if (names == "TapalInwardTime")
                                        {
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Column.Width = 80;
                                        }
                                        else
                                        {
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                    }
                                    Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Font.Name = "Book Antiqua";
                                    Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Font.Size = FontUnit.Medium;
                                    Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                    string color = Convert.ToString(ds.Tables[0].Rows[i]["ViewStatus"]);
                                    if (color == "True")
                                    {
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                    }
                                }
                            }
                        }
                        Fpspread6.Sheets[0].PageSize = Fpspread6.Sheets[0].RowCount;
                        //div6.Visible = true;
                        Fpspread6.Width = 900;
                        Fpspread6.Height = 420;
                        pheaderfilter4.Visible = true;
                        btn_del_stud.Visible = true;
                        pcolumnorder4.Visible = true;
                        Fpspread6.Visible = true;
                        div_report.Visible = true;
                    }
                }
            }
        }
        // spread_magazine();
        div_mag.Visible = true;
        div_student.Visible = false;
        div_staff.Visible = false;
        div_parent.Visible = false;
        div_individual.Visible = false;
        div_company.Visible = false;
        div_others.Visible = false;
        div_all.Visible = false;
    }

    public void imgbtn_others_Click(object sender, EventArgs e)
    {

        try
        {
            string linkname = "";
            bool entryflag = false;

            linkname = "Letter Inward others";
            int count = 0;
            string selcol = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + collegecode1 + "'";
            ds.Clear();
            ds = d2.select_method_wo_parameter(selcol, "Text");
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                string value = Convert.ToString(ds.Tables[0].Rows[0]["LinkValue"]);
                string[] value1 = value.Split(',');
                if (value1.Length > 0)
                {
                    for (int i = 0; i < value1.Length; i++)
                    {
                        string val = value1[i].ToString();
                        for (int k = 0; k < cblcolumnorder5.Items.Count; k++)
                        {
                            if (val == cblcolumnorder5.Items[k].Value)
                            {
                                cblcolumnorder5.Items[k].Selected = true;
                                count++;
                            }
                        }
                    }
                    if (count == cblcolumnorder5.Items.Count)
                        CheckBox_column.Checked = true;
                    else
                        CheckBox_column.Checked = false;
                }
            }
            loadcolumns_others(sender, e);
            othr_search();//delsiotherref
        }
        catch (Exception ex)
        {

        }


    }

    public void othr_search()
    {
        try
        {
            Iscompleted.Checked = false;
            Iscompleted.Visible = false;
            ViewState["staff"] = 7;
            loaddesc();
            string applid = string.Empty;
            string RequestStaffApp_No = string.Empty;
            applid = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            RequestStaffApp_No = d2.GetFunction("select ReqStaffAppNo  from RQ_RequestHierarchy where RequestType=12 and ReqAppStaffAppNo in('" + applid + "')");
            td_stud.BgColor = "white";
            td_staff.BgColor = "white";
            td_par.BgColor = "white";
            td_comp.BgColor = "white";
            td_indi.BgColor = "white";
            td_mag.BgColor = "white";
            td_othr.BgColor = "#c4c4c4";
            td_search.BgColor = "white";
            lbl_norec.Visible = false;
            Fpspread7.Sheets[0].Visible = true;
            string fromhr = Convert.ToString(ddl_hour.SelectedItem.Text);
            string frommm = Convert.ToString(ddl_minits.SelectedItem.Text);
            string fromday = Convert.ToString(ddl_timeformate.SelectedItem.Text);
            string tohr = Convert.ToString(ddl_endhour.SelectedItem.Text);
            string tomm = Convert.ToString(ddl_endminit.SelectedItem.Text);
            string today = Convert.ToString(ddl_endformate.SelectedItem.Text);
            string fromtime = fromhr + ":" + frommm + ":" + fromday;
            string Totime = tohr + ":" + tomm + ":" + today;
            Fpspread7.Sheets[0].RowHeader.Visible = false;
            Fpspread7.CommandBar.Visible = false;
            Fpspread7.Sheets[0].AutoPostBack = false;
            Fpspread7.Sheets[0].RowCount = 0;
            Fpspread7.Sheets[0].ColumnHeader.RowCount = 1;
            Fpspread7.Sheets[0].ColumnCount = 4;
            FarPoint.Web.Spread.StyleInfo darkstyle111 = new FarPoint.Web.Spread.StyleInfo();
            darkstyle111.BackColor = ColorTranslator.FromHtml("#0CA6CA");
            darkstyle111.ForeColor = Color.Black;
            darkstyle111.HorizontalAlign = HorizontalAlign.Center;
            Fpspread7.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle111;
            string[] ay = txt_fromdate.Text.Split('/');
            string[] ay1 = txt_todate.Text.Split('/');
            int memtype = 7;
            DateTime dt = new DateTime();
            DateTime dt1 = new DateTime();
            dt = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
            dt1 = Convert.ToDateTime(ay1[1] + "/" + ay1[0] + "/" + ay1[2]);
            if (rdo_in.Checked == true)
            {
                tt = 0;
            }
            else
            {
                tt = 1;
            }
            string query = "";
            string ddlpriority = Convert.ToString(ddl_stf_docpri.SelectedItem.Value);

            string approvalstatus = string.Empty;
            if (rdo_req.Checked == true)
                approvalstatus = "0";
            if (rdo_approve.Checked == true)
                approvalstatus = "1";
            string actionstatus = "";
            if (cbl_status.Items.Count > 0)
                actionstatus = Convert.ToString(getCblSelectedValue(cbl_status));
            //if (actionstatus.Trim() == "")
            //    actionstatus = "0";
            if (cbtimebased.Checked == false)
            {

                //if (ddlpriority != "0")
                //{
                //    if (Session["Staff_Code"] != null && Session["Staff_Code"] != "")
                //    {
                //        query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,t.BankCode,BranchName,ViewStatus,DDNo,FromName,MoveTo,ToDeptCode,TapalMovementsID,ActionDesc,ActionStatus,ToCCDeptCode,individual_code,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,CONVERT(varchar(10),TapalInwardTime,108)as TapalInwardTime,ccindividual_code,RefNo,type,Priority,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalType,TapalSubject from TapalInward t,Registration r,staffmaster s where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and  MemType ='" + memtype + "' and type='" + tt + "' and Priority='" + ddlpriority + "' and ((individual_code like '" + Session["Staff_Code"].ToString() + "%' or individual_code like '%" + Session["Staff_Code"].ToString() + ",') or (ccindividual_code like '" + Session["Staff_Code"].ToString() + "%' or ccindividual_code like '%" + Session["Staff_Code"].ToString() + ",')) and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') order by TapalInwardDate";
                //        query = query + " select * from lettertbl where Memtype='7'";
                //    }
                //    else
                //    {
                //        query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,t.BankCode,BranchName,ViewStatus,DDNo,FromName,MoveTo,ToDeptCode,TapalMovementsID,ActionDesc,ActionStatus,ToCCDeptCode,individual_code,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,CONVERT(varchar(10),TapalInwardTime,108)as TapalInwardTime,ccindividual_code,RefNo,type,Priority,TapalType,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalSubject from TapalInward t,Registration r,staffmaster s where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and  MemType ='" + memtype + "' and type='" + tt + "' and Priority='" + ddlpriority + "' and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') order by TapalInwardDate";
                //        query = query + " select * from lettertbl where Memtype='7'";
                //    }
                //}
                //else
                //{
                if (Session["Staff_Code"] != null && Session["Staff_Code"] != "")
                {

                    if (Convert.ToString(RequestStaffApp_No) != "" && Convert.ToString(RequestStaffApp_No) != "0")
                    {

                        query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,t.BankCode,BranchName,ViewStatus,DDNo,FromName,MoveTo,ToDeptCode,TapalMovementsID,t.TapalCode,ActionDesc,fd.ActionStatus,ForwardPerson,agreestatus,finalcompletioncheck,ToCCDeptCode,individual_code,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,CONVERT(varchar(10),TapalInwardTime,108)as TapalInwardTime,ccindividual_code,RefNo,type,Priority,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalType,TapalSubject,datetime from staffmaster s,RQ_RequestHierarchy rh,TapalInward t left join letterForwardDetails fd on fd.tapalmovementid=t.tapalmovementsid  where CONVERT(VARCHAR(11),rh.ReqStaffAppNo)=t.ToDeptCode and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and  MemType ='" + memtype + "' and type='" + tt + "' and rh.ReqAppStaffAppNo='" + applid + "' and  rh.RequestType='12' and isnull(t.ReqAppStatus,0)=" + approvalstatus + "";


                        if (rdo_req.Checked == true)
                        {
                            query += "  and isnull(t.ReqApproveStage,0)=isnull(rh.ReqApproveStage,0)-1";

                        }
                        if (ddlpriority != "0")
                        {
                            query += " and Priority ='" + ddlpriority + "'";

                        }
                        if (actionstatus != "")//&& actionstatus != "0"
                        {
                            query += " and ISNULL(fd.ActionStatus,0) in('" + actionstatus + "')";
                        }
                        else
                        {
                            query += " and ISNULL(fd.ActionStatus,0) in('0','1')";
                        }

                        if (cb_finallyCom.Checked == true)
                        {
                            query += " and finalcompletioncheck='1'";
                        }
                        query = query + " order by TapalInwardDate";
                        query = query + " select * from lettertbl where Memtype='7'";

                        if (approvalstatus == "1")
                        {
                            txt_viewdetails3.Visible = false;
                            btn_add1.Visible = false;
                            btn_ad.Visible = false;

                            ddl_viewdetails1.Visible = false;
                            btn_min.Visible = false;
                            ddl_viewdetails2.Visible = false;

                            btn_min1.Visible = false;
                            lbl_doc_state.Visible = false;
                            lbl_remarks.Visible = false;
                            lbl_remrks.Visible = false;
                            txt_viewdetails4.Visible = false;
                            txt_receiveperson.Visible = false;
                            btn_question.Visible = false;
                            btn_received_question.Visible = false;
                            lbl_receiveperson.Visible = false;
                            lbl_persnname.Visible = false;

                            lbl_popviewdate.Visible = false;
                            txt_popviewdate.Visible = false;
                            lbl_view_time.Visible = false;
                            txt_viewtime.Visible = false;

                            btn_popexit.Visible = false;
                            btn_pop1go.Visible = false;
                        }
                        if (approvalstatus == "0")
                        {
                            txt_viewdetails4.Visible = true;
                            txt_receiveperson.Visible = true;
                            btn_question.Visible = true;
                            btn_received_question.Visible = true;
                            lbl_receiveperson.Visible = true;
                            lbl_persnname.Visible = true;
                            btn_pop1go.Text = "Forward";
                        }

                        txt_viewdetails3.Visible = false;
                        btn_add1.Visible = false;
                        btn_ad.Visible = false;

                        ddl_viewdetails1.Visible = false;
                        btn_min.Visible = false;
                        ddl_viewdetails2.Visible = false;

                        btn_min1.Visible = false;
                        lbl_doc_state.Visible = false;
                        lbl_remarks.Visible = false;
                        lbl_remrks.Visible = false;
                    }
                    else
                    {
                        //query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus,t.BankCode,BranchName, MoveTo,ActionDesc,ActionStatus,DDNo,FromName,Priority,PaymentType,TapalMovementsID,ToDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,ccindividual_code,RefNo,TapalSubject,type,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,Priority,TapalType,TapalType,isnull(t.ReqApproveStage,0)ReqApproveStage ,isnull(t.ReqAppStatus,0)ReqAppStatus , isnull(t.ReqApprovedStaffAppNo,0)ReqApprovedStaffAppNo from TapalInward t,staffmaster s,hr_privilege hr where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and MemType ='" + memtype + "' and type='" + tt + "' and hr.dept_code=t.ToDeptCode and isnull(t.ReqAppStatus,0)=1 and(isnull(individual_code,0)='" + staffcodesession + "' or isnull(ccindividual_code,0)='" + staffcodesession + "')  order by TapalInwardDate ";
                        if (approvalstatus == "1")
                        {
                            query = " select distinct  ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ViewStatus,t.BankCode,BranchName,MoveTo,ActionDesc,fd.ActionStatus,ForwardPerson,agreestatus,DDNo,FromName,TapalMovementsID,ToDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,t.TapalCode,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,ccindividual_code,RefNo,TapalSubject,type,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,Priority,TapalType,TapalType,isnull(t.ReqApproveStage,0)ReqApproveStage ,isnull(t.ReqAppStatus,0)ReqAppStatus , isnull(t.ReqApprovedStaffAppNo,0)ReqApprovedStaffAppNo from TapalInward t,staffmaster s,hr_privilege hr,letterForwardDetails fd where fd.tapalmovementid=t.tapalmovementsid and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and MemType ='" + memtype + "' and type='" + tt + "' and hr.dept_code=t.ToDeptCode and isnull(t.ReqAppStatus,0)=1 and fd.forwardperson in('" + staffcodesession + "')";
                            if (ddlpriority != "0")
                            {
                                query += " and Priority ='" + ddlpriority + "'";
                            }
                            if (actionstatus != "")//&& actionstatus != "0"
                            {
                                query += " and ISNULL(fd.ActionStatus,0) in('" + actionstatus + "')";
                            }
                            else
                            {
                                query += " and ISNULL(fd.ActionStatus,0) in('0','1')";
                            }
                            query = query + " order by TapalInwardDate";
                            query = query + " select * from lettertbl where Memtype='7'";
                            txt_viewdetails4.Visible = false;
                            txt_receiveperson.Visible = false;
                            btn_question.Visible = false;
                            btn_received_question.Visible = false;
                            lbl_receiveperson.Visible = false;
                            lbl_persnname.Visible = false;
                        }
                    }
                    //and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') order by TapalInwardDate";
                    //query = query + " select * from lettertbl where Memtype='7'";
                }
                else
                {
                    query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,t.BankCode,BranchName,ViewStatus,DDNo,FromName,MoveTo,ToDeptCode,TapalMovementsID,ActionDesc,ActionStatus,ToCCDeptCode,individual_code,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,t.TapalCode,CONVERT(varchar(10),TapalInwardTime,108)as TapalInwardTime,ccindividual_code,RefNo,type,Priority,TapalType,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalSubject from TapalInward t,Registration r,staffmaster s where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and  MemType ='" + memtype + "' and type='" + tt + "' and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') order by TapalInwardDate";
                    query = query + " select * from lettertbl where Memtype='7'";
                }
                //}
            }
            if (cbtimebased.Checked == true)
            {
                if (ddlpriority != "0")
                {
                    if (Session["Staff_Code"] != null && Session["Staff_Code"] != "")
                    {
                        query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,Convert(varchar(11),TapalInwardTime,103) as Tapaltime,t.BankCode,BranchName,ViewStatus,DDNo,FromName,MoveTo,ToDeptCode,TapalMovementsID,t.TapalCode,ActionDesc,ActionStatus,ToCCDeptCode,individual_code,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,CONVERT(varchar(10),TapalInwardTime,108)as TapalInwardTime,ccindividual_code,RefNo,type,Priority,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalType,TapalSubject from TapalInward t,Registration r,staffmaster s where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and TapalInwardTime between '" + fromtime + "' and '" + Totime + "' and  MemType ='" + memtype + "' and type='" + tt + "' and Priority='" + ddlpriority + "' and ((individual_code like '" + Session["Staff_Code"].ToString() + "%' or individual_code like '%" + Session["Staff_Code"].ToString() + ",') or (ccindividual_code like '" + Session["Staff_Code"].ToString() + "%' or ccindividual_code like '%" + Session["Staff_Code"].ToString() + ",')) and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') order by TapalInwardDate";
                        query = query + " select * from lettertbl where Memtype='7'";
                    }
                    else
                    {
                        query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,Convert(varchar(11),TapalInwardTime,103) as Tapaltime,t.BankCode,BranchName,ViewStatus,DDNo,FromName,MoveTo,ToDeptCode,t.TapalCode,TapalMovementsID,ActionDesc,ActionStatus,ToCCDeptCode,individual_code,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,CONVERT(varchar(10),TapalInwardTime,108)as TapalInwardTime,ccindividual_code,RefNo,type,Priority,TapalType,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalSubject from TapalInward t,Registration r,staffmaster s where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and TapalInwardTime between '" + fromtime + "' and '" + Totime + "' and  MemType ='" + memtype + "' and type='" + tt + "' and Priority='" + ddlpriority + "' and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') order by TapalInwardDate";
                        query = query + " select * from lettertbl where Memtype='7'";
                    }
                }
                else
                {
                    if (Session["Staff_Code"] != null && Session["Staff_Code"] != "")
                    {
                        query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,Convert(varchar(11),TapalInwardTime,103) as Tapaltime,t.BankCode,BranchName,ViewStatus,DDNo,FromName,MoveTo,ToDeptCode,t.TapalCode,TapalMovementsID,ActionDesc,ActionStatus,ToCCDeptCode,individual_code,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,CONVERT(varchar(10),TapalInwardTime,108)as TapalInwardTime,ccindividual_code,RefNo,type,Priority,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalType,TapalSubject from TapalInward t,Registration r,staffmaster s where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and TapalInwardTime between '" + fromtime + "' and '" + Totime + "' and  MemType ='" + memtype + "' and type='" + tt + "' and ((individual_code like '" + Session["Staff_Code"].ToString() + "%' or individual_code like '%" + Session["Staff_Code"].ToString() + ",') or (ccindividual_code like '" + Session["Staff_Code"].ToString() + "%' or ccindividual_code like '%" + Session["Staff_Code"].ToString() + ",')) and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') order by TapalInwardDate";
                        query = query + " select * from lettertbl where Memtype='7'";
                    }
                    else
                    {
                        query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,Convert(varchar(11),TapalInwardTime,103) as Tapaltime,t.BankCode,BranchName,ViewStatus,DDNo,FromName,MoveTo,ToDeptCode,t.TapalCode,TapalMovementsID,ActionDesc,ActionStatus,ToCCDeptCode,individual_code,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,CONVERT(varchar(10),TapalInwardTime,108)as TapalInwardTime,ccindividual_code,RefNo,type,Priority,TapalType,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,TapalSubject from TapalInward t,Registration r,staffmaster s where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and TapalInwardTime between '" + fromtime + "' and '" + Totime + "'  and  MemType ='" + memtype + "' and type='" + tt + "' and ISNULL(t.ActionStatus,0) in('" + actionstatus + "') order by TapalInwardDate";
                        query = query + " select * from lettertbl where Memtype='7'";
                    }
                }
            }
            //ds = d2.select_method_wo_parameter(query, "Text");
            //ds1 = d2.select_method_wo_parameter(query, "Text");
            if (query == "")
            {
                Fpspread7.Sheets[0].Visible = false;
                // div7.Visible = false;
                lbl_err_other.Visible = true;
                lbl_err_other.Text = "Kindly Select All List ";
                div_report.Visible = false;
                btn_del_stud.Visible = false;
            }
            else
            {
                if (query != "")
                {
                    ds = d2.select_method(query, hat, "Text");
                    ds1 = d2.select_method(query, hat, "Text");
                    if (ds.Tables[0].Rows.Count == 0)
                    {
                        Fpspread7.Sheets[0].Visible = false;
                        Fpspread7.Visible = false;
                        lbl_err_other.Visible = true;
                        lbl_err_other.Text = "No Records Found";
                        div_report.Visible = false;
                        pheaderfilter5.Visible = false;
                        pcolumnorder5.Visible = false;
                        btn_del_stud.Visible = false;
                    }
                    else
                    {
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            //othrs();
                            lbl_err_other.Visible = false;
                            for (int i = 0; i < cblcolumnorder5.Items.Count; i++)
                            {
                                if (cblcolumnorder5.Items[i].Selected == true)
                                {
                                    hat6.Add(cblcolumnorder5.Items[i].Text, cblcolumnorder5.Items[i].Value);
                                    string colvalue = cblcolumnorder5.Items[i].Text;
                                    if (ItemList_othr.Contains(colvalue) == false)
                                    {
                                        ItemList_othr.Add(cblcolumnorder5.Items[i].Text);
                                    }
                                    tborder5.Text = "";
                                    for (int j = 0; j < ItemList_othr.Count; j++)
                                    {
                                        tborder5.Text = tborder5.Text + ItemList_othr[j].ToString();
                                        tborder5.Text = tborder5.Text + "(" + (j + 1).ToString() + ")  ";
                                    }
                                }
                                cblcolumnorder5.Items[0].Enabled = false;
                            }
                            if (ItemList_othr.Count == 0)
                            {
                                for (int i = 0; i < 3; i++)
                                {
                                    cblcolumnorder5.Items[i].Selected = true;
                                    hat6.Add(cblcolumnorder5.Items[i].Text, cblcolumnorder5.Items[i].Value);
                                    string colvalue = cblcolumnorder5.Items[i].Text;
                                    if (ItemList_othr.Contains(colvalue) == false)
                                    {
                                        ItemList_othr.Add(cblcolumnorder5.Items[i].Text);
                                    }
                                    tborder5.Text = "";
                                    for (int j = 0; j < ItemList_othr.Count; j++)
                                    {
                                        tborder5.Text = tborder5.Text + ItemList_othr[j].ToString();
                                        tborder5.Text = tborder5.Text + "(" + (j + 1).ToString() + ")  ";
                                    }
                                }
                            }
                            Fpspread7.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                            Fpspread7.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                            Fpspread7.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                            Fpspread7.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                            Fpspread7.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread7.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
                            Fpspread7.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                            Fpspread7.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                            Fpspread7.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                            Fpspread7.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread7.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Attachment";
                            Fpspread7.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                            Fpspread7.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                            Fpspread7.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                            Fpspread7.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread7.Sheets[0].ColumnHeader.Cells[0, 3].Text = "View Details";
                            Fpspread7.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                            Fpspread7.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                            Fpspread7.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                            Fpspread7.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                            FarPoint.Web.Spread.StyleInfo style2 = new FarPoint.Web.Spread.StyleInfo();
                            style2.Font.Size = 16;
                            style2.Font.Name = "Book Antiqua";
                            style2.Font.Bold = true;
                            style2.HorizontalAlign = HorizontalAlign.Center;
                            style2.ForeColor = Color.Black;
                            style2.BackColor = Color.AliceBlue;
                            Fpspread7.Sheets[0].PageSize = Fpspread7.Sheets[0].RowCount;
                            for (int i = 0; i < ItemList_othr.Count; i++)
                            {
                                string value1 = ItemList_othr[i].ToString();
                                int a = value1.Length;
                                Fpspread7.Sheets[0].ColumnCount++;
                                Fpspread7.Sheets[0].ColumnHeader.Cells[Fpspread7.Sheets[0].ColumnHeader.RowCount - 1, Fpspread7.Sheets[0].ColumnCount - 1].Text = ItemList_othr[i].ToString();
                                Fpspread7.Sheets[0].ColumnHeader.Cells[Fpspread7.Sheets[0].ColumnHeader.RowCount - 1, Fpspread7.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                Fpspread7.Sheets[0].ColumnHeader.Cells[Fpspread7.Sheets[0].ColumnHeader.RowCount - 1, Fpspread7.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                Fpspread7.Sheets[0].ColumnHeader.Cells[Fpspread7.Sheets[0].ColumnHeader.RowCount - 1, Fpspread7.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                            }
                            Fpspread7.Sheets[0].RowCount = 0;
                            DataView dv = new DataView();
                            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                            {
                                Fpspread7.Sheets[0].RowCount++;
                                count++;
                                string forwardper = string.Empty;
                                forwardper = Convert.ToString(ds.Tables[0].Rows[i]["ForwardPerson"]);
                                Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 0].Text = count.ToString();
                                Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["TapalMovementsID"]);
                                Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                                Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                string color1 = Convert.ToString(ds.Tables[0].Rows[i]["ViewStatus"]);
                                string color2 = Convert.ToString(ds.Tables[0].Rows[i]["agreestatus"]);
                                if (color1 == "True")
                                {
                                    Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                    Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                    Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                    Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                }
                                if (color2 == "1")
                                {
                                    Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#7FFFD4");
                                    Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#7FFFD4");
                                    Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#7FFFD4");
                                    Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#7FFFD4");
                                }
                                if (color2 == "2")
                                {
                                    Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#CD5C5C");
                                    Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#CD5C5C");
                                    Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#CD5C5C");
                                    Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#CD5C5C");
                                }

                                FarPoint.Web.Spread.CheckBoxCellType cb = new FarPoint.Web.Spread.CheckBoxCellType();
                                cb.AutoPostBack = true;
                                Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 1].CellType = cb;
                                Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 1].Tag = forwardper;

                                Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                FarPoint.Web.Spread.ButtonCellType btn_type = new FarPoint.Web.Spread.ButtonCellType();
                                btn_type.Text = "View";
                                Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 3].CellType = btn_type;
                                Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                                Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                                Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                                string getappno = d2.GetFunction("select FromName  from TapalInward  where FromName='" + Convert.ToString(ds.Tables[0].Rows[i]["FromName"]) + "'");
                                string date = Convert.ToString(ds.Tables[0].Rows[i]["TapalInwardDate"]);
                                string tapalpk = Convert.ToString(ds.Tables[0].Rows[i]["TapalMovementsID"]);
                                string[] splitdate = date.Split('/');
                                DateTime dnew = Convert.ToDateTime(splitdate[1] + "/" + splitdate[0] + "/" + splitdate[2]);


                                if (ds1.Tables[1].Rows.Count > 0)//delsisMemCode='" + getappno + "' and 
                                {
                                    ds1.Tables[1].DefaultView.RowFilter = "TapalInwardFk='" + tapalpk + "' and date='" + dnew.ToString("MM/dd/yyyy") + "'";
                                    dv = ds1.Tables[1].DefaultView;
                                    if (dv.Count > 0)
                                    {
                                        string imagetext = Convert.ToString(dv[0]["filename"]);
                                        Fpspread7.ActiveSheetView.Cells[Fpspread7.Sheets[0].RowCount - 1, 2].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                                        Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 2].Text = imagetext.ToString();
                                        Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(dv[0]["fileid"]);
                                    }
                                    else
                                    {
                                        Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 2].Locked = true;
                                    }
                                }

                                int c = 3;
                                string typevalue = "";
                                string reveivedPer_Name = "";
                                string movevalue = "";
                                string todeptsplit = "";
                                string todeptsplit1 = "";
                                string ccdeptsplit = "";
                                string ccdeptsplit1 = "";
                                string toindisplit = "";
                                string toindisplit1 = "";
                                string ccindisplit = "";
                                string ccindisplit1 = "";
                                string department_to = "";
                                string department_cc = "";
                                string staff_to = "";
                                string staff_cc = "";
                                string priorityvalue = "";
                                string modevalue = "";
                                string action = "";
                                string document = "";
                                string res_staff = "";
                                string paymenttype = "";
                                string bankname = "";
                                if (ItemList_othr.Count > 0 && hat6.Count > 0)
                                {
                                    for (int j = 0; j < ItemList_othr.Count; j++)
                                    {
                                        string k = Convert.ToString(ItemList_othr[j].ToString());
                                        string names = Convert.ToString(hat6[k].ToString());
                                        c++;
                                        string val = ds.Tables[0].Rows[i][names].ToString();
                                        if (names == "ResponseStaff")
                                        {
                                            if (val == "0" || val == "")
                                            {
                                                res_staff = "";
                                            }
                                            else
                                            {
                                                res_staff = getstaffname(val);
                                            }
                                        }
                                        if (names == "BankCode")
                                        {
                                            if (val != "")
                                            {
                                                bankname = gettextbank(val);
                                            }
                                            else
                                            {
                                                bankname = "";
                                            }
                                        }
                                        if (names == "ActionDesc")
                                        {
                                            if (val == "" || val == "0")
                                            {
                                                document = "";
                                            }
                                            else
                                            {
                                                document = gettextpop(val);
                                            }
                                        }
                                        if (names == "ActionStatus")
                                        {
                                            if (val == "0" || val == "")
                                            {
                                                action = "Pending";
                                            }
                                            if (val == "1")
                                            {
                                                action = "Completed";
                                                //action = gettextpopact(val);
                                            }
                                            //else
                                            //{
                                            //    action = gettextpopact(val);
                                            //}
                                        }
                                        if (names == "ForwardPerson")//delsi0801
                                        {
                                            if (val == "0" || val == "")
                                            {
                                                reveivedPer_Name = "";
                                            }
                                            else
                                            {
                                                reveivedPer_Name = getstaffname(val);
                                            }
                                        }

                                        if (names == "PaymentType")
                                        {
                                            if (val.Trim() == "0")
                                            {
                                                paymenttype = "Cheque";
                                            }
                                            else if (val.Trim() == "1")
                                            {
                                                paymenttype = "DD";
                                            }
                                            else
                                            {
                                                paymenttype = "";
                                            }
                                        }
                                        if (names == "MoveTo")
                                        {
                                            if (val == "1")
                                            {
                                                movevalue = "Department";
                                            }
                                            if (val == "2")
                                            {
                                                movevalue = "Individual";
                                            }
                                            if (val == "3")
                                            {
                                                movevalue = "Department and Individual";
                                            }
                                        }
                                        if (names == "ToDeptCode")
                                        {
                                            if (val.Trim() == "0" || val.Trim() == "")
                                            {
                                                department_to = "";
                                            }
                                            else
                                            {
                                                string[] split = val.Split(',');
                                                if (split.Length == 1)
                                                {
                                                    department_to = getdepartment(val);
                                                }
                                                else
                                                {
                                                    todeptsplit = getdepartment(split[0]);
                                                    todeptsplit1 = getdepartment(split[1]);
                                                    department_to = todeptsplit + "," + todeptsplit1;
                                                }
                                            }
                                        }
                                        if (names == "ToCCDeptCode")
                                        {
                                            if (val.Trim() == "0" || val.Trim() == "")
                                            {
                                                department_cc = "";
                                            }
                                            else
                                            {
                                                string[] split1 = val.Split(',');
                                                if (split1.Length == 1)
                                                {
                                                    department_cc = getdepartment(val);
                                                }
                                                else
                                                {
                                                    ccdeptsplit = getdepartment(split1[0]);
                                                    ccdeptsplit1 = getdepartment(split1[1]);
                                                    department_cc = ccdeptsplit + "," + ccdeptsplit1;
                                                }
                                            }
                                        }
                                        if (names == "individual_code")
                                        {
                                            if (val.Trim() == "0" || val.Trim() == "")
                                            {
                                                staff_to = "";
                                            }
                                            else
                                            {
                                                string[] split = val.Split(',');
                                                if (split.Length == 1)
                                                {
                                                    staff_to = getstaffname(val);
                                                }
                                                else
                                                {
                                                    toindisplit = getstaffname(split[0]);
                                                    toindisplit1 = getstaffname(split[1]);
                                                    staff_to = toindisplit + "," + toindisplit1;
                                                }
                                            }
                                        }
                                        if (names == "ccindividual_code")
                                        {
                                            if (val.Trim() == "0" || val.Trim() == "")
                                            {
                                                staff_cc = "";
                                            }
                                            else
                                            {
                                                string[] split1 = val.Split(',');
                                                if (split1.Length == 1)
                                                {
                                                    staff_cc = getstaffname(val);
                                                }
                                                else
                                                {
                                                    ccindisplit = getstaffname(split1[0]);
                                                    ccindisplit1 = getstaffname(split1[1]);
                                                    staff_cc = ccindisplit + "," + ccindisplit1;
                                                }
                                            }
                                        }
                                        if (names == "Priority")
                                        {
                                            if (val.Trim() == "0")
                                            {
                                                priorityvalue = "";
                                            }
                                            else
                                            {
                                                priorityvalue = gettext(val);
                                            }
                                        }
                                        if (names == "TapalType")
                                        {
                                            if (val.Trim() == "0")
                                            {
                                                modevalue = "";
                                            }
                                            else
                                            {
                                                modevalue = gettext1(val);
                                            }
                                        }
                                        if (names == "type")
                                            if (val == "False")
                                            {
                                                typevalue = Convert.ToString("IN");
                                            }
                                        if (val == "True")
                                        {
                                            typevalue = Convert.ToString("OUT");
                                        }
                                        FarPoint.Web.Spread.TextCellType textcel_type = new FarPoint.Web.Spread.TextCellType();
                                        Fpspread7.Sheets[0].Columns[2].CellType = textcel_type;
                                        if (names == "MoveTo")
                                        {
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Text = movevalue;
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else if (names == "ResponseStaff")
                                        {
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Text = res_staff;
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else if (names == "BankCode")
                                        {
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Text = bankname;
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else if (names == "ActionDesc")
                                        {
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Text = document;
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                        }
                                        else if (names == "ActionStatus")
                                        {
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Text = action;
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                        }
                                        else if (names == "ToDeptCode")
                                        {
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Text = department_to;
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                        }
                                        else if (names == "ToCCDeptCode")
                                        {
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Text = department_cc;
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                        }
                                        else if (names == "individual_code")
                                        {
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Text = staff_to;
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                        }
                                        else if (names == "PaymentType")
                                        {
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Text = paymenttype;
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                        }
                                        else if (names == "ccindividual_code")
                                        {
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Text = staff_cc;
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                        }
                                        else if (names == "Priority")
                                        {
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Text = priorityvalue;
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                        }
                                        else if (names == "TapalType")
                                        {
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Text = modevalue;
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                        }
                                        else if (names == "type")
                                        {
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Text = typevalue;
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Width = 50;
                                        }
                                        else if (names == "ForwardPerson")
                                        {
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Text = reveivedPer_Name;
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else if (names == "TapalCode")//added by kowshi09.05.2018
                                        {
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else if (names == "DateTime")//added by saranya 21.08.2018
                                        {
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else
                                        {
                                            if (names == "RefNo")
                                            {
                                                Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                            }
                                            else
                                            {
                                                Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Left;
                                            }
                                            if (names == "TapalInwardDate")
                                            {
                                                Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                            }
                                            else if (names == "TapalInwardTime")
                                            {
                                                Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Width = 80;
                                            }
                                            else
                                            {
                                                Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                            }
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                        }

                                        Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Font.Name = "Book Antiqua";
                                        Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Font.Size = FontUnit.Medium;
                                        Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                        string color = Convert.ToString(ds.Tables[0].Rows[i]["ViewStatus"]);
                                        string colors = Convert.ToString(ds.Tables[0].Rows[i]["agreestatus"]);
                                        if (color == "True")
                                        {
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                        }
                                        if (colors == "1")
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#7FFFD4");
                                        if (colors == "2")
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#CD5C5C");
                                    }
                                }
                            }
                            Fpspread7.Sheets[0].PageSize = Fpspread7.Sheets[0].RowCount;
                            // div7.Visible = true;
                            if (CheckBox_column5.Checked == true)
                            {
                                Fpspread7.Width = 900;
                                Fpspread7.Height = 420;
                            }
                            else
                            {
                                Fpspread7.Width = 750;
                                Fpspread7.Height = 420;
                            }
                            pheaderfilter5.Visible = true;
                            pcolumnorder5.Visible = true;
                            Fpspread7.Visible = true;
                            btn_del_stud.Visible = true;
                            div_report.Visible = true;
                        }
                    }
                }
            }
            //  spread_others();
            div_others.Visible = true;
            div_student.Visible = false;
            div_staff.Visible = false;
            div_individual.Visible = false;
            div_company.Visible = false;
            div_mag.Visible = false;
            div_parent.Visible = false;
            div_all.Visible = false;
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");

        }
    }

    public void imgbtn_serch_Click(object sender, EventArgs e)
    {
        try
        {
            td_stud.BgColor = "white";
            td_staff.BgColor = "white";
            td_par.BgColor = "white";
            td_comp.BgColor = "white";
            td_indi.BgColor = "white";
            td_mag.BgColor = "white";
            td_othr.BgColor = "white";
            td_search.BgColor = "#c4c4c4";
            td_all.BgColor = "white";
            if (div_student.Visible == true)
            {
                stud_search();
            }
            else if (div_staff.Visible == true)
            {
                staff_search();
            }
            else if (div_company.Visible == true)
            {
                company_search();
            }
            else if (div_individual.Visible == true)
            {
                idiv_search();
            }
            else if (div_mag.Visible == true)
            {
                mag_search();
            }
            else if (div_parent.Visible == true)
            {
                parent_search();
            }
            else if (div_others.Visible == true)
            {
                othr_search();
            }
            else if (div_all.Visible == true)
            {
                all_search();
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void spread_others()
    {
        try
        {
            string typevalue = "";
            string movevalue = "";
            string todeptsplit = "";
            string todeptsplit1 = "";
            string ccdeptsplit = "";
            string ccdeptsplit1 = "";
            string toindisplit = "";
            string toindisplit1 = "";
            string ccindisplit = "";
            string ccindisplit1 = "";
            string department_to = "";
            string department_cc = "";
            string staff_to = "";
            string staff_cc = "";
            string priorityvalue = "";
            string modevalue = "";
            string[] ay = txt_fromdate.Text.Split('/');
            //string date = ay[1].ToString() + "/" + ay[0].ToString() + "/" + ay[2].ToString();
            string[] ay1 = txt_todate.Text.Split('/');
            // string date1 = ay[1].ToString() + "/" + ay[0].ToString() + "/" + ay[2].ToString();
            int memtype = 7;
            DateTime dt = new DateTime();
            DateTime dt1 = new DateTime();
            dt = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
            dt1 = Convert.ToDateTime(ay1[1] + "/" + ay1[0] + "/" + ay1[2]);
            if (rdo_in.Checked == true)
            {
                tt = 0;
            }
            else
            {
                tt = 1;
            }
            string query = "select distinct FromName,MoveTo,ToDeptCode,ToCCDeptCode,individual_code,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,ccindividual_code,RefNo,type,Priority,TapalType,TapalSubject from TapalInward t,Registration r,staffmaster s where TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and  MemType ='" + memtype + "' and type='" + tt + "' order by TapalInwardDate";
            ds = d2.select_method_wo_parameter(query, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                Fpspread7.Sheets[0].RowCount = 0;
                Fpspread7.Sheets[0].ColumnCount = 0;
                Fpspread7.Sheets[0].ColumnHeader.RowCount = 1;
                Fpspread7.CommandBar.Visible = false;
                Fpspread7.Sheets[0].ColumnCount = 13;
                Fpspread7.Sheets[0].AutoPostBack = true;
                Fpspread7.Sheets[0].RowHeader.Visible = false;
                FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
                darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
                darkstyle.ForeColor = Color.White;
                Fpspread7.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                Fpspread7.Columns[0].Width = 50;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Date";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Name";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                Fpspread7.Columns[1].Width = 200;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Subject";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Move To";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 5].Text = "To Department";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 5].Font.Bold = true;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 5].Font.Name = "Book Antiqua";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 5].Font.Size = FontUnit.Medium;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 6].Text = "CC Department";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 6].Font.Bold = true;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 6].Font.Name = "Book Antiqua";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 6].Font.Size = FontUnit.Medium;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 7].Text = "To Individual";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 7].Font.Bold = true;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 7].Font.Name = "Book Antiqua";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 7].Font.Size = FontUnit.Medium;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 7].HorizontalAlign = HorizontalAlign.Center;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 8].Text = "CC Individual";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 8].Font.Bold = true;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 8].Font.Name = "Book Antiqua";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 8].Font.Size = FontUnit.Medium;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 8].HorizontalAlign = HorizontalAlign.Center;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 9].Text = "Reference No";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 9].Font.Bold = true;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 9].Font.Name = "Book Antiqua";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 9].Font.Size = FontUnit.Medium;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 9].HorizontalAlign = HorizontalAlign.Center;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 10].Text = "Document Priority";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 10].Font.Bold = true;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 10].Font.Name = "Book Antiqua";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 10].Font.Size = FontUnit.Medium;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 10].HorizontalAlign = HorizontalAlign.Center;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 11].Text = "Delivery Mode";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 11].Font.Bold = true;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 11].Font.Name = "Book Antiqua";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 11].Font.Size = FontUnit.Medium;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 11].HorizontalAlign = HorizontalAlign.Center;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 12].Text = "Type";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 12].Font.Bold = true;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 12].Font.Name = "Book Antiqua";
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 12].Font.Size = FontUnit.Medium;
                Fpspread7.Sheets[0].ColumnHeader.Cells[0, 12].HorizontalAlign = HorizontalAlign.Center;
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    string type1 = Convert.ToString((ds.Tables[0].Rows[i]["type"]));
                    if (type1 == "False")
                    {
                        typevalue = Convert.ToString("IN");
                    }
                    if (type1 == "True")
                    {
                        typevalue = Convert.ToString("OUT");
                    }
                    string todept = ds.Tables[0].Rows[i]["ToDeptCode"].ToString();
                    string ccdept = ds.Tables[0].Rows[i]["ToCCDeptCode"].ToString();
                    string toindi = ds.Tables[0].Rows[i]["individual_code"].ToString();
                    string ccindi = ds.Tables[0].Rows[i]["ccindividual_code"].ToString();
                    string moveto = ds.Tables[0].Rows[i]["MoveTo"].ToString();
                    if (moveto == "1")
                    {
                        movevalue = "Department";
                        if (todept.Trim() == "" || todept.Trim() == "0")
                        {
                            department_to = "";
                        }
                        else
                        {
                            string[] split = todept.Split(',');
                            if (split.Length == 1)
                            {
                                department_to = getdepartment(todept);
                            }
                            else
                            {
                                todeptsplit = getdepartment(split[0]);
                                todeptsplit1 = getdepartment(split[1]);
                                department_to = todeptsplit + "," + todeptsplit1;
                            }
                        }
                        if (ccdept.Trim() == "" || ccdept.Trim() == "0")
                        {
                            department_cc = "";
                        }
                        else
                        {
                            string[] split1 = ccdept.Split(',');
                            if (split1.Length == 1)
                            {
                                department_cc = getdepartment(ccdept);
                            }
                            else
                            {
                                ccdeptsplit = getdepartment(split1[0]);
                                ccdeptsplit1 = getdepartment(split1[1]);
                                department_cc = ccdeptsplit + "," + ccdeptsplit1;
                            }
                        }
                    }
                    if (moveto == "2")
                    {
                        movevalue = "Individual";
                        if (toindi.Trim() == "" && toindi.Trim() == "0")
                        {
                            staff_to = "";
                        }
                        else
                        {
                            string[] split = toindi.Split(',');
                            if (split.Length == 1)
                            {
                                staff_to = getstaffname(toindi);
                            }
                            else
                            {
                                toindisplit = getstaffname(split[0]);
                                toindisplit1 = getstaffname(split[1]);
                                staff_to = toindisplit + "," + toindisplit1;
                            }
                        }
                        if (ccindi.Trim() == "" && ccindi.Trim() == "0")
                        {
                            staff_cc = "";
                        }
                        else
                        {
                            string[] split1 = ccindi.Split(',');
                            if (split1.Length == 1)
                            {
                                staff_cc = getstaffname(ccindi);
                            }
                            else
                            {
                                ccindisplit = getstaffname(split1[0]);
                                ccindisplit1 = getstaffname(split1[1]);
                                staff_cc = ccindisplit + "," + ccindisplit1;
                            }
                        }
                    }
                    if (moveto == "3")
                    {
                        movevalue = "Department and Individual";
                        if (todept.Trim() == "" || todept.Trim() == "0")
                        {
                            department_to = "";
                        }
                        else
                        {
                            string[] split = todept.Split(',');
                            if (split.Length == 1)
                            {
                                department_to = getdepartment(todept);
                            }
                            else
                            {
                                todeptsplit = getdepartment(split[0]);
                                todeptsplit1 = getdepartment(split[1]);
                                department_to = todeptsplit + "," + todeptsplit1;
                            }
                        }
                        if (ccdept.Trim() == "" || ccdept.Trim() == "0")
                        {
                            department_cc = "";
                        }
                        else
                        {
                            string[] split1 = ccdept.Split(',');
                            if (split1.Length == 1)
                            {
                                department_cc = getdepartment(ccdept);
                            }
                            else
                            {
                                ccdeptsplit = getdepartment(split1[0]);
                                ccdeptsplit1 = getdepartment(split1[1]);
                                department_cc = ccdeptsplit + "," + ccdeptsplit1;
                            }
                        }
                        if (toindi.Trim() == "" && toindi.Trim() == "0")
                        {
                            staff_to = "";
                        }
                        else
                        {
                            string[] split2 = toindi.Split(',');
                            if (split2.Length == 1)
                            {
                                staff_to = getstaffname(toindi);
                            }
                            else
                            {
                                toindisplit = getstaffname(split2[0]);
                                toindisplit1 = getstaffname(split2[1]);
                                staff_to = toindisplit + "," + toindisplit1;
                            }
                        }
                        if (ccindi.Trim() == "" && ccindi.Trim() == "0")
                        {
                            staff_cc = "";
                        }
                        else
                        {
                            string[] split3 = ccindi.Split(',');
                            if (split3.Length == 1)
                            {
                                staff_cc = getstaffname(ccindi);
                            }
                            else
                            {
                                ccindisplit = getstaffname(split3[0]);
                                ccindisplit1 = getstaffname(split3[1]);
                                staff_cc = ccindisplit + "," + ccindisplit1;
                            }
                        }
                    }
                    string priority = ds.Tables[0].Rows[i]["Priority"].ToString();
                    if (priority.Trim() == "" || priority.Trim() == "0")
                    {
                        priorityvalue = "";
                    }
                    else
                    {
                        priorityvalue = gettext(priority);
                    }
                    string mode = ds.Tables[0].Rows[i]["TapalType"].ToString();
                    if (mode.Trim() == "" || mode.Trim() == "0")
                    {
                        modevalue = "";
                    }
                    else
                    {
                        modevalue = gettext1(mode);
                    }
                    Fpspread7.Sheets[0].RowCount++;
                    Fpspread7.Sheets[0].Cells[i, 0].HorizontalAlign = HorizontalAlign.Center;
                    Fpspread7.Sheets[0].Cells[i, 0].Text = Convert.ToString(i + 1);
                    Fpspread7.Sheets[0].Cells[i, 0].Font.Size = FontUnit.Medium;
                    Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Left;
                    Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 1].Text = Convert.ToString(ds.Tables[0].Rows[i]["TapalInwardDate"]);
                    Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                    Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                    Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Left;
                    Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(ds.Tables[0].Rows[i]["FromName"]);
                    Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                    Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                    Fpspread7.Sheets[0].Cells[i, 3].HorizontalAlign = HorizontalAlign.Left;
                    Fpspread7.Sheets[0].Cells[i, 3].Text = Convert.ToString(ds.Tables[0].Rows[i]["TapalSubject"]);
                    // Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(ds.Tables[0].Rows[i]["MoveTo"]);
                    Fpspread7.Sheets[0].Cells[i, 3].Font.Name = "Book Antiqua";
                    Fpspread7.Sheets[0].Cells[i, 3].Font.Size = FontUnit.Medium;
                    Fpspread7.Sheets[0].Cells[i, 4].HorizontalAlign = HorizontalAlign.Left;
                    Fpspread7.Sheets[0].Cells[i, 4].Text = Convert.ToString(movevalue);
                    // Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(ds.Tables[0].Rows[i]["MoveTo"]);
                    Fpspread7.Sheets[0].Cells[i, 4].Font.Name = "Book Antiqua";
                    Fpspread7.Sheets[0].Cells[i, 4].Font.Size = FontUnit.Medium;
                    Fpspread7.Sheets[0].Cells[i, 5].HorizontalAlign = HorizontalAlign.Left;
                    Fpspread7.Sheets[0].Cells[i, 5].Text = Convert.ToString(department_to);
                    Fpspread7.Sheets[0].Cells[i, 5].Font.Name = "Book Antiqua";
                    Fpspread7.Sheets[0].Cells[i, 5].Font.Size = FontUnit.Medium;
                    Fpspread7.Sheets[0].Cells[i, 6].HorizontalAlign = HorizontalAlign.Left;
                    Fpspread7.Sheets[0].Cells[i, 6].Text = Convert.ToString(department_cc);
                    Fpspread7.Sheets[0].Cells[i, 6].Font.Name = "Book Antiqua";
                    Fpspread7.Sheets[0].Cells[i, 6].Font.Size = FontUnit.Medium;
                    Fpspread7.Sheets[0].Cells[i, 7].HorizontalAlign = HorizontalAlign.Left;
                    Fpspread7.Sheets[0].Cells[i, 7].Text = Convert.ToString(staff_to);
                    Fpspread7.Sheets[0].Cells[i, 7].Font.Name = "Book Antiqua";
                    Fpspread7.Sheets[0].Cells[i, 7].Font.Size = FontUnit.Medium;
                    Fpspread7.Sheets[0].Cells[i, 8].HorizontalAlign = HorizontalAlign.Left;
                    Fpspread7.Sheets[0].Cells[i, 8].Text = Convert.ToString(staff_cc);
                    Fpspread7.Sheets[0].Cells[i, 8].Font.Name = "Book Antiqua";
                    Fpspread7.Sheets[0].Cells[i, 8].Font.Size = FontUnit.Medium;
                    Fpspread7.Sheets[0].Cells[i, 9].HorizontalAlign = HorizontalAlign.Center;
                    Fpspread7.Sheets[0].Cells[i, 9].Text = Convert.ToString(ds.Tables[0].Rows[i]["RefNo"]);
                    Fpspread7.Sheets[0].Cells[i, 9].Font.Name = "Book Antiqua";
                    Fpspread7.Sheets[0].Cells[i, 9].Font.Size = FontUnit.Medium;
                    Fpspread7.Sheets[0].Cells[i, 10].HorizontalAlign = HorizontalAlign.Center;
                    Fpspread7.Sheets[0].Cells[i, 10].Text = Convert.ToString(priorityvalue);
                    Fpspread7.Sheets[0].Cells[i, 10].Font.Name = "Book Antiqua";
                    Fpspread7.Sheets[0].Cells[i, 10].Font.Size = FontUnit.Medium;
                    Fpspread7.Sheets[0].Cells[i, 11].HorizontalAlign = HorizontalAlign.Center;
                    Fpspread7.Sheets[0].Cells[i, 11].Text = Convert.ToString(modevalue);
                    Fpspread7.Sheets[0].Cells[i, 11].Font.Name = "Book Antiqua";
                    Fpspread7.Sheets[0].Cells[i, 11].Font.Size = FontUnit.Medium;
                    Fpspread7.Sheets[0].Cells[i, 12].HorizontalAlign = HorizontalAlign.Center;
                    Fpspread7.Sheets[0].Cells[i, 12].Text = Convert.ToString(typevalue);
                    Fpspread7.Sheets[0].Cells[i, 12].Font.Name = "Book Antiqua";
                    Fpspread7.Sheets[0].Cells[i, 12].Font.Size = FontUnit.Medium;
                }
                Fpspread7.Sheets[0].PageSize = Fpspread7.Sheets[0].RowCount;
                div_others.Visible = true;
                //div7.Visible = true;
                Fpspread7.Visible = true;
                lbl_err_other.Visible = false;
                div_report.Visible = true;
            }
            else
            {
                lbl_err_other.Visible = true;
                lbl_err_other.Text = "No Record Found";
                Fpspread7.Visible = false;
                // div7.Visible = false;
                div_report.Visible = false;
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void imgbtn_all_Click(object sender, EventArgs e)
    {
        try
        {
            string linkname = "";
            bool entryflag = false;

            linkname = "Letter Inward All";
            int count = 0;
            string selcol = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + collegecode1 + "'";
            ds.Clear();
            ds = d2.select_method_wo_parameter(selcol, "Text");
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                string value = Convert.ToString(ds.Tables[0].Rows[0]["LinkValue"]);
                string[] value1 = value.Split(',');
                if (value1.Length > 0)
                {
                    for (int i = 0; i < value1.Length; i++)
                    {
                        string val = value1[i].ToString();
                        for (int k = 0; k < cblcolumnorderall.Items.Count; k++)
                        {
                            if (val == cblcolumnorderall.Items[k].Value)
                            {
                                cblcolumnorderall.Items[k].Selected = true;
                                count++;
                            }
                        }
                    }
                    if (count == cblcolumnorderall.Items.Count)
                        CheckBox_column.Checked = true;
                    else
                        CheckBox_column.Checked = false;
                }
            }
            loadcolumns_all(sender, e);
            all_search();//delsiallref
        }
        catch (Exception ex)
        {

        }
    }

    public void all_search()
    {
        try
        {
            loaddesc();
            ViewState["staff"] = 9;
            string applid = string.Empty;
            string RequestStaffApp_No = string.Empty;
            applid = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            RequestStaffApp_No = d2.GetFunction("select ReqStaffAppNo  from RQ_RequestHierarchy where RequestType=12 and ReqAppStaffAppNo in('" + applid + "')");
            td_stud.BgColor = "white";
            td_staff.BgColor = "white";
            td_par.BgColor = "white";
            td_comp.BgColor = "white";
            td_indi.BgColor = "white";
            td_mag.BgColor = "white";
            td_othr.BgColor = "white";
            td_search.BgColor = "white";
            td_all.BgColor = "#c4c4c4";

            string approvalstatus = string.Empty;
            if (rdo_req.Checked == true)
                approvalstatus = "0";
            if (rdo_approve.Checked == true)
                approvalstatus = "1";


            string actionstatus = "";
            if (cbl_status.Items.Count > 0)
                actionstatus = Convert.ToString(getCblSelectedValue(cbl_status));
            //if (actionstatus.Trim() == "")
            //    actionstatus = "0";

            lbl_norec.Visible = false;
            Fpspread9.Sheets[0].Visible = true;
            Fpspread9.Sheets[0].RowHeader.Visible = false;
            Fpspread9.CommandBar.Visible = false;
            Fpspread9.Sheets[0].AutoPostBack = false;
            Fpspread9.Sheets[0].RowCount = 0;
            Fpspread9.Sheets[0].ColumnHeader.RowCount = 1;
            Fpspread9.Sheets[0].ColumnCount = 4;
            FarPoint.Web.Spread.StyleInfo darkstyle111 = new FarPoint.Web.Spread.StyleInfo();
            darkstyle111.BackColor = ColorTranslator.FromHtml("#0CA6CA");
            darkstyle111.ForeColor = Color.Black;
            darkstyle111.HorizontalAlign = HorizontalAlign.Center;
            Fpspread9.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle111;
            string fromhr = Convert.ToString(ddl_hour.SelectedItem.Text);
            string frommm = Convert.ToString(ddl_minits.SelectedItem.Text);
            string fromday = Convert.ToString(ddl_timeformate.SelectedItem.Text);
            string tohr = Convert.ToString(ddl_endhour.SelectedItem.Text);
            string tomm = Convert.ToString(ddl_endminit.SelectedItem.Text);
            string today = Convert.ToString(ddl_endformate.SelectedItem.Text);
            string fromtime = fromhr + ":" + frommm + ":" + fromday;
            string Totime = tohr + ":" + tomm + ":" + today;
            string ddlpriority = Convert.ToString(ddl_stf_docpri.SelectedItem.Value);

            string[] ay = txt_fromdate.Text.Split('/');
            string[] ay1 = txt_todate.Text.Split('/');
            DateTime dt = new DateTime();
            DateTime dt1 = new DateTime();
            dt = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
            dt1 = Convert.ToDateTime(ay1[1] + "/" + ay1[0] + "/" + ay1[2]);
            if (rdo_in.Checked == true)
            {
                tt = 0;
            }
            else
            {
                tt = 1;
            }
            string query = "";



            if (cbtimebased.Checked == false)
            {

                //if (ddlpriority != "0")
                //{

                //    if (Session["Staff_Code"] != null && Session["Staff_Code"] != "")
                //    {
                //        query = "select ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ActionStatus,BankCode,BranchName,DDNo,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,ActionDesc,ViewStatus,App_No,staff_code,MoveTo,case when MemType=1 then 'Student' when MemType=2 then 'Staff' when MemType=3 then 'Parent' when MemType=4 then 'Company' when MemType=5 then 'Individual' when MemType=6 then 'Magazine' when MemType=7 then 'Others'  end as MemType,ToDeptCode,TapalMovementsID,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,fromname,staff_code,App_No,individual_code,MagazineName,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,ccindividual_code,RefNo,TapalSubject,type,Priority,TapalType from TapalInward where type='" + tt + "' and Priority='" + ddlpriority + "'  and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and ((individual_code like '" + Session["Staff_Code"].ToString() + "%' or individual_code like '%" + Session["Staff_Code"].ToString() + ",') or (ccindividual_code like '" + Session["Staff_Code"].ToString() + "%' or ccindividual_code like '%" + Session["Staff_Code"].ToString() + ",')) order by TapalInwardDate ";
                //        query = query + " select * from lettertbl";
                //    }
                //    else
                //    {
                //        query = "select ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,ActionStatus,DDNo,BankCode,BranchName,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,ActionDesc,ViewStatus,App_No,staff_code,MoveTo,case when MemType=1 then 'Student' when MemType=2 then 'Staff' when MemType=3 then 'Parent' when MemType=4 then 'Company' when MemType=5 then 'Individual' when MemType=6 then 'Magazine' when MemType=7 then 'Others'  end as MemType,ToDeptCode,TapalMovementsID,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,fromname,staff_code,App_No,individual_code,MagazineName,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,ccindividual_code,RefNo,TapalSubject,type,Priority,TapalType from TapalInward where type='" + tt + "' and Priority='" + ddlpriority + "' and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' order by TapalInwardDate ";
                //        query = query + " select * from lettertbl";
                //    }
                //}
                //else
                //{

                if (Session["Staff_Code"] != null && Session["Staff_Code"] != "")
                {
                    if (Convert.ToString(RequestStaffApp_No) != "" && Convert.ToString(RequestStaffApp_No) != "0")
                    {
                        query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,fd.ActionStatus,ForwardPerson,agreestatus,t.BankCode,staff_code,TapalCode,ReqAppStatus,BranchName,DDNo,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Priority,Paymentamount,ActionDesc,ViewStatus,App_No,MoveTo,case when MemType=1 then 'Student' when MemType=2 then 'Staff' when MemType=3 then 'Parent' when MemType=4 then 'Company' when MemType=5 then 'Individual' when MemType=6 then 'Magazine' when MemType=7 then 'Others'  end as MemType,ToDeptCode,TapalMovementsID,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,fromname,App_No,MagazineName,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,RefNo,TapalSubject,type,Priority,TapalType,isnull(t.ReqApproveStage,0)ReqApproveStage ,isnull(t.ReqAppStatus,0)ReqAppStatus , isnull(t.ReqApprovedStaffAppNo,0)ReqApprovedStaffAppNo,datetime from RQ_RequestHierarchy rh, TapalInward t left join letterForwardDetails fd on fd.tapalmovementid=t.tapalmovementsid where type='" + tt + "'and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo='" + applid + "' and rh.ReqStaffAppNo=t.ToDeptCode and rh.RequestType='12' and isnull(t.ReqAppStatus,0)=" + approvalstatus + "";
                        if (rdo_req.Checked == true)
                        {
                            query += "  and isnull(t.ReqApproveStage,0)=isnull(rh.ReqApproveStage,0)-1";
                        }
                        if (ddlpriority != "0")
                        {
                            query += " and Priority ='" + ddlpriority + "'";
                        }
                        if (actionstatus != "")//&& actionstatus != "0"
                        {
                            query += " and ISNULL(fd.ActionStatus,0) in('" + actionstatus + "') ";
                        }
                        else
                        {
                            query += " and ISNULL(fd.ActionStatus,0) in('0','1')";
                        }
                        query = query + " order by TapalInwardDate";
                        query = query + " select * from lettertbl";
                        if (approvalstatus == "1")
                        {
                            txt_viewdetails3.Visible = false;
                            btn_add1.Visible = false;
                            btn_ad.Visible = false;

                            ddl_viewdetails1.Visible = false;
                            btn_min.Visible = false;
                            ddl_viewdetails2.Visible = false;

                            btn_min1.Visible = false;
                            lbl_doc_state.Visible = false;
                            lbl_remarks.Visible = false;
                            lbl_remrks.Visible = false;
                            txt_viewdetails4.Visible = false;
                            txt_receiveperson.Visible = false;
                            btn_question.Visible = false;
                            btn_received_question.Visible = false;
                            lbl_receiveperson.Visible = false;
                            lbl_persnname.Visible = false;

                            lbl_popviewdate.Visible = false;
                            txt_popviewdate.Visible = false;
                            lbl_view_time.Visible = false;
                            txt_viewtime.Visible = false;

                            btn_popexit.Visible = false;
                            btn_pop1go.Visible = false;
                            btn_pop1go.Text = "Approve";
                        }
                        if (approvalstatus == "0")
                        {
                            txt_viewdetails4.Visible = true;
                            txt_receiveperson.Visible = true;
                            btn_question.Visible = true;
                            btn_received_question.Visible = true;
                            lbl_receiveperson.Visible = true;
                            lbl_persnname.Visible = true;
                            btn_pop1go.Text = "Forward";
                        }
                        txt_viewdetails3.Visible = false;
                        btn_add1.Visible = false;
                        btn_ad.Visible = false;

                        ddl_viewdetails1.Visible = false;
                        btn_min.Visible = false;
                        ddl_viewdetails2.Visible = false;

                        btn_min1.Visible = false;
                        lbl_doc_state.Visible = false;
                        lbl_remarks.Visible = false;
                        lbl_remrks.Visible = false;
                    }
                    else
                    {
                        if (approvalstatus == "1")
                        {
                            query = "select distinct ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,fd.ActionStatus,ForwardPerson,agreestatus,t.BankCode,staff_code,TapalCode,BranchName,DDNo,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Priority,Paymentamount,ActionDesc,ViewStatus,App_No,MoveTo,case when MemType=1 then 'Student' when MemType=2 then 'Staff' when MemType=3 then 'Parent' when MemType=4 then 'Company' when MemType=5 then 'Individual' when MemType=6 then 'Magazine' when MemType=7 then 'Others'  end as MemType,ToDeptCode,TapalMovementsID,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,fromname,App_No,MagazineName,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,RefNo,TapalSubject,type,Priority,TapalType,isnull(t.ReqApproveStage,0)ReqApproveStage ,isnull(t.ReqAppStatus,0)ReqAppStatus , isnull(t.ReqApprovedStaffAppNo,0)ReqApprovedStaffAppNo,datetime from  TapalInward t,letterForwardDetails fd where fd.tapalmovementid=t.tapalmovementsid and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and type='" + tt + "' and isnull(t.ReqAppStatus,0)=1 and fd.forwardperson in('" + staffcodesession + "') ";

                            if (actionstatus != "")// && actionstatus != "0"
                            {
                                query += " and ISNULL(fd.ActionStatus,0) in('" + actionstatus + "')";
                            }
                            else
                            {
                                query += " and ISNULL(fd.ActionStatus,0) in('0','1')";
                            }
                            query = query + " order by TapalInwardDate";
                            query = query + " select * from lettertbl";

                            txt_viewdetails4.Visible = false;
                            txt_receiveperson.Visible = false;
                            btn_question.Visible = false;
                            btn_received_question.Visible = false;
                            lbl_receiveperson.Visible = false;
                            lbl_persnname.Visible = false;
                        }
                        else
                        {
                        }
                    }
                }
                else
                {
                    query = "select ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,fd.ActionStatus,ForwardPerson,agreestatus,DDNo,BankCode,TapalCode,BranchName,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,ActionDesc,ViewStatus,App_No,staff_code,MoveTo,case when MemType=1 then 'Student' when MemType=2 then 'Staff' when MemType=3 then 'Parent' when MemType=4 then 'Company' when MemType=5 then 'Individual' when MemType=6 then 'Magazine' when MemType=7 then 'Others'  end as MemType,ToDeptCode,TapalMovementsID,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,fromname,staff_code,App_No,individual_code,MagazineName,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,ccindividual_code,RefNo,TapalSubject,type,Priority,TapalType,datetime from TapalInward t left join letterForwardDetails fd on fd.tapalmovementid=t.tapalmovementsid where type='" + tt + "' and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' ";
                    if (ddlpriority != "0")
                    {
                        query += " and Priority ='" + ddlpriority + "'";
                    }
                    query = query + "order by TapalInwardDate";
                    query = query + " select * from lettertbl";
                }
                //}
            }
            if (cbtimebased.Checked == true)
            {
                if (ddlpriority != "0")
                {
                    if (Session["Staff_Code"] != null && Session["Staff_Code"] != "")
                    {
                        query = "select ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,Convert(varchar(11),TapalInwardTime,103) as Tapaltime,ActionStatus,BankCode,BranchName,DDNo,PaymentType,TapalCode,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,ActionDesc,ViewStatus,App_No,staff_code,MoveTo,case when MemType=1 then 'Student' when MemType=2 then 'Staff' when MemType=3 then 'Parent' when MemType=4 then 'Company' when MemType=5 then 'Individual' when MemType=6 then 'Magazine' when MemType=7 then 'Others'  end as MemType,ToDeptCode,TapalMovementsID,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,fromname,staff_code,App_No,individual_code,MagazineName,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,ccindividual_code,RefNo,TapalSubject,type,Priority,TapalType from TapalInward where type='" + tt + "' and Priority='" + ddlpriority + "' and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and TapalInwardTime between '" + fromtime + "' and '" + Totime + "' and ((individual_code like '" + Session["Staff_Code"].ToString() + "%' or individual_code like '%" + Session["Staff_Code"].ToString() + ",') or (ccindividual_code like '" + Session["Staff_Code"].ToString() + "%' or ccindividual_code like '%" + Session["Staff_Code"].ToString() + ",')) order by TapalInwardDate ";
                        query = query + " select * from lettertbl";
                    }
                    else
                    {
                        query = "select ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,Convert(varchar(11),TapalInwardTime,103) as Tapaltime,ActionStatus,DDNo,BankCode,BranchName,PaymentType,TapalCode,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,ActionDesc,ViewStatus,App_No,staff_code,MoveTo,case when MemType=1 then 'Student' when MemType=2 then 'Staff' when MemType=3 then 'Parent' when MemType=4 then 'Company' when MemType=5 then 'Individual' when MemType=6 then 'Magazine' when MemType=7 then 'Others'  end as MemType,ToDeptCode,TapalMovementsID,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,fromname,staff_code,App_No,individual_code,MagazineName,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,ccindividual_code,RefNo,TapalSubject,type,Priority,TapalType from TapalInward where type='" + tt + "' and Priority='" + ddlpriority + "' and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and TapalInwardTime between '" + fromtime + "' and '" + Totime + "'  order by TapalInwardDate ";
                        query = query + " select * from lettertbl";
                    }
                }
                else
                {
                    if (Session["Staff_Code"] != null && Session["Staff_Code"] != "")
                    {
                        query = "select ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,Convert(varchar(11),TapalInwardTime,103) as Tapaltime,ActionStatus,BankCode,BranchName,DDNo,PaymentType,TapalCode,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,ActionDesc,ViewStatus,App_No,staff_code,MoveTo,case when MemType=1 then 'Student' when MemType=2 then 'Staff' when MemType=3 then 'Parent' when MemType=4 then 'Company' when MemType=5 then 'Individual' when MemType=6 then 'Magazine' when MemType=7 then 'Others'  end as MemType,ToDeptCode,TapalMovementsID,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,fromname,staff_code,App_No,individual_code,MagazineName,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,ccindividual_code,RefNo,TapalSubject,type,Priority,TapalType from TapalInward where type='" + tt + "' and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and TapalInwardTime between '" + fromtime + "' and '" + Totime + "' and ((individual_code like '" + Session["Staff_Code"].ToString() + "%' or individual_code like '%" + Session["Staff_Code"].ToString() + ",') or (ccindividual_code like '" + Session["Staff_Code"].ToString() + "%' or ccindividual_code like '%" + Session["Staff_Code"].ToString() + ",')) order by TapalInwardDate ";
                        query = query + " select * from lettertbl";
                    }
                    else
                    {
                        query = "select ResponseStaff,CONVERT(VARCHAR(11),ActionDate,103) as ActionDate,Convert(varchar(11),TapalInwardTime,103) as Tapaltime,ActionStatus,DDNo,BankCode,BranchName,PaymentType,TapalCode,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,Paymentamount,ActionDesc,ViewStatus,App_No,staff_code,MoveTo,case when MemType=1 then 'Student' when MemType=2 then 'Staff' when MemType=3 then 'Parent' when MemType=4 then 'Company' when MemType=5 then 'Individual' when MemType=6 then 'Magazine' when MemType=7 then 'Others'  end as MemType,ToDeptCode,TapalMovementsID,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,fromname,staff_code,App_No,individual_code,MagazineName,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,ccindividual_code,RefNo,TapalSubject,type,Priority,TapalType from TapalInward where type='" + tt + "' and TapalInwardDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and TapalInwardTime between '" + fromtime + "' and '" + Totime + "'  order by TapalInwardDate ";
                        query = query + " select * from lettertbl";
                    }
                }
            }
            if (query == "")
            {
                Fpspread9.Sheets[0].Visible = false;
                // div7.Visible = false;
                lbl_all_err.Visible = true;
                lbl_all_err.Text = "Kindly Select All List ";
                div_report.Visible = false;
                btn_del_stud.Visible = false;
                lbl_pending_color.Visible = false;
                lbl_pending.Visible = false;
                lbl_ComAcc_color.Visible = false;
                lbl_ComAcc.Visible = false;
                lbl_ComRej_color.Visible = false;
                lbl_Rej.Visible = false;
            }
            else
            {
                if (query != "")
                {
                    ds = d2.select_method(query, hat, "Text");
                    ds1 = d2.select_method(query, hat, "Text");
                    if (ds.Tables[0].Rows.Count == 0)
                    {
                        Fpspread9.Sheets[0].Visible = false;
                        lbl_all_err.Visible = true;
                        lbl_all_err.Text = "No Records Found";
                        lbl_pending_color.Visible = false;
                        lbl_pending.Visible = false;
                        div_report.Visible = false;
                        lbl_ComAcc_color.Visible = false;
                        lbl_ComAcc.Visible = false;
                        lbl_ComRej_color.Visible = false;
                        lbl_Rej.Visible = false;
                        pheaderfilterall.Visible = false;
                        pcolumnorderall.Visible = false;
                        btn_del_stud.Visible = false;
                    }
                    else
                    {
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            //othrs();
                            lbl_all_err.Visible = false;
                            lbl_pending_color.Visible = true;
                            lbl_pending.Visible = true;
                            lbl_ComAcc_color.Visible = true;
                            lbl_ComAcc.Visible = true;
                            lbl_ComRej_color.Visible = true;
                            lbl_Rej.Visible = true;
                            for (int i = 0; i < cblcolumnorderall.Items.Count; i++)
                            {
                                if (cblcolumnorderall.Items[i].Selected == true)
                                {
                                    hat7.Add(cblcolumnorderall.Items[i].Text, cblcolumnorderall.Items[i].Value);
                                    string colvalue = cblcolumnorderall.Items[i].Text;
                                    if (ItemList_all.Contains(colvalue) == false)
                                    {
                                        ItemList_all.Add(cblcolumnorderall.Items[i].Text);
                                    }
                                    tborderall.Text = "";
                                    for (int j = 0; j < ItemList_all.Count; j++)
                                    {
                                        tborderall.Text = tborderall.Text + ItemList_all[j].ToString();
                                        tborderall.Text = tborderall.Text + "(" + (j + 1).ToString() + ")  ";
                                    }
                                }
                                cblcolumnorderall.Items[0].Enabled = false;
                            }
                            if (ItemList_all.Count == 0)
                            {
                                for (int i = 0; i < 3; i++)
                                {
                                    cblcolumnorderall.Items[i].Selected = true;
                                    hat7.Add(cblcolumnorderall.Items[i].Text, cblcolumnorderall.Items[i].Value);
                                    string colvalue = cblcolumnorderall.Items[i].Text;
                                    if (ItemList_all.Contains(colvalue) == false)
                                    {
                                        ItemList_all.Add(cblcolumnorder5.Items[i].Text);
                                    }
                                    tborderall.Text = "";
                                    for (int j = 0; j < ItemList_all.Count; j++)
                                    {
                                        tborderall.Text = tborderall.Text + ItemList_all[j].ToString();
                                        tborderall.Text = tborderall.Text + "(" + (j + 1).ToString() + ")  ";
                                    }
                                }
                            }
                            Fpspread9.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                            Fpspread9.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                            Fpspread9.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                            Fpspread9.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                            Fpspread9.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread9.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Attachment";
                            Fpspread9.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                            Fpspread9.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                            Fpspread9.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                            Fpspread9.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread9.Sheets[0].ColumnHeader.Cells[0, 2].Text = "View Details";
                            Fpspread9.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                            Fpspread9.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                            Fpspread9.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                            Fpspread9.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread9.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Name";//delsi2302
                            Fpspread9.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                            Fpspread9.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                            Fpspread9.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                            Fpspread9.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;

                            FarPoint.Web.Spread.StyleInfo style2 = new FarPoint.Web.Spread.StyleInfo();
                            style2.Font.Size = 16;
                            style2.Font.Name = "Book Antiqua";
                            style2.Font.Bold = true;
                            style2.HorizontalAlign = HorizontalAlign.Center;
                            style2.ForeColor = Color.Black;
                            style2.BackColor = Color.AliceBlue;
                            Fpspread9.Sheets[0].PageSize = Fpspread9.Sheets[0].RowCount;
                            for (int i = 0; i < ItemList_all.Count; i++)
                            {
                                string value1 = ItemList_all[i].ToString();
                                int a = value1.Length;
                                Fpspread9.Sheets[0].ColumnCount++;
                                Fpspread9.Sheets[0].ColumnHeader.Cells[Fpspread9.Sheets[0].ColumnHeader.RowCount - 1, Fpspread9.Sheets[0].ColumnCount - 1].Text = ItemList_all[i].ToString();
                                Fpspread9.Sheets[0].ColumnHeader.Cells[Fpspread9.Sheets[0].ColumnHeader.RowCount - 1, Fpspread9.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                Fpspread9.Sheets[0].ColumnHeader.Cells[Fpspread9.Sheets[0].ColumnHeader.RowCount - 1, Fpspread9.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                Fpspread9.Sheets[0].ColumnHeader.Cells[Fpspread9.Sheets[0].ColumnHeader.RowCount - 1, Fpspread9.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                            }
                            Fpspread9.Sheets[0].RowCount = 0;
                            DataView dv = new DataView();
                            string getappno = "";
                            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                            {
                                Fpspread9.Sheets[0].RowCount++;
                                count++;
                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 0].Text = count.ToString();
                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["TapalMovementsID"]);
                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                string color1 = Convert.ToString(ds.Tables[0].Rows[i]["ViewStatus"]);
                                string color2 = Convert.ToString(ds.Tables[0].Rows[i]["agreestatus"]);
                                if (color1 == "True")
                                {
                                    Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                    Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                    Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                    Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                }
                                if (color2 == "1")
                                {
                                    Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#7FFFD4");
                                    Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#7FFFD4");
                                    Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#7FFFD4");
                                    Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#7FFFD4");
                                }
                                if (color2 == "2")
                                {
                                    Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#CD5C5C");
                                    Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#CD5C5C");
                                    Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#CD5C5C");
                                    Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#CD5C5C");
                                }
                                FarPoint.Web.Spread.ButtonCellType btn_type = new FarPoint.Web.Spread.ButtonCellType();
                                btn_type.Text = "View";
                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 2].CellType = btn_type;
                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 3].Text = "Sample";
                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;

                                string fromname = Convert.ToString(ds.Tables[0].Rows[i]["FromName"]);
                                string app = Convert.ToString(ds.Tables[0].Rows[i]["App_No"]);
                                string stf_code = Convert.ToString(ds.Tables[0].Rows[i]["staff_code"]);
                                string magname = Convert.ToString(ds.Tables[0].Rows[i]["MagazineName"]);

                                if (fromname != "")
                                {
                                    // getappno = d2.GetFunction("select FromName  from TapalInward  where FromName='" + Convert.ToString(ds.Tables[0].Rows[i]["FromName"]) + "'");
                                    getappno = fromname;
                                }
                                else if (stf_code != "")
                                {
                                    // string staff_Name = "";
                                    // getappno = d2.GetFunction("select FromName  from TapalInward  where FromName='" + Convert.ToString(ds.Tables[0].Rows[i]["FromName"]) + "'");
                                    //  staff_Name = stf_code;
                                    getappno = getstaffname(stf_code);
                                }
                                else if (app != "")
                                {
                                    string stud_name = d2.GetFunction("select Stud_Name from Registration where app_no='" + app + "'");
                                    getappno = stud_name;
                                }
                                else if (fromname == "" && app == "" && stf_code == "")
                                {
                                    getappno = magname;
                                }
                                //else
                                //{
                                //    getappno = app;
                                //}200

                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 3].Text = getappno;
                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Left;
                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 3].Column.Width = 200;

                                string date = Convert.ToString(ds.Tables[0].Rows[i]["TapalInwardDate"]);
                                string tapalpk = Convert.ToString(ds.Tables[0].Rows[i]["TapalMovementsID"]);
                                string[] splitdate = date.Split('/');
                                DateTime dnew = Convert.ToDateTime(splitdate[1] + "/" + splitdate[0] + "/" + splitdate[2]);

                                if (ds1.Tables[1].Rows.Count > 0)
                                {
                                    ds1.Tables[1].DefaultView.RowFilter = "MemCode='" + getappno + "' and TapalInwardFk='" + tapalpk + "' and date='" + dnew.ToString("MM/dd/yyyy") + "'";
                                    dv = ds1.Tables[1].DefaultView;
                                    if (dv.Count > 0)
                                    {
                                        string imagetext = Convert.ToString(dv[0]["filename"]);
                                        Fpspread9.ActiveSheetView.Cells[Fpspread9.Sheets[0].RowCount - 1, 1].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                                        Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 1].Text = imagetext.ToString();
                                        Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 1].Tag = Convert.ToString(dv[0]["fileid"]);
                                    }
                                    else
                                    {
                                        Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 1].Locked = true;
                                    }
                                }

                                int c = 3;

                                string reveivedPer_Name = "";
                                string typevalue = "";
                                string movevalue = "";
                                string todeptsplit = "";
                                string todeptsplit1 = "";
                                string ccdeptsplit = "";
                                string ccdeptsplit1 = "";
                                string toindisplit = "";
                                string toindisplit1 = "";
                                string ccindisplit = "";
                                string ccindisplit1 = "";
                                string department_to = "";
                                string department_cc = "";
                                string staff_to = "";
                                string staff_cc = "";
                                string priorityvalue = "";
                                string modevalue = "";
                                string studentname = "";
                                string staff = "";
                                string res_staff = "";
                                string document = "";
                                string action = "";
                                string paymenttype = "";
                                string bankname = "";
                                if (ItemList_all.Count > 0 && hat7.Count > 0)
                                {
                                    for (int j = 0; j < ItemList_all.Count; j++)
                                    {
                                        string k = Convert.ToString(ItemList_all[j].ToString());
                                        string names = Convert.ToString(hat7[k].ToString());
                                        c++;
                                        string val = ds.Tables[0].Rows[i][names].ToString();
                                        if (names == "ActionDesc")
                                        {
                                            if (val == "" || val == "0")
                                            {
                                                document = "";
                                            }
                                            else
                                            {
                                                document = gettextpop(val);
                                            }
                                        }
                                        if (names == "BankCode")
                                        {
                                            if (val != "")
                                            {
                                                bankname = gettextbank(val);
                                            }
                                            else
                                            {
                                                bankname = "";
                                            }
                                        }
                                        if (names == "ActionStatus")
                                        {
                                            if (val == "0" || val == "")
                                            {
                                                action = "Pending";
                                            }
                                            if (val == "1")
                                            {
                                                action = "Completed";

                                            }
                                            //else
                                            //{
                                            //    action = gettextpopact(val);
                                            //}
                                        }
                                        if (names == "ForwardPerson")//delsi0801
                                        {
                                            if (val == "0" || val == "")
                                            {
                                                reveivedPer_Name = "";
                                            }
                                            else
                                            {
                                                reveivedPer_Name = getstaffname(val);
                                            }
                                        }
                                        if (names == "ResponseStaff")
                                        {
                                            if (val == "0" || val == "")
                                            {
                                                res_staff = "";
                                            }
                                            else
                                            {
                                                res_staff = getstaffname(val);
                                            }
                                        }
                                        if (names == "staff_code")
                                        {
                                            if (val.Trim() == "" || val.Trim() == "0")
                                            {
                                                staff = "";
                                            }
                                            else
                                            {
                                                staff = getstaffname(val);
                                            }
                                        }
                                        if (names == "PaymentType")
                                        {
                                            if (val.Trim() == "0")
                                            {
                                                paymenttype = "Cheque";
                                            }
                                            else if (val.Trim() == "1")
                                            {
                                                paymenttype = "DD";
                                            }
                                            else
                                            {
                                                paymenttype = "";
                                            }
                                        }
                                        if (names == "App_No")
                                        {
                                            if (val.Trim() == "" || val.Trim() == "0")
                                            {
                                                studentname = "";
                                            }
                                            else
                                            {
                                                string appno = d2.GetFunction("select roll_no  from Registration where app_no ='" + val + "'");
                                                if (appno == "0")
                                                {
                                                    studentname = "";
                                                }
                                                else
                                                {
                                                    string name_stud = d2.GetFunction("select Stud_Name from Registration where Roll_No='" + appno + "'");
                                                    studentname = name_stud;
                                                }
                                            }
                                        }
                                        if (names == "MoveTo")
                                        {
                                            if (val == "1")
                                            {
                                                movevalue = "Department";
                                            }
                                            if (val == "2")
                                            {
                                                movevalue = "Individual";
                                            }
                                            if (val == "3")
                                            {
                                                movevalue = "Department and Individual";
                                            }
                                        }
                                        if (names == "ToDeptCode")
                                        {
                                            if (val.Trim() == "0" || val.Trim() == "")
                                            {
                                                department_to = "";
                                            }
                                            else
                                            {
                                                string[] split = val.Split(',');
                                                if (split.Length == 1)
                                                {
                                                    department_to = getdepartment(val);
                                                }
                                                else
                                                {
                                                    todeptsplit = getdepartment(split[0]);
                                                    todeptsplit1 = getdepartment(split[1]);
                                                    department_to = todeptsplit + "," + todeptsplit1;
                                                }
                                            }
                                        }
                                        if (names == "ToCCDeptCode")
                                        {
                                            if (val.Trim() == "0" || val.Trim() == "")
                                            {
                                                department_cc = "";
                                            }
                                            else
                                            {
                                                string[] split1 = val.Split(',');
                                                if (split1.Length == 1)
                                                {
                                                    department_cc = getdepartment(val);
                                                }
                                                else
                                                {
                                                    ccdeptsplit = getdepartment(split1[0]);
                                                    ccdeptsplit1 = getdepartment(split1[1]);
                                                    department_cc = ccdeptsplit + "," + ccdeptsplit1;
                                                }
                                            }
                                        }
                                        if (names == "individual_code")
                                        {
                                            if (val.Trim() == "0" || val.Trim() == "")
                                            {
                                                staff_to = "";
                                            }
                                            else
                                            {
                                                string[] split = val.Split(',');
                                                if (split.Length == 1)
                                                {
                                                    staff_to = getstaffname(val);
                                                }
                                                else
                                                {
                                                    toindisplit = getstaffname(split[0]);
                                                    toindisplit1 = getstaffname(split[1]);
                                                    staff_to = toindisplit + "," + toindisplit1;
                                                }
                                            }
                                        }
                                        if (names == "ccindividual_code")
                                        {
                                            if (val.Trim() == "0" || val.Trim() == "")
                                            {
                                                staff_cc = "";
                                            }
                                            else
                                            {
                                                string[] split1 = val.Split(',');
                                                if (split1.Length == 1)
                                                {
                                                    staff_cc = getstaffname(val);
                                                }
                                                else
                                                {
                                                    ccindisplit = getstaffname(split1[0]);
                                                    ccindisplit1 = getstaffname(split1[1]);
                                                    staff_cc = ccindisplit + "," + ccindisplit1;
                                                }
                                            }
                                        }
                                        if (names == "Priority")
                                        {
                                            if (val.Trim() == "0")
                                            {
                                                priorityvalue = "";
                                            }
                                            else
                                            {
                                                priorityvalue = gettext(val);
                                            }
                                        }
                                        if (names == "TapalType")
                                        {
                                            if (val.Trim() == "0")
                                            {
                                                modevalue = "";
                                            }
                                            else
                                            {
                                                modevalue = gettext1(val);
                                            }
                                        }
                                        if (names == "type")
                                            if (val == "False")
                                            {
                                                typevalue = Convert.ToString("IN");
                                            }
                                        if (val == "True")
                                        {
                                            typevalue = Convert.ToString("OUT");
                                        }
                                        FarPoint.Web.Spread.TextCellType textcel_type = new FarPoint.Web.Spread.TextCellType();
                                        Fpspread9.Sheets[0].Columns[2].CellType = textcel_type;
                                        if (names == "MoveTo")
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = movevalue;
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else if (names == "PaymentType")
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = paymenttype;
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                        }
                                        else if (names == "ActionDesc")
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = document;
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                        }
                                        else if (names == "ActionStatus")
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = action;
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Width = 100;
                                        }
                                        else if (names == "ResponseStaff")
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = res_staff;
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else if (names == "BankCode")
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = bankname;
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else if (names == "staff_code")
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = staff;
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                        }
                                        else if (names == "App_No")
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = studentname;
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Width = 150;

                                        }
                                        else if (names == "ToDeptCode")
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = department_to;
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                        }
                                        else if (names == "ToCCDeptCode")
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = department_cc;
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                        }
                                        else if (names == "individual_code")
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = staff_to;
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                        }
                                        else if (names == "ccindividual_code")
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = staff_cc;
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Width = 350;
                                        }
                                        else if (names == "Priority")
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = priorityvalue;
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                        }
                                        else if (names == "TapalType")
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = modevalue;
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                        }
                                        else if (names == "type")
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = typevalue;
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Width = 50;
                                        }


                                        else if (names == "ForwardPerson")
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = reveivedPer_Name;
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else if (names == "TapalCode")//added by kowshi09.05.2018
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else if (names == "DateTime")//added by saranya 21.08.2018
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                        }
                                        else
                                        {
                                            if (names == "RefNo")
                                            {
                                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                            }
                                            else
                                            {
                                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Left;
                                            }
                                            if (names == "TapalInwardDate")
                                            {
                                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Width = 85;
                                            }
                                            else if (names == "TapalInwardTime")
                                            {
                                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Width = 80;
                                            }
                                            else
                                            {
                                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                            }
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();//names binding here(company/others)
                                        }
                                        Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Font.Name = "Book Antiqua";
                                        Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Font.Size = FontUnit.Medium;
                                        Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                        string color = Convert.ToString(ds.Tables[0].Rows[i]["ViewStatus"]);
                                        string colors = Convert.ToString(ds.Tables[0].Rows[i]["agreestatus"]);
                                        if (color == "True")
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                        }
                                        if (colors == "1")
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#7FFFD4");
                                        }
                                        if (colors == "2")
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#CD5C5C");
                                        }
                                    }
                                }
                            }
                            Fpspread9.Sheets[0].PageSize = Fpspread9.Sheets[0].RowCount;
                            // div7.Visible = true;
                            Fpspread9.Width = 900;
                            Fpspread9.Height = 300;
                            pheaderfilterall.Visible = true;
                            pcolumnorderall.Visible = true;
                            Fpspread9.Visible = true;
                            btn_del_stud.Visible = false;
                            div_report.Visible = true;
                        }
                    }
                }
            }
            //  spread_others();
            div_others.Visible = false;
            div_student.Visible = false;
            div_staff.Visible = false;
            div_individual.Visible = false;
            div_company.Visible = false;
            div_mag.Visible = false;
            div_parent.Visible = false;
            div_all.Visible = true;
        }
        catch (Exception ex)
        {
            //  d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");

        }
    }

    [System.Web.Services.WebMethod]
    [System.Web.Script.Services.ScriptMethod()]
    public static List<string> Getrno(string prefixText)
    {
        WebService ws = new WebService();
        List<string> name = new List<string>();
        string query = "select Roll_No from Registration where CC=0 and DelFlag =0 and Exam_Flag <>'DEBAR' and Roll_No like '" + prefixText + "%'";
        name = ws.Getname(query);
        return name;
    }

    [System.Web.Services.WebMethod]
    [System.Web.Script.Services.ScriptMethod()]
    public static List<string> Getstudname(string prefixText)
    {
        WebService ws = new WebService();
        List<string> name = new List<string>();
        string query = "select a.stud_name,r.Roll_No from applyn a,Registration r ,Degree d,course c,Department dt  where a.app_no=r.app_no and r.degree_code=d.Degree_Code and d.Course_Id=c.Course_Id and d.Dept_Code=dt.Dept_Code  and r.CC=0 and r.DelFlag =0 and r.Exam_Flag <>'DEBAR' and a.stud_name like '" + prefixText + "%'";
        name = ws.Getname(query);
        return name;
    }

    [System.Web.Services.WebMethod]
    [System.Web.Script.Services.ScriptMethod()]
    public static List<string> Getstaff(string prefixText)
    {
        WebService ws = new WebService();
        List<string> name = new List<string>();
        string query = "select staff_name  from staffmaster where resign =0 and settled =0 and staff_name like  '" + prefixText + "%'";
        name = ws.Getname(query);
        return name;
    }

    [System.Web.Services.WebMethod]
    [System.Web.Script.Services.ScriptMethod()]
    public static List<string> Getparentname(string prefixText)
    {
        WebService ws = new WebService();
        List<string> name = new List<string>();
        string query = "select parent_name from applyn where parent_name like '" + prefixText + "%'";
        name = ws.Getname(query);
        return name;
    }

    [System.Web.Services.WebMethod]
    [System.Web.Script.Services.ScriptMethod()]
    public static List<string> getcompname(string prefixText)
    {
        WebService ws = new WebService();
        List<string> name = new List<string>();
        string query = "select distinct FromName  from TapalInward where MemType='4' and FromName like '" + prefixText + "%'";
        name = ws.Getname(query);
        return name;
    }

    [System.Web.Services.WebMethod]
    [System.Web.Script.Services.ScriptMethod()]
    public static List<string> getindivame(string prefixText)
    {
        WebService ws = new WebService();
        List<string> name = new List<string>();
        string query = "select distinct FromName  from TapalInward where MemType='5' and FromName like '" + prefixText + "%'";
        name = ws.Getname(query);
        return name;
    }

    [System.Web.Services.WebMethod]
    [System.Web.Script.Services.ScriptMethod()]
    public static List<string> getmagname(string prefixText)
    {
        WebService ws = new WebService();
        List<string> name = new List<string>();
        string query = "select distinct MagazineName  from TapalInward where MemType='6' and MagazineName like '" + prefixText + "%'";
        name = ws.Getname(query);
        return name;
    }

    [System.Web.Services.WebMethod]
    [System.Web.Script.Services.ScriptMethod()]
    public static List<string> getothers(string prefixText)
    {
        WebService ws = new WebService();
        List<string> name = new List<string>();
        string query = "select distinct FromName  from TapalInward where MemType='7' and FromName like '" + prefixText + "%'";
        name = ws.Getname(query);
        return name;
    }

    protected void txtexcelname_TextChanged(object sender, EventArgs e)
    {
        try
        {
            txt_excelname.Visible = true;
            btn_Excel.Visible = true;
            btn_printmaster.Visible = true;
            lbl_reportname.Visible = true;
            btn_Excel.Focus();
            if (txt_excelname.Text == "")
            {
                lbl_norec.Visible = true;
            }
            else if (txt_excelname.Text != "")
            {
                lbl_norec.Visible = false;
                lbl_norec.Text = "";
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void btnExcel_Click(object sender, EventArgs e)
    {
        try
        {
            string report = txt_excelname.Text;
            if (report.ToString().Trim() != "")
            {
                if (div_student.Visible == true)
                {
                    d2.printexcelreport(Fpspread1, report);
                }
                else if (div_parent.Visible == true)
                {
                    d2.printexcelreport(Fpspread3, report);
                }
                else if (div_staff.Visible == true)
                {
                    d2.printexcelreport(Fpspread2, report);
                }
                else if (div_company.Visible == true)
                {
                    d2.printexcelreport(Fpspread4, report);
                }
                else if (div_individual.Visible == true)
                {
                    d2.printexcelreport(Fpspread5, report);
                }
                else if (div_mag.Visible == true)
                {
                    d2.printexcelreport(Fpspread6, report);
                }
                else if (div_others.Visible == true)
                {
                    d2.printexcelreport(Fpspread7, report);
                }
                else if (div_all.Visible == true)
                {
                    d2.printexcelreport(Fpspread9, report);
                }
                lbl_norec.Visible = false;
            }
            else
            {
                lbl_norec.Text = "Please Enter Your Report Name";
                lbl_norec.Visible = true;
            }
            btn_Excel.Focus();
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
            lbl_norec.Text = ex.ToString();
        }
    }

    public void btn_printmaster_Click(object sender, EventArgs e)
    {
        try
        {
            string actionStatus_val = string.Empty;
            if (txt_status.Text.Trim() != "--Select--")
                actionStatus_val = cbl_status.SelectedItem.Value;
            string status = string.Empty;
            if (actionStatus_val == "0")
            {
                status = "Pending";

            }
            if (actionStatus_val == "1")
            {
                status = "Completed";
            }

            DateTime now = DateTime.Now;
            string datetime = Convert.ToString(now);
            string[] split = datetime.Split(' ');
            string dateval = split[0];
            string[] splitsec = dateval.Split('/');
            string dateformat = splitsec[1] + "-" + splitsec[0] + "-" + splitsec[2];
            string attendance = string.Empty;
            if (status != "")
            {

                attendance = "Letter Document Inward Report" + '\n' + "List of Documents " + status + " as on" + " " + dateformat;
            }
            if (txt_status.Text.Trim() == "--Select--")
            {

                attendance = "Letter Document Inward Report";
            }


            string pagename = "LetterInwardReport.aspx";
            if (div_student.Visible == true)
            {
                Printcontrol.loadspreaddetails(Fpspread1, pagename, attendance);
            }
            else if (div_staff.Visible == true)
            {
                Printcontrol.loadspreaddetails(Fpspread2, pagename, attendance);
            }
            else if (div_parent.Visible == true)
            {
                Printcontrol.loadspreaddetails(Fpspread3, pagename, attendance);
            }
            else if (div_company.Visible == true)
            {
                Printcontrol.loadspreaddetails(Fpspread4, pagename, attendance);
            }
            else if (div_individual.Visible == true)
            {
                Printcontrol.loadspreaddetails(Fpspread5, pagename, attendance);
            }
            else if (div_mag.Visible == true)
            {
                Printcontrol.loadspreaddetails(Fpspread6, pagename, attendance);
            }
            else if (div_others.Visible == true)
            {
                Printcontrol.loadspreaddetails(Fpspread7, pagename, attendance);
            }
            else if (div_all.Visible == true)
            {
                Printcontrol.loadspreaddetails(Fpspread9, pagename, attendance);
            }
            Printcontrol.Visible = true;
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    //************ staff***********************

    public void cblcolumnorder_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CheckBox_column.Checked = false;
            string value = "";
            int index;
            cblcolumnorder.Items[0].Selected = true;
            cblcolumnorder.Items[0].Enabled = false;
            value = string.Empty;
            string result = Request.Form["__EVENTTARGET"];
            string[] checkedBox = result.Split('$');
            index = int.Parse(checkedBox[checkedBox.Length - 1]);
            string sindex = Convert.ToString(index);
            if (cblcolumnorder.Items[index].Selected)
            {
                if (!Itemindex.Contains(sindex))
                {
                    if (tborder.Text == "")
                    {
                        ItemList.Add("Roll No");
                    }
                    //ItemList.Add("Admission No");
                    //ItemList.Add("Name");
                    ItemList.Add(cblcolumnorder.Items[index].Text.ToString());
                    Itemindex.Add(sindex);
                }
            }
            else
            {
                ItemList.Remove(cblcolumnorder.Items[index].Text.ToString());
                Itemindex.Remove(sindex);
            }
            for (int i = 0; i < cblcolumnorder.Items.Count; i++)
            {
                //if (i == 0 || i == 1 || i == 2)
                //{
                //    cblcolumnorder.Items[0].Selected = true;
                //    cblcolumnorder.Items[1].Selected = true;
                //    cblcolumnorder.Items[2].Selected = true;
                //}
                if (cblcolumnorder.Items[i].Selected == false)
                {
                    sindex = Convert.ToString(i);
                    ItemList.Remove(cblcolumnorder.Items[i].Text.ToString());
                    Itemindex.Remove(sindex);
                }
            }
            lnk_columnorder.Visible = true;
            tborder.Visible = true;
            tborder.Text = "";
            for (int i = 0; i < ItemList.Count; i++)
            {
                tborder.Text = tborder.Text + ItemList[i].ToString();
                tborder.Text = tborder.Text + "(" + (i + 1).ToString() + ")  ";
            }
            if (ItemList.Count == 22)
            {
                CheckBox_column.Checked = true;
            }
            if (ItemList.Count == 0)
            {
                tborder.Visible = false;
                lnk_columnorder.Visible = false;
            }
            //  Button2.Focus();
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void CheckBox_column_CheckedChanged(object sender, EventArgs e)
    {
        try
        {
            if (CheckBox_column.Checked == true)
            {
                ItemList.Clear();
                for (int i = 0; i < cblcolumnorder.Items.Count; i++)
                {
                    string si = Convert.ToString(i);
                    cblcolumnorder.Items[i].Selected = true;
                    lnk_columnorder.Visible = true;
                    ItemList.Add(cblcolumnorder.Items[i].Text.ToString());
                    Itemindex.Add(si);
                }
                lnk_columnorder.Visible = true;
                tborder.Visible = true;
                tborder.Text = "";
                int j = 0;
                for (int i = 0; i < ItemList.Count; i++)
                {
                    j = j + 1;
                    tborder.Text = tborder.Text + ItemList[i].ToString();
                    tborder.Text = tborder.Text + "(" + (j).ToString() + ")  ";
                }
            }
            else
            {
                for (int i = 0; i < cblcolumnorder.Items.Count; i++)
                {
                    cblcolumnorder.Items[i].Selected = false;
                    lnk_columnorder.Visible = false;
                    ItemList.Clear();
                    Itemindex.Clear();
                    cblcolumnorder.Items[0].Enabled = false;
                }
                tborder.Text = "";
                tborder.Visible = false;
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void LinkButtonsremove_Click(object sender, EventArgs e)
    {
        try
        {
            cblcolumnorder.ClearSelection();
            CheckBox_column.Checked = false;
            lnk_columnorder.Visible = false;
            //cblcolumnorder.Items[0].Selected = true;
            ItemList.Clear();
            Itemindex.Clear();
            tborder.Text = "";
            tborder.Visible = false;
            //Button2.Focus();
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    //************* parent***************************

    public void cblcolumnorder1_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CheckBox_column11.Checked = false;
            string value = "";
            int index;
            cblcolumnorder1.Items[0].Selected = true;
            cblcolumnorder1.Items[0].Enabled = false;
            value = string.Empty;
            string result = Request.Form["__EVENTTARGET"];
            string[] checkedBox = result.Split('$');
            index = int.Parse(checkedBox[checkedBox.Length - 1]);
            string sindex = Convert.ToString(index);
            if (cblcolumnorder1.Items[index].Selected)
            {
                if (!Itemindex_par.Contains(sindex))
                {
                    if (tborder1.Text == "")
                    {
                        ItemList_par.Add("Roll No");
                    }
                    //ItemList.Add("Admission No");
                    //ItemList.Add("Name");
                    ItemList_par.Add(cblcolumnorder1.Items[index].Text.ToString());
                    Itemindex_par.Add(sindex);
                }
            }
            else
            {
                ItemList_par.Remove(cblcolumnorder1.Items[index].Text.ToString());
                Itemindex_par.Remove(sindex);
            }
            for (int i = 0; i < cblcolumnorder1.Items.Count; i++)
            {
                //if (i == 0 || i == 1 || i == 2)
                //{
                //    cblcolumnorder.Items[0].Selected = true;
                //    cblcolumnorder.Items[1].Selected = true;
                //    cblcolumnorder.Items[2].Selected = true;
                //}
                if (cblcolumnorder1.Items[i].Selected == false)
                {
                    sindex = Convert.ToString(i);
                    ItemList_par.Remove(cblcolumnorder1.Items[i].Text.ToString());
                    Itemindex_par.Remove(sindex);
                }
            }
            LinkButton1.Visible = true;
            tborder1.Visible = true;
            tborder1.Text = "";
            for (int i = 0; i < ItemList_par.Count; i++)
            {
                tborder1.Text = tborder1.Text + ItemList_par[i].ToString();
                tborder1.Text = tborder1.Text + "(" + (i + 1).ToString() + ")  ";
            }
            if (ItemList_par.Count == 22)
            {
                CheckBox_column11.Checked = true;
            }
            if (ItemList_par.Count == 0)
            {
                tborder1.Visible = false;
                LinkButton1.Visible = false;
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void CheckBox_column1_CheckedChanged(object sender, EventArgs e)
    {
        try
        {
            if (CheckBox_column11.Checked == true)
            {
                ItemList_par.Clear();
                for (int i = 0; i < cblcolumnorder1.Items.Count; i++)
                {
                    string si = Convert.ToString(i);
                    cblcolumnorder1.Items[i].Selected = true;
                    LinkButton1.Visible = true;
                    ItemList_par.Add(cblcolumnorder1.Items[i].Text.ToString());
                    Itemindex_par.Add(si);
                }
                LinkButton1.Visible = true;
                tborder1.Visible = true;
                tborder1.Text = "";
                int j = 0;
                for (int i = 0; i < ItemList_par.Count; i++)
                {
                    j = j + 1;
                    tborder1.Text = tborder1.Text + ItemList_par[i].ToString();
                    tborder1.Text = tborder1.Text + "(" + (j).ToString() + ")  ";
                }
            }
            else
            {
                for (int i = 0; i < cblcolumnorder1.Items.Count; i++)
                {
                    cblcolumnorder1.Items[i].Selected = false;
                    LinkButton1.Visible = false;
                    ItemList_par.Clear();
                    Itemindex_par.Clear();
                    cblcolumnorder1.Items[0].Enabled = false;
                }
                tborder1.Text = "";
                tborder1.Visible = false;
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void LinkButtonsremove1_Click(object sender, EventArgs e)
    {
        try
        {
            cblcolumnorder1.ClearSelection();
            CheckBox_column11.Checked = false;
            LinkButton1.Visible = false;
            ItemList_par.Clear();
            Itemindex_par.Clear();
            tborder1.Text = "";
            tborder1.Visible = false;
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    // ***************** company**********************

    public void cblcolumnorder2_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CheckBox_column2.Checked = false;
            string value = "";
            int index;
            cblcolumnorder2.Items[0].Selected = true;
            cblcolumnorder2.Items[0].Enabled = false;
            value = string.Empty;
            string result = Request.Form["__EVENTTARGET"];
            string[] checkedBox = result.Split('$');
            index = int.Parse(checkedBox[checkedBox.Length - 1]);
            string sindex = Convert.ToString(index);
            if (cblcolumnorder2.Items[index].Selected)
            {
                if (!Itemindex_comp.Contains(sindex))
                {
                    if (tborder2.Text == "")
                    {
                        ItemList_comp.Add("Roll No");
                    }
                    //ItemList.Add("Admission No");
                    //ItemList.Add("Name");
                    ItemList_comp.Add(cblcolumnorder2.Items[index].Text.ToString());
                    Itemindex_comp.Add(sindex);
                }
            }
            else
            {
                ItemList_comp.Remove(cblcolumnorder2.Items[index].Text.ToString());
                Itemindex_comp.Remove(sindex);
            }
            for (int i = 0; i < cblcolumnorder2.Items.Count; i++)
            {
                //if (i == 0 || i == 1 || i == 2)
                //{
                //    cblcolumnorder.Items[0].Selected = true;
                //    cblcolumnorder.Items[1].Selected = true;
                //    cblcolumnorder.Items[2].Selected = true;
                //}
                if (cblcolumnorder2.Items[i].Selected == false)
                {
                    sindex = Convert.ToString(i);
                    ItemList_comp.Remove(cblcolumnorder2.Items[i].Text.ToString());
                    Itemindex_comp.Remove(sindex);
                }
            }
            LinkButton4.Visible = true;
            tborder2.Visible = true;
            tborder2.Text = "";
            for (int i = 0; i < ItemList_comp.Count; i++)
            {
                tborder2.Text = tborder2.Text + ItemList_comp[i].ToString();
                tborder2.Text = tborder2.Text + "(" + (i + 1).ToString() + ")  ";
            }
            if (ItemList_comp.Count == 14)
            {
                CheckBox_column2.Checked = true;
            }
            if (ItemList_comp.Count == 0)
            {
                tborder4.Visible = false;
                LinkButton4.Visible = false;
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void CheckBox_column2_CheckedChanged(object sender, EventArgs e)
    {
        try
        {
            if (CheckBox_column2.Checked == true)
            {
                ItemList_comp.Clear();
                for (int i = 0; i < cblcolumnorder2.Items.Count; i++)
                {
                    string si = Convert.ToString(i);
                    cblcolumnorder2.Items[i].Selected = true;
                    LinkButton4.Visible = true;
                    ItemList_comp.Add(cblcolumnorder2.Items[i].Text.ToString());
                    Itemindex_comp.Add(si);
                }
                LinkButton4.Visible = true;
                tborder2.Visible = true;
                tborder2.Text = "";
                int j = 0;
                for (int i = 0; i < ItemList_comp.Count; i++)
                {
                    j = j + 1;
                    tborder2.Text = tborder2.Text + ItemList_comp[i].ToString();
                    tborder2.Text = tborder2.Text + "(" + (j).ToString() + ")  ";
                }
            }
            else
            {
                for (int i = 0; i < cblcolumnorder2.Items.Count; i++)
                {
                    cblcolumnorder2.Items[i].Selected = false;
                    LinkButton4.Visible = false;
                    ItemList_comp.Clear();
                    Itemindex_comp.Clear();
                    cblcolumnorder2.Items[0].Enabled = false;
                }
                tborder2.Text = "";
                tborder2.Visible = false;
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void LinkButtonsremove2_Click(object sender, EventArgs e)
    {
        try
        {
            cblcolumnorder2.ClearSelection();
            CheckBox_column2.Checked = false;
            LinkButton4.Visible = false;
            ItemList_comp.Clear();
            Itemindex_comp.Clear();
            tborder2.Text = "";
            tborder2.Visible = false;
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    //**************** individual****************************

    public void CheckBox_column3_CheckedChanged(object sender, EventArgs e)
    {
        try
        {
            if (CheckBox_column3.Checked == true)
            {
                ItemList_indi.Clear();
                for (int i = 0; i < cblcolumnorder3.Items.Count; i++)
                {
                    string si = Convert.ToString(i);
                    cblcolumnorder3.Items[i].Selected = true;
                    LinkButton5.Visible = true;
                    ItemList_indi.Add(cblcolumnorder3.Items[i].Text.ToString());
                    Itemindex_indi.Add(si);
                }
                LinkButton4.Visible = true;
                tborder3.Visible = true;
                tborder3.Text = "";
                int j = 0;
                for (int i = 0; i < ItemList_indi.Count; i++)
                {
                    j = j + 1;
                    tborder3.Text = tborder3.Text + ItemList_indi[i].ToString();
                    tborder3.Text = tborder3.Text + "(" + (j).ToString() + ")  ";
                }
            }
            else
            {
                for (int i = 0; i < cblcolumnorder3.Items.Count; i++)
                {
                    cblcolumnorder3.Items[i].Selected = false;
                    LinkButton5.Visible = false;
                    ItemList_indi.Clear();
                    Itemindex_indi.Clear();
                    cblcolumnorder3.Items[0].Enabled = false;
                }
                tborder3.Text = "";
                tborder3.Visible = false;
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void LinkButtonsremove3_Click(object sender, EventArgs e)
    {
        try
        {
            cblcolumnorder3.ClearSelection();
            CheckBox_column3.Checked = false;
            LinkButton5.Visible = false;
            ItemList_indi.Clear();
            Itemindex_indi.Clear();
            tborder3.Text = "";
            tborder3.Visible = false;
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void cblcolumnorder3_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CheckBox_column3.Checked = false;
            string value = "";
            int index;
            cblcolumnorder3.Items[0].Selected = true;
            cblcolumnorder3.Items[0].Enabled = false;
            value = string.Empty;
            string result = Request.Form["__EVENTTARGET"];
            string[] checkedBox = result.Split('$');
            index = int.Parse(checkedBox[checkedBox.Length - 1]);
            string sindex = Convert.ToString(index);
            if (cblcolumnorder3.Items[index].Selected)
            {
                if (!Itemindex_indi.Contains(sindex))
                {
                    if (tborder3.Text == "")
                    {
                        ItemList_indi.Add("Roll No");
                    }
                    //ItemList.Add("Admission No");
                    //ItemList.Add("Name");
                    ItemList_indi.Add(cblcolumnorder3.Items[index].Text.ToString());
                    Itemindex_indi.Add(sindex);
                }
            }
            else
            {
                ItemList_indi.Remove(cblcolumnorder3.Items[index].Text.ToString());
                Itemindex_indi.Remove(sindex);
            }
            for (int i = 0; i < cblcolumnorder3.Items.Count; i++)
            {
                //if (i == 0 || i == 1 || i == 2)
                //{
                //    cblcolumnorder.Items[0].Selected = true;
                //    cblcolumnorder.Items[1].Selected = true;
                //    cblcolumnorder.Items[2].Selected = true;
                //}
                if (cblcolumnorder3.Items[i].Selected == false)
                {
                    sindex = Convert.ToString(i);
                    ItemList_indi.Remove(cblcolumnorder3.Items[i].Text.ToString());
                    Itemindex_indi.Remove(sindex);
                }
            }
            LinkButton5.Visible = true;
            tborder3.Visible = true;
            tborder3.Text = "";
            for (int i = 0; i < ItemList_indi.Count; i++)
            {
                tborder3.Text = tborder3.Text + ItemList_indi[i].ToString();
                tborder3.Text = tborder3.Text + "(" + (i + 1).ToString() + ")  ";
            }
            if (ItemList_indi.Count == 14)
            {
                CheckBox_column3.Checked = true;
            }
            if (ItemList_indi.Count == 0)
            {
                tborder3.Visible = false;
                LinkButton5.Visible = false;
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    //******************** magazine************************

    public void CheckBox_column4_CheckedChanged(object sender, EventArgs e)
    {
        try
        {
            if (CheckBox_column4.Checked == true)
            {
                ItemList_mag.Clear();
                for (int i = 0; i < cblcolumnorder4.Items.Count; i++)
                {
                    string si = Convert.ToString(i);
                    cblcolumnorder4.Items[i].Selected = true;
                    LinkButton6.Visible = true;
                    ItemList_mag.Add(cblcolumnorder4.Items[i].Text.ToString());
                    Itemindex_mag.Add(si);
                }
                LinkButton6.Visible = true;
                tborder4.Visible = true;
                tborder4.Text = "";
                int j = 0;
                for (int i = 0; i < ItemList_mag.Count; i++)
                {
                    j = j + 1;
                    tborder4.Text = tborder4.Text + ItemList_mag[i].ToString();
                    tborder4.Text = tborder4.Text + "(" + (j).ToString() + ")  ";
                }
            }
            else
            {
                for (int i = 0; i < cblcolumnorder4.Items.Count; i++)
                {
                    cblcolumnorder4.Items[i].Selected = false;
                    LinkButton6.Visible = false;
                    ItemList_mag.Clear();
                    Itemindex_mag.Clear();
                    cblcolumnorder4.Items[0].Enabled = false;
                }
                tborder4.Text = "";
                tborder4.Visible = false;
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void LinkButtonsremove4_Click(object sender, EventArgs e)
    {
        try
        {
            cblcolumnorder4.ClearSelection();
            CheckBox_column4.Checked = false;
            LinkButton6.Visible = false;
            ItemList_mag.Clear();
            Itemindex_mag.Clear();
            tborder4.Text = "";
            tborder4.Visible = false;
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void cblcolumnorder4_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CheckBox_column4.Checked = false;
            string value = "";
            int index;
            cblcolumnorder4.Items[0].Selected = true;
            cblcolumnorder4.Items[0].Enabled = false;
            value = string.Empty;
            string result = Request.Form["__EVENTTARGET"];
            string[] checkedBox = result.Split('$');
            index = int.Parse(checkedBox[checkedBox.Length - 1]);
            string sindex = Convert.ToString(index);
            if (cblcolumnorder4.Items[index].Selected)
            {
                if (!Itemindex_mag.Contains(sindex))
                {
                    if (tborder4.Text == "")
                    {
                        ItemList_mag.Add("Roll No");
                    }
                    //ItemList.Add("Admission No");
                    //ItemList.Add("Name");
                    ItemList_mag.Add(cblcolumnorder4.Items[index].Text.ToString());
                    Itemindex_mag.Add(sindex);
                }
            }
            else
            {
                ItemList_mag.Remove(cblcolumnorder4.Items[index].Text.ToString());
                Itemindex_mag.Remove(sindex);
            }
            for (int i = 0; i < cblcolumnorder4.Items.Count; i++)
            {
                //if (i == 0 || i == 1 || i == 2)
                //{
                //    cblcolumnorder.Items[0].Selected = true;
                //    cblcolumnorder.Items[1].Selected = true;
                //    cblcolumnorder.Items[2].Selected = true;
                //}
                if (cblcolumnorder4.Items[i].Selected == false)
                {
                    sindex = Convert.ToString(i);
                    ItemList_mag.Remove(cblcolumnorder4.Items[i].Text.ToString());
                    Itemindex_mag.Remove(sindex);
                }
            }
            LinkButton6.Visible = true;
            tborder4.Visible = true;
            tborder4.Text = "";
            for (int i = 0; i < ItemList_mag.Count; i++)
            {
                tborder4.Text = tborder4.Text + ItemList_mag[i].ToString();
                tborder4.Text = tborder4.Text + "(" + (i + 1).ToString() + ")  ";
            }
            if (ItemList_mag.Count == 14)
            {
                CheckBox_column4.Checked = true;
            }
            if (ItemList_mag.Count == 0)
            {
                tborder4.Visible = false;
                LinkButton6.Visible = false;
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    //********************** others**********************

    public void CheckBox_column5_CheckedChanged(object sender, EventArgs e)
    {
        try
        {
            if (CheckBox_column5.Checked == true)
            {
                ItemList_othr.Clear();
                for (int i = 0; i < cblcolumnorder5.Items.Count; i++)
                {
                    string si = Convert.ToString(i);
                    cblcolumnorder5.Items[i].Selected = true;
                    LinkButton7.Visible = true;
                    ItemList_othr.Add(cblcolumnorder5.Items[i].Text.ToString());
                    Itemindex_othr.Add(si);
                }
                LinkButton7.Visible = true;
                tborder5.Visible = true;
                tborder5.Text = "";
                int j = 0;
                for (int i = 0; i < ItemList_othr.Count; i++)
                {
                    j = j + 1;
                    tborder5.Text = tborder5.Text + ItemList_othr[i].ToString();
                    tborder5.Text = tborder5.Text + "(" + (j).ToString() + ")  ";
                }
            }
            else
            {
                for (int i = 0; i < cblcolumnorder5.Items.Count; i++)
                {
                    cblcolumnorder5.Items[i].Selected = false;
                    LinkButton7.Visible = false;
                    ItemList_othr.Clear();
                    Itemindex_othr.Clear();
                    cblcolumnorder5.Items[0].Enabled = false;
                }
                tborder5.Text = "";
                tborder5.Visible = false;
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void LinkButtonsremove5_Click(object sender, EventArgs e)
    {
        try
        {
            cblcolumnorder5.ClearSelection();
            CheckBox_column5.Checked = false;
            LinkButton7.Visible = false;
            ItemList_othr.Clear();
            Itemindex_othr.Clear();
            tborder5.Text = "";
            tborder5.Visible = false;
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void cblcolumnorder5_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CheckBox_column5.Checked = false;
            string value = "";
            int index;
            cblcolumnorder5.Items[0].Selected = true;
            cblcolumnorder5.Items[0].Enabled = false;
            value = string.Empty;
            string result = Request.Form["__EVENTTARGET"];
            string[] checkedBox = result.Split('$');
            index = int.Parse(checkedBox[checkedBox.Length - 1]);
            string sindex = Convert.ToString(index);
            if (cblcolumnorder5.Items[index].Selected)
            {
                if (!Itemindex_othr.Contains(sindex))
                {
                    if (tborder5.Text == "")
                    {
                        ItemList_othr.Add("Roll No");
                    }
                    //ItemList.Add("Admission No");
                    //ItemList.Add("Name");
                    ItemList_othr.Add(cblcolumnorder5.Items[index].Text.ToString());
                    Itemindex_othr.Add(sindex);
                }
            }
            else
            {
                ItemList_othr.Remove(cblcolumnorder5.Items[index].Text.ToString());
                Itemindex_othr.Remove(sindex);
            }
            for (int i = 0; i < cblcolumnorder5.Items.Count; i++)
            {
                //if (i == 0 || i == 1 || i == 2)
                //{
                //    cblcolumnorder.Items[0].Selected = true;
                //    cblcolumnorder.Items[1].Selected = true;
                //    cblcolumnorder.Items[2].Selected = true;
                //}
                if (cblcolumnorder5.Items[i].Selected == false)
                {
                    sindex = Convert.ToString(i);
                    ItemList_othr.Remove(cblcolumnorder5.Items[i].Text.ToString());
                    Itemindex_othr.Remove(sindex);
                }
            }
            LinkButton7.Visible = true;
            tborder5.Visible = true;
            tborder5.Text = "";
            for (int i = 0; i < ItemList_othr.Count; i++)
            {
                tborder5.Text = tborder5.Text + ItemList_othr[i].ToString();
                tborder5.Text = tborder5.Text + "(" + (i + 1).ToString() + ")  ";
            }
            if (ItemList_othr.Count == 14)
            {
                CheckBox_column5.Checked = true;
            }
            if (ItemList_othr.Count == 0)
            {
                tborder5.Visible = false;
                LinkButton7.Visible = false;
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    //***************** student*******************

    public void CheckBox_column0_CheckedChanged(object sender, EventArgs e)
    {
        try
        {
            if (CheckBox_column0.Checked == true)
            {
                ItemList_stud.Clear();
                for (int i = 0; i < cblcolumnorder0.Items.Count; i++)
                {
                    string si = Convert.ToString(i);
                    cblcolumnorder0.Items[i].Selected = true;
                    LinkButton8.Visible = true;
                    ItemList_stud.Add(cblcolumnorder0.Items[i].Text.ToString());
                    Itemindex_stud.Add(si);
                }
                LinkButton8.Visible = true;
                tborder0.Visible = true;
                tborder0.Text = "";
                int j = 0;
                for (int i = 0; i < ItemList_stud.Count; i++)
                {
                    j = j + 1;
                    tborder0.Text = tborder0.Text + ItemList_stud[i].ToString();
                    tborder0.Text = tborder0.Text + "(" + (j).ToString() + ")  ";
                }
            }
            else
            {
                for (int i = 0; i < cblcolumnorder0.Items.Count; i++)
                {
                    cblcolumnorder0.Items[i].Selected = false;
                    LinkButton8.Visible = false;
                    ItemList_stud.Clear();
                    Itemindex_stud.Clear();
                    cblcolumnorder0.Items[0].Enabled = false;
                }
                tborder0.Text = "";
                tborder0.Visible = false;
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void LinkButtonsremove0_Click(object sender, EventArgs e)
    {
        try
        {
            cblcolumnorder0.ClearSelection();
            CheckBox_column0.Checked = false;
            LinkButton8.Visible = false;
            ItemList_stud.Clear();
            Itemindex_stud.Clear();
            tborder0.Text = "";
            tborder0.Visible = false;
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void cblcolumnorder0_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CheckBox_column0.Checked = false;
            string value = "";
            int index;
            cblcolumnorder0.Items[0].Selected = true;
            cblcolumnorder0.Items[0].Enabled = false;
            value = string.Empty;
            string result = Request.Form["__EVENTTARGET"];
            string[] checkedBox = result.Split('$');
            index = int.Parse(checkedBox[checkedBox.Length - 1]);
            string sindex = Convert.ToString(index);
            if (cblcolumnorder0.Items[index].Selected)
            {
                if (!Itemindex.Contains(sindex))
                {
                    if (tborder0.Text == "")
                    {
                        ItemList_stud.Add("Roll No");
                    }
                    //ItemList.Add("Admission No");
                    //ItemList.Add("Name");
                    ItemList_stud.Add(cblcolumnorder0.Items[index].Text.ToString());
                    Itemindex_stud.Add(sindex);
                }
            }
            else
            {
                ItemList_stud.Remove(cblcolumnorder0.Items[index].Text.ToString());
                Itemindex_stud.Remove(sindex);
            }
            for (int i = 0; i < cblcolumnorder0.Items.Count; i++)
            {
                if (cblcolumnorder0.Items[i].Selected == false)
                {
                    sindex = Convert.ToString(i);
                    ItemList_stud.Remove(cblcolumnorder0.Items[i].Text.ToString());
                    Itemindex_stud.Remove(sindex);
                }
            }
            LinkButton8.Visible = true;
            tborder0.Visible = true;
            tborder0.Text = "";
            for (int i = 0; i < ItemList_stud.Count; i++)
            {
                tborder0.Text = tborder0.Text + ItemList_stud[i].ToString();
                tborder0.Text = tborder0.Text + "(" + (i + 1).ToString() + ")  ";
            }
            if (ItemList_stud.Count == 13)
            {
                CheckBox_column0.Checked = true;
            }
            if (ItemList_stud.Count == 0)
            {
                tborder0.Visible = false;
                LinkButton8.Visible = false;
            }
            //  Button2.Focus();
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    //******************* ALL **************************

    public void CheckBox_columnall_CheckedChanged(object sender, EventArgs e)
    {
        try
        {
            if (CheckBox_columnall.Checked == true)
            {
                ItemList_all.Clear();
                for (int i = 0; i < cblcolumnorderall.Items.Count; i++)
                {
                    string si = Convert.ToString(i);
                    cblcolumnorderall.Items[i].Selected = true;
                    lnk_columnorderall.Visible = true;
                    ItemList_all.Add(cblcolumnorderall.Items[i].Text.ToString());
                    Itemindex_all.Add(si);
                }
                lnk_columnorderall.Visible = true;
                tborderall.Visible = true;
                tborderall.Text = "";
                int j = 0;
                for (int i = 0; i < ItemList_all.Count; i++)
                {
                    j = j + 1;
                    tborderall.Text = tborderall.Text + ItemList_all[i].ToString();
                    tborderall.Text = tborderall.Text + "(" + (j).ToString() + ")  ";
                }
            }
            else
            {
                for (int i = 0; i < cblcolumnorderall.Items.Count; i++)
                {
                    cblcolumnorderall.Items[i].Selected = false;
                    lnk_columnorderall.Visible = false;
                    ItemList_all.Clear();
                    Itemindex_all.Clear();
                    cblcolumnorderall.Items[0].Enabled = false;
                }
                tborderall.Text = "";
                tborderall.Visible = false;
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void cblcolumnorderall_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CheckBox_columnall.Checked = false;
            string value = "";
            int index;
            cblcolumnorderall.Items[0].Selected = true;
            cblcolumnorderall.Items[0].Enabled = false;
            value = string.Empty;
            string result = Request.Form["__EVENTTARGET"];
            string[] checkedBox = result.Split('$');
            index = int.Parse(checkedBox[checkedBox.Length - 1]);
            string sindex = Convert.ToString(index);
            for (int i = 0; i < cblcolumnorderall.Items.Count; i++)
            {
                if (cblcolumnorderall.Items[i].Selected == false)
                {
                    sindex = Convert.ToString(i);
                    ItemList_all.Remove(cblcolumnorderall.Items[i].Text.ToString());
                    Itemindex_all.Remove(sindex);
                }
            }
            lnk_columnorderall.Visible = true;
            tborderall.Visible = true;
            tborderall.Text = "";
            for (int i = 0; i < ItemList_all.Count; i++)
            {
                tborderall.Text = tborder.Text + ItemList_all[i].ToString();
                tborderall.Text = tborder.Text + "(" + (i + 1).ToString() + ")  ";
            }
            if (ItemList_all.Count == 22)
            {
                CheckBox_columnall.Checked = true;
            }
            if (ItemList_all.Count == 0)
            {
                tborderall.Visible = false;
                lnk_columnorderall.Visible = false;
            }
            //  Button2.Focus();
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void LinkButtonsremoveall_Click(object sender, EventArgs e)
    {
        try
        {
            cblcolumnorderall.ClearSelection();
            CheckBox_columnall.Checked = false;
            lnk_columnorderall.Visible = false;
            //cblcolumnorder.Items[0].Selected = true;
            ItemList_all.Clear();
            Itemindex_all.Clear();
            tborderall.Text = "";
            tborderall.Visible = false;
            //Button2.Focus();
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    //*******************************************

    public void FpSpread1_CellClick(object sender, EventArgs e)
    {
        try
        {
            Cellclick = true;
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    protected void fpspread1_ButtonCommand(object sender, FarPoint.Web.Spread.SpreadCommandEventArgs e)
    {
        try
        {
            Iscompleted.Visible = false;
            Iscompleted.Checked = false;
            string activerow = "";
            string activecol = "";
            activerow = Fpspread1.ActiveSheetView.ActiveRow.ToString();
            activecol = Fpspread1.ActiveSheetView.ActiveColumn.ToString();
            string actrow = e.SheetView.ActiveRow.ToString();
            string actcol = e.SheetView.ActiveColumn.ToString();
            if (Convert.ToInt32(activecol) == 2)
            {
                string fileName = string.Empty;
                string fileid = Fpspread1.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Tag.ToString();
                path1 = Fpspread1.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text;
                string strquer = "SELECT filename,filedata,filetype FROM lettertbl WHERE fileid='" + fileid + "' and filename='" + path1 + "'";
                DataSet dsquery = d2.select_method(strquer, hat, "Text");
                for (int i = 0; i < dsquery.Tables[0].Rows.Count; i++)
                {
                    Response.ContentType = dsquery.Tables[0].Rows[i]["filetype"].ToString();
                    Response.AddHeader("Content-Disposition", "attachment;filename=\"" + dsquery.Tables[0].Rows[i]["filename"] + "\"");
                    Response.BinaryWrite((byte[])dsquery.Tables[0].Rows[i]["filedata"]);
                    Response.End();
                    Cellclick = false;
                }
            }
            else if (Convert.ToInt32(activecol) == 3)
            {
                popview.Visible = true;
                view_details();
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void FpSpread1_SelectedIndexChanged(object sender, EventArgs e)
    {
    }

    protected void fpspread2_ButtonCommand(object sender, FarPoint.Web.Spread.SpreadCommandEventArgs e)
    {
        try
        {
            loaddesc();
            string activerow = "";
            string activecol = "";
            activerow = Fpspread2.ActiveSheetView.ActiveRow.ToString();
            activecol = Fpspread2.ActiveSheetView.ActiveColumn.ToString();
            if (Convert.ToInt32(activecol) == 2)
            {
                string fileName = string.Empty;
                string fileid = Fpspread2.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Tag.ToString();
                path1 = Fpspread2.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text;
                string strquer = "SELECT filename,filedata,filetype FROM lettertbl WHERE fileid='" + fileid + "' and filename='" + path1 + "'";
                DataSet dsquery = d2.select_method(strquer, hat, "Text");
                for (int i = 0; i < dsquery.Tables[0].Rows.Count; i++)
                {
                    Response.ContentType = dsquery.Tables[0].Rows[i]["filetype"].ToString();
                    Response.AddHeader("Content-Disposition", "attachment;filename=\"" + dsquery.Tables[0].Rows[i]["filename"] + "\"");
                    Response.BinaryWrite((byte[])dsquery.Tables[0].Rows[i]["filedata"]);
                    Response.End();
                    Cellclick = false;
                }


            }
            if (Convert.ToInt32(activecol) == 3)
            {
                popview.Visible = true;
                view_details();
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    protected void fpspread3_ButtonCommand(object sender, FarPoint.Web.Spread.SpreadCommandEventArgs e)
    {
        try
        {
            string activerow = "";
            string activecol = "";
            activerow = Fpspread3.ActiveSheetView.ActiveRow.ToString();
            activecol = Fpspread3.ActiveSheetView.ActiveColumn.ToString();
            if (Convert.ToInt32(activecol) == 2)
            {
                string fileName = string.Empty;
                string fileid = Fpspread3.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Tag.ToString();
                path1 = Fpspread3.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text;
                string strquer = "SELECT filename,filedata,filetype FROM lettertbl WHERE fileid='" + fileid + "' and filename='" + path1 + "'";
                DataSet dsquery = d2.select_method(strquer, hat, "Text");
                for (int i = 0; i < dsquery.Tables[0].Rows.Count; i++)
                {
                    Response.ContentType = dsquery.Tables[0].Rows[i]["filetype"].ToString();
                    Response.AddHeader("Content-Disposition", "attachment;filename=\"" + dsquery.Tables[0].Rows[i]["filename"] + "\"");
                    Response.BinaryWrite((byte[])dsquery.Tables[0].Rows[i]["filedata"]);
                    Response.End();
                    Cellclick = false;
                }
            }
            if (Convert.ToInt32(activecol) == 3)
            {
                popview.Visible = true;
                view_details();
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    protected void fpspread4_ButtonCommand(object sender, FarPoint.Web.Spread.SpreadCommandEventArgs e)
    {
        try
        {
            string activerow = "";
            string activecol = "";
            activerow = Fpspread4.ActiveSheetView.ActiveRow.ToString();
            activecol = Fpspread4.ActiveSheetView.ActiveColumn.ToString();
            if (Convert.ToInt32(activecol) == 1)
            {
                string fileName = string.Empty;
                string fileid = Fpspread4.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Tag.ToString();
                path1 = Fpspread4.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Text;
                string strquer = "SELECT filename,filedata,filetype FROM lettertbl WHERE fileid='" + fileid + "' and filename='" + path1 + "'";
                DataSet dsquery = d2.select_method(strquer, hat, "Text");
                for (int i = 0; i < dsquery.Tables[0].Rows.Count; i++)
                {
                    Response.ContentType = dsquery.Tables[0].Rows[i]["filetype"].ToString();
                    Response.AddHeader("Content-Disposition", "attachment;filename=\"" + dsquery.Tables[0].Rows[i]["filename"] + "\"");
                    Response.BinaryWrite((byte[])dsquery.Tables[0].Rows[i]["filedata"]);
                    Response.End();
                    Cellclick = false;
                }
            }
            if (Convert.ToInt32(activecol) == 2)
            {
                popview.Visible = true;
                view_details();
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    protected void fpspread5_ButtonCommand(object sender, FarPoint.Web.Spread.SpreadCommandEventArgs e)
    {
        try
        {
            string activerow = "";
            string activecol = "";
            activerow = Fpspread5.ActiveSheetView.ActiveRow.ToString();
            activecol = Fpspread5.ActiveSheetView.ActiveColumn.ToString();
            if (Convert.ToInt32(activecol) == 2)
            {
                string fileName = string.Empty;
                string fileid = Fpspread5.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Tag.ToString();
                path1 = Fpspread5.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text;
                string strquer = "SELECT filename,filedata,filetype FROM lettertbl WHERE fileid='" + fileid + "' and filename='" + path1 + "'";
                DataSet dsquery = d2.select_method(strquer, hat, "Text");
                for (int i = 0; i < dsquery.Tables[0].Rows.Count; i++)
                {
                    Response.ContentType = dsquery.Tables[0].Rows[i]["filetype"].ToString();
                    Response.AddHeader("Content-Disposition", "attachment;filename=\"" + dsquery.Tables[0].Rows[i]["filename"] + "\"");
                    Response.BinaryWrite((byte[])dsquery.Tables[0].Rows[i]["filedata"]);
                    Response.End();
                    Cellclick = false;
                }
            }
            if (Convert.ToInt32(activecol) == 3)
            {
                popview.Visible = true;
                view_details();
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    protected void fpspread6_ButtonCommand(object sender, FarPoint.Web.Spread.SpreadCommandEventArgs e)
    {
        try
        {
            string activerow = "";
            string activecol = "";
            activerow = Fpspread6.ActiveSheetView.ActiveRow.ToString();
            activecol = Fpspread6.ActiveSheetView.ActiveColumn.ToString();
            if (Convert.ToInt32(activecol) == 2)
            {
                string fileName = string.Empty;
                string fileid = Fpspread6.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Tag.ToString();
                path1 = Fpspread6.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text;
                string strquer = "SELECT filename,filedata,filetype FROM lettertbl WHERE fileid='" + fileid + "' and filename='" + path1 + "'";
                DataSet dsquery = d2.select_method(strquer, hat, "Text");
                for (int i = 0; i < dsquery.Tables[0].Rows.Count; i++)
                {
                    Response.ContentType = dsquery.Tables[0].Rows[i]["filetype"].ToString();
                    Response.AddHeader("Content-Disposition", "attachment;filename=\"" + dsquery.Tables[0].Rows[i]["filename"] + "\"");
                    Response.BinaryWrite((byte[])dsquery.Tables[0].Rows[i]["filedata"]);
                    Response.End();
                    Cellclick = false;
                }
            }
            if (Convert.ToInt32(activecol) == 3)
            {
                popview.Visible = true;
                view_details();
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    protected void fpspread7_ButtonCommand(object sender, FarPoint.Web.Spread.SpreadCommandEventArgs e)
    {
        try
        {
            string activerow = "";
            string activecol = "";
            activerow = Fpspread7.ActiveSheetView.ActiveRow.ToString();
            activecol = Fpspread7.ActiveSheetView.ActiveColumn.ToString();
            if (Convert.ToInt32(activecol) == 2)
            {
                string fileName = string.Empty;
                string fileid = Fpspread7.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Tag.ToString();
                path1 = Fpspread7.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text;
                string strquer = "SELECT filename,filedata,filetype FROM lettertbl WHERE fileid='" + fileid + "' and filename='" + path1 + "'";
                DataSet dsquery = d2.select_method(strquer, hat, "Text");
                for (int i = 0; i < dsquery.Tables[0].Rows.Count; i++)
                {
                    Response.ContentType = dsquery.Tables[0].Rows[i]["filetype"].ToString();
                    Response.AddHeader("Content-Disposition", "attachment;filename=\"" + dsquery.Tables[0].Rows[i]["filename"] + "\"");
                    Response.BinaryWrite((byte[])dsquery.Tables[0].Rows[i]["filedata"]);
                    Response.End();
                    Cellclick = false;
                }
            }
            if (Convert.ToInt32(activecol) == 3)
            {
                popview.Visible = true;
                view_details();
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    protected void fpspread8_ButtonCommand(object sender, FarPoint.Web.Spread.SpreadCommandEventArgs e)
    {
        try
        {
            string activerow = "";
            string activecol = "";
            activerow = Fpspread8.ActiveSheetView.ActiveRow.ToString();
            activecol = Fpspread8.ActiveSheetView.ActiveColumn.ToString();
            if (Convert.ToInt32(activecol) == 0)
            {
                string fileName = string.Empty;
                string fileid = Fpspread8.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag.ToString();
                path1 = Fpspread8.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Text;
                string strquer = "SELECT filename,filedata,filetype FROM lettertbl WHERE fileid='" + fileid + "' and filename='" + path1 + "'";
                DataSet dsquery = d2.select_method(strquer, hat, "Text");
                for (int i = 0; i < dsquery.Tables[0].Rows.Count; i++)
                {
                    Response.ContentType = dsquery.Tables[0].Rows[i]["filetype"].ToString();
                    Response.AddHeader("Content-Disposition", "attachment;filename=\"" + dsquery.Tables[0].Rows[i]["filename"] + "\"");
                    Response.BinaryWrite((byte[])dsquery.Tables[0].Rows[i]["filedata"]);
                    Response.End();
                    Cellclick = false;
                }
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    protected void fpspread9_ButtonCommand(object sender, FarPoint.Web.Spread.SpreadCommandEventArgs e)//delsireff
    {
        try
        {
            string activerow = "";
            string activecol = "";
            activerow = Fpspread9.ActiveSheetView.ActiveRow.ToString();
            activecol = Fpspread9.ActiveSheetView.ActiveColumn.ToString();
            if (Convert.ToInt32(activecol) == 1)
            {
                string fileName = string.Empty;
                string fileid = Fpspread9.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Tag.ToString();
                path1 = Fpspread9.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Text;
                string strquer = "SELECT filename,filedata,filetype FROM lettertbl WHERE fileid='" + fileid + "' and filename='" + path1 + "'";
                DataSet dsquery = d2.select_method(strquer, hat, "Text");
                for (int i = 0; i < dsquery.Tables[0].Rows.Count; i++)
                {
                    Response.ContentType = dsquery.Tables[0].Rows[i]["filetype"].ToString();
                    Response.AddHeader("Content-Disposition", "attachment;filename=\"" + dsquery.Tables[0].Rows[i]["filename"] + "\"");
                    Response.BinaryWrite((byte[])dsquery.Tables[0].Rows[i]["filedata"]);
                    Response.End();
                    Cellclick = false;
                }
            }
            if (Convert.ToInt32(activecol) == 2)
            {
                popview.Visible = true;
                view_details();
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    public void btn_del_stud_Click(object sender, EventArgs e)
    {
        try
        {
            string checkvalue = "";
            string activerow = "";
            bool saveflage = false;
            int s = 0;
            if (Fpspread1.Visible == true)
            {
                for (int i = 0; i < Fpspread1.Sheets[0].RowCount; i++)
                {
                    checkvalue = Convert.ToString(Fpspread1.Sheets[0].Cells[i, 1].Value);
                    if (checkvalue == "1")
                    {
                        activerow = Fpspread1.ActiveSheetView.ActiveRow.ToString();
                        string val = Fpspread1.Sheets[0].Cells[Convert.ToInt32(activerow), 5].Text;
                        string val_code = Convert.ToString(Fpspread1.Sheets[0].Cells[Convert.ToInt32(activerow), 4].Tag);
                        string del_query = "delete TapalInward where App_No='" + val_code + "' and MemType='1'";
                        s = d2.update_method_wo_parameter(del_query, "Text");
                    }
                }
            }
            else if (Fpspread2.Visible == true)
            {
                for (int i = 0; i < Fpspread2.Sheets[0].RowCount; i++)
                {
                    checkvalue = Convert.ToString(Fpspread2.Sheets[0].Cells[i, 1].Value);
                    if (checkvalue == "1")
                    {
                        activerow = Fpspread2.ActiveSheetView.ActiveRow.ToString();
                        string val = Fpspread2.Sheets[0].Cells[Convert.ToInt32(activerow), 5].Text;
                        string val_code = Convert.ToString(Fpspread2.Sheets[0].Cells[Convert.ToInt32(activerow), 4].Tag);
                        string del_query = "delete TapalInward where staff_code='" + val_code + "' and MemType='2'";
                        s = d2.update_method_wo_parameter(del_query, "Text");
                    }
                }
            }
            else if (Fpspread3.Visible == true)
            {
                for (int i = 0; i < Fpspread3.Sheets[0].RowCount; i++)
                {
                    checkvalue = Convert.ToString(Fpspread3.Sheets[0].Cells[i, 1].Value);
                    if (checkvalue == "1")
                    {
                        activerow = Fpspread3.ActiveSheetView.ActiveRow.ToString();
                        string val = Fpspread3.Sheets[0].Cells[Convert.ToInt32(activerow), 6].Text;
                        string val_code = Convert.ToString(Fpspread3.Sheets[0].Cells[Convert.ToInt32(activerow), 5].Tag);
                        string del_query = "delete TapalInward where App_No='" + val_code + "' and MemType='3'";
                        s = d2.update_method_wo_parameter(del_query, "Text");
                    }
                }
            }
            else if (Fpspread4.Visible == true)
            {
                for (int i = 0; i < Fpspread4.Sheets[0].RowCount; i++)
                {
                    checkvalue = Convert.ToString(Fpspread4.Sheets[0].Cells[i, 1].Value);
                    if (checkvalue == "1")
                    {
                        activerow = Fpspread4.ActiveSheetView.ActiveRow.ToString();
                        string val = Fpspread4.Sheets[0].Cells[Convert.ToInt32(activerow), 6].Text;
                        // string val_code = Convert.ToString(Fpspread4.Sheets[0].Cells[Convert.ToInt32(activerow), 4].Tag);
                        string del_query = "delete TapalInward where FromName='" + val + "' and MemType='4'";
                        s = d2.update_method_wo_parameter(del_query, "Text");
                    }
                }
            }
            else if (Fpspread5.Visible == true)
            {
                for (int i = 0; i < Fpspread5.Sheets[0].RowCount; i++)
                {
                    checkvalue = Convert.ToString(Fpspread5.Sheets[0].Cells[i, 1].Value);
                    if (checkvalue == "1")
                    {
                        activerow = Fpspread5.ActiveSheetView.ActiveRow.ToString();
                        string val = Fpspread5.Sheets[0].Cells[Convert.ToInt32(activerow), 6].Text;
                        // string val_code = Convert.ToString(Fpspread5.Sheets[0].Cells[Convert.ToInt32(activerow), 4].Tag);
                        string del_query = "delete TapalInward where FromName='" + val + "' and MemType='5'";
                        s = d2.update_method_wo_parameter(del_query, "Text");
                    }
                }
            }
            else if (Fpspread6.Visible == true)
            {
                for (int i = 0; i < Fpspread6.Sheets[0].RowCount; i++)
                {
                    checkvalue = Convert.ToString(Fpspread6.Sheets[0].Cells[i, 1].Value);
                    if (checkvalue == "1")
                    {
                        activerow = Fpspread6.ActiveSheetView.ActiveRow.ToString();
                        string val = Fpspread6.Sheets[0].Cells[Convert.ToInt32(activerow), 6].Text;
                        //  string val_code = Convert.ToString(Fpspread6.Sheets[0].Cells[Convert.ToInt32(activerow), 4].Tag);
                        string del_query = "delete TapalInward where MagazineName='" + val + "' and MemType='6'";
                        s = d2.update_method_wo_parameter(del_query, "Text");
                    }
                }
            }
            else if (Fpspread7.Visible == true)
            {
                string val = "";
                for (int i = 0; i < Fpspread7.Sheets[0].RowCount; i++)
                {
                    checkvalue = Convert.ToString(Fpspread7.Sheets[0].Cells[i, 1].Value);
                    if (checkvalue == "1")
                    {
                        activerow = Fpspread7.ActiveSheetView.ActiveRow.ToString();
                        val = Fpspread7.Sheets[0].Cells[Convert.ToInt32(activerow), 6].Text;
                        //  string val_code = Convert.ToString(Fpspread7.Sheets[0].Cells[Convert.ToInt32(activerow), 4].Tag);
                        string del_query = "delete TapalInward where FromName='" + val + "' and MemType='7'";
                        s = d2.update_method_wo_parameter(del_query, "Text");
                    }
                }
            }
            if (s != 0)
            {
                saveflage = true;
            }
            if (saveflage == true)
            {
                if (activerow != "")
                {
                    Div7.Visible = true;
                    di7cnfm.Visible = true;
                    Label3.Text = "You Want To Delete This Record";
                }
                //imgdiv2.Visible = true;
                //Label1.Text = "Deleted Successfully";
            }
        }
        catch
        {
        }
    }

    public void btnerrclose_Click(object sender, EventArgs e)
    {
        imgdiv2.Visible = false;

        if (Convert.ToString(ViewState["staff"]) == "1")//delsi2901
            stud_search();
        if (Convert.ToString(ViewState["staff"]) == "2")
            staff_search();
        if (Convert.ToString(ViewState["staff"]) == "4")
            company_search();
        if (Convert.ToString(ViewState["staff"]) == "7")
            othr_search();
        if (Convert.ToString(ViewState["staff"]) == "9")
            all_search();
    }

    public void btn_popclose_Click(object sender, EventArgs e)
    {
        popview.Visible = false;
        loaddesc();
        loaddesc1();
        txt_viewdetails4.Text = "";
        txt_receiveperson.Text = "";
        txt_popviewdate.Text = DateTime.Now.ToString("dd/MM/yyyy");
    }

    public void view_details()
    {
        if (Fpspread1.Visible == true)
        {
            string Name = "";
            string activerow = "";
            activerow = Fpspread1.ActiveSheetView.ActiveRow.ToString();
            val_move = Convert.ToString(Fpspread1.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
            string val = Fpspread1.Sheets[0].Cells[Convert.ToInt32(activerow), 6].Text;
            string val1 = Fpspread1.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text;
            string getforwardpersonCode = Convert.ToString(Fpspread1.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Tag);
            // string val1 =Convert.ToString(Fpspread1.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Tag);
            string query = "select r.Stud_Name,r.Roll_No,MoveTo,t.App_No,MemType,ToDeptCode,ToCCDeptCode,BranchName,BankCode,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,DDNo,Paymentamount,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,individual_code,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,ccindividual_code,RefNo,TapalSubject,type,Priority,TapalType,ActionDesc,ActionStatus,(select textval from textvaltable where CONVERT(varchar(40), TextCode) = ResponseStaff)ResponseStaff  from TapalInward t,Registration r where T.App_No =r.App_No   and r.Stud_Name='" + val + "' and TapalMovementsID='" + val_move + "'";
            query = query + " select * from lettertbl where Memtype='1' and filename='" + val1 + "' and TapalInwardFk='" + val_move + "'";
            ds = d2.select_method_wo_parameter(query, "Text");
            Fpspread8.Visible = true;
            Fpspread8.Sheets[0].RowHeader.Visible = false;
            Fpspread8.CommandBar.Visible = false;
            Fpspread8.Sheets[0].AutoPostBack = false;
            Fpspread8.Sheets[0].RowCount = 0;
            Fpspread8.Sheets[0].ColumnHeader.RowCount = 3;
            Fpspread8.Sheets[0].ColumnCount = 5;
            FarPoint.Web.Spread.StyleInfo darkstyle1 = new FarPoint.Web.Spread.StyleInfo();
            darkstyle1.BackColor = ColorTranslator.FromHtml("#0CA6CA");
            darkstyle1.ForeColor = Color.Black;
            darkstyle1.HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle1;
            if (ds.Tables[0].Rows.Count > 0)
            {

                if (rdo_approve.Checked == true)
                {
                    string agreestatus = string.Empty;
                    string ovrallcompstat = string.Empty;

                    if (getforwardpersonCode != "" && getforwardpersonCode != null && getforwardpersonCode != "0")
                    {
                        agreestatus = d2.GetFunction("select agreestatus from letterforwarddetails where TapalmovementID='" + val_move + "' and ForwardPerson='" + getforwardpersonCode + "'");
                        ovrallcompstat = d2.GetFunction("select finalcompletioncheck from letterforwarddetails where TapalmovementID='" + val_move + "' and ForwardPerson='" + getforwardpersonCode + "'");
                    }

                    if (agreestatus != "" && agreestatus != null && agreestatus != "0")// && ovrallcompstat == ""
                    {
                        lbl_doc_state.Visible = true;
                        btn_ad.Visible = true;
                        ddl_viewdetails1.Visible = true;
                        btn_min.Visible = true;
                        lbl_remarks.Visible = true;
                        btn_add1.Visible = true;
                        ddl_viewdetails2.Visible = true;
                        btn_min1.Visible = true;
                        btn_pop1go.Visible = true;
                        btn_popexit.Visible = true;
                        Iscompleted.Visible = true;

                    }

                }

                // Fpspread8.Sheets[0].ColumnHeader.RowCount = 3;
                Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 0].Text = "From";
                Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 3, 1);
                Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 0].Font.Bold = true;
                Fpspread8.Columns[0].Width = 200;
                Fpspread8.Columns[1].Width = 200;
                Fpspread8.Columns[2].Width = 200;
                Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 1].Text = "To";
                Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 1, 4);
                Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 1].Font.Bold = true;
                Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 1].Text = "Department";
                Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 1].Font.Bold = true;
                Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(1, 1, 1, 2);
                Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 1].Text = "To Department";
                Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 1].Font.Bold = true;
                Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 2].Text = "CC Department";
                Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 2].Font.Bold = true;
                Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 3].Text = "Individual";
                Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 3].Font.Bold = true;
                Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(1, 3, 1, 2);
                Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 3].Text = "To Individual";
                Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 3].Font.Bold = true;
                Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 4].Text = "CC Individual";
                Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 4].Font.Bold = true;
                // Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 4].Column.Width = 200;
                Fpspread8.Sheets[0].PageSize = Fpspread8.Sheets[0].RowCount;
                for (i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    string todept = ds.Tables[0].Rows[i]["ToDeptCode"].ToString();
                    string ccdept = ds.Tables[0].Rows[i]["ToCCDeptCode"].ToString();
                    string toindi = ds.Tables[0].Rows[i]["individual_code"].ToString();
                    string ccindi = ds.Tables[0].Rows[i]["ccindividual_code"].ToString();
                    string moveto = ds.Tables[0].Rows[i]["MoveTo"].ToString();
                    string student = ds.Tables[0].Rows[i]["Stud_Name"].ToString();
                    string qur = "select  r.Reg_No, a.parent_name,a.stud_name, r.Roll_no,r.Stud_Type,c.Course_Name,dt.Dept_Name,r.Current_Semester ,r.Sections ,r.Batch_Year,a.parent_addressP,a.parent_pincodec,Streetp,Cityp,StuPer_Id,Student_Mobile,(select TextVal  from TextValTable where TextCode =ISNULL( parent_statep,0))as State  from applyn a,Registration r ,Degree d,course  c,Department dt where a.app_no=r.app_no and r.degree_code=d.Degree_Code and d.Course_Id=c.Course_Id and d.Dept_Code=dt.Dept_Code and CC=0 and DelFlag =0 and Exam_Flag <>'DEBAR' and a.stud_name='" + student + "'";
                    ds1 = d2.select_method_wo_parameter(qur, "Text");
                    for (int j = 0; j < ds1.Tables[0].Rows.Count; j++)
                    {
                        Name = ds1.Tables[0].Rows[j]["stud_name"].ToString() + "-" + ds1.Tables[0].Rows[j]["parent_name"].ToString() + "-" + ds1.Tables[0].Rows[j]["Course_Name"].ToString() + "-" + ds1.Tables[0].Rows[j]["Dept_Name"].ToString();
                    }
                    string todeptsplit = "";
                    string todeptsplit1 = "";
                    string ccdeptsplit = "";
                    string ccdeptsplit1 = "";
                    string toindisplit = "";
                    string toindisplit1 = "";
                    string ccindisplit = "";
                    string ccindisplit1 = "";
                    string department_to = "";
                    string department_cc = "";
                    string staff_to = "";
                    string staff_cc = "";
                    string modevalue = "";
                    string movevalue = "";
                    if (toindi.Trim() == "")
                    {
                        staff_to = "";
                    }
                    if (ccindi.Trim() == "")
                    {
                        staff_cc = "";
                    }
                    if (moveto == "1")
                    {
                        movevalue = "Department";
                        if (todept.Trim() == "" || todept.Trim() == "0")
                        {
                            department_to = "";
                        }
                        else
                        {
                            string[] split = todept.Split(',');
                            if (split.Length == 1)
                            {
                                department_to = getdepartment(todept);
                            }
                            else
                            {
                                todeptsplit = getdepartment(split[0]);
                                todeptsplit1 = getdepartment(split[1]);
                                department_to = todeptsplit + "," + todeptsplit1;
                            }
                        }
                        if (ccdept.Trim() == "" || ccdept.Trim() == "")
                        {
                            department_cc = "";
                        }
                        else
                        {
                            string[] split1 = ccdept.Split(',');
                            if (split1.Length == 1)
                            {
                                department_cc = getdepartment(ccdept);
                            }
                            else
                            {
                                ccdeptsplit = getdepartment(split1[0]);
                                ccdeptsplit1 = getdepartment(split1[1]);
                                department_cc = ccdeptsplit + "," + ccdeptsplit1;
                            }
                        }
                    }
                    if (moveto == "2")
                    {
                        movevalue = "Individual";
                        if (toindi.Trim() == "" || toindi == "0")
                        {
                            staff_to = "";
                        }
                        else
                        {
                            string[] split = toindi.Split(',');
                            if (split.Length == 1)
                            {
                                staff_to = getstaffname(toindi);
                            }
                            else
                            {
                                toindisplit = getstaffname(split[0]);
                                toindisplit1 = getstaffname(split[1]);
                                staff_to = toindisplit + "," + toindisplit1;
                            }
                        }
                        if (ccindi.Trim() == "" || ccindi == "0")
                        {
                            staff_cc = "";
                        }
                        else
                        {
                            string[] split1 = ccindi.Split(',');
                            if (split1.Length == 1)
                            {
                                staff_cc = getstaffname(ccindi);
                            }
                            else
                            {
                                ccindisplit = getstaffname(split1[0]);
                                ccindisplit1 = getstaffname(split1[1]);
                                staff_cc = ccindisplit + "," + ccindisplit1;
                            }
                        }
                    }
                    if (moveto == "3")
                    {
                        movevalue = "Department and Individual";
                        if (todept.Trim() == "" || todept.Trim() == "0")
                        {
                            department_to = "";
                        }
                        else
                        {
                            string[] split = todept.Split(',');
                            if (split.Length == 1)
                            {
                                department_to = getdepartment(todept);
                            }
                            else
                            {
                                todeptsplit = getdepartment(split[0]);
                                todeptsplit1 = getdepartment(split[1]);
                                department_to = todeptsplit + "," + todeptsplit1;
                            }
                        }
                        if (ccdept.Trim() == "" || ccdept.Trim() == "0")
                        {
                            department_cc = "";
                        }
                        else
                        {
                            string[] split1 = ccdept.Split(',');
                            if (split1.Length == 1)
                            {
                                department_cc = getdepartment(ccdept);
                            }
                            else
                            {
                                ccdeptsplit = getdepartment(split1[0]);
                                ccdeptsplit1 = getdepartment(split1[1]);
                                department_cc = ccdeptsplit + "," + ccdeptsplit1;
                            }
                        }
                        if (toindi.Trim() == "" || toindi == "0")
                        {
                            staff_to = "";
                        }
                        else
                        {
                            string[] split2 = toindi.Split(',');
                            if (split2.Length == 1)
                            {
                                staff_to = getstaffname(toindi);
                            }
                            else
                            {
                                toindisplit = getstaffname(split2[0]);
                                toindisplit1 = getstaffname(split2[1]);
                                staff_to = toindisplit + "," + toindisplit1;
                            }
                        }
                        if (toindi.Trim() == "" || toindi == "0")
                        {
                            staff_to = "";
                        }
                        else
                        {
                            string[] split3 = ccindi.Split(',');
                            if (split3.Length == 1)
                            {
                                staff_cc = getstaffname(ccindi);
                            }
                            else
                            {
                                ccindisplit = getstaffname(split3[0]);
                                ccindisplit1 = getstaffname(split3[1]);
                                staff_cc = ccindisplit + "," + ccindisplit1;
                            }
                        }
                    }
                    Fpspread8.Sheets[0].RowCount++;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Left;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = Name;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["Roll_No"]);
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Left;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = department_to;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Left;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = department_cc;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Left;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = staff_to;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                    Fpspread8.Columns[1].Width = 300;
                    Fpspread8.Columns[2].Width = 300;
                    Fpspread8.Columns[3].Width = 300;
                    Fpspread8.Columns[4].Width = 300;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Left;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = staff_cc;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;

                    // ,ActionDesc,ActionStatus,ResponseStaff 
                    ddl_viewdetails1.SelectedIndex = ddl_viewdetails1.Items.IndexOf(ddl_viewdetails1.Items.FindByValue(Convert.ToString(ds.Tables[0].Rows[i]["ActionStatus"])));
                    ddl_viewdetails2.SelectedIndex = ddl_viewdetails2.Items.IndexOf(ddl_viewdetails2.Items.FindByValue(Convert.ToString(ds.Tables[0].Rows[i]["ActionDesc"])));
                    txt_viewdetails4.Text = Convert.ToString(ds.Tables[0].Rows[i]["ResponseStaff"]);
                }
            }
            Fpspread8.Sheets[0].PageSize = Fpspread8.Sheets[0].RowCount;
            if (ds.Tables[0].Rows.Count > 0)
            {
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Subject";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Column.Locked = true;
                Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
                for (i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    string sub = ds.Tables[0].Rows[i]["TapalSubject"].ToString();
                    Fpspread8.Sheets[0].RowCount += 1;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(ds.Tables[0].Rows[i]["TapalSubject"]);
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Column.Locked = false;
                    Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
                }
            }
            if (ds.Tables[1].Rows.Count > 0)
            {
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Attachment Document";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
                Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
                for (i = 0; i < ds.Tables[1].Rows.Count; i++)
                {
                    string imagetext = Convert.ToString(ds.Tables[1].Rows[i]["filename"]);
                    Fpspread8.Sheets[0].RowCount += 1;
                    Fpspread8.ActiveSheetView.Cells[Fpspread8.Sheets[0].RowCount - 1, 0].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = imagetext.ToString();
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[1].Rows[i]["fileid"]);
                    Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                }
            }
            if (ds.Tables[0].Rows.Count > 0)
            {
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Payment Details";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
                Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Bank & Branch";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = "Payment Type";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Bold = true;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = "Payment Date";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Bold = true;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = "Payment No and Name";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Bold = true;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = "Payment Amount";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Bold = true;
                //  Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 2);
                for (i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    string paytype = Convert.ToString(ds.Tables[0].Rows[i]["PaymentType"]);
                    string paydate = Convert.ToString(ds.Tables[0].Rows[i]["DDDate"]);
                    string payamt = Convert.ToString(ds.Tables[0].Rows[i]["Paymentamount"]);
                    string pay = "";
                    if (paytype == "0")
                    {
                        pay = "Cheque";
                    }
                    else if (paytype == "1")
                    {
                        pay = "DD";
                    }
                    else
                    {
                        pay = "";
                    }
                    string bankbranch = "";
                    string bankno = Convert.ToString(ds.Tables[0].Rows[i]["DDNo"]);
                    string bankn = Convert.ToString(ds.Tables[0].Rows[i]["DDName"]);
                    string no_name = bankno + "-" + bankn;
                    string bankname = Convert.ToString(ds.Tables[0].Rows[i]["BankCode"]);
                    string branch = Convert.ToString(ds.Tables[0].Rows[i]["BranchName"]);
                    string bank_name = gettextbank(bankname);
                    if (bankname != "" && branch != "")
                    {
                        bankbranch = bank_name + "-" + branch;
                    }
                    else
                    {
                        bankbranch = "";
                    }
                    Fpspread8.Sheets[0].RowCount += 1;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = bankbranch;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Column.Locked = false;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = pay;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Column.Locked = false;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = paydate;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Column.Locked = false;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = no_name;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Column.Locked = false;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = payamt;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                    Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Column.Locked = false;
                }
            }
            Fpspread8.Sheets[0].PageSize = Fpspread8.Sheets[0].RowCount;
            Fpspread8.Width = 800;
            Fpspread8.Height = 280;
            Fpspread8.Visible = true;
        }
        else if (Fpspread2.Visible == true)
        {
            view_fpspd2();
        }
        else if (Fpspread3.Visible == true)
        {
            view_fpspd3();
        }
        else if (Fpspread4.Visible == true)
        {
            view_fpspd4();
        }
        else if (Fpspread5.Visible == true)
        {
            view_fpspd5();
        }
        else if (Fpspread6.Visible == true)
        {
            view_fpspd6();
        }
        else if (Fpspread7.Visible == true)
        {
            view_fpspd7();
        }
        else if (Fpspread9.Visible == true)
        {
            view_fpspd9();
        }
    }

    public void view_fpspd2()
    {
        loaddesc();
        int stagevalue = 0;
        DataSet data = new DataSet();
        DataSet newdata = new DataSet();
        string approvestages = string.Empty;
        string receivername = string.Empty;
        string appl_no = string.Empty;
        string forwordPerson = string.Empty;
        data.Clear();
        string deptcode = string.Empty;
        int stageCount = 0;
        if (stageCount == 0)
            stagevalue = 1;
        else
            stagevalue = stageCount + 1;
        string actrow = "";
        actrow = Fpspread2.ActiveSheetView.ActiveRow.ToString();


        string tapalids = Convert.ToString(Fpspread2.Sheets[0].Cells[Convert.ToInt32(actrow), 0].Tag);
        string getforwardpersonCode = Convert.ToString(Fpspread2.Sheets[0].Cells[Convert.ToInt32(actrow), 1].Tag);
        string query1 = "select ToDeptCode,ReqApproveStage from TapalInward where TapalMovementsID='" + tapalids + "'";
        query1 += " select sm.appl_id,sm.appl_name from staff_appl_master sm,staffmaster s where sm.appl_no=s.appl_no and staff_code='" + staffcodesession + "'";
        data = d2.select_method_wo_parameter(query1, "text");
        if (data.Tables[0].Rows.Count > 0)
        {
            int.TryParse(Convert.ToString(data.Tables[0].Rows[0]["ReqApproveStage"]), out stageCount);
            deptcode = Convert.ToString(data.Tables[0].Rows[0]["ToDeptCode"]);
        }
        if (data.Tables[1].Rows.Count > 0)
        {
            forwordPerson = Convert.ToString(data.Tables[1].Rows[0]["appl_name"]);
        }
        receivername = d2.GetFunction(" select s.staff_name  from RQ_RequestHierarchy rh,staff_appl_master sm,staffmaster s where sm.appl_no=s.appl_no and appl_id=rh.ReqAppStaffAppNo and RequestType='12' and ReqStaffAppNo='" + deptcode + "' and ReqApproveStage='" + (stagevalue + 1) + "' and ReqApproveStage>=1");

        txt_viewdetails4.Text = forwordPerson;
        txt_viewdetails4.Text = "";

        if (!string.IsNullOrEmpty(receivername) && receivername != "0")
        {
            txt_receiveperson.Text = receivername;
            txt_receiveperson.Text = "";//delsi2302


        }
        else
        {
            txt_receiveperson.Text = forwordPerson;
            txt_receiveperson.Text = "";//delsi2302

        }

        Radio_accept.Visible = false;
        Radio_reject.Visible = false;
        txt_viewdetails3.Text = "";

        if (txt_viewdetails4.Text == txt_receiveperson.Text)
        {
            txt_viewdetails4.Text = "";
            txt_receiveperson.Text = "";

        }

        string activerow = "";
        string name = "";
        activerow = Fpspread2.ActiveSheetView.ActiveRow.ToString();
        val_move = Convert.ToString(Fpspread2.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
        string val = Fpspread2.Sheets[0].Cells[Convert.ToInt32(activerow), 6].Text;
        string val1 = Fpspread2.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text;
        // string val1 = Convert.ToString(Fpspread2.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Tag);
        string query = "select distinct t.staff_code,BranchName,t.BankCode, s.staff_name,MoveTo,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,DDNo,Paymentamount,ToDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,TapalSubject,type,Priority,TapalType from TapalInward t,Registration r,staffmaster s where T.staff_code =s.staff_code and s.staff_name='" + val + "' and TapalMovementsID='" + val_move + "'";
        query = query + " select * from lettertbl where Memtype='2' and filename='" + val1 + "' and TapalInwardFk='" + val_move + "'";
        ds = d2.select_method_wo_parameter(query, "Text");
        FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
        darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
        darkstyle.ForeColor = Color.Black;
        darkstyle.HorizontalAlign = HorizontalAlign.Center;
        Fpspread8.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
        Fpspread8.Sheets[0].PageSize = Fpspread8.Sheets[0].RowCount;
        Fpspread8.Sheets[0].RowHeader.Visible = false;
        Fpspread8.CommandBar.Visible = false;
        Fpspread8.Sheets[0].AutoPostBack = false;
        Fpspread8.Sheets[0].ColumnCount = 5;
        if (ds.Tables[0].Rows.Count > 0)
        {
            if (rdo_approve.Checked == true)
            {
                string agreestatus = string.Empty;
                string ovrallcompstat = string.Empty;

                if (getforwardpersonCode != "" && getforwardpersonCode != null && getforwardpersonCode != "0")
                {
                    agreestatus = d2.GetFunction("select agreestatus from letterforwarddetails where TapalmovementID='" + val_move + "' and ForwardPerson='" + getforwardpersonCode + "'");
                    ovrallcompstat = d2.GetFunction("select finalcompletioncheck from letterforwarddetails where TapalmovementID='" + val_move + "' and ForwardPerson='" + getforwardpersonCode + "'");
                }

                if (agreestatus != "" && agreestatus != null && agreestatus != "0")//&& ovrallcompstat==""
                {
                    lbl_doc_state.Visible = true;
                    btn_ad.Visible = true;
                    ddl_viewdetails1.Visible = true;
                    btn_min.Visible = true;
                    lbl_remarks.Visible = true;
                    btn_add1.Visible = true;
                    ddl_viewdetails2.Visible = true;
                    btn_min1.Visible = true;
                    btn_pop1go.Visible = true;
                    btn_popexit.Visible = true;
                    Iscompleted.Visible = true;



                }
                else
                {
                    //lbl_doc_state.Visible = false;
                    //btn_ad.Visible = false;
                    //ddl_viewdetails1.Visible = false;
                    //btn_min.Visible = false;
                    //lbl_remarks.Visible = false;
                    //btn_add1.Visible = false;
                    //ddl_viewdetails2.Visible = false;
                    //btn_min1.Visible = false;
                    //btn_pop1go.Visible = false;
                    //btn_popexit.Visible = false;
                    //Iscompleted.Visible = false;

                }
            }
            Fpspread8.Sheets[0].ColumnHeader.RowCount = 3;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 0].Text = "From";
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 3, 1);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 0].Font.Bold = true;
            Fpspread8.Columns[0].Width = 200;
            Fpspread8.Columns[1].Width = 200;
            Fpspread8.Columns[2].Width = 200;
            //Fpspread8.Columns[3].Width = 250;
            //Fpspread8.Columns[4].Width = 250;
            //Fpspread8.Columns[5].Width = 250;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 1].Text = "To";
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 1, 4);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 1].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 1].Text = "Department";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 1].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(1, 1, 1, 2);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 1].Text = "To Department";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 1].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 2].Text = "CC Department";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 2].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 3].Text = "Individual";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 3].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(1, 3, 1, 2);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 3].Text = "To Individual";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 3].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 4].Text = "CC Individual";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 4].Font.Bold = true;
            Fpspread8.Sheets[0].RowCount = 0;
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                string todept = ds.Tables[0].Rows[i]["ToDeptCode"].ToString();
                string ccdept = ds.Tables[0].Rows[i]["ToCCDeptCode"].ToString();
                string toindi = ds.Tables[0].Rows[i]["individual_code"].ToString();
                string ccindi = ds.Tables[0].Rows[i]["ccindividual_code"].ToString();
                string moveto = ds.Tables[0].Rows[i]["MoveTo"].ToString();
                string staff = ds.Tables[0].Rows[i]["staff_name"].ToString();
                string qur = "select s.staff_Code,s.staff_name,dm.desig_name,hr.dept_name,sa.ccity,dm.staffcategory,sa.comm_address,sa.comm_address1,sa.com_mobileno,sa.com_phone,sa.cstate,sa.email,sa.com_pincode from staffmaster s,staff_appl_master sa,hrdept_master hr,desig_master dm where s.appl_no=sa.appl_no and sa.dept_code=hr.dept_code and dm.desig_code=sa.desig_code  and s.staff_name='" + staff + "'";
                ds1 = d2.select_method_wo_parameter(qur, "Text");
                if (ds1.Tables[0].Rows.Count > 0)
                {
                    for (int j = 0; j < ds1.Tables[0].Rows.Count; j++)
                    {
                        name = ds1.Tables[0].Rows[j]["staff_name"].ToString() + "-" + ds1.Tables[0].Rows[j]["desig_name"].ToString() + "-" + ds1.Tables[0].Rows[j]["dept_name"].ToString();
                    }
                }
                string todeptsplit = "";
                string todeptsplit1 = "";
                string ccdeptsplit = "";
                string ccdeptsplit1 = "";
                string toindisplit = "";
                string toindisplit1 = "";
                string ccindisplit = "";
                string ccindisplit1 = "";
                string department_to = "";
                string department_cc = "";
                string staff_to = "";
                string staff_cc = "";
                string movevalue = "";
                if (toindi.Trim() == "")
                {
                    staff_to = "";
                }
                if (ccindi.Trim() == "")
                {
                    staff_cc = "";
                }
                if (moveto == "1")
                {
                    movevalue = "Department";
                    if (todept.Trim() == "" || todept.Trim() == "0")
                    {
                        department_to = "";
                    }
                    else
                    {
                        string[] split = todept.Split(',');
                        if (split.Length == 1)
                        {
                            department_to = getdepartment(todept);
                        }
                        else
                        {
                            todeptsplit = getdepartment(split[0]);
                            todeptsplit1 = getdepartment(split[1]);
                            department_to = todeptsplit + "," + todeptsplit1;
                        }
                    }
                    if (ccdept.Trim() == "" || ccdept.Trim() == "")
                    {
                        department_cc = "";
                    }
                    else
                    {
                        string[] split1 = ccdept.Split(',');
                        if (split1.Length == 1)
                        {
                            department_cc = getdepartment(ccdept);
                        }
                        else
                        {
                            ccdeptsplit = getdepartment(split1[0]);
                            ccdeptsplit1 = getdepartment(split1[1]);
                            department_cc = ccdeptsplit + "," + ccdeptsplit1;
                        }
                    }
                }
                if (moveto == "2")
                {
                    movevalue = "Individual";
                    if (toindi.Trim() == "" || toindi == "0")
                    {
                        staff_to = "";
                    }
                    else
                    {
                        string[] split = toindi.Split(',');
                        if (split.Length == 1)
                        {
                            staff_to = getstaffname(toindi);
                        }
                        else
                        {
                            toindisplit = getstaffname(split[0]);
                            toindisplit1 = getstaffname(split[1]);
                            staff_to = toindisplit + "," + toindisplit1;
                        }
                    }
                    if (ccindi.Trim() == "")
                    {
                        staff_cc = "";
                    }
                    else
                    {
                        string[] split1 = ccindi.Split(',');
                        if (split1.Length == 1)
                        {
                            staff_cc = getstaffname(ccindi);
                        }
                        else
                        {
                            ccindisplit = getstaffname(split1[0]);
                            ccindisplit1 = getstaffname(split1[1]);
                            staff_cc = ccindisplit + "," + ccindisplit1;
                        }
                    }
                }
                if (moveto == "3")
                {
                    movevalue = "Department and Individual";
                    if (todept.Trim() == "" || todept.Trim() == "0")
                    {
                        department_to = "";
                    }
                    else
                    {
                        string[] split = todept.Split(',');
                        if (split.Length == 1)
                        {
                            department_to = getdepartment(todept);
                        }
                        else
                        {
                            todeptsplit = getdepartment(split[0]);
                            todeptsplit1 = getdepartment(split[1]);
                            department_to = todeptsplit + "," + todeptsplit1;
                        }
                    }
                    if (ccdept.Trim() == "" || ccdept.Trim() == "0")
                    {
                        department_cc = "";
                    }
                    else
                    {
                        string[] split1 = ccdept.Split(',');
                        if (split1.Length == 1)
                        {
                            department_cc = getdepartment(ccdept);
                        }
                        else
                        {
                            ccdeptsplit = getdepartment(split1[0]);
                            ccdeptsplit1 = getdepartment(split1[1]);
                            department_cc = ccdeptsplit + "," + ccdeptsplit1;
                        }
                    }
                    if (toindi.Trim() == "" || toindi == "0")
                    {
                        staff_to = "";
                    }
                    else
                    {
                        string[] split2 = toindi.Split(',');
                        if (split2.Length == 1)
                        {
                            staff_to = getstaffname(toindi);
                        }
                        else
                        {
                            toindisplit = getstaffname(split2[0]);
                            toindisplit1 = getstaffname(split2[1]);
                            staff_to = toindisplit + "," + toindisplit1;
                        }
                    }
                    if (ccindi.Trim() == "" || ccindi == "0")
                    {
                        staff_cc = "";
                    }
                    else
                    {
                        string[] split3 = ccindi.Split(',');
                        if (split3.Length == 1)
                        {
                            staff_cc = getstaffname(ccindi);
                        }
                        else
                        {
                            ccindisplit = getstaffname(split3[0]);
                            ccindisplit1 = getstaffname(split3[1]);
                            staff_cc = ccindisplit + "," + ccindisplit1;
                        }
                    }
                }
                Fpspread8.Sheets[0].RowCount++;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = name;
                // Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["staff_code"]);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = department_to;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = department_cc;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = staff_to;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = staff_cc;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                Fpspread8.Columns[1].Width = 300;
                Fpspread8.Columns[2].Width = 300;
                Fpspread8.Columns[3].Width = 300;
                Fpspread8.Columns[4].Width = 300;
            }
        }
        if (ds.Tables[0].Rows.Count > 0)
        {
            Fpspread8.Sheets[0].RowCount += 1;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Subject";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Column.Locked = true;
            Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                string sub = ds.Tables[0].Rows[i]["TapalSubject"].ToString();
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(ds.Tables[0].Rows[i]["TapalSubject"]);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Column.Locked = true;
                Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
            }
        }
        if (ds.Tables[1].Rows.Count > 0)
        {
            Fpspread8.Sheets[0].RowCount += 1;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Attachment Document";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
            for (i = 0; i < ds.Tables[1].Rows.Count; i++)
            {
                string imagetext = Convert.ToString(ds.Tables[1].Rows[i]["filename"]);
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.ActiveSheetView.Cells[Fpspread8.Sheets[0].RowCount - 1, 0].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = imagetext.ToString();
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[1].Rows[i]["fileid"]);
                Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            }
        }
        //  Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 2);
        if (ds.Tables[0].Rows.Count > 0)
        {
            Fpspread8.Sheets[0].RowCount += 1;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Payment Details";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
            Fpspread8.Sheets[0].RowCount += 1;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Bank & Branch";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = "Payment Type";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = "Payment Date";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = "Payment No and Name";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = "Payment Amount";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Bold = true;
            //  Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 2);
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                string paytype = Convert.ToString(ds.Tables[0].Rows[i]["PaymentType"]);
                string paydate = Convert.ToString(ds.Tables[0].Rows[i]["DDDate"]);
                string payamt = Convert.ToString(ds.Tables[0].Rows[i]["Paymentamount"]);
                string pay = "";
                if (paytype == "0")
                {
                    pay = "Cheque";
                }
                else if (paytype == "1")
                {
                    pay = "DD";
                }
                else
                {
                    pay = "";
                }
                string bankbranch = "";
                string bankno = Convert.ToString(ds.Tables[0].Rows[i]["DDNo"]);
                string bankn = Convert.ToString(ds.Tables[0].Rows[i]["DDName"]);
                string no_name = bankno + "-" + bankn;
                string bankname = Convert.ToString(ds.Tables[0].Rows[i]["BankCode"]);
                string branch = Convert.ToString(ds.Tables[0].Rows[i]["BranchName"]);
                string bank_name = gettextbank(bankname);
                if (bankname != "" && branch != "")
                {
                    bankbranch = bank_name + "-" + branch;
                }
                else
                {
                    bankbranch = "";
                }
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = bankbranch;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = pay;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = paydate;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = no_name;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = payamt;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Column.Locked = false;
            }
        }
        Fpspread8.Sheets[0].PageSize = Fpspread8.Sheets[0].RowCount;
        Fpspread8.Width = 800;
        Fpspread8.Height = 280;
    }

    public void view_fpspd3()
    {
        string activerow = "";
        string Name = "";
        activerow = Fpspread3.ActiveSheetView.ActiveRow.ToString();
        val_move = Convert.ToString(Fpspread3.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
        string val = Fpspread3.Sheets[0].Cells[Convert.ToInt32(activerow), 6].Text;
        string val1 = Fpspread3.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text;
        //  string val1 = Convert.ToString(Fpspread3.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Tag);
        string query = "select r.Stud_Name,r.Roll_No,MoveTo,t.App_No,MemType,BranchName,BankCode,ToDeptCode,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,DDNo,Paymentamount,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,individual_code,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,ccindividual_code,RefNo,TapalSubject,type,Priority,TapalType from TapalInward t,Registration r where T.App_No =r.App_No   and r.Stud_Name='" + val + "' and TapalMovementsID='" + val_move + "'";
        query = query + " select * from lettertbl where Memtype='3' and filename='" + val1 + "' and TapalInwardFk='" + val_move + "'";
        ds = d2.select_method_wo_parameter(query, "Text");
        FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
        darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
        darkstyle.ForeColor = Color.Black;
        darkstyle.HorizontalAlign = HorizontalAlign.Center;
        Fpspread8.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
        Fpspread8.Sheets[0].PageSize = Fpspread8.Sheets[0].RowCount;
        Fpspread8.Sheets[0].RowHeader.Visible = false;
        Fpspread8.CommandBar.Visible = false;
        Fpspread8.Sheets[0].AutoPostBack = false;
        Fpspread8.Sheets[0].ColumnCount = 5;
        if (ds.Tables[0].Rows.Count > 0)
        {
            Fpspread8.Sheets[0].ColumnHeader.RowCount = 3;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 0].Text = "From";
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 3, 1);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 0].Font.Bold = true;
            Fpspread8.Columns[0].Width = 200;
            Fpspread8.Columns[1].Width = 200;
            Fpspread8.Columns[2].Width = 200;
            //Fpspread8.Columns[3].Width = 250;
            //Fpspread8.Columns[4].Width = 250;
            //Fpspread8.Columns[5].Width = 250;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 1].Text = "To";
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 1, 4);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 1].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 1].Text = "Department";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 1].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(1, 1, 1, 2);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 1].Text = "To Department";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 1].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 2].Text = "CC Department";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 2].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 3].Text = "Individual";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 3].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(1, 3, 1, 2);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 3].Text = "To Individual";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 3].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 4].Text = "CC Individual";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 4].Font.Bold = true;
            Fpspread8.Sheets[0].RowCount = 0;
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                string todept = ds.Tables[0].Rows[i]["ToDeptCode"].ToString();
                string ccdept = ds.Tables[0].Rows[i]["ToCCDeptCode"].ToString();
                string toindi = ds.Tables[0].Rows[i]["individual_code"].ToString();
                string ccindi = ds.Tables[0].Rows[i]["ccindividual_code"].ToString();
                string moveto = ds.Tables[0].Rows[i]["MoveTo"].ToString();
                string student = ds.Tables[0].Rows[i]["Stud_Name"].ToString();
                string qur = "select  r.Reg_No, a.parent_name,a.stud_name, r.Roll_no,r.Stud_Type,c.Course_Name,dt.Dept_Name,r.Current_Semester ,r.Sections ,r.Batch_Year,a.parent_addressP,a.parent_pincodec,Streetp,Cityp,StuPer_Id,Student_Mobile,(select TextVal  from TextValTable where TextCode =ISNULL( parent_statep,0))as State  from applyn a,Registration r ,Degree d,course  c,Department dt where a.app_no=r.app_no and r.degree_code=d.Degree_Code and d.Course_Id=c.Course_Id and d.Dept_Code=dt.Dept_Code and CC=0 and DelFlag =0 and Exam_Flag <>'DEBAR' and a.stud_name='" + student + "'";
                ds1 = d2.select_method_wo_parameter(qur, "Text");
                for (int j = 0; j < ds1.Tables[0].Rows.Count; j++)
                {
                    Name = ds1.Tables[0].Rows[j]["stud_name"].ToString() + "-" + ds1.Tables[0].Rows[j]["parent_name"].ToString() + "-" + ds1.Tables[0].Rows[j]["Course_Name"].ToString() + "-" + ds1.Tables[0].Rows[j]["Dept_Name"].ToString();
                }
                string todeptsplit = "";
                string todeptsplit1 = "";
                string ccdeptsplit = "";
                string ccdeptsplit1 = "";
                string toindisplit = "";
                string toindisplit1 = "";
                string ccindisplit = "";
                string ccindisplit1 = "";
                string department_to = "";
                string department_cc = "";
                string staff_to = "";
                string staff_cc = "";
                string movevalue = "";
                if (toindi.Trim() == "")
                {
                    staff_to = "";
                }
                if (ccindi.Trim() == "")
                {
                    staff_cc = "";
                }
                if (moveto == "1")
                {
                    movevalue = "Department";
                    if (todept.Trim() == "" || todept.Trim() == "0")
                    {
                        department_to = "";
                    }
                    else
                    {
                        string[] split = todept.Split(',');
                        if (split.Length == 1)
                        {
                            department_to = getdepartment(todept);
                        }
                        else
                        {
                            todeptsplit = getdepartment(split[0]);
                            todeptsplit1 = getdepartment(split[1]);
                            department_to = todeptsplit + "," + todeptsplit1;
                        }
                    }
                    if (ccdept.Trim() == "" || ccdept.Trim() == "")
                    {
                        department_cc = "";
                    }
                    else
                    {
                        string[] split1 = ccdept.Split(',');
                        if (split1.Length == 1)
                        {
                            department_cc = getdepartment(ccdept);
                        }
                        else
                        {
                            ccdeptsplit = getdepartment(split1[0]);
                            ccdeptsplit1 = getdepartment(split1[1]);
                            department_cc = ccdeptsplit + "," + ccdeptsplit1;
                        }
                    }
                }
                if (moveto == "2")
                {
                    movevalue = "Individual";
                    if (toindi.Trim() == "" || toindi == "0")
                    {
                        staff_to = "";
                    }
                    else
                    {
                        string[] split = toindi.Split(',');
                        if (split.Length == 1)
                        {
                            staff_to = getstaffname(toindi);
                        }
                        else
                        {
                            toindisplit = getstaffname(split[0]);
                            toindisplit1 = getstaffname(split[1]);
                            staff_to = toindisplit + "," + toindisplit1;
                        }
                    }
                    if (ccindi.Trim() == "" || ccindi == "0")
                    {
                        staff_cc = "";
                    }
                    else
                    {
                        string[] split1 = ccindi.Split(',');
                        if (split1.Length == 1)
                        {
                            staff_cc = getstaffname(ccindi);
                        }
                        else
                        {
                            ccindisplit = getstaffname(split1[0]);
                            ccindisplit1 = getstaffname(split1[1]);
                            staff_cc = ccindisplit + "," + ccindisplit1;
                        }
                    }
                }
                if (moveto == "3")
                {
                    movevalue = "Department and Individual";
                    if (todept.Trim() == "" || todept.Trim() == "0")
                    {
                        department_to = "";
                    }
                    else
                    {
                        string[] split = todept.Split(',');
                        if (split.Length == 1)
                        {
                            department_to = getdepartment(todept);
                        }
                        else
                        {
                            todeptsplit = getdepartment(split[0]);
                            todeptsplit1 = getdepartment(split[1]);
                            department_to = todeptsplit + "," + todeptsplit1;
                        }
                    }
                    if (ccdept.Trim() == "" || ccdept.Trim() == "0")
                    {
                        department_cc = "";
                    }
                    else
                    {
                        string[] split1 = ccdept.Split(',');
                        if (split1.Length == 1)
                        {
                            department_cc = getdepartment(ccdept);
                        }
                        else
                        {
                            ccdeptsplit = getdepartment(split1[0]);
                            ccdeptsplit1 = getdepartment(split1[1]);
                            department_cc = ccdeptsplit + "," + ccdeptsplit1;
                        }
                    }
                    if (toindi.Trim() == "" || toindi == "0")
                    {
                        staff_to = "";
                    }
                    else
                    {
                        string[] split2 = toindi.Split(',');
                        if (split2.Length == 1)
                        {
                            staff_to = getstaffname(toindi);
                        }
                        else
                        {
                            toindisplit = getstaffname(split2[0]);
                            toindisplit1 = getstaffname(split2[1]);
                            staff_to = toindisplit + "," + toindisplit1;
                        }
                    }
                    if (ccindi.Trim() == "" || ccindi == "0")
                    {
                        staff_cc = "";
                    }
                    else
                    {
                        string[] split3 = ccindi.Split(',');
                        if (split3.Length == 1)
                        {
                            staff_cc = getstaffname(ccindi);
                        }
                        else
                        {
                            ccindisplit = getstaffname(split3[0]);
                            ccindisplit1 = getstaffname(split3[1]);
                            staff_cc = ccindisplit + "," + ccindisplit1;
                        }
                    }
                }
                Fpspread8.Sheets[0].RowCount++;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = Name;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["Roll_No"]);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = department_to;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = department_cc;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = staff_to;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = staff_cc;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                Fpspread8.Columns[1].Width = 300;
                Fpspread8.Columns[2].Width = 300;
                Fpspread8.Columns[3].Width = 300;
                Fpspread8.Columns[4].Width = 300;
            }
        }
        Fpspread8.Sheets[0].RowCount += 1;
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Subject";
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
        Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
        if (ds.Tables[0].Rows.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                string sub = ds.Tables[0].Rows[i]["TapalSubject"].ToString();
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(ds.Tables[0].Rows[i]["TapalSubject"]);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                // Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Column.Locked = true;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
            }
        }
        if (ds.Tables[1].Rows.Count > 0)
        {
            Fpspread8.Sheets[0].RowCount += 1;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Attachment Document";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
            for (i = 0; i < ds.Tables[1].Rows.Count; i++)
            {
                string imagetext = Convert.ToString(ds.Tables[1].Rows[i]["filename"]);
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.ActiveSheetView.Cells[Fpspread8.Sheets[0].RowCount - 1, 0].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = imagetext.ToString();
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[1].Rows[i]["fileid"]);
                Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            }
        }
        if (ds.Tables[0].Rows.Count > 0)
        {
            Fpspread8.Sheets[0].RowCount += 1;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Payment Details";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
            Fpspread8.Sheets[0].RowCount += 1;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Bank & Branch";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = "Payment Type";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = "Payment Date";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = "Payment No and Name";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = "Payment Amount";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Bold = true;
            //  Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 2);
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                string paytype = Convert.ToString(ds.Tables[0].Rows[i]["PaymentType"]);
                string paydate = Convert.ToString(ds.Tables[0].Rows[i]["DDDate"]);
                string payamt = Convert.ToString(ds.Tables[0].Rows[i]["Paymentamount"]);
                string pay = "";
                if (paytype == "0")
                {
                    pay = "Cheque";
                }
                else if (paytype == "1")
                {
                    pay = "DD";
                }
                else
                {
                    pay = "";
                }
                string bankbranch = "";
                string bankno = Convert.ToString(ds.Tables[0].Rows[i]["DDNo"]);
                string bankn = Convert.ToString(ds.Tables[0].Rows[i]["DDName"]);
                string no_name = bankno + "-" + bankn;
                string bankname = Convert.ToString(ds.Tables[0].Rows[i]["BankCode"]);
                string branch = Convert.ToString(ds.Tables[0].Rows[i]["BranchName"]);
                string bank_name = gettextbank(bankname);
                if (bankname != "" && branch != "")
                {
                    bankbranch = bank_name + "-" + branch;
                }
                else
                {
                    bankbranch = "";
                }
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = bankbranch;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = pay;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = paydate;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = no_name;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = payamt;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Column.Locked = false;
            }
        }
        Fpspread8.Sheets[0].PageSize = Fpspread8.Sheets[0].RowCount;
        Fpspread8.Width = 800;
        Fpspread8.Height = 280;
    }

    public void view_fpspd4()
    {

        loaddesc();
        DataSet data = new DataSet();
        DataSet newdata = new DataSet();
        string approvestages = string.Empty;
        string receivername = string.Empty;
        string appl_no = string.Empty;
        string forwordPerson = string.Empty;
        data.Clear();
        string deptcode = string.Empty;
        int stageCount = 0;
        int stagevalue = 0;
        if (stageCount == 0)
            stagevalue = 1;
        else
            stagevalue = stageCount + 1;

        string actrow = "";
        actrow = Fpspread4.ActiveSheetView.ActiveRow.ToString();
        string tapalids = Convert.ToString(Fpspread4.Sheets[0].Cells[Convert.ToInt32(actrow), 0].Tag);
        string getforwardpersonCode = Convert.ToString(Fpspread4.Sheets[0].Cells[Convert.ToInt32(actrow), 1].Tag);
        string query1 = "select ToDeptCode,ReqApproveStage from TapalInward where TapalMovementsID='" + tapalids + "'";
        query1 += " select sm.appl_id,sm.appl_name from staff_appl_master sm,staffmaster s where sm.appl_no=s.appl_no and staff_code='" + staffcodesession + "'";
        data = d2.select_method_wo_parameter(query1, "text");
        if (data.Tables[0].Rows.Count > 0)
        {
            int.TryParse(Convert.ToString(data.Tables[0].Rows[0]["ReqApproveStage"]), out stageCount);
            deptcode = Convert.ToString(data.Tables[0].Rows[0]["ToDeptCode"]);
        }
        if (data.Tables[1].Rows.Count > 0)
        {
            forwordPerson = Convert.ToString(data.Tables[1].Rows[0]["appl_name"]);
        }
        receivername = d2.GetFunction(" select s.staff_name  from RQ_RequestHierarchy rh,staff_appl_master sm,staffmaster s where sm.appl_no=s.appl_no and appl_id=rh.ReqAppStaffAppNo and RequestType='12' and ReqStaffAppNo='" + deptcode + "' and ReqApproveStage='" + (stagevalue + 1) + "'");

        txt_viewdetails4.Text = forwordPerson;
        txt_viewdetails4.Text = "";
        if (!string.IsNullOrEmpty(receivername) && receivername != "0")
        {
            txt_receiveperson.Text = receivername;
            txt_receiveperson.Text = "";
        }
        else
        {
            txt_receiveperson.Text = forwordPerson;
            txt_receiveperson.Text = "";
        }

        if (txt_viewdetails4.Text == txt_receiveperson.Text)
        {
            txt_viewdetails4.Text = "";
            txt_receiveperson.Text = "";

        }

        Radio_accept.Visible = false;
        Radio_reject.Visible = false;
        txt_viewdetails3.Text = "";


        string activerow = "";
        activerow = Fpspread4.ActiveSheetView.ActiveRow.ToString();
        val_move = Convert.ToString(Fpspread4.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
        string val = Fpspread4.Sheets[0].Cells[Convert.ToInt32(activerow), 5].Text;
        // string val1 = Fpspread4.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Text;
        string val1 = Convert.ToString(Fpspread4.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
        string query = "select distinct FromName,MoveTo,ToDeptCode,PaymentType,DDName,BranchName,t.BankCode,CONVERT(VARCHAR(11),DDDate,103) as DDDate,DDNo,Paymentamount,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,type,TapalSubject,Priority,TapalType from TapalInward t,Registration r,staffmaster s where TapalMovementsID='" + val_move + "' and FromName='" + val + "' and TapalMovementsID='" + val_move + "'";
        query = query + " select * from lettertbl where Memtype='4' and filename='" + val1 + "' and TapalInwardFk='" + val_move + "'";
        ds = d2.select_method_wo_parameter(query, "Text");
        FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
        darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
        darkstyle.ForeColor = Color.Black;
        darkstyle.HorizontalAlign = HorizontalAlign.Center;
        Fpspread8.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
        Fpspread8.Sheets[0].PageSize = Fpspread8.Sheets[0].RowCount;
        Fpspread8.Sheets[0].RowHeader.Visible = false;
        Fpspread8.CommandBar.Visible = false;
        Fpspread8.Sheets[0].AutoPostBack = false;
        Fpspread8.Sheets[0].ColumnCount = 5;
        if (ds.Tables[0].Rows.Count > 0)
        {
            if (rdo_approve.Checked == true)
            {
                string agreestatus = string.Empty;
                string ovrallcompstat = string.Empty;

                if (getforwardpersonCode != "" && getforwardpersonCode != null && getforwardpersonCode != "0")
                {
                    agreestatus = d2.GetFunction("select agreestatus from letterforwarddetails where TapalmovementID='" + val_move + "' and ForwardPerson='" + getforwardpersonCode + "'");
                    ovrallcompstat = d2.GetFunction("select finalcompletioncheck from letterforwarddetails where TapalmovementID='" + val_move + "' and ForwardPerson='" + getforwardpersonCode + "'");
                }

                if (agreestatus != "" && agreestatus != null && agreestatus != "0" && ovrallcompstat == "")
                {
                    lbl_doc_state.Visible = true;
                    btn_ad.Visible = true;
                    ddl_viewdetails1.Visible = true;
                    btn_min.Visible = true;
                    lbl_remarks.Visible = true;
                    btn_add1.Visible = true;
                    ddl_viewdetails2.Visible = true;
                    btn_min1.Visible = true;
                    btn_pop1go.Visible = true;
                    btn_popexit.Visible = true;
                    Iscompleted.Visible = true;

                }

            }

            Fpspread8.Sheets[0].ColumnHeader.RowCount = 3;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 0].Text = "From";
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 3, 1);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 0].Font.Bold = true;
            Fpspread8.Columns[0].Width = 200;
            Fpspread8.Columns[1].Width = 200;
            Fpspread8.Columns[2].Width = 200;
            //Fpspread8.Columns[3].Width = 250;
            //Fpspread8.Columns[4].Width = 250;
            //Fpspread8.Columns[5].Width = 250;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 1].Text = "To";
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 1, 4);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 1].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 1].Text = "Department";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 1].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(1, 1, 1, 2);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 1].Text = "To Department";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 1].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 2].Text = "CC Department";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 2].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 3].Text = "Individual";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 3].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(1, 3, 1, 2);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 3].Text = "To Individual";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 3].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 4].Text = "CC Individual";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 4].Font.Bold = true;
            Fpspread8.Sheets[0].RowCount = 0;
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                string todept = ds.Tables[0].Rows[i]["ToDeptCode"].ToString();
                string ccdept = ds.Tables[0].Rows[i]["ToCCDeptCode"].ToString();
                string toindi = ds.Tables[0].Rows[i]["individual_code"].ToString();
                string ccindi = ds.Tables[0].Rows[i]["ccindividual_code"].ToString();
                string moveto = ds.Tables[0].Rows[i]["MoveTo"].ToString();
                string todeptsplit = "";
                string todeptsplit1 = "";
                string ccdeptsplit = "";
                string ccdeptsplit1 = "";
                string toindisplit = "";
                string toindisplit1 = "";
                string ccindisplit = "";
                string ccindisplit1 = "";
                string department_to = "";
                string department_cc = "";
                string staff_to = "";
                string staff_cc = "";
                string movevalue = "";
                if (toindi.Trim() == "")
                {
                    staff_to = "";
                }
                if (ccindi.Trim() == "")
                {
                    staff_cc = "";
                }
                if (moveto == "1")
                {
                    movevalue = "Department";
                    if (todept.Trim() == "" || todept.Trim() == "0")
                    {
                        department_to = "";
                    }
                    else
                    {
                        string[] split = todept.Split(',');
                        if (split.Length == 1)
                        {
                            department_to = getdepartment(todept);
                        }
                        else
                        {
                            todeptsplit = getdepartment(split[0]);
                            todeptsplit1 = getdepartment(split[1]);
                            department_to = todeptsplit + "," + todeptsplit1;
                        }
                    }
                    if (ccdept.Trim() == "" || ccdept.Trim() == "")
                    {
                        department_cc = "";
                    }
                    else
                    {
                        string[] split1 = ccdept.Split(',');
                        if (split1.Length == 1)
                        {
                            department_cc = getdepartment(ccdept);
                        }
                        else
                        {
                            ccdeptsplit = getdepartment(split1[0]);
                            ccdeptsplit1 = getdepartment(split1[1]);
                            department_cc = ccdeptsplit + "," + ccdeptsplit1;
                        }
                    }
                }
                if (moveto == "2")
                {
                    movevalue = "Individual";
                    if (toindi.Trim() == "" || toindi == "0")
                    {
                        staff_to = "";
                    }
                    else
                    {
                        string[] split = toindi.Split(',');
                        if (split.Length == 1)
                        {
                            staff_to = getstaffname(toindi);
                        }
                        else
                        {
                            toindisplit = getstaffname(split[0]);
                            toindisplit1 = getstaffname(split[1]);
                            staff_to = toindisplit + "," + toindisplit1;
                        }
                    }
                    if (ccindi.Trim() == "" || ccindi == "0")
                    {
                        staff_cc = "";
                    }
                    else
                    {
                        string[] split1 = ccindi.Split(',');
                        if (split1.Length == 1)
                        {
                            staff_cc = getstaffname(ccindi);
                        }
                        else
                        {
                            ccindisplit = getstaffname(split1[0]);
                            ccindisplit1 = getstaffname(split1[1]);
                            staff_cc = ccindisplit + "," + ccindisplit1;
                        }
                    }
                }
                if (moveto == "3")
                {
                    movevalue = "Department and Individual";
                    if (todept.Trim() == "" || todept.Trim() == "0")
                    {
                        department_to = "";
                    }
                    else
                    {
                        string[] split = todept.Split(',');
                        if (split.Length == 1)
                        {
                            department_to = getdepartment(todept);
                        }
                        else
                        {
                            todeptsplit = getdepartment(split[0]);
                            todeptsplit1 = getdepartment(split[1]);
                            department_to = todeptsplit + "," + todeptsplit1;
                        }
                    }
                    if (ccdept.Trim() == "" || ccdept.Trim() == "0")
                    {
                        department_cc = "";
                    }
                    else
                    {
                        string[] split1 = ccdept.Split(',');
                        if (split1.Length == 1)
                        {
                            department_cc = getdepartment(ccdept);
                        }
                        else
                        {
                            ccdeptsplit = getdepartment(split1[0]);
                            ccdeptsplit1 = getdepartment(split1[1]);
                            department_cc = ccdeptsplit + "," + ccdeptsplit1;
                        }
                    }
                    if (toindi.Trim() == "" || toindi == "0")
                    {
                        staff_to = "";
                    }
                    else
                    {
                        string[] split2 = toindi.Split(',');
                        if (split2.Length == 1)
                        {
                            staff_to = getstaffname(toindi);
                        }
                        else
                        {
                            toindisplit = getstaffname(split2[0]);
                            toindisplit1 = getstaffname(split2[1]);
                            staff_to = toindisplit + "," + toindisplit1;
                        }
                    }
                    if (ccindi.Trim() == "" || ccindi == "0")
                    {
                        staff_cc = "";
                    }
                    else
                    {
                        string[] split3 = ccindi.Split(',');
                        if (split3.Length == 1)
                        {
                            staff_cc = getstaffname(ccindi);
                        }
                        else
                        {
                            ccindisplit = getstaffname(split3[0]);
                            ccindisplit1 = getstaffname(split3[1]);
                            staff_cc = ccindisplit + "," + ccindisplit1;
                        }
                    }
                }
                Fpspread8.Sheets[0].RowCount++;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(ds.Tables[0].Rows[i]["FromName"]);
                //Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["Roll_No"]);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = department_to;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = department_cc;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = staff_to;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = staff_cc;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                Fpspread8.Columns[1].Width = 300;
                Fpspread8.Columns[2].Width = 300;
                Fpspread8.Columns[3].Width = 300;
                Fpspread8.Columns[4].Width = 300;
            }
        }
        Fpspread8.Sheets[0].RowCount += 1;
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Subject";
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Column.Locked = true;
        Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
        if (ds.Tables[0].Rows.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                string sub = ds.Tables[0].Rows[i]["TapalSubject"].ToString();
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(ds.Tables[0].Rows[i]["TapalSubject"]);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Column.Locked = true;
                Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
            }
        }
        if (ds.Tables[1].Rows.Count > 0)
        {
            Fpspread8.Sheets[0].RowCount += 1;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Attachment Document";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
            for (i = 0; i < ds.Tables[1].Rows.Count; i++)
            {
                string imagetext = Convert.ToString(ds.Tables[1].Rows[i]["filename"]);
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.ActiveSheetView.Cells[Fpspread8.Sheets[0].RowCount - 1, 0].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = imagetext.ToString();
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[1].Rows[i]["fileid"]);
                Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            }
        }
        if (ds.Tables[0].Rows.Count > 0)
        {
            Fpspread8.Sheets[0].RowCount += 1;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Payment Details";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
            Fpspread8.Sheets[0].RowCount += 1;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Bank & Branch";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = "Payment Type";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = "Payment Date";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = "Payment No and Name";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = "Payment Amount";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Bold = true;
            //  Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 2);
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                string paytype = Convert.ToString(ds.Tables[0].Rows[i]["PaymentType"]);
                string paydate = Convert.ToString(ds.Tables[0].Rows[i]["DDDate"]);
                string payamt = Convert.ToString(ds.Tables[0].Rows[i]["Paymentamount"]);
                string pay = "";
                if (paytype == "0")
                {
                    pay = "Cheque";
                }
                else if (paytype == "1")
                {
                    pay = "DD";
                }
                else
                {
                    pay = "";
                }
                string bankbranch = "";
                string bankno = Convert.ToString(ds.Tables[0].Rows[i]["DDNo"]);
                string bankn = Convert.ToString(ds.Tables[0].Rows[i]["DDName"]);
                string no_name = bankno + "-" + bankn;
                string bankname = Convert.ToString(ds.Tables[0].Rows[i]["BankCode"]);
                string branch = Convert.ToString(ds.Tables[0].Rows[i]["BranchName"]);
                string bank_name = gettextbank(bankname);
                if (bankname != "" && branch != "")
                {
                    bankbranch = bank_name + "-" + branch;
                }
                else
                {
                    bankbranch = "";
                }
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = bankbranch;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = pay;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = paydate;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = no_name;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = payamt;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Column.Locked = false;
            }
        }
        Fpspread8.Sheets[0].PageSize = Fpspread8.Sheets[0].RowCount;
        Fpspread8.Width = 800;
        Fpspread8.Height = 280;
    }

    public void view_fpspd5()
    {
        string activerow = "";
        activerow = Fpspread5.ActiveSheetView.ActiveRow.ToString();
        val_move = Convert.ToString(Fpspread5.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
        string val = Fpspread5.Sheets[0].Cells[Convert.ToInt32(activerow), 6].Text;
        string val1 = Fpspread5.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text;
        //string val1 = Convert.ToString(Fpspread5.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Tag);
        string query = "select distinct FromName,MoveTo,PaymentType,DDName,BranchName,t.BankCode,CONVERT(VARCHAR(11),DDDate,103) as DDDate,DDNo,Paymentamount,ToDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,type,TapalSubject,Priority,TapalType from TapalInward t,Registration r,staffmaster s where FromName='" + val + "' and TapalMovementsID='" + val_move + "'";
        query = query + " select * from lettertbl where Memtype='5' and filename='" + val1 + "' and TapalInwardFk='" + val_move + "'";
        ds = d2.select_method_wo_parameter(query, "Text");
        FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
        darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
        darkstyle.ForeColor = Color.Black;
        darkstyle.HorizontalAlign = HorizontalAlign.Center;
        Fpspread8.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
        Fpspread8.Sheets[0].PageSize = Fpspread8.Sheets[0].RowCount;
        Fpspread8.Sheets[0].RowHeader.Visible = false;
        Fpspread8.CommandBar.Visible = false;
        Fpspread8.Sheets[0].AutoPostBack = true;
        Fpspread8.Sheets[0].ColumnCount = 5;
        if (ds.Tables[0].Rows.Count > 0)
        {
            Fpspread8.Sheets[0].ColumnHeader.RowCount = 3;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 0].Text = "From";
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 3, 1);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 0].Font.Bold = true;
            Fpspread8.Columns[0].Width = 200;
            Fpspread8.Columns[1].Width = 200;
            Fpspread8.Columns[2].Width = 200;
            //Fpspread8.Columns[3].Width = 250;
            //Fpspread8.Columns[4].Width = 250;
            //Fpspread8.Columns[5].Width = 250;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 1].Text = "To";
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 1, 4);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 1].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 1].Text = "Department";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 1].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(1, 1, 1, 2);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 1].Text = "To Department";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 1].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 2].Text = "CC Department";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 2].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 3].Text = "Individual";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 3].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(1, 3, 1, 2);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 3].Text = "To Individual";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 3].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 4].Text = "CC Individual";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 4].Font.Bold = true;
            Fpspread8.Sheets[0].RowCount = 0;
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                string todept = ds.Tables[0].Rows[i]["ToDeptCode"].ToString();
                string ccdept = ds.Tables[0].Rows[i]["ToCCDeptCode"].ToString();
                string toindi = ds.Tables[0].Rows[i]["individual_code"].ToString();
                string ccindi = ds.Tables[0].Rows[i]["ccindividual_code"].ToString();
                string moveto = ds.Tables[0].Rows[i]["MoveTo"].ToString();
                string todeptsplit = "";
                string todeptsplit1 = "";
                string ccdeptsplit = "";
                string ccdeptsplit1 = "";
                string toindisplit = "";
                string toindisplit1 = "";
                string ccindisplit = "";
                string ccindisplit1 = "";
                string department_to = "";
                string department_cc = "";
                string staff_to = "";
                string staff_cc = "";
                string movevalue = "";
                if (toindi.Trim() == "")
                {
                    staff_to = "";
                }
                if (ccindi.Trim() == "")
                {
                    staff_cc = "";
                }
                if (moveto == "1")
                {
                    movevalue = "Department";
                    if (todept.Trim() == "" || todept.Trim() == "0")
                    {
                        department_to = "";
                    }
                    else
                    {
                        string[] split = todept.Split(',');
                        if (split.Length == 1)
                        {
                            department_to = getdepartment(todept);
                        }
                        else
                        {
                            todeptsplit = getdepartment(split[0]);
                            todeptsplit1 = getdepartment(split[1]);
                            department_to = todeptsplit + "," + todeptsplit1;
                        }
                    }
                    if (ccdept.Trim() == "" || ccdept.Trim() == "")
                    {
                        department_cc = "";
                    }
                    else
                    {
                        string[] split1 = ccdept.Split(',');
                        if (split1.Length == 1)
                        {
                            department_cc = getdepartment(ccdept);
                        }
                        else
                        {
                            ccdeptsplit = getdepartment(split1[0]);
                            ccdeptsplit1 = getdepartment(split1[1]);
                            department_cc = ccdeptsplit + "," + ccdeptsplit1;
                        }
                    }
                }
                if (moveto == "2")
                {
                    movevalue = "Individual";
                    if (toindi.Trim() == "" || toindi == "0")
                    {
                        staff_to = "";
                    }
                    else
                    {
                        string[] split = toindi.Split(',');
                        if (split.Length == 1)
                        {
                            staff_to = getstaffname(toindi);
                        }
                        else
                        {
                            toindisplit = getstaffname(split[0]);
                            toindisplit1 = getstaffname(split[1]);
                            staff_to = toindisplit + "," + toindisplit1;
                        }
                    }
                    if (ccindi.Trim() == "" || ccindi == "0")
                    {
                        staff_cc = "";
                    }
                    else
                    {
                        string[] split1 = ccindi.Split(',');
                        if (split1.Length == 1)
                        {
                            staff_cc = getstaffname(ccindi);
                        }
                        else
                        {
                            ccindisplit = getstaffname(split1[0]);
                            ccindisplit1 = getstaffname(split1[1]);
                            staff_cc = ccindisplit + "," + ccindisplit1;
                        }
                    }
                }
                if (moveto == "3")
                {
                    movevalue = "Department and Individual";
                    if (todept.Trim() == "" || todept.Trim() == "0")
                    {
                        department_to = "";
                    }
                    else
                    {
                        string[] split = todept.Split(',');
                        if (split.Length == 1)
                        {
                            department_to = getdepartment(todept);
                        }
                        else
                        {
                            todeptsplit = getdepartment(split[0]);
                            todeptsplit1 = getdepartment(split[1]);
                            department_to = todeptsplit + "," + todeptsplit1;
                        }
                    }
                    if (ccdept.Trim() == "" || ccdept.Trim() == "0")
                    {
                        department_cc = "";
                    }
                    else
                    {
                        string[] split1 = ccdept.Split(',');
                        if (split1.Length == 1)
                        {
                            department_cc = getdepartment(ccdept);
                        }
                        else
                        {
                            ccdeptsplit = getdepartment(split1[0]);
                            ccdeptsplit1 = getdepartment(split1[1]);
                            department_cc = ccdeptsplit + "," + ccdeptsplit1;
                        }
                    }
                    if (toindi.Trim() == "" || toindi == "0")
                    {
                        staff_to = "";
                    }
                    else
                    {
                        string[] split2 = toindi.Split(',');
                        if (split2.Length == 1)
                        {
                            staff_to = getstaffname(toindi);
                        }
                        else
                        {
                            toindisplit = getstaffname(split2[0]);
                            toindisplit1 = getstaffname(split2[1]);
                            staff_to = toindisplit + "," + toindisplit1;
                        }
                    }
                    if (ccindi.Trim() == "" || ccindi == "0")
                    {
                        staff_cc = "";
                    }
                    else
                    {
                        string[] split3 = ccindi.Split(',');
                        if (split3.Length == 1)
                        {
                            staff_cc = getstaffname(ccindi);
                        }
                        else
                        {
                            ccindisplit = getstaffname(split3[0]);
                            ccindisplit1 = getstaffname(split3[1]);
                            staff_cc = ccindisplit + "," + ccindisplit1;
                        }
                    }
                }
                Fpspread8.Sheets[0].RowCount++;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(ds.Tables[0].Rows[i]["FromName"]);
                //Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["Roll_No"]);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = department_to;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = department_cc;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = staff_to;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = staff_cc;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                Fpspread8.Columns[1].Width = 300;
                Fpspread8.Columns[2].Width = 300;
                Fpspread8.Columns[3].Width = 300;
                Fpspread8.Columns[4].Width = 300;
            }
        }
        Fpspread8.Sheets[0].RowCount += 1;
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Subject";
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Column.Locked = true;
        Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
        if (ds.Tables[0].Rows.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                string sub = ds.Tables[0].Rows[i]["TapalSubject"].ToString();
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(ds.Tables[0].Rows[i]["TapalSubject"]);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Column.Locked = true;
                Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
            }
        }
        if (ds.Tables[1].Rows.Count > 0)
        {
            Fpspread8.Sheets[0].RowCount += 1;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Attachment Document";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
            for (i = 0; i < ds.Tables[1].Rows.Count; i++)
            {
                string imagetext = Convert.ToString(ds.Tables[1].Rows[i]["filename"]);
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.ActiveSheetView.Cells[Fpspread8.Sheets[0].RowCount - 1, 0].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = imagetext.ToString();
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[1].Rows[i]["fileid"]);
                Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            }
        }
        if (ds.Tables[0].Rows.Count > 0)
        {
            Fpspread8.Sheets[0].RowCount += 1;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Payment Details";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
            Fpspread8.Sheets[0].RowCount += 1;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Bank & Branch";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = "Payment Type";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = "Payment Date";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = "Payment No and Name";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = "Payment Amount";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Bold = true;
            //  Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 2);
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                string paytype = Convert.ToString(ds.Tables[0].Rows[i]["PaymentType"]);
                string paydate = Convert.ToString(ds.Tables[0].Rows[i]["DDDate"]);
                string payamt = Convert.ToString(ds.Tables[0].Rows[i]["Paymentamount"]);
                string pay = "";
                if (paytype == "0")
                {
                    pay = "Cheque";
                }
                else if (paytype == "1")
                {
                    pay = "DD";
                }
                else
                {
                    pay = "";
                }
                string bankbranch = "";
                string bankno = Convert.ToString(ds.Tables[0].Rows[i]["DDNo"]);
                string bankn = Convert.ToString(ds.Tables[0].Rows[i]["DDName"]);
                string no_name = bankno + "-" + bankn;
                string bankname = Convert.ToString(ds.Tables[0].Rows[i]["BankCode"]);
                string branch = Convert.ToString(ds.Tables[0].Rows[i]["BranchName"]);
                string bank_name = gettextbank(bankname);
                if (bankname != "" && branch != "")
                {
                    bankbranch = bank_name + "-" + branch;
                }
                else
                {
                    bankbranch = "";
                }
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = bankbranch;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = pay;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = paydate;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = no_name;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = payamt;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Column.Locked = false;
            }
        }
        Fpspread8.Sheets[0].PageSize = Fpspread8.Sheets[0].RowCount;
        Fpspread8.Width = 800;
        Fpspread8.Height = 280;
    }

    public void view_fpspd6()
    {
        string activerow = "";
        activerow = Fpspread6.ActiveSheetView.ActiveRow.ToString();
        val_move = Convert.ToString(Fpspread6.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
        string val = Fpspread6.Sheets[0].Cells[Convert.ToInt32(activerow), 6].Text;
        string val1 = Fpspread6.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text;
        // string val1 = Convert.ToString(Fpspread6.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Tag);
        string query = "select distinct MagazineName,MagazineType,MoveTo,PaymentType,BranchName,t.BankCode,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,DDNo,Paymentamount,CONVERT(varchar(10),TapalInwardTime,108)as TapalInwardTime,ToDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,ToCCDeptCode,individual_code, ccindividual_code,RefNo,type,Priority,TapalType,TapalSubject from TapalInward t,Registration r,staffmaster s where MagazineName='" + val + "' and TapalMovementsID='" + val_move + "'";
        query = query + " select * from lettertbl where Memtype='6' and filename='" + val1 + "' and TapalInwardFk='" + val_move + "'";
        ds = d2.select_method_wo_parameter(query, "Text");
        FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
        darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
        darkstyle.ForeColor = Color.Black;
        darkstyle.HorizontalAlign = HorizontalAlign.Center;
        Fpspread8.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
        Fpspread8.Sheets[0].PageSize = Fpspread8.Sheets[0].RowCount;
        Fpspread8.Sheets[0].RowHeader.Visible = false;
        Fpspread8.CommandBar.Visible = false;
        Fpspread8.Sheets[0].AutoPostBack = true;
        Fpspread8.Sheets[0].ColumnCount = 5;
        if (ds.Tables[0].Rows.Count > 0)
        {
            Fpspread8.Sheets[0].ColumnHeader.RowCount = 3;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 0].Text = "From";
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 3, 1);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 0].Font.Bold = true;
            Fpspread8.Columns[0].Width = 200;
            Fpspread8.Columns[1].Width = 200;
            Fpspread8.Columns[2].Width = 200;
            //Fpspread8.Columns[3].Width = 250;
            //Fpspread8.Columns[4].Width = 250;
            //Fpspread8.Columns[5].Width = 250;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 1].Text = "To";
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 1, 4);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 1].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 1].Text = "Department";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 1].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(1, 1, 1, 2);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 1].Text = "To Department";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 1].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 2].Text = "CC Department";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 2].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 3].Text = "Individual";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 3].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(1, 3, 1, 2);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 3].Text = "To Individual";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 3].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 4].Text = "CC Individual";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 4].Font.Bold = true;
            Fpspread8.Sheets[0].RowCount = 0;
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                string todept = ds.Tables[0].Rows[i]["ToDeptCode"].ToString();
                string ccdept = ds.Tables[0].Rows[i]["ToCCDeptCode"].ToString();
                string toindi = ds.Tables[0].Rows[i]["individual_code"].ToString();
                string ccindi = ds.Tables[0].Rows[i]["ccindividual_code"].ToString();
                string moveto = ds.Tables[0].Rows[i]["MoveTo"].ToString();
                string todeptsplit = "";
                string todeptsplit1 = "";
                string ccdeptsplit = "";
                string ccdeptsplit1 = "";
                string toindisplit = "";
                string toindisplit1 = "";
                string ccindisplit = "";
                string ccindisplit1 = "";
                string department_to = "";
                string department_cc = "";
                string staff_to = "";
                string staff_cc = "";
                string movevalue = "";
                if (toindi.Trim() == "")
                {
                    staff_to = "";
                }
                if (ccindi.Trim() == "")
                {
                    staff_cc = "";
                }
                if (moveto == "1")
                {
                    movevalue = "Department";
                    if (todept.Trim() == "" || todept.Trim() == "0")
                    {
                        department_to = "";
                    }
                    else
                    {
                        string[] split = todept.Split(',');
                        if (split.Length == 1)
                        {
                            department_to = getdepartment(todept);
                        }
                        else
                        {
                            todeptsplit = getdepartment(split[0]);
                            todeptsplit1 = getdepartment(split[1]);
                            department_to = todeptsplit + "," + todeptsplit1;
                        }
                    }
                    if (ccdept.Trim() == "" || ccdept.Trim() == "")
                    {
                        department_cc = "";
                    }
                    else
                    {
                        string[] split1 = ccdept.Split(',');
                        if (split1.Length == 1)
                        {
                            department_cc = getdepartment(ccdept);
                        }
                        else
                        {
                            ccdeptsplit = getdepartment(split1[0]);
                            ccdeptsplit1 = getdepartment(split1[1]);
                            department_cc = ccdeptsplit + "," + ccdeptsplit1;
                        }
                    }
                }
                if (moveto == "2")
                {
                    movevalue = "Individual";
                    if (toindi.Trim() == "" || toindi == "0")
                    {
                        staff_to = "";
                    }
                    else
                    {
                        string[] split = toindi.Split(',');
                        if (split.Length == 1)
                        {
                            staff_to = getstaffname(toindi);
                        }
                        else
                        {
                            toindisplit = getstaffname(split[0]);
                            toindisplit1 = getstaffname(split[1]);
                            staff_to = toindisplit + "," + toindisplit1;
                        }
                    }
                    if (ccindi.Trim() == "" || ccindi == "0")
                    {
                        staff_cc = "";
                    }
                    else
                    {
                        string[] split1 = ccindi.Split(',');
                        if (split1.Length == 1)
                        {
                            staff_cc = getstaffname(ccindi);
                        }
                        else
                        {
                            ccindisplit = getstaffname(split1[0]);
                            ccindisplit1 = getstaffname(split1[1]);
                            staff_cc = ccindisplit + "," + ccindisplit1;
                        }
                    }
                }
                if (moveto == "3")
                {
                    movevalue = "Department and Individual";
                    if (todept.Trim() == "" || todept.Trim() == "0")
                    {
                        department_to = "";
                    }
                    else
                    {
                        string[] split = todept.Split(',');
                        if (split.Length == 1)
                        {
                            department_to = getdepartment(todept);
                        }
                        else
                        {
                            todeptsplit = getdepartment(split[0]);
                            todeptsplit1 = getdepartment(split[1]);
                            department_to = todeptsplit + "," + todeptsplit1;
                        }
                    }
                    if (ccdept.Trim() == "" || ccdept.Trim() == "0")
                    {
                        department_cc = "";
                    }
                    else
                    {
                        string[] split1 = ccdept.Split(',');
                        if (split1.Length == 1)
                        {
                            department_cc = getdepartment(ccdept);
                        }
                        else
                        {
                            ccdeptsplit = getdepartment(split1[0]);
                            ccdeptsplit1 = getdepartment(split1[1]);
                            department_cc = ccdeptsplit + "," + ccdeptsplit1;
                        }
                    }
                    if (toindi.Trim() == "" || toindi == "0")
                    {
                        staff_to = "";
                    }
                    else
                    {
                        string[] split2 = toindi.Split(',');
                        if (split2.Length == 1)
                        {
                            staff_to = getstaffname(toindi);
                        }
                        else
                        {
                            toindisplit = getstaffname(split2[0]);
                            toindisplit1 = getstaffname(split2[1]);
                            staff_to = toindisplit + "," + toindisplit1;
                        }
                    }
                    if (ccindi.Trim() == "" || ccindi == "0")
                    {
                        staff_cc = "";
                    }
                    else
                    {
                        string[] split3 = ccindi.Split(',');
                        if (split3.Length == 1)
                        {
                            staff_cc = getstaffname(ccindi);
                        }
                        else
                        {
                            ccindisplit = getstaffname(split3[0]);
                            ccindisplit1 = getstaffname(split3[1]);
                            staff_cc = ccindisplit + "," + ccindisplit1;
                        }
                    }
                }
                Fpspread8.Sheets[0].RowCount++;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(ds.Tables[0].Rows[i]["MagazineName"]);
                //Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["Roll_No"]);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = department_to;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = department_cc;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = staff_to;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = staff_cc;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                Fpspread8.Columns[1].Width = 300;
                Fpspread8.Columns[2].Width = 300;
                Fpspread8.Columns[3].Width = 300;
                Fpspread8.Columns[4].Width = 300;
            }
        }
        Fpspread8.Sheets[0].RowCount += 1;
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Subject";
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Column.Locked = true;
        Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
        if (ds.Tables[0].Rows.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                string sub = ds.Tables[0].Rows[i]["TapalSubject"].ToString();
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(ds.Tables[0].Rows[i]["TapalSubject"]);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Column.Locked = true;
                Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
            }
        }
        if (ds.Tables[1].Rows.Count > 0)
        {
            Fpspread8.Sheets[0].RowCount += 1;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Attachment Document";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
            for (i = 0; i < ds.Tables[1].Rows.Count; i++)
            {
                string imagetext = Convert.ToString(ds.Tables[1].Rows[i]["filename"]);
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.ActiveSheetView.Cells[Fpspread8.Sheets[0].RowCount - 1, 0].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = imagetext.ToString();
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[1].Rows[i]["fileid"]);
                Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            }
        }
        if (ds.Tables[0].Rows.Count > 0)
        {
            Fpspread8.Sheets[0].RowCount += 1;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Payment Details";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
            Fpspread8.Sheets[0].RowCount += 1;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Bank & Branch";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = "Payment Type";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = "Payment Date";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = "Payment No and Name";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = "Payment Amount";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Bold = true;
            //  Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 2);
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                string paytype = Convert.ToString(ds.Tables[0].Rows[i]["PaymentType"]);
                string paydate = Convert.ToString(ds.Tables[0].Rows[i]["DDDate"]);
                string payamt = Convert.ToString(ds.Tables[0].Rows[i]["Paymentamount"]);
                string pay = "";
                if (paytype == "0")
                {
                    pay = "Cheque";
                }
                else if (paytype == "1")
                {
                    pay = "DD";
                }
                else
                {
                    pay = "";
                }
                string bankbranch = "";
                string bankno = Convert.ToString(ds.Tables[0].Rows[i]["DDNo"]);
                string bankn = Convert.ToString(ds.Tables[0].Rows[i]["DDName"]);
                string no_name = bankno + "-" + bankn;
                string bankname = Convert.ToString(ds.Tables[0].Rows[i]["BankCode"]);
                string branch = Convert.ToString(ds.Tables[0].Rows[i]["BranchName"]);
                string bank_name = gettextbank(bankname);
                if (bankname != "" && branch != "")
                {
                    bankbranch = bank_name + "-" + branch;
                }
                else
                {
                    bankbranch = "";
                }
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = bankbranch;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = pay;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = paydate;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = no_name;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = payamt;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Column.Locked = false;
            }
        }
        Fpspread8.Sheets[0].PageSize = Fpspread8.Sheets[0].RowCount;
        Fpspread8.Width = 800;
        Fpspread8.Height = 280;
    }

    public void view_fpspd7()
    {


        DataSet data = new DataSet();
        DataSet newdata = new DataSet();
        string approvestages = string.Empty;
        string receivername = string.Empty;
        string appl_no = string.Empty;
        string forwordPerson = string.Empty;
        data.Clear();
        string deptcode = string.Empty;
        int stagevalue = 0;
        int stageCount = 0;
        if (stageCount == 0)
            stagevalue = 1;
        else
            stagevalue = stageCount + 1;
        string actrow = "";
        actrow = Fpspread7.ActiveSheetView.ActiveRow.ToString();

        string tapalids = Convert.ToString(Fpspread7.Sheets[0].Cells[Convert.ToInt32(actrow), 0].Tag);
        string getforwardpersonCode = Convert.ToString(Fpspread7.Sheets[0].Cells[Convert.ToInt32(actrow), 1].Tag);
        string query1 = "select ToDeptCode,ReqApproveStage from TapalInward where TapalMovementsID='" + tapalids + "'";
        query1 += " select sm.appl_id,sm.appl_name from staff_appl_master sm,staffmaster s where sm.appl_no=s.appl_no and staff_code='" + staffcodesession + "'";
        data = d2.select_method_wo_parameter(query1, "text");
        if (data.Tables[0].Rows.Count > 0)
        {
            int.TryParse(Convert.ToString(data.Tables[0].Rows[0]["ReqApproveStage"]), out stageCount);
            deptcode = Convert.ToString(data.Tables[0].Rows[0]["ToDeptCode"]);
        }
        if (data.Tables[1].Rows.Count > 0)
        {
            forwordPerson = Convert.ToString(data.Tables[1].Rows[0]["appl_name"]);
        }
        receivername = d2.GetFunction(" select s.staff_name  from RQ_RequestHierarchy rh,staff_appl_master sm,staffmaster s where sm.appl_no=s.appl_no and appl_id=rh.ReqAppStaffAppNo and RequestType='12' and ReqStaffAppNo='" + deptcode + "' and ReqApproveStage='" + (stagevalue + 1) + "' and ReqApproveStage>1");

        txt_viewdetails4.Text = forwordPerson;
        txt_viewdetails4.Text = "";

        if (!string.IsNullOrEmpty(receivername) && receivername != "0")
        {
            txt_receiveperson.Text = receivername;
            txt_receiveperson.Text = "";
        }
        else
        {
            txt_receiveperson.Text = forwordPerson;
            txt_receiveperson.Text = "";
        }

        if (txt_viewdetails4.Text == txt_receiveperson.Text)
        {
            txt_viewdetails4.Text = "";
            txt_receiveperson.Text = "";

        }

        Radio_accept.Visible = false;
        Radio_reject.Visible = false;
        txt_viewdetails3.Text = "";

        string activerow = "";
        activerow = Fpspread7.ActiveSheetView.ActiveRow.ToString();
        val_move = Convert.ToString(Fpspread7.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
        string val = Fpspread7.Sheets[0].Cells[Convert.ToInt32(activerow), 6].Text;
        string val1 = Fpspread7.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text;
        //string val1 = Convert.ToString(Fpspread7.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Tag);
        string query = "select distinct FromName,MoveTo,ToDeptCode,PaymentType,DDName,BranchName,t.BankCode,CONVERT(VARCHAR(11),DDDate,103) as DDDate,DDNo,Paymentamount,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,type,TapalSubject,Priority,TapalType from TapalInward t,Registration r,staffmaster s where FromName='" + val + "' and TapalMovementsID='" + val_move + "'";
        query = query + " select * from lettertbl where Memtype='7' and filename='" + val1 + "' and TapalInwardFk='" + val_move + "'";
        ds = d2.select_method_wo_parameter(query, "Text");
        FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
        darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
        darkstyle.ForeColor = Color.Black;
        darkstyle.HorizontalAlign = HorizontalAlign.Center;
        Fpspread8.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
        Fpspread8.Sheets[0].PageSize = Fpspread8.Sheets[0].RowCount;
        Fpspread8.Sheets[0].RowHeader.Visible = false;
        Fpspread8.CommandBar.Visible = false;
        Fpspread8.Sheets[0].AutoPostBack = true;
        Fpspread8.Sheets[0].ColumnCount = 5;
        if (ds.Tables[0].Rows.Count > 0)
        {
            if (rdo_approve.Checked == true)
            {
                string agreestatus = string.Empty;
                string ovrallcompstat = string.Empty;

                if (getforwardpersonCode != "" && getforwardpersonCode != null && getforwardpersonCode != "0")
                {
                    agreestatus = d2.GetFunction("select agreestatus from letterforwarddetails where TapalmovementID='" + val_move + "' and ForwardPerson='" + getforwardpersonCode + "'");
                    ovrallcompstat = d2.GetFunction("select finalcompletioncheck from letterforwarddetails where TapalmovementID='" + val_move + "' and ForwardPerson='" + getforwardpersonCode + "'");
                }

                if (agreestatus != "" && agreestatus != null && agreestatus != "0")//&& ovrallcompstat==""
                {
                    lbl_doc_state.Visible = true;
                    btn_ad.Visible = true;
                    ddl_viewdetails1.Visible = true;
                    btn_min.Visible = true;
                    lbl_remarks.Visible = true;
                    btn_add1.Visible = true;
                    ddl_viewdetails2.Visible = true;
                    btn_min1.Visible = true;
                    btn_pop1go.Visible = true;
                    btn_popexit.Visible = true;
                    Iscompleted.Visible = true;



                }
             
            }
            Fpspread8.Sheets[0].ColumnHeader.RowCount = 3;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 0].Text = "From";
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 3, 1);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 0].Font.Bold = true;
            Fpspread8.Columns[0].Width = 200;
            Fpspread8.Columns[1].Width = 200;
            Fpspread8.Columns[2].Width = 200;
            //Fpspread8.Columns[3].Width = 250;
            //Fpspread8.Columns[4].Width = 250;
            //Fpspread8.Columns[5].Width = 250;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 1].Text = "To";
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 1, 4);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 1].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 1].Text = "Department";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 1].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(1, 1, 1, 2);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 1].Text = "To Department";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 1].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 2].Text = "CC Department";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 2].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 3].Text = "Individual";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 3].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(1, 3, 1, 2);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 3].Text = "To Individual";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 3].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 4].Text = "CC Individual";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 4].Font.Bold = true;
            Fpspread8.Sheets[0].RowCount = 0;
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                string todept = ds.Tables[0].Rows[i]["ToDeptCode"].ToString();
                string ccdept = ds.Tables[0].Rows[i]["ToCCDeptCode"].ToString();
                string toindi = ds.Tables[0].Rows[i]["individual_code"].ToString();
                string ccindi = ds.Tables[0].Rows[i]["ccindividual_code"].ToString();
                string moveto = ds.Tables[0].Rows[i]["MoveTo"].ToString();
                string todeptsplit = "";
                string todeptsplit1 = "";
                string ccdeptsplit = "";
                string ccdeptsplit1 = "";
                string toindisplit = "";
                string toindisplit1 = "";
                string ccindisplit = "";
                string ccindisplit1 = "";
                string department_to = "";
                string department_cc = "";
                string staff_to = "";
                string staff_cc = "";
                string movevalue = "";
                if (toindi.Trim() == "")
                {
                    staff_to = "";
                }
                if (ccindi.Trim() == "")
                {
                    staff_cc = "";
                }
                if (moveto == "1")
                {
                    movevalue = "Department";
                    if (todept.Trim() == "" || todept.Trim() == "0")
                    {
                        department_to = "";
                    }
                    else
                    {
                        string[] split = todept.Split(',');
                        if (split.Length == 1)
                        {
                            department_to = getdepartment(todept);
                        }
                        else
                        {
                            todeptsplit = getdepartment(split[0]);
                            todeptsplit1 = getdepartment(split[1]);
                            department_to = todeptsplit + "," + todeptsplit1;
                        }
                    }
                    if (ccdept.Trim() == "" || ccdept.Trim() == "")
                    {
                        department_cc = "";
                    }
                    else
                    {
                        string[] split1 = ccdept.Split(',');
                        if (split1.Length == 1)
                        {
                            department_cc = getdepartment(ccdept);
                        }
                        else
                        {
                            ccdeptsplit = getdepartment(split1[0]);
                            ccdeptsplit1 = getdepartment(split1[1]);
                            department_cc = ccdeptsplit + "," + ccdeptsplit1;
                        }
                    }
                }
                if (moveto == "2")
                {
                    movevalue = "Individual";
                    if (toindi.Trim() == "" || toindi == "0")
                    {
                        staff_to = "";
                    }
                    else
                    {
                        string[] split = toindi.Split(',');
                        if (split.Length == 1)
                        {
                            staff_to = getstaffname(toindi);
                        }
                        else
                        {
                            toindisplit = getstaffname(split[0]);
                            toindisplit1 = getstaffname(split[1]);
                            staff_to = toindisplit + "," + toindisplit1;
                        }
                    }
                    if (ccindi.Trim() == "" || ccindi == "0")
                    {
                        staff_cc = "";
                    }
                    else
                    {
                        string[] split1 = ccindi.Split(',');
                        if (split1.Length == 1)
                        {
                            staff_cc = getstaffname(ccindi);
                        }
                        else
                        {
                            ccindisplit = getstaffname(split1[0]);
                            ccindisplit1 = getstaffname(split1[1]);
                            staff_cc = ccindisplit + "," + ccindisplit1;
                        }
                    }
                }
                if (moveto == "3")
                {
                    movevalue = "Department and Individual";
                    if (todept.Trim() == "" || todept.Trim() == "0")
                    {
                        department_to = "";
                    }
                    else
                    {
                        string[] split = todept.Split(',');
                        if (split.Length == 1)
                        {
                            department_to = getdepartment(todept);
                        }
                        else
                        {
                            todeptsplit = getdepartment(split[0]);
                            todeptsplit1 = getdepartment(split[1]);
                            department_to = todeptsplit + "," + todeptsplit1;
                        }
                    }
                    if (ccdept.Trim() == "" || ccdept.Trim() == "0")
                    {
                        department_cc = "";
                    }
                    else
                    {
                        string[] split1 = ccdept.Split(',');
                        if (split1.Length == 1)
                        {
                            department_cc = getdepartment(ccdept);
                        }
                        else
                        {
                            ccdeptsplit = getdepartment(split1[0]);
                            ccdeptsplit1 = getdepartment(split1[1]);
                            department_cc = ccdeptsplit + "," + ccdeptsplit1;
                        }
                    }
                    if (toindi.Trim() == "" || toindi == "0")
                    {
                        staff_to = "";
                    }
                    else
                    {
                        string[] split2 = toindi.Split(',');
                        if (split2.Length == 1)
                        {
                            staff_to = getstaffname(toindi);
                        }
                        else
                        {
                            toindisplit = getstaffname(split2[0]);
                            toindisplit1 = getstaffname(split2[1]);
                            staff_to = toindisplit + "," + toindisplit1;
                        }
                    }
                    if (ccindi.Trim() == "" || ccindi == "0")
                    {
                        staff_cc = "";
                    }
                    else
                    {
                        string[] split3 = ccindi.Split(',');
                        if (split3.Length == 1)
                        {
                            staff_cc = getstaffname(ccindi);
                        }
                        else
                        {
                            ccindisplit = getstaffname(split3[0]);
                            ccindisplit1 = getstaffname(split3[1]);
                            staff_cc = ccindisplit + "," + ccindisplit1;
                        }
                    }
                }
                Fpspread8.Sheets[0].RowCount++;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(ds.Tables[0].Rows[i]["FromName"]);
                //Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["Roll_No"]);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = department_to;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = department_cc;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = staff_to;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = staff_cc;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                Fpspread8.Columns[1].Width = 300;
                Fpspread8.Columns[2].Width = 300;
                Fpspread8.Columns[3].Width = 300;
                Fpspread8.Columns[4].Width = 300;
            }
        }
        Fpspread8.Sheets[0].RowCount += 1;
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Subject";
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Column.Locked = true;
        Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
        if (ds.Tables[0].Rows.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                string sub = ds.Tables[0].Rows[i]["TapalSubject"].ToString();
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(ds.Tables[0].Rows[i]["TapalSubject"]);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Column.Locked = true;
                Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
            }
        }
        if (ds.Tables[1].Rows.Count > 0)
        {
            Fpspread8.Sheets[0].RowCount += 1;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Attachment Document";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
            for (i = 0; i < ds.Tables[1].Rows.Count; i++)
            {
                string imagetext = Convert.ToString(ds.Tables[1].Rows[i]["filename"]);
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.ActiveSheetView.Cells[Fpspread8.Sheets[0].RowCount - 1, 0].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = imagetext.ToString();
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[1].Rows[i]["fileid"]);
                Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            }
        }
        if (ds.Tables[0].Rows.Count > 0)
        {
            Fpspread8.Sheets[0].RowCount += 1;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Payment Details";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
            Fpspread8.Sheets[0].RowCount += 1;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Bank & Branch";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = "Payment Type";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = "Payment Date";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = "Payment No and Name";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = "Payment Amount";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Bold = true;
            //  Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 2);
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                string paytype = Convert.ToString(ds.Tables[0].Rows[i]["PaymentType"]);
                string paydate = Convert.ToString(ds.Tables[0].Rows[i]["DDDate"]);
                string payamt = Convert.ToString(ds.Tables[0].Rows[i]["Paymentamount"]);
                string pay = "";
                if (paytype == "0")
                {
                    pay = "Cheque";
                }
                else if (paytype == "1")
                {
                    pay = "DD";
                }
                else
                {
                    pay = "";
                }
                string bankbranch = "";
                string bankno = Convert.ToString(ds.Tables[0].Rows[i]["DDNo"]);
                string bankn = Convert.ToString(ds.Tables[0].Rows[i]["DDName"]);
                string no_name = bankno + "-" + bankn;
                string bankname = Convert.ToString(ds.Tables[0].Rows[i]["BankCode"]);
                string branch = Convert.ToString(ds.Tables[0].Rows[i]["BranchName"]);
                string bank_name = gettextbank(bankname);
                if (bankname != "" && branch != "")
                {
                    bankbranch = bank_name + "-" + branch;
                }
                else
                {
                    bankbranch = "";
                }
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = bankbranch;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = pay;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = paydate;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = no_name;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = payamt;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Column.Locked = false;
            }
        }
        Fpspread8.Sheets[0].PageSize = Fpspread8.Sheets[0].RowCount;
        Fpspread8.Width = 800;
        Fpspread8.Height = 280;
    }

    public void view_fpspd9()
    {
        string activerow = "";
        activerow = Fpspread9.ActiveSheetView.ActiveRow.ToString();

        int stagevalue = 0;
        DataSet data = new DataSet();
        DataSet newdata = new DataSet();
        string approvestages = string.Empty;
        string receivername = string.Empty;
        string appl_no = string.Empty;
        string forwordPerson = string.Empty;
        data.Clear();
        string deptcode = string.Empty;
        int stageCount = 0;
        if (stageCount == 0)
            stagevalue = 1;
        else
            stagevalue = stageCount + 1;

        string tapalids = Convert.ToString(Fpspread9.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
        string query1 = "select ToDeptCode,ReqApproveStage from TapalInward where TapalMovementsID='" + tapalids + "'";
        query1 += " select sm.appl_id,sm.appl_name from staff_appl_master sm,staffmaster s where sm.appl_no=s.appl_no and staff_code='" + staffcodesession + "'";
        data = d2.select_method_wo_parameter(query1, "text");
        if (data.Tables[0].Rows.Count > 0)
        {
            int.TryParse(Convert.ToString(data.Tables[0].Rows[0]["ReqApproveStage"]), out stageCount);
            deptcode = Convert.ToString(data.Tables[0].Rows[0]["ToDeptCode"]);
        }
        if (data.Tables[1].Rows.Count > 0)
        {
            forwordPerson = Convert.ToString(data.Tables[1].Rows[0]["appl_name"]);
        }
        receivername = d2.GetFunction(" select s.staff_name  from RQ_RequestHierarchy rh,staff_appl_master sm,staffmaster s where sm.appl_no=s.appl_no and appl_id=rh.ReqAppStaffAppNo and RequestType='12' and ReqStaffAppNo='" + deptcode + "' and ReqApproveStage='" + (stagevalue + 1) + "' and ReqApproveStage>=1");

        txt_viewdetails4.Text = forwordPerson;
        txt_viewdetails4.Text = "";//delsi2302
        if (!string.IsNullOrEmpty(receivername) && receivername != "0")
        {
            txt_receiveperson.Text = receivername;
            txt_receiveperson.Text = "";//delsi2302

        }
        else
        {
            txt_receiveperson.Text = forwordPerson;
            txt_receiveperson.Text = "";//delsi2302
        }

        if (txt_viewdetails4.Text == txt_receiveperson.Text)
        {
            txt_viewdetails4.Text = "";
            txt_receiveperson.Text = "";

        }
        Radio_accept.Visible = false;
        Radio_reject.Visible = false;
        txt_viewdetails3.Text = "";
        val_move = Convert.ToString(Fpspread9.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
        string val = Fpspread9.Sheets[0].Cells[Convert.ToInt32(activerow), 6].Text;
        string val1 = Fpspread9.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Text;
        string query = "select distinct t.App_No,t.staff_code,TapalMovementsID,BranchName,t.BankCode,PaymentType,DDName,CONVERT(VARCHAR(11),DDDate,103) as DDDate,DDNo,Paymentamount,FromName,MoveTo,ToDeptCode,CONVERT(VARCHAR(11),TapalInwardTime,108) as TapalInwardTime,ToCCDeptCode,CONVERT(VARCHAR(11),TapalInwardDate,103) as TapalInwardDate,individual_code,ccindividual_code,RefNo,type,TapalSubject,Priority,TapalType from TapalInward t,Registration r,staffmaster s where TapalMovementsID='" + val_move + "' and TapalMovementsID='" + val_move + "'";
        query = query + " select * from lettertbl where filename='" + val1 + "' and TapalInwardFk='" + val_move + "'";
        ds = d2.select_method_wo_parameter(query, "Text");
        FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
        darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
        darkstyle.ForeColor = Color.Black;
        darkstyle.HorizontalAlign = HorizontalAlign.Center;
        Fpspread8.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
        Fpspread8.Sheets[0].PageSize = Fpspread8.Sheets[0].RowCount;
        Fpspread8.Sheets[0].RowHeader.Visible = false;
        Fpspread8.CommandBar.Visible = false;
        Fpspread8.Sheets[0].AutoPostBack = false;
        Fpspread8.Sheets[0].ColumnCount = 5;
        if (ds.Tables[0].Rows.Count > 0)
        {
            Fpspread8.Sheets[0].ColumnHeader.RowCount = 3;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 0].Text = "From";
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 3, 1);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 0].Font.Bold = true;
            Fpspread8.Columns[0].Width = 200;
            Fpspread8.Columns[1].Width = 200;
            Fpspread8.Columns[2].Width = 200;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 1].Text = "To";
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 1, 4);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 3), 1].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 1].Text = "Department";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 1].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(1, 1, 1, 2);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 1].Text = "To Department";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 1].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 2].Text = "CC Department";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 2].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 3].Text = "Individual";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 2), 3].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeaderSpanModel.Add(1, 3, 1, 2);
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 3].Text = "To Individual";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 3].Font.Bold = true;
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 4].Text = "CC Individual";
            Fpspread8.Sheets[0].ColumnHeader.Cells[(Fpspread8.Sheets[0].ColumnHeader.RowCount - 1), 4].Font.Bold = true;
            Fpspread8.Sheets[0].RowCount = 0;
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                string todept = ds.Tables[0].Rows[i]["ToDeptCode"].ToString();
                string ccdept = ds.Tables[0].Rows[i]["ToCCDeptCode"].ToString();
                string toindi = ds.Tables[0].Rows[i]["individual_code"].ToString();
                string ccindi = ds.Tables[0].Rows[i]["ccindividual_code"].ToString();
                string moveto = ds.Tables[0].Rows[i]["MoveTo"].ToString();
                string id = ds.Tables[0].Rows[i]["TapalMovementsID"].ToString();
                string getappno = "";
                string fromname = Convert.ToString(ds.Tables[0].Rows[i]["FromName"]);
                string app = Convert.ToString(ds.Tables[0].Rows[i]["App_No"]);
                string stf_code = Convert.ToString(ds.Tables[0].Rows[i]["staff_code"]);
                if (fromname != "")
                {
                    getappno = fromname;
                }
                else if (stf_code != "")
                {
                    getappno = getstaffname(stf_code);
                }
                else
                {
                    getappno = d2.GetFunction("select Stud_Name  from Registration  where App_No='" + app + "'");
                }
                string todeptsplit = "";
                string todeptsplit1 = "";
                string ccdeptsplit = "";
                string ccdeptsplit1 = "";
                string toindisplit = "";
                string toindisplit1 = "";
                string ccindisplit = "";
                string ccindisplit1 = "";
                string department_to = "";
                string department_cc = "";
                string staff_to = "";
                string staff_cc = "";
                string movevalue = "";
                if (toindi.Trim() == "")
                {
                    staff_to = "";
                }
                if (ccindi.Trim() == "")
                {
                    staff_cc = "";
                }
                if (moveto == "1")
                {
                    movevalue = "Department";
                    if (todept.Trim() == "" || todept.Trim() == "0")
                    {
                        department_to = "";
                    }
                    else
                    {
                        string[] split = todept.Split(',');
                        if (split.Length == 1)
                        {
                            department_to = getdepartment(todept);
                        }
                        else
                        {
                            todeptsplit = getdepartment(split[0]);
                            todeptsplit1 = getdepartment(split[1]);
                            department_to = todeptsplit + "," + todeptsplit1;
                        }
                    }
                    if (ccdept.Trim() == "" || ccdept.Trim() == "")
                    {
                        department_cc = "";
                    }
                    else
                    {
                        string[] split1 = ccdept.Split(',');
                        if (split1.Length == 1)
                        {
                            department_cc = getdepartment(ccdept);
                        }
                        else
                        {
                            ccdeptsplit = getdepartment(split1[0]);
                            ccdeptsplit1 = getdepartment(split1[1]);
                            department_cc = ccdeptsplit + "," + ccdeptsplit1;
                        }
                    }
                }
                if (moveto == "2")
                {
                    movevalue = "Individual";
                    if (toindi.Trim() == "" || toindi == "0")
                    {
                        staff_to = "";
                    }
                    else
                    {
                        string[] split = toindi.Split(',');
                        if (split.Length == 1)
                        {
                            staff_to = getstaffname(toindi);
                        }
                        else
                        {
                            toindisplit = getstaffname(split[0]);
                            toindisplit1 = getstaffname(split[1]);
                            staff_to = toindisplit + "," + toindisplit1;
                        }
                    }
                    if (ccindi.Trim() == "" || ccindi == "0")
                    {
                        staff_cc = "";
                    }
                    else
                    {
                        string[] split1 = ccindi.Split(',');
                        if (split1.Length == 1)
                        {
                            staff_cc = getstaffname(ccindi);
                        }
                        else
                        {
                            ccindisplit = getstaffname(split1[0]);
                            ccindisplit1 = getstaffname(split1[1]);
                            staff_cc = ccindisplit + "," + ccindisplit1;
                        }
                    }
                }
                if (moveto == "3")
                {
                    movevalue = "Department and Individual";
                    if (todept.Trim() == "" || todept.Trim() == "0")
                    {
                        department_to = "";
                    }
                    else
                    {
                        string[] split = todept.Split(',');
                        if (split.Length == 1)
                        {
                            department_to = getdepartment(todept);
                        }
                        else
                        {
                            todeptsplit = getdepartment(split[0]);
                            todeptsplit1 = getdepartment(split[1]);
                            department_to = todeptsplit + "," + todeptsplit1;
                        }
                    }
                    if (ccdept.Trim() == "" || ccdept.Trim() == "0")
                    {
                        department_cc = "";
                    }
                    else
                    {
                        string[] split1 = ccdept.Split(',');
                        if (split1.Length == 1)
                        {
                            department_cc = getdepartment(ccdept);
                        }
                        else
                        {
                            ccdeptsplit = getdepartment(split1[0]);
                            ccdeptsplit1 = getdepartment(split1[1]);
                            department_cc = ccdeptsplit + "," + ccdeptsplit1;
                        }
                    }
                    if (toindi.Trim() == "" || toindi == "0")
                    {
                        staff_to = "";
                    }
                    else
                    {
                        string[] split2 = toindi.Split(',');
                        if (split2.Length == 1)
                        {
                            staff_to = getstaffname(toindi);
                        }
                        else
                        {
                            toindisplit = getstaffname(split2[0]);
                            toindisplit1 = getstaffname(split2[1]);
                            staff_to = toindisplit + "," + toindisplit1;
                        }
                    }
                    if (ccindi.Trim() == "" || ccindi == "0")
                    {
                        staff_cc = "";
                    }
                    else
                    {
                        string[] split3 = ccindi.Split(',');
                        if (split3.Length == 1)
                        {
                            staff_cc = getstaffname(ccindi);
                        }
                        else
                        {
                            ccindisplit = getstaffname(split3[0]);
                            ccindisplit1 = getstaffname(split3[1]);
                            staff_cc = ccindisplit + "," + ccindisplit1;
                        }
                    }
                }
                Fpspread8.Sheets[0].RowCount++;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = getappno;
                //Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["Roll_No"]);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = department_to;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = department_cc;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = staff_to;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Left;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = staff_cc;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                Fpspread8.Columns[1].Width = 300;
                Fpspread8.Columns[2].Width = 300;
                Fpspread8.Columns[3].Width = 300;
                Fpspread8.Columns[4].Width = 300;
            }
        }
        Fpspread8.Sheets[0].RowCount += 1;
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Subject";
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
        Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
        Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
        if (ds.Tables[0].Rows.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                string sub = ds.Tables[0].Rows[i]["TapalSubject"].ToString();
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(ds.Tables[0].Rows[i]["TapalSubject"]);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Column.Locked = true;
                Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
            }
        }
        if (ds.Tables[1].Rows.Count > 0)
        {
            Fpspread8.Sheets[0].RowCount += 1;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Attachment Document";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Column.Locked = false;
            Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
            for (i = 0; i < ds.Tables[1].Rows.Count; i++)
            {
                string imagetext = Convert.ToString(ds.Tables[1].Rows[i]["filename"]);
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.ActiveSheetView.Cells[Fpspread8.Sheets[0].RowCount - 1, 0].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = imagetext.ToString();
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[1].Rows[i]["fileid"]);
                Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            }
        }
        if (ds.Tables[0].Rows.Count > 0)
        {
            Fpspread8.Sheets[0].RowCount += 1;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Payment Details";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 5);
            Fpspread8.Sheets[0].RowCount += 1;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = "Bank & Branch";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = "Payment Type";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = "Payment Date";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = "Payment No and Name";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Bold = true;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].BackColor = ColorTranslator.FromHtml("#0CA6CA");
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = "Payment Amount";
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
            Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Bold = true;
            //  Fpspread8.Sheets[0].SpanModel.Add(Fpspread8.Sheets[0].RowCount - 1, 0, 1, 2);
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                string paytype = Convert.ToString(ds.Tables[0].Rows[i]["PaymentType"]);
                string paydate = Convert.ToString(ds.Tables[0].Rows[i]["DDDate"]);
                string payamt = Convert.ToString(ds.Tables[0].Rows[i]["Paymentamount"]);
                string pay = "";
                if (paytype == "0")
                {
                    pay = "Cheque";
                }
                else if (paytype == "1")
                {
                    pay = "DD";
                }
                else
                {
                    pay = "";
                }
                string bankbranch = "";
                string bankno = Convert.ToString(ds.Tables[0].Rows[i]["DDNo"]);
                string bankn = Convert.ToString(ds.Tables[0].Rows[i]["DDName"]);
                string no_name = bankno + "-" + bankn;
                string bankname = Convert.ToString(ds.Tables[0].Rows[i]["BankCode"]);
                string branch = Convert.ToString(ds.Tables[0].Rows[i]["BranchName"]);
                string bank_name = gettextbank(bankname);
                if (bankname != "" && branch != "")
                {
                    bankbranch = bank_name + "-" + branch;
                }
                else
                {
                    bankbranch = "";
                }
                Fpspread8.Sheets[0].RowCount += 1;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Text = bankbranch;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 0].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Text = pay;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 1].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Text = paydate;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 2].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Text = no_name;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 3].Column.Locked = false;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Text = payamt;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                Fpspread8.Sheets[0].Cells[Fpspread8.Sheets[0].RowCount - 1, 4].Column.Locked = false;
            }
        }
        Fpspread8.Sheets[0].PageSize = Fpspread8.Sheets[0].RowCount;
        Fpspread8.Width = 800;
        Fpspread8.Height = 280;
    }

    public void btn_popsave_Click(object sender, EventArgs e)//delsis2001
    {
        try
        {
            string viewstate_valforward = string.Empty;
            string viewstate_valCC = string.Empty;
            string tapalid = string.Empty;
            string getforwardpersonCode = string.Empty;
            if (Convert.ToString(ViewState["staff"]) == "1")
            {
                string actrow = "";
                actrow = Fpspread1.ActiveSheetView.ActiveRow.ToString();
                tapalid = Convert.ToString(Fpspread1.Sheets[0].Cells[Convert.ToInt32(actrow), 0].Tag);
                getforwardpersonCode = Convert.ToString(Fpspread1.Sheets[0].Cells[Convert.ToInt32(actrow), 1].Tag);
            }
            if (Convert.ToString(ViewState["staff"]) == "2")
            {
                string actrow = "";
                actrow = Fpspread2.ActiveSheetView.ActiveRow.ToString();
                tapalid = Convert.ToString(Fpspread2.Sheets[0].Cells[Convert.ToInt32(actrow), 0].Tag);
                getforwardpersonCode = Convert.ToString(Fpspread2.Sheets[0].Cells[Convert.ToInt32(actrow), 1].Tag);
            }
            if (Convert.ToString(ViewState["staff"]) == "4")
            {
                string actrow = "";
                actrow = Fpspread4.ActiveSheetView.ActiveRow.ToString();
                tapalid = Convert.ToString(Fpspread4.Sheets[0].Cells[Convert.ToInt32(actrow), 0].Tag);
                getforwardpersonCode = Convert.ToString(Fpspread4.Sheets[0].Cells[Convert.ToInt32(actrow), 1].Tag);
            }
            if (Convert.ToString(ViewState["staff"]) == "7")
            {
                string actrow = "";
                actrow = Fpspread7.ActiveSheetView.ActiveRow.ToString();
                tapalid = Convert.ToString(Fpspread7.Sheets[0].Cells[Convert.ToInt32(actrow), 0].Tag);
                getforwardpersonCode = Convert.ToString(Fpspread7.Sheets[0].Cells[Convert.ToInt32(actrow), 1].Tag);
            }
            if (Convert.ToString(ViewState["staff"]) == "9")
            {
                string actrow = "";
                actrow = Fpspread9.ActiveSheetView.ActiveRow.ToString();
                tapalid = Convert.ToString(Fpspread9.Sheets[0].Cells[Convert.ToInt32(actrow), 0].Tag);
                getforwardpersonCode = Convert.ToString(Fpspread9.Sheets[0].Cells[Convert.ToInt32(actrow), 1].Tag);
            }
            DataSet dataset = new DataSet();
            string dept_code = "";
            int approvalstage = 0;
            int value2 = 0;
            string loginstaffApplID = string.Empty;
            string Querey = "select ToDeptCode,ReqApproveStage from TapalInward where TapalMovementsID='" + tapalid + "'";
            Querey += " select sm.appl_id from staff_appl_master sm,staffmaster s where sm.appl_no=s.appl_no and staff_code='" + staffcodesession + "'";
            dataset.Clear();
            dataset = d2.select_method_wo_parameter(Querey, "text");
            if (dataset.Tables[0].Rows.Count > 0)
            {
                int.TryParse(Convert.ToString(dataset.Tables[0].Rows[0]["ReqApproveStage"]), out approvalstage);
                dept_code = Convert.ToString(dataset.Tables[0].Rows[0]["ToDeptCode"]);
            }
            if (dataset.Tables[1].Rows.Count > 0)
            {
                loginstaffApplID = Convert.ToString(dataset.Tables[1].Rows[0]["appl_id"]);
            }
            if (approvalstage == 0)
                value2 = 1;
            else
                value2 = approvalstage + 1;

            string sqlcmd = " select ReqApproveStage,RequestType, ReqAppStaffAppNo,ReqAppPriority from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'and RequestType=12 and ReqStaffAppNo='" + dept_code + "'";// ReqStaffAppNo =request department
            sqlcmd += " select ReqAppPriority from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'";
            ds = d2.select_method_wo_parameter(sqlcmd, "Text");
            DataView dv = new DataView();
            if (dataset.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                string getappid = string.Empty;
                for (int loop = 0; loop < ds.Tables[0].Rows.Count; loop++)
                {
                    bool saveflage = false;
                    string activerow = "";
                    string val = "";
                    string[] ay = txt_popviewdate.Text.Split('/');
                    string date = ay[1].ToString() + "/" + ay[0].ToString() + "/" + ay[2].ToString();
                    string time = Convert.ToString(txt_viewtime.Text);
                    string staff_name = Convert.ToString(txt_viewdetails4.Text);
                    string Recever_staff_name = Convert.ToString(txt_receiveperson.Text);
                    string action_status = Convert.ToString(ddl_viewdetails1.SelectedItem.Value);
                    string document_status = Convert.ToString(ddl_viewdetails2.SelectedItem.Value);
                    // if (ddl_viewdetails1.SelectedItem.Text != "Select" && ddl_viewdetails2.SelectedItem.Text != "Select")
                    //{
                    string staffcode = d2.GetFunction("select staff_code from staffmaster where staff_name='" + staff_name + "'");
                    string Receiver_staffCode = d2.GetFunction("select staff_code from staffmaster where staff_name='" + Recever_staff_name + "'");
                    string ID = d2.GetFunction("select TapalMovementsID from TapalInward where staff_code='" + staffcode + "'");
                    ds.Tables[0].DefaultView.RowFilter = "ReqApproveStage='" + value2 + "' and RequestType=12 and ReqAppStaffAppNo='" + loginstaffApplID + "'";
                    dv = ds.Tables[0].DefaultView;
                    if (dv.Count > 0)
                    {
                        getappid = Convert.ToString(dv[0]["ReqAppStaffAppNo"]);
                        string getappno = d2.GetFunction("select staff_code  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and appl_id='" + getappid + "'");
                        if (getappno == staffcodesession)
                        {
                            string query = "update TapalInward set ActionDesc='" + document_status + "',ActionStatus='" + action_status + "',ActionDate='" + date + "',ActionTime='" + time + "',ViewStatus='1',ResponseStaff='" + staffcode + "',ReceivedPerson='" + Receiver_staffCode + "',SendNote='1',ReqApproveStage='" + value2 + "' where TapalMovementsID='" + tapalid + "'";
                            int ins = d2.update_method_wo_parameter(query, "Text");
                            if (ins != 0)
                            {
                                saveflage = true;
                            }
                            if (saveflage == true)
                            {
                                imgdiv2.Visible = true;
                                Label1.Text = "Saved Successfully";
                            }
                            string fnl1 = d2.GetFunction("select ReqApproveStage from TapalInward where TapalMovementsID='" + tapalid + "'");//ToDeptCode='" + dept_code + "'
                            string fnl2 = d2.GetFunction("select max(ReqApproveStage) from RQ_RequestHierarchy where RequestType='12' and ReqStaffAppNo='" + dept_code + "'");
                            if (fnl1 == fnl2)
                            {
                                query = "update TapalInward set ReqApproveStage='" + value2 + "',ReqAppStatus='1',ReqApprovedStaffAppNo='" + loginstaffApplID + "' where TapalMovementsID='" + val_move + "'";
                                ins = d2.update_method_wo_parameter(query, "Text");

                                if (ins != 0)
                                {
                                    saveflage = true;
                                }
                                if (saveflage == true)
                                {
                                    imgdiv2.Visible = true;
                                    Label1.Text = "Saved Successfully";
                                }
                                string remarks = Convert.ToString(txt_viewdetails3.Text);
                                string sendtime = txt_viewtime.Text;
                                string[] arrayDate = txt_popviewdate.Text.Split('/');
                                DateTime senddate = Convert.ToDateTime(arrayDate[1].ToString() + "/" + arrayDate[0].ToString() + "/" + arrayDate[2].ToString() + " " + sendtime.ToString());
                                viewstate_valforward = Convert.ToString(ViewState["forwardcode"]);
                                viewstate_valCC = Convert.ToString(ViewState["Receivedcode"]);
                                string[] Staff_count = viewstate_valforward.Split(',');
                                for (int i = 0; i < Staff_count.Count(); i++)
                                {
                                    string staff_code = Convert.ToString(Staff_count[i]);
                                    string staffName = d2.GetFunction("select staff_name from staffmaster where staff_code='" + staff_code + "'");
                                    if (viewstate_valforward == "" && txt_viewdetails4.Text != "")
                                    {
                                        string staf_name = txt_viewdetails4.Text;
                                        staff_code = d2.GetFunction("select staff_code from staffmaster where staff_name='" + staf_name + "'");
                                    }

                                    query = "insert into letterForwardDetails(TapalMovementID,ForwardPerson,CCPerson,ActionStatus,DocumentStatus,Remarks,DateTime)values('" + tapalid + "','" + staff_code + "','" + viewstate_valCC + "','" + action_status + "','" + document_status + "','" + remarks + "','" + senddate.ToString("MM/dd/yyyy hh:mm:ss tt") + "')";
                                    ins = d2.update_method_wo_parameter(query, "Text");
                                }
                            }
                        }
                    }
                    //}
                    //else
                    //{
                    //    imgdiv2.Visible = true;
                    //    Label1.Text = "Please Select ActionStatus and DocumentStatus";
                    //}
                }
            }
            if (ds.Tables[0].Rows.Count == 0)
            {
                int agreestatus = 0;
                if (ddl_viewdetails1.SelectedItem.Text != "Select" && ddl_viewdetails2.SelectedItem.Text != "Select")
                {
                    if (Radio_accept.Checked == true)
                    {
                        agreestatus = 1;
                    }
                    if (Radio_reject.Checked == true)
                    {
                        agreestatus = 2;
                    }
                    string Receiverremarks = Convert.ToString(txt_viewdetails3.Text);
                    string Receiveraction_status = Convert.ToString(ddl_viewdetails1.SelectedItem.Value);
                    string Reveiverdocument_status = Convert.ToString(ddl_viewdetails2.SelectedItem.Value);
                    string sendtime = txt_viewtime.Text;
                    string[] arrayDate = txt_popviewdate.Text.Split('/');
                    DateTime senddate = Convert.ToDateTime(arrayDate[1].ToString() + "/" + arrayDate[0].ToString() + "/" + arrayDate[2].ToString() + " " + sendtime.ToString());
                    string ActionStatusVal = d2.GetFunction("select ActionStatus from letterForwardDetails where TapalMovementID='" + tapalid + "' and ForwardPerson='" + staffcodesession + "'");
                    if (ActionStatusVal == "0")
                    {
                        string updateforward_details = "update letterForwardDetails set ActionStatus='" + Receiveraction_status + "',DocumentStatus='" + Reveiverdocument_status + "',Remarks='" + Receiverremarks + "',DateTime='" + senddate + "', agreestatus='" + agreestatus + "' where TapalMovementID='" + tapalid + "' and ForwardPerson='" + staffcodesession + "'";
                        int insert = d2.update_method_wo_parameter(updateforward_details, "Text");
                        if (insert != 0)
                        {
                            imgdiv2.Visible = true;
                            Label1.Text = "Saved Successfully";
                        }
                        int val = 0;
                        if (Iscompleted.Checked == true)
                        {
                            val = 1;
                            string activerow = "";

                            activerow = Fpspread2.ActiveSheetView.ActiveRow.ToString();


                            string ActionStatusVal1 = d2.GetFunction("select ActionStatus from letterForwardDetails where TapalMovementID='" + tapalid + "' and ForwardPerson='" + getforwardpersonCode + "'");
                            string getcheck = d2.GetFunction("select finalcompletioncheck from letterForwardDetails  where TapalMovementID='" + tapalid + "' and ForwardPerson='" + getforwardpersonCode + "'");
                            if (ActionStatusVal1 == "1" && getcheck == "")
                            {

                                string updateforward = "update letterForwardDetails set finalcompletioncheck='" + val + "' where TapalMovementID='" + tapalid + "' and ForwardPerson='" + getforwardpersonCode + "'";
                                int ins = d2.update_method_wo_parameter(updateforward, "Text");
                                if (ins != 0)
                                {
                                    imgdiv2.Visible = true;
                                    Label1.Text = "Saved Successfully";
                                }

                            }
                            else
                            {
                                imgdiv2.Visible = true;
                                Label1.Text = "Already Status Updated";
                            }
                        }
                    }
                    else
                    {
                        imgdiv2.Visible = true;
                        Label1.Text = "Already Approved";
                    }
                }
                else
                {
                    imgdiv2.Visible = true;
                    Label1.Text = "Please Select ActionStatus and DocumentStatus";
                }
            }
        }
        catch (Exception ex)
        {
            // d2.sendErrorMail(ex, collegecode1, "LetterInwardReport");
        }
    }

    //bool saveflage = false;
    //string activerow = "";
    //string val = "";
    //string[] ay = txt_popviewdate.Text.Split('/');
    //string date = ay[1].ToString() + "/" + ay[0].ToString() + "/" + ay[2].ToString();
    //string time = Convert.ToString(txt_viewtime.Text);
    //string staff_name = Convert.ToString(txt_viewdetails4.Text);
    //string Recever_staff_name = Convert.ToString(txt_receiveperson.Text);
    //string action_status = Convert.ToString(ddl_viewdetails1.SelectedItem.Value);
    //string document_status = Convert.ToString(ddl_viewdetails2.SelectedItem.Value);
    //string staffcode = d2.GetFunction("select staff_code from staffmaster where staff_name='" + staff_name + "'");
    //string Receiver_staffCode = d2.GetFunction("select staff_code from staffmaster where staff_name='" + Recever_staff_name + "'");
    //string ID = d2.GetFunction("select TapalMovementsID from TapalInward where staff_code='" + staffcode + "'");
    //if (ddl_viewdetails1.SelectedItem.Text != "Select" && ddl_viewdetails2.SelectedItem.Text != "Select")
    //{

    //    string fnl1 = d2.GetFunction("select ReqApproveStage from TapalInward where ToDeptCode='" + dept_code + "'");
    //    string fnl2 = d2.GetFunction("select max(ReqApproveStage) from RQ_RequestHierarchy where RequestType='12' and ReqStaffAppNo='" + staff_approval + "'");
    //    if (fnl1 == fnl2)
    //    {

    //        // string query = "insert into TapalInward (ActionDesc,ActionStatus,ActionDate,ActionTime,ViewStatus,ResponseStaff) values('','','"+date+"','"+time+"','','"+staffcode+"',)";
    //        string query = "update TapalInward set ActionDesc='" + document_status + "',ActionStatus='" + action_status + "',ActionDate='" + date + "',ActionTime='" + time + "',ViewStatus='1',ResponseStaff='" + staffcode + "',ReceivedPerson='" + Receiver_staffCode + "',ReqApproveStage='" + approvalstate + "',ReqAppStatus='" + approvalstage + "',ReqAppStaffAppNo='" + staff_approval + "',SendNote='1' where TapalMovementsID='" + val_move + "'";
    //        int ins = d2.update_method_wo_parameter(query, "Text");

    //        //query = "update TapalInward set ReqApproveStage='" + approvalvalue2 + "',ReqAppStatus='1',ReqAppStaffAppNo='" + getappid + "' where RequisitionPK='" + reqpk + "' and RequestCode='" + reqcode + "'";
    //d2.update_method_wo_parameter(update_query, "Text");
    ////staff leave type update
    //add_attn(reqpk);

    //            if (ins != 0)
    //            {
    //                saveflage = true;
    //            }
    //            if (saveflage == true)
    //            {
    //                imgdiv2.Visible = true;
    //                Label1.Text = "Saved Successfully";
    //            }
    //        }
    //    }
    //    else
    //    {
    //        imgdiv2.Visible = true;
    //        Label1.Text = "Kindly Select Action Status and Document Status";
    //    }
    //}
    //catch
    //{
    //}

    [System.Web.Services.WebMethod]
    [System.Web.Script.Services.ScriptMethod()]
    public static List<string> Getstaffname(string prefixText)
    {
        WebService ws = new WebService();
        List<string> name = new List<string>();
        string query = "select distinct s.staff_name from staffmaster s,staff_appl_master sa,hrdept_master hr,desig_master dm where s.appl_no=sa.appl_no and sa.dept_code=hr.dept_code and dm.desig_code=sa.desig_code and settled=0 and resign =0 and s.staff_name like '%" + prefixText + "%'";
        // string query = "select staff_name  from staffmaster where resign =0 and settled =0 and staff_name like  '" + prefixText + "%'";
        name = ws.Getname(query);
        return name;
    }

    public void btn_ad_Click(object sender, EventArgs e)
    {
        imgdiv3.Visible = true;
        panel_description.Visible = true;
    }

    public void btn_min_Click(object sender, EventArgs e)
    {
        if (ddl_viewdetails1.SelectedIndex == -1)
        {
            imgdiv4.Visible = true;
            lbl_erroralert1.Text = "No records found";
        }
        else if (ddl_viewdetails1.SelectedIndex == 0)
        {
            imgdiv4.Visible = true;
            lbl_erroralert1.Text = "Select any record";
        }
        else if (ddl_viewdetails1.SelectedIndex != 0)
        {
            imgdivcnfm.Visible = true;
        }
        else
        {
            imgdiv4.Visible = true;
            lbl_erroralert1.Text = "No records found";
        }
    }

    public void btn_ad1_Click(object sender, EventArgs e)
    {
        imgdiv5.Visible = true;
        panel_description2.Visible = true;
    }

    public void btn_min1_Click(object sender, EventArgs e)
    {
        if (ddl_viewdetails2.SelectedIndex == -1)
        {
            imgdiv6.Visible = true;
            panel_erroralert2.Visible = true;
            lbl_erroralert2.Text = "No records found";
        }
        else if (ddl_viewdetails2.SelectedIndex == 0)
        {
            imgdiv6.Visible = true;
            panel_erroralert2.Visible = true;
            lbl_erroralert2.Text = "Select any record";
        }
        else if (ddl_viewdetails2.SelectedIndex != 0)
        {
            imgdivcnfm2.Visible = true;
        }
        else
        {
            imgdiv4.Visible = true;
            lbl_erroralert1.Text = "No records found";
        }
    }

    public void btndescpopadd_Click(object sender, EventArgs e)
    {
        try
        {
            if (txt_description11.Text != "")
            {
                string sql = "if exists ( select * from CO_MasterValues where MasterValue ='" + txt_description11.Text + "' and MasterCriteria ='TAcst' and CollegeCode ='" + collegecode1 + "') update CO_MasterValues set MasterValue ='" + txt_description11.Text + "' where MasterValue ='" + txt_description11.Text + "' and MasterCriteria ='TAcst' and CollegeCode ='" + collegecode1 + "' else insert into CO_MasterValues (MasterValue,MasterCriteria,CollegeCode) values ('" + txt_description11.Text + "','TAcst','" + collegecode1 + "')";
                int insert = d2.update_method_wo_parameter(sql, "TEXT");
                if (insert != 0)
                {
                    imgdiv3.Visible = false;
                    panel_description.Visible = false;
                    imgdiv6.Visible = true;
                    panel_erroralert2.Visible = true;
                    lbl_erroralert2.Text = "Saved successfully";
                    txt_description11.Text = "";
                }
            }
            else
            {
                imgdiv4.Visible = true;
                lbl_erroralert1.Text = "Enter the description";
            }
            loaddesc();
        }
        catch (Exception ex)
        {
        }
    }

    public void btndescpopexit_Click(object sender, EventArgs e)
    {
        imgdiv3.Visible = false;
        panel_description.Visible = false;
    }

    public void btnerrclose1_Click(object sender, EventArgs e)
    {
        imgdiv4.Visible = false;
        panel_erroralert1.Visible = false;
        loaddesc();
        loaddesc1();
    }

    public void btn_adddesc2_Click(object sender, EventArgs e)
    {
        try
        {
            if (txt_description12.Text != "")
            {
                string sql = "if exists ( select * from CO_MasterValues where MasterValue ='" + txt_description12.Text + "' and MasterCriteria ='TDSta' and CollegeCode ='" + collegecode1 + "') update CO_MasterValues set MasterValue ='" + txt_description12.Text + "' where MasterValue ='" + txt_description12.Text + "' and MasterCriteria ='TDSta' and CollegeCode ='" + collegecode1 + "' else insert into CO_MasterValues (MasterValue,MasterCriteria,CollegeCode) values ('" + txt_description12.Text + "','TDSta','" + collegecode1 + "')";
                int insert = d2.update_method_wo_parameter(sql, "TEXT");
                if (insert != 0)
                {
                    imgdiv6.Visible = true;
                    lbl_erroralert2.Text = "Saved sucessfully";
                    panel_erroralert2.Visible = true;
                    txt_description12.Text = "";
                    imgdiv5.Visible = false;
                    panel_description2.Visible = false;
                }
            }
            else
            {
                imgdiv6.Visible = true;
                lbl_erroralert2.Text = "Enter the description";
            }
            loaddesc();
            loaddesc1();
        }
        catch (Exception ex)
        {
        }
    }

    public void btn_exitdesc2_Click(object sender, EventArgs e)
    {
        imgdiv5.Visible = false;
        panel_description2.Visible = false;
    }

    public void loaddesc()
    {
        ddl_viewdetails1.Items.Clear();
        ds.Tables.Clear();
        string sql = "select MasterCode,MasterValue from CO_MasterValues where MasterCriteria ='TAcst' and CollegeCode ='" + collegecode1 + "'";
        ds = d2.select_method_wo_parameter(sql, "TEXT");
        if (ds.Tables[0].Rows.Count > 0)
        {
            ddl_viewdetails1.DataSource = ds;
            ddl_viewdetails1.DataTextField = "MasterValue";
            ddl_viewdetails1.DataValueField = "MasterCode";
            ddl_viewdetails1.DataBind();
            ddl_viewdetails1.Items.Insert(0, new ListItem("Pending", "0"));
            ddl_viewdetails1.Items.Insert(1, new ListItem("Completed", "1"));


        }
        else
        {
            ddl_viewdetails1.Items.Insert(0, new ListItem("Pending", "0"));
            ddl_viewdetails1.Items.Insert(1, new ListItem("Completed", "1"));
        }
    }

    public void loaddesc1()
    {
        ddl_viewdetails2.Items.Clear();
        ds.Tables.Clear();
        string sql = "select MasterCode,MasterValue from CO_MasterValues where MasterCriteria ='TDSta' and CollegeCode ='" + collegecode1 + "'";
        ds = d2.select_method_wo_parameter(sql, "TEXT");
        if (ds.Tables[0].Rows.Count > 0)
        {
            ddl_viewdetails2.DataSource = ds;
            ddl_viewdetails2.DataTextField = "MasterValue";
            ddl_viewdetails2.DataValueField = "MasterCode";
            ddl_viewdetails2.DataBind();
            ddl_viewdetails2.Items.Insert(0, new ListItem("Select", "0"));
        }
        else
        {
            ddl_viewdetails2.Items.Insert(0, new ListItem("Select", "0"));
        }
    }

    public void btnerrclose22_Click(object sender, EventArgs e)
    {
        imgdiv6.Visible = false;
        panel_erroralert2.Visible = false;
    }

    public void access()
    {
        try
        {
            string query = "";
            string Master1 = "";
            string stud = "";
            string values = "";
            if ((Session["group_code"].ToString().Trim() != "") && (Session["group_code"].ToString().Trim() != "0") && (Session["group_code"].ToString().Trim() != "-1"))
            {
                string group = Session["group_code"].ToString();
                if (group.Contains(';'))
                {
                    string[] group_semi = group.Split(';');
                    Master1 = group_semi[0].ToString();
                }
                query = "select * from Master_Settings where settings ='Letter Tap Rights' and group_code ='" + Master1 + "'";
            }
            else
            {
                Master1 = Session["usercode"].ToString();
                query = "select * from Master_Settings where settings ='Letter Tap Rights' and usercode ='" + Master1 + "'";
            }
            ds = d2.select_method_wo_parameter(query, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    string val = Convert.ToString(ds.Tables[0].Rows[i]["value"]);
                    string[] split = val.Split(',');
                    string len = split.Length.ToString();
                    if (len == "1")
                    {
                        values = val;
                        if (val == "0")
                        {
                            imgbtn_all.Visible = true;
                            Label2.Visible = true;
                            imgbtn_stud.Visible = true;
                            lbl_student.Visible = true;
                            txt_stud.Visible = true;
                            lbl_stud.Visible = true;
                            imgbtn_staff.Visible = true;
                            lbl_staff.Visible = true;
                            txt_stf.Visible = true;
                            lbl_stf.Visible = true;
                            imgbtn_company.Visible = true;
                            lbl_company.Visible = true;
                            txt_comp.Visible = true;
                            lbl_comp.Visible = true;
                            imgbtn_individual.Visible = true;
                            lbl_individual.Visible = true;
                            txt_indiv.Visible = true;
                            lbl_indiv.Visible = true;
                            imgbtn_magazine.Visible = true;
                            lbl_magazine.Visible = true;
                            txt_magaz.Visible = true;
                            lbl_magaz.Visible = true;
                            imgbtn_others.Visible = true;
                            lbl_others.Visible = true;
                            txt_othr.Visible = true;
                            lbl_othr.Visible = true;
                        }
                        else
                        {
                            imgbtn_all.Visible = false;
                            Label2.Visible = false;
                            imgbtn_stud.Visible = false;
                            lbl_student.Visible = false;
                            txt_stud.Visible = false;
                            lbl_stud.Visible = false;
                            imgbtn_staff.Visible = false;
                            lbl_staff.Visible = false;
                            txt_stf.Visible = false;
                            lbl_stf.Visible = false;
                            imgbtn_company.Visible = false;
                            lbl_company.Visible = false;
                            txt_comp.Visible = false;
                            lbl_comp.Visible = false;
                            imgbtn_individual.Visible = false;
                            lbl_individual.Visible = false;
                            txt_indiv.Visible = false;
                            lbl_indiv.Visible = false;
                            imgbtn_magazine.Visible = false;
                            lbl_magazine.Visible = false;
                            txt_magaz.Visible = false;
                            lbl_magaz.Visible = false;
                            imgbtn_others.Visible = false;
                            lbl_others.Visible = false;
                            txt_othr.Visible = false;
                            lbl_othr.Visible = false;
                        }
                        if (val == "1")
                        {
                            imgbtn_stud.Visible = true;
                            lbl_student.Visible = true;
                            txt_stud.Visible = true;
                            lbl_stud.Visible = true;
                        }
                        else
                        {
                            imgbtn_stud.Visible = false;
                            lbl_student.Visible = false;
                            txt_stud.Visible = false;
                            lbl_stud.Visible = false;
                        }
                        if (val == "2")
                        {
                            imgbtn_staff.Visible = true;
                            lbl_staff.Visible = true;
                            txt_stf.Visible = true;
                            lbl_stf.Visible = true;
                        }
                        else
                        {
                            imgbtn_staff.Visible = false;
                            lbl_staff.Visible = false;
                            txt_stf.Visible = false;
                            lbl_stf.Visible = false;
                        }
                        if (val == "3")
                        {
                            imgbtn_parents.Visible = true;
                            lbl_parents.Visible = true;
                            txt_parnt.Visible = true;
                            lbl_parnt.Visible = true;
                        }
                        else
                        {
                            imgbtn_parents.Visible = false;
                            lbl_parents.Visible = false;
                            txt_parnt.Visible = false;
                            lbl_parnt.Visible = false;
                        }
                        if (val == "4")
                        {
                            imgbtn_company.Visible = true;
                            lbl_company.Visible = true;
                            txt_comp.Visible = true;
                            lbl_comp.Visible = true;
                        }
                        else
                        {
                            imgbtn_company.Visible = false;
                            lbl_company.Visible = false;
                            txt_comp.Visible = false;
                            lbl_comp.Visible = false;
                        }
                        if (val == "5")
                        {
                            imgbtn_individual.Visible = true;
                            lbl_individual.Visible = true;
                            txt_indiv.Visible = true;
                            lbl_indiv.Visible = true;
                        }
                        else
                        {
                            imgbtn_individual.Visible = false;
                            lbl_individual.Visible = false;
                            txt_indiv.Visible = false;
                            lbl_indiv.Visible = false;
                        }
                        if (val == "6")
                        {
                            imgbtn_magazine.Visible = true;
                            lbl_magazine.Visible = true;
                            txt_magaz.Visible = true;
                            lbl_magaz.Visible = true;
                        }
                        else
                        {
                            imgbtn_magazine.Visible = false;
                            lbl_magazine.Visible = false;
                            txt_magaz.Visible = false;
                            lbl_magaz.Visible = false;
                        }
                        if (val == "7")
                        {
                            imgbtn_others.Visible = true;
                            lbl_others.Visible = true;
                            txt_othr.Visible = true;
                            lbl_othr.Visible = true;
                        }
                        else
                        {
                            imgbtn_others.Visible = false;
                            lbl_others.Visible = false;
                            txt_othr.Visible = false;
                            lbl_othr.Visible = false;
                        }
                    }
                    //******************** length 2**************
                    if (len == "2")
                    {
                        string sp1 = (split[0]);
                        string sp2 = (split[1]);
                        if (val == "0")
                        {
                            imgbtn_all.Visible = true;
                            Label2.Visible = true;
                            imgbtn_stud.Visible = true;
                            lbl_student.Visible = true;
                            txt_stud.Visible = true;
                            lbl_stud.Visible = true;
                            imgbtn_staff.Visible = true;
                            lbl_staff.Visible = true;
                            txt_stf.Visible = true;
                            lbl_stf.Visible = true;
                            imgbtn_company.Visible = true;
                            lbl_company.Visible = true;
                            txt_comp.Visible = true;
                            lbl_comp.Visible = true;
                            imgbtn_individual.Visible = true;
                            lbl_individual.Visible = true;
                            txt_indiv.Visible = true;
                            lbl_indiv.Visible = true;
                            imgbtn_magazine.Visible = true;
                            lbl_magazine.Visible = true;
                            txt_magaz.Visible = true;
                            lbl_magaz.Visible = true;
                            imgbtn_others.Visible = true;
                            lbl_others.Visible = true;
                            txt_othr.Visible = true;
                            lbl_othr.Visible = true;
                        }
                        else
                        {
                            imgbtn_all.Visible = false;
                            Label2.Visible = false;
                            imgbtn_stud.Visible = false;
                            lbl_student.Visible = false;
                            txt_stud.Visible = false;
                            lbl_stud.Visible = false;
                            imgbtn_staff.Visible = false;
                            lbl_staff.Visible = false;
                            txt_stf.Visible = false;
                            lbl_stf.Visible = false;
                            imgbtn_company.Visible = false;
                            lbl_company.Visible = false;
                            txt_comp.Visible = false;
                            lbl_comp.Visible = false;
                            imgbtn_individual.Visible = false;
                            lbl_individual.Visible = false;
                            txt_indiv.Visible = false;
                            lbl_indiv.Visible = false;
                            imgbtn_magazine.Visible = false;
                            lbl_magazine.Visible = false;
                            txt_magaz.Visible = false;
                            lbl_magaz.Visible = false;
                            imgbtn_others.Visible = false;
                            lbl_others.Visible = false;
                            txt_othr.Visible = false;
                            lbl_othr.Visible = false;
                        }
                        if (sp1 == "0" || sp2 == "0")
                        {
                            imgbtn_all.Visible = true;
                            Label2.Visible = true;
                        }
                        else
                        {
                            imgbtn_all.Visible = false;
                            Label2.Visible = false;
                        }
                        if (sp1 == "1" || sp2 == "1")
                        {
                            imgbtn_stud.Visible = true;
                            lbl_student.Visible = true;
                            txt_stud.Visible = true;
                            lbl_stud.Visible = true;
                        }
                        else
                        {
                            imgbtn_stud.Visible = false;
                            lbl_student.Visible = false;
                            txt_stud.Visible = false;
                            lbl_stud.Visible = true;
                        }
                        if (sp1 == "2" || sp2 == "2")
                        {
                            imgbtn_staff.Visible = true;
                            lbl_staff.Visible = true;
                            txt_stf.Visible = true;
                            lbl_stf.Visible = true;
                        }
                        else
                        {
                            imgbtn_staff.Visible = false;
                            lbl_staff.Visible = false;
                            txt_stf.Visible = false;
                            lbl_stf.Visible = false;
                        }
                        if (sp1 == "3" || sp2 == "3")
                        {
                            imgbtn_parents.Visible = true;
                            lbl_parents.Visible = true;
                            txt_parnt.Visible = true;
                            lbl_parnt.Visible = true;
                        }
                        else
                        {
                            imgbtn_parents.Visible = false;
                            lbl_parents.Visible = false;
                            txt_parnt.Visible = false;
                            lbl_parnt.Visible = false;
                        }
                        if (sp1 == "4" || sp2 == "4")
                        {
                            imgbtn_company.Visible = true;
                            lbl_company.Visible = true;
                            txt_comp.Visible = true;
                            lbl_comp.Visible = true;
                        }
                        else
                        {
                            imgbtn_company.Visible = false;
                            lbl_company.Visible = false;
                            txt_comp.Visible = false;
                            lbl_comp.Visible = false;
                        }
                        if (sp1 == "5" || sp2 == "5")
                        {
                            imgbtn_individual.Visible = true;
                            lbl_individual.Visible = true;
                            txt_indiv.Visible = true;
                            lbl_indiv.Visible = true;
                        }
                        else
                        {
                            imgbtn_individual.Visible = false;
                            lbl_individual.Visible = false;
                            txt_indiv.Visible = false;
                            lbl_indiv.Visible = false;
                        }
                        if (sp1 == "6" || sp2 == "6")
                        {
                            imgbtn_magazine.Visible = true;
                            lbl_magazine.Visible = true;
                            txt_magaz.Visible = true;
                            lbl_magaz.Visible = true;
                        }
                        else
                        {
                            imgbtn_magazine.Visible = false;
                            lbl_magazine.Visible = false;
                            txt_magaz.Visible = false;
                            lbl_magaz.Visible = false;
                        }
                        if (sp1 == "7" || sp2 == "7")
                        {
                            imgbtn_others.Visible = true;
                            lbl_others.Visible = true;
                            txt_othr.Visible = true;
                            lbl_othr.Visible = true;
                        }
                        else
                        {
                            imgbtn_others.Visible = false;
                            lbl_others.Visible = false;
                            txt_othr.Visible = false;
                            lbl_othr.Visible = false;
                        }
                    }
                    //  *************************** length 3*****************
                    else if (len == "3")
                    {
                        string sp1 = (split[0]);
                        string sp2 = (split[1]);
                        string sp3 = (split[2]);
                        if (val == "0")
                        {
                            imgbtn_all.Visible = true;
                            Label2.Visible = true;
                            imgbtn_stud.Visible = true;
                            lbl_student.Visible = true;
                            txt_stud.Visible = true;
                            lbl_stud.Visible = true;
                            imgbtn_staff.Visible = true;
                            lbl_staff.Visible = true;
                            txt_stf.Visible = true;
                            lbl_stf.Visible = true;
                            imgbtn_company.Visible = true;
                            lbl_company.Visible = true;
                            txt_comp.Visible = true;
                            lbl_comp.Visible = true;
                            imgbtn_individual.Visible = true;
                            lbl_individual.Visible = true;
                            txt_indiv.Visible = true;
                            lbl_indiv.Visible = true;
                            imgbtn_magazine.Visible = true;
                            lbl_magazine.Visible = true;
                            txt_magaz.Visible = true;
                            lbl_magaz.Visible = true;
                            imgbtn_others.Visible = true;
                            lbl_others.Visible = true;
                            txt_othr.Visible = true;
                            lbl_othr.Visible = true;
                        }
                        else
                        {
                            imgbtn_all.Visible = false;
                            Label2.Visible = false;
                            imgbtn_stud.Visible = false;
                            lbl_student.Visible = false;
                            txt_stud.Visible = false;
                            lbl_stud.Visible = false;
                            imgbtn_staff.Visible = false;
                            lbl_staff.Visible = false;
                            txt_stf.Visible = false;
                            lbl_stf.Visible = false;
                            imgbtn_company.Visible = false;
                            lbl_company.Visible = false;
                            txt_comp.Visible = false;
                            lbl_comp.Visible = false;
                            imgbtn_individual.Visible = false;
                            lbl_individual.Visible = false;
                            txt_indiv.Visible = false;
                            lbl_indiv.Visible = false;
                            imgbtn_magazine.Visible = false;
                            lbl_magazine.Visible = false;
                            txt_magaz.Visible = false;
                            lbl_magaz.Visible = false;
                            imgbtn_others.Visible = false;
                            lbl_others.Visible = false;
                            txt_othr.Visible = false;
                            lbl_othr.Visible = false;
                        }
                        if (sp1 == "0" || sp2 == "0" || sp3 == "0")
                        {
                            imgbtn_all.Visible = true;
                            Label2.Visible = true;
                        }
                        else
                        {
                            imgbtn_all.Visible = false;
                            Label2.Visible = false;
                        }
                        if (sp1 == "1" || sp2 == "1" || sp3 == "1")
                        {
                            imgbtn_stud.Visible = true;
                            lbl_student.Visible = true;
                            txt_stud.Visible = true;
                            lbl_stud.Visible = true;
                        }
                        else
                        {
                            imgbtn_stud.Visible = false;
                            lbl_student.Visible = false;
                            txt_stud.Visible = false;
                            lbl_stud.Visible = true;
                        }
                        if (sp1 == "2" || sp2 == "2" || sp3 == "2")
                        {
                            imgbtn_staff.Visible = true;
                            lbl_staff.Visible = true;
                            txt_stf.Visible = true;
                            lbl_stf.Visible = true;
                        }
                        else
                        {
                            imgbtn_staff.Visible = false;
                            lbl_staff.Visible = false;
                            txt_stf.Visible = false;
                            lbl_stf.Visible = false;
                        }
                        if (sp1 == "3" || sp2 == "3" || sp3 == "3")
                        {
                            imgbtn_parents.Visible = true;
                            lbl_parents.Visible = true;
                            txt_parnt.Visible = true;
                            lbl_parnt.Visible = true;
                        }
                        else
                        {
                            imgbtn_parents.Visible = false;
                            lbl_parents.Visible = false;
                            txt_parnt.Visible = false;
                            lbl_parnt.Visible = false;
                        }
                        if (sp1 == "4" || sp2 == "4" || sp3 == "4")
                        {
                            imgbtn_company.Visible = true;
                            lbl_company.Visible = true;
                            txt_comp.Visible = true;
                            lbl_comp.Visible = true;
                        }
                        else
                        {
                            imgbtn_company.Visible = false;
                            lbl_company.Visible = false;
                            txt_comp.Visible = false;
                            lbl_comp.Visible = false;
                        }
                        if (sp1 == "5" || sp2 == "5" || sp3 == "5")
                        {
                            imgbtn_individual.Visible = true;
                            lbl_individual.Visible = true;
                            txt_indiv.Visible = true;
                            lbl_indiv.Visible = true;
                        }
                        else
                        {
                            imgbtn_individual.Visible = false;
                            lbl_individual.Visible = false;
                            txt_indiv.Visible = false;
                            lbl_indiv.Visible = false;
                        }
                        if (sp1 == "6" || sp2 == "6" || sp3 == "6")
                        {
                            imgbtn_magazine.Visible = true;
                            lbl_magazine.Visible = true;
                            txt_magaz.Visible = true;
                            lbl_magaz.Visible = true;
                        }
                        else
                        {
                            imgbtn_magazine.Visible = false;
                            lbl_magazine.Visible = false;
                            txt_magaz.Visible = false;
                            lbl_magaz.Visible = false;
                        }
                        if (sp1 == "7" || sp2 == "7" || sp3 == "7")
                        {
                            imgbtn_others.Visible = true;
                            lbl_others.Visible = true;
                            txt_othr.Visible = true;
                            lbl_othr.Visible = true;
                        }
                        else
                        {
                            imgbtn_others.Visible = false;
                            lbl_others.Visible = false;
                            txt_othr.Visible = false;
                            lbl_othr.Visible = false;
                        }
                    }
                    // *********************** length 4*****************
                    else if (len == "4")
                    {
                        string sp1 = (split[0]);
                        string sp2 = (split[1]);
                        string sp3 = (split[2]);
                        string sp4 = (split[3]);
                        if (val == "0")
                        {
                            imgbtn_all.Visible = true;
                            Label2.Visible = true;
                            imgbtn_stud.Visible = true;
                            lbl_student.Visible = true;
                            txt_stud.Visible = true;
                            lbl_stud.Visible = true;
                            imgbtn_staff.Visible = true;
                            lbl_staff.Visible = true;
                            txt_stf.Visible = true;
                            lbl_stf.Visible = true;
                            imgbtn_company.Visible = true;
                            lbl_company.Visible = true;
                            txt_comp.Visible = true;
                            lbl_comp.Visible = true;
                            imgbtn_individual.Visible = true;
                            lbl_individual.Visible = true;
                            txt_indiv.Visible = true;
                            lbl_indiv.Visible = true;
                            imgbtn_magazine.Visible = true;
                            lbl_magazine.Visible = true;
                            txt_magaz.Visible = true;
                            lbl_magaz.Visible = true;
                            imgbtn_others.Visible = true;
                            lbl_others.Visible = true;
                            txt_othr.Visible = true;
                            lbl_othr.Visible = true;
                        }
                        else
                        {
                            imgbtn_all.Visible = false;
                            Label2.Visible = false;
                            imgbtn_stud.Visible = false;
                            lbl_student.Visible = false;
                            txt_stud.Visible = false;
                            lbl_stud.Visible = false;
                            imgbtn_staff.Visible = false;
                            lbl_staff.Visible = false;
                            txt_stf.Visible = false;
                            lbl_stf.Visible = false;
                            imgbtn_company.Visible = false;
                            lbl_company.Visible = false;
                            txt_comp.Visible = false;
                            lbl_comp.Visible = false;
                            imgbtn_individual.Visible = false;
                            lbl_individual.Visible = false;
                            txt_indiv.Visible = false;
                            lbl_indiv.Visible = false;
                            imgbtn_magazine.Visible = false;
                            lbl_magazine.Visible = false;
                            txt_magaz.Visible = false;
                            lbl_magaz.Visible = false;
                            imgbtn_others.Visible = false;
                            lbl_others.Visible = false;
                            txt_othr.Visible = false;
                            lbl_othr.Visible = false;
                        }
                        if (sp1 == "0" || sp2 == "0" || sp3 == "0" || sp4 == "0")
                        {
                            imgbtn_all.Visible = true;
                            Label2.Visible = true;
                        }
                        else
                        {
                            imgbtn_all.Visible = false;
                            Label2.Visible = false;
                        }
                        if (sp1 == "1" || sp2 == "1" || sp3 == "1" || sp4 == "1")
                        {
                            imgbtn_stud.Visible = true;
                            lbl_student.Visible = true;
                            txt_stud.Visible = true;
                            lbl_stud.Visible = true;
                        }
                        else
                        {
                            imgbtn_stud.Visible = false;
                            lbl_student.Visible = false;
                            txt_stud.Visible = false;
                            lbl_stud.Visible = true;
                        }
                        if (sp1 == "2" || sp2 == "2" || sp3 == "2" || sp4 == "2")
                        {
                            imgbtn_staff.Visible = true;
                            lbl_staff.Visible = true;
                            txt_stf.Visible = true;
                            lbl_stf.Visible = true;
                        }
                        else
                        {
                            imgbtn_staff.Visible = false;
                            lbl_staff.Visible = false;
                            txt_stf.Visible = false;
                            lbl_stf.Visible = false;
                        }
                        if (sp1 == "3" || sp2 == "3" || sp3 == "3" || sp4 == "3")
                        {
                            imgbtn_parents.Visible = true;
                            lbl_parents.Visible = true;
                            txt_parnt.Visible = true;
                            lbl_parnt.Visible = true;
                        }
                        else
                        {
                            imgbtn_parents.Visible = false;
                            lbl_parents.Visible = false;
                            txt_parnt.Visible = false;
                            lbl_parnt.Visible = false;
                        }
                        if (sp1 == "4" || sp2 == "4" || sp3 == "4" || sp4 == "4")
                        {
                            imgbtn_company.Visible = true;
                            lbl_company.Visible = true;
                            txt_comp.Visible = true;
                            lbl_comp.Visible = true;
                        }
                        else
                        {
                            imgbtn_company.Visible = false;
                            lbl_company.Visible = false;
                            txt_comp.Visible = false;
                            lbl_comp.Visible = false;
                        }
                        if (sp1 == "5" || sp2 == "5" || sp3 == "5" || sp4 == "5")
                        {
                            imgbtn_individual.Visible = true;
                            lbl_individual.Visible = true;
                            txt_indiv.Visible = true;
                            lbl_indiv.Visible = true;
                        }
                        else
                        {
                            imgbtn_individual.Visible = false;
                            lbl_individual.Visible = false;
                            txt_indiv.Visible = false;
                            lbl_indiv.Visible = false;
                        }
                        if (sp1 == "6" || sp2 == "6" || sp3 == "6" || sp4 == "6")
                        {
                            imgbtn_magazine.Visible = true;
                            lbl_magazine.Visible = true;
                            txt_magaz.Visible = true;
                            lbl_magaz.Visible = true;
                        }
                        else
                        {
                            imgbtn_magazine.Visible = false;
                            lbl_magazine.Visible = false;
                            txt_magaz.Visible = false;
                            lbl_magaz.Visible = false;
                        }
                        if (sp1 == "7" || sp2 == "7" || sp3 == "7" || sp4 == "7")
                        {
                            imgbtn_others.Visible = true;
                            lbl_others.Visible = true;
                            txt_othr.Visible = true;
                            lbl_othr.Visible = true;
                        }
                        else
                        {
                            imgbtn_others.Visible = false;
                            lbl_others.Visible = false;
                            txt_othr.Visible = false;
                            lbl_othr.Visible = false;
                        }
                    }
                    else if (len == "5")
                    {
                        string sp1 = (split[0]);
                        string sp2 = (split[1]);
                        string sp3 = (split[2]);
                        string sp4 = (split[3]);
                        string sp5 = (split[4]);
                        if (val == "0")
                        {
                            imgbtn_all.Visible = true;
                            Label2.Visible = true;
                            imgbtn_stud.Visible = true;
                            lbl_student.Visible = true;
                            txt_stud.Visible = true;
                            lbl_stud.Visible = true;
                            imgbtn_staff.Visible = true;
                            lbl_staff.Visible = true;
                            txt_stf.Visible = true;
                            lbl_stf.Visible = true;
                            imgbtn_company.Visible = true;
                            lbl_company.Visible = true;
                            txt_comp.Visible = true;
                            lbl_comp.Visible = true;
                            imgbtn_individual.Visible = true;
                            lbl_individual.Visible = true;
                            txt_indiv.Visible = true;
                            lbl_indiv.Visible = true;
                            imgbtn_magazine.Visible = true;
                            lbl_magazine.Visible = true;
                            txt_magaz.Visible = true;
                            lbl_magaz.Visible = true;
                            imgbtn_others.Visible = true;
                            lbl_others.Visible = true;
                            txt_othr.Visible = true;
                            lbl_othr.Visible = true;
                        }
                        else
                        {
                            imgbtn_all.Visible = false;
                            Label2.Visible = false;
                            imgbtn_stud.Visible = false;
                            lbl_student.Visible = false;
                            txt_stud.Visible = false;
                            lbl_stud.Visible = false;
                            imgbtn_staff.Visible = false;
                            lbl_staff.Visible = false;
                            txt_stf.Visible = false;
                            lbl_stf.Visible = false;
                            imgbtn_company.Visible = false;
                            lbl_company.Visible = false;
                            txt_comp.Visible = false;
                            lbl_comp.Visible = false;
                            imgbtn_individual.Visible = false;
                            lbl_individual.Visible = false;
                            txt_indiv.Visible = false;
                            lbl_indiv.Visible = false;
                            imgbtn_magazine.Visible = false;
                            lbl_magazine.Visible = false;
                            txt_magaz.Visible = false;
                            lbl_magaz.Visible = false;
                            imgbtn_others.Visible = false;
                            lbl_others.Visible = false;
                            txt_othr.Visible = false;
                            lbl_othr.Visible = false;
                        }
                        if (sp1 == "0" || sp2 == "0" || sp3 == "0" || sp4 == "0" || sp5 == "0")
                        {
                            imgbtn_all.Visible = true;
                            Label2.Visible = true;
                        }
                        else
                        {
                            imgbtn_all.Visible = false;
                            Label2.Visible = false;
                        }
                        if (sp1 == "1" || sp2 == "1" || sp3 == "1" || sp4 == "1" || sp5 == "1")
                        {
                            imgbtn_stud.Visible = true;
                            lbl_student.Visible = true;
                            txt_stud.Visible = true;
                            lbl_stud.Visible = true;
                        }
                        else
                        {
                            imgbtn_stud.Visible = false;
                            lbl_student.Visible = false;
                            txt_stud.Visible = false;
                            lbl_stud.Visible = true;
                        }
                        if (sp1 == "2" || sp2 == "2" || sp3 == "2" || sp4 == "2" || sp5 == "2")
                        {
                            imgbtn_staff.Visible = true;
                            lbl_staff.Visible = true;
                            txt_stf.Visible = true;
                            lbl_stf.Visible = true;
                        }
                        else
                        {
                            imgbtn_staff.Visible = false;
                            lbl_staff.Visible = false;
                            txt_stf.Visible = false;
                            lbl_stf.Visible = false;
                        }
                        if (sp1 == "3" || sp2 == "3" || sp3 == "3" || sp4 == "3" || sp5 == "3")
                        {
                            imgbtn_parents.Visible = true;
                            lbl_parents.Visible = true;
                            txt_parnt.Visible = true;
                            lbl_parnt.Visible = true;
                        }
                        else
                        {
                            imgbtn_parents.Visible = false;
                            lbl_parents.Visible = false;
                            txt_parnt.Visible = false;
                            lbl_parnt.Visible = false;
                        }
                        if (sp1 == "4" || sp2 == "4" || sp3 == "4" || sp4 == "4" || sp5 == "4")
                        {
                            imgbtn_company.Visible = true;
                            lbl_company.Visible = true;
                            txt_comp.Visible = true;
                            lbl_comp.Visible = true;
                        }
                        else
                        {
                            imgbtn_company.Visible = false;
                            lbl_company.Visible = false;
                            txt_comp.Visible = false;
                            lbl_comp.Visible = false;
                        }
                        if (sp1 == "5" || sp2 == "5" || sp3 == "5" || sp4 == "5" || sp5 == "5")
                        {
                            imgbtn_individual.Visible = true;
                            lbl_individual.Visible = true;
                            txt_indiv.Visible = true;
                            lbl_indiv.Visible = true;
                        }
                        else
                        {
                            imgbtn_individual.Visible = false;
                            lbl_individual.Visible = false;
                            txt_indiv.Visible = false;
                            lbl_indiv.Visible = false;
                        }
                        if (sp1 == "6" || sp2 == "6" || sp3 == "6" || sp4 == "6" || sp5 == "6")
                        {
                            imgbtn_magazine.Visible = true;
                            lbl_magazine.Visible = true;
                            txt_magaz.Visible = true;
                            lbl_magaz.Visible = true;
                        }
                        else
                        {
                            imgbtn_magazine.Visible = false;
                            lbl_magazine.Visible = false;
                            txt_magaz.Visible = false;
                            lbl_magaz.Visible = false;
                        }
                        if (sp1 == "7" || sp2 == "7" || sp3 == "7" || sp4 == "7" || sp5 == "7")
                        {
                            imgbtn_others.Visible = true;
                            lbl_others.Visible = true;
                            txt_othr.Visible = true;
                            lbl_othr.Visible = true;
                        }
                        else
                        {
                            imgbtn_others.Visible = false;
                            lbl_others.Visible = false;
                            txt_othr.Visible = false;
                            lbl_othr.Visible = false;
                        }
                    }
                    else if (len == "6")
                    {
                        string sp1 = (split[0]);
                        string sp2 = (split[1]);
                        string sp3 = (split[2]);
                        string sp4 = (split[3]);
                        string sp5 = (split[4]);
                        string sp6 = (split[5]);
                        if (val == "0")
                        {
                            imgbtn_all.Visible = true;
                            Label2.Visible = true;
                            imgbtn_stud.Visible = true;
                            lbl_student.Visible = true;
                            txt_stud.Visible = true;
                            lbl_stud.Visible = true;
                            imgbtn_staff.Visible = true;
                            lbl_staff.Visible = true;
                            txt_stf.Visible = true;
                            lbl_stf.Visible = true;
                            imgbtn_company.Visible = true;
                            lbl_company.Visible = true;
                            txt_comp.Visible = true;
                            lbl_comp.Visible = true;
                            imgbtn_individual.Visible = true;
                            lbl_individual.Visible = true;
                            txt_indiv.Visible = true;
                            lbl_indiv.Visible = true;
                            imgbtn_magazine.Visible = true;
                            lbl_magazine.Visible = true;
                            txt_magaz.Visible = true;
                            lbl_magaz.Visible = true;
                            imgbtn_others.Visible = true;
                            lbl_others.Visible = true;
                            txt_othr.Visible = true;
                            lbl_othr.Visible = true;
                        }
                        else
                        {
                            imgbtn_all.Visible = false;
                            Label2.Visible = false;
                            imgbtn_stud.Visible = false;
                            lbl_student.Visible = false;
                            txt_stud.Visible = false;
                            lbl_stud.Visible = false;
                            imgbtn_staff.Visible = false;
                            lbl_staff.Visible = false;
                            txt_stf.Visible = false;
                            lbl_stf.Visible = false;
                            imgbtn_company.Visible = false;
                            lbl_company.Visible = false;
                            txt_comp.Visible = false;
                            lbl_comp.Visible = false;
                            imgbtn_individual.Visible = false;
                            lbl_individual.Visible = false;
                            txt_indiv.Visible = false;
                            lbl_indiv.Visible = false;
                            imgbtn_magazine.Visible = false;
                            lbl_magazine.Visible = false;
                            txt_magaz.Visible = false;
                            lbl_magaz.Visible = false;
                            imgbtn_others.Visible = false;
                            lbl_others.Visible = false;
                            txt_othr.Visible = false;
                            lbl_othr.Visible = false;
                        }
                        if (sp1 == "0" || sp2 == "0" || sp3 == "0" || sp4 == "0" || sp5 == "0" || sp6 == "0")
                        {
                            imgbtn_all.Visible = true;
                            Label2.Visible = true;
                        }
                        else
                        {
                            imgbtn_all.Visible = false;
                            Label2.Visible = false;
                        }
                        if (sp1 == "1" || sp2 == "1" || sp3 == "1" || sp4 == "1" || sp5 == "1" || sp6 == "1")
                        {
                            imgbtn_stud.Visible = true;
                            lbl_student.Visible = true;
                            txt_stud.Visible = true;
                            lbl_stud.Visible = true;
                        }
                        else
                        {
                            imgbtn_stud.Visible = false;
                            lbl_student.Visible = false;
                            txt_stud.Visible = false;
                            lbl_stud.Visible = true;
                        }
                        if (sp1 == "2" || sp2 == "2" || sp3 == "2" || sp4 == "2" || sp5 == "2" || sp6 == "2")
                        {
                            imgbtn_staff.Visible = true;
                            lbl_staff.Visible = true;
                            txt_stf.Visible = true;
                            lbl_stf.Visible = true;
                        }
                        else
                        {
                            imgbtn_staff.Visible = false;
                            lbl_staff.Visible = false;
                            txt_stf.Visible = false;
                            lbl_stf.Visible = false;
                        }
                        if (sp1 == "3" || sp2 == "3" || sp3 == "3" || sp4 == "3" || sp5 == "3" || sp6 == "3")
                        {
                            imgbtn_parents.Visible = true;
                            lbl_parents.Visible = true;
                            txt_parnt.Visible = true;
                            lbl_parnt.Visible = true;
                        }
                        else
                        {
                            imgbtn_parents.Visible = false;
                            lbl_parents.Visible = false;
                            txt_parnt.Visible = false;
                            lbl_parnt.Visible = false;
                        }
                        if (sp1 == "4" || sp2 == "4" || sp3 == "4" || sp4 == "4" || sp5 == "4" || sp6 == "4")
                        {
                            imgbtn_company.Visible = true;
                            lbl_company.Visible = true;
                            txt_comp.Visible = true;
                            lbl_comp.Visible = true;
                        }
                        else
                        {
                            imgbtn_company.Visible = false;
                            lbl_company.Visible = false;
                            txt_comp.Visible = false;
                            lbl_comp.Visible = false;
                        }
                        if (sp1 == "5" || sp2 == "5" || sp3 == "5" || sp4 == "5" || sp5 == "5" || sp6 == "5")
                        {
                            imgbtn_individual.Visible = true;
                            lbl_individual.Visible = true;
                            txt_indiv.Visible = true;
                            lbl_indiv.Visible = true;
                        }
                        else
                        {
                            imgbtn_individual.Visible = false;
                            lbl_individual.Visible = false;
                            txt_indiv.Visible = false;
                            lbl_indiv.Visible = false;
                        }
                        if (sp1 == "6" || sp2 == "6" || sp3 == "6" || sp4 == "6" || sp5 == "6" || sp6 == "6")
                        {
                            imgbtn_magazine.Visible = true;
                            lbl_magazine.Visible = true;
                            txt_magaz.Visible = true;
                            lbl_magaz.Visible = true;
                        }
                        else
                        {
                            imgbtn_magazine.Visible = false;
                            lbl_magazine.Visible = false;
                            txt_magaz.Visible = false;
                            lbl_magaz.Visible = false;
                        }
                        if (sp1 == "7" || sp2 == "7" || sp3 == "7" || sp4 == "7" || sp5 == "7" || sp6 == "7")
                        {
                            imgbtn_others.Visible = true;
                            lbl_others.Visible = true;
                            txt_othr.Visible = true;
                            lbl_othr.Visible = true;
                        }
                        else
                        {
                            imgbtn_others.Visible = false;
                            lbl_others.Visible = false;
                            txt_othr.Visible = false;
                            lbl_othr.Visible = false;
                        }
                    }
                    else if (len == "7")
                    {
                        string sp1 = (split[0]);
                        string sp2 = (split[1]);
                        string sp3 = (split[2]);
                        string sp4 = (split[3]);
                        string sp5 = (split[4]);
                        string sp6 = (split[5]);
                        string sp7 = (split[6]);
                        if (val == "0")
                        {
                            imgbtn_all.Visible = true;
                            Label2.Visible = true;
                            imgbtn_stud.Visible = true;
                            lbl_student.Visible = true;
                            txt_stud.Visible = true;
                            lbl_stud.Visible = true;
                            imgbtn_staff.Visible = true;
                            lbl_staff.Visible = true;
                            txt_stf.Visible = true;
                            lbl_stf.Visible = true;
                            imgbtn_company.Visible = true;
                            lbl_company.Visible = true;
                            txt_comp.Visible = true;
                            lbl_comp.Visible = true;
                            imgbtn_individual.Visible = true;
                            lbl_individual.Visible = true;
                            txt_indiv.Visible = true;
                            lbl_indiv.Visible = true;
                            imgbtn_magazine.Visible = true;
                            lbl_magazine.Visible = true;
                            txt_magaz.Visible = true;
                            lbl_magaz.Visible = true;
                            imgbtn_others.Visible = true;
                            lbl_others.Visible = true;
                            txt_othr.Visible = true;
                            lbl_othr.Visible = true;
                        }
                        else
                        {
                            imgbtn_all.Visible = false;
                            Label2.Visible = false;
                            imgbtn_stud.Visible = false;
                            lbl_student.Visible = false;
                            txt_stud.Visible = false;
                            lbl_stud.Visible = false;
                            imgbtn_staff.Visible = false;
                            lbl_staff.Visible = false;
                            txt_stf.Visible = false;
                            lbl_stf.Visible = false;
                            imgbtn_company.Visible = false;
                            lbl_company.Visible = false;
                            txt_comp.Visible = false;
                            lbl_comp.Visible = false;
                            imgbtn_individual.Visible = false;
                            lbl_individual.Visible = false;
                            txt_indiv.Visible = false;
                            lbl_indiv.Visible = false;
                            imgbtn_magazine.Visible = false;
                            lbl_magazine.Visible = false;
                            txt_magaz.Visible = false;
                            lbl_magaz.Visible = false;
                            imgbtn_others.Visible = false;
                            lbl_others.Visible = false;
                            txt_othr.Visible = false;
                            lbl_othr.Visible = false;
                        }
                        if (sp1 == "0" || sp2 == "0" || sp3 == "0" || sp4 == "0" || sp5 == "0" || sp6 == "0" || sp7 == "0")
                        {
                            imgbtn_all.Visible = true;
                            Label2.Visible = true;
                        }
                        else
                        {
                            imgbtn_all.Visible = false;
                            Label2.Visible = false;
                        }
                        if (sp1 == "1" || sp2 == "1" || sp3 == "1" || sp4 == "1" || sp5 == "1" || sp6 == "1" || sp7 == "1")
                        {
                            imgbtn_stud.Visible = true;
                            lbl_student.Visible = true;
                            txt_stud.Visible = true;
                            lbl_stud.Visible = true;
                        }
                        else
                        {
                            imgbtn_stud.Visible = false;
                            lbl_student.Visible = false;
                            txt_stud.Visible = false;
                            lbl_stud.Visible = true;
                        }
                        if (sp1 == "2" || sp2 == "2" || sp3 == "2" || sp4 == "2" || sp5 == "2" || sp6 == "2" || sp7 == "2")
                        {
                            imgbtn_staff.Visible = true;
                            lbl_staff.Visible = true;
                            txt_stf.Visible = true;
                            lbl_stf.Visible = true;
                        }
                        else
                        {
                            imgbtn_staff.Visible = false;
                            lbl_staff.Visible = false;
                            txt_stf.Visible = false;
                            lbl_stf.Visible = false;
                        }
                        if (sp1 == "3" || sp2 == "3" || sp3 == "3" || sp4 == "3" || sp5 == "3" || sp6 == "3" || sp7 == "3")
                        {
                            imgbtn_parents.Visible = true;
                            lbl_parents.Visible = true;
                            txt_parnt.Visible = true;
                            lbl_parnt.Visible = true;
                        }
                        else
                        {
                            imgbtn_parents.Visible = false;
                            lbl_parents.Visible = false;
                            txt_parnt.Visible = false;
                            lbl_parnt.Visible = false;
                        }
                        if (sp1 == "4" || sp2 == "4" || sp3 == "4" || sp4 == "4" || sp5 == "4" || sp6 == "4" || sp7 == "4")
                        {
                            imgbtn_company.Visible = true;
                            lbl_company.Visible = true;
                            txt_comp.Visible = true;
                            lbl_comp.Visible = true;
                        }
                        else
                        {
                            imgbtn_company.Visible = false;
                            lbl_company.Visible = false;
                            txt_comp.Visible = false;
                            lbl_comp.Visible = false;
                        }
                        if (sp1 == "5" || sp2 == "5" || sp3 == "5" || sp4 == "5" || sp5 == "5" || sp6 == "5" || sp7 == "5")
                        {
                            imgbtn_individual.Visible = true;
                            lbl_individual.Visible = true;
                            txt_indiv.Visible = true;
                            lbl_indiv.Visible = true;
                        }
                        else
                        {
                            imgbtn_individual.Visible = false;
                            lbl_individual.Visible = false;
                            txt_indiv.Visible = false;
                            lbl_indiv.Visible = false;
                        }
                        if (sp1 == "6" || sp2 == "6" || sp3 == "6" || sp4 == "6" || sp5 == "6" || sp6 == "6" || sp7 == "6")
                        {
                            imgbtn_magazine.Visible = true;
                            lbl_magazine.Visible = true;
                            txt_magaz.Visible = true;
                            lbl_magaz.Visible = true;
                        }
                        else
                        {
                            imgbtn_magazine.Visible = false;
                            lbl_magazine.Visible = false;
                            txt_magaz.Visible = false;
                            lbl_magaz.Visible = false;
                        }
                        if (sp1 == "7" || sp2 == "7" || sp3 == "7" || sp4 == "7" || sp5 == "7" || sp6 == "7" || sp7 == "7")
                        {
                            imgbtn_others.Visible = true;
                            lbl_others.Visible = true;
                            txt_othr.Visible = true;
                            lbl_othr.Visible = true;
                        }
                        else
                        {
                            imgbtn_others.Visible = false;
                            lbl_others.Visible = false;
                            txt_othr.Visible = false;
                            lbl_othr.Visible = false;
                        }
                    }
                    else if (len == "8")
                    {
                        string sp1 = (split[0]);
                        string sp2 = (split[1]);
                        string sp3 = (split[2]);
                        string sp4 = (split[3]);
                        string sp5 = (split[4]);
                        string sp6 = (split[5]);
                        string sp7 = (split[6]);
                        string sp8 = (split[7]);
                        if (val == "0")
                        {
                            imgbtn_all.Visible = true;
                            Label2.Visible = true;
                            imgbtn_stud.Visible = true;
                            lbl_student.Visible = true;
                            txt_stud.Visible = true;
                            lbl_stud.Visible = true;
                            imgbtn_staff.Visible = true;
                            lbl_staff.Visible = true;
                            txt_stf.Visible = true;
                            lbl_stf.Visible = true;
                            imgbtn_company.Visible = true;
                            lbl_company.Visible = true;
                            txt_comp.Visible = true;
                            lbl_comp.Visible = true;
                            imgbtn_individual.Visible = true;
                            lbl_individual.Visible = true;
                            txt_indiv.Visible = true;
                            lbl_indiv.Visible = true;
                            imgbtn_magazine.Visible = true;
                            lbl_magazine.Visible = true;
                            txt_magaz.Visible = true;
                            lbl_magaz.Visible = true;
                            imgbtn_others.Visible = true;
                            lbl_others.Visible = true;
                            txt_othr.Visible = true;
                            lbl_othr.Visible = true;
                        }
                        else
                        {
                            imgbtn_all.Visible = false;
                            Label2.Visible = false;
                            imgbtn_stud.Visible = false;
                            lbl_student.Visible = false;
                            txt_stud.Visible = false;
                            lbl_stud.Visible = false;
                            imgbtn_staff.Visible = false;
                            lbl_staff.Visible = false;
                            txt_stf.Visible = false;
                            lbl_stf.Visible = false;
                            imgbtn_company.Visible = false;
                            lbl_company.Visible = false;
                            txt_comp.Visible = false;
                            lbl_comp.Visible = false;
                            imgbtn_individual.Visible = false;
                            lbl_individual.Visible = false;
                            txt_indiv.Visible = false;
                            lbl_indiv.Visible = false;
                            imgbtn_magazine.Visible = false;
                            lbl_magazine.Visible = false;
                            txt_magaz.Visible = false;
                            lbl_magaz.Visible = false;
                            imgbtn_others.Visible = false;
                            lbl_others.Visible = false;
                            txt_othr.Visible = false;
                            lbl_othr.Visible = false;
                        }
                        if (sp1 == "0" || sp2 == "0" || sp3 == "0" || sp4 == "0" || sp5 == "0" || sp6 == "0" || sp7 == "0" || sp8 == "0")
                        {
                            imgbtn_all.Visible = true;
                            Label2.Visible = true;
                        }
                        else
                        {
                            imgbtn_all.Visible = false;
                            Label2.Visible = false;
                        }
                        if (sp1 == "1" || sp2 == "1" || sp3 == "1" || sp4 == "1" || sp5 == "1" || sp6 == "1" || sp7 == "1" || sp8 == "1")
                        {
                            imgbtn_stud.Visible = true;
                            lbl_student.Visible = true;
                            txt_stud.Visible = true;
                            lbl_stud.Visible = true;
                        }
                        else
                        {
                            imgbtn_stud.Visible = false;
                            lbl_student.Visible = false;
                            txt_stud.Visible = false;
                            lbl_stud.Visible = true;
                        }
                        if (sp1 == "2" || sp2 == "2" || sp3 == "2" || sp4 == "2" || sp5 == "2" || sp6 == "2" || sp7 == "2" || sp8 == "2")
                        {
                            imgbtn_staff.Visible = true;
                            lbl_staff.Visible = true;
                            txt_stf.Visible = true;
                            lbl_stf.Visible = true;
                        }
                        else
                        {
                            imgbtn_staff.Visible = false;
                            lbl_staff.Visible = false;
                            txt_stf.Visible = false;
                            lbl_stf.Visible = false;
                        }
                        if (sp1 == "3" || sp2 == "3" || sp3 == "3" || sp4 == "3" || sp5 == "3" || sp6 == "3" || sp7 == "3" || sp8 == "3")
                        {
                            imgbtn_parents.Visible = true;
                            lbl_parents.Visible = true;
                            txt_parnt.Visible = true;
                            lbl_parnt.Visible = true;
                        }
                        else
                        {
                            imgbtn_parents.Visible = false;
                            lbl_parents.Visible = false;
                            txt_parnt.Visible = false;
                            lbl_parnt.Visible = false;
                        }
                        if (sp1 == "4" || sp2 == "4" || sp3 == "4" || sp4 == "4" || sp5 == "4" || sp6 == "4" || sp7 == "4" || sp8 == "4")
                        {
                            imgbtn_company.Visible = true;
                            lbl_company.Visible = true;
                            txt_comp.Visible = true;
                            lbl_comp.Visible = true;
                        }
                        else
                        {
                            imgbtn_company.Visible = false;
                            lbl_company.Visible = false;
                            txt_comp.Visible = false;
                            lbl_comp.Visible = false;
                        }
                        if (sp1 == "5" || sp2 == "5" || sp3 == "5" || sp4 == "5" || sp5 == "5" || sp6 == "5" || sp7 == "5" || sp8 == "5")
                        {
                            imgbtn_individual.Visible = true;
                            lbl_individual.Visible = true;
                            txt_indiv.Visible = true;
                            lbl_indiv.Visible = true;
                        }
                        else
                        {
                            imgbtn_individual.Visible = false;
                            lbl_individual.Visible = false;
                            txt_indiv.Visible = false;
                            lbl_indiv.Visible = false;
                        }
                        if (sp1 == "6" || sp2 == "6" || sp3 == "6" || sp4 == "6" || sp5 == "6" || sp6 == "6" || sp7 == "6" || sp8 == "6")
                        {
                            imgbtn_magazine.Visible = true;
                            lbl_magazine.Visible = true;
                            txt_magaz.Visible = true;
                            lbl_magaz.Visible = true;
                        }
                        else
                        {
                            imgbtn_magazine.Visible = false;
                            lbl_magazine.Visible = false;
                            txt_magaz.Visible = false;
                            lbl_magaz.Visible = false;
                        }
                        if (sp1 == "7" || sp2 == "7" || sp3 == "7" || sp4 == "7" || sp5 == "7" || sp6 == "7" || sp7 == "7" || sp8 == "7")
                        {
                            imgbtn_others.Visible = true;
                            lbl_others.Visible = true;
                            txt_othr.Visible = true;
                            lbl_othr.Visible = true;
                        }
                        else
                        {
                            imgbtn_others.Visible = false;
                            lbl_others.Visible = false;
                            txt_othr.Visible = false;
                            lbl_othr.Visible = false;
                        }
                    }
                }
            }
        }
        catch
        {
        }
    }

    public void btn_cls_cnmf_Click(object sender, EventArgs e)
    {
        Div7.Visible = false;
        di7cnfm.Visible = false;
        imgdiv2.Visible = true;
        Label1.Text = "Deleted Successfully";
    }

    public void btn_popexit_Click(object sender, EventArgs e)
    {
        popview.Visible = false;
        loaddesc();
        loaddesc1();
        txt_viewdetails4.Text = "";
        txt_receiveperson.Text = "";
        txt_popviewdate.Text = DateTime.Now.ToString("dd/MM/yyyy");
    }

    protected void btnQ_Click(object sender, EventArgs e)
    {
        ViewState["Forward"] = "1";
        popAddStaff.Visible = true;
        btnflag = 1;
        Fpstaff.Visible = false;
        btn_save2.Visible = false;
        //btn_save2_received.Visible = false;
        btn_exit2.Visible = false;
        lbl_search3.Visible = false;
        txt_viewdetails4.Text = "";
        txt_receiveperson.Text = "";
    }

    protected void btnQ_Received_Click(object sender, EventArgs e)
    {
        ViewState["CC"] = "1"; ViewState["Forward"] = null;
        popAddStaff.Visible = true;
        btnflag = 1;
        Fpstaff.Visible = false;
        btn_save2.Visible = false;
        // btn_save2_received.Visible = false;
        btn_exit2.Visible = false;
        lbl_search3.Visible = false;
        txt_receiveperson.Text = "";
    }

    protected void imagebtnpopclose1_Click(object sender, EventArgs e)
    {
        popAddStaff.Visible = false;
    }

    //protected void ddl_deptname2_SelectedIndexChanged(object sender, EventArgs e)
    //{
    //    txt_searchbyname.Text = "";
    //    txt_searchbycode.Text = "";
    //    Fpspread2.Visible = false;
    //    Fpstaff.Visible = false;
    //    lbl_search3.Visible = false;
    //    btn_save2.Visible = false;
    //    btn_exit2.Visible = false;
    //}

    protected void butnsearchbygo_Click(object sender, EventArgs e)//delsis
    {
        try
        {
            int rolcount = 0;
            int sno = 0;
            string sql = "";
            int rowcount;
            Fpstaff.Visible = true;
            string deptid = string.Empty;

            for (int i = 0; i < cbl_dept.Items.Count; i++)
            {
                if (cbl_dept.Items[i].Selected == true)
                {
                    if (deptid == "")
                    {
                        deptid = "" + cbl_dept.Items[i].Value.ToString() + "";
                    }
                    else
                    {
                        deptid = deptid + "," + "" + cbl_dept.Items[i].Value.ToString() + "";
                    }
                }
            }

            FarPoint.Web.Spread.CheckBoxCellType cball = new FarPoint.Web.Spread.CheckBoxCellType();
            if (txt_searchbyname.Text != "")
            {
                if (ddl_search2.SelectedIndex == 0)
                {
                    sql = "select s.staff_code,s.staff_name ,h.dept_code,h.dept_name,d.desig_code,desig_name  from staffmaster s,stafftrans st,hrdept_master h ,desig_master d where s.staff_code =st.staff_code and st.dept_code =h.dept_code and st.desig_code =d.desig_code and latestrec =1 and resign =0 and settled =0 and s.college_code =h.college_code and s.Staff_name ='" + Convert.ToString(txt_searchbyname.Text) + "'";
                }
            }
            else if (txt_searchbycode.Text.Trim() != "")
            {
                if (ddl_search2.SelectedIndex == 1)
                {
                    sql = "select s.staff_code,s.staff_name ,h.dept_code,h.dept_name,d.desig_code,desig_name  from staffmaster s,stafftrans st,hrdept_master h ,desig_master d where s.staff_code =st.staff_code and st.dept_code =h.dept_code and st.desig_code =d.desig_code and latestrec =1 and resign =0 and settled =0 and s.college_code =h.college_code and s.staff_code ='" + Convert.ToString(txt_searchbycode.Text) + "'";
                }
            }
            else
            {
                sql = "select s.staff_code,s.staff_name ,h.dept_code,h.dept_name,d.desig_code,desig_name  from staffmaster s,stafftrans st,hrdept_master h ,desig_master d where s.staff_code =st.staff_code and st.dept_code =h.dept_code and st.desig_code =d.desig_code and latestrec =1 and resign =0 and settled =0 and s.college_code =h.college_code and h.dept_code in (" + deptid + ")";
            }
            Fpstaff.Sheets[0].RowCount = 0;
            Fpstaff.SaveChanges();
            Fpstaff.SheetCorner.ColumnCount = 0;
            Fpstaff.CommandBar.Visible = false;
            FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
            darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
            darkstyle.ForeColor = Color.White;
            Fpstaff.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
            Fpstaff.ActiveSheetView.SelectionBackColor = Color.Coral;
            FarPoint.Web.Spread.CheckBoxCellType chkcell1 = new FarPoint.Web.Spread.CheckBoxCellType();
            FarPoint.Web.Spread.CheckBoxCellType chkcell = new FarPoint.Web.Spread.CheckBoxCellType();
            Fpstaff.Sheets[0].RowCount = Fpstaff.Sheets[0].RowCount + 1;
            Fpstaff.Sheets[0].SpanModel.Add(Fpstaff.Sheets[0].RowCount - 1, 0, 1, 3);
            Fpstaff.Sheets[0].AutoPostBack = false;
            ds = d2.select_method_wo_parameter(sql, "Text");
            Fpstaff.Sheets[0].RowCount = 0;
            Fpstaff.Sheets[0].ColumnCount = 6;
            if (ds.Tables[0].Rows.Count > 0)
            {
                Fpstaff.Visible = true;
                btn_save2.Visible = true;
                //btn_save2_received.Visible = true;
                btn_exit2.Visible = true;
                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                Fpstaff.Sheets[0].Columns[0].Locked = true;
                Fpstaff.Columns[0].Width = 80;


                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                Fpstaff.Sheets[0].Columns[1].Locked = false;
                Fpstaff.Columns[1].Width = 50;

                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Staff Code";
                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                Fpstaff.Sheets[0].Columns[2].Locked = true;
                Fpstaff.Columns[2].Width = 80;
                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Staff Name";
                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                Fpstaff.Sheets[0].Columns[3].Locked = true;
                Fpstaff.Columns[3].Width = 200;
                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Department";
                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
                Fpstaff.Sheets[0].Columns[4].Locked = true;
                Fpstaff.Columns[4].Width = 100;
                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Designation";
                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 5].Font.Bold = true;
                Fpstaff.Columns[5].Width = 250;
                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 5].Font.Name = "Book Antiqua";
                Fpstaff.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;
                Fpstaff.Sheets[0].Columns[5].Locked = true;
                Fpstaff.Width = 700;
                for (rolcount = 0; rolcount < ds.Tables[0].Rows.Count; rolcount++)
                {
                    sno++;
                    //Fpstaff.Sheets[0].RowCount++;
                    //name = ds.Tables[0].Rows[rolcount]["staff_name"].ToString();
                    //code = ds.Tables[0].Rows[rolcount]["staff_code"].ToString();
                    Fpstaff.Sheets[0].RowCount = Fpstaff.Sheets[0].RowCount + 1;
                    //Fpstaff.Sheets[0].Rows[Fpstaff.Sheets[0].RowCount - 1].Font.Bold = false;
                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 0].Text = sno.ToString();
                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";

                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 1].CellType = cball;
                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;

                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(ds.Tables[0].Rows[rolcount]["staff_code"]);
                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Left;
                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 3].Text = Convert.ToString(ds.Tables[0].Rows[rolcount]["staff_name"]);
                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Left;
                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 4].Text = Convert.ToString(ds.Tables[0].Rows[rolcount]["dept_name"]);
                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 4].Tag = Convert.ToString(ds.Tables[0].Rows[rolcount]["dept_code"]);
                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Left;
                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 5].Text = Convert.ToString(ds.Tables[0].Rows[rolcount]["desig_name"]);
                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 5].Tag = Convert.ToString(ds.Tables[0].Rows[rolcount]["desig_code"]);
                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 5].HorizontalAlign = HorizontalAlign.Left;
                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 5].Font.Size = FontUnit.Medium;
                    Fpstaff.Sheets[0].Cells[Fpstaff.Sheets[0].RowCount - 1, 5].Font.Name = "Book Antiqua";
                }
                lbl_search3.Visible = true;
                lbl_search3.Text = "No Records Found";
                lbl_search3.Text = "No of Staff :" + sno.ToString();
                rowcount = Fpstaff.Sheets[0].RowCount;
                Fpstaff.Height = 370;
                Fpstaff.Sheets[0].PageSize = 25 + (rowcount * 20);
                Fpstaff.SaveChanges();
            }
            else
            {
                Fpstaff.Visible = false;
                //err.Visible = true;
                //err.Text = "No Records Found";
            }
        }
        catch (Exception ex)
        {
        }
    }

    protected void btnsav_Click(object sender, EventArgs e)
    {
        try
        {

            if (txt_searchbycode.Text != "" || txt_searchbyname.Text != "" || cbl_dept.SelectedItem.Value != "")//|| ddl_deptname2.SelectedIndex != -1
            {
                if (Fpstaff.Visible == true)
                {
                    //if (btnflag == 1)
                    //{

                    Fpstaff.SaveChanges();
                    string viewstate_count = string.Empty;


                    //maincontent.Visible = true;
                    //popAddNew.Visible = false;
                    string value = string.Empty;
                    string Receiver = string.Empty;
                    string staff_codeView = string.Empty;
                    popAddStaff.Visible = false;
                    //string activerow = "";
                    //string activecol = "";
                    //activerow = Fpstaff.ActiveSheetView.ActiveRow.ToString();
                    //activecol = Fpstaff.ActiveSheetView.ActiveColumn.ToString();
                    if (Convert.ToString(ViewState["Forward"]) == "1")
                    {
                        for (int i = 0; i < Fpstaff.Sheets[0].RowCount; i++)
                        {
                            value = Convert.ToString(Fpstaff.Sheets[0].Cells[i, 1].Value);
                            if (value == "1")
                            {

                                string StaffCode = Convert.ToString(Fpstaff.Sheets[0].Cells[i, 2].Text);
                                string StaffName = Convert.ToString(Fpstaff.Sheets[0].Cells[i, 3].Text);
                                //string query = "select staff_name  from staffmaster where resign =0 and settled =0 and staff_code like  '" + StaffCode + "%' ";
                                // Receiver= d2.GetFunction(query);
                                staff_codeView = StaffCode;
                                if (txt_viewdetails4.Text == "")
                                {
                                    txt_viewdetails4.Text = StaffName;
                                    ViewState["forwardcode"] = staff_codeView;


                                }
                                else
                                {
                                    txt_viewdetails4.Text = txt_viewdetails4.Text + "," + StaffName;
                                    ViewState["forwardcode"] = ViewState["forwardcode"] + "," + staff_codeView;

                                }

                            }
                            viewstate_count = Convert.ToString(ViewState["forwardcode"]);

                        }
                    }
                    else if (Convert.ToString(ViewState["CC"]) == "1")
                    {
                        for (int i = 0; i < Fpstaff.Sheets[0].RowCount; i++)
                        {
                            value = Convert.ToString(Fpstaff.Sheets[0].Cells[i, 1].Value);
                            if (value == "1")
                            {

                                string StaffCode = Convert.ToString(Fpstaff.Sheets[0].Cells[i, 2].Text);
                                string StaffName = Convert.ToString(Fpstaff.Sheets[0].Cells[i, 3].Text);
                                //string query = "select staff_name  from staffmaster where resign =0 and settled =0 and staff_code like  '" + StaffCode + "%' ";
                                // Receiver= d2.GetFunction(query);
                                staff_codeView = StaffCode;
                                if (txt_receiveperson.Text == "")
                                {
                                    txt_receiveperson.Text = StaffName;
                                    ViewState["Receivedcode"] = staff_codeView;


                                }
                                else
                                {
                                    txt_receiveperson.Text = txt_receiveperson.Text + "," + StaffName;
                                    ViewState["Receivedcode"] = ViewState["Receivedcode"] + "," + staff_codeView;

                                }

                            }
                            viewstate_count = Convert.ToString(ViewState["Receivedcode"]);

                        }
                    }



                    txt_searchbycode.Text = "";
                    txt_searchbyname.Text = "";
                    //}
                }
                else
                {
                    imgdiv2.Visible = true;
                    lbl_erroralert.Text = "No records found";
                }
            }
            else
            {
                imgdiv2.Visible = true;
                lbl_erroralert.Text = "Please Select Any Staff code or name";
            }
        }
        catch (Exception ex)
        {
        }
    }

    //protected void btnsav_Received_Click(object sender, EventArgs e)
    //{
    //    try
    //    {

    //        if (txt_searchbycode.Text != "" || txt_searchbyname.Text != "" || cbl_dept.SelectedItem.Value != "")// || ddl_deptname2.SelectedIndex != -1
    //        {
    //            if (Fpstaff.Visible == true)
    //            {
    //                if (btnflag == 1)
    //                {
    //                    //maincontent.Visible = true;
    //                    //popAddNew.Visible = false;
    //                    popAddStaff.Visible = false;
    //                    string activerow = "";
    //                    string activecol = "";
    //                    activerow = Fpstaff.ActiveSheetView.ActiveRow.ToString();
    //                    activecol = Fpstaff.ActiveSheetView.ActiveColumn.ToString();
    //                    if (activerow.Trim() != "")
    //                    {
    //                        string StaffCode = Convert.ToString(Fpstaff.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Text);
    //                        string query = "select staff_name  from staffmaster where resign =0 and settled =0 and staff_code like  '" + StaffCode + "%' ";
    //                        txt_receiveperson.Text = d2.GetFunction(query);
    //                    }
    //                    txt_searchbycode.Text = "";
    //                    txt_searchbyname.Text = "";
    //                }
    //            }
    //            else
    //            {
    //                imgdiv2.Visible = true;
    //                lbl_erroralert.Text = "No records found";
    //            }
    //        }
    //        else
    //        {
    //            imgdiv2.Visible = true;
    //            lbl_erroralert.Text = "Please Select Any Staff code or name";
    //        }
    //    }
    //    catch (Exception ex)
    //    {
    //    }
    //}

    protected void btnex_Click(object sender, EventArgs e)
    {
        popAddStaff.Visible = false;
    }

    protected void Cell_Click(object sender, EventArgs e)
    {
        try
        {
            check = true;
        }
        catch
        {
        }
    }

    protected void bindcollege()
    {
        try
        {
            ds.Clear();
            ds = d2.BindCollege();
            if (ds.Tables[0].Rows.Count > 0)
            {
                ddl_collegename2.DataSource = ds;
                ddl_collegename2.DataTextField = "collname";
                ddl_collegename2.DataValueField = "college_code";
                ddl_collegename2.DataBind();
            }
            binddept(ddl_collegename2.SelectedItem.Value.ToString());
        }
        catch
        {
        }
    }

    public void binddept(string college)
    {
        //try
        //{
        //    ddl_deptname2.Items.Clear();
        //    ds = d2.loaddepartment(college);
        //    if (ds.Tables[0].Rows.Count > 0)
        //    {
        //        ddl_deptname2.DataSource = ds;
        //        ddl_deptname2.DataTextField = "dept_name";
        //        ddl_deptname2.DataValueField = "dept_code";
        //        ddl_deptname2.DataBind();
        //    }
        //}
        //catch (Exception ex)
        //{
        //}
    }

    [System.Web.Services.WebMethod]
    [System.Web.Script.Services.ScriptMethod()]
    public static List<string> GetStaffCode(string prefixText)
    {
        WebService ws = new WebService();
        List<string> name = new List<string>();
        string query = "select staff_code from staffmaster where resign =0 and settled =0 and staff_code like  '" + prefixText + "%' ";
        name = ws.Getname(query);
        return name;
    }

    protected void ddl_search2_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (ddl_search2.SelectedItem.Text == "Staff Name")
        {
            txt_searchbyname.Visible = true;
            txt_searchbycode.Visible = false;
            txt_searchbycode.Text = "";
        }
        else if (ddl_search2.SelectedItem.Text == "Staff Code")
        {
            txt_searchbycode.Visible = true;
            txt_searchbyname.Visible = false;
            txt_searchbyname.Text = "";
        }
    }

    public void timevalue()
    {
        string time = DateTime.Now.ToString("HH:mm:ss");
        string hrr = "";
        string[] ay = time.Split(':');
        string val_hr = ay[0].ToString();
        int hr = Convert.ToInt16(val_hr);
        if (val_hr == "01")
        {
            hrr = "1";
        }
        else if (val_hr == "02")
        {
            hrr = "2";
        }
        else if (val_hr == "03")
        {
            hrr = "3";
        }
        else if (val_hr == "04")
        {
            hrr = "4";
        }
        else if (val_hr == "05")
        {
            hrr = "5";
        }
        else if (val_hr == "06")
        {
            hrr = "6";
        }
        else if (val_hr == "07")
        {
            hrr = "7";
        }
        else if (val_hr == "08")
        {
            hrr = "8";
        }
        else if (val_hr == "09")
        {
            hrr = "9";
        }
        else if (val_hr == "13")
        {
            hrr = "1";
        }
        else if (val_hr == "14")
        {
            hrr = "2";
        }
        else if (val_hr == "15")
        {
            hrr = "3";
        }
        else if (val_hr == "16")
        {
            hrr = "4";
        }
        else if (val_hr == "17")
        {
            hrr = "5";
        }
        else if (val_hr == "18")
        {
            hrr = "6";
        }
        else if (val_hr == "19")
        {
            hrr = "7";
        }
        else if (val_hr == "20")
        {
            hrr = "8";
        }
        else if (val_hr == "21")
        {
            hrr = "9";
        }
        else if (val_hr == "22")
        {
            hrr = "10";
        }
        else if (val_hr == "23")
        {
            hrr = "11";
        }
        else if (val_hr == "24")
        {
            hrr = "12";
        }
        if (val_hr == "10" || val_hr == "11" || val_hr == "12")
        {
            ddl_hour.Text = val_hr;
            ddl_endhour.Text = val_hr;
        }
        else
        {
            ddl_hour.Text = hrr;
            ddl_endhour.Text = hrr;
        }
        ddl_minits.Text = ay[1].ToString();
        ddl_endminit.Text = ay[1].ToString();
        if (val_hr == "13" || val_hr == "14" || val_hr == "15" || val_hr == "16" || val_hr == "17" || val_hr == "18" || val_hr == "19" || val_hr == "20" || val_hr == "21" || val_hr == "22" || val_hr == "23" || val_hr == "24")
        {
            ddl_timeformate.Text = "PM";
            ddl_endformate.Text = "PM";
        }
        else
        {
            ddl_timeformate.Text = "AM";
            ddl_endformate.Text = "AM";
        }
    }

    public void btn_errorclose_cnfm_Click(object sender, EventArgs e)
    {
        imgdivcnfm.Visible = false;
        string sql = "delete from CO_MasterValues where MasterCode='" + ddl_viewdetails1.SelectedItem.Value.ToString() + "' and MasterCriteria='TAcst' and CollegeCode='" + collegecode1 + "' ";
        int delete = d2.update_method_wo_parameter(sql, "TEXT");
        if (delete != 0)
        {
            imgdiv4.Visible = true;
            lbl_erroralert1.Text = "Deleted Sucessfully";
        }
        else
        {
            imgdiv4.Visible = true;
            lbl_erroralert1.Text = "No records found";
        }
        loaddesc();
    }

    public void btn_errorclose_cncl_Click(object sender, EventArgs e)
    {
        imgdivcnfm.Visible = false;
    }

    public void btn_errorclose_cnfm2_Click(object sender, EventArgs e)
    {
        imgdivcnfm2.Visible = false;
        string sql = "delete from CO_MasterValues where MasterCode='" + ddl_viewdetails2.SelectedItem.Value.ToString() + "' and MasterCriteria='TDSta' and CollegeCode='" + collegecode1 + "' ";
        int delete = d2.update_method_wo_parameter(sql, "TEXT");
        if (delete != 0)
        {
            imgdiv6.Visible = true;
            lbl_erroralert2.Text = "Deleted Sucessfully";
        }
        else
        {
            imgdiv6.Visible = true;
            lbl_erroralert2.Text = "No records found";
        }
        loaddesc1();
    }

    public void btn_errorclose_cncl2_Click(object sender, EventArgs e)
    {
        imgdivcnfm2.Visible = false;
    }

    public string subjectcodenew(string textcri, string subjename)
    {
        string subjec_no = "";
        try
        {
            string select_subno = "select MasterCode from CO_MasterValues where MasterCriteria='" + textcri + "' and CollegeCode =" + collegecode1 + " and MasterValue='" + subjename + "'";
            ds.Clear();
            ds = d2.select_method_wo_parameter(select_subno, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                subjec_no = Convert.ToString(ds.Tables[0].Rows[0]["MasterCode"]);
            }
            else
            {
                string insertquery = "insert into CO_MasterValues(MasterCriteria,MasterValue,CollegeCode) values('" + textcri + "','" + subjename + "','" + collegecode1 + "')";
                int result = d2.update_method_wo_parameter(insertquery, "Text");
                if (result != 0)
                {
                    string select_subno1 = "select MasterCode from CO_MasterValues where MasterCriteria='" + textcri + "' and CollegeCode =" + collegecode1 + " and MasterValue='" + subjename + "'";
                    ds.Clear();
                    ds = d2.select_method_wo_parameter(select_subno1, "Text");
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        subjec_no = Convert.ToString(ds.Tables[0].Rows[0]["MasterCode"]);
                    }
                }
            }
        }
        catch
        {
        }
        return subjec_no;
    }

    protected void cb_status_CheckedChanged(object sender, EventArgs e)//delsi
    {
        CallCheckboxChange(cb_status, cbl_status, txt_status, "Action", "--Select--");
    }

    protected void cbl_status_SelectedIndexChanged(object sender, EventArgs e)
    {
        CallCheckboxListChange(cb_status, cbl_status, txt_status, "Action", "--Select--");
    }

    private void CallCheckboxChange(CheckBox cb, CheckBoxList cbl, TextBox txt, string dispst, string deft)
    {
        try
        {
            int sel = 0;
            string name = "";
            txt.Text = deft;
            if (cb.Checked == true)
            {
                for (sel = 0; sel < cbl.Items.Count; sel++)
                {
                    cbl.Items[sel].Selected = true;
                    name = Convert.ToString(cbl.Items[sel].Text);
                }
                if (cbl.Items.Count == 1)
                {
                    txt.Text = "" + name + "";
                }
                else
                {
                    txt.Text = dispst + "(" + cbl.Items.Count + ")";
                }
            }
            else
            {
                for (sel = 0; sel < cbl.Items.Count; sel++)
                {
                    cbl.Items[sel].Selected = false;
                }
                txt.Text = deft;
            }
        }
        catch { }
    }

    private void CallCheckboxListChange(CheckBox cb, CheckBoxList cbl, TextBox txt, string dipst, string deft)
    {
        try
        {
            int sel = 0;
            int count = 0;
            string name = "";
            cb.Checked = false;
            for (sel = 0; sel < cbl.Items.Count; sel++)
            {
                if (cbl.Items[sel].Selected == true)
                {
                    count++;
                    name = Convert.ToString(cbl.Items[sel].Text);
                }
            }
            if (count > 0)
            {
                if (count == 1)
                {
                    txt.Text = "" + name + "";
                }
                else
                {
                    txt.Text = dipst + "(" + count + ")";
                }
                if (cbl.Items.Count == count)
                {
                    cb.Checked = true;
                }
            }
        }
        catch { }
    }

    public void loadstatus()
    {
        //try
        //{
        //    cbl_status.Items.Clear();
        //    cbl_status.Items.Add(new ListItem("Approved", "1"));
        //    cbl_status.Items.Add(new ListItem("Un Approved", "0"));
        //    //for (int i = 0; i < cbl_status.Items.Count; i++)
        //    //{
        //    cbl_status.Items[1].Selected = true;
        //    //}
        //    txt_status.Text = "Status(1)";
        //    cb_status.Checked = true;
        //}
        //catch { }
        try
        {
            cbl_status.Items.Clear();
            ddl_viewdetails1.Items.Clear();
            ds.Tables.Clear();
            string sql = "select MasterCode,MasterValue from CO_MasterValues where MasterCriteria ='TAcst' and CollegeCode ='" + collegecode1 + "'";
            ds = d2.select_method_wo_parameter(sql, "TEXT");
            if (ds.Tables[0].Rows.Count > 0)
            {
                cbl_status.DataSource = ds;
                cbl_status.DataTextField = "MasterValue";
                cbl_status.DataValueField = "MasterCode";
                cbl_status.DataBind();
                cbl_status.Items.Insert(0, new ListItem("Pending", "0"));
                cbl_status.Items.Insert(1, new ListItem("Completed", "1"));
            }
            else
            {
                cbl_status.Items.Insert(0, new ListItem("Pending", "0"));
                cbl_status.Items.Insert(1, new ListItem("Completed", "1"));

            }
        }
        catch
        {
        }
    }

    private string getCblSelectedValue(CheckBoxList cblSelected)
    {
        System.Text.StringBuilder selectedvalue = new System.Text.StringBuilder();
        try
        {
            for (int sel = 0; sel < cblSelected.Items.Count; sel++)
            {
                if (cblSelected.Items[sel].Selected == true)
                {
                    if (selectedvalue.Length == 0)
                    {
                        selectedvalue.Append(Convert.ToString(cblSelected.Items[sel].Value));
                    }
                    else
                    {
                        selectedvalue.Append("','" + Convert.ToString(cblSelected.Items[sel].Value));
                    }
                }
            }
        }
        catch { cblSelected.Items.Clear(); }
        return selectedvalue.ToString();
    }

    public void loaddoc()
    {

        ds.Tables.Clear();
        string sql = "select MasterCode,MasterValue from CO_MasterValues where MasterCriteria ='TAPri'";
        ds = d2.select_method_wo_parameter(sql, "TEXT");
        if (ds.Tables[0].Rows.Count > 0)
        {

            ddl_stf_docpri.DataSource = ds;
            ddl_stf_docpri.DataTextField = "MasterValue";
            ddl_stf_docpri.DataValueField = "MasterCode";
            ddl_stf_docpri.DataBind();
            ddl_stf_docpri.Items.Insert(0, new ListItem("select", "0"));
        }
        else
        {
            ddl_stf_docpri.Items.Insert(0, new ListItem("Select", "0"));
        }
    }

    protected void cbtimebased_OnCheckedChanged(object sender, EventArgs e)
    {
        if (cbtimebased.Checked == true)
        {
            ddl_hour.Enabled = true;
            ddl_minits.Enabled = true;
            ddl_timeformate.Enabled = true;
            ddl_endhour.Enabled = true;
            ddl_endminit.Enabled = true;
            ddl_endformate.Enabled = true;

        }
        else
        {
            ddl_hour.Enabled = false;
            ddl_minits.Enabled = false;
            ddl_timeformate.Enabled = false;
            ddl_endhour.Enabled = false;
            ddl_endminit.Enabled = false;
            ddl_endformate.Enabled = false;


        }
    }

    protected void cb_dept_CheckedChange(object sender, EventArgs e)
    {
        chkchange(cb_dept, cbl_dept, txt_dept, "Department");
    }

    protected void cbl_dept_SelectedIndexChange(object sender, EventArgs e)
    {
        chklstchange(cb_dept, cbl_dept, txt_dept, "Department");
    }

    protected void chkchange(CheckBox chkchange, CheckBoxList chklstchange, TextBox txtchange, string label)
    {
        try
        {
            if (chkchange.Checked == true)
            {
                for (int i = 0; i < chklstchange.Items.Count; i++)
                {
                    chklstchange.Items[i].Selected = true;
                }
                txtchange.Text = label + "(" + Convert.ToString(chklstchange.Items.Count) + ")";
            }
            else
            {
                for (int i = 0; i < chklstchange.Items.Count; i++)
                {
                    chklstchange.Items[i].Selected = false;
                }
                txtchange.Text = "--Select--";
            }
        }
        catch { }
    }

    protected void chklstchange(CheckBox chkchange, CheckBoxList chklstchange, TextBox txtchange, string label)
    {
        try
        {
            txtchange.Text = "--Select--";
            chkchange.Checked = false;
            int count = 0;
            for (int i = 0; i < chklstchange.Items.Count; i++)
            {
                if (chklstchange.Items[i].Selected == true)
                {
                    count = count + 1;
                }
            }
            if (count > 0)
            {
                txtchange.Text = label + "(" + count + ")";
                if (count == chklstchange.Items.Count)
                {
                    chkchange.Checked = true;
                }
            }
        }
        catch { }
    }

    protected void binddept()
    {
        try
        {
            ds.Clear();
            cbl_dept.Items.Clear();
            string item = "SELECT distinct h.Dept_Code,h.Dept_Name FROM HRDept_Master h,department d,hr_privilege hr WHERE h.dept_code=d.dept_code and d.College_Code=h.College_Code and h.College_Code = '13'  and hr.dept_code=h.dept_code and h.College_Code=hr.college_code order by h.Dept_Name";
            ds = d2.select_method_wo_parameter(item, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                cbl_dept.DataSource = ds;
                cbl_dept.DataTextField = "Dept_Name";
                cbl_dept.DataValueField = "Dept_Code";
                cbl_dept.DataBind();
                if (cbl_dept.Items.Count > 0)
                {
                    for (int i = 0; i < cbl_dept.Items.Count; i++)
                    {
                        cbl_dept.Items[i].Selected = true;
                    }
                    txt_dept.Text = "Department (" + cbl_dept.Items.Count + ")";
                    cb_dept.Checked = true;
                }
            }
            else
            {
                txt_dept.Text = "--Select--";
                cb_dept.Checked = false;
            }
        }
        catch (Exception ex)
        {

        }
    }

    protected void ddl_change(object sender, EventArgs e)
    {
        if (ddl_viewdetails1.SelectedItem.Text == "Completed" || ddl_viewdetails1.SelectedItem.Text == "completed")
        {
            Radio_accept.Visible = true;
            Radio_reject.Visible = true;

        }
        else
        {
            Radio_accept.Visible = false;
            Radio_reject.Visible = false;
        }

    }

    protected void radio_acceptEvent(object sender, EventArgs e)
    {
        if (Radio_accept.Checked == true)
        {
            Radio_reject.Checked = false;

        }
    }

    protected void radio_rejectEvent(object sender, EventArgs e)
    {
        if (Radio_reject.Checked == true)
        {
            Radio_accept.Checked = false;

        }
    }

    //protected void Fpstaff_Command(object sender, FarPoint.Web.Spread.SpreadCommandEventArgs e)
    //{
    //    try
    //    {
    //        string actrow = Fpstaff.Sheets[0].ActiveRow.ToString();
    //        string actcol = Fpstaff.Sheets[0].ActiveColumn.ToString();
    //        if (actrow.Trim() == "0" && actcol.Trim() == "1")
    //        {
    //            if (Fpstaff.Sheets[0].RowCount > 0)
    //            {
    //                int checkval = Convert.ToInt32(Fpstaff.Sheets[0].Cells[0, 1].Value);
    //                if (checkval == 0)
    //                {
    //                    for (int i = 1; i < Fpstaff.Sheets[0].RowCount; i++)
    //                    {
    //                        Fpstaff.Sheets[0].Cells[i, 1].Value = 1;
    //                    }
    //                }
    //                if (checkval == 1)
    //                {
    //                    for (int i = 1; i < Fpstaff.Sheets[0].RowCount; i++)
    //                    {
    //                        Fpstaff.Sheets[0].Cells[i, 1].Value = 0;
    //                    }
    //                }
    //            }
    //        }
    //    }
    //    catch
    //    {
    //    }
    //}

    public void loadcolumns(object sender, EventArgs e)
    {
        try
        {
            string linkname = "Letter Inward";


            string columnvalue = "";
            int clsupdate = 0;
            DataSet dscol = new DataSet();
            lstcolorder.Items.Clear();
            string selcol = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + collegecode1 + "'";
            dscol.Clear();
            dscol = d2.select_method_wo_parameter(selcol, "Text");

            if (columncount() == true)
            {
                if (cblcolumnorder.Items.Count > 0)
                {
                    colord.Clear();
                    for (int i = 0; i < cblcolumnorder.Items.Count; i++)
                    {
                        if (cblcolumnorder.Items[i].Selected == true)
                        {
                            colord.Add(Convert.ToString(cblcolumnorder.Items[i].Value));
                            if (columnvalue == "")
                            {
                                columnvalue = Convert.ToString(cblcolumnorder.Items[i].Value);
                                lstcolorder.Items.Add(new ListItem(cblcolumnorder.Items[i].Text, cblcolumnorder.Items[i].Value));
                            }
                            else
                            {
                                columnvalue = columnvalue + ',' + Convert.ToString(cblcolumnorder.Items[i].Value);
                                lstcolorder.Items.Add(new ListItem(cblcolumnorder.Items[i].Text, cblcolumnorder.Items[i].Value));
                            }
                        }
                    }
                }
            }
            else if (dscol.Tables.Count > 0 && dscol.Tables[0].Rows.Count > 0)
            {
                colord.Clear();
                lstcolorder.Items.Clear();
                for (int col = 0; col < dscol.Tables[0].Rows.Count; col++)
                {
                    string value = Convert.ToString(dscol.Tables[0].Rows[col]["LinkValue"]);
                    string[] valuesplit = value.Split(',');
                    if (valuesplit.Length > 0)
                    {
                        for (int k = 0; k < valuesplit.Length; k++)
                        {
                            colord.Add(Convert.ToString(valuesplit[k]));
                            if (columnvalue == "")
                            {
                                columnvalue = Convert.ToString(valuesplit[k]);
                            }
                            else
                            {
                                columnvalue = columnvalue + ',' + Convert.ToString(valuesplit[k]);
                            }
                            lstcolorder.Items.Add(new ListItem(cblcolumnorder.Items[Convert.ToInt32(valuesplit[k])].Text, cblcolumnorder.Items[Convert.ToInt32(valuesplit[k])].Value));
                        }
                    }
                }
            }
            else
            {
                colord.Clear();
                for (int i = 0; i < cblcolumnorder.Items.Count; i++)
                {
                    cblcolumnorder.Items[i].Selected = true;
                    colord.Add(Convert.ToString(cblcolumnorder.Items[i].Value));
                    if (columnvalue == "")
                    {
                        columnvalue = Convert.ToString(cblcolumnorder.Items[i].Value);
                    }
                    else
                    {
                        columnvalue = columnvalue + ',' + Convert.ToString(cblcolumnorder.Items[i].Value);
                    }
                }
            }
            if (columnvalue != "" && columnvalue != null)
            {
                string clsinsert = " if exists(select * from New_InsSettings where LinkName='" + linkname + "' and college_code='" + collegecode1 + "' and user_Code='" + usercode + "') update New_InsSettings set LinkValue='" + columnvalue + "' where LinkName='" + linkname + "' and user_code='" + usercode + "' and college_code='" + collegecode1 + "' else insert into New_InsSettings (LinkName,LinkValue,user_code,college_code)values('" + linkname + "','" + columnvalue + "','" + usercode + "','" + collegecode1 + "')";
                clsupdate = d2.update_method_wo_parameter(clsinsert, "Text");
            }
            if (clsupdate == 1)
            {
                string sel = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + collegecode1 + "' ";
                DataSet dscolor = new DataSet();
                dscolor.Clear();
                dscolor = d2.select_method_wo_parameter(sel, "Text");
                if (dscolor.Tables.Count > 0)
                {
                    int count = 0;
                    if (dscolor.Tables[0].Rows.Count > 0)
                    {
                        string value = Convert.ToString(dscolor.Tables[0].Rows[0]["LinkValue"]);
                        string[] value1 = value.Split(',');
                        if (value1.Length > 0)
                        {
                            for (int i = 0; i < value1.Length; i++)
                            {
                                string val = value1[i].ToString();
                                for (int k = 0; k < cblcolumnorder.Items.Count; k++)
                                {
                                    if (val == cblcolumnorder.Items[k].Value)
                                    {
                                        cblcolumnorder.Items[k].Selected = true;
                                        count++;
                                    }
                                }
                            }
                            if (count == cblcolumnorder.Items.Count)
                            {
                                CheckBox_column.Checked = true;
                            }
                            else
                            {
                                CheckBox_column.Checked = false;
                            }
                        }
                    }
                }
            }
        }
        catch (Exception ex)
        {
            //d2.sendErrorMail(ex, collegecode1, "Individual_SalaryReport.aspx");
        }
    }

    public bool columncount()
    {
        bool colorder = false;
        try
        {
            for (int i = 0; i < cblcolumnorder.Items.Count; i++)
            {
                if (cblcolumnorder.Items[i].Selected == true)
                {
                    colorder = true;
                }
            }
        }
        catch { }
        return colorder;
    }

    //all columnorder
    public void loadcolumns_all(object sender, EventArgs e)
    {
        try
        {
            string linkname = "Letter Inward All";

            string columnvalue = "";
            int clsupdate = 0;
            DataSet dscol = new DataSet();
            lb_allcollorder.Items.Clear();
            string selcol = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + collegecode1 + "'";
            dscol.Clear();
            dscol = d2.select_method_wo_parameter(selcol, "Text");

            if (columncountall() == true)
            {
                if (cblcolumnorderall.Items.Count > 0)
                {
                    colordAll.Clear();
                    for (int i = 0; i < cblcolumnorderall.Items.Count; i++)
                    {
                        if (cblcolumnorderall.Items[i].Selected == true)
                        {
                            colordAll.Add(Convert.ToString(cblcolumnorderall.Items[i].Value));
                            if (columnvalue == "")
                            {
                                columnvalue = Convert.ToString(cblcolumnorderall.Items[i].Value);
                                lb_allcollorder.Items.Add(new ListItem(cblcolumnorderall.Items[i].Text, cblcolumnorderall.Items[i].Value));
                            }
                            else
                            {
                                columnvalue = columnvalue + ',' + Convert.ToString(cblcolumnorderall.Items[i].Value);
                                lb_allcollorder.Items.Add(new ListItem(cblcolumnorderall.Items[i].Text, cblcolumnorderall.Items[i].Value));
                            }
                        }
                    }
                }
            }
            else if (dscol.Tables.Count > 0 && dscol.Tables[0].Rows.Count > 0)
            {
                colordAll.Clear();
                lb_allcollorder.Items.Clear();
                for (int col = 0; col < dscol.Tables[0].Rows.Count; col++)
                {
                    string value = Convert.ToString(dscol.Tables[0].Rows[col]["LinkValue"]);
                    string[] valuesplit = value.Split(',');
                    if (valuesplit.Length > 0)
                    {
                        for (int k = 0; k < valuesplit.Length; k++)
                        {
                            colordAll.Add(Convert.ToString(valuesplit[k]));
                            if (columnvalue == "")
                            {
                                columnvalue = Convert.ToString(valuesplit[k]);
                            }
                            else
                            {
                                columnvalue = columnvalue + ',' + Convert.ToString(valuesplit[k]);
                            }
                            lb_allcollorder.Items.Add(new ListItem(cblcolumnorderall.Items[Convert.ToInt32(valuesplit[k])].Text, cblcolumnorderall.Items[Convert.ToInt32(valuesplit[k])].Value));
                        }
                    }
                }
            }
            else
            {
                colordAll.Clear();
                for (int i = 0; i < cblcolumnorderall.Items.Count; i++)
                {
                    cblcolumnorderall.Items[i].Selected = true;
                    colordAll.Add(Convert.ToString(cblcolumnorderall.Items[i].Value));
                    if (columnvalue == "")
                    {
                        columnvalue = Convert.ToString(cblcolumnorderall.Items[i].Value);
                    }
                    else
                    {
                        columnvalue = columnvalue + ',' + Convert.ToString(cblcolumnorderall.Items[i].Value);
                    }
                }
            }
            if (columnvalue != "" && columnvalue != null)
            {
                string clsinsert = " if exists(select * from New_InsSettings where LinkName='" + linkname + "' and college_code='" + collegecode1 + "' and user_Code='" + usercode + "') update New_InsSettings set LinkValue='" + columnvalue + "' where LinkName='" + linkname + "' and user_code='" + usercode + "' and college_code='" + collegecode1 + "' else insert into New_InsSettings (LinkName,LinkValue,user_code,college_code)values('" + linkname + "','" + columnvalue + "','" + usercode + "','" + collegecode1 + "')";
                clsupdate = d2.update_method_wo_parameter(clsinsert, "Text");
            }
            if (clsupdate == 1)
            {
                string sel = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + collegecode1 + "' ";
                DataSet dscolor = new DataSet();
                dscolor.Clear();
                dscolor = d2.select_method_wo_parameter(sel, "Text");
                if (dscolor.Tables.Count > 0)
                {
                    int count = 0;
                    if (dscolor.Tables[0].Rows.Count > 0)
                    {
                        string value = Convert.ToString(dscolor.Tables[0].Rows[0]["LinkValue"]);
                        string[] value1 = value.Split(',');
                        if (value1.Length > 0)
                        {
                            for (int i = 0; i < value1.Length; i++)
                            {
                                string val = value1[i].ToString();
                                for (int k = 0; k < cblcolumnorderall.Items.Count; k++)
                                {
                                    if (val == cblcolumnorderall.Items[k].Value)
                                    {
                                        cblcolumnorderall.Items[k].Selected = true;
                                        count++;
                                    }
                                }
                            }
                            if (count == cblcolumnorderall.Items.Count)
                            {
                                CheckBox_column.Checked = true;
                            }
                            else
                            {
                                CheckBox_column.Checked = false;
                            }
                        }
                    }
                }
            }
        }
        catch (Exception ex)
        {
            //d2.sendErrorMail(ex, collegecode1, "Individual_SalaryReport.aspx");
        }
    }

    public bool columncountall()
    {
        bool colorder = false;
        try
        {
            for (int i = 0; i < cblcolumnorderall.Items.Count; i++)
            {
                if (cblcolumnorderall.Items[i].Selected == true)
                {
                    colorder = true;
                }
            }
        }
        catch { }
        return colorder;
    }

    //student columnorder
    public void loadcolumns_stud(object sender, EventArgs e)
    {
        try
        {
            string linkname = "Letter Inward student";

            string columnvalue = "";
            int clsupdate = 0;
            DataSet dscol = new DataSet();
            lb_colorderstudent.Items.Clear();
            string selcol = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + collegecode1 + "'";
            dscol.Clear();
            dscol = d2.select_method_wo_parameter(selcol, "Text");

            if (columncountstudent() == true)
            {
                if (cblcolumnorder0.Items.Count > 0)
                {
                    colordstudent.Clear();
                    for (int i = 0; i < cblcolumnorder0.Items.Count; i++)
                    {
                        if (cblcolumnorder0.Items[i].Selected == true)
                        {
                            colordstudent.Add(Convert.ToString(cblcolumnorder0.Items[i].Value));
                            if (columnvalue == "")
                            {
                                columnvalue = Convert.ToString(cblcolumnorder0.Items[i].Value);
                                lb_colorderstudent.Items.Add(new ListItem(cblcolumnorder0.Items[i].Text, cblcolumnorder0.Items[i].Value));
                            }
                            else
                            {
                                columnvalue = columnvalue + ',' + Convert.ToString(cblcolumnorder0.Items[i].Value);
                                lb_colorderstudent.Items.Add(new ListItem(cblcolumnorder0.Items[i].Text, cblcolumnorder0.Items[i].Value));
                            }
                        }
                    }
                }
            }
            else if (dscol.Tables.Count > 0 && dscol.Tables[0].Rows.Count > 0)
            {
                colordstudent.Clear();
                lb_colorderstudent.Items.Clear();
                for (int col = 0; col < dscol.Tables[0].Rows.Count; col++)
                {
                    string value = Convert.ToString(dscol.Tables[0].Rows[col]["LinkValue"]);
                    string[] valuesplit = value.Split(',');
                    if (valuesplit.Length > 0)
                    {
                        for (int k = 0; k < valuesplit.Length; k++)
                        {
                            colordstudent.Add(Convert.ToString(valuesplit[k]));
                            if (columnvalue == "")
                            {
                                columnvalue = Convert.ToString(valuesplit[k]);
                            }
                            else
                            {
                                columnvalue = columnvalue + ',' + Convert.ToString(valuesplit[k]);
                            }
                            lb_colorderstudent.Items.Add(new ListItem(cblcolumnorder0.Items[Convert.ToInt32(valuesplit[k])].Text, cblcolumnorder0.Items[Convert.ToInt32(valuesplit[k])].Value));
                        }
                    }
                }
            }
            else
            {
                colordstudent.Clear();
                for (int i = 0; i < cblcolumnorder0.Items.Count; i++)
                {
                    cblcolumnorder0.Items[i].Selected = true;
                    colordstudent.Add(Convert.ToString(cblcolumnorder0.Items[i].Value));
                    if (columnvalue == "")
                    {
                        columnvalue = Convert.ToString(cblcolumnorder0.Items[i].Value);
                    }
                    else
                    {
                        columnvalue = columnvalue + ',' + Convert.ToString(cblcolumnorder0.Items[i].Value);
                    }
                }
            }
            if (columnvalue != "" && columnvalue != null)
            {
                string clsinsert = " if exists(select * from New_InsSettings where LinkName='" + linkname + "' and college_code='" + collegecode1 + "' and user_Code='" + usercode + "') update New_InsSettings set LinkValue='" + columnvalue + "' where LinkName='" + linkname + "' and user_code='" + usercode + "' and college_code='" + collegecode1 + "' else insert into New_InsSettings (LinkName,LinkValue,user_code,college_code)values('" + linkname + "','" + columnvalue + "','" + usercode + "','" + collegecode1 + "')";
                clsupdate = d2.update_method_wo_parameter(clsinsert, "Text");
            }
            if (clsupdate == 1)
            {
                string sel = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + collegecode1 + "' ";
                DataSet dscolor = new DataSet();
                dscolor.Clear();
                dscolor = d2.select_method_wo_parameter(sel, "Text");
                if (dscolor.Tables.Count > 0)
                {
                    int count = 0;
                    if (dscolor.Tables[0].Rows.Count > 0)
                    {
                        string value = Convert.ToString(dscolor.Tables[0].Rows[0]["LinkValue"]);
                        string[] value1 = value.Split(',');
                        if (value1.Length > 0)
                        {
                            for (int i = 0; i < value1.Length; i++)
                            {
                                string val = value1[i].ToString();
                                for (int k = 0; k < cblcolumnorder0.Items.Count; k++)
                                {
                                    if (val == cblcolumnorder0.Items[k].Value)
                                    {
                                        cblcolumnorder0.Items[k].Selected = true;
                                        count++;
                                    }
                                }
                            }
                            if (count == cblcolumnorder0.Items.Count)
                            {
                                CheckBox_column.Checked = true;
                            }
                            else
                            {
                                CheckBox_column.Checked = false;
                            }
                        }
                    }
                }
            }
        }
        catch (Exception ex)
        {
            //d2.sendErrorMail(ex, collegecode1, "Individual_SalaryReport.aspx");
        }
    }

    public bool columncountstudent()
    {
        bool colorder = false;
        try
        {
            for (int i = 0; i < cblcolumnorder0.Items.Count; i++)
            {
                if (cblcolumnorder0.Items[i].Selected == true)
                {
                    colorder = true;
                }
            }
        }
        catch { }
        return colorder;
    }

    //company columnorder
    public void loadcolumns_company(object sender, EventArgs e)
    {
        try
        {
            string linkname = "Letter Inward company";

            string columnvalue = "";
            int clsupdate = 0;
            DataSet dscol = new DataSet();
            lb_colordercompany.Items.Clear();
            string selcol = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + collegecode1 + "'";
            dscol.Clear();
            dscol = d2.select_method_wo_parameter(selcol, "Text");

            if (columncountcompany() == true)
            {
                if (cblcolumnorder2.Items.Count > 0)
                {
                    colordcompany.Clear();
                    for (int i = 0; i < cblcolumnorder2.Items.Count; i++)
                    {
                        if (cblcolumnorder2.Items[i].Selected == true)
                        {
                            colordcompany.Add(Convert.ToString(cblcolumnorder2.Items[i].Value));
                            if (columnvalue == "")
                            {
                                columnvalue = Convert.ToString(cblcolumnorder2.Items[i].Value);
                                lb_colordercompany.Items.Add(new ListItem(cblcolumnorder2.Items[i].Text, cblcolumnorder2.Items[i].Value));
                            }
                            else
                            {
                                columnvalue = columnvalue + ',' + Convert.ToString(cblcolumnorder2.Items[i].Value);
                                lb_colordercompany.Items.Add(new ListItem(cblcolumnorder2.Items[i].Text, cblcolumnorder2.Items[i].Value));
                            }
                        }
                    }
                }
            }
            else if (dscol.Tables.Count > 0 && dscol.Tables[0].Rows.Count > 0)
            {
                colordcompany.Clear();
                lb_colordercompany.Items.Clear();
                for (int col = 0; col < dscol.Tables[0].Rows.Count; col++)
                {
                    string value = Convert.ToString(dscol.Tables[0].Rows[col]["LinkValue"]);
                    string[] valuesplit = value.Split(',');
                    if (valuesplit.Length > 0)
                    {
                        for (int k = 0; k < valuesplit.Length; k++)
                        {
                            colordcompany.Add(Convert.ToString(valuesplit[k]));
                            if (columnvalue == "")
                            {
                                columnvalue = Convert.ToString(valuesplit[k]);
                            }
                            else
                            {
                                columnvalue = columnvalue + ',' + Convert.ToString(valuesplit[k]);
                            }
                            lb_colordercompany.Items.Add(new ListItem(cblcolumnorder2.Items[Convert.ToInt32(valuesplit[k])].Text, cblcolumnorder2.Items[Convert.ToInt32(valuesplit[k])].Value));
                        }
                    }
                }
            }
            else
            {
                colordcompany.Clear();
                for (int i = 0; i < cblcolumnorder2.Items.Count; i++)
                {
                    cblcolumnorder2.Items[i].Selected = true;
                    colordcompany.Add(Convert.ToString(cblcolumnorder2.Items[i].Value));
                    if (columnvalue == "")
                    {
                        columnvalue = Convert.ToString(cblcolumnorder2.Items[i].Value);
                    }
                    else
                    {
                        columnvalue = columnvalue + ',' + Convert.ToString(cblcolumnorder2.Items[i].Value);
                    }
                }
            }
            if (columnvalue != "" && columnvalue != null)
            {
                string clsinsert = " if exists(select * from New_InsSettings where LinkName='" + linkname + "' and college_code='" + collegecode1 + "' and user_Code='" + usercode + "') update New_InsSettings set LinkValue='" + columnvalue + "' where LinkName='" + linkname + "' and user_code='" + usercode + "' and college_code='" + collegecode1 + "' else insert into New_InsSettings (LinkName,LinkValue,user_code,college_code)values('" + linkname + "','" + columnvalue + "','" + usercode + "','" + collegecode1 + "')";
                clsupdate = d2.update_method_wo_parameter(clsinsert, "Text");
            }
            if (clsupdate == 1)
            {
                string sel = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + collegecode1 + "' ";
                DataSet dscolor = new DataSet();
                dscolor.Clear();
                dscolor = d2.select_method_wo_parameter(sel, "Text");
                if (dscolor.Tables.Count > 0)
                {
                    int count = 0;
                    if (dscolor.Tables[0].Rows.Count > 0)
                    {
                        string value = Convert.ToString(dscolor.Tables[0].Rows[0]["LinkValue"]);
                        string[] value1 = value.Split(',');
                        if (value1.Length > 0)
                        {
                            for (int i = 0; i < value1.Length; i++)
                            {
                                string val = value1[i].ToString();
                                for (int k = 0; k < cblcolumnorder2.Items.Count; k++)
                                {
                                    if (val == cblcolumnorder2.Items[k].Value)
                                    {
                                        cblcolumnorder2.Items[k].Selected = true;
                                        count++;
                                    }
                                }
                            }
                            if (count == cblcolumnorder2.Items.Count)
                            {
                                CheckBox_column.Checked = true;
                            }
                            else
                            {
                                CheckBox_column.Checked = false;
                            }
                        }
                    }
                }
            }
        }
        catch (Exception ex)
        {
            //d2.sendErrorMail(ex, collegecode1, "Individual_SalaryReport.aspx");
        }
    }

    public bool columncountcompany()
    {
        bool colorder = false;
        try
        {
            for (int i = 0; i < cblcolumnorder2.Items.Count; i++)
            {
                if (cblcolumnorder2.Items[i].Selected == true)
                {
                    colorder = true;
                }
            }
        }
        catch { }
        return colorder;
    }

    //others columnorder
    public void loadcolumns_others(object sender, EventArgs e)
    {
        try
        {
            string linkname = "Letter Inward others";

            string columnvalue = "";
            int clsupdate = 0;
            DataSet dscol = new DataSet();
            lb_colorderothers.Items.Clear();
            string selcol = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + collegecode1 + "'";
            dscol.Clear();
            dscol = d2.select_method_wo_parameter(selcol, "Text");

            if (columncountothers() == true)
            {
                if (cblcolumnorder5.Items.Count > 0)
                {
                    colordothers.Clear();
                    for (int i = 0; i < cblcolumnorder5.Items.Count; i++)
                    {
                        if (cblcolumnorder5.Items[i].Selected == true)
                        {
                            colordothers.Add(Convert.ToString(cblcolumnorder5.Items[i].Value));
                            if (columnvalue == "")
                            {
                                columnvalue = Convert.ToString(cblcolumnorder5.Items[i].Value);
                                lb_colorderothers.Items.Add(new ListItem(cblcolumnorder5.Items[i].Text, cblcolumnorder5.Items[i].Value));
                            }
                            else
                            {
                                columnvalue = columnvalue + ',' + Convert.ToString(cblcolumnorder5.Items[i].Value);
                                lb_colorderothers.Items.Add(new ListItem(cblcolumnorder5.Items[i].Text, cblcolumnorder5.Items[i].Value));
                            }
                        }
                    }
                }
            }
            else if (dscol.Tables.Count > 0 && dscol.Tables[0].Rows.Count > 0)
            {
                colordothers.Clear();
                lb_colorderothers.Items.Clear();
                for (int col = 0; col < dscol.Tables[0].Rows.Count; col++)
                {
                    string value = Convert.ToString(dscol.Tables[0].Rows[col]["LinkValue"]);
                    string[] valuesplit = value.Split(',');
                    if (valuesplit.Length > 0)
                    {
                        for (int k = 0; k < valuesplit.Length; k++)
                        {
                            colordothers.Add(Convert.ToString(valuesplit[k]));
                            if (columnvalue == "")
                            {
                                columnvalue = Convert.ToString(valuesplit[k]);
                            }
                            else
                            {
                                columnvalue = columnvalue + ',' + Convert.ToString(valuesplit[k]);
                            }
                            lb_colorderothers.Items.Add(new ListItem(cblcolumnorder5.Items[Convert.ToInt32(valuesplit[k])].Text, cblcolumnorder5.Items[Convert.ToInt32(valuesplit[k])].Value));
                        }
                    }
                }
            }
            else
            {
                colordothers.Clear();
                for (int i = 0; i < cblcolumnorder5.Items.Count; i++)
                {
                    cblcolumnorder5.Items[i].Selected = true;
                    colordothers.Add(Convert.ToString(cblcolumnorder5.Items[i].Value));
                    if (columnvalue == "")
                    {
                        columnvalue = Convert.ToString(cblcolumnorder5.Items[i].Value);
                    }
                    else
                    {
                        columnvalue = columnvalue + ',' + Convert.ToString(cblcolumnorder5.Items[i].Value);
                    }
                }
            }
            if (columnvalue != "" && columnvalue != null)
            {
                string clsinsert = " if exists(select * from New_InsSettings where LinkName='" + linkname + "' and college_code='" + collegecode1 + "' and user_Code='" + usercode + "') update New_InsSettings set LinkValue='" + columnvalue + "' where LinkName='" + linkname + "' and user_code='" + usercode + "' and college_code='" + collegecode1 + "' else insert into New_InsSettings (LinkName,LinkValue,user_code,college_code)values('" + linkname + "','" + columnvalue + "','" + usercode + "','" + collegecode1 + "')";
                clsupdate = d2.update_method_wo_parameter(clsinsert, "Text");
            }
            if (clsupdate == 1)
            {
                string sel = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + collegecode1 + "' ";
                DataSet dscolor = new DataSet();
                dscolor.Clear();
                dscolor = d2.select_method_wo_parameter(sel, "Text");
                if (dscolor.Tables.Count > 0)
                {
                    int count = 0;
                    if (dscolor.Tables[0].Rows.Count > 0)
                    {
                        string value = Convert.ToString(dscolor.Tables[0].Rows[0]["LinkValue"]);
                        string[] value1 = value.Split(',');
                        if (value1.Length > 0)
                        {
                            for (int i = 0; i < value1.Length; i++)
                            {
                                string val = value1[i].ToString();
                                for (int k = 0; k < cblcolumnorder5.Items.Count; k++)
                                {
                                    if (val == cblcolumnorder5.Items[k].Value)
                                    {
                                        cblcolumnorder5.Items[k].Selected = true;
                                        count++;
                                    }
                                }
                            }
                            if (count == cblcolumnorder5.Items.Count)
                            {
                                CheckBox_column.Checked = true;
                            }
                            else
                            {
                                CheckBox_column.Checked = false;
                            }
                        }
                    }
                }
            }
        }
        catch (Exception ex)
        {
            //d2.sendErrorMail(ex, collegecode1, "Individual_SalaryReport.aspx");
        }
    }

    public void Iscompleted_check(object sender, EventArgs e)
    {
        if (Iscompleted.Checked == true)
        {
            Radio_accept.Visible = false;
            Radio_reject.Visible = false;
            btn_pop1go.Text = "Yes";
        }
    }
    public bool columncountothers()
    {
        bool colorder = false;
        try
        {
            for (int i = 0; i < cblcolumnorder5.Items.Count; i++)
            {
                if (cblcolumnorder5.Items[i].Selected == true)
                {
                    colorder = true;
                }
            }
        }
        catch { }
        return colorder;
    }

}
