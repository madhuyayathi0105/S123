using System;
using System.Collections;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.Services;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Text;
using InsproDataAccess;
using AjaxControlToolkit;



public partial class Request_Report : System.Web.UI.Page
{
    static string clgcode1 = string.Empty;
    static ArrayList ItemList_item = new ArrayList();
    static ArrayList Itemindex_item = new ArrayList();
    static ArrayList ItemList_service = new ArrayList();
    static ArrayList Itemindex_service = new ArrayList();
    static ArrayList ItemList_vist = new ArrayList();
    static ArrayList Itemindex_vist = new ArrayList();
    static ArrayList ItemList_compl = new ArrayList();
    static ArrayList Itemindex_comp = new ArrayList();
    static ArrayList ItemList_lve = new ArrayList();
    static ArrayList Itemindex_lve = new ArrayList();
    static ArrayList ItemList_gate = new ArrayList();
    static ArrayList Itemindex_gate = new ArrayList();
    static ArrayList ItemList_all = new ArrayList();
    static ArrayList Itemindex_all = new ArrayList();
    static ArrayList ItemList_event = new ArrayList();
    static ArrayList Itemindex_event = new ArrayList();
    static string semstatic;
    static string secstatci;
    static string bulidingstatic;
    static string floorstatic;
    static string roomstatic;
    Hashtable depthash = new Hashtable();
    static string val_move = string.Empty;
    string error = string.Empty;
    static int btnflag;
    int count = 0;
    bool check = false;
    Boolean Cellclick = false;
    static string checknew = string.Empty;
    DataRow dr;
    ReuasableMethods reuse = new ReuasableMethods();
    InsproDirectAccess dir = new InsproDirectAccess();
    DAccess2 d2 = new DAccess2();
    DAccess2 da = new DAccess2();
    DataSet ds = new DataSet();
    DataSet ds1 = new DataSet();
    DataSet ds2 = new DataSet();
    DataSet ds3 = new DataSet();
    DataSet ds4 = new DataSet();
    DataSet ds5 = new DataSet();
    DataSet ds6 = new DataSet();
    DataTable dt = new DataTable();
    string date = DateTime.Now.ToString("dd/MM/yyyy");
    Hashtable hat = new Hashtable();
    Hashtable hat1 = new Hashtable();
    Hashtable hat2 = new Hashtable();
    Hashtable hat3 = new Hashtable();
    Hashtable hat4 = new Hashtable();
    Hashtable hat5 = new Hashtable();
    Hashtable hat6 = new Hashtable();
    Hashtable hat7 = new Hashtable();
    Hashtable hat8 = new Hashtable();
    public static Int64 VendorFK;
    string usercode = string.Empty;
    string collegecode1 = string.Empty;
    string collegecode = string.Empty;
    string singleuser = string.Empty;
    string group_user = string.Empty;
    string staffcodesession = "";
    string user_id = "";
    string SenderID = "";
    string strmsg = "";
    string mobilenos = "";
    string isst = "";
    string Password = "";
    static string sms_req = "";
    static string sms_app = "";
    static string sms_exit = "";
    static string sms_reject = "";
    static string sms_mom = "";
    static string sms_dad = "";
    static string sms_stud = "";
    static string smsstudrq = "";
    static string staff_per_count = "";
    Hashtable ht_sch = new Hashtable();
    Hashtable ht_sdate = new Hashtable();
    Hashtable ht_bell = new Hashtable();
    Hashtable ht_period = new Hashtable();
    SqlConnection con = new SqlConnection(ConfigurationManager.AppSettings["DSN"]);
    SqlCommand cmd;
    int SchOrder = 0, nodays = 0;
    int intNHrs = 0;
    static string deg_batch_sem = "";
    static int hourstaff = 0;
    static string stafcodealter = "";
    static string startdate1 = "";
    static string con_txt = "";
    static string pri_txt = "";
    static string delete = "";
    static int lv_cancel = 0;
    static string tblday = "";
    static string curday = "";
    Hashtable totalleave = new Hashtable();
    Boolean sun_check = false;
    Boolean holi_check = false;
    Boolean color_check = false;
    static string requestpermissioncheck = "";
    static string h = "";
    static string leavetypecount = "";
    static int rowval = 0;
    static int colval = 0;
    static string rowgrid = "";
    static string colgrind = "";
    static int full_check = 0;
    static int partl_check = 0;
    static string requeststaffapprovalnumber = "";
    static int bindleavecount = 0;
    Boolean leavedayscheckcount = false;
    Boolean rejectflag = false;
    Boolean approvalflag = false;
    static int chkrelived = 0;
    static string alterrigths = string.Empty;
    string LoginStaffApplid = string.Empty;
    Dictionary<string, string> DateMornOrEvenLeaveDic = new Dictionary<string, string>();

    //Added by saranyadevi05.12.2018
    static string requeststaffapprovalno = "";

    protected void Page_Load(object sender, EventArgs e)
    {
        if (Session["collegecode"] == null)
        {
            Response.Redirect("~/Default.aspx");
        }
        usercode = Session["usercode"].ToString();
        collegecode1 = Session["collegecode"].ToString();
        singleuser = Session["single_user"].ToString();
        group_user = Session["group_code"].ToString();
        staffcodesession = Session["Staff_Code"].ToString();
        if (clgcode1 == "")
        {
            if (ddl_rpt_collge.Items.Count > 0)

                clgcode1 = Convert.ToString(ddl_rpt_collge.SelectedItem.Value);
        }
        if (LoginStaffApplid == "")
            LoginStaffApplid = d2.GetFunction(" select appl_id from staffmaster sm,staff_appl_master ap where sm.appl_no=ap.appl_no and sm.staff_code='" + staffcodesession + "'");
        //AlternateScheduleRemove("233", Convert.ToDateTime("12/06/2017"));
        if (!IsPostBack)
        {
            string rollnoFlag = string.Empty;
            string RegnoFlag = string.Empty;
            string StudtypeFlag = string.Empty;
            string AdmissionnoFlag = string.Empty;
            RollnoRegnoAdmissionRights(ref rollnoFlag, ref RegnoFlag, ref StudtypeFlag, ref AdmissionnoFlag);
            ViewState["rollnoFlag"] = rollnoFlag;
            ViewState["RegnoFlag"] = RegnoFlag;
            ViewState["StudtypeFlag"] = StudtypeFlag;
            ViewState["AdmissionnoFlag"] = AdmissionnoFlag;
            leaverequestsetting();
            txt_fromdate.Text = DateTime.Now.ToString("dd/MM/yyyy");
            txt_fromdate.Attributes.Add("readonly", "readonly");
            txt_todate.Text = DateTime.Now.ToString("dd/MM/yyyy");
            txt_todate.Attributes.Add("readonly", "readonly");
            access();
            access1();
            TabAccess();
            loadhour();
            loadminits();
            timevalue();
            rdo_request.Checked = true;
            loaddesignation();
            loaddepartment();
            div_dept.Visible = true;
            loadcomplaints();
            loadsuggestions();
            loadleavereason();
            leav_res();
            BindLeave();
            BindCollege();
            binddepartment();
            loadreqby();
            loadreqmode();
            loadreason();
            res();
            req_mode();
            resrequest();
            BindGridviewadd();
            newbindbatch();
            rdo_gatestudent.Visible = false;
            rdo_gatestaff.Visible = false;
            alternateRights();
            bindsearchstapp();
        }
    }
    public void lb2_Click(object sender, EventArgs e)
    {
        Session.Abandon();
        Session.Clear();
        Session.RemoveAll();
        System.Web.Security.FormsAuthentication.SignOut();
        Response.Redirect("~/Default.aspx", false);
    }
    public void loadleavereason()
    {
        ds.Tables.Clear();
        string sql = "select MasterCode,MasterValue from CO_MasterValues where MasterCriteria ='HGRea'";
        ds = d2.select_method_wo_parameter(sql, "TEXT");
        if (ds.Tables[0].Rows.Count > 0)
        {
            //    ddl_leavereason.DataSource = ds;
            //    ddl_leavereason.DataTextField = "MasterValue";
            //    ddl_leavereason.DataValueField = "MasterCode";
            //    ddl_leavereason.DataBind();
            //    ddl_leavereason.Items.Insert(0, new ListItem("Select", "0"));
        }
        else
        {
            // ddl_leavereason.Items.Insert(0, new ListItem("Select", "0"));
        }
    }
    public void leav_res()
    {
        try
        {
            //ddl_leavereason.Items.Insert(ddl_leavereason.Items.Count, "Others");
        }
        catch
        {
        }
    }
    public void loadhour()
    {
        try
        {
            ddl_hour.Items.Clear();
            ddl_endhour.Items.Clear();
            ddlhour.Items.Clear();
            ddlendhour.Items.Clear();
            for (int i = 1; i <= 12; i++)
            {
                ddl_hour.Items.Add(Convert.ToString(i));
                ddl_endhour.Items.Add(Convert.ToString(i));
                ddl_hrs.Items.Add(Convert.ToString(i));
                ddlhour.Items.Add(Convert.ToString(i));
                ddlendhour.Items.Add(Convert.ToString(i));
            }
            //ddl_hour.SelectedIndex = ddl_hour.Items.Count - 1;
            //ddl_endhour.SelectedIndex = ddl_endhour.Items.Count - 1;
            //ddl_hrs.SelectedIndex = ddl_hrs.Items.Count - 1;
            //ddlhour.SelectedIndex = ddl_hrs.Items.Count - 1;
            //ddlendhour.SelectedIndex = ddl_hrs.Items.Count - 1;

        }
        catch
        {
        }
    }
    public void loadminits()
    {
        ddl_minits.Items.Clear();
        ddl_endminit.Items.Clear();
        ddl_mins.Items.Clear();
        ddlmin.Items.Clear();
        ddlendmin.Items.Clear();
        for (int i = 0; i <= 59; i++)
        {
            string value = Convert.ToString(i);
            if (value.Length == 1)
            {
                value = "0" + "" + value;
            }
            ddl_minits.Items.Add(Convert.ToString(value));
            ddl_endminit.Items.Add(Convert.ToString(value));
            ddl_mins.Items.Add(Convert.ToString(value));
            ddlmin.Items.Add(Convert.ToString(value));
            ddlendmin.Items.Add(Convert.ToString(value));
        }
    }
    public void timevalue()
    {
        string time = DateTime.Now.ToString("hh:mm:ss");
        string hour = "";
        string[] ay = time.Split(':');
        string val_hr = ay[0].ToString();
        int hr = Convert.ToInt16(val_hr);
        if (val_hr == "01")
        {
            hour = "1";
        }
        else if (val_hr == "02")
        {
            hour = "2";
        }
        else if (val_hr == "03")
        {
            hour = "3";
        }
        else if (val_hr == "04")
        {
            hour = "4";
        }
        else if (val_hr == "05")
        {
            hour = "5";
        }
        else if (val_hr == "06")
        {
            hour = "6";
        }
        else if (val_hr == "07")
        {
            hour = "7";
        }
        else if (val_hr == "08")
        {
            hour = "8";
        }
        else if (val_hr == "09")
        {
            hour = "9";
        }
        else if (val_hr == "13")
        {
            hour = "1";
        }
        else if (val_hr == "14")
        {
            hour = "2";
        }
        else if (val_hr == "15")
        {
            hour = "3";
        }
        else if (val_hr == "16")
        {
            hour = "4";
        }
        else if (val_hr == "17")
        {
            hour = "5";
        }
        else if (val_hr == "18")
        {
            hour = "6";
        }
        else if (val_hr == "19")
        {
            hour = "7";
        }
        else if (val_hr == "20")
        {
            hour = "8";
        }
        else if (val_hr == "21")
        {
            hour = "9";
        }
        else if (val_hr == "22")
        {
            hour = "10";
        }
        else if (val_hr == "23")
        {
            hour = "11";
        }
        else if (val_hr == "24")
        {
            hour = "12";
        }
        if (val_hr == "10" || val_hr == "11" || val_hr == "12")
        {
            ddl_hour.Text = val_hr;
            ddl_endhour.Text = val_hr;
        }
        else
        {
            ddl_hour.Text = hour;
            ddl_endhour.Text = hour;
        }
        ddl_minits.Text = ay[1].ToString();
        ddl_endminit.Text = ay[1].ToString();
        if (val_hr == "12" || val_hr == "13" || val_hr == "14" || val_hr == "15" || val_hr == "16" || val_hr == "17" || val_hr == "18" || val_hr == "19" || val_hr == "20" || val_hr == "21" || val_hr == "22" || val_hr == "23" || val_hr == "24")
        {
            ddl_timeformate.Text = "PM";
            ddl_endformate.Text = "PM";
        }
        else
        {
            ddl_timeformate.Text = "AM";
            ddl_endformate.Text = "AM";
        }
    }
    public void loadreason()
    {
        ds.Tables.Clear();
        string sql = "select MasterCode,MasterValue from CO_MasterValues where MasterCriteria ='GRRea'";
        ds = d2.select_method_wo_parameter(sql, "TEXT");
        if (ds.Tables[0].Rows.Count > 0)
        {
            ddlgatepass.DataSource = ds;
            ddlgatepass.DataTextField = "MasterValue";
            ddlgatepass.DataValueField = "MasterCode";
            ddlgatepass.DataBind();
            ddlgatepass.Items.Insert(0, new ListItem("Select", "0"));
        }
        else
        {
            ddlgatepass.Items.Insert(0, new ListItem("Select", "0"));
        }
    }
    public void btn_go_Click(object sender, EventArgs e)
    {
    }
    public void txt_fromdate_TextChanged(object sender, EventArgs e)
    {
    }
    public void txt_todate_TextChanged(object sender, EventArgs e)
    {
    }
    public void imgbtn_all_Click(object sender, EventArgs e)
    {
        td_all.BgColor = "#c4c4c4";
        td_stud.BgColor = "white";
        td_staff.BgColor = "white";
        td_par.BgColor = "white";
        td_comp.BgColor = "white";
        td_indi.BgColor = "white";
        td_mag.BgColor = "white";
        td3.BgColor = "white";
        lbl_studrptroll.Visible = false;
        txt_studrptroll.Visible = false;
        lbl_studrptname.Visible = false;
        txt_studrptname.Visible = false;
        btn_rptfind.Visible = false;
        rdo_gatestudent.Visible = false;
        rdo_gatestaff.Visible = false;
        loadhour();
        loadminits();
        timevalue();
        div_all.Visible = true;
        service_div.Visible = false;
        item_div.Visible = false;
        vist_div.Visible = false;
        div_event.Visible = false;
        comp_div.Visible = false;
        leave_div.Visible = false;
        gate_div.Visible = false;
        lbl_certErr.Visible = false;
        Fpspread7.Visible = false;
        lbl_certErr.Visible = false;
        all_search();
        btnApprCancel.Visible = false;
        cbdept.Visible = false;
    }
    public void all_search()
    {
        lbl_norec.Visible = false;
        Fpspread9.Sheets[0].Visible = true;
        Fpspread9.Sheets[0].RowHeader.Visible = false;
        Fpspread9.CommandBar.Visible = false;
        Fpspread9.Sheets[0].AutoPostBack = false;
        Fpspread9.Sheets[0].RowCount = 0;
        Fpspread9.Sheets[0].ColumnHeader.RowCount = 1;
        Fpspread9.Sheets[0].ColumnCount = 3;
        FarPoint.Web.Spread.StyleInfo darkstyle111 = new FarPoint.Web.Spread.StyleInfo();
        darkstyle111.BackColor = ColorTranslator.FromHtml("#0CA6CA");
        darkstyle111.ForeColor = Color.Black;
        darkstyle111.HorizontalAlign = HorizontalAlign.Center;
        Fpspread9.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle111;
        string[] ay = txt_fromdate.Text.Split('/');
        string[] ay1 = txt_todate.Text.Split('/');
        DateTime dt = new DateTime();
        DateTime dt1 = new DateTime();
        dt = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
        dt1 = Convert.ToDateTime(ay1[1] + "/" + ay1[0] + "/" + ay1[2]);
        string query = "";
        string app = "";
        app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
        if (rdo_request.Checked == true)
        {
            if (staffcodesession.Trim() != "" && staffcodesession.Trim() != null)
            {
                if (ddl_search.SelectedItem.Value == "0")
                {

                    app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                    query = "select distinct ReqAppStatus,RequisitionPK,CASE WHEN RequestType = 1 THEN 'Item Request' WHEN RequestType = 2 THEN 'Service Request' WHEN RequestType = 3 THEN 'Visitor Appointment Request' WHEN RequestType = 4 THEN 'Complaints' WHEN RequestType = 5 THEN 'Leave Request' WHEN RequestType = 6 THEN 'Gate Pass' When RequestType=7 then 'Event Request' END RequestType,case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqAppNo,ReqStaffAppNo from RQ_Requisition where RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and ReqAppNo in ('" + app + "') and college_code='" + ddl_rpt_collge.SelectedItem.Value + "' order by RequestCode";
                }
                else if (ddl_search.SelectedItem.Value == "1")
                {
                    app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                    query = "select distinct ReqAppStatus,RequisitionPK,CASE WHEN RequestType = 1 THEN 'Item Request' WHEN RequestType = 2 THEN 'Service Request' WHEN RequestType = 3 THEN 'Visitor Appointment Request' WHEN RequestType = 4 THEN 'Complaints' WHEN RequestType = 5 THEN 'Leave Request' WHEN RequestType = 6 THEN 'Gate Pass' When RequestType=7 then 'Event Request' END RequestType,case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqAppNo,ReqStaffAppNo from RQ_Requisition where LeaveFrom between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and ReqAppNo in ('" + app + "') and college_code='" + ddl_rpt_collge.SelectedItem.Value + "' order by RequestCode";

                }
            }
            else
            {
                if (ddl_search.SelectedItem.Value == "0")//delsi0608
                {

                    query = "select distinct ReqAppStatus,RequisitionPK,CASE WHEN RequestType = 1 THEN 'Item Request' WHEN RequestType = 2 THEN 'Service Request' WHEN RequestType = 3 THEN 'Visitor Appointment Request' WHEN RequestType = 4 THEN 'Complaints' WHEN RequestType = 5 THEN 'Leave Request' WHEN RequestType = 6 THEN 'Gate Pass' When RequestType=7 then 'Event Request' END RequestType,case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqAppNo,ReqStaffAppNo from RQ_Requisition where RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and college_code='" + ddl_rpt_collge.SelectedItem.Value + "' order by RequestCode";
                }
                else if (ddl_search.SelectedItem.Value == "1")
                {

                    query = "select distinct ReqAppStatus,RequisitionPK,CASE WHEN RequestType = 1 THEN 'Item Request' WHEN RequestType = 2 THEN 'Service Request' WHEN RequestType = 3 THEN 'Visitor Appointment Request' WHEN RequestType = 4 THEN 'Complaints' WHEN RequestType = 5 THEN 'Leave Request' WHEN RequestType = 6 THEN 'Gate Pass' When RequestType=7 then 'Event Request' END RequestType,case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqAppNo,ReqStaffAppNo from RQ_Requisition where LeaveFrom between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and college_code='" + ddl_rpt_collge.SelectedItem.Value + "' order by RequestCode";


                }


            }
        }
        else if (rdo_approval.Checked == true)
        {
            if (staffcodesession.Trim() != "" && staffcodesession.Trim() != null)
            {
                if (ddl_search.SelectedItem.Value == "0")//delsi0608
                {
                    app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                    query = "select distinct ReqAppStatus,RequisitionPK,CASE WHEN r.RequestType = 1 THEN 'Item Request' WHEN r.RequestType = 2 THEN 'Service Request' WHEN r.RequestType = 3 THEN 'Visitor Appointment Request' WHEN r.RequestType = 4 THEN 'Complaints' WHEN r.RequestType = 5 THEN 'Leave Request' WHEN r.RequestType = 6 THEN 'Gate Pass' When r.RequestType=7 then 'Event Request' END RequestType,case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqAppNo,r.ReqStaffAppNo from RQ_Requisition r,RQ_RequestHierarchy rh where RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and  r.RequestType =rh.RequestType and r.ReqAppStatus=0 and (r.ReqAppNo =rh.ReqStaffAppNo or r.ReqStaffAppNo=rh.ReqStaffAppNo) and rh.ReqAppStaffAppNo ='" + app + "' and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' order by r.RequestCode";
                }
                else if (ddl_search.SelectedItem.Value == "1")
                {

                    app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                    query = "select distinct ReqAppStatus,RequisitionPK,CASE WHEN r.RequestType = 1 THEN 'Item Request' WHEN r.RequestType = 2 THEN 'Service Request' WHEN r.RequestType = 3 THEN 'Visitor Appointment Request' WHEN r.RequestType = 4 THEN 'Complaints' WHEN r.RequestType = 5 THEN 'Leave Request' WHEN r.RequestType = 6 THEN 'Gate Pass' When r.RequestType=7 then 'Event Request' END RequestType,case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqAppNo,r.ReqStaffAppNo from RQ_Requisition r,RQ_RequestHierarchy rh where LeaveFrom between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and  r.RequestType =rh.RequestType and r.ReqAppStatus=0 and (r.ReqAppNo =rh.ReqStaffAppNo or r.ReqStaffAppNo=rh.ReqStaffAppNo) and rh.ReqAppStaffAppNo ='" + app + "' and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' order by r.RequestCode";

                }

            }
            else
            {
                if (ddl_search.SelectedItem.Value == "0")//delsi0608
                {
                    query = "select distinct ReqAppStatus,RequisitionPK,CASE WHEN r.RequestType = 1 THEN 'Item Request' WHEN r.RequestType = 2 THEN 'Service Request' WHEN r.RequestType = 3 THEN 'Visitor Appointment Request' WHEN r.RequestType = 4 THEN 'Complaints' WHEN r.RequestType = 5 THEN 'Leave Request' WHEN r.RequestType = 6 THEN 'Gate Pass' When r.RequestType=7 then 'Event Request' END RequestType,case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqAppNo,r.ReqStaffAppNo from RQ_Requisition r,RQ_RequestHierarchy rh where RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and  r.RequestType =rh.RequestType and r.ReqAppStatus=0 and (r.ReqAppNo =rh.ReqStaffAppNo or r.ReqStaffAppNo=rh.ReqStaffAppNo) and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' order by r.RequestCode";
                }
                else if (ddl_search.SelectedItem.Value == "1")
                {
                    query = "select distinct ReqAppStatus,RequisitionPK,CASE WHEN r.RequestType = 1 THEN 'Item Request' WHEN r.RequestType = 2 THEN 'Service Request' WHEN r.RequestType = 3 THEN 'Visitor Appointment Request' WHEN r.RequestType = 4 THEN 'Complaints' WHEN r.RequestType = 5 THEN 'Leave Request' WHEN r.RequestType = 6 THEN 'Gate Pass' When r.RequestType=7 then 'Event Request' END RequestType,case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqAppNo,r.ReqStaffAppNo from RQ_Requisition r,RQ_RequestHierarchy rh where LeaveFrom between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and  r.RequestType =rh.RequestType and r.ReqAppStatus=0 and (r.ReqAppNo =rh.ReqStaffAppNo or r.ReqStaffAppNo=rh.ReqStaffAppNo) and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' order by r.RequestCode";

                }

            }
        }
        else if (rdo_reject.Checked == true)
        {
            if (staffcodesession.Trim() != "" && staffcodesession.Trim() != null)
            {
                if (ddl_search.SelectedItem.Value == "0")//delsi0608
                {

                    app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                    query = "select distinct ReqAppStatus,RequisitionPK,CASE WHEN r.RequestType = 1 THEN 'Item Request' WHEN r.RequestType = 2 THEN 'Service Request' WHEN r.RequestType = 3 THEN 'Visitor Appointment Request' WHEN r.RequestType = 4 THEN 'Complaints' WHEN r.RequestType = 5 THEN 'Leave Request' WHEN r.RequestType = 6 THEN 'Gate Pass' When r.RequestType=7 then 'Event Request' END RequestType,case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqAppNo,r.ReqStaffAppNo from RQ_Requisition r,RQ_RequestHierarchy rh where RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and  r.RequestType =rh.RequestType and r.ReqAppStatus=2 and (r.ReqAppNo =rh.ReqStaffAppNo or r.ReqStaffAppNo=rh.ReqStaffAppNo) and rh.ReqAppStaffAppNo ='" + app + "' and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' order by r.RequestCode";
                }
                else if (ddl_search.SelectedItem.Value == "1")
                {
                    app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                    query = "select distinct ReqAppStatus,RequisitionPK,CASE WHEN r.RequestType = 1 THEN 'Item Request' WHEN r.RequestType = 2 THEN 'Service Request' WHEN r.RequestType = 3 THEN 'Visitor Appointment Request' WHEN r.RequestType = 4 THEN 'Complaints' WHEN r.RequestType = 5 THEN 'Leave Request' WHEN r.RequestType = 6 THEN 'Gate Pass' When r.RequestType=7 then 'Event Request' END RequestType,case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqAppNo,r.ReqStaffAppNo from RQ_Requisition r,RQ_RequestHierarchy rh where LeaveFrom between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and  r.RequestType =rh.RequestType and r.ReqAppStatus=2 and (r.ReqAppNo =rh.ReqStaffAppNo or r.ReqStaffAppNo=rh.ReqStaffAppNo) and rh.ReqAppStaffAppNo ='" + app + "' and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' order by r.RequestCode";

                }

            }
            else
            {
                if (ddl_search.SelectedItem.Value == "0")//delsi0608
                {

                    query = "select distinct ReqAppStatus,RequisitionPK,CASE WHEN r.RequestType = 1 THEN 'Item Request' WHEN r.RequestType = 2 THEN 'Service Request' WHEN r.RequestType = 3 THEN 'Visitor Appointment Request' WHEN r.RequestType = 4 THEN 'Complaints' WHEN r.RequestType = 5 THEN 'Leave Request' WHEN r.RequestType = 6 THEN 'Gate Pass' When r.RequestType=7 then 'Event Request' END RequestType,case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqAppNo,r.ReqStaffAppNo from RQ_Requisition r,RQ_RequestHierarchy rh where RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and  r.RequestType =rh.RequestType and r.ReqAppStatus=2 and (r.ReqAppNo =rh.ReqStaffAppNo or r.ReqStaffAppNo=rh.ReqStaffAppNo) and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' order by r.RequestCode";
                }
                else if (ddl_search.SelectedItem.Value == "1")
                {

                    query = "select distinct ReqAppStatus,RequisitionPK,CASE WHEN r.RequestType = 1 THEN 'Item Request' WHEN r.RequestType = 2 THEN 'Service Request' WHEN r.RequestType = 3 THEN 'Visitor Appointment Request' WHEN r.RequestType = 4 THEN 'Complaints' WHEN r.RequestType = 5 THEN 'Leave Request' WHEN r.RequestType = 6 THEN 'Gate Pass' When r.RequestType=7 then 'Event Request' END RequestType,case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqAppNo,r.ReqStaffAppNo from RQ_Requisition r,RQ_RequestHierarchy rh where LeaveFrom between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and  r.RequestType =rh.RequestType and r.ReqAppStatus=2 and (r.ReqAppNo =rh.ReqStaffAppNo or r.ReqStaffAppNo=rh.ReqStaffAppNo) and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' order by r.RequestCode";
                }

            }
        }
        else if (rdo_waiting.Checked == true)
        {
            if (staffcodesession.Trim() != "" && staffcodesession.Trim() != null)
            {
                if (ddl_search.SelectedItem.Value == "0")//delsi0608
                {
                    app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                    query = "select distinct ReqAppStatus,RequisitionPK,CASE WHEN r.RequestType = 1 THEN 'Item Request' WHEN r.RequestType = 2 THEN 'Service Request' WHEN r.RequestType = 3 THEN 'Visitor Appointment Request' WHEN r.RequestType = 4 THEN 'Complaints' WHEN r.RequestType = 5 THEN 'Leave Request' WHEN r.RequestType = 6 THEN 'Gate Pass' When r.RequestType=7 then 'Event Request' END RequestType,case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqAppNo,r.ReqStaffAppNo from RQ_Requisition r,RQ_RequestHierarchy rh where RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and  r.RequestType =rh.RequestType and r.ReqAppStatus=1 and (r.ReqAppNo =rh.ReqStaffAppNo or r.ReqStaffAppNo=rh.ReqStaffAppNo) and rh.ReqAppStaffAppNo ='" + app + "' and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' order by r.RequestCode";
                }
                else if (ddl_search.SelectedItem.Value == "1")
                {

                    app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                    query = "select distinct ReqAppStatus,RequisitionPK,CASE WHEN r.RequestType = 1 THEN 'Item Request' WHEN r.RequestType = 2 THEN 'Service Request' WHEN r.RequestType = 3 THEN 'Visitor Appointment Request' WHEN r.RequestType = 4 THEN 'Complaints' WHEN r.RequestType = 5 THEN 'Leave Request' WHEN r.RequestType = 6 THEN 'Gate Pass' When r.RequestType=7 then 'Event Request' END RequestType,case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqAppNo,r.ReqStaffAppNo from RQ_Requisition r,RQ_RequestHierarchy rh where LeaveFrom between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and  r.RequestType =rh.RequestType and r.ReqAppStatus=1 and (r.ReqAppNo =rh.ReqStaffAppNo or r.ReqStaffAppNo=rh.ReqStaffAppNo) and rh.ReqAppStaffAppNo ='" + app + "' and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' order by r.RequestCode";
                }

            }
            else
            {
                if (ddl_search.SelectedItem.Value == "0")//delsi0608
                {
                    query = "select distinct ReqAppStatus,RequisitionPK,CASE WHEN r.RequestType = 1 THEN 'Item Request' WHEN r.RequestType = 2 THEN 'Service Request' WHEN r.RequestType = 3 THEN 'Visitor Appointment Request' WHEN r.RequestType = 4 THEN 'Complaints' WHEN r.RequestType = 5 THEN 'Leave Request' WHEN r.RequestType = 6 THEN 'Gate Pass' When r.RequestType=7 then 'Event Request' END RequestType,case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqAppNo,r.ReqStaffAppNo from RQ_Requisition r,RQ_RequestHierarchy rh where RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and  r.RequestType =rh.RequestType and r.ReqAppStatus=1 and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' order by r.RequestCode";
                }
                else if (ddl_search.SelectedItem.Value == "1")
                {
                    query = "select distinct ReqAppStatus,RequisitionPK,CASE WHEN r.RequestType = 1 THEN 'Item Request' WHEN r.RequestType = 2 THEN 'Service Request' WHEN r.RequestType = 3 THEN 'Visitor Appointment Request' WHEN r.RequestType = 4 THEN 'Complaints' WHEN r.RequestType = 5 THEN 'Leave Request' WHEN r.RequestType = 6 THEN 'Gate Pass' When r.RequestType=7 then 'Event Request' END RequestType,case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqAppNo,r.ReqStaffAppNo from RQ_Requisition r,RQ_RequestHierarchy rh where LeaveFrom between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and  r.RequestType =rh.RequestType and r.ReqAppStatus=1 and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' order by r.RequestCode";

                }

            }
        }
        if (query == "")
        {
            Fpspread9.Visible = false;
            lbl_all_err.Visible = true;
            lbl_all_err.Text = "Kindly Select All List ";
            div_color.Visible = false;
            div_report.Visible = false;
            btn_del_stud.Visible = false;
        }
        else
        {
            if (query != "")
            {
                ds = d2.select_method(query, hat, "Text");
                ds1 = d2.select_method(query, hat, "Text");
                if (ds.Tables[0].Rows.Count == 0)
                {
                    Fpspread9.Visible = false;
                    lbl_all_err.Visible = true;
                    lbl_all_err.Text = "No Records Found";
                    div_color.Visible = false;
                    div_report.Visible = false;
                    pheaderfilterall.Visible = false;
                    pcolumnorderall.Visible = false;
                    btn_del_stud.Visible = false;
                }
                else
                {
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        lbl_all_err.Visible = false;
                        for (int i = 0; i < cblcolumnorderall.Items.Count; i++)
                        {
                            if (cblcolumnorderall.Items[i].Selected == true)
                            {
                                hat7.Add(cblcolumnorderall.Items[i].Text, cblcolumnorderall.Items[i].Value);
                                string colvalue = cblcolumnorderall.Items[i].Text;
                                if (ItemList_all.Contains(colvalue) == false)
                                {
                                    ItemList_all.Add(cblcolumnorderall.Items[i].Text);
                                }
                                tborderall.Text = "";
                                for (int j = 0; j < ItemList_all.Count; j++)
                                {
                                    tborderall.Text = tborderall.Text + ItemList_all[j].ToString();
                                    tborderall.Text = tborderall.Text + "(" + (j + 1).ToString() + ")  ";
                                }
                            }
                            cblcolumnorderall.Items[0].Enabled = false;
                        }
                        if (ItemList_all.Count == 0)
                        {
                            for (int i = 0; i < 3; i++)
                            {
                                cblcolumnorderall.Items[i].Selected = true;
                                hat7.Add(cblcolumnorderall.Items[i].Text, cblcolumnorderall.Items[i].Value);
                                string colvalue = cblcolumnorderall.Items[i].Text;
                                if (ItemList_all.Contains(colvalue) == false)
                                {
                                    ItemList_all.Add(cblcolumnorderall.Items[i].Text);
                                }
                                tborderall.Text = "";
                                for (int j = 0; j < ItemList_all.Count; j++)
                                {
                                    tborderall.Text = tborderall.Text + ItemList_all[j].ToString();
                                    tborderall.Text = tborderall.Text + "(" + (j + 1).ToString() + ")  ";
                                }
                            }
                        }
                        Fpspread9.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                        Fpspread9.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                        Fpspread9.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                        Fpspread9.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                        Fpspread9.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread9.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
                        Fpspread9.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                        Fpspread9.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                        Fpspread9.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                        Fpspread9.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread9.Sheets[0].ColumnHeader.Cells[0, 2].Text = "View";
                        Fpspread9.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                        Fpspread9.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                        Fpspread9.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                        Fpspread9.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                        FarPoint.Web.Spread.StyleInfo style2 = new FarPoint.Web.Spread.StyleInfo();
                        style2.Font.Size = 16;
                        style2.Font.Name = "Book Antiqua";
                        style2.Font.Bold = true;
                        style2.HorizontalAlign = HorizontalAlign.Center;
                        style2.ForeColor = Color.Black;
                        style2.BackColor = Color.AliceBlue;
                        Fpspread9.Sheets[0].PageSize = Fpspread9.Sheets[0].RowCount;
                        for (int i = 0; i < ItemList_all.Count; i++)
                        {
                            string value1 = ItemList_all[i].ToString();
                            int a = value1.Length;
                            Fpspread9.Sheets[0].ColumnCount++;
                            Fpspread9.Sheets[0].ColumnHeader.Cells[Fpspread9.Sheets[0].ColumnHeader.RowCount - 1, Fpspread9.Sheets[0].ColumnCount - 1].Text = ItemList_all[i].ToString();
                            Fpspread9.Sheets[0].ColumnHeader.Cells[Fpspread9.Sheets[0].ColumnHeader.RowCount - 1, Fpspread9.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                            Fpspread9.Sheets[0].ColumnHeader.Cells[Fpspread9.Sheets[0].ColumnHeader.RowCount - 1, Fpspread9.Sheets[0].ColumnCount - 1].Font.Bold = true;
                            Fpspread9.Sheets[0].ColumnHeader.Cells[Fpspread9.Sheets[0].ColumnHeader.RowCount - 1, Fpspread9.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                        }
                        Fpspread9.Sheets[0].RowCount = 0;
                        for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                        {
                            Fpspread9.Sheets[0].RowCount++;
                            count++;
                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 0].Text = count.ToString();
                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["RequisitionPK"]);
                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 0].Locked = true;
                            FarPoint.Web.Spread.CheckBoxCellType cb = new FarPoint.Web.Spread.CheckBoxCellType();
                            cb.AutoPostBack = true;
                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 1].CellType = cb;
                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                            FarPoint.Web.Spread.ButtonCellType btn = new FarPoint.Web.Spread.ButtonCellType();
                            btn.Text = "View";
                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 2].CellType = btn;
                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                            int c = 2;
                            if (ItemList_all.Count > 0 && hat7.Count > 0)
                            {
                                if (ItemList_all.Count == hat7.Count)
                                {
                                    for (int j = 0; j < ItemList_all.Count; j++)
                                    {
                                        string k = Convert.ToString(ItemList_all[j].ToString());
                                        string names = Convert.ToString(hat7[k].ToString());
                                        c++;
                                        string val = ds.Tables[0].Rows[i][names].ToString();
                                        string staffname = "";
                                        if (names == "ReqAppNo")
                                        {
                                            string sname = "";
                                            string ssname = "";
                                            if (val != "")
                                            {
                                                sname = d2.GetFunction("select stud_name from applyn where app_no='" + val + "'");
                                                ssname = d2.GetFunction("select staff_code  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and appl_id='" + val + "'");
                                                if (sname != "" && sname != "0")
                                                {
                                                    Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = sname;
                                                }
                                                else if (ssname != "" || ssname != "0")
                                                {
                                                    staffname = d2.GetFunction("select staff_name from staffmaster where staff_code='" + ssname + "'");
                                                    Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = staffname;
                                                }
                                                else
                                                {
                                                    ssname = "";
                                                    Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = ssname;
                                                }
                                            }
                                            else
                                            {
                                                ssname = "";
                                                Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = ssname;
                                            }
                                        }
                                        else
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                        }
                                        string ReqAppStatus = Convert.ToString(ds.Tables[0].Rows[i]["ReqAppStatus"]);
                                        if (ReqAppStatus == "1")
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 1].Locked = true;
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                        }
                                        else if (ReqAppStatus == "0")
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                        }
                                        else if (ReqAppStatus == "2")
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                        }
                                        else if (ReqAppStatus == "3")
                                        {
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#CC66FF");
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#CC66FF");
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#CC66FF");
                                            Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#CC66FF");
                                        }
                                        Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Font.Name = "Book Antiqua";
                                        Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Font.Size = FontUnit.Medium;
                                        Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                        Fpspread9.Sheets[0].Cells[Fpspread9.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                    }
                                }
                            }
                        }
                    }
                    Fpspread9.Sheets[0].PageSize = Fpspread9.Sheets[0].RowCount;
                    div_color.Visible = true;
                    Fpspread9.Width = 850;
                    Fpspread9.Height = 300;
                    pheaderfilterall.Visible = true;
                    pcolumnorderall.Visible = true;
                    Fpspread9.Visible = true;
                    if (rdo_request.Checked == true)
                    {
                        btn_del_stud.Visible = true;
                        btn_approval.Visible = false; //poo
                        btn_reject.Visible = false;   //poo 
                        btn_del_stud1.Visible = false; // poo
                    }
                    if (rdo_approval.Checked == true)
                    {
                        btn_approval.Visible = true;
                        btn_reject.Visible = true;
                        btn_del_stud.Visible = false; // poo
                        btn_del_stud1.Visible = false; // poo
                    }
                    if (rdo_reject.Checked == true) //poo
                    {
                        btn_del_stud.Visible = false;
                        btn_del_stud1.Visible = false; // poo 07.11.17
                        btn_approval.Visible = false; //poo
                        btn_reject.Visible = false;   //poo 
                    }
                    if (rdo_waiting.Checked == true)
                    {
                        btn_del_stud.Visible = false;
                        btn_del_stud1.Visible = true; // poo 07.11.17
                        btn_approval.Visible = false; //poo
                        btn_reject.Visible = false;   //poo 
                    }
                    div_report.Visible = true;
                }
            }
        }
    }
    public void imgbtn_item_Click(object sender, EventArgs e)
    {
        td_stud.BgColor = "#c4c4c4";
        td_staff.BgColor = "white";
        td_par.BgColor = "white";
        td_comp.BgColor = "white";
        td_indi.BgColor = "white";
        td_mag.BgColor = "white";
        td_all.BgColor = "white";
        td3.BgColor = "white";
        td2.BgColor = "white";
        lbl_studrptroll.Visible = false;
        txt_studrptroll.Visible = false;
        lbl_studrptname.Visible = false;
        txt_studrptname.Visible = false;
        rdo_gatestudent.Visible = false;
        rdo_gatestaff.Visible = false;
        btn_rptfind.Visible = false;
        item_div.Visible = true;
        service_div.Visible = false;
        vist_div.Visible = false;
        comp_div.Visible = false;
        leave_div.Visible = false;
        gate_div.Visible = false;
        div_all.Visible = false;
        div_event.Visible = false;
        lbl_certErr.Visible = false;
        item_req();
        loadhour();
        loadminits();
        timevalue();
        cbdept.Visible = false;
    }
    public void item_req()
    {
        try
        {
            string query = "";
            Fpspread1.Sheets[0].Visible = true;
            pheaderfilter0.Visible = true;
            pcolumnorder0.Visible = true;
            Fpspread1.Sheets[0].RowHeader.Visible = false;
            Fpspread1.CommandBar.Visible = false;
            Fpspread1.Sheets[0].AutoPostBack = false;
            Fpspread1.Sheets[0].RowCount = 0;
            Fpspread1.Sheets[0].ColumnHeader.RowCount = 1;
            Fpspread1.Sheets[0].ColumnCount = 3;
            FarPoint.Web.Spread.StyleInfo darkstyle2 = new FarPoint.Web.Spread.StyleInfo();
            darkstyle2.BackColor = ColorTranslator.FromHtml("#0CA6CA");
            darkstyle2.ForeColor = Color.Black;
            darkstyle2.HorizontalAlign = HorizontalAlign.Center;
            Fpspread1.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle2;
            string[] ay = txt_fromdate.Text.Split('/');
            string[] ay1 = txt_todate.Text.Split('/');
            DateTime dt = new DateTime();
            DateTime dt1 = new DateTime();
            dt = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
            dt1 = Convert.ToDateTime(ay1[1] + "/" + ay1[0] + "/" + ay1[2]);
            string app = "";

            app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            if (rdo_request.Checked == true)
            {
                if (staffcodesession.Trim() != "" && staffcodesession.Trim() != null)
                {
                    app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                    query = "SELECT ReqApproveStage,ReqAppStatus,RequisitionPK,CASE WHEN RequestType = 1 THEN 'Item Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,CASE WHEN RequestBy = 1 THEN 'Own' when RequestBy=2  then 'Others' else 'Both' END RequestBy,Remarks,ReqAppNo, case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype FROM RQ_Requisition where RequestType='1' and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and ReqAppNo in ('" + app + "') ";
                }
                else
                {
                    query = "SELECT ReqApproveStage,ReqAppStatus,RequisitionPK, CASE WHEN RequestType = 1 THEN 'Item Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,CASE WHEN RequestBy = 1 THEN 'Own' when RequestBy=2  then 'Others' else 'Both' END RequestBy,Remarks,ReqAppNo, case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype FROM RQ_Requisition where RequestType='1' and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' ";
                }
            }
            else if (rdo_approval.Checked == true)
            {
                app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                query = "SELECT distinct rh.ReqStaffAppNo,r.ReqApproveStage,ReqAppStatus,RequisitionPK, CASE WHEN r.RequestType = 1 THEN 'Item Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,CASE WHEN RequestBy = 1 THEN 'Own' when RequestBy=2  then 'Others' else 'Both' END RequestBy,Remarks,ReqAppNo, case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent'  end as memtype FROM RQ_Requisition r,RQ_RequestHierarchy rh where  r.RequestType =rh.RequestType and r.ReqAppNo =rh.ReqStaffAppNo and   r.RequestType='1' and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo ='" + app + "'";
                if (!string.IsNullOrEmpty(query))
                {
                    query += "    select distinct ReqApproveStage,ReqStaffAppNo from RQ_RequestHierarchy where  RequestType=1 and ReqAppStaffAppNo='" + app + "'";
                }
            }
            else if (rdo_waiting.Checked == true)
            {
                app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                //query = "SELECT distinct rh.ReqStaffAppNo,r.ReqApproveStage,ReqAppStatus,RequisitionPK,CASE WHEN r.RequestType = 1 THEN 'Item Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,CASE WHEN RequestBy = 1 THEN 'Own' when RequestBy=2  then 'Others' else 'Both' END RequestBy,Remarks,ReqAppNo, case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent'  end as memtype FROM RQ_Requisition r,RQ_RequestHierarchy rh where  r.RequestType =rh.RequestType and r.ReqAppNo =rh.ReqStaffAppNo and ReqAppStatus=1 and   r.RequestType='1' and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo ='" + app + "'";

                query = "SELECT distinct rh.ReqStaffAppNo,r.ReqApproveStage,ReqAppStatus,RequisitionPK,CASE WHEN r.RequestType = 1 THEN 'Item Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,CASE WHEN RequestBy = 1 THEN 'Own' when RequestBy=2  then 'Others' else 'Both' END RequestBy,Remarks,ReqAppNo, case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent'  end as memtype FROM RQ_Requisition r,RQ_RequestHierarchy rh where  r.ReqAppNo =rh.ReqStaffAppNo and   r.RequestType='1' and r.RequestType =rh.RequestType and (r.ReqAppStatus='1' or r.ReqStaffAppNo =rh.ReqStaffAppNo  or r.ReqAppStatus='0') and r.ReqApproveStage>=rh.ReqApproveStage and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo ='" + app + "'";

                //and (r.ReqAppStatus='1' or r.ReqStaffAppNo =rh.ReqStaffAppNo) and r.ReqApproveStage>=rh.ReqApproveStage
            }
            else if (rdo_reject.Checked == true)
            {
                query = "SELECT  distinct rh.ReqStaffAppNo,r.ReqApproveStage,ReqAppStatus,RequisitionPK,CASE WHEN r.RequestType = 1 THEN 'Item Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,CASE WHEN RequestBy = 1 THEN 'Own' when RequestBy=2  then 'Others' else 'Both' END RequestBy,Remarks,ReqAppNo, case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent'  end as memtype FROM RQ_Requisition r,RQ_RequestHierarchy rh where  r.RequestType =rh.RequestType and r.ReqAppNo =rh.ReqStaffAppNo and ReqAppStatus=2 and   r.RequestType='2' and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo ='" + app + "'";
            }
            if (query == "")
            {
                Fpspread1.Sheets[0].Visible = false;
                lbl_err_item.Visible = true;
                lbl_err_item.Text = "Kindly Select All List ";
                div_report.Visible = false;
                btn_del_stud.Visible = false;
            }
            else
            {
                if (query != "")
                {
                    ds = d2.select_method(query, hat, "Text");
                    if (ds.Tables[0].Rows.Count == 0)
                    {
                        Fpspread1.Sheets[0].Visible = false;
                        Fpspread1.Visible = false;
                        lbl_err_item.Visible = true;
                        lbl_err_item.Text = "No Records Found";
                        div_report.Visible = false;
                        pheaderfilter0.Visible = false;
                        pcolumnorder0.Visible = false;
                        btn_del_stud.Visible = false;
                    }
                    else
                    {

                        bool boolvisible1 = false;//Added by Saranyadevi 5.4.2018
                        if (ds.Tables[0].Rows.Count > 0)
                        {

                            for (int i = 0; i < cblcolumnorder0.Items.Count; i++)
                            {
                                if (cblcolumnorder0.Items[i].Selected == true)
                                {
                                    hat1.Add(cblcolumnorder0.Items[i].Text, cblcolumnorder0.Items[i].Value);
                                    string colvalue = cblcolumnorder0.Items[i].Text;
                                    if (ItemList_item.Contains(colvalue) == false)
                                    {
                                        ItemList_item.Add(cblcolumnorder0.Items[i].Text);
                                    }
                                    tborder0.Text = "";
                                    for (int j = 0; j < ItemList_item.Count; j++)
                                    {
                                        tborder0.Text = tborder0.Text + ItemList_item[j].ToString();
                                        tborder0.Text = tborder0.Text + "(" + (j + 1).ToString() + ")  ";
                                    }
                                }
                                cblcolumnorder0.Items[0].Enabled = false;
                            }
                            if (ItemList_item.Count == 0)
                            {
                                for (int i = 0; i < 3; i++)
                                {
                                    cblcolumnorder.Items[i].Selected = true;
                                    hat1.Add(cblcolumnorder0.Items[i].Text, cblcolumnorder0.Items[i].Value);
                                    string colvalue = cblcolumnorder0.Items[i].Text;
                                    if (ItemList_item.Contains(colvalue) == false)
                                    {
                                        ItemList_item.Add(cblcolumnorder0.Items[i].Text);
                                    }
                                    tborder0.Text = "";
                                    for (int j = 0; j < ItemList_item.Count; j++)
                                    {
                                        tborder0.Text = tborder0.Text + ItemList_item[j].ToString();
                                        tborder0.Text = tborder0.Text + "(" + (j + 1).ToString() + ")  ";
                                    }
                                }
                            }
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Select";
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                            Fpspread1.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                            FarPoint.Web.Spread.StyleInfo style2 = new FarPoint.Web.Spread.StyleInfo();
                            style2.Font.Size = 14;
                            style2.Font.Name = "Book Antiqua";
                            style2.Font.Bold = true;
                            style2.HorizontalAlign = HorizontalAlign.Center;
                            style2.ForeColor = Color.Black;
                            style2.BackColor = Color.AliceBlue;
                            Fpspread1.Sheets[0].PageSize = Fpspread1.Sheets[0].RowCount;
                            for (int i = 0; i < ItemList_item.Count; i++)
                            {
                                string value1 = ItemList_item[i].ToString();
                                int a = value1.Length;
                                Fpspread1.Sheets[0].ColumnCount++;
                                Fpspread1.Sheets[0].ColumnHeader.Cells[Fpspread1.Sheets[0].ColumnHeader.RowCount - 1, Fpspread1.Sheets[0].ColumnCount - 1].Text = ItemList_item[i].ToString();
                                Fpspread1.Sheets[0].ColumnHeader.Cells[Fpspread1.Sheets[0].ColumnHeader.RowCount - 1, Fpspread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                Fpspread1.Sheets[0].ColumnHeader.Cells[Fpspread1.Sheets[0].ColumnHeader.RowCount - 1, Fpspread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                Fpspread1.Sheets[0].ColumnHeader.Cells[Fpspread1.Sheets[0].ColumnHeader.RowCount - 1, Fpspread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                            }
                            Fpspread1.Sheets[0].RowCount = 0;
                            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                            {
                                //added by Saranyadevi 5.4.2018
                                bool checkAval = false;
                                if (rdo_approval.Checked == true)
                                {
                                    if (ds.Tables[1].Rows.Count > 0)
                                    {
                                        int stageCnt = 0;
                                        int.TryParse(Convert.ToString(ds.Tables[0].Rows[i]["ReqApproveStage"]), out stageCnt);
                                        stageCnt += 1;
                                        string reqStfNo = Convert.ToString(ds.Tables[0].Rows[i]["ReqStaffAppNo"]);
                                        ds.Tables[1].DefaultView.RowFilter = "ReqApproveStage='" + stageCnt + "' and ReqStaffAppNo='" + reqStfNo + "'";
                                        DataView dvs = ds.Tables[1].DefaultView;
                                        if (dvs.Count > 0)
                                            checkAval = true;
                                    }

                                }
                                else
                                    checkAval = true;
                                if (checkAval)
                                {
                                    Fpspread1.Sheets[0].RowCount++;
                                    count++;
                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Text = count.ToString();
                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["RequisitionPK"]);
                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                    FarPoint.Web.Spread.CheckBoxCellType cb = new FarPoint.Web.Spread.CheckBoxCellType();
                                    cb.AutoPostBack = true;
                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].CellType = cb;
                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                                    FarPoint.Web.Spread.ButtonCellType btn_type = new FarPoint.Web.Spread.ButtonCellType();
                                    btn_type.Text = "View";
                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].CellType = btn_type;
                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                                    string staffap = d2.GetFunction("select ReqAppNo from RQ_Requisition where ReqAppNo='" + app + "'");
                                    if (rdo_request.Checked == true)
                                    {
                                        btn_itm_save.Visible = false;
                                    }
                                    //if (app != staffap)
                                    //{
                                    //}
                                    //else
                                    //{
                                    //    btn_itm_save.Visible = true;
                                    //}
                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                                    string pk = Convert.ToString(ds.Tables[0].Rows[i]["RequisitionPK"]);
                                    string pkval = d2.GetFunction("select COUNT(*) from RQ_RequisitionDet rd, RQ_Requisition r where r.RequisitionPK =rd.RequisitionFK and r.RequestType =1 and RequisitionFK='" + pk + "' group by RequisitionFK ");
                                    int c = 2;
                                    string appstage = "";
                                    if (ItemList_item.Count > 0 && hat1.Count > 0)
                                    {
                                        if (ItemList_item.Count == hat1.Count)
                                        {
                                            for (int j = 0; j < ItemList_item.Count; j++)
                                            {
                                                string k = Convert.ToString(ItemList_item[j].ToString());
                                                string names = Convert.ToString(hat1[k].ToString());
                                                c++;
                                                string val = ds.Tables[0].Rows[i][names].ToString();
                                                string staffname = "";
                                                if (names == "ReqAppNo")
                                                {
                                                    if (val != "")
                                                    {
                                                        string staffcode = d2.GetFunction("select staff_code  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and appl_id='" + val + "'");
                                                        staffname = d2.GetFunction("select staff_name from staffmaster where staff_code='" + staffcode + "'");
                                                    }
                                                    else
                                                    {
                                                        staffname = "";
                                                    }
                                                }
                                                if (names == "ReqAppStatus")
                                                {
                                                    if (val == "0")
                                                    {
                                                        appstage = "Not Approved";
                                                    }
                                                    else if (val == "1")
                                                    {
                                                        appstage = "Approved";
                                                    }
                                                    else if (val == "2")
                                                    {
                                                        appstage = "Rejected";
                                                    }
                                                }
                                                if (names == "ReqAppStatus")
                                                {
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Text = appstage;
                                                }
                                                else if (names == "ReqAppNo")
                                                {
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Text = staffname;
                                                }
                                                else if (names == "RequisitionPK")
                                                {
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Text = pkval;
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                                }
                                                else if (names == "ReqApproveStage")
                                                {
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                                }
                                                else
                                                {
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                                }
                                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Font.Name = "Book Antiqua";
                                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Font.Size = FontUnit.Medium;
                                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                                string ReqAppStatus = Convert.ToString(ds.Tables[0].Rows[i]["ReqAppStatus"]);
                                                if (rdo_waiting.Checked == true)
                                                {
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                    //Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].Locked = true;
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                }

                                                else if (ReqAppStatus == "1")
                                                {
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].Locked = true;
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                }
                                                else if (ReqAppStatus == "0")
                                                {
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                                }
                                                else if (ReqAppStatus == "2")
                                                {
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                                    Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                                }
                                                Fpspread1.Sheets[0].Cells[Fpspread1.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                            }
                                        }
                                        else
                                        {
                                            CheckBox_column3.Checked = true;
                                            ItemList_item.Clear();
                                            hat4.Clear();
                                            return;
                                        }
                                        boolvisible1 = true;
                                    }
                                }
                            }
                        }
                        if (boolvisible1)
                        {
                            Fpspread1.Sheets[0].PageSize = Fpspread1.Sheets[0].RowCount;
                            if (CheckBox_column0.Checked == true)
                            {
                                Fpspread1.Width = 900;
                                Fpspread1.Height = 420;
                            }
                            else
                            {
                                Fpspread1.Width = 830;
                                Fpspread1.Height = 420;
                            }
                            pheaderfilter0.Visible = true;
                            pcolumnorder0.Visible = true;
                            Fpspread1.Visible = true;
                            lbl_err_item.Visible = false;
                            if (rdo_request.Checked == true)//Request
                            {
                                btn_del_stud.Visible = true;
                                btn_approval.Visible = false; //poo
                                btn_reject.Visible = false;   //poo 
                                btn_del_stud1.Visible = false; // poo
                            }
                            if (rdo_approval.Checked == true)//Waiting
                            {
                                //Modified by saranyadevi 4.4.2018
                                btn_approval.Visible = false;
                                btn_reject.Visible = false;
                                //btn_approval.Visible = true;
                                //btn_reject.Visible = true;
                                btn_del_stud.Visible = false; // poo
                                btn_del_stud1.Visible = false; // poo
                            }
                            if (rdo_reject.Checked == true) //Reject
                            {
                                btn_del_stud.Visible = false;
                                btn_del_stud1.Visible = false; // poo 07.11.17
                                btn_approval.Visible = false; //poo
                                btn_reject.Visible = false;   //poo 
                            }
                            if (rdo_waiting.Checked == true)//Approval
                            {
                                btn_del_stud.Visible = false;
                                btn_del_stud1.Visible = true; // poo 07.11.17
                                btn_approval.Visible = false; //poo
                                btn_reject.Visible = false;   //poo 
                            }
                            div_report.Visible = true;
                        }
                        //Added By Saranyadevi 5.4.2018
                        else
                        {
                            Fpspread1.Sheets[0].Visible = false;
                            Fpspread1.Visible = false;
                            lbl_err_item.Visible = true;
                            lbl_err_item.Text = "No Records Found";
                            div_report.Visible = false;
                            pheaderfilter0.Visible = false;
                            pcolumnorder0.Visible = false;
                            btn_del_stud.Visible = false;
                            btn_del_stud1.Visible = false;
                            div_color.Visible = false;
                            btn_approval.Visible = false;
                            btn_reject.Visible = false;
                        }
                    }
                }
            }
        }
        catch
        {
        }
    }
    public void imgbtn_service_Click(object sender, EventArgs e)
    {
        td_stud.BgColor = "white";
        td_staff.BgColor = "#c4c4c4";
        td_par.BgColor = "white";
        td_comp.BgColor = "white";
        td_indi.BgColor = "white";
        td_mag.BgColor = "white";
        td_all.BgColor = "white";
        td3.BgColor = "white";
        td2.BgColor = "white";
        lbl_studrptroll.Visible = false;
        txt_studrptroll.Visible = false;
        lbl_studrptname.Visible = false;
        txt_studrptname.Visible = false;
        rdo_gatestudent.Visible = false;
        rdo_gatestaff.Visible = false;
        btn_rptfind.Visible = false;
        service_div.Visible = true;
        item_div.Visible = false;
        vist_div.Visible = false;
        div_event.Visible = false;
        comp_div.Visible = false;
        leave_div.Visible = false;
        gate_div.Visible = false;
        div_all.Visible = false;
        lbl_certErr.Visible = false;
        service();
        loadhour();
        loadminits();
        timevalue();
        cbdept.Visible = false;
    }
    public void service()
    {
        Fpspread2.Sheets[0].Visible = true;
        Fpspread2.Sheets[0].RowHeader.Visible = false;
        Fpspread2.CommandBar.Visible = false;
        Fpspread2.Sheets[0].AutoPostBack = false;
        Fpspread2.Sheets[0].RowCount = 0;
        Fpspread2.Sheets[0].ColumnHeader.RowCount = 1;
        Fpspread2.Sheets[0].ColumnCount = 3;
        FarPoint.Web.Spread.StyleInfo darkstyle1 = new FarPoint.Web.Spread.StyleInfo();
        darkstyle1.BackColor = ColorTranslator.FromHtml("#0CA6CA");
        darkstyle1.ForeColor = Color.Black;
        darkstyle1.HorizontalAlign = HorizontalAlign.Center;
        Fpspread2.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle1;
        string[] ay = txt_fromdate.Text.Split('/');
        string[] ay1 = txt_todate.Text.Split('/');
        DateTime dt = new DateTime();
        DateTime dt1 = new DateTime();
        dt = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
        dt1 = Convert.ToDateTime(ay1[1] + "/" + ay1[0] + "/" + ay1[2]);
        string app = "";
        string query = "";
        if (rdo_request.Checked == true)
        {
            if (staffcodesession.Trim() != "" && staffcodesession.Trim() != null)
            {
                app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                query = "SELECT ReqApproveStage,ReqAppStatus,RequisitionPK, CASE WHEN RequestType = 2 THEN 'Service' END RequestType,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,CASE WHEN RequestBy = 1 THEN 'Own' when RequestBy=2  then 'Others' else 'Both' END RequestBy,Remarks,ReqAppNo, case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype FROM RQ_Requisition where RequestType='2' and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and ReqAppNo in ('" + app + "') ";
            }
            else
            {
                query = "SELECT ReqApproveStage,ReqAppStatus,RequisitionPK, CASE WHEN RequestType = 2 THEN 'Service' END RequestType,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,CASE WHEN RequestBy = 1 THEN 'Own' when RequestBy=2  then 'Others' else 'Both' END RequestBy,Remarks,ReqAppNo, case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype FROM RQ_Requisition where RequestType='2' and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' ";
            }
        }
        else if (rdo_approval.Checked == true)
        {
            app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            query = "SELECT r.ReqApproveStage,ReqAppStatus,RequisitionPK, CASE WHEN r.RequestType = 2 THEN 'Service' END RequestType, RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,CASE WHEN RequestBy = 1 THEN 'Own' when RequestBy=2  then 'Others' else 'Both' END RequestBy,Remarks,ReqAppNo, case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype FROM  RQ_Requisition r,RQ_RequestHierarchy rh where  r.RequestType =rh.RequestType and r.ReqAppNo =rh.ReqStaffAppNo and r.ReqAppStatus='0' and  r.RequestType='2' and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo ='" + app + "'";
        }
        else if (rdo_waiting.Checked == true)
        {
            app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            query = "SELECT r.ReqApproveStage,ReqAppStatus,RequisitionPK, CASE WHEN r.RequestType = 2 THEN 'Service' END RequestType, RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,CASE WHEN RequestBy = 1 THEN 'Own' when RequestBy=2  then 'Others' else 'Both' END RequestBy,Remarks,ReqAppNo, case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype FROM  RQ_Requisition r,RQ_RequestHierarchy rh where  r.RequestType =rh.RequestType and r.ReqAppNo =rh.ReqStaffAppNo and  r.RequestType='2'and r.ReqAppStatus='1' and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo ='" + app + "'";
        }
        else if (rdo_reject.Checked == true)
        {
            app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            query = "SELECT r.ReqApproveStage,ReqAppStatus,RequisitionPK, CASE WHEN r.RequestType = 2 THEN 'Service' END RequestType, RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,CASE WHEN RequestBy = 1 THEN 'Own' when RequestBy=2  then 'Others' else 'Both' END RequestBy,Remarks,ReqAppNo, case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype FROM  RQ_Requisition r,RQ_RequestHierarchy rh where  r.RequestType =rh.RequestType and r.ReqAppNo =rh.ReqStaffAppNo and  r.RequestType='2'and r.ReqAppStatus='2' and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo ='" + app + "'";
        }
        ds = d2.select_method_wo_parameter(query, "Text");
        if (query == "")
        {
            Fpspread2.Sheets[0].Visible = false;
            lbl_err_staff.Visible = true;
            lbl_err_staff.Text = "Kindly Select All List ";
            div_report.Visible = false;
            btn_del_stud.Visible = false;
        }
        else
        {
            if (query != "")
            {
                ds = d2.select_method(query, hat, "Text");
                if (ds.Tables[0].Rows.Count == 0)
                {
                    Fpspread2.Sheets[0].Visible = false;
                    Fpspread2.Visible = false;
                    lbl_err_staff.Visible = true;
                    lbl_err_staff.Text = "No Records Found";
                    div_report.Visible = false;
                    pheaderfilter.Visible = false;
                    pcolumnorder.Visible = false;
                    btn_del_stud.Visible = false;
                }
                else
                {
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        lbl_err_staff.Visible = false;
                        for (int i = 0; i < cblcolumnorder.Items.Count; i++)
                        {
                            if (cblcolumnorder.Items[i].Selected == true)
                            {
                                hat.Add(cblcolumnorder.Items[i].Text, cblcolumnorder.Items[i].Value);
                                string colvalue = cblcolumnorder.Items[i].Text;
                                if (ItemList_service.Contains(colvalue) == false)
                                {
                                    ItemList_service.Add(cblcolumnorder.Items[i].Text);
                                }
                                tborder.Text = "";
                                for (int j = 0; j < ItemList_service.Count; j++)
                                {
                                    tborder.Text = tborder.Text + ItemList_service[j].ToString();
                                    tborder.Text = tborder.Text + "(" + (j + 1).ToString() + ")  ";
                                }
                            }
                            cblcolumnorder.Items[0].Enabled = false;
                        }
                        if (ItemList_service.Count == 0)
                        {
                            for (int i = 0; i < 3; i++)
                            {
                                cblcolumnorder.Items[i].Selected = true;
                                hat.Add(cblcolumnorder.Items[i].Text, cblcolumnorder.Items[i].Value);
                                string colvalue = cblcolumnorder.Items[i].Text;
                                if (ItemList_service.Contains(colvalue) == false)
                                {
                                    ItemList_service.Add(cblcolumnorder.Items[i].Text);
                                }
                                tborder.Text = "";
                                for (int j = 0; j < ItemList_service.Count; j++)
                                {
                                    tborder.Text = tborder.Text + ItemList_service[j].ToString();
                                    tborder.Text = tborder.Text + "(" + (j + 1).ToString() + ")  ";
                                }
                            }
                        }
                        Fpspread2.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                        Fpspread2.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                        Fpspread2.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                        Fpspread2.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                        Fpspread2.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread2.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
                        Fpspread2.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                        Fpspread2.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                        Fpspread2.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                        Fpspread2.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread2.Sheets[0].ColumnHeader.Cells[0, 2].Text = "View";
                        Fpspread2.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                        Fpspread2.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                        Fpspread2.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                        Fpspread2.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                        FarPoint.Web.Spread.StyleInfo style2 = new FarPoint.Web.Spread.StyleInfo();
                        style2.Font.Size = 14;
                        style2.Font.Name = "Book Antiqua";
                        style2.Font.Bold = true;
                        style2.HorizontalAlign = HorizontalAlign.Center;
                        style2.ForeColor = Color.Black;
                        style2.BackColor = Color.AliceBlue;
                        Fpspread2.Sheets[0].PageSize = Fpspread2.Sheets[0].RowCount;
                        for (int i = 0; i < ItemList_service.Count; i++)
                        {
                            string value1 = ItemList_service[i].ToString();
                            int a = value1.Length;
                            Fpspread2.Sheets[0].ColumnCount++;
                            Fpspread2.Sheets[0].ColumnHeader.Cells[Fpspread2.Sheets[0].ColumnHeader.RowCount - 1, Fpspread2.Sheets[0].ColumnCount - 1].Text = ItemList_service[i].ToString();
                            Fpspread2.Sheets[0].ColumnHeader.Cells[Fpspread2.Sheets[0].ColumnHeader.RowCount - 1, Fpspread2.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                            Fpspread2.Sheets[0].ColumnHeader.Cells[Fpspread2.Sheets[0].ColumnHeader.RowCount - 1, Fpspread2.Sheets[0].ColumnCount - 1].Font.Bold = true;
                            Fpspread2.Sheets[0].ColumnHeader.Cells[Fpspread2.Sheets[0].ColumnHeader.RowCount - 1, Fpspread2.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                        }
                        Fpspread2.Sheets[0].RowCount = 0;
                        for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                        {
                            Fpspread2.Sheets[0].RowCount++;
                            count++;
                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 0].Text = count.ToString();
                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["RequisitionPK"]);
                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                            FarPoint.Web.Spread.CheckBoxCellType cb = new FarPoint.Web.Spread.CheckBoxCellType();
                            cb.AutoPostBack = true;
                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 1].CellType = cb;
                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                            FarPoint.Web.Spread.ButtonCellType btn = new FarPoint.Web.Spread.ButtonCellType();
                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 2].CellType = btn;
                            btn.Text = "View";
                            string staffap = d2.GetFunction("select ReqAppNo from RQ_Requisition where ReqAppNo='" + app + "'");
                            if (rdo_request.Checked == true)
                            {
                                btn_ser_save.Enabled = false;
                                //Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 2].Column.Locked = true;
                            }
                            else
                            {
                                btn_ser_save.Enabled = true;
                            }
                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                            string pk = Convert.ToString(ds.Tables[0].Rows[i]["RequisitionPK"]);
                            string pkval = d2.GetFunction("select COUNT(*) from RQ_RequisitionDet rd, RQ_Requisition r where r.RequisitionPK =rd.RequisitionFK and r.RequestType =2 and RequisitionFK='" + pk + "' group by RequisitionFK ");
                            string appstage = "";
                            int c = 2;
                            if (ItemList_service.Count > 0 && hat.Count > 0)
                            {
                                if (ItemList_service.Count == hat.Count)
                                {
                                    for (int j = 0; j < ItemList_service.Count; j++)
                                    {
                                        string k = Convert.ToString(ItemList_service[j].ToString());
                                        string names = Convert.ToString(hat[k].ToString());
                                        string val = ds.Tables[0].Rows[i][names].ToString();
                                        c++;
                                        FarPoint.Web.Spread.TextCellType textcel_type = new FarPoint.Web.Spread.TextCellType();
                                        Fpspread2.Sheets[0].Columns[2].CellType = textcel_type;
                                        string staffname = "";
                                        if (names == "ReqAppNo")
                                        {
                                            if (val != "")
                                            {
                                                string staffcode = d2.GetFunction("select staff_code  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and appl_id='" + val + "'");
                                                staffname = d2.GetFunction("select staff_name from staffmaster where staff_code='" + staffcode + "'");
                                            }
                                            else
                                            {
                                                staffname = "";
                                            }
                                        }
                                        if (names == "ReqAppStatus")
                                        {
                                            if (val == "0")
                                            {
                                                appstage = "Not Approved";
                                            }
                                            else if (val == "1")
                                            {
                                                appstage = "Approved";
                                            }
                                            else if (val == "2")
                                            {
                                                appstage = "Rejected";
                                            }
                                        }
                                        if (names == "ReqAppStatus")
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Text = appstage;
                                        }
                                        else if (names == "ReqAppNo")
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Text = staffname;
                                        }
                                        else if (names == "ReqApproveStage")
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                        }
                                        else if (names == "RequisitionPK")
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Text = pkval;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                        }
                                        else
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                        }
                                        string ReqAppStatus = Convert.ToString(ds.Tables[0].Rows[i]["ReqAppStatus"]);
                                        if (ReqAppStatus == "1")
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 1].Locked = true;
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                        }
                                        else if (ReqAppStatus == "0")
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                        }
                                        else if (ReqAppStatus == "2")
                                        {
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                            Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                        }
                                        Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                        Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Font.Name = "Book Antiqua";
                                        Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Font.Size = FontUnit.Medium;
                                        Fpspread2.Sheets[0].Cells[Fpspread2.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                    }
                                }
                            }
                        }
                    }
                    Fpspread2.Sheets[0].PageSize = Fpspread2.Sheets[0].RowCount;
                    if (CheckBox_column.Checked == true)
                    {
                        Fpspread2.Width = 900;
                        Fpspread2.Height = 420;
                    }
                    else
                    {
                        Fpspread2.Width = 800;
                        Fpspread2.Height = 420;
                    }
                    pheaderfilter.Visible = true;
                    pcolumnorder.Visible = true;
                    Fpspread2.Visible = true;
                    div_report.Visible = true;
                    if (rdo_request.Checked == true)
                    {
                        btn_del_stud.Visible = true;
                        btn_approval.Visible = false; //poo
                        btn_reject.Visible = false;   //poo 
                        btn_del_stud1.Visible = false; // poo
                    }
                    if (rdo_approval.Checked == true)
                    {
                        btn_approval.Visible = true;
                        btn_reject.Visible = true;
                        btn_del_stud.Visible = false; // poo
                        btn_del_stud1.Visible = false; // poo
                    }
                    if (rdo_reject.Checked == true) //poo
                    {
                        btn_del_stud.Visible = false;
                        btn_del_stud1.Visible = false; // poo 07.11.17
                        btn_approval.Visible = false; //poo
                        btn_reject.Visible = false;   //poo 
                    }
                    if (rdo_waiting.Checked == true)
                    {
                        btn_del_stud.Visible = false;
                        btn_del_stud1.Visible = true; // poo 07.11.17
                        btn_approval.Visible = false; //poo
                        btn_reject.Visible = false;   //poo 
                    }

                }
            }
        }
    }
    public void imgbtn_visitor_Click(object sender, EventArgs e)
    {
        td_stud.BgColor = "white";
        td_staff.BgColor = "white";
        td_par.BgColor = "#c4c4c4";
        td_comp.BgColor = "white";
        td3.BgColor = "white";
        td_indi.BgColor = "white";
        td_mag.BgColor = "white";
        td_all.BgColor = "white";
        td2.BgColor = "white";
        lbl_studrptroll.Visible = false;
        txt_studrptroll.Visible = false;
        lbl_studrptname.Visible = false;
        txt_studrptname.Visible = false;
        rdo_gatestudent.Visible = false;
        rdo_gatestaff.Visible = false;
        btn_rptfind.Visible = false;
        div_event.Visible = false;
        service_div.Visible = false;
        item_div.Visible = false;
        vist_div.Visible = true;
        service_div.Visible = false;
        comp_div.Visible = false;
        leave_div.Visible = false;
        gate_div.Visible = false;
        div_all.Visible = false;
        lbl_certErr.Visible = false;
        visitor();
        loadhour();
        loadminits();
        timevalue();
        cbdept.Visible = false;
    }
    public void visitor()
    {
        lbl_norec.Visible = false;
        string appstatus = "";
        string appstage = "";
        Fpspread3.Sheets[0].Visible = true;
        FarPoint.Web.Spread.StyleInfo darkstyle33 = new FarPoint.Web.Spread.StyleInfo();
        darkstyle33.BackColor = ColorTranslator.FromHtml("#0CA6CA");
        darkstyle33.ForeColor = Color.Black;
        darkstyle33.HorizontalAlign = HorizontalAlign.Center;
        Fpspread3.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle33;
        Fpspread3.Sheets[0].PageSize = Fpspread3.Sheets[0].RowCount;
        Fpspread3.Sheets[0].RowHeader.Visible = false;
        Fpspread3.CommandBar.Visible = false;
        Fpspread3.Sheets[0].AutoPostBack = false;
        Fpspread3.Sheets[0].RowCount = 0;
        string[] ay = txt_fromdate.Text.Split('/');
        string[] ay1 = txt_todate.Text.Split('/');
        int memtype = 3;
        DateTime dt = new DateTime();
        DateTime dt1 = new DateTime();
        dt = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
        dt1 = Convert.ToDateTime(ay1[1] + "/" + ay1[0] + "/" + ay1[2]);
        string query = "";
        string app = "";
        if (rdo_request.Checked == true)
        {
            if (staffcodesession.Trim() != "" && staffcodesession.Trim() != null)
            {
                app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                query = "SELECT RequisitionPK,ReqApproveStage,ReqAppStatus,CASE WHEN RequestType = 3 THEN 'Visitor Appointment Request' END RequestType,RequestCode,ReqAppNo,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,ReqExpectedTime,VendorCompName,VenContactName,Remarks FROM RQ_Requisition R,CO_VendorMaster V,IM_VendorContactMaster C WHERE R.VendorFK = V.VendorPK AND V.VendorPK = C.VendorFK and RequestType=3 and VendorContactFK=VendorContactPK and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and ReqAppNo in ('" + app + "')";
            }
            else
            {
                app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                query = "SELECT RequisitionPK,ReqApproveStage,ReqAppStatus,CASE WHEN RequestType = 3 THEN 'Visitor Appointment Request' END RequestType,RequestCode,ReqAppNo,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,ReqExpectedTime,VendorCompName,VenContactName,Remarks FROM RQ_Requisition R,CO_VendorMaster V,IM_VendorContactMaster C WHERE R.VendorFK = V.VendorPK AND V.VendorPK = C.VendorFK and RequestType=3  and VendorContactFK=VendorContactPK and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'";
            }
        }
        else if (rdo_approval.Checked == true)
        {
            app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            query = "SELECT r.RequisitionPK,r.ReqApproveStage,ReqAppStatus,CASE WHEN r.RequestType = 3 THEN 'Visitor Appointment Request' END RequestType,RequestCode,ReqAppNo,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,ReqExpectedTime,VendorCompName,VenContactName,Remarks FROM RQ_Requisition R,CO_VendorMaster V,IM_VendorContactMaster C,RQ_RequestHierarchy rh WHERE R.VendorFK = V.VendorPK AND V.VendorPK = C.VendorFK and r.RequestType=3 and r.ReqAppStatus=0 and  VendorContactFK=VendorContactPK and r.RequestType =rh.RequestType and r.ReqAppNo =rh.ReqStaffAppNo and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo ='" + app + "'";
        }
        else if (rdo_waiting.Checked == true)
        {
            //app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            //query = "SELECT r.RequisitionPK,r.ReqApproveStage,ReqAppStatus,CASE WHEN r.RequestType = 3 THEN 'Visitor Appointment Request' END RequestType,RequestCode,ReqAppNo,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,ReqExpectedTime,VendorCompName,VenContactName,Remarks FROM RQ_Requisition R,CO_VendorMaster V,IM_VendorContactMaster C,RQ_RequestHierarchy rh WHERE R.VendorFK = V.VendorPK AND V.VendorPK = C.VendorFK and r.RequestType=3 and r.ReqAppStatus=1 and  VendorContactFK=VendorContactPK and r.RequestType =rh.RequestType and r.ReqAppNo =rh.ReqStaffAppNo and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo ='" + app + "'";
            //magesh 7.6.18
            string checkper = d2.GetFunction("select value from Master_Settings where settings='Leave Approval Permission' and usercode='" + usercode + "' ");
            if (checkper != "3")
            {
                app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                query = "SELECT r.RequisitionPK,r.ReqApproveStage,ReqAppStatus,CASE WHEN r.RequestType = 3 THEN 'Visitor Appointment Request' END RequestType,RequestCode,ReqAppNo,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,ReqExpectedTime,VendorCompName,VenContactName,Remarks FROM RQ_Requisition R,CO_VendorMaster V,IM_VendorContactMaster C,RQ_RequestHierarchy rh WHERE R.VendorFK = V.VendorPK AND V.VendorPK = C.VendorFK and r.RequestType=3 and r.ReqAppStatus=1 and  VendorContactFK=VendorContactPK and r.RequestType =rh.RequestType and r.ReqAppNo =rh.ReqStaffAppNo and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo ='" + app + "'";
            }
            else
            {
                app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                query = "SELECT r.RequisitionPK,r.ReqApproveStage,ReqAppStatus,CASE WHEN r.RequestType = 3 THEN 'Visitor Appointment Request' END RequestType,RequestCode,ReqAppNo,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,ReqExpectedTime,VendorCompName,VenContactName,Remarks FROM RQ_Requisition R,CO_VendorMaster V,IM_VendorContactMaster C WHERE R.VendorFK = V.VendorPK AND V.VendorPK = C.VendorFK and r.RequestType=3 and r.ReqAppStatus=1 and  VendorContactFK=VendorContactPK   and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and r.ReqAppNo ='" + app + "'";
            }
        }
        else if (rdo_reject.Checked == true)
        {
            app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            query = "SELECT r.RequisitionPK,r.ReqApproveStage,ReqAppStatus,CASE WHEN r.RequestType = 3 THEN 'Visitor Appointment Request' END RequestType,RequestCode,ReqAppNo,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,ReqExpectedTime,VendorCompName,VenContactName,Remarks FROM RQ_Requisition R,CO_VendorMaster V,IM_VendorContactMaster C,RQ_RequestHierarchy rh WHERE R.VendorFK = V.VendorPK AND V.VendorPK = C.VendorFK and r.RequestType=3 and r.ReqAppStatus=2 and  VendorContactFK=VendorContactPK and r.RequestType =rh.RequestType and r.ReqAppNo =rh.ReqStaffAppNo and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo ='" + app + "'";
        }
        ds = d2.select_method_wo_parameter(query, "Text");
        if (query == "")
        {
            Fpspread3.Sheets[0].Visible = false;
            lbl_err_parent.Visible = true;
            lbl_err_parent.Text = "Kindly Select All List ";
            div_report.Visible = false;
            btn_del_stud.Visible = false;
        }
        else
        {
            if (query != "")
            {
                ds = d2.select_method(query, hat, "Text");
                if (ds.Tables[0].Rows.Count == 0)
                {
                    Fpspread3.Sheets[0].Visible = false;
                    Fpspread3.Visible = false;
                    lbl_err_parent.Visible = true;
                    lbl_err_parent.Text = "No Records Found";
                    div_report.Visible = false;
                    pheaderfilter1.Visible = false;
                    pcolumnorder1.Visible = false;
                    btn_del_stud.Visible = false;
                }
                else
                {
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        lbl_err_parent.Visible = false;
                        for (int i = 0; i < cblcolumnorder1.Items.Count; i++)
                        {
                            if (cblcolumnorder1.Items[i].Selected == true)
                            {
                                hat2.Add(cblcolumnorder1.Items[i].Text, cblcolumnorder1.Items[i].Value);
                                string colvalue = cblcolumnorder1.Items[i].Text;
                                if (ItemList_vist.Contains(colvalue) == false)
                                {
                                    ItemList_vist.Add(cblcolumnorder1.Items[i].Text);
                                }
                                tborder1.Text = "";
                                for (int j = 0; j < ItemList_vist.Count; j++)
                                {
                                    tborder1.Text = tborder1.Text + ItemList_vist[j].ToString();
                                    tborder1.Text = tborder1.Text + "(" + (j + 1).ToString() + ")  ";
                                }
                            }
                            cblcolumnorder1.Items[0].Enabled = false;
                        }
                        if (ItemList_vist.Count == 0)
                        {
                            for (int i = 0; i < 3; i++)
                            {
                                cblcolumnorder1.Items[i].Selected = true;
                                hat2.Add(cblcolumnorder1.Items[i].Text, cblcolumnorder1.Items[i].Value);
                                string colvalue = cblcolumnorder.Items[i].Text;
                                if (ItemList_vist.Contains(colvalue) == false)
                                {
                                    ItemList_vist.Add(cblcolumnorder1.Items[i].Text);
                                }
                                tborder1.Text = "";
                                for (int j = 0; j < ItemList_vist.Count; j++)
                                {
                                    tborder1.Text = tborder1.Text + ItemList_vist[j].ToString();
                                    tborder1.Text = tborder1.Text + "(" + (j + 1).ToString() + ")  ";
                                }
                            }
                        }
                        Fpspread3.Sheets[0].ColumnHeader.RowCount = 1;
                        Fpspread3.Sheets[0].ColumnCount = 3;
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 2].Text = "View";
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                        Fpspread3.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                        FarPoint.Web.Spread.StyleInfo style2 = new FarPoint.Web.Spread.StyleInfo();
                        style2.Font.Size = 14;
                        style2.Font.Name = "Book Antiqua";
                        style2.Font.Bold = true;
                        style2.HorizontalAlign = HorizontalAlign.Center;
                        style2.ForeColor = Color.Black;
                        style2.BackColor = Color.AliceBlue;
                        Fpspread3.Sheets[0].PageSize = Fpspread3.Sheets[0].RowCount;
                        for (int i = 0; i < ItemList_vist.Count; i++)
                        {
                            string value1 = ItemList_vist[i].ToString();
                            int a = value1.Length;
                            Fpspread3.Sheets[0].ColumnCount++;
                            Fpspread3.Sheets[0].ColumnHeader.Cells[Fpspread3.Sheets[0].ColumnHeader.RowCount - 1, Fpspread3.Sheets[0].ColumnCount - 1].Text = ItemList_vist[i].ToString();
                            Fpspread3.Sheets[0].ColumnHeader.Cells[Fpspread3.Sheets[0].ColumnHeader.RowCount - 1, Fpspread3.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                            Fpspread3.Sheets[0].ColumnHeader.Cells[Fpspread3.Sheets[0].ColumnHeader.RowCount - 1, Fpspread3.Sheets[0].ColumnCount - 1].Font.Bold = true;
                            Fpspread3.Sheets[0].ColumnHeader.Cells[Fpspread3.Sheets[0].ColumnHeader.RowCount - 1, Fpspread3.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                        }
                        Fpspread3.Sheets[0].RowCount = 0;
                        for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                        {
                            Fpspread3.Sheets[0].RowCount++;
                            count++;
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 0].Text = count.ToString();
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["RequisitionPK"]);
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                            FarPoint.Web.Spread.CheckBoxCellType cb = new FarPoint.Web.Spread.CheckBoxCellType();
                            cb.AutoPostBack = true;
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 1].CellType = cb;
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                            FarPoint.Web.Spread.ButtonCellType btn = new FarPoint.Web.Spread.ButtonCellType();
                            btn.Text = "View";
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 2].CellType = btn;
                            string staffap = d2.GetFunction("select ReqAppNo from RQ_Requisition where ReqAppNo='" + app + "'");
                            //if (app != staffap)
                            //{
                            //    btn_visit_save.Enabled = false;
                            //    ////Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 2].Column.Locked = true;
                            //}
                            //else
                            //{
                            //    btn_visit_save.Enabled = true;
                            //}
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                            int c = 2;
                            if (ItemList_vist.Count > 0 && hat2.Count > 0)
                            {
                                if (ItemList_vist.Count == hat2.Count)
                                {
                                    for (int j = 0; j < ItemList_vist.Count; j++)
                                    {
                                        string k = Convert.ToString(ItemList_vist[j].ToString());
                                        string names = Convert.ToString(hat2[k].ToString());
                                        string val = ds.Tables[0].Rows[i][names].ToString();
                                        c++;
                                        string staffname = "";
                                        if (names == "ReqAppNo")
                                        {
                                            if (val != "")
                                            {
                                                string staffcode = d2.GetFunction("select staff_code  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and appl_id='" + val + "'");
                                                staffname = d2.GetFunction("select staff_name from staffmaster where staff_code='" + staffcode + "'");
                                            }
                                            else
                                            {
                                                staffname = "";
                                            }
                                        }
                                        if (names == "ReqAppStatus")
                                        {
                                            if (val == "0")
                                            {
                                                appstage = "Not Approved";
                                            }
                                            else if (val == "1")
                                            {
                                                appstage = "Approved";
                                            }
                                            else if (val == "2")
                                            {
                                                appstage = "Rejected";
                                            }
                                        }
                                        if (names == "ReqAppStatus")
                                        {
                                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Text = appstage;
                                        }
                                        else if (names == "ReqAppNo")
                                        {
                                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Text = staffname;
                                        }
                                        else if (names == "ReqApproveStage")
                                        {
                                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                        }
                                        else
                                        {
                                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                        }
                                        FarPoint.Web.Spread.TextCellType textcel_type = new FarPoint.Web.Spread.TextCellType();
                                        Fpspread3.Sheets[0].Columns[2].CellType = textcel_type;
                                        string ReqAppStatus = Convert.ToString(ds.Tables[0].Rows[i]["ReqAppStatus"]);
                                        if (ReqAppStatus == "1")
                                        {
                                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 1].Locked = true;
                                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                        }
                                        else if (ReqAppStatus == "0")
                                        {
                                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                        }
                                        else if (ReqAppStatus == "2")
                                        {
                                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                            Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                        }
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Font.Name = "Book Antiqua";
                                        Fpspread3.Sheets[0].Cells[Fpspread3.Sheets[0].RowCount - 1, c].Font.Size = FontUnit.Medium;
                                    }
                                }
                            }
                        }
                    }
                    Fpspread3.Sheets[0].PageSize = Fpspread3.Sheets[0].RowCount;
                    if (CheckBox_column11.Checked == true)
                    {
                        Fpspread3.Width = 900;
                        Fpspread3.Height = 420;
                    }
                    else
                    {
                        Fpspread3.Width = 850;
                        Fpspread3.Height = 420;
                    }
                    pheaderfilter1.Visible = true;
                    pcolumnorder1.Visible = true;
                    Fpspread3.Visible = true;
                    div_report.Visible = true;
                    if (rdo_request.Checked == true)
                    {
                        btn_del_stud.Visible = true;
                        btn_approval.Visible = false; //poo
                        btn_reject.Visible = false;   //poo 
                        btn_del_stud1.Visible = false; // poo
                    }
                    if (rdo_approval.Checked == true)
                    {
                        btn_approval.Visible = true;
                        btn_reject.Visible = true;
                        btn_del_stud.Visible = false; // poo
                        btn_del_stud1.Visible = false; // poo
                    }
                    if (rdo_reject.Checked == true) //poo
                    {
                        btn_del_stud.Visible = false;
                        btn_del_stud1.Visible = false; // poo 07.11.17
                        btn_approval.Visible = false; //poo
                        btn_reject.Visible = false;   //poo 
                    }
                    if (rdo_waiting.Checked == true)
                    {
                        btn_del_stud.Visible = false;
                        btn_del_stud1.Visible = true; // poo 07.11.17
                        btn_approval.Visible = false; //poo
                        btn_reject.Visible = false;   //poo 
                    }
                }
            }
        }
    }
    public void imgbtn_complaints_Click(object sender, EventArgs e)
    {
        td_stud.BgColor = "white";
        td_staff.BgColor = "white";
        td_par.BgColor = "white";
        td_comp.BgColor = "#c4c4c4";
        td_indi.BgColor = "white";
        td_mag.BgColor = "white";
        td_all.BgColor = "white";
        td2.BgColor = "white";
        td3.BgColor = "white";
        lbl_studrptroll.Visible = false;
        txt_studrptroll.Visible = false;
        lbl_studrptname.Visible = false;
        txt_studrptname.Visible = false;
        rdo_gatestudent.Visible = false;
        rdo_gatestaff.Visible = false;
        btn_rptfind.Visible = false;
        comp_div.Visible = true;
        item_div.Visible = false;
        div_event.Visible = false;
        service_div.Visible = false;
        vist_div.Visible = false;
        leave_div.Visible = false;
        gate_div.Visible = false;
        div_all.Visible = false;
        lbl_certErr.Visible = false;
        compl();
        loadhour();
        loadminits();
        timevalue();
        cbdept.Visible = false;
    }
    public void compl()
    {
        try
        {
            lbl_norec.Visible = false;
            Fpspread4.Sheets[0].Visible = true;
            FarPoint.Web.Spread.StyleInfo darkstyle111 = new FarPoint.Web.Spread.StyleInfo();
            darkstyle111.BackColor = ColorTranslator.FromHtml("#0CA6CA");
            darkstyle111.ForeColor = Color.Black;
            darkstyle111.HorizontalAlign = HorizontalAlign.Center;
            Fpspread4.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle111;
            Fpspread4.Sheets[0].RowHeader.Visible = false;
            Fpspread4.CommandBar.Visible = false;
            Fpspread4.Sheets[0].AutoPostBack = false;
            Fpspread4.Sheets[0].RowCount = 0;
            string[] ay = txt_fromdate.Text.Split('/');
            string[] ay1 = txt_todate.Text.Split('/');
            int memtype = 4;
            DateTime dt = new DateTime();
            DateTime dt1 = new DateTime();
            dt = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
            dt1 = Convert.ToDateTime(ay1[1] + "/" + ay1[0] + "/" + ay1[2]);
            string query = "";
            string app = "";
            if (rdo_request.Checked == true)
            {
                if (staffcodesession.Trim() != "" && staffcodesession.Trim() != null)
                {
                    app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                    query = "SELECT RequisitionPK,ReqApproveStage,ReqAppStatus,CASE WHEN RequestType = 4 THEN 'Complaints' END RequestType,RequestCode,ReqAppNo,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.ReqComplaints = T.TextCode) ReqComplaints,ReqComplaintSub,(Select TextVal FROM TextValTable T WHERE R.ReqSuggestions = T.TextCode) ReqSuggestions,Staff_Code,Staff_Name FROM RQ_Requisition R,staff_appl_master A,staffmaster M WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and RequestType=4 and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and ReqAppNo in ('" + app + "') ";
                }
                else
                {
                    app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                    query = "SELECT RequisitionPK,ReqApproveStage,ReqAppStatus,CASE WHEN RequestType = 4 THEN 'Complaints' END RequestType,RequestCode,ReqAppNo,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.ReqComplaints = T.TextCode) ReqComplaints,ReqComplaintSub,(Select TextVal FROM TextValTable T WHERE R.ReqSuggestions = T.TextCode) ReqSuggestions,Staff_Code,Staff_Name FROM RQ_Requisition R,staff_appl_master A,staffmaster M WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and RequestType=4 and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' ";
                }
            }
            else if (rdo_approval.Checked == true)
            {
                app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                query = "SELECT r.RequisitionPK,r.ReqApproveStage,ReqAppStatus,CASE WHEN r.RequestType = 4 THEN 'Complaints' END RequestType,RequestCode,r.ReqAppNo,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.ReqComplaints = T.TextCode) ReqComplaints,ReqComplaintSub,(Select TextVal FROM TextValTable T WHERE R.ReqSuggestions = T.TextCode) ReqSuggestions,Staff_Code,Staff_Name FROM RQ_Requisition R,staff_appl_master A,staffmaster M,RQ_RequestHierarchy rh WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and  r.RequestType =rh.RequestType  and r.RequestType=4 and r.ReqAppStatus=0 and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo ='" + app + "'";
            }
            else if (rdo_waiting.Checked == true)
            {
                app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                query = "SELECT r.RequisitionPK,r.ReqApproveStage,ReqAppStatus,CASE WHEN r.RequestType = 4 THEN 'Complaints' END RequestType,RequestCode,r.ReqAppNo,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.ReqComplaints = T.TextCode) ReqComplaints,ReqComplaintSub,(Select TextVal FROM TextValTable T WHERE R.ReqSuggestions = T.TextCode) ReqSuggestions,Staff_Code,Staff_Name FROM RQ_Requisition R,staff_appl_master A,staffmaster M,RQ_RequestHierarchy rh WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.ReqAppStatus=1 and r.RequestType =rh.RequestType  and r.RequestType=4 and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo ='" + app + "'";
            }
            else if (rdo_reject.Checked == true)
            {
                app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                query = "SELECT r.RequisitionPK,r.ReqApproveStage,ReqAppStatus,CASE WHEN r.RequestType = 4 THEN 'Complaints' END RequestType,RequestCode,r.ReqAppNo,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.ReqComplaints = T.TextCode) ReqComplaints,ReqComplaintSub,(Select TextVal FROM TextValTable T WHERE R.ReqSuggestions = T.TextCode) ReqSuggestions,Staff_Code,Staff_Name FROM RQ_Requisition R,staff_appl_master A,staffmaster M,RQ_RequestHierarchy rh WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.ReqAppStatus=2 and r.RequestType =rh.RequestType  and r.RequestType=4 and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo ='" + app + "'";
            }
            if (query == "")
            {
                Fpspread4.Sheets[0].Visible = false;
                lbl_err_comp.Visible = true;
                lbl_err_comp.Text = "Kindly Select All List ";
                div_report.Visible = false;
                btn_del_stud.Visible = false;
            }
            else
            {
                if (query != "")
                {
                    ds = d2.select_method(query, hat, "Text");
                    if (ds.Tables[0].Rows.Count == 0)
                    {
                        Fpspread4.Sheets[0].Visible = false;
                        Fpspread4.Visible = false;
                        lbl_err_comp.Visible = true;
                        lbl_err_comp.Text = "No Records Found";
                        div_report.Visible = false;
                        pheaderfilter2.Visible = false;
                        pcolumnorder2.Visible = false;
                        btn_del_stud.Visible = false;
                    }
                    else
                    {
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            lbl_err_comp.Visible = false;
                            for (int i = 0; i < cblcolumnorder2.Items.Count; i++)
                            {
                                if (cblcolumnorder2.Items[i].Selected == true)
                                {
                                    hat3.Add(cblcolumnorder2.Items[i].Text, cblcolumnorder2.Items[i].Value);
                                    string colvalue = cblcolumnorder2.Items[i].Text;
                                    if (ItemList_compl.Contains(colvalue) == false)
                                    {
                                        ItemList_compl.Add(cblcolumnorder2.Items[i].Text);
                                    }
                                    tborder2.Text = "";
                                    for (int j = 0; j < ItemList_compl.Count; j++)
                                    {
                                        tborder2.Text = tborder2.Text + ItemList_compl[j].ToString();
                                        tborder2.Text = tborder2.Text + "(" + (j + 1).ToString() + ")  ";
                                    }
                                }
                                cblcolumnorder2.Items[0].Enabled = false;
                            }
                            if (ItemList_compl.Count == 0)
                            {
                                for (int i = 0; i < 3; i++)
                                {
                                    cblcolumnorder2.Items[i].Selected = true;
                                    hat3.Add(cblcolumnorder2.Items[i].Text, cblcolumnorder2.Items[i].Value);
                                    string colvalue = cblcolumnorder2.Items[i].Text;
                                    if (ItemList_compl.Contains(colvalue) == false)
                                    {
                                        ItemList_compl.Add(cblcolumnorder2.Items[i].Text);
                                    }
                                    tborder2.Text = "";
                                    for (int j = 0; j < ItemList_compl.Count; j++)
                                    {
                                        tborder2.Text = tborder2.Text + ItemList_compl[j].ToString();
                                        tborder2.Text = tborder2.Text + "(" + (j + 1).ToString() + ")  ";
                                    }
                                }
                            }
                            Fpspread4.Sheets[0].ColumnHeader.RowCount = 1;
                            Fpspread4.Sheets[0].ColumnCount = 3;
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 2].Text = "View";
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                            Fpspread4.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                            FarPoint.Web.Spread.StyleInfo style2 = new FarPoint.Web.Spread.StyleInfo();
                            style2.Font.Size = 13;
                            style2.Font.Name = "Book Antiqua";
                            style2.Font.Bold = true;
                            style2.HorizontalAlign = HorizontalAlign.Center;
                            style2.ForeColor = Color.Black;
                            style2.BackColor = Color.AliceBlue;
                            Fpspread4.Sheets[0].PageSize = Fpspread4.Sheets[0].RowCount;
                            for (int i = 0; i < ItemList_compl.Count; i++)
                            {
                                string value1 = ItemList_compl[i].ToString();
                                int a = value1.Length;
                                Fpspread4.Sheets[0].ColumnCount++;
                                Fpspread4.Sheets[0].ColumnHeader.Cells[Fpspread4.Sheets[0].ColumnHeader.RowCount - 1, Fpspread4.Sheets[0].ColumnCount - 1].Text = ItemList_compl[i].ToString();
                                Fpspread4.Sheets[0].ColumnHeader.Cells[Fpspread4.Sheets[0].ColumnHeader.RowCount - 1, Fpspread4.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                Fpspread4.Sheets[0].ColumnHeader.Cells[Fpspread4.Sheets[0].ColumnHeader.RowCount - 1, Fpspread4.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                Fpspread4.Sheets[0].ColumnHeader.Cells[Fpspread4.Sheets[0].ColumnHeader.RowCount - 1, Fpspread4.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                            }
                            Fpspread4.Sheets[0].RowCount = 0;
                            DataView dv = new DataView();
                            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                            {
                                Fpspread4.Sheets[0].RowCount++;
                                count++;
                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 0].Text = count.ToString();
                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["RequisitionPK"]);
                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                FarPoint.Web.Spread.CheckBoxCellType cb = new FarPoint.Web.Spread.CheckBoxCellType();
                                cb.AutoPostBack = true;
                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 1].CellType = cb;
                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                                FarPoint.Web.Spread.ButtonCellType btn = new FarPoint.Web.Spread.ButtonCellType();
                                btn.Text = "View";
                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 2].CellType = btn;
                                //string staffap = d2.GetFunction("select ReqAppNo from RQ_Requisition where ReqAppNo='" + app + "'");
                                //if (app != staffap)
                                //{
                                //    Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 2].Column.Locked = true;
                                //}
                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                                int c = 2;
                                if (ItemList_compl.Count > 0 && hat3.Count > 0)
                                {
                                    if (ItemList_compl.Count == hat3.Count)
                                    {
                                        for (int j = 0; j < ItemList_compl.Count; j++)
                                        {
                                            string k = Convert.ToString(ItemList_compl[j].ToString());
                                            string names = Convert.ToString(hat3[k].ToString());
                                            string val = ds.Tables[0].Rows[i][names].ToString();
                                            string appstage = "";
                                            c++;
                                            FarPoint.Web.Spread.TextCellType textcel_type = new FarPoint.Web.Spread.TextCellType();
                                            Fpspread4.Sheets[0].Columns[2].CellType = textcel_type;
                                            string staffname = "";
                                            if (names == "ReqAppNo")
                                            {
                                                if (val != "")
                                                {
                                                    string staffcode = d2.GetFunction("select staff_code  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and appl_id='" + val + "'");
                                                    staffname = d2.GetFunction("select staff_name from staffmaster where staff_code='" + staffcode + "'");
                                                }
                                                else
                                                {
                                                    staffname = "";
                                                }
                                            }
                                            if (names == "ReqAppStatus")
                                            {
                                                if (val == "0")
                                                {
                                                    appstage = "Not Approved";
                                                }
                                                else if (val == "1")
                                                {
                                                    appstage = "Approved";
                                                }
                                                else if (val == "2")
                                                {
                                                    appstage = "Rejected";
                                                }
                                            }
                                            if (names == "ReqAppStatus")
                                            {
                                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Text = appstage;
                                            }
                                            else if (names == "ReqAppNo")
                                            {
                                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Text = staffname;
                                            }
                                            else if (names == "ReqApproveStage")
                                            {
                                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                            }
                                            else
                                            {
                                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                            }
                                            string ReqAppStatus = Convert.ToString(ds.Tables[0].Rows[i]["ReqAppStatus"]);
                                            if (ReqAppStatus == "1")
                                            {
                                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 1].Locked = true;
                                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                            }
                                            else if (ReqAppStatus == "0")
                                            {
                                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                            }
                                            else if (ReqAppStatus == "2")
                                            {
                                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                                Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                            }
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Font.Name = "Book Antiqua";
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Font.Size = FontUnit.Medium;
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                            Fpspread4.Sheets[0].Cells[Fpspread4.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                        }
                                    }
                                }
                            }
                        }
                        Fpspread4.Sheets[0].PageSize = Fpspread4.Sheets[0].RowCount;
                        //  div4.Visible = true;
                        Fpspread4.Visible = true;
                        if (rdo_request.Checked == true)
                        {
                            btn_del_stud.Visible = true;
                            btn_approval.Visible = false; //poo
                            btn_reject.Visible = false;   //poo 
                            btn_del_stud1.Visible = false; // poo
                        }
                        if (rdo_approval.Checked == true)
                        {
                            btn_approval.Visible = true;
                            btn_reject.Visible = true;
                            btn_del_stud.Visible = false; // poo
                            btn_del_stud1.Visible = false; // poo
                        }
                        if (rdo_reject.Checked == true) //poo
                        {
                            btn_del_stud.Visible = false;
                            btn_del_stud1.Visible = false; // poo 07.11.17
                            btn_approval.Visible = false; //poo
                            btn_reject.Visible = false;   //poo 
                        }
                        if (rdo_waiting.Checked == true)
                        {
                            btn_del_stud.Visible = false;
                            btn_del_stud1.Visible = true; // poo 07.11.17
                            btn_approval.Visible = false; //poo
                            btn_reject.Visible = false;   //poo 
                        }
                        pheaderfilter2.Visible = true;
                        pcolumnorder2.Visible = true;
                        if (CheckBox_column2.Checked == true)
                        {
                            Fpspread4.Width = 900;
                            Fpspread4.Height = 400;
                        }
                        else
                        {
                            Fpspread4.Width = 800;
                            Fpspread4.Height = 400;
                        }
                        Fpspread4.Visible = true;
                        div_report.Visible = true;
                    }
                }
            }
        }
        catch
        {
        }
    }
    public void imgbtn_leave_Click(object sender, EventArgs e)
    {
        string Staffcode = string.Empty;
        Staffcode = Convert.ToString(txt_StaffCode.Text);
        string StfName = string.Empty;
        StfName = Convert.ToString(txt_staffname.Text);
        lbl_studrptroll.Visible = false;
        txt_studrptroll.Visible = false;
        lbl_studrptname.Visible = false;
        txt_studrptname.Visible = false;
        rdo_gatestudent.Visible = false;
        rdo_gatestaff.Visible = false;
        btn_rptfind.Visible = false;
        td_stud.BgColor = "white";
        td_staff.BgColor = "white";
        td_par.BgColor = "white";
        td_comp.BgColor = "white";
        td_indi.BgColor = "#c4c4c4";
        td_mag.BgColor = "white";
        td_all.BgColor = "white";
        td3.BgColor = "white";
        td2.BgColor = "white";
        div_event.Visible = false;
        leave_div.Visible = true;
        item_div.Visible = false;
        service_div.Visible = false;
        vist_div.Visible = false;
        comp_div.Visible = false;
        gate_div.Visible = false;
        div_all.Visible = false;
        div_gate_reqstn.Visible = false;
        btnApprCancel.Visible = false;
        lbl_certErr.Visible = false;
        leave();
        loadhour();
        loadminits();
        timevalue();
        cbdept.Visible = true;
    }
    public void leave()
    {
        string Staffcode = string.Empty;
        Staffcode = Convert.ToString(txt_StaffCode.Text);
        string StfName = string.Empty;
        StfName = Convert.ToString(txt_staffname.Text);

        lbl_norec.Visible = false;
        // leaverequestsetting();
        Fpspread5.Sheets[0].Visible = true;
        FarPoint.Web.Spread.StyleInfo darkstyle111 = new FarPoint.Web.Spread.StyleInfo();
        darkstyle111.BackColor = ColorTranslator.FromHtml("#0CA6CA");
        darkstyle111.ForeColor = Color.Black;
        darkstyle111.HorizontalAlign = HorizontalAlign.Center;
        Fpspread5.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle111;
        Fpspread5.Sheets[0].RowHeader.Visible = false;
        Fpspread5.CommandBar.Visible = false;
        Fpspread5.Sheets[0].AutoPostBack = false;
        Fpspread5.Sheets[0].RowCount = 0;
        string[] ay = txt_fromdate.Text.Split('/');
        string[] ay1 = txt_todate.Text.Split('/');
        string currdate = DateTime.Now.ToString("dd/MM/yyyy");
        string[] ay2 = currdate.Split('/');
        DateTime dt = new DateTime();
        DateTime dt1 = new DateTime();
        DateTime dt2 = new DateTime();
        dt = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
        dt1 = Convert.ToDateTime(ay1[1] + "/" + ay1[0] + "/" + ay1[2]);
        dt2 = Convert.ToDateTime(ay2[1] + "/" + ay2[0] + "/" + ay2[2]);
        string app = "";
        string query = "";
        leaverequestsetting();
        string strtblname = string.Empty;
        string strvalue = string.Empty;
        string strfilterVal = string.Empty;
        string deptcode = string.Empty;
        string desicode = string.Empty;
        string stafcatg = string.Empty;
        string stftype = string.Empty;
        if (cbdept.Checked)
        {
            deptcode = Convert.ToString(getCblSelectedValue(cbl_depts));
            desicode = Convert.ToString(getCblSelectedValue(cbl_desig));
            stafcatg = Convert.ToString(getCblSelectedValue(cbl_staffcat));
            stftype = Convert.ToString(getCblSelectedValue(cbl_stafftyp));
            strtblname = " ,stafftrans st";
            strvalue = " and st.latestrec='1'";
            strfilterVal = " and a.appl_no=m.appl_no and st.staff_code=m.staff_code and st.dept_code in('" + deptcode + "') and st.desig_code in('" + desicode + "') and category_code in('" + stafcatg + "') and st.stftype in('" + stftype + "')";
        }
        if (rdo_request.Checked == true)
        {
            #region
            if (staffcodesession.Trim() != "" && staffcodesession.Trim() != null)
            {
                if (requestpermissioncheck != "3")
                {
                    if (ddl_search.SelectedItem.Value == "0")
                    {
                        app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                        query = "SELECT distinct  ReqStaffAppNo,ReqAppStaffAppNo,RequisitionPK,ReqApproveStage,ReqAppNo,ReqAppStatus,CASE WHEN RequestType = 5 THEN 'Leave Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession,(Datediff(dd,leaveFrom,leaveTo)+1)as Total,m.Staff_Code,Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE r.GateReqReason = t.MasterCode) GateReqReason,(select category from  leave_category l where r.LeaveMasterFK=l.LeaveMasterPK) LeaveMasterFK FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C " + strtblname + " WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.LeaveMasterFK = LeaveMasterPK  and RequestType=5 and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and ReqStaffAppNo in ('" + app + "') and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' " + strvalue + " " + strfilterVal + "";
                        if (!string.IsNullOrEmpty(Staffcode))
                            query = query + " and m.staff_code in('" + Staffcode + "')";
                        if (!string.IsNullOrEmpty(StfName))
                            query = query + " and Staff_Name in('" + StfName + "')";
                        query = query + "order by RequestCode";
                    }
                    else if (ddl_search.SelectedItem.Value == "1")
                    {

                        app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                        query = "SELECT distinct  ReqStaffAppNo,ReqAppStaffAppNo,RequisitionPK,ReqApproveStage,ReqAppNo,ReqAppStatus,CASE WHEN RequestType = 5 THEN 'Leave Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession,(Datediff(dd,leaveFrom,leaveTo)+1)as Total,m.Staff_Code,Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE r.GateReqReason = t.MasterCode) GateReqReason,(select category from  leave_category l where r.LeaveMasterFK=l.LeaveMasterPK) LeaveMasterFK FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C " + strtblname + " WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.LeaveMasterFK = LeaveMasterPK  and RequestType=5 and LeaveFrom between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and ReqStaffAppNo in ('" + app + "') and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' " + strvalue + " " + strfilterVal + "";
                        if (!string.IsNullOrEmpty(Staffcode))
                            query = query + " and m.staff_code in('" + Staffcode + "')";
                        if (!string.IsNullOrEmpty(StfName))
                            query = query + " and Staff_Name in('" + StfName + "')";
                        query = query + "order by RequestCode";

                    }
                }
                else if (requestpermissioncheck == "3")
                {
                    if (ddl_search.SelectedItem.Value == "0")
                    {
                        app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                        query = "SELECT distinct  ReqStaffAppNo,ReqAppStaffAppNo,RequisitionPK,ReqApproveStage,ReqAppNo,ReqAppStatus,CASE WHEN RequestType = 5 THEN 'Leave Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession,(Datediff(dd,leaveFrom,leaveTo)+1)as Total,m.Staff_Code,m.Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE r.GateReqReason = t.MasterCode) GateReqReason,(select category from  leave_category l where r.LeaveMasterFK=l.LeaveMasterPK) LeaveMasterFK FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C " + strtblname + " WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.ReqStaffAppNo='" + app + "' and r.LeaveMasterFK = LeaveMasterPK  and RequestType=5 and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' " + strvalue + " " + strfilterVal + "";
                        if (!string.IsNullOrEmpty(Staffcode))
                            query = query + " and m.staff_code in('" + Staffcode + "')";
                        if (!string.IsNullOrEmpty(StfName))
                            query = query + " and m.Staff_Name in('" + StfName + "')";
                        query = query + "order by RequestCode";
                    }
                    else if (ddl_search.SelectedItem.Value == "1")
                    {
                        app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                        query = "SELECT distinct  ReqStaffAppNo,ReqAppStaffAppNo,RequisitionPK,ReqApproveStage,ReqAppNo,ReqAppStatus,CASE WHEN RequestType = 5 THEN 'Leave Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession,(Datediff(dd,leaveFrom,leaveTo)+1)as Total,m.Staff_Code,m.Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE r.GateReqReason = t.MasterCode) GateReqReason,(select category from  leave_category l where r.LeaveMasterFK=l.LeaveMasterPK) LeaveMasterFK FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C " + strtblname + " WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.ReqStaffAppNo='" + app + "' and r.LeaveMasterFK = LeaveMasterPK  and RequestType=5 and LeaveFrom between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' " + strvalue + " " + strfilterVal + "";

                        if (!string.IsNullOrEmpty(Staffcode))
                            query = query + " and m.staff_code in('" + Staffcode + "')";
                        if (!string.IsNullOrEmpty(StfName))
                            query = query + " and m.Staff_Name in('" + StfName + "')";
                        query = query + "order by RequestCode";

                    }
                }
            }
            else
            {
                if (ddl_search.SelectedItem.Value == "0")
                {
                    app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                    query = "SELECT distinct ReqStaffAppNo,ReqAppStaffAppNo,RequisitionPK,ReqApproveStage,ReqAppNo,ReqAppStatus,CASE WHEN RequestType = 5 THEN 'Leave Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession,(Datediff(dd,leaveFrom,leaveTo)+1)as Total,m.Staff_Code,Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE r.GateReqReason = t.MasterCode) GateReqReason,(select category from  leave_category l where r.LeaveMasterFK=l.LeaveMasterPK) LeaveMasterFK FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C" + strtblname + " WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.LeaveMasterFK = LeaveMasterPK  and RequestType=5 and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' " + strvalue + " " + strfilterVal + "";

                    if (!string.IsNullOrEmpty(Staffcode))
                        query = query + " and m.staff_code in('" + Staffcode + "')";
                    if (!string.IsNullOrEmpty(StfName))
                        query = query + " and Staff_Name in('" + StfName + "')";
                    query = query + "order by RequestCode";
                }
                else if (ddl_search.SelectedItem.Value == "1")
                {
                    query = "SELECT distinct ReqStaffAppNo,ReqAppStaffAppNo,RequisitionPK,ReqApproveStage,ReqAppNo,ReqAppStatus,CASE WHEN RequestType = 5 THEN 'Leave Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession,(Datediff(dd,leaveFrom,leaveTo)+1)as Total,m.Staff_Code,Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE r.GateReqReason = t.MasterCode) GateReqReason,(select category from  leave_category l where r.LeaveMasterFK=l.LeaveMasterPK) LeaveMasterFK FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C" + strtblname + " WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.LeaveMasterFK = LeaveMasterPK  and RequestType=5 and LeaveFrom between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' " + strvalue + " " + strfilterVal + "";

                    if (!string.IsNullOrEmpty(Staffcode))
                        query = query + " and m.staff_code in('" + Staffcode + "')";
                    if (!string.IsNullOrEmpty(StfName))
                        query = query + " and Staff_Name in('" + StfName + "')";
                    query = query + "order by RequestCode";
                }
            }
            #endregion
        }
        else if (rdo_approval.Checked == true)
        {
            #region
            app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            if (app != "0")
            {
                if (requestpermissioncheck == "2")
                {
                    if (ddl_search.SelectedItem.Value == "0")
                    {
                        query = "SELECT distinct r.ReqStaffAppNo,r.ReqAppStaffAppNo,r.RequisitionPK,r.ReqApproveStage,r.ReqAppNo,ReqAppStatus,CASE WHEN r.RequestType = 5 THEN 'Leave Request' END RequestType,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession,(Datediff(dd,leaveFrom,leaveTo)+1)as Total,m.Staff_Code,Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE r.GateReqReason = t.MasterCode) GateReqReason,(select category from  leave_category l where r.LeaveMasterFK=l.LeaveMasterPK) LeaveMasterFK FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C,RQ_RequestHierarchy rh ,stafftrans st WHERE st.staff_code=M.staff_code and st.latestrec='1' and R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.LeaveMasterFK = LeaveMasterPK  and r.RequestType=5 and r.RequestType =rh.RequestType and r.ReqStaffAppNo =rh.ReqStaffAppNo and  r.ReqAppStatus=0 and  RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo ='" + app + "'  and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "'  " + strfilterVal + "";

                        if (!string.IsNullOrEmpty(Staffcode))
                            query = query + " and m.staff_code in('" + Staffcode + "')";
                        if (!string.IsNullOrEmpty(StfName))
                            query = query + " and Staff_Name in('" + StfName + "')";
                        query = query + "order by RequestCode";

                    }
                    else if (ddl_search.SelectedItem.Value == "1")
                    {
                        query = "SELECT distinct r.ReqStaffAppNo,r.ReqAppStaffAppNo,r.RequisitionPK,r.ReqApproveStage,r.ReqAppNo,ReqAppStatus,CASE WHEN r.RequestType = 5 THEN 'Leave Request' END RequestType,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession,(Datediff(dd,leaveFrom,leaveTo)+1)as Total,m.Staff_Code,Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE r.GateReqReason = t.MasterCode) GateReqReason,(select category from  leave_category l where r.LeaveMasterFK=l.LeaveMasterPK) LeaveMasterFK FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C,RQ_RequestHierarchy rh ,stafftrans st WHERE st.staff_code=M.staff_code and st.latestrec='1' and R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.LeaveMasterFK = LeaveMasterPK  and r.RequestType=5 and r.RequestType =rh.RequestType and r.ReqStaffAppNo =rh.ReqStaffAppNo and  r.ReqAppStatus=0 and  LeaveFrom between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo ='" + app + "'  and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "'  " + strfilterVal + "";

                        if (!string.IsNullOrEmpty(Staffcode))
                            query = query + " and m.staff_code in('" + Staffcode + "')";
                        if (!string.IsNullOrEmpty(StfName))
                            query = query + " and Staff_Name in('" + StfName + "')";
                        query = query + "order by RequestCode";

                    }
                    //and r.LeaveFrom>='" + dt2.ToString("MM/dd/yyyy") + "'
                }
                else
                {
                    if (ddl_search.SelectedItem.Value == "0")
                    {
                        query = "SELECT distinct r.ReqStaffAppNo,r.ReqAppStaffAppNo,r.RequisitionPK,r.ReqApproveStage,r.ReqAppNo,ReqAppStatus,CASE WHEN r.RequestType = 5 THEN 'Leave Request' END RequestType,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession,(Datediff(dd,leaveFrom,leaveTo)+1)as Total,m.Staff_Code,Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE r.GateReqReason = t.MasterCode) GateReqReason,(select category from  leave_category l where r.LeaveMasterFK=l.LeaveMasterPK) LeaveMasterFK FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C,RQ_RequestHierarchy rh" + strtblname + " WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.LeaveMasterFK = LeaveMasterPK  and r.RequestType=5 and r.RequestType =rh.RequestType and r.ReqStaffAppNo =rh.ReqStaffAppNo and  r.ReqApproveStage<rh.ReqApproveStage" + strvalue + " and ReqAppStatus=0 and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo ='" + app + "'  and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' " + strfilterVal + "";

                        if (!string.IsNullOrEmpty(Staffcode))
                            query = query + " and m.staff_code in('" + Staffcode + "')";
                        if (!string.IsNullOrEmpty(StfName))
                            query = query + " and Staff_Name in('" + StfName + "')";
                        query = query + "order by RequestCode";
                    }
                    else if (ddl_search.SelectedItem.Value == "1")
                    {
                        query = "SELECT distinct r.ReqStaffAppNo,r.ReqAppStaffAppNo,r.RequisitionPK,r.ReqApproveStage,r.ReqAppNo,ReqAppStatus,CASE WHEN r.RequestType = 5 THEN 'Leave Request' END RequestType,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession,(Datediff(dd,leaveFrom,leaveTo)+1)as Total,m.Staff_Code,Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE r.GateReqReason = t.MasterCode) GateReqReason,(select category from  leave_category l where r.LeaveMasterFK=l.LeaveMasterPK) LeaveMasterFK FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C,RQ_RequestHierarchy rh" + strtblname + " WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.LeaveMasterFK = LeaveMasterPK  and r.RequestType=5 and r.RequestType =rh.RequestType and r.ReqStaffAppNo =rh.ReqStaffAppNo and  r.ReqApproveStage<rh.ReqApproveStage" + strvalue + " and ReqAppStatus=0 and LeaveFrom between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo ='" + app + "'  and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' " + strfilterVal + "";
                        if (!string.IsNullOrEmpty(Staffcode))
                            query = query + " and m.staff_code in('" + Staffcode + "')";
                        if (!string.IsNullOrEmpty(StfName))
                            query = query + " and Staff_Name in('" + StfName + "')";
                        query = query + "order by RequestCode";
                    }
                    //and r.LeaveFrom>='" + dt2.ToString("MM/dd/yyyy") + "' // poo
                }
            }
            else
            {
                if (ddl_search.SelectedItem.Value == "0")
                {
                    query = "SELECT distinct r.ReqStaffAppNo,r.ReqAppStaffAppNo,r.RequisitionPK,r.ReqApproveStage,ReqAppStatus,r.ReqAppNo,CASE WHEN r.RequestType = 5 THEN 'Leave Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession,(Datediff(dd,leaveFrom,leaveTo)+1)as Total,m.Staff_Code,Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE r.GateReqReason = t.MasterCode) GateReqReason,(select category from  leave_category l where r.LeaveMasterFK=l.LeaveMasterPK) LeaveMasterFK FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C,RQ_RequestHierarchy rh" + strtblname + " WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.LeaveMasterFK = LeaveMasterPK  and r.RequestType=5 and r.RequestType =rh.RequestType and r.ReqStaffAppNo =rh.ReqStaffAppNo and  r.ReqAppStatus=0 and  RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' " + strvalue + " " + strfilterVal + "";
                    if (!string.IsNullOrEmpty(Staffcode))
                        query = query + " and m.staff_code in('" + Staffcode + "')";
                    if (!string.IsNullOrEmpty(StfName))
                        query = query + " and Staff_Name in('" + StfName + "')";
                    query = query + "order by RequestCode";
                }
                else if (ddl_search.SelectedItem.Value == "1")//delsi2504
                {
                    query = "SELECT distinct r.ReqStaffAppNo,r.ReqAppStaffAppNo,r.RequisitionPK,r.ReqApproveStage,ReqAppStatus,r.ReqAppNo,CASE WHEN r.RequestType = 5 THEN 'Leave Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession,(Datediff(dd,leaveFrom,leaveTo)+1)as Total,m.Staff_Code,Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE r.GateReqReason = t.MasterCode) GateReqReason,(select category from  leave_category l where r.LeaveMasterFK=l.LeaveMasterPK) LeaveMasterFK FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C,RQ_RequestHierarchy rh" + strtblname + " WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.LeaveMasterFK = LeaveMasterPK  and r.RequestType=5 and r.RequestType =rh.RequestType and r.ReqStaffAppNo =rh.ReqStaffAppNo and  r.ReqAppStatus=0 and  LeaveFrom between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' " + strvalue + " " + strfilterVal + "";
                    if (!string.IsNullOrEmpty(Staffcode))
                        query = query + " and m.staff_code in('" + Staffcode + "')";
                    if (!string.IsNullOrEmpty(StfName))
                        query = query + " and Staff_Name in('" + StfName + "')";
                    query = query + "order by RequestCode";
                }
                //and  r.LeaveFrom>='" + dt2.ToString("MM/dd/yyyy") + "'
            }
            if (!string.IsNullOrEmpty(query))
            {
                query += "    select distinct ReqApproveStage,ReqStaffAppNo from RQ_RequestHierarchy where  RequestType=5 and ReqAppStaffAppNo='" + app + "'";
            }
            #endregion
        }
        else if (rdo_waiting.Checked == true)
        {
            #region
            app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            if (app != "0")
            {
                if (requestpermissioncheck != "3")
                {
                    if (ddl_search.SelectedItem.Value == "0")// added and r.ReqStaffAppNo =rh.ReqStaffAppNo delsi0906 r.ReqAppStatus!='3'
                    {
                        query = "SELECT distinct r.ReqStaffAppNo,r.ReqAppStaffAppNo,r.RequisitionPK,r.ReqApproveStage,r.ReqAppNo,ReqAppStatus,CASE WHEN r.RequestType = 5 THEN 'Leave Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession,(Datediff(dd,leaveFrom,leaveTo)+1)as Total,m.Staff_Code,Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE r.GateReqReason = t.MasterCode) GateReqReason,(select category from  leave_category l where r.LeaveMasterFK=l.LeaveMasterPK) LeaveMasterFK FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C,RQ_RequestHierarchy rh ,stafftrans st WHERE st.staff_code=M.staff_code and st.latestrec='1' and R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.LeaveMasterFK = LeaveMasterPK  and r.RequestType=5 and r.RequestType =rh.RequestType and (r.ReqAppStatus='1' or r.ReqStaffAppNo =rh.ReqStaffAppNo) and r.ReqApproveStage>=rh.ReqApproveStage and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo ='" + app + "' and r.ReqStaffAppNo =rh.ReqStaffAppNo and r.ReqAppStatus!='3' and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' " + strfilterVal + "";//delsi0806
                        if (!string.IsNullOrEmpty(Staffcode))
                            query = query + " and m.staff_code in('" + Staffcode + "')";
                        if (!string.IsNullOrEmpty(StfName))
                            query = query + " and Staff_Name in('" + StfName + "')";
                        query = query + "order by RequestCode";

                    }
                    else if (ddl_search.SelectedItem.Value == "1")//added r.ReqAppStaffAppNo=rh.ReqAppStaffAppNo delsi0806
                    {
                        query = "SELECT distinct r.ReqStaffAppNo,r.ReqAppStaffAppNo,r.RequisitionPK,r.ReqApproveStage,r.ReqAppNo,ReqAppStatus,CASE WHEN r.RequestType = 5 THEN 'Leave Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession,(Datediff(dd,leaveFrom,leaveTo)+1)as Total,m.Staff_Code,Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE r.GateReqReason = t.MasterCode) GateReqReason,(select category from  leave_category l where r.LeaveMasterFK=l.LeaveMasterPK) LeaveMasterFK FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C,RQ_RequestHierarchy rh ,stafftrans st WHERE st.staff_code=M.staff_code and st.latestrec='1' and R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.LeaveMasterFK = LeaveMasterPK  and r.RequestType=5 and r.RequestType =rh.RequestType and (r.ReqAppStatus='1' or r.ReqStaffAppNo =rh.ReqStaffAppNo) and r.ReqApproveStage>=rh.ReqApproveStage and LeaveFrom between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo ='" + app + "' and r.ReqStaffAppNo =rh.ReqStaffAppNo and r.ReqAppStatus!='3' and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' " + strfilterVal + "";

                        if (!string.IsNullOrEmpty(Staffcode))
                            query = query + " and m.staff_code in('" + Staffcode + "')";
                        if (!string.IsNullOrEmpty(StfName))
                            query = query + " and Staff_Name in('" + StfName + "')";
                        query = query + "order by RequestCode";

                    }
                    //and r.ReqAppStatus='1' and r.ReqStaffAppNo =rh.ReqStaffAppNo 04.12.17 barath
                    //,stafftrans t WHERE t.staff_code=M.staff_code and t.latestrec='1' and
                }
                else
                {
                    if (ddl_search.SelectedItem.Value == "0")
                    {
                        query = "SELECT distinct r.ReqStaffAppNo,r.ReqAppStaffAppNo,r.RequisitionPK,r.ReqApproveStage,r.ReqAppNo,ReqAppStatus,CASE WHEN r.RequestType = 5 THEN 'Leave Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession,(Datediff(dd,leaveFrom,leaveTo)+1)as Total,m.Staff_Code,Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE r.GateReqReason = t.MasterCode) GateReqReason,(select category from  leave_category l where r.LeaveMasterFK=l.LeaveMasterPK) LeaveMasterFK FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C,RQ_RequestHierarchy rh " + strtblname + " WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.LeaveMasterFK = LeaveMasterPK  and r.RequestType=5 and  r.ReqApproveStage>=rh.ReqApproveStage and r.ReqAppStatus='1' and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'and r.ReqappStaffAppNo in ('" + app + "') and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' " + strvalue + " " + strfilterVal + "";
                        if (!string.IsNullOrEmpty(Staffcode))
                            query = query + " and m.staff_code in('" + Staffcode + "')";
                        if (!string.IsNullOrEmpty(StfName))
                            query = query + " and Staff_Name in('" + StfName + "')";
                        query = query + "order by RequestCode";
                    }
                    else if (ddl_search.SelectedItem.Value == "1")
                    {
                        query = "SELECT distinct r.ReqStaffAppNo,r.ReqAppStaffAppNo,r.RequisitionPK,r.ReqApproveStage,r.ReqAppNo,ReqAppStatus,CASE WHEN r.RequestType = 5 THEN 'Leave Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession,(Datediff(dd,leaveFrom,leaveTo)+1)as Total,m.Staff_Code,Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE r.GateReqReason = t.MasterCode) GateReqReason,(select category from  leave_category l where r.LeaveMasterFK=l.LeaveMasterPK) LeaveMasterFK FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C,RQ_RequestHierarchy rh " + strtblname + " WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.LeaveMasterFK = LeaveMasterPK  and r.RequestType=5 and  r.ReqApproveStage>=rh.ReqApproveStage and r.ReqAppStatus='1' and LeaveFrom between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'and r.ReqappStaffAppNo in ('" + app + "') and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' " + strvalue + " " + strfilterVal + "";
                        if (!string.IsNullOrEmpty(Staffcode))
                            query = query + " and m.staff_code in('" + Staffcode + "')";
                        if (!string.IsNullOrEmpty(StfName))
                            query = query + " and Staff_Name in('" + StfName + "')";
                        query = query + "order by RequestCode";

                    }
                }//r.ReqAppStatus!='2'
            }
            else
            {
                if (ddl_search.SelectedItem.Value == "0")
                {
                    query = "SELECT distinct r.ReqStaffAppNo,r.ReqAppStaffAppNo,r.RequisitionPK,r.ReqApproveStage,r.ReqAppNo,ReqAppStatus,CASE WHEN r.RequestType = 5 THEN 'Leave Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession,(Datediff(dd,leaveFrom,leaveTo)+1)as Total,m.Staff_Code,Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE r.GateReqReason = t.MasterCode) GateReqReason,(select category from  leave_category l where r.LeaveMasterFK=l.LeaveMasterPK) LeaveMasterFK FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C " + strtblname + " WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.LeaveMasterFK = LeaveMasterPK  and r.RequestType=5 and  r.ReqAppStatus=1 and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' " + strvalue + " " + strfilterVal + "";
                    if (!string.IsNullOrEmpty(Staffcode))
                        query = query + " and m.staff_code in('" + Staffcode + "')";
                    if (!string.IsNullOrEmpty(StfName))
                        query = query + " and Staff_Name in('" + StfName + "')";
                    query = query + "order by RequestCode";
                }
                else if (ddl_search.SelectedItem.Value == "1")//delsi2504
                {
                    query = "SELECT distinct r.ReqStaffAppNo,r.ReqAppStaffAppNo,r.RequisitionPK,r.ReqApproveStage,r.ReqAppNo,ReqAppStatus,CASE WHEN r.RequestType = 5 THEN 'Leave Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession,(Datediff(dd,leaveFrom,leaveTo)+1)as Total,m.Staff_Code,Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE r.GateReqReason = t.MasterCode) GateReqReason,(select category from  leave_category l where r.LeaveMasterFK=l.LeaveMasterPK) LeaveMasterFK FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C " + strtblname + " WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.LeaveMasterFK = LeaveMasterPK  and r.RequestType=5 and  r.ReqAppStatus=1 and LeaveFrom between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' " + strvalue + " " + strfilterVal + " ";
                    if (!string.IsNullOrEmpty(Staffcode))
                        query = query + " and m.staff_code in('" + Staffcode + "')";
                    if (!string.IsNullOrEmpty(StfName))
                        query = query + " and Staff_Name in('" + StfName + "')";
                    query = query + "order by RequestCode";
                }
            }
            #endregion
        }
        else if (rdo_reject.Checked == true)
        {
            #region
            app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            if (app != "0")
            {
                if (ddl_search.SelectedItem.Value == "0")
                {
                    query = "SELECT distinct  r.ReqStaffAppNo,r.ReqAppStaffAppNo,r.RequisitionPK,r.ReqApproveStage,r.ReqAppNo,ReqAppStatus,CASE WHEN r.RequestType = 5 THEN 'Leave Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession,(Datediff(dd,leaveFrom,leaveTo)+1)as Total,m.Staff_Code,Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE r.GateReqReason = t.MasterCode) GateReqReason,(select category from  leave_category l where r.LeaveMasterFK=l.LeaveMasterPK) LeaveMasterFK FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C,RQ_RequestHierarchy rh ,stafftrans st WHERE st.staff_code=M.staff_code and st.latestrec='1' and R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.LeaveMasterFK = LeaveMasterPK  and r.RequestType=5 and r.RequestType =rh.RequestType and r.ReqStaffAppNo =rh.ReqStaffAppNo and r.ReqAppStatus=2 and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo ='" + app + "' and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "'  " + strfilterVal + "";
                    if (!string.IsNullOrEmpty(Staffcode))
                        query = query + " and m.staff_code in('" + Staffcode + "')";
                    if (!string.IsNullOrEmpty(StfName))
                        query = query + " and Staff_Name in('" + StfName + "')";
                    query = query + "order by RequestCode";
                }
                else if (ddl_search.SelectedItem.Value == "1")
                {
                    query = "SELECT distinct  r.ReqStaffAppNo,r.ReqAppStaffAppNo,r.RequisitionPK,r.ReqApproveStage,r.ReqAppNo,ReqAppStatus,CASE WHEN r.RequestType = 5 THEN 'Leave Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession,(Datediff(dd,leaveFrom,leaveTo)+1)as Total,m.Staff_Code,Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE r.GateReqReason = t.MasterCode) GateReqReason,(select category from  leave_category l where r.LeaveMasterFK=l.LeaveMasterPK) LeaveMasterFK FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C,RQ_RequestHierarchy rh ,stafftrans st WHERE st.staff_code=M.staff_code and st.latestrec='1' and R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.LeaveMasterFK = LeaveMasterPK  and r.RequestType=5 and r.RequestType =rh.RequestType and r.ReqStaffAppNo =rh.ReqStaffAppNo and r.ReqAppStatus=2 and LeaveFrom between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo ='" + app + "' and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "'  " + strfilterVal + "";
                    if (!string.IsNullOrEmpty(Staffcode))
                        query = query + " and m.staff_code in('" + Staffcode + "')";
                    if (!string.IsNullOrEmpty(StfName))
                        query = query + " and Staff_Name in('" + StfName + "')";
                    query = query + "order by RequestCode";

                }
            }
            else
            {
                if (ddl_search.SelectedItem.Value == "0")
                {
                    query = "SELECT  distinct r.ReqStaffAppNo,r.ReqAppStaffAppNo,r.RequisitionPK,r.ReqApproveStage,r.ReqAppNo,ReqAppStatus,CASE WHEN r.RequestType = 5 THEN 'Leave Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession,(Datediff(dd,leaveFrom,leaveTo)+1)as Total,m.Staff_Code,Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE r.GateReqReason = t.MasterCode) GateReqReason,(select category from  leave_category l where r.LeaveMasterFK=l.LeaveMasterPK) LeaveMasterFK FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C,RQ_RequestHierarchy rh " + strtblname + " WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.LeaveMasterFK = LeaveMasterPK  and r.RequestType=5 and r.RequestType =rh.RequestType and r.ReqStaffAppNo =rh.ReqStaffAppNo and r.ReqAppStatus=2 and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' " + strvalue + " " + strfilterVal + "";
                    if (!string.IsNullOrEmpty(Staffcode))
                        query = query + " and m.staff_code in('" + Staffcode + "')";
                    if (!string.IsNullOrEmpty(StfName))
                        query = query + " and Staff_Name in('" + StfName + "')";
                    query = query + "order by RequestCode";
                }
                else if (ddl_search.SelectedItem.Value == "1")//delsi2504
                {
                    query = "SELECT  distinct r.ReqStaffAppNo,r.ReqAppStaffAppNo,r.RequisitionPK,r.ReqApproveStage,r.ReqAppNo,ReqAppStatus,CASE WHEN r.RequestType = 5 THEN 'Leave Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession,(Datediff(dd,leaveFrom,leaveTo)+1)as Total,m.Staff_Code,Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE r.GateReqReason = t.MasterCode) GateReqReason,(select category from  leave_category l where r.LeaveMasterFK=l.LeaveMasterPK) LeaveMasterFK FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C,RQ_RequestHierarchy rh " + strtblname + " WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.LeaveMasterFK = LeaveMasterPK  and r.RequestType=5 and r.RequestType =rh.RequestType and r.ReqStaffAppNo =rh.ReqStaffAppNo and r.ReqAppStatus=2 and LeaveFrom between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and r.college_code='" + ddl_rpt_collge.SelectedItem.Value + "' " + strvalue + " " + strfilterVal + "";
                    if (!string.IsNullOrEmpty(Staffcode))
                        query = query + " and m.staff_code in('" + Staffcode + "')";
                    if (!string.IsNullOrEmpty(StfName))
                        query = query + " and Staff_Name in('" + StfName + "')";
                    query = query + "order by RequestCode";

                }
            }
            #endregion
        }
        if (query == "")
        {
            Fpspread5.Sheets[0].Visible = false;
            //div5.Visible = false;
            lbl_err_indi.Visible = true;
            lbl_err_indi.Text = "Kindly Select All List ";
            div_report.Visible = false;
            btn_del_stud.Visible = false;
            btn_del_stud1.Visible = false; // poo 07.11.17
            div_color.Visible = false;

            btn_approval.Visible = false;
            btn_reject.Visible = false;
        }
        else if (query != "")
        {
            ds = d2.select_method(query, hat, "Text");
            if (ds.Tables[0].Rows.Count == 0)
            {
                Fpspread5.Sheets[0].Visible = false;
                Fpspread5.Visible = false;
                lbl_err_indi.Visible = true;
                lbl_err_indi.Text = "No Records Found";
                div_report.Visible = false;
                pheaderfilter3.Visible = false;
                pcolumnorder3.Visible = false;
                btn_del_stud.Visible = false;
                btn_del_stud1.Visible = false; // poo 07.11.17
                div_color.Visible = false;
                btn_approval.Visible = false;
                btn_reject.Visible = false;
            }
            else
            {
                bool boolvisible = false;
                if (ds.Tables[0].Rows.Count > 0)
                {
                    lbl_err_indi.Visible = false;
                    for (int i = 0; i < cblcolumnorder3.Items.Count; i++)
                    {
                        if (cblcolumnorder3.Items[i].Selected == true)
                        {
                            if (cblcolumnorder3.Text.Trim() != "Leave Count")
                            {
                                hat4.Add(cblcolumnorder3.Items[i].Text, cblcolumnorder3.Items[i].Value);
                                string colvalue = cblcolumnorder3.Items[i].Text;
                                if (ItemList_lve.Contains(colvalue) == false)
                                    ItemList_lve.Add(cblcolumnorder3.Items[i].Text);
                                tborder3.Text = "";
                                for (int j = 0; j < ItemList_lve.Count; j++)
                                {
                                    tborder3.Text = tborder3.Text + ItemList_lve[j].ToString();
                                    tborder3.Text = tborder3.Text + "(" + (j + 1).ToString() + ")  ";
                                }
                            }
                        }
                        cblcolumnorder3.Items[0].Enabled = false;
                    }
                    if (ItemList_lve.Count == 0)
                    {
                        for (int i = 0; i < 3; i++)
                        {
                            cblcolumnorder3.Items[i].Selected = true;
                            hat4.Add(cblcolumnorder3.Items[i].Text, cblcolumnorder3.Items[i].Value);
                            string colvalue = cblcolumnorder3.Items[i].Text;
                            if (ItemList_lve.Contains(colvalue) == false)
                                ItemList_lve.Add(cblcolumnorder3.Items[i].Text);
                            tborder3.Text = "";
                            for (int j = 0; j < ItemList_lve.Count; j++)
                            {
                                tborder3.Text = tborder3.Text + ItemList_lve[j].ToString();
                                tborder3.Text = tborder3.Text + "(" + (j + 1).ToString() + ")  ";
                            }
                        }
                    }
                    Fpspread5.Sheets[0].ColumnHeader.RowCount = 1;
                    Fpspread5.Sheets[0].ColumnCount = 3;
                    Fpspread5.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                    Fpspread5.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                    Fpspread5.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                    Fpspread5.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                    Fpspread5.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                    Fpspread5.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
                    Fpspread5.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                    Fpspread5.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                    Fpspread5.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                    Fpspread5.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                    Fpspread5.Sheets[0].ColumnHeader.Cells[0, 2].Text = "View";
                    Fpspread5.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                    Fpspread5.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                    Fpspread5.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                    Fpspread5.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                    FarPoint.Web.Spread.StyleInfo style2 = new FarPoint.Web.Spread.StyleInfo();
                    style2.Font.Size = 13;
                    style2.Font.Name = "Book Antiqua";
                    style2.Font.Bold = true;
                    style2.HorizontalAlign = HorizontalAlign.Center;
                    style2.ForeColor = Color.Black;
                    style2.BackColor = Color.AliceBlue;
                    Fpspread5.Sheets[0].PageSize = Fpspread5.Sheets[0].RowCount;
                    for (int i = 0; i < ItemList_lve.Count; i++)
                    {

                        string value1 = ItemList_lve[i].ToString();

                        int a = value1.Length;
                        Fpspread5.Sheets[0].ColumnCount++;
                        Fpspread5.Sheets[0].ColumnHeader.Cells[Fpspread5.Sheets[0].ColumnHeader.RowCount - 1, Fpspread5.Sheets[0].ColumnCount - 1].Text = ItemList_lve[i].ToString();
                        Fpspread5.Sheets[0].ColumnHeader.Cells[Fpspread5.Sheets[0].ColumnHeader.RowCount - 1, Fpspread5.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                        Fpspread5.Sheets[0].ColumnHeader.Cells[Fpspread5.Sheets[0].ColumnHeader.RowCount - 1, Fpspread5.Sheets[0].ColumnCount - 1].Font.Bold = true;
                        Fpspread5.Sheets[0].ColumnHeader.Cells[Fpspread5.Sheets[0].ColumnHeader.RowCount - 1, Fpspread5.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    }



                    Fpspread5.Sheets[0].RowCount = 0;
                    Fpspread5.Sheets[0].RowCount++;
                    FarPoint.Web.Spread.CheckBoxCellType cball = new FarPoint.Web.Spread.CheckBoxCellType(); //poo
                    cball.AutoPostBack = true;
                    Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].CellType = cball; //poo
                    Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                    Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                    Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                    for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                    {
                        double Total = 0;
                        //added by sudhagar approval stage checking
                        bool checkAval = false;
                        if (rdo_approval.Checked == true)
                        {
                            if (ds.Tables[1].Rows.Count > 0)
                            {
                                int stageCnt = 0;
                                int.TryParse(Convert.ToString(ds.Tables[0].Rows[i]["ReqApproveStage"]), out stageCnt);
                                stageCnt += 1;
                                string reqStfNo = Convert.ToString(ds.Tables[0].Rows[i]["ReqStaffAppNo"]);
                                ds.Tables[1].DefaultView.RowFilter = "ReqApproveStage='" + stageCnt + "' and ReqStaffAppNo='" + reqStfNo + "'";
                                DataView dvs = ds.Tables[1].DefaultView;
                                if (dvs.Count > 0)
                                    checkAval = true;
                            }
                            string appl = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");//delsi0608
                            if (appl == "0")
                            {
                                checkAval = true;
                            }

                        }
                        else
                            checkAval = true;
                        if (checkAval)
                        {
                            Fpspread5.Sheets[0].RowCount++;
                            count++;
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].Text = count.ToString();
                            Fpspread5.Sheets[0].Columns[0].Width = 50;
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["RequisitionPK"]);
                            string reqpk = Convert.ToString(ds.Tables[0].Rows[i]["RequisitionPK"]);
                            string chkdelreq = d2.GetFunction("select deleteflag from RQ_Requisition where RequisitionPK='" + reqpk + "'");
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].Locked = true;
                            string requestappno = d2.GetFunction("select s.staff_code from staff_appl_master sm,staffmaster s where sm.appl_no=s.appl_no and sm.appl_id='" + Convert.ToString(ds.Tables[0].Rows[i]["ReqAppNo"]) + "'");
                            string requestappno1 = d2.GetFunction("select s.staff_code from staff_appl_master sm,staffmaster s where sm.appl_no=s.appl_no and sm.appl_id='" + Convert.ToString(ds.Tables[0].Rows[i]["ReqStaffAppNo"]) + "'");
                            FarPoint.Web.Spread.CheckBoxCellType cb = new FarPoint.Web.Spread.CheckBoxCellType();
                            cb.AutoPostBack = true;
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].CellType = cb;
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                            Fpspread5.Sheets[0].Columns[1].Width = 50;
                            FarPoint.Web.Spread.ButtonCellType btn = new FarPoint.Web.Spread.ButtonCellType();
                            btn.Text = "View";
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 2].CellType = btn;
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                            int c = 2;
                            string appstage = "";
                            string approvalreason = "";
                            if (ItemList_lve.Count > 0 && hat4.Count > 0)
                            {
                                if (ItemList_lve.Count == hat4.Count)
                                {
                                    for (int j = 0; j < ItemList_lve.Count; j++)
                                    {
                                        string k = string.Empty;
                                        string names = string.Empty;
                                        string val = string.Empty;
                                        if (ItemList_lve[j].ToString().Trim() != "Leave Count")
                                        {
                                            k = Convert.ToString(ItemList_lve[j].ToString());
                                            names = Convert.ToString(hat4[k].ToString());
                                            val = ds.Tables[0].Rows[i][names].ToString();
                                        }
                                        else if (ItemList_lve[j].ToString().Trim() == "Leave Count")//delsi0112
                                        {

                                            string Tot = ds.Tables[0].Rows[i]["Total"].ToString();
                                            string Half = Convert.ToString(ds.Tables[0].Rows[i]["leavesession"]);
                                            string fromdate = Convert.ToString(ds.Tables[0].Rows[i]["leaveFrom"]);
                                            string todate = Convert.ToString(ds.Tables[0].Rows[i]["LeaveTo"]);
                                            //  string requestcode = Convert.ToString(ds.Tables[0].Rows[i]["RequestCode"]);
                                            if (fromdate == todate)
                                            {
                                                if (Half.Trim() != "Full Day")
                                                {
                                                    double.TryParse(Tot, out Total);
                                                    Total = Total - 0.5;

                                                }
                                                else
                                                {
                                                    double.TryParse(Tot, out Total);

                                                }
                                            }

                                            else if (fromdate != todate)
                                            {

                                                string requestpk = Convert.ToString(ds.Tables[0].Rows[i]["RequisitionPK"]);

                                                string checkval = "select * from staff_leave_dates where requestfk='" + requestpk + "'";
                                                DataSet checkdel = new DataSet();
                                                checkdel = d2.select_method_wo_parameter(checkval, "text");
                                                if (checkdel.Tables[0].Rows.Count > 0)
                                                {
                                                    for (int checks = 0; checks < checkdel.Tables[0].Rows.Count; checks++)
                                                    {
                                                        string deltype = Convert.ToString(checkdel.Tables[0].Rows[checks]["checkdel"]);
                                                        string sessiontype = Convert.ToString(checkdel.Tables[0].Rows[checks]["SessionType"]);
                                                        if (deltype != "1")
                                                        {
                                                            if (sessiontype == "0")
                                                            {
                                                                Total = Total + 1;

                                                            }
                                                            else if (sessiontype == "1" || sessiontype == "2")
                                                            {
                                                                Total = Total + 0.5;
                                                            }
                                                        }

                                                    }
                                                    //  FpstaffLeave.Sheets[0].Cells[FpstaffLeave.Sheets[0].RowCount - 1, 7].Text = Convert.ToString(Total);

                                                }
                                                else
                                                {
                                                    if (Half.Trim() != "Full Day")
                                                    {
                                                        double.TryParse(Tot, out Total);
                                                        Total = Total - 0.5;
                                                        //   FpstaffLeave.Sheets[0].Cells[FpstaffLeave.Sheets[0].RowCount - 1, 7].Text = Convert.ToString(Total) + "  " + dvnew[intdiv]["leavesession"].ToString();
                                                    }
                                                    else
                                                    {
                                                        double.TryParse(Tot, out Total);
                                                        // FpstaffLeave.Sheets[0].Cells[FpstaffLeave.Sheets[0].RowCount - 1, 7].Text = dvnew[intdiv]["Total"].ToString();
                                                    }
                                                }


                                            }


                                        }
                                        c++;

                                        string staffname = "";
                                        FarPoint.Web.Spread.TextCellType textcelformate = new FarPoint.Web.Spread.TextCellType();
                                        if (names == "ReqAppNo")
                                        {
                                            if (val != "")
                                            {
                                                string staffcode = d2.GetFunction("select staff_code  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and appl_id='" + val + "'");
                                                staffname = d2.GetFunction("select staff_name from staffmaster where staff_code='" + staffcode + "'");
                                            }
                                            else
                                                staffname = "";
                                        }
                                        if (names == "ReqAppStatus")
                                        {
                                            if (val == "0")
                                                appstage = "Not Approved";
                                            else if (val == "1")
                                                appstage = "Approved";
                                            else if (val == "2")
                                                appstage = "Rejected";
                                            else if (val == "3")//delsi0906
                                                appstage = "Cancelled";
                                        }
                                        if (names == "ReqAppStatus")
                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Text = appstage;
                                        else if (names == "ReqAppNo")
                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Text = staffname;
                                        else if (names == "ReqApproveStage")
                                        {
                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                        }
                                        else if (names == "ReqAppStaffAppNo")
                                        {
                                            if (val != "0")
                                            {
                                                approvalreason = d2.GetFunction("select ApproveReason from RQ_ReqApprovalDetails where ReqApproveStaffappNo='" + val + "' and ReqFK='" + Convert.ToString(ds.Tables[0].Rows[i]["RequisitionPK"]) + "'");
                                            }
                                            else
                                                approvalreason = "";
                                            if (approvalreason == "0")//delsi16112018
                                            {
                                                approvalreason = "";
                                            }
                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Text = approvalreason;
                                        }
                                        else
                                        {
                                            if (ItemList_lve[j].ToString().Trim() != "Leave Count")
                                            {
                                                Fpspread5.Sheets[0].Columns[c].CellType = textcelformate;
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Text = Convert.ToString(ds.Tables[0].Rows[i][names]);
                                            }
                                            else if (ItemList_lve[j].ToString().Trim() == "Leave Count")//delsi01121992
                                            {
                                                Fpspread5.Sheets[0].Columns[c].CellType = textcelformate;
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Text = Convert.ToString(Total);
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;

                                            }
                                        }
                                        FarPoint.Web.Spread.TextCellType textcel_type = new FarPoint.Web.Spread.TextCellType();
                                        Fpspread4.Sheets[0].Columns[2].CellType = textcel_type;
                                        string ReqAppStatus = Convert.ToString(ds.Tables[0].Rows[i]["ReqAppStatus"]);
                                        if (rdo_waiting.Checked == true)
                                        {
                                            if (chkdelreq == "1")
                                            {
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#FFA07A");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#FFA07A");
                                                //Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].Locked = true;
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#FFA07A");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#FFA07A");
                                            }
                                            else
                                            {
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                //Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].Locked = true;
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                            }
                                        }
                                        else if (ReqAppStatus == "0")
                                        {
                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                        }
                                        else if (ReqAppStatus == "2")
                                        {
                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                        }
                                        if (requestappno == staffcodesession || requestappno1 == staffcodesession)
                                        {
                                            if (ReqAppStatus == "1")
                                            {

                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].Locked = true;

                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                if (requestpermissioncheck == "3")//delsi0401
                                                {
                                                    if (rdo_waiting.Checked == true)
                                                    {
                                                        bool Is_Staff;
                                                        bool.TryParse(d2.GetFunction("select Is_Staff from UserMaster where User_Code='" + usercode + "' and college_code='" + Session["collegecode"] + "'"), out Is_Staff);
                                                        if (Is_Staff == true)
                                                        {
                                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].Locked = false;

                                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                        }
                                                    }
                                                }

                                            }
                                            else if (ReqAppStatus == "0")
                                            {
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                            }
                                            else if (ReqAppStatus == "2")
                                            {
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                            }
                                            else if (ReqAppStatus == "3")
                                            {
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#CC66FF");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#CC66FF");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#CC66FF");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#CC66FF");
                                            }


                                        }
                                        string appl = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");//delsi0608
                                        if (appl == "0")
                                        {

                                            if (ReqAppStatus == "1")
                                            {
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].Locked = false;
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                            }
                                            else if (ReqAppStatus == "0")
                                            {
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                            }
                                            else if (ReqAppStatus == "2")
                                            {
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                            }
                                            else if (ReqAppStatus == "3")
                                            {
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#CC66FF");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#CC66FF");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#CC66FF");
                                                Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#CC66FF");
                                            }



                                        }


                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Font.Name = "Book Antiqua";
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Font.Size = FontUnit.Medium;
                                        Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                        if (names == "RequestDate" || names == "LeaveFrom" || names == "LeaveTo" || names == "HalfDate")
                                        {
                                            Fpspread5.Sheets[0].Cells[Fpspread5.Sheets[0].RowCount - 1, c].Column.Width = 100;

                                        }
                                    }
                                }
                                else
                                {
                                    CheckBox_column3.Checked = true;
                                    ItemList_lve.Clear();
                                    hat4.Clear();
                                    return;
                                }
                            }
                            boolvisible = true;
                        }
                    }
                }
                if (boolvisible)
                {
                    Fpspread5.Sheets[0].PageSize = Fpspread5.Sheets[0].RowCount;
                    // Fpspread5.Width = 900;
                    Fpspread5.Width = 1169;
                    Fpspread5.Height = 420;
                    Fpspread5.Visible = true;
                    btnApprCancel.Visible = false;
                    if (rdo_request.Checked == true)
                    {
                        btn_del_stud.Visible = true;
                        btn_approval.Visible = false; //poo
                        btn_reject.Visible = false;   //poo 
                        btn_del_stud1.Visible = false; // poo
                    }
                    if (rdo_approval.Checked == true)
                    {
                        btn_approval.Visible = true;
                        btn_reject.Visible = true;
                        btn_del_stud.Visible = false; // poo
                        btn_del_stud1.Visible = false; // poo
                    }
                    if (rdo_reject.Checked == true) //poo
                    {
                        btn_del_stud.Visible = false;
                        btn_del_stud1.Visible = false; // poo 07.11.17
                        btn_approval.Visible = false; //poo
                        btn_reject.Visible = false;   //poo 
                    }
                    if (rdo_waiting.Checked == true)
                    {
                        btn_del_stud.Visible = false;
                        btn_del_stud1.Visible = true; // poo 07.11.17
                        btn_approval.Visible = false; //poo
                        btn_reject.Visible = false;   //poo 
                    }
                    pheaderfilter3.Visible = true;
                    pcolumnorder3.Visible = true;
                    div_report.Visible = true;
                    div_color.Visible = true;
                }
                else
                {
                    Fpspread5.Sheets[0].Visible = false;
                    Fpspread5.Visible = false;
                    lbl_err_indi.Visible = true;
                    lbl_err_indi.Text = "No Records Found";
                    div_report.Visible = false;
                    pheaderfilter3.Visible = false;
                    pcolumnorder3.Visible = false;
                    btn_del_stud.Visible = false;
                    btn_del_stud1.Visible = false; // poo 07.11.17
                    div_color.Visible = false;
                    btn_approval.Visible = false;
                    btn_reject.Visible = false;
                }
            }
        }
    }
    public void imgbtn_gatepass_Click(object sender, EventArgs e)
    {
        btn_approval.Visible = false;
        td_stud.BgColor = "white";
        td_staff.BgColor = "white";
        td_par.BgColor = "white";
        td_comp.BgColor = "white";
        td_indi.BgColor = "white";
        td_mag.BgColor = "#c4c4c4";
        td_all.BgColor = "white";
        td3.BgColor = "white";
        td2.BgColor = "white";
        lbl_studrptroll.Visible = true;
        txt_studrptroll.Visible = true;
        lbl_studrptname.Visible = true;
        txt_studrptname.Visible = true;
        rdo_gatestudent.Visible = true;
        rdo_gatestaff.Visible = true;
        btn_rptfind.Visible = true;
        div_event.Visible = false;
        gate_div.Visible = true;
        item_div.Visible = false;
        service_div.Visible = false;
        vist_div.Visible = false;
        comp_div.Visible = false;
        leave_div.Visible = false;
        div_all.Visible = false;
        div_event.Visible = false;
        lbl_certErr.Visible = false;
        gate();
        loadhour();
        loadminits();
        timevalue();
        cbdept.Visible = false;
    }
    public void gate()
    {
        lbl_norec.Visible = true;
        Fpspread6.Sheets[0].Visible = true;
        FarPoint.Web.Spread.StyleInfo darkstyle111 = new FarPoint.Web.Spread.StyleInfo();
        darkstyle111.BackColor = ColorTranslator.FromHtml("#0CA6CA");
        darkstyle111.ForeColor = Color.Black;
        darkstyle111.HorizontalAlign = HorizontalAlign.Center;
        Fpspread6.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle111;
        Fpspread6.Sheets[0].RowHeader.Visible = false;
        Fpspread6.CommandBar.Visible = false;
        Fpspread6.Sheets[0].AutoPostBack = false;
        Fpspread6.Sheets[0].RowCount = 0;
        string[] ay = txt_fromdate.Text.Split('/');
        string[] ay1 = txt_todate.Text.Split('/');
        string datee = DateTime.Now.ToString("MM/dd/yyyy");
        DateTime dt = new DateTime();
        DateTime dt1 = new DateTime();
        dt = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
        dt1 = Convert.ToDateTime(ay1[1] + "/" + ay1[0] + "/" + ay1[2]);
        string app = "";
        string query = "";
        string deptapp = "";
        string staff_dept = "";
        string studname = Convert.ToString(txt_studrptroll.Text);
        string studroll = Convert.ToString(txt_studrptname.Text);
        string getappno = "";
        app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
        if (studname != "")
        {
            getappno = d2.GetFunction("select App_No from Registration where Roll_No='" + studname + "'");
        }
        if (studroll != "")
        {
            getappno = d2.GetFunction("select App_No from applyn where stud_name='" + studroll + "'");
        }
        staff_dept = d2.GetFunction("select dept_code  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
        if (rdo_gatestudent.Checked == true)
        {
            if (rdo_request.Checked == true)
            {
                string sqlcmd = " select ReqApproveStage,RequestType, ReqAppStaffAppNo,ReqAppPriority from RQ_RequestHierarchy where  ReqStaffAppNo='" + app + "' and RequestType='6' ";


                if (staffcodesession.Trim() != "" && staffcodesession.Trim() != null)
                {
                    if (studname == "" && studroll == "")
                    {
                        app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                        query = "SELECT MemType,RequisitionPK,ReqApproveStage,ReqAppStatus,CASE WHEN RequestType = 6 THEN 'Gate Pass' END RequestType,RequestCode,ReqStaffAppNo,CONVERT(VARCHAR(11),GateReqExitDate,103) as GateReqExitDate,GateReqExitTime,CONVERT(VARCHAR(11),GateReqEntryDate,103) as GateReqEntryDate,(Select MasterValue FROM CO_MasterValues T WHERE R.GateReqReason = T.MasterCode) GateReqReason,GateReqEntryTime,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.RequestBy = T.TextCode) RequestBy,(Select TextVal FROM TextValTable T WHERE R.RequestMode = T.TextCode) RequestMode,Roll_No,Stud_Name,Staff_Code,Staff_Name,case when MemType=2 then 'Staff' when MemType =1 then 'Student' end as memtype,(c.Course_Name +'-'+dt.Dept_Name+'-'+CONVERT(varchar(10), s.Current_Semester))as Degree,Sections,co.Coll_acronymn FROM RQ_Requisition R,Registration S,staff_appl_master A,staffmaster M,Degree d,Department dt,Course c,collinfo co,hr_privilege hp,hrdept_master hr  WHERE d.Degree_Code =s.degree_code and d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and R.ReqAppNo = S.App_No AND R.ReqStaffAppNo = A.appl_id AND A.appl_no = M.appl_no and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and RequestType=6 and ReqStaffAppNo in ('" + app + "') and co.college_code=s.college_code and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master )and hp.dept_code=d. dept_code and user_code='" + usercode + "' order by RequestCode";
                    }
                    else if (studname != "")
                    {
                        query = "SELECT MemType,RequisitionPK,ReqApproveStage,ReqAppStatus,CASE WHEN RequestType = 6 THEN 'Gate Pass' END RequestType,RequestCode,ReqStaffAppNo,CONVERT(VARCHAR(11),GateReqExitDate,103) as GateReqExitDate,GateReqExitTime,CONVERT(VARCHAR(11),GateReqEntryDate,103) as GateReqEntryDate,(Select MasterValue FROM CO_MasterValues T WHERE R.GateReqReason = T.MasterCode) GateReqReason,GateReqEntryTime,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.RequestBy = T.TextCode) RequestBy,(Select TextVal FROM TextValTable T WHERE R.RequestMode = T.TextCode) RequestMode,Roll_No,Stud_Name,Staff_Code,Staff_Name,case when MemType=2 then 'Staff' when MemType =1 then 'Student' end as memtype,(c.Course_Name +'-'+dt.Dept_Name+'-'+CONVERT(varchar(10), s.Current_Semester))as Degree,Sections,co.Coll_acronymn FROM RQ_Requisition R,Registration S,staff_appl_master A,staffmaster M,Degree d,Department dt,Course c,collinfo co,hr_privilege hp,hrdept_master hr  WHERE d.Degree_Code =s.degree_code and d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and R.ReqAppNo = S.App_No AND R.ReqStaffAppNo = A.appl_id AND A.appl_no = M.appl_no and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and RequestType=6 and ReqStaffAppNo in ('" + app + "') and r.ReqAppNo='" + getappno + "' and co.college_code=s.college_code order and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master )and hp.dept_code=d. dept_code and user_code='" + usercode + "' by r.RequestCode";
                    }
                    else if (studroll != "")
                    {
                        query = "SELECT MemType,RequisitionPK,ReqApproveStage,ReqAppStatus,CASE WHEN RequestType = 6 THEN 'Gate Pass' END RequestType,RequestCode,ReqStaffAppNo,CONVERT(VARCHAR(11),GateReqExitDate,103) as GateReqExitDate,(Select MasterValue FROM CO_MasterValues T WHERE R.GateReqReason = T.MasterCode) GateReqReason,GateReqExitTime,CONVERT(VARCHAR(11),GateReqEntryDate,103) as GateReqEntryDate,GateReqEntryTime,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.RequestBy = T.TextCode) RequestBy,(Select TextVal FROM TextValTable T WHERE R.RequestMode = T.TextCode) RequestMode,Roll_No,Stud_Name,Staff_Code,Staff_Name,case when MemType=2 then 'Staff' when MemType =1 then 'Student' end as memtype,(c.Course_Name +'-'+dt.Dept_Name+'-'+CONVERT(varchar(10), s.Current_Semester))as Degree,Sections,co.Coll_acronymn FROM RQ_Requisition R,Registration S,staff_appl_master A,staffmaster M,Degree d,Department dt,Course c,collinfo,hr_privilege hp,hrdept_master hr  co WHERE d.Degree_Code =s.degree_code and d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and R.ReqAppNo = S.App_No AND R.ReqStaffAppNo = A.appl_id AND A.appl_no = M.appl_no and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and RequestType=6 and ReqStaffAppNo in ('" + app + "') and r.ReqAppNo='" + getappno + "' and co.college_code=s.college_code and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master )and hp.dept_code=d. dept_code and user_code='" + usercode + "' order by r.RequestCode";
                    }
                }
                else
                {
                    query = "SELECT MemType,RequisitionPK,ReqApproveStage,ReqAppStatus,CASE WHEN RequestType = 6 THEN 'Gate Pass' END RequestType,RequestCode,ReqStaffAppNo,CONVERT(VARCHAR(11),GateReqExitDate,103) as GateReqExitDate,GateReqExitTime,CONVERT(VARCHAR(11),GateReqEntryDate,103) as GateReqEntryDate,(Select MasterValue FROM CO_MasterValues T WHERE R.GateReqReason = T.MasterCode) GateReqReason,GateReqEntryTime,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.RequestBy = T.TextCode) RequestBy,(Select TextVal FROM TextValTable T WHERE R.RequestMode = T.TextCode) RequestMode,Roll_No,Stud_Name,Staff_Code,Staff_Name,case when MemType=2 then 'Staff' when MemType =1 then 'Student' end as memtype,(c.Course_Name +'-'+dt.Dept_Name+'-'+CONVERT(varchar(10), s.Current_Semester))as Degree,Sections,co.Coll_acronymn FROM RQ_Requisition R,Registration S,staff_appl_master A,staffmaster M,Degree d,Department dt,Course c,collinfo co,hr_privilege hp,hrdept_master hr  WHERE d.Degree_Code =s.degree_code and d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and R.ReqAppNo = S.App_No AND R.ReqStaffAppNo = A.appl_id AND A.appl_no = M.appl_no and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and RequestType=6 and co.college_code=s.college_code order and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master )and hp.dept_code=d. dept_code and user_code='" + usercode + "' by RequestCode";
                }
            }
            else if (rdo_approval.Checked == true)
            {
                string hoscheck = d2.GetFunction("select HostelMasterPK from HM_HostelMaster where WardenStaff1PK='" + app + "' or WardentStaff2PK='" + app + "'");
                string deptrights = "SELECT DISTINCT hp.dept_code,dept_name from hr_privilege hp,hrdept_master hr  where user_code=" + usercode + " and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master) order by dept_name";
                DataSet rights = new DataSet();
                rights = d2.select_method_wo_parameter(deptrights, "Text");
                app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                string sqlcmd = d2.GetFunction(" select ReqApproveStage,RequestType, ReqAppStaffAppNo,ReqAppPriority from RQ_RequestHierarchy where  ReqAppStaffAppNo='" + app + "' and RequestType='6' ");
                sqlcmd = Convert.ToString(Convert.ToInt16(sqlcmd) - 1);
                if (getappno != "")
                {
                    query = "SELECT distinct r.MemType,r.RequisitionPK,r.ReqApproveStage,ReqAppStatus,CASE WHEN r.RequestType = 6 THEN 'Gate Pass' END RequestType,RequestCode,r.ReqStaffAppNo,(Select MasterValue FROM CO_MasterValues T WHERE R.GateReqReason = T.MasterCode) GateReqReason,CONVERT(VARCHAR(11),GateReqExitDate,103) as GateReqExitDate,GateReqExitTime,CONVERT(VARCHAR(11),GateReqEntryDate,103) as GateReqEntryDate,GateReqEntryTime,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.RequestBy = T.TextCode) RequestBy,(Select TextVal FROM TextValTable T WHERE R.RequestMode = T.TextCode) RequestMode,Roll_No,Stud_Name,case when MemType=2 then  'Staff' when MemType =1 then 'Student' end as memtype,(c.Course_Name +'-'+dt.Dept_Name+'-'+CONVERT(varchar(10), s.Current_Semester))as Degree,Sections,co.Coll_acronymn FROM RQ_Requisition R,Registration S,RQ_RequestHierarchy rh,Degree d,Department dt,Course c,collinfo co,hr_privilege hp,hrdept_master hr  WHERE d.Degree_Code =s.degree_code and d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and R.ReqAppNo = S.App_No AND r.RequestType =rh.RequestType and RequestDate  between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and r.RequestType=6  and r.ReqAppStatus=0 and rh.ReqAppStaffAppNo ='" + app + "' and r.ReqAppNo='" + getappno + "'  and r.GateReqExitDate>= '" + datee + "' and co.college_code=s.college_code";
                    if (hoscheck != "" && hoscheck != "0" && (rights.Tables.Count > 0 && rights.Tables[0].Rows.Count > 0))
                        query = query + " and (s.App_no in(select App_no from HT_HostelRegistration where ISNULL(IsVacated,'0')='0' and ISNULL(IsDiscontinued,'0')='0' and HostelMasterFK='" + hoscheck + "') or (hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master ) and hp.dept_code=d. dept_code and user_code='" + usercode + "'))";
                    else if (hoscheck != "" && hoscheck != "0")
                        query = query + " and s.App_no in(select App_no from HT_HostelRegistration where ISNULL(IsVacated,'0')='0' and ISNULL(IsDiscontinued,'0')='0' and HostelMasterFK='" + hoscheck + "')";
                    else if (rights.Tables.Count > 0 && rights.Tables[0].Rows.Count > 0)
                        query = query + " and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master ) and hp.dept_code=d. dept_code and user_code='" + usercode + "'";

                    query = query + " order by r.RequestCode";
                }
                else
                {
                    query = "SELECT distinct r.MemType,r.RequisitionPK,r.ReqApproveStage,ReqAppStatus,CASE WHEN r.RequestType = 6 THEN 'Gate Pass' END RequestType,RequestCode,r.ReqStaffAppNo,(Select MasterValue FROM CO_MasterValues T WHERE R.GateReqReason = T.MasterCode) GateReqReason,CONVERT(VARCHAR(11),GateReqExitDate,103) as GateReqExitDate,GateReqExitTime,CONVERT(VARCHAR(11),GateReqEntryDate,103) as GateReqEntryDate,GateReqEntryTime,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.RequestBy = T.TextCode) RequestBy,(Select TextVal FROM TextValTable T WHERE R.RequestMode = T.TextCode) RequestMode,Roll_No,Stud_Name,case when MemType=2 then  'Staff' when MemType =1 then 'Student' end as memtype,(c.Course_Name +'-'+dt.Dept_Name+'-'+CONVERT(varchar(10), s.Current_Semester))as Degree,Sections,co.Coll_acronymn  FROM RQ_Requisition R,Registration S,RQ_RequestHierarchy rh,Degree d,Department dt,Course c,collinfo co,hr_privilege hp,hrdept_master hr  WHERE d.Degree_Code =s.degree_code and d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and R.ReqAppNo = S.App_No AND r.RequestType =rh.RequestType   and RequestDate  between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and r.RequestType=6 and r.ReqAppStatus=0 and rh.ReqAppStaffAppNo ='" + app + "'  and r.GateReqExitDate>= '" + datee + "' and r.ReqApproveStage='" + sqlcmd + "' and co.college_code=s.college_code";
                    if (hoscheck != "" && hoscheck != "0" && (rights.Tables.Count > 0 && rights.Tables[0].Rows.Count > 0))
                        query = query + " and (s.App_no in(select App_no from HT_HostelRegistration where ISNULL(IsVacated,'0')='0' and ISNULL(IsDiscontinued,'0')='0' and HostelMasterFK='" + hoscheck + "') or (hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master ) and hp.dept_code=d. dept_code and user_code='" + usercode + "'))";
                    else if (hoscheck != "" && hoscheck != "0")
                        query = query + " and s.App_no in(select App_no from HT_HostelRegistration where ISNULL(IsVacated,'0')='0' and ISNULL(IsDiscontinued,'0')='0' and HostelMasterFK='" + hoscheck + "')";
                    else if (rights.Tables.Count > 0 && rights.Tables[0].Rows.Count > 0)
                        query = query + " and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master ) and hp.dept_code=d. dept_code and user_code='" + usercode + "'";

                    query = query + " order by r.RequestCode";
                }
            }
            else if (rdo_waiting.Checked == true)
            {
                string hoscheck = d2.GetFunction("select HostelMasterPK from HM_HostelMaster where WardenStaff1PK='" + app + "' or WardentStaff2PK='" + app + "'");
                string deptrights = "SELECT DISTINCT hp.dept_code,dept_name from hr_privilege hp,hrdept_master hr  where user_code=" + usercode + " and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master) order by dept_name";
                DataSet rights = new DataSet();
                rights = d2.select_method_wo_parameter(deptrights, "Text");
                string checkper = d2.GetFunction("select value from Master_Settings where settings='Leave Approval Permission' and usercode='" + usercode + "' ");
                string sqlcmd = d2.GetFunction(" select ReqApproveStage,RequestType, ReqAppStaffAppNo,ReqAppPriority from RQ_RequestHierarchy where  ReqAppStaffAppNo='" + app + "' and RequestType='6' ");

                if (checkper != "3")
                {
                    // query = "SELECT r.RequisitionPK,r.ReqApproveStage,ReqAppStatus,CASE WHEN r.RequestType = 6 THEN 'Gate Pass' END RequestType,RequestCode,r.ReqStaffAppNo,CONVERT(VARCHAR(11),GateReqExitDate,103) as GateReqExitDate,GateReqExitTime,CONVERT(VARCHAR(11),GateReqEntryDate,103) as GateReqEntryDate,GateReqEntryTime,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.RequestBy = T.TextCode) RequestBy,(Select TextVal FROM TextValTable T WHERE R.RequestMode = T.TextCode) RequestMode,Roll_No,Stud_Name,Staff_Code,Staff_Name,case when MemType=2 then  'Staff' when MemType =1 then 'Student' end as memtype FROM RQ_Requisition R,Registration S,staff_appl_master A, staffmaster M,RQ_RequestHierarchy rh WHERE R.ReqAppNo = S.App_No AND r.RequestType =rh.RequestType and r.ReqStaffAppNo =rh.ReqStaffAppNo and  R.ReqStaffAppNo = A.appl_id AND A.appl_no = M.appl_no and RequestDate  between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and r.ReqAppStatus=1 and r.RequestType=6 and rh.ReqAppStaffAppNo ='" + app + "' order by r.RequestCode";
                    query = "SELECT distinct r.MemType,r.RequisitionPK,r.ReqApproveStage,ReqAppStatus,CASE WHEN r.RequestType = 6 THEN 'Gate Pass' END RequestType,RequestCode,r.ReqStaffAppNo,CONVERT(VARCHAR(11),GateReqExitDate,103) as GateReqExitDate,GateReqExitTime,CONVERT(VARCHAR(11),GateReqEntryDate,103) as GateReqEntryDate,GateReqEntryTime,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.RequestBy = T.TextCode) RequestBy,(Select TextVal FROM TextValTable T WHERE R.RequestMode = T.TextCode) RequestMode,Roll_No,Stud_Name,case when MemType=2 then  'Staff' when MemType =1 then 'Student' end as memtype,(c.Course_Name +'-'+dt.Dept_Name+'-'+CONVERT(varchar(10), s.Current_Semester))as Degree,Sections,co.Coll_acronymn, (Select MasterValue FROM CO_MasterValues T WHERE R.GateReqReason = T.MasterCode) GateReqReason FROM RQ_Requisition R,Registration S,RQ_RequestHierarchy rh,Degree d,Department dt,Course c,collinfo co,hr_privilege hp,hrdept_master hr  WHERE d.Degree_Code =s.degree_code and d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and R.ReqAppNo = S.App_No AND r.RequestType =rh.RequestType and  RequestDate  between '" + dt.ToString("MM/dd/yyyy") + "'  and '" + dt1.ToString("MM/dd/yyyy") + "' and   r.RequestType=6   and rh.ReqAppStaffAppNo ='" + app + "' and co.college_code=s.college_code ";//and r.ReqStaffAppNo =rh.ReqStaffAppNo //and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master )and hp.dept_code=d. dept_code and user_code='" + usercode + "' and r.ReqApproveStage>='" + sqlcmd + "' order by r.RequestCode

                    if (hoscheck != "" && hoscheck != "0" && (rights.Tables.Count > 0 && rights.Tables[0].Rows.Count > 0))
                        query = query + " and (s.App_no in(select App_no from HT_HostelRegistration where ISNULL(IsVacated,'0')='0' and ISNULL(IsDiscontinued,'0')='0' and HostelMasterFK='" + hoscheck + "') or (hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master ) and hp.dept_code=d. dept_code and user_code='" + usercode + "'))";
                    else if (hoscheck != "" && hoscheck != "0")
                        query = query + " and s.App_no in(select App_no from HT_HostelRegistration where ISNULL(IsVacated,'0')='0' and ISNULL(IsDiscontinued,'0')='0' and HostelMasterFK='" + hoscheck + "')";
                    else if (rights.Tables.Count > 0 && rights.Tables[0].Rows.Count > 0)
                        query = query + " and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master ) and hp.dept_code=d. dept_code and user_code='" + usercode + "'";

                    query = query + " order by r.RequestCode";
                }
                else
                {
                    query = "SELECT r.MemType,r.RequisitionPK,r.ReqApproveStage,ReqAppStatus,CASE WHEN r.RequestType = 6 THEN 'Gate Pass' END RequestType,RequestCode,r.ReqStaffAppNo,CONVERT(VARCHAR(11),GateReqExitDate,103) as GateReqExitDate,GateReqExitTime,CONVERT(VARCHAR(11),GateReqEntryDate,103) as GateReqEntryDate,GateReqEntryTime,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.RequestBy = T.TextCode) RequestBy,(Select TextVal FROM TextValTable T WHERE R.RequestMode = T.TextCode) RequestMode,Roll_No,Stud_Name,case when MemType=2 then  'Staff' when MemType =1 then 'Student' end as memtype,(c.Course_Name +'-'+dt.Dept_Name+'-'+CONVERT(varchar(10), s.Current_Semester))as Degree,(Select MasterValue FROM CO_MasterValues T WHERE R.GateReqReason = T.MasterCode) GateReqReason,Sections,co.Coll_acronymn FROM RQ_Requisition R,Registration S,Degree d,Department dt,Course c,collinfo co WHERE d.Degree_Code =s.degree_code and d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and R.ReqAppNo = S.App_No   and  RequestDate  between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and r.RequestType=6  and co.college_code=s.college_code  order by r.RequestCode";//and r.ReqAppStatus=1 and r.ReqAppStaffAppNo ='" + app + "'
                }

            }
            else if (rdo_reject.Checked == true)
            {
                string hoscheck = d2.GetFunction("select HostelMasterPK from HM_HostelMaster where WardenStaff1PK='" + app + "' or WardentStaff2PK='" + app + "'");
                string deptrights = "SELECT DISTINCT hp.dept_code,dept_name from hr_privilege hp,hrdept_master hr  where user_code=" + usercode + " and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master) order by dept_name";
                DataSet rights = new DataSet();
                rights = d2.select_method_wo_parameter(deptrights, "Text");
                query = "SELECT r.MemType,r.RequisitionPK,r.ReqApproveStage,ReqAppStatus,CASE WHEN r.RequestType = 6 THEN 'Gate Pass' END RequestType,RequestCode,r.ReqStaffAppNo,CONVERT(VARCHAR(11),GateReqExitDate,103) as GateReqExitDate,GateReqExitTime,CONVERT(VARCHAR(11),GateReqEntryDate,103) as GateReqEntryDate,GateReqEntryTime,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.RequestBy = T.TextCode) RequestBy,(Select TextVal FROM TextValTable T WHERE R.RequestMode = T.TextCode) RequestMode,Roll_No,Stud_Name,case when MemType=2 then  'Staff' when MemType =1 then 'Student' end as memtype,(c.Course_Name +'-'+dt.Dept_Name+'-'+CONVERT(varchar(10), s.Current_Semester))as Degree,(Select MasterValue FROM CO_MasterValues T WHERE R.GateReqReason = T.MasterCode) GateReqReason,Sections,co.Coll_acronymn FROM RQ_Requisition R,Registration S,RQ_RequestHierarchy rh,Degree d,Department dt,Course c,collinfo co,hr_privilege hp,hrdept_master hr WHERE d.Degree_Code =s.degree_code and d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and R.ReqAppNo = S.App_No AND r.RequestType =rh.RequestType and r.ReqStaffAppNo =rh.ReqStaffAppNo and  RequestDate  between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and r.ReqAppStatus=2 and r.RequestType=6 and rh.ReqAppStaffAppNo ='" + app + "' and co.college_code=s.college_code ";//and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master )and hp.dept_code=d. dept_code and user_code='" + usercode + "' order by r.RequestCode
                if (hoscheck != "" && hoscheck != "0" && (rights.Tables.Count > 0 && rights.Tables[0].Rows.Count > 0))
                    query = query + " and (s.App_no in(select App_no from HT_HostelRegistration where ISNULL(IsVacated,'0')='0' and ISNULL(IsDiscontinued,'0')='0' and HostelMasterFK='" + hoscheck + "') or (hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master ) and hp.dept_code=d. dept_code and user_code='" + usercode + "'))";
                else if (hoscheck != "" && hoscheck != "0")
                    query = query + " and s.App_no in(select App_no from HT_HostelRegistration where ISNULL(IsVacated,'0')='0' and ISNULL(IsDiscontinued,'0')='0' and HostelMasterFK='" + hoscheck + "')";
                else if (rights.Tables.Count > 0 && rights.Tables[0].Rows.Count > 0)
                    query = query + " and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master ) and hp.dept_code=d. dept_code and user_code='" + usercode + "'";

                query = query + " order by r.RequestCode";
            }
        }
        //************************************* gate staff *****************************************
        else
        {
            if (rdo_request.Checked == true)
            {
                if (staffcodesession.Trim() != "" && staffcodesession.Trim() != null)
                {
                    if (studname == "" && studroll == "")
                    {
                        app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                        query = "SELECT MemType,RequisitionPK,ReqApproveStage,ReqAppStatus,CASE WHEN RequestType = 6 THEN 'Gate Pass' END RequestType,RequestCode,ReqStaffAppNo,CONVERT(VARCHAR(11),GateReqExitDate,103) as GateReqExitDate,GateReqExitTime,CONVERT(VARCHAR(11),GateReqEntryDate,103) as GateReqEntryDate,GateReqEntryTime,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.RequestBy = T.TextCode) RequestBy,(Select TextVal FROM TextValTable T WHERE R.RequestMode = T.TextCode) RequestMode,Staff_Code,Staff_Name,case when MemType=2 then 'Staff' when MemType =1 then 'Student' end as memtype FROM RQ_Requisition R,staff_appl_master A,staffmaster M,hr_privilege hp,hrdept_master hr WHERE R.ReqAppNo = a.appl_id AND R.ReqStaffAppNo = A.appl_id AND A.appl_no = M.appl_no and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and RequestType=6 and MemType=2 and ReqStaffAppNo in ('" + app + "') and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master )and hp.dept_code=d. dept_code and user_code='" + usercode + "' order by RequestCode";
                    }
                }
                else
                {
                    query = "SELECT MemType,RequisitionPK,ReqApproveStage,ReqAppStatus,CASE WHEN RequestType = 6 THEN 'Gate Pass' END RequestType,RequestCode,ReqStaffAppNo,CONVERT(VARCHAR(11),GateReqExitDate,103) as GateReqExitDate,GateReqExitTime,CONVERT(VARCHAR(11),GateReqEntryDate,103) as GateReqEntryDate,GateReqEntryTime,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.RequestBy = T.TextCode) RequestBy,(Select TextVal FROM TextValTable T WHERE R.RequestMode = T.TextCode) RequestMode,Staff_Code,Staff_Name,case when MemType=2 then 'Staff' when MemType =1 then 'Student' end as memtype FROM RQ_Requisition R,staff_appl_master A,staffmaster M WHERE R.ReqAppNo = a.appl_id AND R.ReqStaffAppNo = A.appl_id AND A.appl_no = M.appl_no and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and RequestType=6 and MemType=2  order by RequestCode";
                }
            }
            else if (rdo_approval.Checked == true)
            {
                app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                if (getappno != "")
                {
                    query = "SELECT distinct r.MemType,r.RequisitionPK,r.ReqApproveStage,ReqAppStatus,CASE WHEN r.RequestType = 6 THEN 'Gate Pass' END RequestType,RequestCode,r.ReqStaffAppNo,CONVERT(VARCHAR(11),GateReqExitDate,103) as GateReqExitDate,GateReqExitTime,CONVERT(VARCHAR(11),GateReqEntryDate,103) as GateReqEntryDate,GateReqEntryTime,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.RequestBy = T.TextCode) RequestBy,(Select TextVal FROM TextValTable T WHERE R.RequestMode = T.TextCode) RequestMode,case when MemType=2 then  'Staff' when MemType =1 then 'Student' end as memtype FROM RQ_Requisition R,staff_appl_master A,staffmaster M,RQ_RequestHierarchy rh, hr_privilege hp,hrdept_master hr WHERE R.ReqAppNo = a.appl_id AND r.RequestType =rh.RequestType and RequestDate  between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and r.RequestType=6  and r.ReqAppStatus=0 and rh.ReqAppStaffAppNo ='" + app + "' and r.ReqAppNo='" + getappno + "'  and r.GateReqExitDate>= '" + datee + "' and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master )and hp.dept_code=d. dept_code and user_code='" + usercode + "' order by r.RequestCode";
                }
                else
                {
                    query = "SELECT distinct r.MemType,r.RequisitionPK,r.ReqApproveStage,ReqAppStatus,CASE WHEN r.RequestType = 6 THEN 'Gate Pass' END RequestType,RequestCode,r.ReqStaffAppNo,CONVERT(VARCHAR(11),GateReqExitDate,103) as GateReqExitDate,GateReqExitTime,CONVERT(VARCHAR(11),GateReqEntryDate,103) as GateReqEntryDate,GateReqEntryTime,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.RequestBy = T.TextCode) RequestBy,(Select TextVal FROM TextValTable T WHERE R.RequestMode = T.TextCode) RequestMode,case when MemType=2 then  'Staff' when MemType =1 then 'Student' end as memtype FROM RQ_Requisition R,staff_appl_master A,staffmaster M,RQ_RequestHierarchy rh,hr_privilege hp,hrdept_master hr WHERE R.ReqAppNo = a.appl_id AND r.RequestType =rh.RequestType and RequestDate  between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and r.RequestType=6  and r.ReqAppStatus=0   and r.GateReqExitDate>= '" + datee + "' and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master )and hp.dept_code=d. dept_code and user_code='" + usercode + "' order by r.RequestCode";
                }
            }
            else if (rdo_waiting.Checked == true)
            {
                query = "SELECT distinct r.MemType,r.RequisitionPK,r.ReqApproveStage,ReqAppStatus,CASE WHEN r.RequestType = 6 THEN 'Gate Pass' END RequestType,RequestCode,r.ReqStaffAppNo,CONVERT(VARCHAR(11),GateReqExitDate,103) as GateReqExitDate,GateReqExitTime,CONVERT(VARCHAR(11),GateReqEntryDate,103) as GateReqEntryDate,GateReqEntryTime,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.RequestBy = T.TextCode) RequestBy,(Select TextVal FROM TextValTable T WHERE R.RequestMode = T.TextCode) RequestMode,case when MemType=2 then  'Staff' when MemType =1 then 'Student' end as memtype FROM RQ_Requisition R,staff_appl_master sm,staffmaster a ,RQ_RequestHierarchy rh,hr_privilege hp,hrdept_master hr WHERE R.ReqAppNo = sm.appl_id AND r.RequestType =rh.RequestType and r.ReqStaffAppNo =rh.ReqStaffAppNo and  RequestDate  between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and r.ReqAppStatus=1 and r.RequestType=6 and rh.ReqAppStaffAppNo ='" + app + "' and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master )and hp.dept_code=d. dept_code and user_code='" + usercode + "' order by r.RequestCode";
            }
            else if (rdo_reject.Checked == true)
            {
                query = "SELECT distinct r.MemType,r.RequisitionPK,r.ReqApproveStage,ReqAppStatus,CASE WHEN r.RequestType = 6 THEN 'Gate Pass' END RequestType,RequestCode,r.ReqStaffAppNo,CONVERT(VARCHAR(11),GateReqExitDate,103) as GateReqExitDate,GateReqExitTime,CONVERT(VARCHAR(11),GateReqEntryDate,103) as GateReqEntryDate,GateReqEntryTime,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.RequestBy = T.TextCode) RequestBy,(Select TextVal FROM TextValTable T WHERE R.RequestMode = T.TextCode) RequestMode,case when MemType=2 then  'Staff' when MemType =1 then 'Student' end as memtype FROM RQ_Requisition R,staff_appl_master sm,staffmaster a ,RQ_RequestHierarchy rh,hr_privilege hp,hrdept_master hr WHERE R.ReqAppNo = sm.appl_id AND r.RequestType =rh.RequestType and r.ReqStaffAppNo =rh.ReqStaffAppNo and  RequestDate  between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and r.ReqAppStatus=2 and r.RequestType=6 and rh.ReqAppStaffAppNo ='" + app + "' and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master )and hp.dept_code=d. dept_code and user_code='" + usercode + "' order by r.RequestCode";
            }
        }
        if (query == "")
        {
            Fpspread6.Sheets[0].Visible = false;
            lbl_err_mag.Visible = true;
            lbl_err_mag.Text = "No Records Found ";
            GatePassMultipleRequestDiv.Visible = false;
            div_report.Visible = false;
            btn_del_stud.Visible = false;
            div_report.Visible = false;
            pheaderfilter4.Visible = false;
            pcolumnorder4.Visible = false;
            btn_del_stud.Visible = false;
            div_color.Visible = false;
        }
        else
        {
            if (query != "")
            {
                ds = d2.select_method(query, hat, "Text");
                if (ds.Tables[0].Rows.Count == 0)
                {
                    Fpspread6.Sheets[0].Visible = false;
                    Fpspread6.Visible = false;
                    lbl_err_mag.Visible = true;
                    lbl_err_mag.Text = "No Records Found";
                    GatePassMultipleRequestDiv.Visible = false;
                    div_report.Visible = false;
                    div_color.Visible = false;
                    pheaderfilter4.Visible = false;
                    pcolumnorder4.Visible = false;
                    btn_del_stud.Visible = false;
                }
                else
                {
                    selectReportType();

                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        lbl_err_mag.Visible = false;
                        for (int i = 0; i < cblcolumnorder4.Items.Count; i++)
                        {
                            if (cblcolumnorder4.Items[i].Selected == true)
                            {
                                hat5.Add(cblcolumnorder4.Items[i].Text, cblcolumnorder4.Items[i].Value);
                                string colvalue = cblcolumnorder4.Items[i].Text;
                                if (ItemList_gate.Contains(colvalue) == false)
                                {
                                    ItemList_gate.Add(cblcolumnorder4.Items[i].Text);
                                }
                                tborder4.Text = "";
                                for (int j = 0; j < ItemList_gate.Count; j++)
                                {
                                    tborder4.Text = tborder4.Text + ItemList_gate[j].ToString();
                                    tborder4.Text = tborder4.Text + "(" + (j + 1).ToString() + ")  ";
                                }
                            }
                            cblcolumnorder4.Items[0].Enabled = false;
                        }
                        if (ItemList_gate.Count == 0)
                        {
                            for (int i = 0; i < 8; i++)//magesh 2.7.18  for (int i = 0; i < 8; i++)
                            {
                                cblcolumnorder4.Items[i].Selected = true;
                                hat5.Add(cblcolumnorder4.Items[i].Text, cblcolumnorder4.Items[i].Value);
                                string colvalue = cblcolumnorder4.Items[i].Text;
                                if (ItemList_gate.Contains(colvalue) == false)
                                {
                                    ItemList_gate.Add(cblcolumnorder4.Items[i].Text);
                                }
                                tborder4.Text = "";
                                for (int j = 0; j < ItemList_gate.Count; j++)
                                {
                                    tborder4.Text = tborder4.Text + ItemList_gate[j].ToString();
                                    tborder4.Text = tborder4.Text + "(" + (j + 1).ToString() + ")  ";
                                }
                            }
                        }
                        Fpspread6.Sheets[0].ColumnHeader.RowCount = 1;
                        Fpspread6.Sheets[0].ColumnCount = 3;
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 2].Text = "View";
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                        Fpspread6.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                        FarPoint.Web.Spread.StyleInfo style2 = new FarPoint.Web.Spread.StyleInfo();
                        style2.Font.Size = 15;
                        style2.Font.Name = "Book Antiqua";
                        style2.Font.Bold = true;
                        style2.HorizontalAlign = HorizontalAlign.Center;
                        style2.ForeColor = Color.Black;
                        style2.BackColor = Color.AliceBlue;
                        Fpspread6.Sheets[0].PageSize = Fpspread6.Sheets[0].RowCount;
                        for (int i = 0; i < ItemList_gate.Count; i++)
                        {
                            string value1 = ItemList_gate[i].ToString();
                            int a = value1.Length;
                            Fpspread6.Sheets[0].ColumnCount++;
                            Fpspread6.Sheets[0].ColumnHeader.Cells[Fpspread6.Sheets[0].ColumnHeader.RowCount - 1, Fpspread6.Sheets[0].ColumnCount - 1].Text = ItemList_gate[i].ToString();




                            Fpspread6.Sheets[0].ColumnHeader.Cells[Fpspread6.Sheets[0].ColumnHeader.RowCount - 1, Fpspread6.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                            Fpspread6.Sheets[0].ColumnHeader.Cells[Fpspread6.Sheets[0].ColumnHeader.RowCount - 1, Fpspread6.Sheets[0].ColumnCount - 1].Font.Bold = true;
                            Fpspread6.Sheets[0].ColumnHeader.Cells[Fpspread6.Sheets[0].ColumnHeader.RowCount - 1, Fpspread6.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                        }

                        Fpspread6.Sheets[0].RowCount = 0;
                        for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                        {
                            Fpspread6.Sheets[0].RowCount++;
                            count++;
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 0].Text = count.ToString();
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["RequisitionPK"]);
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 0].Note = Convert.ToString(ds.Tables[0].Rows[i]["RequestCode"]);
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                            FarPoint.Web.Spread.CheckBoxCellType cb = new FarPoint.Web.Spread.CheckBoxCellType();
                            cb.AutoPostBack = true;
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 1].CellType = cb;
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                            FarPoint.Web.Spread.ButtonCellType btn = new FarPoint.Web.Spread.ButtonCellType();
                            btn.Text = "View";
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 2].CellType = btn;
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                            int c = 2;
                            string appstage = "";
                            if (ItemList_gate.Count > 0 && hat5.Count > 0)
                            {
                                if (ItemList_gate.Count == hat5.Count)
                                {
                                    for (int j = 0; j < ItemList_gate.Count; j++)
                                    {
                                        string k = Convert.ToString(ItemList_gate[j].ToString());
                                        string names = Convert.ToString(hat5[k].ToString());
                                        c++;
                                        string val = ds.Tables[0].Rows[i][names].ToString();
                                        string staffname = "";
                                        if (names == "ReqAppNo")
                                        {
                                            if (val != "")
                                            {
                                                string staffcode = d2.GetFunction("select staff_code  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and appl_id='" + val + "'");
                                                staffname = d2.GetFunction("select staff_name from staffmaster where staff_code='" + staffcode + "'");
                                            }
                                            else
                                            {
                                                staffname = "";
                                            }
                                        }
                                        if (names == "ReqAppStatus")
                                        {
                                            if (val == "0")
                                            {
                                                appstage = "Not Approved";
                                            }
                                            else if (val == "1")
                                            {
                                                appstage = "Approved";
                                            }
                                            else if (val == "2")
                                            {
                                                appstage = "Rejected";
                                            }
                                        }
                                        if (names == "ReqAppStatus")
                                        {
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Text = appstage;
                                        }
                                        else if (names == "ReqAppNo")
                                        {
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Text = staffname;
                                        }
                                        else if (names == "ReqApproveStage")
                                        {
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].HorizontalAlign = HorizontalAlign.Center;
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                        }
                                        else if (names == "ReqStaffAppNo")
                                        {
                                            string stfname = "";
                                            if (val != "")
                                            {
                                                stfname = d2.GetFunction("select appl_name from staff_appl_master where appl_id='" + val + "'");
                                            }
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Text = stfname;
                                        }
                                        else if (names == "RequestBy")
                                        {
                                            string reqby = System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.ToTitleCase(val);
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Text = reqby;
                                        }
                                        else if (names == "RequestMode")
                                        {
                                            string reqby = System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.ToTitleCase(val);
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Text = reqby;
                                        }
                                        else if (names == "Roll_No")//magesh 2.7.18
                                        {
                                            FarPoint.Web.Spread.TextCellType txt = new FarPoint.Web.Spread.TextCellType();
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].CellType = txt;
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                        }
                                        else
                                        {
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                        }
                                        FarPoint.Web.Spread.TextCellType textcel_type = new FarPoint.Web.Spread.TextCellType();
                                        Fpspread6.Sheets[0].Columns[2].CellType = textcel_type;
                                        string ReqAppStatus = Convert.ToString(ds.Tables[0].Rows[i]["ReqAppStatus"]);
                                        if (ReqAppStatus == "1")
                                        {
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 1].Locked = false;
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                        }
                                        else if (ReqAppStatus == "0")
                                        {
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                        }
                                        else if (ReqAppStatus == "2")
                                        {
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                            Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                        }
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Font.Size = FontUnit.Medium;
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                        Fpspread6.Sheets[0].Cells[Fpspread6.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                    }
                                }
                                else
                                {
                                    ItemList_gate.Clear();
                                    hat5.Clear();
                                }
                            }
                        }
                    }
                    Fpspread6.Sheets[0].PageSize = Fpspread6.Sheets[0].RowCount;
                    Fpspread6.Width = 900;
                    Fpspread6.Height = 420;
                    div_color.Visible = true;
                    pheaderfilter4.Visible = true;
                    if (rdo_request.Checked == true)
                    {
                        btn_del_stud.Visible = true;
                        btn_approval.Visible = false; //poo
                        btn_reject.Visible = false;   //poo 
                        btn_del_stud1.Visible = false; // poo
                    }
                    if (rdo_approval.Checked == true)
                    {
                        btn_approval.Visible = false;
                        btn_reject.Visible = true;
                        btn_del_stud.Visible = false; // poo
                        btn_del_stud1.Visible = false; // poo
                    }
                    if (rdo_reject.Checked == true) //poo
                    {
                        btn_del_stud.Visible = false;
                        btn_del_stud1.Visible = false; // poo 07.11.17
                        btn_approval.Visible = false; //poo
                        btn_reject.Visible = false;   //poo 
                    }
                    if (rdo_waiting.Checked == true)
                    {
                        btn_del_stud.Visible = false;
                        btn_del_stud1.Visible = true; // poo 07.11.17
                        btn_approval.Visible = false; //poo
                        btn_reject.Visible = false;//poo
                        btnGatePassMultipleRequest.Visible = false;
                    }
                    pcolumnorder4.Visible = true;
                    Fpspread6.Visible = true;
                    if (rdo_gatestudent.Checked)
                        GatePassMultipleRequestDiv.Visible = true;
                    div_report.Visible = true;
                }
            }
        }
    }
    public void img_event_Click(object sender, EventArgs e)
    {
        try
        {
            td_stud.BgColor = "white";
            td_staff.BgColor = "white";
            td_par.BgColor = "white";
            td_comp.BgColor = "white";
            td_indi.BgColor = "white";
            td_mag.BgColor = "white";
            td3.BgColor = "#c4c4c4";
            td_all.BgColor = "white";
            td2.BgColor = "white";
            lbl_studrptroll.Visible = false;
            txt_studrptroll.Visible = false;
            lbl_studrptname.Visible = false;
            txt_studrptname.Visible = false;
            rdo_gatestudent.Visible = false;
            rdo_gatestaff.Visible = false;
            btn_rptfind.Visible = false;
            gate_div.Visible = false;
            item_div.Visible = false;
            service_div.Visible = false;
            vist_div.Visible = false;
            comp_div.Visible = false;
            leave_div.Visible = false;
            div_all.Visible = false;
            div_event.Visible = true;
            lbl_certErr.Visible = false;
            loadhour();
            loadminits();
            timevalue();
            eventreq();
            cbdept.Visible = false;
        }
        catch
        {
        }
    }
    public void eventreq()
    {
        lbl_norec.Visible = false;
        Fpspread7.Sheets[0].Visible = true;
        Fpspread7.Sheets[0].RowHeader.Visible = false;
        Fpspread7.CommandBar.Visible = false;
        Fpspread7.Sheets[0].AutoPostBack = false;
        Fpspread7.Sheets[0].RowCount = 0;
        Fpspread7.Sheets[0].ColumnHeader.RowCount = 1;
        Fpspread7.Sheets[0].ColumnCount = 3;
        FarPoint.Web.Spread.StyleInfo darkstyle111 = new FarPoint.Web.Spread.StyleInfo();
        darkstyle111.BackColor = ColorTranslator.FromHtml("#0CA6CA");
        darkstyle111.ForeColor = Color.Black;
        darkstyle111.HorizontalAlign = HorizontalAlign.Center;
        Fpspread7.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle111;
        string[] ay = txt_fromdate.Text.Split('/');
        string[] ay1 = txt_todate.Text.Split('/');
        DateTime dt = new DateTime();
        DateTime dt1 = new DateTime();
        dt = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
        dt1 = Convert.ToDateTime(ay1[1] + "/" + ay1[0] + "/" + ay1[2]);
        string app = "";
        string query = "";
        if (rdo_request.Checked == true)
        {
            if (staffcodesession.Trim() != "" && staffcodesession.Trim() != null)
            {
                app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                query = "select distinct RequisitionPK,dd.filename,(Select MasterValue FROM CO_MasterValues T WHERE R.ReqEventName = T.MasterCode)ReqEventName, ReqApproveStage,r.ReqAppStatus,RequestType,RequestCode,ReqAppNo,CONVERT(VARCHAR(11),ReqFromDate,103) as ReqFromDate,CONVERT(VARCHAR(11),ReqToDate,103) as ReqToDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqLocType FROM RQ_Requisition R,RQ_RequisitionDet dd WHERE   RequestType=7 and RequisitionPK=dd.RequisitionFK and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  and ReqAppNo in ('" + app + "')  order by RequestDate";
            }
            else
            {
                // query = "select distinct dd.filename,(Select MasterValue FROM CO_MasterValues T WHERE R.ReqEventName = T.MasterCode)ReqEventName, ReqApproveStage,r.ReqAppStatus,RequestType,RequestCode,ReqAppNo,CONVERT(VARCHAR(11),ReqFromDate,103) as ReqFromDate,CONVERT(VARCHAR(11),ReqToDate,103) as ReqToDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqLocType,(select COUNT(*) from RQ_EventMemberDet EC where ActionType = 1 and EC.RequisitionFK  = R.RequisitionPK group by RequisitionPK) count1,(select COUNT(*) from RQ_EventMemberDet EC where ActionType = 2 and EC.RequisitionFK  = R.RequisitionPK group by RequisitionPK) count2,(select appl_name  from RQ_EventMemberDet d,staff_appl_master s where d.ApplNo = s.appl_id  and ActionType = 2) stafforg FROM RQ_Requisition R ,staff_appl_master A,staffmaster M,RQ_RequisitionDet dd WHERE   RequestType=7 AND R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and RequisitionPK=dd.RequisitionFK and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'  order by RequestDate";
                query = "select distinct RequisitionPK,dd.filename,(Select MasterValue FROM CO_MasterValues T WHERE R.ReqEventName = T.MasterCode)ReqEventName, ReqApproveStage,r.ReqAppStatus,RequestType,RequestCode,ReqAppNo,CONVERT(VARCHAR(11),ReqFromDate,103) as ReqFromDate,CONVERT(VARCHAR(11),ReqToDate,103) as ReqToDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqLocType FROM RQ_Requisition R,RQ_RequisitionDet dd WHERE   RequestType=7 and RequisitionPK=dd.RequisitionFK and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' order by RequestDate ";
            }
        }
        else if (rdo_approval.Checked == true)
        {
            if (staffcodesession.Trim() != "" && staffcodesession.Trim() != null)
            {
                app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                query = "select distinct r.RequisitionPK,dd.filename,(Select MasterValue FROM CO_MasterValues T WHERE R.ReqEventName = T.MasterCode)ReqEventName,r.ReqApproveStage,r.ReqAppStatus,r.RequestType,RequestCode,rh.ReqStaffAppNo,ReqAppNo,CONVERT(VARCHAR(11),ReqFromDate,103) as ReqFromDate,CONVERT(VARCHAR(11),ReqToDate,103) as ReqToDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqLocType FROM RQ_Requisition R ,RQ_RequestHierarchy Rh,staff_appl_master A,staffmaster M,RQ_RequisitionDet dd WHERE  r.RequestType=7 and rh.ReqStaffAppNo =r.ReqAppNo AND r.ReqAppStatus='0'AND R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and RequisitionPK=dd.RequisitionFK and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo in ('" + app + "')  order by RequestDate";
            }
            else
            {
                query = "select distinct RequisitionPK,dd.filename,(Select MasterValue FROM CO_MasterValues T WHERE R.ReqEventName = T.MasterCode)ReqEventName, ReqApproveStage,r.ReqAppStatus,RequestType,RequestCode,ReqAppNo,CONVERT(VARCHAR(11),ReqFromDate,103) as ReqFromDate,CONVERT(VARCHAR(11),ReqToDate,103) as ReqToDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqLocType FROM RQ_Requisition R,RQ_RequisitionDet dd WHERE   RequestType=7 and RequisitionPK=dd.RequisitionFK and  r.ReqAppStatus='0' and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' order by RequestDate ";
            }
        }
        else if (rdo_waiting.Checked == true)
        {
            app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            query = "select distinct r.RequisitionPK,dd.filename,(Select MasterValue FROM CO_MasterValues T WHERE R.ReqEventName = T.MasterCode)ReqEventName,r.ReqApproveStage,r.ReqAppStatus,r.RequestType,RequestCode,rh.ReqStaffAppNo,ReqAppNo,CONVERT(VARCHAR(11),ReqFromDate,103) as ReqFromDate,CONVERT(VARCHAR(11),ReqToDate,103) as ReqToDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqLocType FROM RQ_Requisition R ,RQ_RequestHierarchy Rh,staff_appl_master A,staffmaster M,RQ_RequisitionDet dd WHERE  r.RequestType=7 and rh.ReqStaffAppNo =r.ReqAppNo AND R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and RequisitionPK=dd.RequisitionFK and r.ReqAppStatus='1' and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo in ('" + app + "')  order by RequestDate";
        }
        else if (rdo_reject.Checked == true)
        {
            app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            query = "select distinct r.RequisitionPK,dd.filename,(Select MasterValue FROM CO_MasterValues T WHERE R.ReqEventName = T.MasterCode)ReqEventName,r.ReqApproveStage,r.ReqAppStatus,r.RequestType,RequestCode,rh.ReqStaffAppNo,ReqAppNo,CONVERT(VARCHAR(11),ReqFromDate,103) as ReqFromDate,CONVERT(VARCHAR(11),ReqToDate,103) as ReqToDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqLocType FROM RQ_Requisition R ,RQ_RequestHierarchy Rh,staff_appl_master A,staffmaster M,RQ_RequisitionDet dd WHERE  r.RequestType=7 and rh.ReqStaffAppNo =r.ReqAppNo AND R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and RequisitionPK=dd.RequisitionFK and r.ReqAppStatus='2' and RequestDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and rh.ReqAppStaffAppNo in ('" + app + "')  order by RequestDate";
        }
        if (query == "")
        {
            Fpspread7.Sheets[0].Visible = false;
            lbl_err_event.Visible = true;
            lbl_err_event.Text = "Kindly Select All List ";
            div_report.Visible = false;
            btn_del_stud.Visible = false;
            div_color.Visible = false;
        }
        else
        {
            if (query != "")
            {
                ds = d2.select_method(query, hat, "Text");
                ds1 = d2.select_method(query, hat, "Text");
                if (ds.Tables[0].Rows.Count == 0)
                {
                    Fpspread7.Sheets[0].Visible = false;
                    Fpspread7.Visible = false;
                    lbl_err_event.Visible = true;
                    lbl_err_event.Text = "No Records Found";
                    div_report.Visible = false;
                    pheaderfilter5.Visible = false;
                    pcolumnorder5.Visible = false;
                    btn_del_stud.Visible = false;
                    btn_del_stud.Visible = false;
                    div_report.Visible = false;
                    div_color.Visible = false;
                }
                else
                {
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        lbl_err_event.Visible = false;
                        for (int i = 0; i < cblcolumnorder5.Items.Count; i++)
                        {
                            if (cblcolumnorder5.Items[i].Selected == true)
                            {
                                hat8.Add(cblcolumnorder5.Items[i].Text, cblcolumnorder5.Items[i].Value);
                                string colvalue = cblcolumnorder5.Items[i].Text;
                                if (ItemList_event.Contains(colvalue) == false)
                                {
                                    ItemList_event.Add(cblcolumnorder5.Items[i].Text);
                                }
                                tborder5.Text = "";
                                for (int j = 0; j < ItemList_event.Count; j++)
                                {
                                    tborder5.Text = tborder5.Text + ItemList_event[j].ToString();
                                    tborder5.Text = tborder5.Text + "(" + (j + 1).ToString() + ")  ";
                                }
                            }
                            cblcolumnorder5.Items[0].Enabled = false;
                        }
                        if (ItemList_event.Count == 0)
                        {
                            for (int i = 0; i < 3; i++)
                            {
                                cblcolumnorder5.Items[i].Selected = true;
                                hat8.Add(cblcolumnorder5.Items[i].Text, cblcolumnorder5.Items[i].Value);
                                string colvalue = cblcolumnorder5.Items[i].Text;
                                if (ItemList_event.Contains(colvalue) == false)
                                {
                                    ItemList_event.Add(cblcolumnorder5.Items[i].Text);
                                }
                                tborder5.Text = "";
                                for (int j = 0; j < ItemList_event.Count; j++)
                                {
                                    tborder5.Text = tborder5.Text + ItemList_event[j].ToString();
                                    tborder5.Text = tborder5.Text + "(" + (j + 1).ToString() + ")  ";
                                }
                            }
                        }
                        Fpspread7.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                        Fpspread7.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                        Fpspread7.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                        Fpspread7.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                        Fpspread7.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread7.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
                        Fpspread7.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                        Fpspread7.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                        Fpspread7.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                        Fpspread7.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                        Fpspread7.Sheets[0].ColumnHeader.Cells[0, 2].Text = "View";
                        Fpspread7.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                        Fpspread7.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                        Fpspread7.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                        Fpspread7.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                        FarPoint.Web.Spread.StyleInfo style2 = new FarPoint.Web.Spread.StyleInfo();
                        style2.Font.Size = 16;
                        style2.Font.Name = "Book Antiqua";
                        style2.Font.Bold = true;
                        style2.HorizontalAlign = HorizontalAlign.Center;
                        style2.ForeColor = Color.Black;
                        style2.BackColor = Color.AliceBlue;
                        Fpspread7.Sheets[0].PageSize = Fpspread7.Sheets[0].RowCount;
                        for (int i = 0; i < ItemList_event.Count; i++)
                        {
                            string value1 = ItemList_event[i].ToString();
                            int a = value1.Length;
                            Fpspread7.Sheets[0].ColumnCount++;
                            Fpspread7.Sheets[0].ColumnHeader.Cells[Fpspread7.Sheets[0].ColumnHeader.RowCount - 1, Fpspread7.Sheets[0].ColumnCount - 1].Text = ItemList_event[i].ToString();
                            Fpspread7.Sheets[0].ColumnHeader.Cells[Fpspread7.Sheets[0].ColumnHeader.RowCount - 1, Fpspread7.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                            Fpspread7.Sheets[0].ColumnHeader.Cells[Fpspread7.Sheets[0].ColumnHeader.RowCount - 1, Fpspread7.Sheets[0].ColumnCount - 1].Font.Bold = true;
                            Fpspread7.Sheets[0].ColumnHeader.Cells[Fpspread7.Sheets[0].ColumnHeader.RowCount - 1, Fpspread7.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                        }
                        Fpspread7.Sheets[0].RowCount = 0;
                        DataView dv = new DataView();
                        for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                        {
                            Fpspread7.Sheets[0].RowCount++;
                            count++;
                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 0].Text = count.ToString();
                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["RequisitionPK"]);
                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                            FarPoint.Web.Spread.CheckBoxCellType cb = new FarPoint.Web.Spread.CheckBoxCellType();
                            cb.AutoPostBack = true;
                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 1].CellType = cb;
                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                            FarPoint.Web.Spread.ButtonCellType btn_type = new FarPoint.Web.Spread.ButtonCellType();
                            btn_type.Text = "View";
                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 2].CellType = btn_type;
                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                            int c = 2;
                            if (ItemList_event.Count > 0 && hat8.Count > 0)
                            {
                                if (ItemList_event.Count == hat8.Count)
                                {
                                    for (int j = 0; j < ItemList_event.Count; j++)
                                    {
                                        string k = Convert.ToString(ItemList_event[j].ToString());
                                        string names = Convert.ToString(hat8[k].ToString());
                                        c++;
                                        string val = ds.Tables[0].Rows[i][names].ToString();
                                        string staffname = "";
                                        string location = "";
                                        string appstage = "";
                                        string imagetext = "";
                                        if (names == "ReqAppNo")
                                        {
                                            if (val != "")
                                            {
                                                string staffcode = d2.GetFunction("select staff_code  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and appl_id='" + val + "'");
                                                if (staffcode.Trim() != "0")
                                                {
                                                    staffname = d2.GetFunction("select staff_name from staffmaster where staff_code='" + staffcode + "'");
                                                }
                                                else
                                                {
                                                    staffname = "";
                                                }
                                            }
                                            else
                                            {
                                                staffname = "";
                                            }
                                        }
                                        if (names == "ReqLocType")
                                        {
                                            if (val == "0")
                                            {
                                                location = "Indoor";
                                            }
                                            else
                                            {
                                                location = "Outdoor";
                                            }
                                        }
                                        if (names == "ReqAppStatus")
                                        {
                                            if (val == "0")
                                            {
                                                appstage = "Not Approved";
                                            }
                                            else if (val == "1")
                                            {
                                                appstage = "Approved";
                                            }
                                            else if (val == "2")
                                            {
                                                appstage = "Rejected";
                                            }
                                        }
                                        if (names == "filename")
                                        {
                                            if (val != "")
                                            {
                                                imagetext = val;
                                            }
                                        }
                                        FarPoint.Web.Spread.TextCellType textcel_type = new FarPoint.Web.Spread.TextCellType();
                                        Fpspread7.Sheets[0].Columns[2].CellType = textcel_type;
                                        if (names == "ReqAppNo")
                                        {
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Text = staffname;
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Width = 220;
                                        }
                                        else if (names == "filename")
                                        {
                                            Fpspread7.ActiveSheetView.Cells[Fpspread7.Sheets[0].RowCount - 1, c].CellType = new FarPoint.Web.Spread.ButtonCellType("OneCommand", FarPoint.Web.Spread.ButtonType.LinkButton, imagetext);
                                        }
                                        else if (names == "ReqLocType")
                                        {
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Text = location;
                                        }
                                        else if (names == "ReqAppStatus")
                                        {
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Text = appstage;
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Width = 150;
                                        }
                                        else
                                        {
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Text = ds.Tables[0].Rows[i][names].ToString();
                                            if (names == "ReqEventName")
                                            {
                                                Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Width = 200;
                                            }
                                            else
                                            {
                                            }
                                        }
                                        string ReqAppStatus = Convert.ToString(ds.Tables[0].Rows[i]["ReqAppStatus"]);
                                        if (ReqAppStatus == "1")
                                        {
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 1].Locked = true;
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                        }
                                        else if (ReqAppStatus == "0")
                                        {
                                            //F0A3CC
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                                        }
                                        else if (ReqAppStatus == "2")
                                        {
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 1].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 2].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                            Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, 0].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                                        }
                                    }
                                    Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Font.Name = "Book Antiqua";
                                    Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Font.Size = FontUnit.Medium;
                                    Fpspread7.Sheets[0].Cells[Fpspread7.Sheets[0].RowCount - 1, c].Column.Locked = true;
                                }
                            }
                        }
                    }
                    Fpspread7.Sheets[0].PageSize = Fpspread7.Sheets[0].RowCount;
                    Fpspread7.Width = 900;
                    Fpspread7.Height = 420;
                    pheaderfilter5.Visible = true;
                    pcolumnorder5.Visible = true;
                    Fpspread7.Visible = true;
                    if (rdo_request.Checked == true)
                    {
                        btn_del_stud.Visible = true;
                        btn_approval.Visible = false; //poo
                        btn_reject.Visible = false;   //poo 
                        btn_del_stud1.Visible = false; // poo
                    }
                    if (rdo_approval.Checked == true)
                    {
                        btn_approval.Visible = true;
                        btn_reject.Visible = true;
                        btn_del_stud.Visible = false; // poo
                        btn_del_stud1.Visible = false; // poo
                    }
                    if (rdo_reject.Checked == true) //poo
                    {
                        btn_del_stud.Visible = false;
                        btn_del_stud1.Visible = false; // poo 07.11.17
                        btn_approval.Visible = false; //poo
                        btn_reject.Visible = false;   //poo 
                    }
                    if (rdo_waiting.Checked == true)
                    {
                        btn_del_stud.Visible = false;
                        btn_del_stud1.Visible = true; // poo 07.11.17
                        btn_approval.Visible = false; //poo
                        btn_reject.Visible = false;   //poo 
                    }
                    div_report.Visible = true;
                    div_color.Visible = true;
                }
            }
        }
    }
    public void imgbtn_Link_Click(object sender, EventArgs e)
    {
        cbdept.Visible = false;
        td2.BgColor = "#c4c4c4";
        td_stud.BgColor = "white";
        td_staff.BgColor = "white";
        td_par.BgColor = "white";
        td_comp.BgColor = "white";
        td_indi.BgColor = "white";
        td_mag.BgColor = "white";
        td_all.BgColor = "white";
        Response.Redirect("Request.aspx", false);
    }
    public void tag_Click(object sender, EventArgs e)
    {
    }
    public void CheckBox_column0_CheckedChanged(object sender, EventArgs e)
    {
        try
        {
            if (CheckBox_column0.Checked == true)
            {
                ItemList_item.Clear();
                for (int i = 0; i < cblcolumnorder0.Items.Count; i++)
                {
                    string si = Convert.ToString(i);
                    cblcolumnorder0.Items[i].Selected = true;
                    LinkButton8.Visible = true;
                    ItemList_item.Add(cblcolumnorder0.Items[i].Text.ToString());
                    Itemindex_item.Add(si);
                }
                LinkButton8.Visible = true;
                tborder0.Visible = true;
                tborder0.Text = "";
                int j = 0;
                for (int i = 0; i < ItemList_item.Count; i++)
                {
                    j = j + 1;
                    tborder0.Text = tborder0.Text + ItemList_item[i].ToString();
                    tborder0.Text = tborder0.Text + "(" + (j).ToString() + ")  ";
                }
            }
            else
            {
                for (int i = 0; i < cblcolumnorder0.Items.Count; i++)
                {
                    cblcolumnorder0.Items[i].Selected = false;
                    LinkButton8.Visible = false;
                    ItemList_item.Clear();
                    Itemindex_item.Clear();
                    cblcolumnorder0.Items[0].Enabled = false;
                }
                tborder0.Text = "";
                tborder0.Visible = false;
            }
        }
        catch (Exception ex)
        {
        }
    }
    public void LinkButtonsremove0_Click(object sender, EventArgs e)
    {
        try
        {
            cblcolumnorder0.ClearSelection();
            CheckBox_column0.Checked = false;
            LinkButton8.Visible = false;
            ItemList_item.Clear();
            Itemindex_item.Clear();
            tborder0.Text = "";
            tborder0.Visible = false;
        }
        catch (Exception ex)
        {
        }
    }
    public void cblcolumnorder0_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CheckBox_column0.Checked = false;
            string value = "";
            int index;
            cblcolumnorder0.Items[0].Selected = true;
            cblcolumnorder0.Items[0].Enabled = false;
            value = string.Empty;
            string result = Request.Form["__EVENTTARGET"];
            string[] checkedBox = result.Split('$');
            index = int.Parse(checkedBox[checkedBox.Length - 1]);
            string sindex = Convert.ToString(index);
            if (cblcolumnorder0.Items[index].Selected)
            {
                //if (!Itemindex_item.Contains(sindex))
                //{
                //    if (tborder0.Text == "")
                //    {
                //        ItemList_item.Add("Roll No");
                //    }
                //    //ItemList.Add("Admission No");
                //    //ItemList.Add("Name");
                //    ItemList_item.Add(cblcolumnorder0.Items[index].Text.ToString());
                //    Itemindex_item.Add(sindex);
                //}
            }
            else
            {
                ItemList_item.Remove(cblcolumnorder0.Items[index].Text.ToString());
                Itemindex_item.Remove(sindex);
            }
            for (int i = 0; i < cblcolumnorder0.Items.Count; i++)
            {
                if (cblcolumnorder0.Items[i].Selected == false)
                {
                    sindex = Convert.ToString(i);
                    ItemList_item.Remove(cblcolumnorder0.Items[i].Text.ToString());
                    Itemindex_item.Remove(sindex);
                }
            }
            LinkButton8.Visible = true;
            tborder0.Visible = true;
            tborder0.Text = "";
            for (int i = 0; i < ItemList_item.Count; i++)
            {
                tborder0.Text = tborder0.Text + ItemList_item[i].ToString();
                tborder0.Text = tborder0.Text + "(" + (i + 1).ToString() + ")  ";
            }
            if (ItemList_item.Count == 13)
            {
                CheckBox_column0.Checked = true;
            }
            if (ItemList_item.Count == 0)
            {
                tborder0.Visible = false;
                LinkButton8.Visible = false;
            }
            //  Button2.Focus();
        }
        catch (Exception ex)
        {
        }
    }
    public void FpSpread1_SelectedIndexChanged(object sender, EventArgs e)
    {
    }
    public void CheckBox_column_CheckedChanged(object sender, EventArgs e)
    {
        try
        {
            if (CheckBox_column.Checked == true)
            {
                ItemList_service.Clear();
                for (int i = 0; i < cblcolumnorder.Items.Count; i++)
                {
                    string si = Convert.ToString(i);
                    cblcolumnorder.Items[i].Selected = true;
                    lnk_columnorder.Visible = true;
                    ItemList_service.Add(cblcolumnorder.Items[i].Text.ToString());
                    Itemindex_service.Add(si);
                }
                lnk_columnorder.Visible = true;
                tborder.Visible = true;
                tborder.Text = "";
                int j = 0;
                for (int i = 0; i < ItemList_service.Count; i++)
                {
                    j = j + 1;
                    tborder.Text = tborder.Text + ItemList_service[i].ToString();
                    tborder.Text = tborder.Text + "(" + (j).ToString() + ")  ";
                }
            }
            else
            {
                for (int i = 0; i < cblcolumnorder.Items.Count; i++)
                {
                    cblcolumnorder.Items[i].Selected = false;
                    lnk_columnorder.Visible = false;
                    ItemList_service.Clear();
                    Itemindex_service.Clear();
                    cblcolumnorder.Items[0].Enabled = false;
                }
                tborder.Text = "";
                tborder.Visible = false;
            }
        }
        catch (Exception ex)
        {
        }
    }
    public void LinkButtonsremove_Click(object sender, EventArgs e)
    {
        try
        {
            cblcolumnorder.ClearSelection();
            CheckBox_column.Checked = false;
            lnk_columnorder.Visible = false;
            //cblcolumnorder.Items[0].Selected = true;
            ItemList_service.Clear();
            Itemindex_service.Clear();
            tborder.Text = "";
            tborder.Visible = false;
            //Button2.Focus();
        }
        catch (Exception ex)
        {
        }
    }
    public void cblcolumnorder_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CheckBox_column.Checked = false;
            string value = "";
            int index;
            cblcolumnorder.Items[0].Selected = true;
            cblcolumnorder.Items[0].Enabled = false;
            value = string.Empty;
            string result = Request.Form["__EVENTTARGET"];
            string[] checkedBox = result.Split('$');
            index = int.Parse(checkedBox[checkedBox.Length - 1]);
            string sindex = Convert.ToString(index);
            if (cblcolumnorder.Items[index].Selected)
            {
                if (!Itemindex_service.Contains(sindex))
                {
                    if (tborder.Text == "")
                    {
                        ItemList_service.Add("Roll No");
                    }
                    ItemList_service.Add(cblcolumnorder.Items[index].Text.ToString());
                    Itemindex_service.Add(sindex);
                }
            }
            else
            {
                ItemList_service.Remove(cblcolumnorder.Items[index].Text.ToString());
                Itemindex_service.Remove(sindex);
            }
            for (int i = 0; i < cblcolumnorder.Items.Count; i++)
            {
                if (cblcolumnorder.Items[i].Selected == false)
                {
                    sindex = Convert.ToString(i);
                    ItemList_service.Remove(cblcolumnorder.Items[i].Text.ToString());
                    Itemindex_service.Remove(sindex);
                }
            }
            lnk_columnorder.Visible = true;
            tborder.Visible = true;
            tborder.Text = "";
            for (int i = 0; i < ItemList_service.Count; i++)
            {
                tborder.Text = tborder.Text + ItemList_service[i].ToString();
                tborder.Text = tborder.Text + "(" + (i + 1).ToString() + ")  ";
            }
            if (ItemList_service.Count == 22)
            {
                CheckBox_column.Checked = true;
            }
            if (ItemList_service.Count == 0)
            {
                tborder.Visible = false;
                lnk_columnorder.Visible = false;
            }
            //  Button2.Focus();
        }
        catch (Exception ex)
        {
        }
    }
    public void CheckBox_column1_CheckedChanged(object sender, EventArgs e)
    {
        try
        {
            if (CheckBox_column11.Checked == true)
            {
                ItemList_vist.Clear();
                for (int i = 0; i < cblcolumnorder1.Items.Count; i++)
                {
                    string si = Convert.ToString(i);
                    cblcolumnorder1.Items[i].Selected = true;
                    LinkButton1.Visible = true;
                    ItemList_vist.Add(cblcolumnorder1.Items[i].Text.ToString());
                    Itemindex_vist.Add(si);
                }
                LinkButton1.Visible = true;
                tborder1.Visible = true;
                tborder1.Text = "";
                int j = 0;
                for (int i = 0; i < ItemList_vist.Count; i++)
                {
                    j = j + 1;
                    tborder1.Text = tborder1.Text + ItemList_vist[i].ToString();
                    tborder1.Text = tborder1.Text + "(" + (j).ToString() + ")  ";
                }
            }
            else
            {
                for (int i = 0; i < cblcolumnorder1.Items.Count; i++)
                {
                    cblcolumnorder1.Items[i].Selected = false;
                    LinkButton1.Visible = false;
                    ItemList_vist.Clear();
                    Itemindex_vist.Clear();
                    cblcolumnorder1.Items[0].Enabled = false;
                }
                tborder1.Text = "";
                tborder1.Visible = false;
            }
        }
        catch (Exception ex)
        {
        }
    }
    public void LinkButtonsremove1_Click(object sender, EventArgs e)
    {
        try
        {
            cblcolumnorder1.ClearSelection();
            CheckBox_column11.Checked = false;
            LinkButton1.Visible = false;
            ItemList_vist.Clear();
            Itemindex_vist.Clear();
            tborder1.Text = "";
            tborder1.Visible = false;
        }
        catch (Exception ex)
        {
        }
    }
    public void cblcolumnorder1_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CheckBox_column11.Checked = false;
            string value = "";
            int index;
            cblcolumnorder1.Items[0].Selected = true;
            cblcolumnorder1.Items[0].Enabled = false;
            value = string.Empty;
            string result = Request.Form["__EVENTTARGET"];
            string[] checkedBox = result.Split('$');
            index = int.Parse(checkedBox[checkedBox.Length - 1]);
            string sindex = Convert.ToString(index);
            if (cblcolumnorder1.Items[index].Selected)
            {
                if (!Itemindex_vist.Contains(sindex))
                {
                    if (tborder1.Text == "")
                    {
                        ItemList_vist.Add("Roll No");
                    }
                    ItemList_vist.Add(cblcolumnorder1.Items[index].Text.ToString());
                    Itemindex_vist.Add(sindex);
                }
            }
            else
            {
                ItemList_vist.Remove(cblcolumnorder1.Items[index].Text.ToString());
                Itemindex_vist.Remove(sindex);
            }
            for (int i = 0; i < cblcolumnorder1.Items.Count; i++)
            {
                if (cblcolumnorder1.Items[i].Selected == false)
                {
                    sindex = Convert.ToString(i);
                    ItemList_vist.Remove(cblcolumnorder1.Items[i].Text.ToString());
                    Itemindex_vist.Remove(sindex);
                }
            }
            LinkButton1.Visible = true;
            tborder1.Visible = true;
            tborder1.Text = "";
            for (int i = 0; i < ItemList_vist.Count; i++)
            {
                tborder1.Text = tborder1.Text + ItemList_vist[i].ToString();
                tborder1.Text = tborder1.Text + "(" + (i + 1).ToString() + ")  ";
            }
            if (ItemList_vist.Count == 22)
            {
                CheckBox_column11.Checked = true;
            }
            if (ItemList_vist.Count == 0)
            {
                tborder1.Visible = false;
                LinkButton1.Visible = false;
            }
        }
        catch (Exception ex)
        {
        }
    }
    public void CheckBox_column2_CheckedChanged(object sender, EventArgs e)
    {
        try
        {
            if (CheckBox_column2.Checked == true)
            {
                ItemList_compl.Clear();
                for (int i = 0; i < cblcolumnorder2.Items.Count; i++)
                {
                    string si = Convert.ToString(i);
                    cblcolumnorder2.Items[i].Selected = true;
                    LinkButton4.Visible = true;
                    ItemList_compl.Add(cblcolumnorder2.Items[i].Text.ToString());
                    Itemindex_comp.Add(si);
                }
                LinkButton4.Visible = true;
                tborder2.Visible = true;
                tborder2.Text = "";
                int j = 0;
                for (int i = 0; i < ItemList_compl.Count; i++)
                {
                    j = j + 1;
                    tborder2.Text = tborder2.Text + ItemList_compl[i].ToString();
                    tborder2.Text = tborder2.Text + "(" + (j).ToString() + ")  ";
                }
            }
            else
            {
                for (int i = 0; i < cblcolumnorder2.Items.Count; i++)
                {
                    cblcolumnorder2.Items[i].Selected = false;
                    LinkButton4.Visible = false;
                    ItemList_compl.Clear();
                    Itemindex_comp.Clear();
                    cblcolumnorder2.Items[0].Enabled = false;
                }
                tborder2.Text = "";
                tborder2.Visible = false;
            }
        }
        catch (Exception ex)
        {
        }
    }
    public void LinkButtonsremove2_Click(object sender, EventArgs e)
    {
        try
        {
            cblcolumnorder2.ClearSelection();
            CheckBox_column2.Checked = false;
            LinkButton4.Visible = false;
            ItemList_compl.Clear();
            Itemindex_comp.Clear();
            tborder2.Text = "";
            tborder2.Visible = false;
        }
        catch (Exception ex)
        {
        }
    }
    public void cblcolumnorder2_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CheckBox_column2.Checked = false;
            string value = "";
            int index;
            cblcolumnorder2.Items[0].Selected = true;
            cblcolumnorder2.Items[0].Enabled = false;
            value = string.Empty;
            string result = Request.Form["__EVENTTARGET"];
            string[] checkedBox = result.Split('$');
            index = int.Parse(checkedBox[checkedBox.Length - 1]);
            string sindex = Convert.ToString(index);
            if (cblcolumnorder2.Items[index].Selected)
            {
                if (!Itemindex_comp.Contains(sindex))
                {
                    if (tborder2.Text == "")
                    {
                        ItemList_compl.Add("Roll No");
                    }
                    ItemList_compl.Add(cblcolumnorder2.Items[index].Text.ToString());
                    Itemindex_comp.Add(sindex);
                }
            }
            else
            {
                ItemList_compl.Remove(cblcolumnorder2.Items[index].Text.ToString());
                Itemindex_comp.Remove(sindex);
            }
            for (int i = 0; i < cblcolumnorder2.Items.Count; i++)
            {
                //if (i == 0 || i == 1 || i == 2)
                //{
                //    cblcolumnorder.Items[0].Selected = true;
                //    cblcolumnorder.Items[1].Selected = true;
                //    cblcolumnorder.Items[2].Selected = true;
                //}
                if (cblcolumnorder2.Items[i].Selected == false)
                {
                    sindex = Convert.ToString(i);
                    ItemList_compl.Remove(cblcolumnorder2.Items[i].Text.ToString());
                    Itemindex_comp.Remove(sindex);
                }
            }
            LinkButton4.Visible = true;
            tborder2.Visible = true;
            tborder2.Text = "";
            for (int i = 0; i < ItemList_compl.Count; i++)
            {
                tborder2.Text = tborder2.Text + ItemList_compl[i].ToString();
                tborder2.Text = tborder2.Text + "(" + (i + 1).ToString() + ")  ";
            }
            if (ItemList_compl.Count == 14)
            {
                CheckBox_column2.Checked = true;
            }
            if (ItemList_compl.Count == 0)
            {
                tborder2.Visible = false;
                LinkButton4.Visible = false;
            }
        }
        catch (Exception ex)
        {
        }
    }
    public void CheckBox_column3_CheckedChanged(object sender, EventArgs e)
    {
        try
        {
            if (CheckBox_column3.Checked == true)
            {
                ItemList_lve.Clear();
                for (int i = 0; i < cblcolumnorder3.Items.Count; i++)
                {
                    string si = Convert.ToString(i);
                    cblcolumnorder3.Items[i].Selected = true;
                    LinkButton5.Visible = true;
                    ItemList_lve.Add(cblcolumnorder3.Items[i].Text.ToString());
                    Itemindex_lve.Add(si);
                }
                LinkButton4.Visible = true;
                tborder3.Visible = true;
                tborder3.Text = "";
                int j = 0;
                for (int i = 0; i < ItemList_lve.Count; i++)
                {
                    j = j + 1;
                    tborder3.Text = tborder3.Text + ItemList_lve[i].ToString();
                    tborder3.Text = tborder3.Text + "(" + (j).ToString() + ")  ";
                }
            }
            else
            {
                for (int i = 0; i < cblcolumnorder3.Items.Count; i++)
                {
                    cblcolumnorder3.Items[i].Selected = false;
                    LinkButton5.Visible = false;
                    ItemList_lve.Clear();
                    Itemindex_lve.Clear();
                    cblcolumnorder3.Items[0].Enabled = false;
                }
                tborder3.Text = "";
                tborder3.Visible = false;
            }
        }
        catch (Exception ex)
        {
        }
    }
    public void LinkButtonsremove3_Click(object sender, EventArgs e)
    {
        try
        {
            cblcolumnorder3.ClearSelection();
            CheckBox_column3.Checked = false;
            LinkButton5.Visible = false;
            ItemList_lve.Clear();
            Itemindex_lve.Clear();
            tborder3.Text = "";
            tborder3.Visible = false;
        }
        catch (Exception ex)
        {
        }
    }
    public void cblcolumnorder3_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CheckBox_column3.Checked = false;
            string value = "";
            int index;
            cblcolumnorder3.Items[0].Selected = true;
            cblcolumnorder3.Items[0].Enabled = false;
            value = string.Empty;
            string result = Request.Form["__EVENTTARGET"];
            string[] checkedBox = result.Split('$');
            index = int.Parse(checkedBox[checkedBox.Length - 1]);
            string sindex = Convert.ToString(index);
            if (cblcolumnorder3.Items[index].Selected)
            {
                if (!Itemindex_lve.Contains(sindex))
                {
                    if (tborder3.Text == "")
                    {
                        ItemList_lve.Add("Roll No");
                    }
                    ItemList_lve.Add(cblcolumnorder3.Items[index].Text.ToString());
                    Itemindex_lve.Add(sindex);
                }
            }
            else
            {
                ItemList_lve.Remove(cblcolumnorder3.Items[index].Text.ToString());
                Itemindex_lve.Remove(sindex);
            }
            for (int i = 0; i < cblcolumnorder3.Items.Count; i++)
            {
                if (cblcolumnorder3.Items[i].Selected == false)
                {
                    sindex = Convert.ToString(i);
                    ItemList_lve.Remove(cblcolumnorder3.Items[i].Text.ToString());
                    Itemindex_lve.Remove(sindex);
                }
            }
            LinkButton5.Visible = true;
            tborder3.Visible = true;
            tborder3.Text = "";
            for (int i = 0; i < ItemList_lve.Count; i++)
            {
                tborder3.Text = tborder3.Text + ItemList_lve[i].ToString();
                tborder3.Text = tborder3.Text + "(" + (i + 1).ToString() + ")  ";
            }
            if (ItemList_lve.Count == 14)
            {
                CheckBox_column3.Checked = true;
            }
            if (ItemList_lve.Count == 0)
            {
                tborder3.Visible = false;
                LinkButton5.Visible = false;
            }
        }
        catch (Exception ex)
        {
        }
    }
    public void CheckBox_column4_CheckedChanged(object sender, EventArgs e)
    {
        try
        {
            if (CheckBox_column4.Checked == true)
            {
                ItemList_gate.Clear();
                for (int i = 0; i < cblcolumnorder4.Items.Count; i++)
                {
                    string si = Convert.ToString(i);
                    cblcolumnorder4.Items[i].Selected = true;
                    LinkButton6.Visible = true;
                    ItemList_gate.Add(cblcolumnorder4.Items[i].Text.ToString());
                    Itemindex_gate.Add(si);
                }
                LinkButton6.Visible = true;
                tborder4.Visible = true;
                tborder4.Text = "";
                int j = 0;
                for (int i = 0; i < ItemList_gate.Count; i++)
                {
                    j = j + 1;
                    if (tborder4.Text != "")
                        tborder4.Text = tborder4.Text + ',' + ItemList_gate[i].ToString();
                    else
                        tborder4.Text = ItemList_gate[i].ToString();
                    //  tborder4.Text = tborder4.Text + "(" + (j).ToString() + ")  "; magesh 3.7.18

                    tborder4.Text = tborder4.Text;
                }
            }
            else
            {
                for (int i = 0; i < cblcolumnorder4.Items.Count; i++)
                {
                    cblcolumnorder4.Items[i].Selected = false;
                    LinkButton6.Visible = false;
                    ItemList_gate.Clear();
                    Itemindex_gate.Clear();
                    cblcolumnorder4.Items[0].Enabled = false;
                }
                tborder4.Text = "";
                tborder4.Visible = false;
            }
        }
        catch (Exception ex)
        {
        }
    }
    public void LinkButtonsremove4_Click(object sender, EventArgs e)
    {
        try
        {
            cblcolumnorder4.ClearSelection();
            CheckBox_column4.Checked = false;
            LinkButton6.Visible = false;
            ItemList_gate.Clear();
            Itemindex_gate.Clear();
            tborder4.Text = "";
            tborder4.Visible = false;
        }
        catch (Exception ex)
        {
        }
    }
    public void cblcolumnorder4_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CheckBox_column4.Checked = false;
            string value = "";
            int index;
            cblcolumnorder4.Items[0].Selected = true;
            cblcolumnorder4.Items[0].Enabled = false;
            value = string.Empty;
            string result = Request.Form["__EVENTTARGET"];
            string[] checkedBox = result.Split('$');
            index = int.Parse(checkedBox[checkedBox.Length - 1]);
            string sindex = Convert.ToString(index);
            if (cblcolumnorder4.Items[index].Selected)
            {
                if (!Itemindex_gate.Contains(sindex))
                {
                    if (tborder4.Text == "")
                    {
                        ItemList_gate.Add("Roll No");
                    }
                    ItemList_gate.Add(cblcolumnorder4.Items[index].Text.ToString());
                    Itemindex_gate.Add(sindex);
                }
            }
            else
            {
                ItemList_gate.Remove(cblcolumnorder4.Items[index].Text.ToString());
                Itemindex_gate.Remove(sindex);
            }
            for (int i = 0; i < cblcolumnorder4.Items.Count; i++)
            {
                if (cblcolumnorder4.Items[i].Selected == false)
                {
                    sindex = Convert.ToString(i);
                    ItemList_gate.Remove(cblcolumnorder4.Items[i].Text.ToString());
                    Itemindex_gate.Remove(sindex);
                }
            }
            LinkButton6.Visible = true;
            tborder4.Visible = true;
            tborder4.Text = "";
            for (int i = 0; i < ItemList_gate.Count; i++)
            {
                //tborder4.Text = tborder4.Text + ItemList_gate[i].ToString();
                //tborder4.Text = tborder4.Text + "(" + (i + 1).ToString() + ")  ";

                if (tborder4.Text != "")
                    tborder4.Text = tborder4.Text + ',' + ItemList_gate[i].ToString();
                else
                    tborder4.Text = ItemList_gate[i].ToString();
            }
            if (ItemList_gate.Count == 14)
            {
                CheckBox_column4.Checked = true;
            }
            if (ItemList_gate.Count == 0)
            {
                tborder4.Visible = false;
                LinkButton6.Visible = false;
            }
        }
        catch (Exception ex)
        {
        }
    }
    //**************************** all**********************************
    public void CheckBox_columnall_CheckedChanged(object sender, EventArgs e)
    {
        try
        {
            if (CheckBox_columnall.Checked == true)
            {
                ItemList_all.Clear();
                for (int i = 0; i < cblcolumnorderall.Items.Count; i++)
                {
                    string si = Convert.ToString(i);
                    cblcolumnorderall.Items[i].Selected = true;
                    lnk_columnorderall.Visible = true;
                    ItemList_all.Add(cblcolumnorderall.Items[i].Text.ToString());
                    Itemindex_all.Add(si);
                }
                lnk_columnorderall.Visible = true;
                tborderall.Visible = true;
                tborderall.Text = "";
                int j = 0;
                for (int i = 0; i < ItemList_all.Count; i++)
                {
                    j = j + 1;
                    tborderall.Text = tborderall.Text + ItemList_all[i].ToString();
                    tborderall.Text = tborderall.Text + "(" + (j).ToString() + ")  ";
                }
            }
            else
            {
                for (int i = 0; i < cblcolumnorderall.Items.Count; i++)
                {
                    cblcolumnorderall.Items[i].Selected = false;
                    lnk_columnorderall.Visible = false;
                    ItemList_all.Clear();
                    Itemindex_all.Clear();
                    cblcolumnorderall.Items[0].Enabled = false;
                }
                tborderall.Text = "";
                tborderall.Visible = false;
            }
        }
        catch (Exception ex)
        {
        }
    }
    public void cblcolumnorderall_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CheckBox_columnall.Checked = false;
            string value = "";
            int index;
            cblcolumnorder0.Items[0].Selected = true;
            cblcolumnorder0.Items[0].Enabled = false;
            value = string.Empty;
            string result = Request.Form["__EVENTTARGET"];
            string[] checkedBox = result.Split('$');
            index = int.Parse(checkedBox[checkedBox.Length - 1]);
            string sindex = Convert.ToString(index);
            if (cblcolumnorderall.Items[index].Selected)
            {
            }
            else
            {
                ItemList_all.Remove(cblcolumnorderall.Items[index].Text.ToString());
                Itemindex_all.Remove(sindex);
            }
            for (int i = 0; i < cblcolumnorderall.Items.Count; i++)
            {
                if (cblcolumnorderall.Items[i].Selected == false)
                {
                    sindex = Convert.ToString(i);
                    ItemList_all.Remove(cblcolumnorderall.Items[i].Text.ToString());
                    Itemindex_all.Remove(sindex);
                }
            }
            lnk_columnorderall.Visible = true;
            tborderall.Visible = true;
            tborderall.Text = "";
            for (int i = 0; i < ItemList_all.Count; i++)
            {
                tborderall.Text = tborderall.Text + ItemList_all[i].ToString();
                tborderall.Text = tborderall.Text + "(" + (i + 1).ToString() + ")  ";
            }
            if (ItemList_all.Count == 13)
            {
                CheckBox_column0.Checked = true;
            }
            if (ItemList_all.Count == 0)
            {
                tborderall.Visible = false;
                lnk_columnorderall.Visible = false;
            }
        }
        catch (Exception ex)
        {
        }
    }
    public void LinkButtonsremoveall_Click(object sender, EventArgs e)
    {
        try
        {
            cblcolumnorderall.ClearSelection();
            CheckBox_columnall.Checked = false;
            lnk_columnorderall.Visible = false;
            //cblcolumnorder.Items[0].Selected = true;
            ItemList_all.Clear();
            Itemindex_all.Clear();
            tborderall.Text = "";
            tborderall.Visible = false;
            //Button2.Focus();
        }
        catch (Exception ex)
        {
        }
    }
    //**********************************Event*****************************
    public void CheckBox_column5_CheckedChanged(object sender, EventArgs e)
    {
        try
        {
            if (CheckBox_column5.Checked == true)
            {
                ItemList_event.Clear();
                for (int i = 0; i < cblcolumnorder5.Items.Count; i++)
                {
                    string si = Convert.ToString(i);
                    cblcolumnorder5.Items[i].Selected = true;
                    LinkButton7.Visible = true;
                    ItemList_event.Add(cblcolumnorder5.Items[i].Text.ToString());
                    Itemindex_event.Add(si);
                }
                LinkButton7.Visible = true;
                tborder5.Visible = true;
                tborder5.Text = "";
                int j = 0;
                for (int i = 0; i < ItemList_event.Count; i++)
                {
                    j = j + 1;
                    tborder5.Text = tborder5.Text + ItemList_event[i].ToString();
                    tborder5.Text = tborder5.Text + "(" + (j).ToString() + ")  ";
                }
            }
            else
            {
                for (int i = 0; i < cblcolumnorder5.Items.Count; i++)
                {
                    cblcolumnorder5.Items[i].Selected = false;
                    LinkButton7.Visible = false;
                    ItemList_event.Clear();
                    Itemindex_event.Clear();
                    cblcolumnorder5.Items[0].Enabled = false;
                }
                tborder5.Text = "";
                tborder5.Visible = false;
            }
        }
        catch (Exception ex)
        {
        }
    }
    public void LinkButtonsremove5_Click(object sender, EventArgs e)
    {
        try
        {
            cblcolumnorder5.ClearSelection();
            CheckBox_column5.Checked = false;
            LinkButton7.Visible = false;
            ItemList_event.Clear();
            Itemindex_event.Clear();
            tborder5.Text = "";
            tborder5.Visible = false;
        }
        catch (Exception ex)
        {
        }
    }
    public void cblcolumnorder5_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CheckBox_column5.Checked = false;
            string value = "";
            int index;
            cblcolumnorder5.Items[0].Selected = true;
            cblcolumnorder5.Items[0].Enabled = false;
            value = string.Empty;
            string result = Request.Form["__EVENTTARGET"];
            string[] checkedBox = result.Split('$');
            index = int.Parse(checkedBox[checkedBox.Length - 1]);
            string sindex = Convert.ToString(index);
            if (cblcolumnorder5.Items[index].Selected)
            {
                if (!Itemindex_event.Contains(sindex))
                {
                    if (tborder5.Text == "")
                    {
                        ItemList_event.Add("Roll No");
                    }
                    //ItemList.Add("Admission No");
                    //ItemList.Add("Name");
                    ItemList_event.Add(cblcolumnorder5.Items[index].Text.ToString());
                    Itemindex_event.Add(sindex);
                }
            }
            else
            {
                ItemList_event.Remove(cblcolumnorder5.Items[index].Text.ToString());
                Itemindex_event.Remove(sindex);
            }
            for (int i = 0; i < cblcolumnorder5.Items.Count; i++)
            {
                if (cblcolumnorder5.Items[i].Selected == false)
                {
                    sindex = Convert.ToString(i);
                    ItemList_event.Remove(cblcolumnorder5.Items[i].Text.ToString());
                    Itemindex_event.Remove(sindex);
                }
            }
            LinkButton7.Visible = true;
            tborder5.Visible = true;
            tborder5.Text = "";
            for (int i = 0; i < ItemList_event.Count; i++)
            {
                tborder5.Text = tborder5.Text + ItemList_event[i].ToString();
                tborder5.Text = tborder5.Text + "(" + (i + 1).ToString() + ")  ";
            }
            if (ItemList_event.Count == 14)
            {
                CheckBox_column5.Checked = true;
            }
            if (ItemList_event.Count == 0)
            {
                tborder5.Visible = false;
                LinkButton7.Visible = false;
            }
        }
        catch (Exception ex)
        {
        }
    }
    public void btn_del_stud_Click(object sender, EventArgs e)
    {
        delete = "1";
        string checkvalue = "";
        string ss = "0";
        if (Fpspread5.Visible == true)
        {
            for (int i = 0; i < Fpspread5.Sheets[0].RowCount; i++)
            {
                checkvalue = Convert.ToString(Fpspread5.Sheets[0].Cells[i, 1].Value);
                if (checkvalue == "1")
                {
                    ss = "1";
                }
            }
        }
        else if (Fpspread9.Visible == true)
        {
            for (int i = 0; i < Fpspread9.Sheets[0].RowCount; i++)
            {
                checkvalue = Convert.ToString(Fpspread9.Sheets[0].Cells[i, 1].Value);
                if (checkvalue == "1")
                {
                    ss = "1";
                }
            }
        }
        else if (Fpspread6.Visible == true)
        {
            for (int i = 0; i < Fpspread6.Sheets[0].RowCount; i++)
            {
                checkvalue = Convert.ToString(Fpspread6.Sheets[0].Cells[i, 1].Value);
                if (checkvalue == "1")
                {
                    ss = "1";
                }
            }
        }
        if (Fpspread9.Visible == true || Fpspread5.Visible == true || Fpspread6.Visible == true)
        {
            if (ss == "0")
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "Select Any Record";
            }
            else
            {
                delete = "1";
                div_del_confm.Visible = true;
                div_confm.Visible = true;
            }
        }
    }
    public void btn1_del_stud_Click(object sender, EventArgs e)
    {
        delete = "2";
        div_del_confm.Visible = true;
        div_confm.Visible = true;
    }
    protected void txtexcelname_TextChanged(object sender, EventArgs e)
    {
        try
        {
            txt_excelname.Visible = true;
            btn_Excel.Visible = true;
            btn_printmaster.Visible = true;
            lbl_reportname.Visible = true;
            btn_Excel.Focus();
            if (txt_excelname.Text == "")
            {
                lbl_norec.Visible = true;
            }
            else
            {
                lbl_norec.Visible = false;
            }
        }
        catch (Exception ex)
        {
        }
    }
    public void btnExcel_Click(object sender, EventArgs e)
    {
        try
        {
            string report = txt_excelname.Text;
            if (report.ToString().Trim() != "")
            {
                if (item_div.Visible == true)
                {
                    d2.printexcelreport(Fpspread1, report);
                }
                else if (service_div.Visible == true)
                {
                    d2.printexcelreport(Fpspread3, report);
                }
                else if (vist_div.Visible == true)
                {
                    d2.printexcelreport(Fpspread2, report);
                }
                else if (comp_div.Visible == true)
                {
                    d2.printexcelreport(Fpspread4, report);
                }
                else if (leave_div.Visible == true)
                {
                    d2.printexcelreport(Fpspread5, report);
                }
                else if (gate_div.Visible == true)
                {
                    Fpspread6.Columns[1].Visible = false;
                    Fpspread6.Columns[2].Visible = false;
                    d2.printexcelreport(Fpspread6, report);
                    Fpspread6.Columns[1].Visible = true;
                    Fpspread6.Columns[2].Visible = true;
                }
                else if (div_event.Visible == true)
                {
                    d2.printexcelreport(Fpspread7, report);
                }
                else if (div_all.Visible == true)
                {
                    d2.printexcelreport(Fpspread9, report);
                }
                lbl_norec.Visible = false;
            }
            else
            {
                lbl_norec.Text = "Please Enter Your Report Name";
                lbl_norec.Visible = true;
            }
            btn_Excel.Focus();
        }
        catch (Exception ex)
        {
            lbl_norec.Text = ex.ToString();
        }
    }
    public void btn_printmaster_Click(object sender, EventArgs e)
    {
        try
        {
            string attendance = "";
            string pagename = "Request_Report.aspx";
            if (item_div.Visible == true)
            {
                Printcontrol.loadspreaddetails(Fpspread1, pagename, attendance);
            }
            else if (service_div.Visible == true)
            {
                Printcontrol.loadspreaddetails(Fpspread2, pagename, attendance);
            }
            else if (vist_div.Visible == true)
            {
                Printcontrol.loadspreaddetails(Fpspread3, pagename, attendance);
            }
            else if (comp_div.Visible == true)
            {
                Printcontrol.loadspreaddetails(Fpspread4, pagename, attendance);
            }
            else if (leave_div.Visible == true)
            {
                if (rdo_request.Checked == true)
                {
                    attendance = "Request Staff Report";
                }
                else if (rdo_approval.Checked == true)
                {
                    attendance = "Waiting For Approval Staff Report";
                }
                else if (rdo_waiting.Checked == true)
                {
                    attendance = "Rejected Staff Report";
                }
                else if (rdo_reject.Checked == true && rdo_approval.Checked == true) //poo
                {
                    attendance = "Approval Staff Report";
                }
                Printcontrol.loadspreaddetails(Fpspread5, pagename, attendance);
            }
            else if (gate_div.Visible == true)
            {
                Printcontrol.loadspreaddetails(Fpspread6, pagename, attendance);
            }
            else if (div_event.Visible == true)
            {
                Printcontrol.loadspreaddetails(Fpspread7, pagename, attendance);
            }
            else if (div_all.Visible == true)
            {
                Printcontrol.loadspreaddetails(Fpspread9, pagename, attendance);
            }
            Printcontrol.Visible = true;
        }
        catch (Exception ex)
        {
        }
    }
    public void imgbtn_search_Click(object sender, EventArgs e)
    {
        try
        {
            if (item_div.Visible == true)
                item_req();
            if (service_div.Visible == true)
                service();
            if (vist_div.Visible == true)
                visitor();
            if (comp_div.Visible == true)
                compl();
            if (leave_div.Visible == true)
                leave();
            if (gate_div.Visible == true)
                gate();
            if (div_all.Visible == true)
                all_search();
            if (div_event.Visible == true)
                eventreq();

        }
        catch
        {
        }
    }
    public void rdo_request_CheckedChanged(object sender, EventArgs e)
    {

    }
    public void rdo_approval_CheckedChanged(object sender, EventArgs e)
    {
    }
    public void rdo_reject_CheckedChanged(object sender, EventArgs e)
    {
    }
    public void visible()
    {
        imgbtn_all.Visible = false;
        Label2.Visible = false;
        imgbtn_item.Visible = false;
        lbl_item.Visible = false;
        imgbtn_service.Visible = false;
        lbl_service.Visible = false;
        imgbtn_visitor.Visible = false;
        lbl_visitor.Visible = false;
        imgbtn_complaints.Visible = false;
        lbl_complaints.Visible = false;
        imgbtn_leave.Visible = false;
        lbl_leave.Visible = false;
        imgbtn_gatepass.Visible = false;
        lbl_gatepass.Visible = false;
        img_search.Visible = false;
        Label3.Visible = false;
        link.Visible = false;
        Label4.Visible = false;
        td_all.BgColor = "white";
        td_stud.BgColor = "white";
        td_staff.BgColor = "white";
        td_par.BgColor = "white";
        td_comp.BgColor = "white";
        td_indi.BgColor = "white";
        td_mag.BgColor = "white";
        comp_div.Visible = false;
        item_div.Visible = false;
        service_div.Visible = false;
        vist_div.Visible = false;
        leave_div.Visible = false;
        gate_div.Visible = false;
        div_all.Visible = false;
        btn_del_stud.Visible = false;
        div_report.Visible = false;
    }
    public void btn_popclose_Click(object sender, EventArgs e)
    {
        popview.Visible = false;
        DataTable dtdummyRow = new DataTable();//barath 29.12.17
        grid_altersub.DataSource = dtdummyRow;
        grid_altersub.DataBind();

    }
    public void btn_dept_Click(object sender, EventArgs e)
    {
    }
    public void btn_additem_Click(object sender, EventArgs e)
    {
    }
    protected void SelectdptGrid_RowCommand(object sender, GridViewCommandEventArgs e)
    {
        try
        {
            int row = Convert.ToInt32(e.CommandArgument);
            Session["rowvalue"] = Convert.ToString(row);
            if (e.CommandName == "instruction")
            {
                string itemcode = ((SelectdptGrid.Rows[row].FindControl("lbl_itemcode") as Label).Text);
                string itemname = ((SelectdptGrid.Rows[row].FindControl("lbl_itemname") as Label).Text);
                string qunatity = ((SelectdptGrid.Rows[row].FindControl("lblquantity") as Label).Text);
                // btn_additem2.Text = "Update";
                Session["itemnewcode"] = Convert.ToString(itemcode);
            }
        }
        catch
        {
        }
    }
    protected void typegrid_OnRowDataBound(object sender, System.Web.UI.WebControls.GridViewRowEventArgs e)
    {
        try
        {
            if (e.Row.RowType == DataControlRowType.DataRow)
            {
                //e.Row.Cells[0].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(this.SelectdptGrid, "instruction$" + e.Row.RowIndex);
                //e.Row.Cells[1].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(this.SelectdptGrid, "instruction$" + e.Row.RowIndex);
                //e.Row.Cells[2].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(this.SelectdptGrid, "instruction$" + e.Row.RowIndex);
                //e.Row.Cells[3].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(this.SelectdptGrid, "instruction$" + e.Row.RowIndex);
            }
        }
        catch
        {
        }
    }
    protected void fpspread1_ButtonCommand(object sender, FarPoint.Web.Spread.SpreadCommandEventArgs e)
    {
        try
        {
            string activerow = "";
            string activecol = "";
            activerow = Fpspread1.ActiveSheetView.ActiveRow.ToString();
            activecol = Fpspread1.ActiveSheetView.ActiveColumn.ToString();
            string actrow = e.SheetView.ActiveRow.ToString();
            string actcol = e.SheetView.ActiveColumn.ToString();
            if (Convert.ToInt32(activecol) == 2)
            {

                popview.Visible = true;
                div_itmreqst.Visible = true;
                div_event_app.Visible = false;
                div_service.Visible = false;
                div_visitor.Visible = false;
                div_leavereq.Visible = false;
                div_complaints.Visible = false;
                view1();
                panelrollnopop.Visible = false;
                if (rdo_approval.Checked == true)
                {

                    txt_dept.ReadOnly = true;
                    txt_reqremarks.ReadOnly = true;
                    txt_exdate.ReadOnly = true;
                    btn_additem.Enabled = false;
                    txt_date.ReadOnly = true;
                    cb_other.Enabled = false;
                    cb_own.Enabled = false;
                    for (int i = 0; i < SelectdptGrid.Rows.Count; i++)
                    {
                        //Added By Saranyadevi 5.4.2018
                        TextBox txtqty = (TextBox)SelectdptGrid.Rows[i].FindControl("txt_quantity");
                        //txtqty.ReadOnly = true;
                        txtqty.ReadOnly = false;
                        CheckBox txtselect = (CheckBox)SelectdptGrid.Rows[i].FindControl("cb_select");
                        txtselect.Enabled = true;
                        txtselect.Checked = true;
                        //Added By Saranyadevi 30.11.2018
                        TextBox txtsuggqty = (TextBox)SelectdptGrid.Rows[i].FindControl("txt_SuggestedCost");
                        txtsuggqty.ReadOnly = false;

                    }
                }
            }
        }
        catch
        {
        }
    }
    protected void fpspread2_ButtonCommand(object sender, FarPoint.Web.Spread.SpreadCommandEventArgs e)
    {
        try
        {
            string activerow = "";
            string activecol = "";
            activerow = Fpspread2.ActiveSheetView.ActiveRow.ToString();
            activecol = Fpspread2.ActiveSheetView.ActiveColumn.ToString();
            string actrow = e.SheetView.ActiveRow.ToString();
            string actcol = e.SheetView.ActiveColumn.ToString();
            if (Convert.ToInt32(activecol) == 2)
            {
                popview.Visible = true;
                div_itmreqst.Visible = false;
                div_service.Visible = true;
                div_visitor.Visible = false;
                div_complaints.Visible = false;
                div_leavereq.Visible = false;
                paneladd.Visible = false;
                div_event_app.Visible = false;
                panelrollnopop.Visible = false;
                view2();
                panelrollnopop.Visible = false;
                if (rdo_approval.Checked == true)
                {
                    cb_serown.Enabled = false;
                    cb_serother.Enabled = false;
                    txt_serreqdate.Enabled = false;
                    txt_serdept.ReadOnly = true;
                    txt_serremarks.ReadOnly = true;
                    txt_serexpdate.Enabled = false;
                    btn_seradditem.Enabled = false;
                    for (int i = 0; i < Sergrid.Rows.Count; i++)
                    {
                        TextBox txtqty = (TextBox)Sergrid.Rows[i].FindControl("txt_serquantity");
                        txtqty.ReadOnly = true;
                        CheckBox txtselect = (CheckBox)Sergrid.Rows[i].FindControl("cb_select");
                        txtselect.Enabled = false;
                        DropDownList ddlselect = (DropDownList)Sergrid.Rows[i].FindControl("gridddl_loc");
                        ddlselect.Enabled = false;
                        DropDownList ddlselect1 = (DropDownList)Sergrid.Rows[i].FindControl("gridddl_sugvendor");
                        ddlselect1.Enabled = false;
                    }
                }
            }
        }
        catch
        {
        }
    }
    protected void fpspread3_ButtonCommand(object sender, FarPoint.Web.Spread.SpreadCommandEventArgs e)
    {
        try
        {
            string activerow = "";
            string activecol = "";
            activerow = Fpspread3.ActiveSheetView.ActiveRow.ToString();
            activecol = Fpspread3.ActiveSheetView.ActiveColumn.ToString();
            string actrow = e.SheetView.ActiveRow.ToString();
            string actcol = e.SheetView.ActiveColumn.ToString();
            if (Convert.ToInt32(activecol) == 2)
            {
                popview.Visible = true;
                div_itmreqst.Visible = false;
                div_service.Visible = false;
                div_visitor.Visible = true;
                div_leavereq.Visible = false;
                div_event_app.Visible = false;
                div_complaints.Visible = false;
                panelrollnopop.Visible = false;
                view3();
                panelrollnopop.Visible = false;
                btn_print.Visible = true;
                if (rdo_approval.Checked == true)
                {
                    txt_visitorreqdate.Enabled = false;
                    txt_cname.ReadOnly = true;
                    txt_name.ReadOnly = true;
                    ddl_designation.Enabled = false;
                    btn_desgplus.Enabled = false;
                    btn_desgminus.Enabled = false;
                    ddl_department.Enabled = false;
                    txt_visitoremail.ReadOnly = true;
                    txt_visitorph.ReadOnly = true;
                    txt_visitormob.ReadOnly = true;
                    txt_dept_to.ReadOnly = true;
                    txt_dept_cc.ReadOnly = true;
                    txt_visitorpurpose.ReadOnly = true;
                    txt_visitdate.Enabled = false;
                    ddl_hrs.Enabled = false;
                    ddl_mins.Enabled = false;
                    ddl_ampm.Enabled = false;
                    btn_deptplus.Enabled = false;
                    btn_deptminus.Enabled = false;
                    cb_dept.Enabled = false;
                    cb_dept.Enabled = false;
                    btn_stud_deptto_add.Enabled = false;
                    btn_stud_deptto_rmv.Enabled = false;
                    btn_stud_deptcc_add.Enabled = false;
                    btn_stud_deptcc_remove.Enabled = false;
                }
            }
        }
        catch
        {
        }
    }
    protected void fpspread4_ButtonCommand(object sender, FarPoint.Web.Spread.SpreadCommandEventArgs e)
    {
        try
        {
            string activerow = "";
            string activecol = "";
            activerow = Fpspread4.ActiveSheetView.ActiveRow.ToString();
            activecol = Fpspread4.ActiveSheetView.ActiveColumn.ToString();
            string actrow = e.SheetView.ActiveRow.ToString();
            string actcol = e.SheetView.ActiveColumn.ToString();
            if (Convert.ToInt32(activecol) == 2)
            {
                popview.Visible = true;
                div_itmreqst.Visible = false;
                div_event_app.Visible = false;
                div_visitor.Visible = false;
                div_complaints.Visible = true;
                div_leavereq.Visible = false;
                panelrollnopop.Visible = false;
                view4();
                panelrollnopop.Visible = false;
                if (rdo_approval.Checked == true)
                {
                    txt_compreqdate.ReadOnly = true;
                    txt_regards.ReadOnly = true;
                    btn_compplus.Enabled = false;
                    btn_compminus.Enabled = false;
                    btn_sugplus.Enabled = false;
                    btn_sugminus.Enabled = false;
                    ddl_suggestions.Enabled = false;
                    ddl_complaints.Enabled = false;
                }
            }
        }
        catch
        {
        }
    }
    protected void fpspread5_ButtonCommand(object sender, FarPoint.Web.Spread.SpreadCommandEventArgs e)
    {
        try
        {
            string activerow = "";
            string activecol = "";
            activerow = Fpspread5.ActiveSheetView.ActiveRow.ToString();
            activecol = Fpspread5.ActiveSheetView.ActiveColumn.ToString();
            string actrow = e.SheetView.ActiveRow.ToString();
            string actcol = e.SheetView.ActiveColumn.ToString();
            Fpspread5.SaveChanges();
            if (actcol == "1") // poo
            {
                if (actrow.Trim() == "0" && actcol.Trim() == Convert.ToString(1))
                {
                    if (Fpspread5.Sheets[0].Rows.Count > 0)
                    {
                        if (Convert.ToInt32(Fpspread5.Sheets[0].Cells[0, 1].Value) == 1)
                        {
                            for (int intF = 0; intF < Fpspread5.Sheets[0].Rows.Count; intF++)
                            {
                                Fpspread5.Sheets[0].Cells[intF, 1].Value = 1;
                            }
                        }
                        else
                        {
                            for (int intF = 0; intF < Fpspread5.Sheets[0].Rows.Count; intF++)
                            {
                                Fpspread5.Sheets[0].Cells[intF, 1].Value = 0;
                            }

                        }
                    }
                }
            }
            else if (actcol == "2")
            {
                popview.Visible = true;
                div_itmreqst.Visible = false;
                div_leavereq.Visible = true;
                div_event_app.Visible = false;
                div_complaints.Visible = false;
                div_visitor.Visible = false;
                panelrollnopop.Visible = false;
                view5();
                if (rdo_request.Checked == true)
                {
                    if (Fpspread5.Sheets[0].Cells[Convert.ToInt32(actrow), Convert.ToInt32(actcol)].BackColor == ColorTranslator.FromHtml("#A4F9C9"))
                    {
                        btnApprCancel.Visible = false;
                        btnpartcancel.Visible = false;

                        string query = "";
                        string Master1 = "";

                        if ((Session["group_code"].ToString().Trim() != "") && (Session["group_code"].ToString().Trim() != "0") && (Session["group_code"].ToString().Trim() != "-1"))
                        {
                            string group = Session["group_code"].ToString();
                            if (group.Contains(';'))
                            {
                                string[] group_semi = group.Split(';');
                                Master1 = group_semi[0].ToString();
                                query = "select * from Master_Settings where settings ='Leave Approval Permission' and group_code ='" + Master1 + "'";
                            }
                            else
                                query = "select * from Master_Settings where settings ='Leave Approval Permission' and group_code ='" + group + "'"; // poo 11.12.17
                        }
                        else
                        {
                            query = "select * from Master_Settings where settings ='Leave Approval Permission' AND usercode='" + usercode + "'";
                        }

                        DataSet qrycheck = new DataSet();
                        qrycheck.Clear();
                        qrycheck = d2.select_method_wo_parameter(query, "text");

                        if (qrycheck.Tables[0].Rows.Count > 0)
                        {
                            for (int i = 0; i < qrycheck.Tables[0].Rows.Count; i++)
                            {
                                string val = Convert.ToString(qrycheck.Tables[0].Rows[i]["value"]);
                                requestpermissioncheck = val;
                            }
                        }
                        if (requestpermissioncheck == "1")//delsi2711
                        {

                            string usergrpcode = string.Empty;
                            if ((Session["group_code"].ToString().Trim() != "") && (Session["group_code"].ToString().Trim() != "0") && (Session["group_code"].ToString().Trim() != "-1"))
                            {
                                string group = Session["group_code"].ToString();
                                if (group.Contains(';'))
                                {
                                    string[] group_semi = group.Split(';');
                                    usergrpcode = group_semi[0].ToString();

                                }
                                else
                                {
                                    usergrpcode = group;

                                }

                            }
                            else
                            {
                                usergrpcode = usercode;
                            }

                            int Settings = 0;
                            int.TryParse(Convert.ToString(d2.GetFunction(" select LinkValue from New_InsSettings where LinkName='Requestforcancel' and user_code ='" + usergrpcode + "'")), out Settings);
                            if (Settings == 1)
                            {
                                Request_cancelHierbased.Visible = true;

                            }
                            else
                            {
                                Request_cancelHierbased.Visible = false;
                            }

                        }
                    }
                    else
                    {
                        btnApprCancel.Visible = false;
                        Request_cancelHierbased.Visible = false;
                        string query = "";
                        string Master1 = "";

                        if ((Session["group_code"].ToString().Trim() != "") && (Session["group_code"].ToString().Trim() != "0") && (Session["group_code"].ToString().Trim() != "-1"))
                        {
                            string group = Session["group_code"].ToString();
                            if (group.Contains(';'))
                            {
                                string[] group_semi = group.Split(';');
                                Master1 = group_semi[0].ToString();
                                query = "select * from Master_Settings where settings ='Leave Approval Permission' and group_code ='" + Master1 + "'";
                            }
                            else
                                query = "select * from Master_Settings where settings ='Leave Approval Permission' and group_code ='" + group + "'"; // poo 11.12.17
                        }
                        else
                        {
                            query = "select * from Master_Settings where settings ='Leave Approval Permission' AND usercode='" + usercode + "'";
                        }

                        DataSet qrycheck = new DataSet();
                        qrycheck.Clear();
                        qrycheck = d2.select_method_wo_parameter(query, "text");

                        if (qrycheck.Tables[0].Rows.Count > 0)
                        {
                            for (int i = 0; i < qrycheck.Tables[0].Rows.Count; i++)
                            {
                                string val = Convert.ToString(qrycheck.Tables[0].Rows[i]["value"]);
                                requestpermissioncheck = val;
                            }
                        }
                        if (requestpermissioncheck == "1")//delsi2711
                        {

                            string usergrpcode = string.Empty;
                            if ((Session["group_code"].ToString().Trim() != "") && (Session["group_code"].ToString().Trim() != "0") && (Session["group_code"].ToString().Trim() != "-1"))
                            {
                                string group = Session["group_code"].ToString();
                                if (group.Contains(';'))
                                {
                                    string[] group_semi = group.Split(';');
                                    usergrpcode = group_semi[0].ToString();

                                }
                                else
                                {
                                    usergrpcode = group;

                                }

                            }
                            else
                            {
                                usergrpcode = usercode;
                            }

                            int Settings = 0;
                            int.TryParse(Convert.ToString(d2.GetFunction(" select LinkValue from New_InsSettings where LinkName='Requestforcancel' and user_code ='" + usergrpcode + "'")), out Settings);
                            if (Settings == 1)
                            {
                                btnpartcancel.Visible = false;

                            }
                            else
                            {

                                btnpartcancel.Visible = true;
                            }


                        }



                    }


                }

                else
                    btnApprCancel.Visible = false;
                if (rdo_approval.Checked == true)
                {
                    txt_staff_code.ReadOnly = true;
                    txt_staff_name.ReadOnly = true;
                    txt_dep.ReadOnly = true;
                    txt_des.ReadOnly = true;
                    ddl_leave_type.Enabled = false;
                    rdlist.Enabled = false;
                    rdlist1.Enabled = false;
                    Request_cancelHierbased.Visible = false;
                    // ddl_leavereason.Enabled = false;
                    txtleavereason.Enabled = false;


                    string usergrpcode = string.Empty;
                    if ((Session["group_code"].ToString().Trim() != "") && (Session["group_code"].ToString().Trim() != "0") && (Session["group_code"].ToString().Trim() != "-1"))
                    {
                        string group = Session["group_code"].ToString();
                        if (group.Contains(';'))
                        {
                            string[] group_semi = group.Split(';');
                            usergrpcode = group_semi[0].ToString();

                        }
                        else
                        {
                            usergrpcode = group;

                        }

                    }
                    else
                    {
                        usergrpcode = usercode;
                    }

                    int leavetypechangeright = 0;

                    int.TryParse(Convert.ToString(d2.GetFunction(" select LinkValue from New_InsSettings where LinkName='Change LeaveType Rights' and user_code ='" + usergrpcode + "' ")), out leavetypechangeright);
                    if (leavetypechangeright == 1)
                    {
                        ddl_leave_type.Enabled = true;
                    }
                    else
                    {
                        ddl_leave_type.Enabled = false;
                    }

                }
                if (rdo_waiting.Checked == true)
                {
                    if (Fpspread5.Sheets[0].Cells[Convert.ToInt32(actrow), Convert.ToInt32(actcol)].BackColor == ColorTranslator.FromHtml("#A4F9C9"))
                    {
                        btnpartcancel.Visible = true;

                        Request_cancelHierbased.Visible = false;
                        btnpartcancel.Text = "Request Cancel After Approve";

                    }

                }
                if (rdo_waiting.Checked == true) // added by jairam 20-07-2017
                {
                    if (LoginStaffApplid.Trim() != "" && LoginStaffApplid.Trim() != "0")
                    {
                        string CheckCancel = d2.GetFunction("select reqCancelRights from RQ_RequestHierarchy where ReqAppStaffAppNo ='" + LoginStaffApplid + "' and requestType='5'");
                        if (CheckCancel.Trim() == "True")
                        {
                            btnApprCancel.Visible = true;
                        }
                        else
                        {
                            btnApprCancel.Visible = false;
                        }
                    }
                }
            }
        }
        catch
        {
        }
        //}
    }
    protected void fpspread6_ButtonCommand(object sender, FarPoint.Web.Spread.SpreadCommandEventArgs e)
    {
        try
        {
            string activerow = "";
            string activecol = "";
            activerow = Fpspread6.ActiveSheetView.ActiveRow.ToString();
            activecol = Fpspread6.ActiveSheetView.ActiveColumn.ToString();
            string actrow = e.SheetView.ActiveRow.ToString();
            string actcol = e.SheetView.ActiveColumn.ToString();
            if (Convert.ToInt32(activecol) == 2)
            {
                popview.Visible = true;
                div_itmreqst.Visible = false;
                panelrollnopop.Visible = true;
                //pan_gatepass.Visible = true;
                div_itmreqst.Visible = false;
                div_service.Visible = false;
                div_visitor.Visible = false;
                view6();
                div_complaints.Visible = false;
                div_leavereq.Visible = false;
                div_event_app.Visible = false;
            }
        }
        catch
        {
        }
    }
    protected void fpspread7_ButtonCommand(object sender, FarPoint.Web.Spread.SpreadCommandEventArgs e)
    {
        try
        {
            string activerow = "";
            string activecol = "";
            string path1 = "";
            activerow = Fpspread7.ActiveSheetView.ActiveRow.ToString();
            activecol = Fpspread7.ActiveSheetView.ActiveColumn.ToString();
            string actrow = e.SheetView.ActiveRow.ToString();
            string actcol = e.SheetView.ActiveColumn.ToString();
            if (Convert.ToInt32(activecol) == 2)
            {
                popview.Visible = true;
                div_itmreqst.Visible = false;
                panelrollnopop.Visible = false;
                div_itmreqst.Visible = false;
                div_service.Visible = false;
                div_visitor.Visible = false;
                div_leavereq.Visible = false;
                div_complaints.Visible = false;
                div_event_app.Visible = true;
                div_gate_reqstn.Visible = false;
                view7();
            }
            if (Convert.ToInt32(activecol) == 3)
            {
                string fileName = string.Empty;
                string rqnumb = Fpspread7.Sheets[0].Cells[Convert.ToInt32(activerow), 4].Text.ToString();
                string rqk = d2.GetFunction("select RequisitionPK from RQ_Requisition where RequestCode='" + rqnumb + "'");
                path1 = d2.GetFunction("select filename from RQ_RequisitionDet where RequisitionFK='" + rqk + "'");
                // path1 = Fpspread7.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text;
                string strquer = "SELECT filename,AttachDoc,filetype FROM RQ_RequisitionDet WHERE filename='" + path1 + "'";
                DataSet dsquery = d2.select_method(strquer, hat, "Text");
                for (int i = 0; i < dsquery.Tables[0].Rows.Count; i++)
                {
                    Response.ContentType = dsquery.Tables[0].Rows[i]["filetype"].ToString();
                    Response.AddHeader("Content-Disposition", "attachment;filename=\"" + dsquery.Tables[0].Rows[i]["filename"] + "\"");
                    Response.BinaryWrite((byte[])dsquery.Tables[0].Rows[i]["AttachDoc"]);
                    Response.End();
                    Cellclick = false;
                }
            }
        }
        catch
        {
        }
    }
    protected void fpspread9_ButtonCommand(object sender, FarPoint.Web.Spread.SpreadCommandEventArgs e)
    {
        try
        {
            string activerow = "";
            string activecol = "";
            activerow = Fpspread9.ActiveSheetView.ActiveRow.ToString();
            activecol = Fpspread9.ActiveSheetView.ActiveColumn.ToString();
            string actrow = e.SheetView.ActiveRow.ToString();
            string actcol = e.SheetView.ActiveColumn.ToString();
            if (Convert.ToInt32(activecol) == 2)
            {
                popview.Visible = true;
                div_itmreqst.Visible = false;
                view9();
                if (rdo_request.Checked == true)
                {
                    if (Fpspread9.Sheets[0].Cells[Convert.ToInt32(actrow), Convert.ToInt32(actcol)].BackColor == ColorTranslator.FromHtml("#A4F9C9"))
                        btnApprCancel.Visible = false;
                    else
                        btnApprCancel.Visible = false;
                }
                else
                    btnApprCancel.Visible = false;
            }
        }
        catch
        {
        }
    }
    public void binddepartment()
    {
        try
        {
            string deptquery = "";
            bool Is_Staff;
            string staff_code = "";
            string deptcode = "";
            Is_Staff = Convert.ToBoolean(d2.GetFunction("select Is_Staff from UserMaster where User_Code='" + usercode + "' and college_code='" + collegecode1 + "'"));
            staff_code = d2.GetFunction("select staff_code from UserMaster where User_Code='" + usercode + "' and college_code='" + collegecode1 + "'");
            string otherdeptcode = d2.GetFunction("select  dm.dept_code from desig_master dm,staff_appl_master sa,staffmaster sm,UserMaster um where sa.appl_no=sm.appl_no and sa.desig_code=dm.desig_code and sm.staff_code=um.staff_code and um.is_staff=1 and um.staff_code='" + staff_code + "' and um.college_code='" + collegecode1 + "'");
            string[] split = otherdeptcode.Split(';');
            for (int i = 0; i < split.Length; i++)
            {
                if (deptcode == "")
                {
                    deptcode = split[i];
                }
                else
                {
                    deptcode = deptcode + "'" + "," + "'" + split[i];
                }
            }
            CheckBox cbown = new CheckBox();
            CheckBox cbother = new CheckBox();
            if (div_itmreqst.Visible == true)
            {
                cbown = cb_own;
                cbother = cb_other;
            }
            else if (div_service.Visible == true)
            {
                cbown = cb_serown;
                cbother = cb_serother;
            }
            string sql = d2.GetFunction("");
            if (Is_Staff == true)
            {
                if (cbown.Checked == true)
                {
                    deptquery = "select distinct hr.dept_code as DeptCode,hr.Dept_Name as DeptName from hrdept_master hr,UserMaster um,staffmaster sm,staff_appl_master sa where um.staff_code=sm.staff_code and sm.appl_no=sa.appl_no and sa.dept_code=hr.dept_code and um.is_staff=1 and um.staff_code='" + staff_code + "' and hr.college_code ='" + collegecode1 + "' order by hr.dept_code ";
                }
                else if (cbother.Checked == true)
                {
                    deptquery = "select distinct hr.dept_code as DeptCode,hr.Dept_Name as DeptName from hrdept_master hr,UserMaster um,staffmaster sm,staff_appl_master sa,desig_master dm where sa.desig_code=dm.desig_code and um.staff_code=sm.staff_code and sm.appl_no=sa.appl_no   and um.is_staff=1 and um.staff_code='" + staff_code + "' and hr.dept_code   in('" + deptcode + "') and hr.college_code ='" + collegecode1 + "' order by hr.dept_code";
                }
                else
                {
                    deptquery = "select distinct hr.dept_code as DeptCode,hr.Dept_Name as DeptName from hrdept_master hr,UserMaster um,staffmaster sm,staff_appl_master sa,desig_master dm where sa.desig_code=dm.desig_code and um.staff_code=sm.staff_code and sm.appl_no=sa.appl_no   and um.is_staff=1 and um.staff_code='" + staff_code + "' and hr.dept_code   in('" + deptcode + "') and hr.college_code ='" + collegecode1 + "' order by hr.dept_code";
                }
            }
            else if (Is_Staff == false)
            {
                deptquery = "select distinct dept_code as DeptCode,dept_name as DeptName from hrdept_master where college_code='" + collegecode1 + "' order by Dept_Code";
            }
            //select Dept_Code as DeptCode ,Dept_Name as DeptName from Department where college_code ='" + collegecode1 + "' order by Dept_Code ";
            ds.Clear();
            ds = d2.select_method_wo_parameter(deptquery, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                dptgrid.DataSource = ds;
                dptgrid.DataBind();
            }
        }
        catch
        {
        }
    }
    protected void btn_dept1_Click(object sender, EventArgs e)
    {
        try
        {
            binddepartment();
            Newdiv.Visible = true;
        }
        catch
        {
        }
    }
    protected void btn_seradditem_Click(object sender, EventArgs e)
    {
        ViewState["selecteditems1"] = null;
        selectitemgrid.DataSource = null;
        selectitemgrid.DataBind();
        popwindow1.Visible = true;
        // btn_go1_Click(sender, e);
        txt_searchby.Visible = true;
    }
    protected void serSelectdptGrid_RowCommand(object sender, GridViewCommandEventArgs e)
    {
        try
        {
            int row = Convert.ToInt32(e.CommandArgument);
            Session["rowvalue"] = Convert.ToString(row);
            if (e.CommandName == "instruction")
            {
                string itemcode = ((Sergrid.Rows[row].FindControl("lbl_seritemcode") as Label).Text);
                string itemname = ((Sergrid.Rows[row].FindControl("lbl_seritemname") as Label).Text);
                string qunatity = ((Sergrid.Rows[row].FindControl("lblserquantity") as Label).Text);
                // btn_additem2.Text = "Update";
                Session["itemnewcode"] = Convert.ToString(itemcode);
            }
        }
        catch
        {
        }
    }
    protected void sertypegrid_OnRowDataBound(object sender, System.Web.UI.WebControls.GridViewRowEventArgs e)
    {
        try
        {
            SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString);
            con.Open();
            if (e.Row.RowType == DataControlRowType.DataRow)
            {
                var ddl = (DropDownList)e.Row.FindControl("gridddl_sugvendor");
                // int vendorID = Convert.ToInt32(e.Row.Cells[3].Text);
                string sql = "select id,vendor_name from vendor_details where vendor_type='Approved'";
                SqlCommand cmd = new SqlCommand(sql, con);
                SqlDataAdapter da = new SqlDataAdapter(cmd);
                DataSet ds = new DataSet();
                da.Fill(ds);
                ddl.DataSource = ds;
                ddl.DataTextField = "vendor_name";
                ddl.DataValueField = "id";
                ddl.DataBind();
                ddl.Items.Insert(0, new ListItem("--Select--", "0"));
            }
        }
        catch
        {
        }
    }
    protected void cbselectAll_Change(object sender, EventArgs e)
    {
        try
        {
            if (cbselectall.Checked == true)
            {
                if (dptgrid.Rows.Count > 0)
                {
                    for (int i = 0; i < dptgrid.Rows.Count; i++)
                    {
                        (dptgrid.Rows[i].FindControl("cbcheck") as CheckBox).Checked = true;
                    }
                }
            }
            if (cbselectall.Checked == false)
            {
                if (dptgrid.Rows.Count > 0)
                {
                    for (int i = 0; i < dptgrid.Rows.Count; i++)
                    {
                        (dptgrid.Rows[i].FindControl("cbcheck") as CheckBox).Checked = false;
                    }
                }
            }
        }
        catch
        {
        }
    }
    protected void btndept_save(object sender, EventArgs e)
    {
        try
        {
            string strname = "";
            string deptcode = "";
            string departmentcode = "";
            foreach (GridViewRow row in dptgrid.Rows)
            {
                if (row.RowType == DataControlRowType.DataRow)
                {
                    CheckBox chkRow = (row.Cells[1].FindControl("cbcheck") as CheckBox);
                    if (chkRow.Checked)
                    {
                        Label lbldeptcode = (row.Cells[3].FindControl("lbldeptcode") as Label);
                        Label lbldeptname = (row.Cells[3].FindControl("lbldeptname") as Label);
                        if (strname == "")
                        {
                            strname = lbldeptname.Text;
                            deptcode = lbldeptcode.Text;
                        }
                        else
                        {
                            strname = strname + "," + lbldeptname.Text;
                            deptcode = deptcode + "," + lbldeptcode.Text;
                        }
                    }
                }
            }
            Session["departmentcode"] = deptcode;
            txt_serdept.Text = strname;
            txt_dept.Text = strname;
            Newdiv.Visible = false;
        }
        catch (Exception ex)
        {
        }
    }
    protected void btndept_exit(object sender, EventArgs e)
    {
        try
        {
            Newdiv.Visible = false;
        }
        catch
        {
        }
    }
    protected void txt_cname_TextChanged(object sender, EventArgs e)
    {
        try
        {
            string vendcompname = txt_cname.Text;
            VendorFK = Convert.ToInt64(d2.GetFunction("select VendorPK from CO_VendorMaster where VendorCompName='" + vendcompname + "' and VendorType='3'"));
        }
        catch (Exception ex)
        {
        }
    }
    protected void txt_name_TextChanged(object sender, EventArgs e)
    {
        try
        {
            string FetchData = "select VenContactName,VenContactDesig,VenContactDept,VendorPhoneNo,VendorMobileNo,VendorEmail from IM_VendorContactMaster where VenContactName='" + txt_name.Text + "' and VendorFK=" + VendorFK + "";
            ds = da.select_method_wo_parameter(FetchData, "Text");
            txt_visitoremail.Text = ds.Tables[0].Rows[0]["VendorEmail"].ToString();
            txt_visitormob.Text = ds.Tables[0].Rows[0]["VendorMobileNo"].ToString();
            txt_visitorph.Text = ds.Tables[0].Rows[0]["VendorPhoneNo"].ToString();
            string dept = ds.Tables[0].Rows[0]["VenContactDept"].ToString();
            string desg = ds.Tables[0].Rows[0]["VenContactDesig"].ToString();
            ddl_department.SelectedIndex = ddl_department.Items.IndexOf(ddl_department.Items.FindByText(dept));
            ddl_designation.SelectedIndex = ddl_designation.Items.IndexOf(ddl_designation.Items.FindByText(desg));
            loaddepartment();
            loaddesignation();
        }
        catch (Exception ex)
        {
        }
    }
    public void loaddepartment()
    {
        ddl_department.Items.Clear();
        ds.Tables.Clear();
        string sql = "select TextCode,TextVal from TextValTable where TextCriteria ='ReDep' and college_code ='" + collegecode1 + "'";
        ds = d2.select_method_wo_parameter(sql, "TEXT");
        if (ds.Tables[0].Rows.Count > 0)
        {
            ddl_department.DataSource = ds;
            ddl_department.DataTextField = "TextVal";
            ddl_department.DataValueField = "TextCode";
            ddl_department.DataBind();
            ddl_department.Items.Insert(0, new ListItem("--Select--", "0"));
        }
        else
        {
            ddl_department.Items.Insert(0, new ListItem("--Select--", "0"));
        }
    }
    public void loaddesignation()
    {
        ddl_designation.Items.Clear();
        ds.Tables.Clear();
        string sql = "select TextCode,TextVal from TextValTable where TextCriteria ='ReDes' and college_code ='" + collegecode1 + "'";
        ds = d2.select_method_wo_parameter(sql, "TEXT");
        if (ds.Tables[0].Rows.Count > 0)
        {
            ddl_designation.DataSource = ds;
            ddl_designation.DataTextField = "TextVal";
            ddl_designation.DataValueField = "TextCode";
            ddl_designation.DataBind();
            ddl_designation.Items.Insert(0, new ListItem("--Select--", "0"));
        }
        else
        {
            ddl_designation.Items.Insert(0, new ListItem("--Select--", "0"));
        }
    }
    protected void btn_desgminus_Click(object sender, EventArgs e)
    {
        if (ddl_designation.SelectedIndex == -1)
        {
            imgdiv2.Visible = true;
            lbl_alert.Text = "No records found";
        }
        else if (ddl_designation.SelectedIndex == 0)
        {
            imgdiv2.Visible = true;
            lbl_alert.Text = "Select any record";
        }
        else if (ddl_designation.SelectedIndex != 0)
        {
            string sql = "delete from textvaltable where TextCode='" + ddl_designation.SelectedItem.Value.ToString() + "' and TextCriteria='ReDes' and college_code='" + collegecode1 + "' ";
            int delete = d2.update_method_wo_parameter(sql, "TEXT");
            if (delete != 0)
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "Deleted Successfully";
            }
            else
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "No records found";
            }
            loaddesignation();
        }
        else
        {
            imgdiv2.Visible = true;
            lbl_alert.Text = "No records found";
        }
    }
    protected void btn_desgplus_Click(object sender, EventArgs e)
    {
        imgdiv6.Visible = true;
        panel_description3.Visible = true;
    }
    protected void btn_deptplus_Click(object sender, EventArgs e)
    {
        imgdiv5.Visible = true;
        panel_description2.Visible = true;
    }
    protected void btn_deptminus_Click(object sender, EventArgs e)
    {
        if (ddl_department.SelectedIndex == -1)
        {
            imgdiv2.Visible = true;
            lbl_alert.Text = "No records found";
        }
        else if (ddl_department.SelectedIndex == 0)
        {
            imgdiv2.Visible = true;
            lbl_alert.Text = "Select any record";
        }
        else if (ddl_department.SelectedIndex != 0)
        {
            string sql = "delete from textvaltable where TextCode='" + ddl_department.SelectedItem.Value.ToString() + "' and TextCriteria='ReDep' and college_code='" + collegecode1 + "' ";
            int delete = d2.update_method_wo_parameter(sql, "TEXT");
            if (delete != 0)
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "Deleted Successfully";
            }
            else
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "No records found";
            }
            loaddepartment();
        }
        else
        {
            imgdiv2.Visible = true;
            lbl_alert.Text = "No records found";
        }
    }
    protected void cb_dept_CheckedChanged(object sender, EventArgs e)
    {
        //checkdept();
        //checkdesg();
    }
    //public void checkdept()
    //{
    //    if (cb_dept.Checked == true)
    //    {
    //        div_dept.Visible = true;
    //    }
    //    else
    //    {
    //        div_dept.Visible = false;
    //    }
    //}
    //public void checkdesg()
    //{
    //    if (cb_individual.Checked == true)
    //    {
    //        div_indiv.Visible = true;
    //    }
    //    else
    //    {
    //        div_indiv.Visible = false;
    //    }
    //}
    protected void cb_individual_CheckedChanged(object sender, EventArgs e)
    {
        //checkdept();
        //checkdesg();
    }
    protected void btn_stud_deptto_add_Click(object sender, EventArgs e)
    {
        try
        {
            txt_to1.Visible = true;
        }
        catch (Exception ex)
        {
        }
    }
    protected void btn_stud_deptto_rmv_Click(object sender, EventArgs e)
    {
        try
        {
            txt_to1.Visible = false;
        }
        catch (Exception ex)
        {
        }
    }
    protected void btn_stud_deptcc_add_Click(object sender, EventArgs e)
    {
        try
        {
            txt_cc1.Visible = true;
        }
        catch (Exception ex)
        {
        }
    }
    protected void btn_stud_deptcc_remove_Click(object sender, EventArgs e)
    {
        try
        {
            txt_cc1.Visible = false;
        }
        catch (Exception ex)
        {
        }
    }
    protected void btn_stud_indito_add_Click(object sender, EventArgs e)
    {
        try
        {
            txt_indiv1.Visible = true;
        }
        catch (Exception ex)
        {
        }
    }
    protected void btn_stud_indito_rmv_Click(object sender, EventArgs e)
    {
        try
        {
            txt_indiv1.Visible = false;
        }
        catch (Exception ex)
        {
        }
    }
    protected void btn_stud_indicc_add_Click(object sender, EventArgs e)
    {
        try
        {
            txt_cc2.Visible = true;
        }
        catch (Exception ex)
        {
        }
    }
    protected void btn_stud_indicc_rmv_Click(object sender, EventArgs e)
    {
        try
        {
            txt_cc2.Visible = false;
        }
        catch (Exception ex)
        {
        }
    }
    protected void btn_deptadddesc1_Click(object sender, EventArgs e)
    {
        try
        {
            if (txt_department.Text != "")
            {
                string sql = "if exists ( select * from TextValTable where TextVal ='" + txt_department.Text + "' and TextCriteria ='ReDep' and college_code ='" + collegecode1 + "') update TextValTable set TextVal ='" + txt_department.Text + "' where TextVal ='" + txt_department.Text + "' and TextCriteria ='ReDep' and college_code ='" + collegecode1 + "' else insert into TextValTable (TextVal,TextCriteria,college_code) values ('" + txt_department.Text + "','ReDep','" + collegecode1 + "')";
                int insert = d2.update_method_wo_parameter(sql, "TEXT");
                if (insert != 0)
                {
                    imgdiv2.Visible = true;
                    lbl_alert.Text = "Saved Successfully";
                    txt_department.Text = "";
                    imgdiv5.Visible = false;
                    panel_description2.Visible = false;
                }
                loaddepartment();
            }
            else
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "Enter the description";
            }
        }
        catch (Exception ex)
        {
        }
    }
    protected void btn_deptexitdesc1_Click(object sender, EventArgs e)
    {
        imgdiv5.Visible = false;
        panel_description2.Visible = false;
    }
    protected void btn_desgadddesc1_Click(object sender, EventArgs e)
    {
        try
        {
            if (txt_designation.Text != "")
            {
                string sql = "if exists ( select * from TextValTable where TextVal ='" + txt_designation.Text + "' and TextCriteria ='ReDes' and college_code ='" + collegecode1 + "') update TextValTable set TextVal ='" + txt_designation.Text + "' where TextVal ='" + txt_designation.Text + "' and TextCriteria ='ReDes' and college_code ='" + collegecode1 + "' else insert into TextValTable (TextVal,TextCriteria,college_code) values ('" + txt_designation.Text + "','ReDes','" + collegecode1 + "')";
                int insert = d2.update_method_wo_parameter(sql, "TEXT");
                if (insert != 0)
                {
                    imgdiv2.Visible = true;
                    lbl_alert.Text = "Saved Successfully";
                    txt_designation.Text = "";
                    imgdiv6.Visible = false;
                    panel_description3.Visible = false;
                }
                loaddesignation();
            }
            else
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "Enter the description";
            }
        }
        catch (Exception ex)
        {
        }
    }
    protected void btn_desgexitdesc1_Click(object sender, EventArgs e)
    {
        imgdiv6.Visible = false;
        panel_description3.Visible = false;
    }
    protected void btn_compplus_Click(object sender, EventArgs e)
    {
        imgdiv3.Visible = true;
        panel_description.Visible = true;
    }
    protected void btn_compminus_Click(object sender, EventArgs e)
    {
        if (ddl_complaints.SelectedIndex == -1)
        {
            imgdiv2.Visible = true;
            lbl_alert.Text = "No records found";
        }
        else if (ddl_complaints.SelectedIndex == 0)
        {
            imgdiv2.Visible = true;
            lbl_alert.Text = "Select any record";
        }
        else if (ddl_complaints.SelectedIndex != 0)
        {
            string sql = "delete from textvaltable where TextCode='" + ddl_complaints.SelectedItem.Value.ToString() + "' and TextCriteria='ReCom' and college_code='" + collegecode1 + "' ";
            int delete = d2.update_method_wo_parameter(sql, "TEXT");
            if (delete != 0)
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "Deleted Successfully";
            }
            else
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "No records found";
            }
            loadcomplaints();
        }
        else
        {
            imgdiv2.Visible = true;
            lbl_alert.Text = "No records found";
        }
    }
    public void loadcomplaints()
    {
        ddl_complaints.Items.Clear();
        ds.Tables.Clear();
        string sql = "select TextCode,TextVal from TextValTable where TextCriteria ='ReCom' and college_code ='" + collegecode1 + "'";
        ds = d2.select_method_wo_parameter(sql, "TEXT");
        if (ds.Tables[0].Rows.Count > 0)
        {
            ddl_complaints.DataSource = ds;
            ddl_complaints.DataTextField = "TextVal";
            ddl_complaints.DataValueField = "TextCode";
            ddl_complaints.DataBind();
            ddl_complaints.Items.Insert(0, new ListItem("--Select--", "0"));
        }
        else
        {
            ddl_complaints.Items.Insert(0, new ListItem("--Select--", "0"));
        }
    }
    protected void btn_sugplus_Click(object sender, EventArgs e)
    {
        imgdiv4.Visible = true;
        panel_description1.Visible = true;
    }
    protected void btn_sugminus_Click(object sender, EventArgs e)
    {
        if (ddl_suggestions.SelectedIndex == -1)
        {
            imgdiv2.Visible = true;
            lbl_alert.Text = "No records found";
        }
        else if (ddl_suggestions.SelectedIndex == 0)
        {
            imgdiv2.Visible = true;
            lbl_alert.Text = "Select any record";
        }
        else if (ddl_suggestions.SelectedIndex != 0)
        {
            string sql = "delete from textvaltable where TextCode='" + ddl_suggestions.SelectedItem.Value.ToString() + "' and TextCriteria='ReSug' and college_code='" + collegecode1 + "' ";
            int delete = d2.update_method_wo_parameter(sql, "TEXT");
            if (delete != 0)
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "Deleted Successfully";
            }
            else
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "No records found";
            }
            loadsuggestions();
        }
        //else if (ddl_suggestions.SelectedIndex == -1)
        //{
        //    imgdiv2.Visible = true;
        //    lbl_erroralert.Text = "No records found";
        //}
        else
        {
            imgdiv2.Visible = true;
            lbl_alert.Text = "No records found";
        }
    }
    protected void btn_compadddesc1_Click(object sender, EventArgs e)
    {
        try
        {
            if (txt_complaints.Text != "")
            {
                string sql = "if exists ( select * from TextValTable where TextVal ='" + txt_complaints.Text + "' and TextCriteria ='ReCom' and college_code ='" + collegecode1 + "') update TextValTable set TextVal ='" + txt_complaints.Text + "' where TextVal ='" + txt_complaints.Text + "' and TextCriteria ='ReCom' and college_code ='" + collegecode1 + "' else insert into TextValTable (TextVal,TextCriteria,college_code) values ('" + txt_complaints.Text + "','ReCom','" + collegecode1 + "')";
                int insert = d2.update_method_wo_parameter(sql, "TEXT");
                if (insert != 0)
                {
                    imgdiv2.Visible = true;
                    lbl_alert.Text = "Saved Successfully";
                    txt_complaints.Text = "";
                    imgdiv3.Visible = false;
                    panel_description.Visible = false;
                }
                loadcomplaints();
            }
            else
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "Enter the description";
            }
        }
        catch (Exception ex)
        {
        }
    }
    protected void btn_compexitdesc1_Click(object sender, EventArgs e)
    {
        imgdiv3.Visible = false;
        panel_description.Visible = false;
    }
    protected void btn_sugadddesc1_Click(object sender, EventArgs e)
    {
        try
        {
            if (txt_sggestions.Text != "")
            {
                string sql = "if exists ( select * from TextValTable where TextVal ='" + txt_sggestions.Text + "' and TextCriteria ='ReSug' and college_code ='" + collegecode1 + "') update TextValTable set TextVal ='" + txt_sggestions.Text + "' where TextVal ='" + txt_sggestions.Text + "' and TextCriteria ='ReSug' and college_code ='" + collegecode1 + "' else insert into TextValTable (TextVal,TextCriteria,college_code) values ('" + txt_sggestions.Text + "','ReSug','" + collegecode1 + "')";
                int insert = d2.update_method_wo_parameter(sql, "TEXT");
                if (insert != 0)
                {
                    imgdiv2.Visible = true;
                    lbl_alert.Text = "Saved Successfully";
                    txt_sggestions.Text = "";
                    imgdiv4.Visible = false;
                    panel_description1.Visible = false;
                }
                loadsuggestions();
            }
            else
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "Enter the description";
            }
        }
        catch (Exception ex)
        {
        }
    }
    public void loadsuggestions()
    {
        ddl_suggestions.Items.Clear();
        ds.Tables.Clear();
        string sql = "select TextCode,TextVal from TextValTable where TextCriteria ='ReSug' and college_code ='" + collegecode1 + "'";
        ds = d2.select_method_wo_parameter(sql, "TEXT");
        if (ds.Tables[0].Rows.Count > 0)
        {
            ddl_suggestions.DataSource = ds;
            ddl_suggestions.DataTextField = "TextVal";
            ddl_suggestions.DataValueField = "TextCode";
            ddl_suggestions.DataBind();
            ddl_suggestions.Items.Insert(0, new ListItem("--Select--", "0"));
        }
        else
        {
            ddl_suggestions.Items.Insert(0, new ListItem("--Select--", "0"));
        }
    }
    protected void btn_sugexitdesc1_Click(object sender, EventArgs e)
    {
        imgdiv4.Visible = false;
        panel_description1.Visible = false;
    }
    protected void btn_reqsave_Click(object sender, EventArgs e)
    {
        try
        {
            string req_type = "";
            int RequestType = 0;
            string RequestCode = "";
            string query = "";
            Int64 ReqStaffAppNo = 0;
            Int64 ReqStaffDeptFK = 0;
            bool Is_Staff;
            int q = 0;
            int q1 = 0;
            string Remarks = "";
            dept();
            Is_Staff = Convert.ToBoolean(d2.GetFunction("select Is_Staff from UserMaster where User_Code='" + usercode + "' and college_code='" + collegecode1 + "'"));
            if (Is_Staff == true)
            {
                string staffcode = d2.GetFunction("select staff_code  from UserMaster where User_Code='" + usercode + "'");
                if (staffcode.Trim() != "")
                {
                    ReqStaffAppNo = Convert.ToInt64(d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcode + "'"));
                }
            }
            else if (Is_Staff == false)
            {
                ReqStaffAppNo = Convert.ToInt64(usercode);
            }
            ReqStaffDeptFK = Convert.ToInt64(d2.GetFunction("select distinct hr.dept_code as DeptCode,hr.Dept_Name as DeptName from hrdept_master hr,UserMaster um,staffmaster sm,staff_appl_master sa where um.staff_code=sm.staff_code and sm.appl_no=sa.appl_no and sa.dept_code=hr.dept_code and um.is_staff=1 and um.staff_code='" + usercode + "' and hr.college_code ='" + collegecode1 + "'"));
            if (div_itmreqst.Visible == true)
            {
                RequestType = 1;
                DateTime RequestDate = new DateTime();
                RequestDate = TextToDate(txt_date);
                DateTime ReqExpectedDate = new DateTime();
                ReqExpectedDate = TextToDate(txt_exdate);
                RequestCode = txt_reqno.Text;
                Remarks = txt_reqremarks.Text;
                if (cb_own.Checked == true && cb_other.Checked == true)
                {
                    req_type = "3";
                }
                else if (cb_own.Checked == true)
                {
                    req_type = "1";
                }
                else if (cb_other.Checked == true)
                {
                    req_type = "2";
                }
                if (txt_dept.Text != "")
                {
                    query = "insert into RQ_Requisition(RequestType,RequestCode,RequestDate,ReqExpectedDate,ReqAppNo,Remarks,ReqApproveStage,MemType,RequestBy) values('" + RequestType + "','" + RequestCode + "','" + RequestDate + "','" + ReqExpectedDate + "','" + ReqStaffAppNo + "','" + Remarks + "','0','2','" + req_type + "')";
                    q = d2.update_method_wo_parameter(query, "TEXT");
                    Int64 RequisitionFK = Convert.ToInt64(d2.GetFunction("select distinct top (1) RequisitionPK from RQ_Requisition where RequestCode='" + RequestCode + "' and RequestType='" + RequestType + "' order by RequisitionPK desc"));
                    string deptcode = Session["departmentcode"].ToString();
                    string[] split = deptcode.Split(',');
                    //Int64 itemsplit = Convert.ToInt64(split);
                    for (int code = 0; code < split.Length; code++)
                    {
                        Int64 DeptFK = Convert.ToInt64(split[code]);
                        for (int i = 0; i < SelectdptGrid.Rows.Count; i++)
                        {
                            string itemcode = Convert.ToString((SelectdptGrid.Rows[i].FindControl("lbl_itemcode") as Label).Text);
                            Int64 ItemFK = Convert.ToInt64(d2.GetFunction("select ItemPK from IM_ItemMaster where ItemCode='" + itemcode + "'"));
                            Int64 ReqQty = Convert.ToInt64((SelectdptGrid.Rows[i].FindControl("txt_quantity") as TextBox).Text);
                            if (ReqQty != null)
                            {
                                string updatequery = "INSERT INTO RQ_RequisitionDet(ItemFK,ReqQty,RequisitionFK,DeptFK) values ('" + ItemFK + "','" + ReqQty + "','" + RequisitionFK + "','" + DeptFK + "')";
                                q1 = d2.update_method_wo_parameter(updatequery, "Text");
                            }
                        }
                    }
                    if (q != 0)
                    {
                        imgdiv2.Visible = true;
                        lbl_alert.Text = "Saved Sucessfully";
                        ItemReqNo();
                        mainclear();
                    }
                }
                else
                {
                    imgdiv2.Visible = true;
                    lbl_alert.Text = "Select any department";
                }
            }
            else if (div_service.Visible == true)
            {
                RequestType = 2;
                DateTime RequestDate = new DateTime();
                RequestDate = TextToDate(txt_serreqdate);
                DateTime ReqExpectedDate = new DateTime();
                ReqExpectedDate = TextToDate(txt_serexpdate);
                RequestCode = txt_serreqno.Text;
                Remarks = txt_serremarks.Text;
                if (cb_serown.Checked == true && cb_serother.Checked == true)
                {
                    req_type = "3";
                }
                else if (cb_serown.Checked == true)
                {
                    req_type = "1";
                }
                else if (cb_serother.Checked == true)
                {
                    req_type = "2";
                }
                // Int64 SugVendorFK = Convert.ToInt64(d2.GetFunction("select id from vendor_details where vendor_name like '" + txt_sersugvendor.Text + "'"));
                if (txt_serdept.Text != "")
                {
                    query = "insert into RQ_Requisition(RequestType,RequestCode,RequestDate,ReqExpectedDate,ReqAppNo,Remarks,MemType,ReqApproveStage,RequestBy) values('" + RequestType + "','" + RequestCode + "','" + RequestDate + "','" + ReqExpectedDate + "','" + ReqStaffAppNo + "','" + Remarks + "','2','0','" + req_type + "')";
                    q = d2.update_method_wo_parameter(query, "TEXT");
                    Int64 RequisitionFK = Convert.ToInt64(d2.GetFunction("select distinct top (1) RequisitionPK from RQ_Requisition where RequestCode='" + RequestCode + "' and RequestType='" + RequestType + "' order by RequisitionPK desc"));
                    string deptcode = Session["departmentcode"].ToString();
                    string[] split = deptcode.Split(',');
                    //Int64 itemsplit = Convert.ToInt64(split);
                    for (int code = 0; code < split.Length; code++)
                    {
                        Int64 DeptFK = Convert.ToInt64(split[code]);
                        for (int i = 0; i < Sergrid.Rows.Count; i++)
                        {
                            DropDownList ddlNew = (DropDownList)Sergrid.Rows[i].FindControl("gridddl_loc");
                            int SugServiceLoc = Convert.ToInt16(ddlNew.SelectedItem.Value);
                            DropDownList ddlvendor = (DropDownList)Sergrid.Rows[i].FindControl("gridddl_sugvendor");
                            Int64 SugVendorFK = Convert.ToInt64(ddlvendor.SelectedItem.Value);
                            string itemcode = Convert.ToString((Sergrid.Rows[i].FindControl("lbl_seritemcode") as Label).Text);
                            Int64 ItemFK = Convert.ToInt64(d2.GetFunction("select ItemPK from IM_ItemMaster where ItemCode='" + itemcode + "'"));
                            Int64 ReqQty = Convert.ToInt64((Sergrid.Rows[i].FindControl("txt_serquantity") as TextBox).Text);
                            if (ReqQty != null)
                            {
                                string updatequery = "INSERT INTO RQ_RequisitionDet(ItemFK,ReqQty,RequisitionFK,DeptFK,SugServiceLoc,SugVendorFK) values ('" + ItemFK + "','" + ReqQty + "','" + RequisitionFK + "','" + DeptFK + "'," + SugServiceLoc + "," + SugVendorFK + ")";
                                q1 = d2.update_method_wo_parameter(updatequery, "Text");
                            }
                        }
                    }
                    if (q != 0)
                    {
                        imgdiv2.Visible = true;
                        lbl_alert.Text = "Saved Sucessfully";
                        ItemReqNo();
                        mainclear();
                    }
                }
                else
                {
                    imgdiv2.Visible = true;
                    lbl_alert.Text = "Select any department";
                }
            }
            else if (div_visitor.Visible == true)
            {
                RequestType = 3;
                DateTime RequestDate = new DateTime();
                RequestDate = TextToDate(txt_visitorreqdate);
                RequestCode = txt_visitorreqno.Text;
                DateTime ReqExpectedDate = new DateTime();
                ReqExpectedDate = TextToDate(txt_visitdate);
                string ReqExpectedTime = ddl_hrs.SelectedItem.Text + ":" + ddl_mins.SelectedItem.Text + " " + ddl_ampm.SelectedItem.Text;
                string MeetDeptCode = "";
                string MeetStaffAppNo = "";
                string VendorCode = txt_address.Text;
                string vendoraddress = "";
                string VenCode = d2.GetFunction("select VendorCode from CO_VendorMaster where VendorType=3 and VendorCompName like '" + txt_cname.Text + "%'");
                if (VenCode != "" && VenCode != null && VenCode != "0")
                {
                    VendorCode = VenCode;
                }
                else
                {
                    VendorCodeGen();
                    VendorCode = Session["VendorCode"].ToString();

                    string venmst = "if exists (select * from CO_VendorMaster where VendorCode='" + VendorCode + "' and VendorCompName='" + txt_cname.Text + "' and VendorType='3') update CO_VendorMaster set VendorCode='" + VendorCode + "',VendorCompName='" + txt_cname.Text + "',VendorType='3',VendorAddress='" + vendoraddress + "' where VendorCode='" + VendorCode + "' and VendorCompName='" + txt_cname.Text + "' and VendorType='3' else insert into CO_VendorMaster(VendorCode,VendorCompName,VendorType,VendorAddress) values('" + VendorCode + "','" + txt_cname.Text + "','3','" + vendoraddress + "')";
                    int vc = d2.update_method_wo_parameter(venmst, "TEXT");
                }
                Int64 VendorFK = Convert.ToInt64(d2.GetFunction("select VendorPK from CO_VendorMaster where VendorType='3' and VendorCode='" + VendorCode + "' "));
                string vencmst = "if exists(select * from IM_VendorContactMaster where VendorFK='" + VendorFK + "' and VenContactName='" + txt_name.Text + "' and VendorMobileNo='" + txt_visitormob.Text + "' and VenContactDesig='" + ddl_designation.SelectedItem.Text + "' and VenContactDept='" + ddl_department.SelectedItem.Text + "') update IM_VendorContactMaster set VendorFK='" + VendorFK + "',VenContactName='" + txt_name.Text + "',VenContactDesig='" + ddl_designation.SelectedItem.Text + "',VenContactDept='" + ddl_department.SelectedItem.Text + "',VendorMobileNo='" + txt_visitormob.Text + "',VendorPhoneNo='" + txt_visitorph.Text + "',VendorEmail='" + txt_visitoremail.Text + "' where VendorFK='" + VendorFK + "' and VenContactName='" + txt_name.Text + "' and VendorMobileNo='" + txt_visitormob.Text + "' and VenContactDesig='" + ddl_designation.SelectedItem.Text + "' and VenContactDept ='" + ddl_department.SelectedItem.Text + "' else insert into IM_VendorContactMaster(VendorFK,VenContactName,VenContactDesig,VenContactDept,VendorMobileNo,VendorPhoneNo,VendorEmail) values('" + VendorFK + "','" + txt_name.Text + "','" + ddl_designation.SelectedItem.Text + "','" + ddl_department.SelectedItem.Text + "','" + txt_visitormob.Text + "','" + txt_visitorph.Text + "','" + txt_visitoremail.Text + "')";
                int vcm = d2.update_method_wo_parameter(vencmst, "TEXT");
                Int64 VendorContactFK = Convert.ToInt64(d2.GetFunction("select VendorContactPK from IM_VendorContactMaster where VendorFk='" + VendorFK + "' and VenContactName='" + txt_name.Text + "' and VendorMobileNo='" + txt_visitormob.Text + "' and VenContactDesig='" + ddl_designation.SelectedItem.Text + "'"));
                int MeetToStaff = 0;
                int MeetToDept = 0;
                if (cb_dept.Checked == true)
                {
                    MeetToDept = 1;
                }
                if (cb_individual.Checked == true)
                {
                    MeetToStaff = 1;
                }
                if (txt_cname.Text != "" && txt_name.Text != "")
                {
                    if (cb_dept.Checked != false || cb_individual.Checked != false)
                    {
                        //for Department Meet
                        if (txt_dept_to.Text != "")
                        {
                            MeetDeptCode = d2.GetFunction("select Dept_Code from Department where Dept_Name ='" + txt_dept_to.Text + "'");
                        }
                        if (txt_to1.Text != "")
                        {
                            MeetDeptCode = MeetDeptCode + "," + d2.GetFunction("select Dept_Code from Department where Dept_Name ='" + txt_to1.Text + "'");
                        }
                        if (txt_dept_cc.Text != "")
                        {
                            MeetDeptCode = MeetDeptCode + "," + d2.GetFunction("select Dept_Code from Department where Dept_Name ='" + txt_dept_cc.Text + "'");
                        }
                        if (txt_cc1.Text != "")
                        {
                            MeetDeptCode = MeetDeptCode + "," + d2.GetFunction("select Dept_Code from Department where Dept_Name ='" + txt_cc1.Text + "'");
                        }
                        // for Staff Meet 
                        if (txt_indiv.Text != "")
                        {
                            MeetStaffAppNo = d2.GetFunction("select appl_no from staffmaster where staff_name='" + txt_dept_to.Text + "'");
                        }
                        if (txt_indiv1.Text != "")
                        {
                            MeetStaffAppNo = MeetStaffAppNo + "," + d2.GetFunction("select appl_no from staffmaster where staff_name='" + txt_to1.Text + "'");
                        }
                        if (txt_indiv_cc.Text != "")
                        {
                            MeetStaffAppNo = MeetStaffAppNo + "," + d2.GetFunction("select appl_no from staffmaster where staff_name='" + txt_dept_cc.Text + "'");
                        }
                        if (txt_cc2.Text != "")
                        {
                            MeetStaffAppNo = MeetStaffAppNo + "," + d2.GetFunction("select appl_no from staffmaster where staff_name='" + txt_cc1.Text + "'");
                        }
                        query = "insert into RQ_Requisition(RequestType,RequestCode,RequestDate,ReqExpectedDate,ReqExpectedTime,Remarks,MeetDeptCode,MeetStaffAppNo,VendorFk,VendorContactFK,MeetToStaff,MeetToDept,ReqAppNo,ReqApproveStage,MemType) values('" + RequestType + "','" + RequestCode + "','" + RequestDate + "','" + ReqExpectedDate + "','" + ReqExpectedTime + "','" + txt_visitorpurpose.Text + "','" + MeetDeptCode + "','" + MeetStaffAppNo + "','" + VendorFK + "','" + VendorContactFK + "'," + MeetToStaff + "," + MeetToDept + ",'" + ReqStaffAppNo + "','0','2')";
                        q = d2.update_method_wo_parameter(query, "TEXT");
                        Int64 RequisitionFK = Convert.ToInt64(d2.GetFunction("select distinct top (1) RequisitionPK from RQ_Requisition where RequestCode='" + RequestCode + "' and RequestType='" + RequestType + "' order by RequisitionPK desc"));
                        string department_code1 = Convert.ToString(txt_dept_to.Text);
                        string department_code2 = Convert.ToString(txt_to1.Text);
                        string department_code3 = Convert.ToString(txt_dept_cc.Text);
                        string department_code4 = Convert.ToString(txt_cc1.Text);
                        string code = "";
                        string code1 = "";
                        string deptcode1 = Convert.ToString(depthash[Convert.ToString(department_code1)]);
                        if (deptcode1.Trim() != "")
                        {
                            if (code == "")
                            {
                                code = deptcode1;
                            }
                            else
                            {
                                code = code + "," + deptcode1;
                            }
                        }
                        string deptcode2 = Convert.ToString(depthash[Convert.ToString(department_code2)]);
                        if (deptcode2.Trim() != "")
                        {
                            if (code == "")
                            {
                                code = deptcode2;
                            }
                            else
                            {
                                code = code + "," + deptcode2;
                            }
                        }
                        string deptcode3 = Convert.ToString(depthash[Convert.ToString(department_code3)]);
                        if (deptcode3.Trim() != "")
                        {
                            if (code == "")
                            {
                                code = deptcode3;
                            }
                            else
                            {
                                code = code + "," + deptcode3;
                            }
                        }
                        string deptcode4 = Convert.ToString(depthash[Convert.ToString(department_code4)]);
                        if (deptcode4.Trim() != "")
                        {
                            if (code == "")
                            {
                                code = deptcode4;
                            }
                            else
                            {
                                code = code + "," + deptcode4;
                            }
                        }
                        string[] split = code.Split(',');
                        for (int code2 = 0; code2 < split.Length; code2++)
                        {
                            Int64 DeptFK = Convert.ToInt64(split[code2]);
                            query = "INSERT INTO RQ_RequisitionDet(DeptFK,StaffAppNo,RequisitionFK) VALUES ('" + DeptFK + "','" + ReqStaffAppNo + "','" + RequisitionFK + "')";
                            q = d2.update_method_wo_parameter(query, "TEXT");
                        }
                        if (q != 0)
                        {
                            imgdiv2.Visible = true;
                            lbl_alert.Text = "Saved Sucessfully";
                            ItemReqNo();
                            visitorclear();
                            //mainclear();
                        }
                    }
                    else
                    {
                        imgdiv2.Visible = true;
                        lbl_alert.Text = "Select any option that you want to meet";
                    }
                }
                else if (txt_cname.Text == "")
                {
                    imgdiv2.Visible = true;
                    lbl_alert.Text = "Enter the visitor's company name";
                }
                else if (txt_name.Text == "")
                {
                    imgdiv2.Visible = true;
                    lbl_alert.Text = "Enter the visitor name";
                }
                else
                {
                    imgdiv2.Visible = true;
                    lbl_alert.Text = "Enter the visitor name & company name";
                }
            }
            else if (div_complaints.Visible == true)
            {
                RequestType = 4;
                DateTime RequestDate = new DateTime();
                RequestDate = TextToDate(txt_compreqdate);
                RequestCode = txt_compreqno.Text;
                Int64 ReqComplaints = new Int64();
                ReqComplaints = Convert.ToInt64(ddl_complaints.SelectedItem.Value.ToString());
                string ReqComplaintSub = txt_regards.Text;
                Int64 ReqSuggestions = new Int64();
                ReqSuggestions = Convert.ToInt64(ddl_suggestions.SelectedItem.Value.ToString());
                query = "insert into RQ_Requisition(RequestType,RequestCode,RequestDate,ReqComplaints,ReqComplaintSub,ReqSuggestions,ReqAppNo,ReqApproveStage,MemType) values('" + RequestType + "','" + RequestCode + "','" + RequestDate + "'," + ReqComplaints + ",'" + ReqComplaintSub + "'," + ReqSuggestions + ",'" + ReqStaffAppNo + "','0','2')";
                q = d2.update_method_wo_parameter(query, "TEXT");
                if (q != 0)
                {
                    imgdiv2.Visible = true;
                    lbl_alert.Text = "Saved Sucessfully";
                    ItemReqNo();
                    complaintsclear();
                    //mainclear();
                }
            }
        }
        catch (Exception ex)
        {
        }
    }
    public DateTime TextToDate(TextBox txt)
    {
        DateTime dt = new DateTime();
        string firstdate = Convert.ToString(txt.Text);
        string[] split = firstdate.Split('/');
        dt = Convert.ToDateTime(split[1] + "/" + split[0] + "/" + split[2]);
        return dt;
    }
    public void dept()
    {
        string query = "select Dept_Name as DeptName,Dept_Code from Department ";
        ds = d2.select_method_wo_parameter(query, "Text");
        if (ds.Tables[0].Rows.Count > 0)
        {
            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                string dd = Convert.ToString(ds.Tables[0].Rows[i]["DeptName"]);
                string ddd = Convert.ToString(ds.Tables[0].Rows[i]["Dept_Code"]);
                if (!depthash.Contains(Convert.ToString(dd)))
                {
                    depthash.Add(Convert.ToString(dd), Convert.ToString(ddd));
                }
            }
        }
    }
    public void ItemReqNo()
    {
        try
        {
            string newitemcode = "";
            string selectquery = "select Requisition_Acr ,Requisition_Size,Requisition_StNo  from InvCode_Settings where Latestrec =1";
            ds = d2.select_method_wo_parameter(selectquery, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                string itemacronym = Convert.ToString(ds.Tables[0].Rows[0]["Requisition_Acr"]);
                string itemstarno = Convert.ToString(ds.Tables[0].Rows[0]["Requisition_StNo"]);
                if (itemacronym.Trim() != "" && itemstarno.Trim() != "")
                {
                    selectquery = "select distinct top (1)  RequestCode  from RQ_Requisition where RequestCode like '" + Convert.ToString(itemacronym) + "%' order by RequestCode desc";
                    //select distinct top (1) item_code  from item_master where item_code like '" + Convert.ToString(itemacronym) + "%' order by item_code desc";
                    ds.Clear();
                    ds = d2.select_method_wo_parameter(selectquery, "Text");
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        string itemcode = Convert.ToString(ds.Tables[0].Rows[0]["RequestCode"]);
                        string itemacr = Convert.ToString(itemacronym);
                        int len = itemacr.Length;
                        itemcode = itemcode.Remove(0, len);
                        int len1 = Convert.ToString(itemcode).Length;
                        string newnumber = Convert.ToString((Convert.ToInt32(itemcode) + 1));
                        len = Convert.ToString(newnumber).Length;
                        len1 = len1 - len;
                        if (len1 == 2)
                        {
                            newitemcode = "00" + newnumber;
                        }
                        else if (len1 == 1)
                        {
                            newitemcode = "0" + newnumber;
                        }
                        else if (len1 == 4)
                        {
                            newitemcode = "0000" + newnumber;
                        }
                        else if (len1 == 3)
                        {
                            newitemcode = "000" + newnumber;
                        }
                        else
                        {
                            newitemcode = Convert.ToString(newnumber);
                        }
                        if (newitemcode.Trim() != "")
                        {
                            newitemcode = itemacr + "" + newitemcode;
                        }
                    }
                    else
                    {
                        newitemcode = Convert.ToString(itemacronym) + "" + Convert.ToString(itemstarno);
                    }
                    //  if (rb_item.Checked == true)
                    txt_reqno.Text = Convert.ToString(newitemcode);
                    // else if (rb_service.Checked == true)
                    txt_serreqno.Text = Convert.ToString(newitemcode);
                    //  else if (rb_visitor.Checked == true)
                    txt_visitorreqno.Text = Convert.ToString(newitemcode);
                    // else if (rb_complaints.Checked == true)
                    txt_compreqno.Text = Convert.ToString(newitemcode);
                    txt_rqstn_leave.Text = Convert.ToString(newitemcode);
                    //  txt_reqtn_gate.Text = Convert.ToString(newitemcode);
                }
            }
        }
        catch (Exception ex)
        {
        }
    }
    public void VendorCodeGen()
    {
        try
        {
            string newitemcode = "";
            string VendorCode = "";
            string selectquery = "select Vendor_Acr,Vendor_StNo,Vendor_Size from InvCode_Settings where Latestrec=1";
            //select Requisition_Acr ,Requisition_Size,Requisition_StNo  from InvCode_Settings where Latestrec =1";
            ds = d2.select_method_wo_parameter(selectquery, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                string itemacronym = Convert.ToString(ds.Tables[0].Rows[0]["Vendor_Acr"]);
                string itemstarno = Convert.ToString(ds.Tables[0].Rows[0]["Vendor_StNo"]);
                if (itemacronym.Trim() != "" && itemstarno.Trim() != "")
                {
                    selectquery = "select top (1) VendorCode  from CO_VendorMaster where VendorCode like '" + Convert.ToString(itemacronym) + "%' order by vendorpk desc";
                    //select distinct top (1)  RequestCode  from RQ_Requisition where RequestCode like '" + Convert.ToString(itemacronym) + "%' order by RequestCode desc";
                    //select distinct top (1) item_code  from item_master where item_code like '" + Convert.ToString(itemacronym) + "%' order by item_code desc";
                    ds.Clear();
                    ds = d2.select_method_wo_parameter(selectquery, "Text");
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        string itemcode = Convert.ToString(ds.Tables[0].Rows[0]["VendorCode"]);
                        string itemacr = Convert.ToString(itemacronym);
                        int len = itemacr.Length;
                        itemcode = itemcode.Remove(0, len);
                        int len1 = Convert.ToString(itemcode).Length;
                        string newnumber = Convert.ToString((Convert.ToInt32(itemcode) + 1));
                        len = Convert.ToString(newnumber).Length;
                        len1 = len1 - len;
                        if (len1 == 2)
                        {
                            newitemcode = "00" + newnumber;
                        }
                        else if (len1 == 1)
                        {
                            newitemcode = "0" + newnumber;
                        }
                        else if (len1 == 4)
                        {
                            newitemcode = "0000" + newnumber;
                        }
                        else if (len1 == 3)
                        {
                            newitemcode = "000" + newnumber;
                        }
                        else
                        {
                            newitemcode = Convert.ToString(newnumber);
                        }
                        if (newitemcode.Trim() != "")
                        {
                            newitemcode = itemacr + "" + newitemcode;
                        }
                    }
                    else
                    {
                        newitemcode = Convert.ToString(itemacronym) + "" + Convert.ToString(itemstarno);
                    }
                    Session["VendorCode"] = newitemcode;
                }
            }
        }
        catch (Exception ex)
        {
        }
    }
    public void mainclear()
    {
        try
        {
            cb_other.Checked = false;
            cb_own.Checked = false;
            txt_dept.Text = txt_serdept.Text = "";
            // SelectdptGrid.Columns.Clear();
            SelectdptGrid.DataSource = null;
            SelectdptGrid.DataBind();
            Sergrid.DataSource = null;
            Sergrid.DataBind();
            Session["dt"] = null;
            ViewState["selecteditems"] = null;
            ViewState["selecteditems1"] = null;
            selectitemgrid.DataSource = null;
            selectitemgrid.DataBind();
            griddiv.Visible = false;
            sergriddiv.Visible = false;
            btn_reqclear.Visible = false;
            btn_reqsave.Visible = false;
            txt_reqremarks.Text = "";
            txt_serremarks.Text = "";
        }
        catch (Exception ex)
        {
        }
    }
    public void complaintsclear()
    {
        try
        {
            ddl_complaints.SelectedIndex = 0;
            ddl_suggestions.SelectedIndex = 0;
            txt_regards.Text = "";
        }
        catch (Exception ex)
        {
        }
    }
    public void visitorclear()
    {
        try
        {
            txt_cname.Text = txt_name.Text = txt_visitorpurpose.Text = txt_visitorph.Text = txt_visitormob.Text = "";
            txt_visitoremail.Text = txt_to1.Text = txt_cc1.Text = txt_cc2.Text = "";
            txt_dept_cc.Text = txt_dept_to.Text = txt_indiv.Text = txt_indiv_cc.Text = txt_address.Text = "";
            ddl_department.SelectedIndex = 0;
            ddl_designation.SelectedIndex = 0;
            cb_dept.Checked = true;
            cb_individual.Checked = false;
            //btn_stud_deptto_rmv_Click(sender, e);
            //btn_stud_deptcc_remove_Click(sender, e);
        }
        catch (Exception ex)
        {
        }
    }
    protected void btn_reqclear_Click(object sender, EventArgs e)
    {
        try
        {
            if (div_itmreqst.Visible == true)
            {
                mainclear();
            }
            else if (div_service.Visible == true)
            {
                mainclear();
            }
            else if (div_visitor.Visible == true)
            {
                visitorclear();
            }
            else if (div_complaints.Visible == true)
            {
                complaintsclear();
            }
        }
        catch (Exception ex)
        {
        }
    }
    void BindCollege()
    {
        try
        {
            // string srisql = "select collname,college_code from collinfo";
            // ds.Clear();
            // ds = da.select_method_wo_parameter(srisql, "Text");
            string usertype = "";
            if (!string.IsNullOrEmpty(group_user) && group_user.Trim() != "0")
            {
                string code = group_user.Split(';')[0];
                usertype = " and group_code='" + code + "'";
            }
            else if (!string.IsNullOrEmpty(usercode) && usercode.Trim() != "0")
                usertype = " and user_code='" + usercode + "'";
            string srisql = " select cp.college_code,cf.collname from collegeprivilages cp,collinfo cf where cp.college_code=cf.college_code " + usertype + "";
            ds.Clear();
            ds = da.select_method_wo_parameter(srisql, "Text");
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                ddlcollege.DataSource = ds;
                ddlcollege.DataTextField = "collname";
                ddlcollege.DataValueField = "college_code";
                ddlcollege.DataBind();
                ddl_rpt_collge.DataSource = ds;
                ddl_rpt_collge.DataTextField = "collname";
                ddl_rpt_collge.DataValueField = "college_code";
                ddl_rpt_collge.DataBind();
            }
        }
        catch
        {
        }
    }
    public void loadstaffdep(string collegecode)
    {
        try
        {
            string srisql = "select distinct dept_name,dept_code from hrdept_master where college_code=" + Session["collegecode"] + "";
            ds.Clear();
            ds = da.select_method_wo_parameter(srisql, "Text");
            ddldepratstaff.DataSource = ds;
            ddldepratstaff.DataTextField = "dept_name";
            ddldepratstaff.DataValueField = "dept_code";
            ddldepratstaff.DataBind();
            ddldepratstaff.Items.Insert(0, "All");
        }
        catch
        {
        }
    }
    void bind_stafType()
    {
        try
        {
            string srisql = "SELECT DISTINCT StfType FROM StaffTrans T,HrDept_Master D WHERE T.Dept_Code = D.Dept_Code AND T.Latestrec = 1 and d.college_code=" + Session["collegecode"] + "";
            ds.Clear();
            ds = da.select_method_wo_parameter(srisql, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                ddl_stftype.DataSource = ds;
                ddl_stftype.DataTextField = "StfType";
                ddl_stftype.DataValueField = "StfType";
                ddl_stftype.DataBind();
                ddl_stftype.Items.Insert(0, "All");
            }
        }
        catch
        {
        }
    }
    void bind_design()
    {
        try
        {
            string sql = string.Empty;
            if (ddl_stftype.SelectedItem.ToString() == "All")
            {
                sql = "SELECT distinct Desig_Name FROM StaffTrans T,staffmaster m,Desig_Master G WHERE t.staff_code = m.staff_code and T.Desig_Code = G.Desig_Code AND Latestrec = 1 and G.collegecode=" + Session["collegecode"] + "";
            }
            else
            {
                sql = "SELECT distinct Desig_Name FROM StaffTrans T,staffmaster m,Desig_Master G WHERE t.staff_code = m.staff_code and T.Desig_Code = G.Desig_Code AND Latestrec = 1 and G.collegecode=" + Session["collegecode"] + " and stftype='" + ddl_stftype.Text + "'";
            }
            ds.Clear();
            ds = da.select_method_wo_parameter(sql, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                ddl_design.DataSource = ds;
                ddl_design.DataTextField = "Desig_Name";
                ddl_design.DataValueField = "Desig_Name";
                ddl_design.DataBind();
                ddl_design.Items.Insert(0, "All");
            }
        }
        catch
        {
        }
    }
    protected void loadfsstaff()
    {
        try
        {
            ermsg.Visible = false;
            string sql = "";
            if (ddldepratstaff.SelectedIndex != 0)
            {
                if (txt_search.Text != "")
                {
                    if (ddlstaff.SelectedIndex == 0)
                    {
                        sql = "SELECT distinct staffmaster.staff_code, staffmaster.staff_name FROM staffmaster INNER JOIN stafftrans ON staffmaster.staff_code = stafftrans.staff_code INNER JOIN hrdept_master ON stafftrans.dept_code = hrdept_master.dept_code WHERE (stafftrans.latestrec <> 0) AND (staffmaster.resign = 0)and  (staffmaster.settled = 0)  and (staff_name like '" + txt_search.Text + "%') and (hrdept_master.dept_code = '" + ddldepratstaff.SelectedValue + "') and (staffmaster.college_code =hrdept_master.college_code)";
                    }
                    else if (ddlstaff.SelectedIndex == 1)
                    {
                        sql = "SELECT distinct staffmaster.staff_code, staffmaster.staff_name FROM staffmaster INNER JOIN stafftrans ON staffmaster.staff_code = stafftrans.staff_code INNER JOIN hrdept_master ON stafftrans.dept_code = hrdept_master.dept_code WHERE (stafftrans.latestrec <> 0) AND (staffmaster.resign = 0) and (staffmaster.settled = 0) and (staffmaster.staff_code like '" + txt_search.Text + "%') and (hrdept_master.dept_code = '" + ddldepratstaff.SelectedValue + "') and (staffmaster.college_code =hrdept_master.college_code)";
                    }
                }
                else
                {
                    //sql = "SELECT staffmaster.staff_code, staffmaster.staff_name FROM staffmaster INNER JOIN stafftrans ON staffmaster.staff_code = stafftrans.staff_code INNER JOIN hrdept_master ON stafftrans.dept_code = hrdept_master.dept_code WHERE (stafftrans.latestrec <> 0) AND (staffmaster.resign = 0) and (staffmaster.settled = 0) and (hrdept_master.dept_name = '" + ddldepratstaff.Text + "') AND (staffmaster.college_code = '" + ddlcollege.SelectedValue + "' and (staffmaster.college_code =hrdept_master.college_code)";
                    sql = "SELECT staffmaster.staff_code, staffmaster.staff_name FROM staffmaster INNER JOIN stafftrans ON staffmaster.staff_code = stafftrans.staff_code INNER JOIN hrdept_master ON stafftrans.dept_code = hrdept_master.dept_code WHERE (stafftrans.latestrec <> 0) AND (staffmaster.resign = 0) and (staffmaster.settled = 0) and (hrdept_master.dept_code = '" + ddldepratstaff.SelectedValue + "') AND (staffmaster.college_code = '" + ddlcollege.SelectedValue + "') and (staffmaster.college_code =hrdept_master.college_code)";
                }
            }
            else if (txt_search.Text != "")
            {
                if (ddlstaff.SelectedIndex == 0)
                {
                    sql = "SELECT distinct staffmaster.staff_code, staffmaster.staff_name FROM staffmaster INNER JOIN stafftrans ON staffmaster.staff_code = stafftrans.staff_code INNER JOIN hrdept_master ON stafftrans.dept_code = hrdept_master.dept_code WHERE (stafftrans.latestrec <> 0) AND (staffmaster.resign = 0) and (staffmaster.settled = 0) and (staffmaster.staff_name like '" + txt_search.Text + "%') and (staffmaster.college_code =hrdept_master.college_code)";
                }
                else if (ddlstaff.SelectedIndex == 1)
                {
                    sql = "SELECT distinct staffmaster.staff_code, staffmaster.staff_name FROM staffmaster INNER JOIN stafftrans ON staffmaster.staff_code = stafftrans.staff_code INNER JOIN hrdept_master ON stafftrans.dept_code = hrdept_master.dept_code WHERE (stafftrans.latestrec <> 0) AND (staffmaster.resign = 0) and (staffmaster.settled = 0) and (staffmaster.staff_code like '" + txt_search.Text + "%') and (staffmaster.college_code =hrdept_master.college_code)";
                }
                else if (ddlcollege.SelectedIndex != -1)
                {
                    sql = "select distinct staffmaster.staff_code, staff_name  from stafftrans,staffmaster where stafftrans.staff_code=staffmaster.staff_code and latestrec<>0 and resign=0 and settled=0 and staffmaster.college_code='" + ddlcollege.SelectedValue + "'";
                }
                else
                {
                    sql = "select distinct staffmaster.staff_code, staff_name from stafftrans,staffmaster,hrdept_master.dept_name where stafftrans.staff_code=staffmaster.staff_code and latestrec<>0 and resign=0";
                }
            }
            else
                if (ddldepratstaff.SelectedValue.ToString() == "All")
                {
                    sql = "select distinct staffmaster.staff_code, staff_name  from stafftrans,staffmaster where stafftrans.staff_code=staffmaster.staff_code and latestrec<>0 and resign=0 and settled=0 and staffmaster.college_code='" + ddlcollege.SelectedValue + "'";
                }
            fsstaff.Sheets[0].RowCount = 0;
            fsstaff.SaveChanges();
            fsstaff.Visible = true;
            FarPoint.Web.Spread.CheckBoxCellType chkcell1 = new FarPoint.Web.Spread.CheckBoxCellType();
            FarPoint.Web.Spread.CheckBoxCellType chkcell = new FarPoint.Web.Spread.CheckBoxCellType();
            fsstaff.Sheets[0].RowCount = fsstaff.Sheets[0].RowCount + 1;
            fsstaff.Sheets[0].SpanModel.Add(fsstaff.Sheets[0].RowCount - 1, 0, 1, 3);
            //fsstaff.Sheets[0].AutoPostBack = false;
            string bindspread = sql;
            string design_name = string.Empty;
            string dept_all = string.Empty;
            string design_all = string.Empty;
            if (ddl_design.Items.Count > 0)
            {
                design_name = ddl_design.SelectedItem.ToString();
            }
            for (int cnt = 1; cnt < ddldepratstaff.Items.Count; cnt++)
            {
                if (dept_all == "")
                {
                    dept_all = ddldepratstaff.Items[cnt].Value;
                }
                else
                {
                    dept_all = dept_all + "','" + ddldepratstaff.Items[cnt].Value;
                }
            }
            for (int cnt = 1; cnt < ddl_design.Items.Count; cnt++)
            {
                if (dept_all == "")
                {
                    design_all = ddl_design.Items[cnt].Value;
                }
                else
                {
                    design_all = design_all + "','" + ddl_design.Items[cnt].Value;
                }
            }
            string Sql_Query = "select distinct s.staff_code,s.staff_name from staffmaster s,hrdept_master h,desig_master d,stafftrans st where s.staff_code=st.staff_code and st.Dept_Code = h.Dept_Code and d.desig_code=st.desig_code and h.dept_code = '" + ddldepratstaff.SelectedValue.ToString() + "' and d.desig_name='" + design_name + "' and s.college_code='" + ddlcollege.SelectedValue.ToString() + "' and resign = 0 and settled = 0 and latestrec=1";
            if (ddldepratstaff.SelectedItem.ToString() == "All" && ddl_design.SelectedItem.ToString() == "All")
            {
                Sql_Query = "select distinct s.staff_code,s.staff_name from staffmaster s,hrdept_master h,desig_master d,stafftrans st where s.staff_code=st.staff_code and st.Dept_Code = h.Dept_Code and d.desig_code=st.desig_code  and h.dept_code in ('" + dept_all + "') and d.desig_name in ('" + design_all + "') and s.college_code='" + ddlcollege.SelectedValue.ToString() + "' and resign = 0 and settled = 0 and latestrec=1";
            }
            else if (ddldepratstaff.SelectedItem.ToString() == "All")
            {
                Sql_Query = "select distinct s.staff_code,s.staff_name from staffmaster s,hrdept_master h,desig_master d,stafftrans st where s.staff_code=st.staff_code and st.Dept_Code = h.Dept_Code and d.desig_code=st.desig_code and s.college_code = h.college_code and s.college_code = d.collegecode and h.dept_code in ('" + dept_all + "') and d.desig_name='" + design_name + "' and s.college_code='" + ddlcollege.SelectedValue.ToString() + "' and resign = 0 and settled = 0 and latestrec=1";
            }
            else if (ddl_design.SelectedItem.ToString() == "All")
            {
                Sql_Query = "select distinct s.staff_code,s.staff_name from staffmaster s,hrdept_master h,desig_master d,stafftrans st where s.staff_code=st.staff_code and st.Dept_Code = h.Dept_Code and d.desig_code=st.desig_code and s.college_code = h.college_code and s.college_code = d.collegecode and h.dept_code = '" + ddldepratstaff.SelectedValue.ToString() + "' and d.desig_name in ('" + design_all + "') and s.college_code='" + ddlcollege.SelectedValue.ToString() + "' and resign = 0 and settled = 0 and latestrec=1";
            }
            if (ddl_stftype.SelectedItem.ToString() != "All" && ddl_design.SelectedItem.ToString() == "All")
            {
                Sql_Query = "select distinct s.staff_code,s.staff_name from staffmaster s,hrdept_master h,desig_master d,stafftrans st where s.staff_code=st.staff_code and st.Dept_Code = h.Dept_Code and d.desig_code=st.desig_code and s.college_code = h.college_code and s.college_code = d.collegecode and h.dept_code = '" + ddldepratstaff.SelectedValue.ToString() + "' and d.desig_name in ('" + design_all + "') and s.college_code='" + ddlcollege.SelectedValue.ToString() + "' and stftype = '" + ddl_stftype.SelectedItem.ToString() + "' and resign = 0 and settled = 0 and latestrec=1";
            }
            else if (ddl_stftype.SelectedItem.ToString() != "All" && ddl_design.SelectedItem.ToString() != "All")
            {
                Sql_Query = "select distinct s.staff_code,s.staff_name from staffmaster s,hrdept_master h,desig_master d,stafftrans st where s.staff_code=st.staff_code and st.Dept_Code = h.Dept_Code and d.desig_code=st.desig_code and s.college_code = h.college_code and s.college_code = d.collegecode and h.dept_code = '" + ddldepratstaff.SelectedValue.ToString() + "' and d.desig_name in ('" + ddl_design.SelectedItem.ToString() + "') and s.college_code='" + ddlcollege.SelectedValue.ToString() + "' and stftype = '" + ddl_stftype.SelectedItem.ToString() + "' and resign = 0 and settled = 0 and latestrec=1";
            }
            DataSet dsbindspread = new DataSet();
            dsbindspread.Clear();
            dsbindspread = da.select_method_wo_parameter(Sql_Query, "Text");
            //mpedirect.Show();
            if (dsbindspread.Tables[0].Rows.Count > 0)
            {
                int sno = 0;
                for (int rolcount = 0; rolcount < dsbindspread.Tables[0].Rows.Count; rolcount++)
                {
                    sno++;
                    string name = dsbindspread.Tables[0].Rows[rolcount]["staff_name"].ToString();
                    string code = dsbindspread.Tables[0].Rows[rolcount]["staff_code"].ToString();
                    fsstaff.Sheets[0].RowCount = fsstaff.Sheets[0].RowCount + 1;
                    fsstaff.Sheets[0].Rows[fsstaff.Sheets[0].RowCount - 1].Font.Bold = false;
                    fsstaff.Sheets[0].Cells[fsstaff.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(sno);
                    fsstaff.Sheets[0].Cells[fsstaff.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                    fsstaff.Sheets[0].Cells[fsstaff.Sheets[0].RowCount - 1, 1].Text = name;
                    fsstaff.Sheets[0].Cells[fsstaff.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Left;
                    fsstaff.Sheets[0].Cells[fsstaff.Sheets[0].RowCount - 1, 2].Text = code;
                    fsstaff.Sheets[0].Cells[fsstaff.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Left;
                    fsstaff.Sheets[0].AutoPostBack = false;
                }
                int rowcount = fsstaff.Sheets[0].RowCount;
                fsstaff.Sheets[0].PageSize = 25 + (rowcount * 20);
                fsstaff.SaveChanges();
            }
            else
            {
                fsstaff.Visible = false;
                ermsg.Visible = true;
                ermsg.Text = "No Records Found";
            }
        }
        catch
        {
        }
    }
    public void Btn_Staff_Code_Click(object sender, EventArgs e)
    {
        try
        {
            Div1.Visible = true;
            fsstaff.Visible = true;
            panelrollnopop.Visible = false;
            fsstaff.Sheets[0].RowCount = 0;
            BindCollege();
            loadstaffdep(collegecode);
            bind_stafType();
            bind_design();
            loadfsstaff();
        }
        catch
        {
        }
    }
    public void BindLeave()
    {
        try
        {
            ddl_leave_type.Items.Clear();
            string strleave = "select * from leave_category where college_code='" + ddl_rpt_collge.SelectedItem.Value + "'";
            ds2 = d2.select_method(strleave, hat, "Text");
            if (ds2.Tables[0].Rows.Count > 0)
            {
                ddl_leave_type.DataSource = ds2;
                ddl_leave_type.DataTextField = "category";
                ddl_leave_type.DataValueField = "LeaveMasterPK";
                ddl_leave_type.DataBind();
            }
        }
        catch (Exception ex)
        {
        }
    }
    public void bindgrid2()
    {
        try
        {
            totalleave.Clear();
            double addtot = 0;
            string actual = "";
            string currentYear = DateTime.Now.Year.ToString();
            DataTable dt = new DataTable();
            dt.Columns.Add("Month");
            DataRow dr = null;
            int tott = 0;
            string applid = d2.GetFunction("select appl_id from staff_appl_master a,staffmaster s where a.appl_no=s.appl_no and staff_code='" + txt_staff_code.Text + "'");
            string queryObject = "select * from hrpaymonths where college_code='" + ddl_rpt_collge.SelectedItem.Value + "' and SelStatus='1'";
            ds = d2.select_method_wo_parameter(queryObject, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                string query = "select * from individual_leave_type where staff_code='" + txt_staff_code.Text + "' and college_code='" + ddl_rpt_collge.SelectedItem.Value + "'";
                ds2.Clear();
                ds2 = d2.select_method_wo_parameter(query, "Text");
                if (ds2.Tables[0].Rows.Count > 0)
                {
                    string[] spl_type = ds2.Tables[0].Rows[0]["leavetype"].ToString().Split(new Char[] { '\\' });
                    int col_cnt = 0;
                    for (int i = 0; spl_type.GetUpperBound(0) >= i; i++)
                    {
                        col_cnt++;
                        string[] split_leave = spl_type[i].Split(';');
                        string shortname = d2.GetFunction("select shortname from leave_category where category='" + split_leave[0] + "' and college_code='" + ddl_rpt_collge.SelectedItem.Value + "'");
                        if (Convert.ToString(shortname).Trim() != "" && Convert.ToString(shortname).Trim() != "0")
                        {
                            dt.Columns.Add(Convert.ToString(shortname));
                        }
                    }
                    for (int k = 0; k <= ds.Tables[0].Rows.Count; k++)
                    {
                        dr = dt.NewRow();
                        if (k != ds.Tables[0].Rows.Count)
                        {
                            dr[0] = Convert.ToString(ds.Tables[0].Rows[k]["Paymonth"]);
                        }
                        else
                        {
                            dr[0] = Convert.ToString("Total");
                        }
                        dt.Rows.Add(dr);
                    }
                    double tot_leave = 0;
                    string leavefromdate = "";
                    string leavetodate = "";
                    string ishalfdate = "";
                    string halfdaydate = "";
                    int finaldate = 0;
                    string sleave = "";
                    string requestpk = string.Empty;
                    for (int k = 0; k <= ds.Tables[0].Rows.Count; k++)
                    {
                        int col = 0;
                        for (int i = 0; spl_type.GetUpperBound(0) >= i; i++)
                        {
                            if (spl_type[i].Trim() != "")
                            {
                                col++;
                                tot_leave = 0;
                                string[] split_leave = spl_type[i].Split(';');
                                string leave = split_leave[0];
                                string s = Convert.ToString(split_leave[1]);
                                if (s == "")
                                {
                                    addtot = 0;
                                }
                                else
                                {
                                    addtot = Convert.ToDouble(s);
                                }
                                if (k != ds.Tables[0].Rows.Count)
                                {
                                    string leavepk = d2.GetFunction("select LeaveMasterPK from leave_category where category='" + leave + "' and college_code='" + ddl_rpt_collge.SelectedItem.Value + "'");
                                    // string dt_get_leave = "select * from RQ_Requisition r,leave_category l where RequestType=5 and LeaveFrom>='" + ds.Tables[0].Rows[k]["From_Date"].ToString() + "' and LeaveTo<='" + ds.Tables[0].Rows[k]["To_Date"].ToString() + "' and ReqAppNo='" + applid + "' and ReqAppStatus='1' and l.LeaveMasterPK=r.LeaveMasterFK and r.LeaveMasterFK='" + leavepk + "' ";
                                    string dt_get_leave = "select * from RQ_Requisition r,leave_category l where RequestType=5 and (LeaveFrom>='" + ds.Tables[0].Rows[k]["From_Date"].ToString() + "' and LeaveTo<='" + ds.Tables[0].Rows[k]["To_Date"].ToString() + "' or LeaveFrom between'" + ds.Tables[0].Rows[k]["From_Date"].ToString() + "' and '" + ds.Tables[0].Rows[k]["To_Date"].ToString() + "') and ReqAppNo='" + applid + "' and ReqAppStatus='1' and l.LeaveMasterPK=r.LeaveMasterFK and r.LeaveMasterFK='" + leavepk + "'";
                                    ds1 = d2.select_method_wo_parameter(dt_get_leave, "Text");
                                    if (ds1.Tables[0].Rows.Count > 0)
                                    {
                                        for (int g = 0; g < ds1.Tables[0].Rows.Count; g++)
                                        {
                                            leavefromdate = Convert.ToString(ds1.Tables[0].Rows[g]["LeaveFrom"]);
                                            leavetodate = Convert.ToString(ds1.Tables[0].Rows[g]["LeaveTo"]);
                                            ishalfdate = Convert.ToString(ds1.Tables[0].Rows[g]["IsHalfDay"]);
                                            requestpk = Convert.ToString(ds1.Tables[0].Rows[g]["RequisitionPK"]);
                                            if (leavefromdate != "" && leavetodate != "")
                                            {
                                                string dtT = leavefromdate;
                                                string[] Split = dtT.Split('/');
                                                string enddt = leavetodate;
                                                Split = enddt.Split('/');
                                                DateTime fromdate = Convert.ToDateTime(dtT);
                                                DateTime todate = Convert.ToDateTime(enddt);
                                                TimeSpan days = todate - fromdate;
                                                string ndate = Convert.ToString(days);
                                                Split = ndate.Split('.');
                                                string getdate = Split[0];
                                                double llcount = 0;
                                                if (fromdate != todate)
                                                {
                                                    for (; fromdate <= todate; )
                                                    {
                                                        string dayy = fromdate.ToString("dddd");
                                                        leavedayscheckcount = false;
                                                        if (dayy == "Sunday")
                                                        {
                                                            string qur1 = "select * from individual_leave_type where  staff_code='" + txt_staff_code.Text + "' and college_code=" + ddlcollege.SelectedItem.Value + "";
                                                            ds2 = d2.select_method_wo_parameter(qur1, "Text");
                                                            if (ds2.Tables[0].Rows.Count > 0)
                                                            {
                                                                string[] spl_type1 = ds2.Tables[0].Rows[0]["leavetype"].ToString().Split(new Char[] { '\\' });
                                                                for (int f = 0; spl_type.GetUpperBound(0) >= f; f++)
                                                                {
                                                                    string[] split_leave1 = spl_type1[f].Split(';');
                                                                    if (split_leave[3] == "0")
                                                                    {
                                                                        leavedayscheckcount = true;
                                                                    }
                                                                    else
                                                                    {
                                                                        leavedayscheckcount = false;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        //finaldate = Convert.ToInt32(getdate);
                                                        if (leavedayscheckcount == false)
                                                        {
                                                            // finaldate = Convert.ToInt32(getdate) + 1;
                                                            llcount++;
                                                            string checkval = "select * from staff_leave_dates where requestfk='" + requestpk + "' and LeaveDate='" + fromdate + "'";
                                                            DataSet checkdel = new DataSet();
                                                            checkdel = d2.select_method_wo_parameter(checkval, "text");
                                                            if (checkdel.Tables[0].Rows.Count > 0)
                                                            {
                                                                ishalfdate = "False";
                                                                string approvalcheck = Convert.ToString(checkdel.Tables[0].Rows[0]["isApproved"]);
                                                                string session = Convert.ToString(checkdel.Tables[0].Rows[0]["SessionType"]);
                                                                string delecheck = Convert.ToString(checkdel.Tables[0].Rows[0]["checkdel"]);
                                                                if (approvalcheck == "1")
                                                                {
                                                                    if (delecheck == "1")
                                                                    {
                                                                        if (session == "0")
                                                                        {
                                                                            llcount--;

                                                                        }
                                                                        else if (session == "1" || session == "2")
                                                                        {
                                                                            llcount = llcount - 0.5;
                                                                        }


                                                                    }

                                                                }


                                                            }
                                                        }
                                                        fromdate = fromdate.AddDays(1);
                                                    }
                                                }
                                                else
                                                {
                                                    llcount++;
                                                }
                                                if (ishalfdate == "True")
                                                {
                                                    halfdaydate = Convert.ToString(ds1.Tables[0].Rows[g]["HalfDate"]);
                                                    if (tot_leave == 0)
                                                    {
                                                        tot_leave = llcount;
                                                        tot_leave = tot_leave - 0.5;
                                                    }
                                                    else
                                                    {
                                                        tot_leave = tot_leave + llcount;
                                                        tot_leave = tot_leave - 0.5;
                                                    }
                                                    sleave = leave + "-" + tot_leave;
                                                }
                                                else
                                                {
                                                    if (tot_leave == 0)
                                                    {
                                                        tot_leave = tot_leave + llcount;
                                                    }
                                                    else
                                                    {
                                                        tot_leave = tot_leave + llcount;
                                                    }
                                                    sleave = leave + "-" + tot_leave;
                                                }
                                            }
                                        }
                                    }
                                    if (spl_type[i].Contains(";"))
                                    {
                                        string sp = split_leave[0].ToString();
                                        actual = split_leave[2].ToString();
                                        if (actual == "")
                                        {
                                            actual = "0";
                                        }
                                        string[] iii = sleave.Split('-');
                                        string sp1 = iii[0];
                                        if (sp != sp1)
                                        {
                                            tot_leave = 0;
                                        }
                                        //.................................................................................
                                        string tt = Convert.ToString(tot_leave + "/" + actual);
                                        if (!totalleave.Contains(Convert.ToString(leave)))
                                        {
                                            totalleave.Add(Convert.ToString(leave), Convert.ToString(tt));
                                        }
                                        else
                                        {
                                            string getvalue = Convert.ToString(totalleave[Convert.ToString(leave)]);
                                            if (getvalue.Trim() != "")
                                            {
                                                getvalue = getvalue + "," + tt;
                                                totalleave.Remove(Convert.ToString(leave));
                                                if (getvalue.Trim() != "")
                                                {
                                                    totalleave.Add(Convert.ToString(leave), Convert.ToString(getvalue));
                                                }
                                            }
                                        }
                                        //..........................................................................................................................
                                        dt.Rows[k][col] = Convert.ToString(tot_leave + "/" + actual);
                                        //llcount = 0;
                                    }
                                }
                                else
                                {
                                    double addlv = 0;
                                    double totvalue = 0;
                                    if (totalleave.Count > 0)
                                    {
                                        string value = Convert.ToString(totalleave[leave]);
                                        string[] array = value.Split(',');
                                        for (int j = 0; j < array.Length; j++)
                                        {
                                            string[] spl = array[j].Split('/');
                                            string lv = spl[0];
                                            string tot = spl[1];
                                            if (addlv == 0)
                                            {
                                                addlv = Convert.ToDouble(lv);
                                            }
                                            else
                                            {
                                                addlv = addlv + Convert.ToDouble(lv);
                                            }
                                            //if (addtot == 0)
                                            //{
                                            //    addtot = Convert.ToDouble(tot);
                                            //}
                                            //else
                                            //{
                                            //    addtot = addtot + Convert.ToDouble(tot);
                                            //}
                                        }
                                    }
                                    dt.Rows[k][col] = addlv + "/" + addtot;
                                }
                            }
                        }
                    }
                    if (dt.Rows.Count > 0)
                    {
                        gridViewstaffleave.DataSource = dt;
                        gridViewstaffleave.DataBind();
                    }
                }
            }
        }
        catch
        {
        }
    }
    public void leavetypecountt()
    {
        string queryObject = "select * from hrpaymonths where college_code='" + ddl_rpt_collge.SelectedItem.Value + "'";
        ds = d2.select_method_wo_parameter(queryObject, "Text");
        if (ds.Tables[0].Rows.Count > 0)
        {
            string query = "select * from individual_leave_type where staff_code='" + txt_staff_code.Text + "' and college_code='" + ddl_rpt_collge.SelectedItem.Value + "'";
            ds2.Clear();
            ds2 = d2.select_method_wo_parameter(query, "Text");
            if (ds2.Tables[0].Rows.Count > 0)
            {
                string[] spl_type = ds2.Tables[0].Rows[0]["leavetype"].ToString().Split(new Char[] { '\\' });
                int col_cnt = 0;
                leavetypecount = Convert.ToString(spl_type.GetUpperBound(0));
                for (int i = 0; spl_type.GetUpperBound(0) >= i; i++)
                {
                    col_cnt++;
                    string[] split_leave = spl_type[i].Split(';');
                }
            }
        }
    }
    public void leavedetailgrid(string leavemonth, string leavetypename)
    {
        DataTable dt = new DataTable();
        dt.Columns.Add("Dummy1");
        dt.Columns.Add("Dummy2");
        dt.Columns.Add("Dummy3");
        dt.Columns.Add("Dummy4");
        dt.Columns.Add("Dummy5");
        dt.Columns.Add("Dummy6");
        dt.Columns.Add("Dummy7");
        dt.Columns.Add("Dummy8");
        string leavepkval = d2.GetFunction("select LeaveMasterPK from leave_category where shortname='" + leavetypename + "' and college_code='" + ddl_rpt_collge.SelectedItem.Value + "'");
        int y = 0;
        string fromdate = "";
        string todate = "";
        string fromdatenew = "";
        string todatenew = "";
        string reason = "";
        string leavechage = "";
        string approvalstaff = "";
        string qur = "";
        string q = "";
        int llcount = 0;
        string appno = d2.GetFunction("select sm.appl_id from staff_appl_master sm ,staffmaster m where sm.appl_no=m.appl_no and m.staff_code='" + txt_staff_code.Text + "'");
        if (leavemonth != "Total")
        {
            qur = "select From_Date,to_date from hrpaymonths WHERE PayMonth='" + leavemonth + "' and College_Code='" + ddl_rpt_collge.SelectedItem.Value + "'";
            ds = d2.select_method_wo_parameter(qur, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                fromdate = Convert.ToString(ds.Tables[0].Rows[0]["From_Date"]);
                todate = Convert.ToString(ds.Tables[0].Rows[0]["to_date"]);
            }
            q = "select RequisitionPK,IsHalfDay, CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=2 then 'Morning' when LeaveSession=1 then 'Evening' else '-' end LeaveSession, LeaveFrom, LeaveTo,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,GateReqReason,leaveChangeReason,ReqAppStaffAppNo from RQ_Requisition where RequestType=5 and LeaveFrom>='" + fromdate + "' and LeaveTo<='" + todate + "' and ReqAppNo='" + appno + "' and LeaveMasterFK='" + leavepkval + "' and ReqAppStatus not in('2','0')";
            ds.Clear();
            ds = d2.select_method_wo_parameter(q, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                for (y = 0; y < ds.Tables[0].Rows.Count; y++)
                {
                    fromdatenew = Convert.ToString(ds.Tables[0].Rows[y]["LeaveFrom"]);
                    todatenew = Convert.ToString(ds.Tables[0].Rows[y]["LeaveTo"]);
                    string ishalfdate = Convert.ToString(ds.Tables[0].Rows[y]["IsHalfDay"]);
                    reason = d2.GetFunction("select MasterValue from CO_MasterValues where MasterCriteria='HGRea' and MasterCode='" + Convert.ToString(ds.Tables[0].Rows[y]["GateReqReason"]) + "'");
                    if (reason == "0")
                    {
                        reason = "";
                    }
                    approvalstaff = d2.GetFunction("select sm.appl_name from staff_appl_master sm ,staffmaster m where sm.appl_no=m.appl_no and sm.appl_id='" + Convert.ToString(ds.Tables[0].Rows[y]["ReqAppStaffAppNo"]) + "'");
                    if (approvalstaff == "0")
                    {
                        approvalstaff = "Direct Approval-Self";
                    }
                    string hlf = Convert.ToString(ds.Tables[0].Rows[y]["HalfDate"]);
                    if (hlf == "" || hlf == "0")
                    {
                        hlf = "";
                    }
                    string addleavechangereason = "";
                    string leavechagequery = d2.GetFunction("select ApproveReason from RQ_ReqApprovalDetails where ReqFK='" + Convert.ToString(ds.Tables[0].Rows[y]["RequisitionPK"]) + "' and ReqApproveStaffappNo='" + Convert.ToString(ds.Tables[0].Rows[y]["ReqAppStaffAppNo"]) + "' order by ReqApproveStaffStage,ApproveStaffPriority");
                    addleavechangereason = leavechagequery;
                    int finaldate = 0;
                    double t = 0;
                    string dtT = fromdatenew;
                    string[] Split = dtT.Split('/');
                    string enddt = todatenew;
                    Split = enddt.Split('/');
                    DateTime fromdatea = Convert.ToDateTime(dtT);
                    DateTime fromdatea1 = Convert.ToDateTime(dtT);
                    DateTime todatea = Convert.ToDateTime(enddt);
                    TimeSpan days = todatea - fromdatea;
                    string ndate = Convert.ToString(days);
                    Split = ndate.Split('.');
                    string getdate = Split[0];
                    if (fromdatea != todatea)
                    {
                        for (; fromdatea <= todatea; )
                        {
                            string dayy = fromdatea.ToString("dddd");
                            leavedayscheckcount = false;
                            if (dayy == "Sunday")
                            {
                                string qur1 = "select * from individual_leave_type where  staff_code='" + txt_staff_code.Text + "' and college_code=" + ddlcollege.SelectedItem.Value + "";
                                ds2 = d2.select_method_wo_parameter(qur1, "Text");
                                if (ds2.Tables[0].Rows.Count > 0)
                                {
                                    string[] spl_type = ds2.Tables[0].Rows[0]["leavetype"].ToString().Split(new Char[] { '\\' });
                                    for (int i = 0; spl_type.GetUpperBound(0) >= i; i++)
                                    {
                                        string[] split_leave = spl_type[i].Split(';');
                                        string ll = d2.GetFunction("select category from leave_category where shortname='" + leavetypename + "' and college_code='" + ddlcollege.SelectedItem.Value + "'");
                                        if (split_leave[0].ToString() == ll)
                                        {
                                            if (split_leave[3] == "0")
                                            {
                                                leavedayscheckcount = true;
                                            }
                                            else
                                            {
                                                leavedayscheckcount = false;
                                            }
                                        }
                                    }
                                }
                            }
                            if (leavedayscheckcount == false)
                            {
                                // finaldate = Convert.ToInt32(getdate) + 1;
                                llcount++;
                            }
                            fromdatea = fromdatea.AddDays(1);
                            t = llcount;
                        }
                    }
                    else
                    {
                        finaldate = 1;
                        t = finaldate;
                    }
                    if (ishalfdate == "True")
                    {
                        t = Convert.ToDouble(finaldate) - 0.5;
                    }
                    dr = dt.NewRow();
                    dr[0] = fromdatea1.ToString("dd/MM/yyyy");
                    dr[1] = todatea.ToString("dd/MM/yyyy");
                    dr[2] = reason;
                    dr[3] = approvalstaff;
                    dr[4] = addleavechangereason;
                    dr[5] = t;
                    dr[6] = Convert.ToString(ds.Tables[0].Rows[y]["LeaveSession"]);
                    dr[7] = hlf;
                    dt.Rows.Add(dr);
                }
                if (dt.Rows.Count > 0)
                {
                    gridView2.DataSource = dt;
                    gridView2.DataBind();
                }
                lbl_leavedis.Text = d2.GetFunction("select category from leave_category where shortname='" + leavetypename + "' and college_code='" + collegecode1 + "'") + "(" + leavetypename + ")";
            }
        }
        else
        {
            /// total- all month
            qur = "select From_Date,to_date from hrpaymonths WHERE College_Code='" + collegecode1 + "'";
            ds1 = d2.select_method_wo_parameter(qur, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                for (int u = 0; u < ds1.Tables[0].Rows.Count; u++)
                {
                    fromdate = Convert.ToString(ds1.Tables[0].Rows[u]["From_Date"]);
                    todate = Convert.ToString(ds1.Tables[0].Rows[u]["to_date"]);
                    q = "select IsHalfDay, CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when LeaveSession=2 then 'Morning' when LeaveSession=1 then 'Evening' else '-' end LeaveSession, LeaveFrom, LeaveTo,CONVERT(VARCHAR(11),HalfDate,103) as HalfDate,GateReqReason,leaveChangeReason,ReqAppStaffAppNo from RQ_Requisition where RequestType=5 and LeaveFrom>='" + fromdate + "' and LeaveTo<='" + todate + "' and ReqAppNo='" + appno + "' and LeaveMasterFK='" + leavepkval + "' and ReqAppStatus not in('2','0')";
                    ds.Clear();
                    ds = d2.select_method_wo_parameter(q, "Text");
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        for (y = 0; y < ds.Tables[0].Rows.Count; y++)
                        {
                            fromdatenew = Convert.ToString(ds.Tables[0].Rows[y]["LeaveFrom"]);
                            todatenew = Convert.ToString(ds.Tables[0].Rows[y]["LeaveTo"]);
                            string ishalfdate = Convert.ToString(ds.Tables[0].Rows[y]["IsHalfDay"]);
                            reason = d2.GetFunction("select MasterValue from CO_MasterValues where MasterCriteria='HGRea' and MasterCode='" + Convert.ToString(ds.Tables[0].Rows[y]["GateReqReason"]) + "'");
                            if (reason == "0")
                            {
                                reason = "";
                            }
                            leavechage = Convert.ToString(ds.Tables[0].Rows[y]["leaveChangeReason"]);
                            approvalstaff = d2.GetFunction("select sm.appl_name from staff_appl_master sm ,staffmaster m where sm.appl_no=m.appl_no and sm.appl_id='" + Convert.ToString(ds.Tables[0].Rows[y]["ReqAppStaffAppNo"]) + "'");
                            if (approvalstaff == "0")
                            {
                                approvalstaff = "Direct Approval-Self";
                            }
                            string hlf = Convert.ToString(ds.Tables[0].Rows[y]["HalfDate"]);
                            if (hlf == "" || hlf == "0")
                            {
                                hlf = "";
                            }
                            int finaldate = 0;
                            double t = 0;
                            string dtT = fromdatenew;
                            string[] Split = dtT.Split('/');
                            string enddt = todatenew;
                            Split = enddt.Split('/');
                            DateTime fromdatea = Convert.ToDateTime(dtT);
                            DateTime fromdatea1 = Convert.ToDateTime(dtT);
                            DateTime todatea = Convert.ToDateTime(enddt);
                            TimeSpan days = todatea - fromdatea;
                            string ndate = Convert.ToString(days);
                            Split = ndate.Split('.');
                            string getdate = Split[0];
                            if (fromdatea != todatea)
                            {
                                for (; fromdatea <= todatea; )
                                {
                                    string dayy = fromdatea.ToString("dddd");
                                    leavedayscheckcount = false;
                                    if (dayy == "Sunday")
                                    {
                                        string qur1 = "select * from individual_leave_type where  staff_code='" + txt_staff_code.Text + "' and college_code=" + ddlcollege.SelectedItem.Value + "";
                                        ds2 = d2.select_method_wo_parameter(qur1, "Text");
                                        if (ds2.Tables[0].Rows.Count > 0)
                                        {
                                            string[] spl_type = ds2.Tables[0].Rows[0]["leavetype"].ToString().Split(new Char[] { '\\' });
                                            for (int i = 0; spl_type.GetUpperBound(0) >= i; i++)
                                            {
                                                string[] split_leave = spl_type[i].Split(';');
                                                string ll = d2.GetFunction("select category from leave_category where shortname='" + leavetypename + "' and college_code='" + ddlcollege.SelectedItem.Value + "'");
                                                if (split_leave[0].ToString() == ll)
                                                {
                                                    if (split_leave[3] == "0")
                                                    {
                                                        leavedayscheckcount = true;
                                                    }
                                                    else
                                                    {
                                                        leavedayscheckcount = false;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    if (leavedayscheckcount == false)
                                    {
                                        // finaldate = Convert.ToInt32(getdate) + 1;
                                        llcount++;
                                    }
                                    fromdatea = fromdatea.AddDays(1);
                                    t = llcount;
                                }
                            }
                            else
                            {
                                finaldate = 1;
                                t = finaldate;
                            }
                            if (ishalfdate == "True")
                            {
                                t = Convert.ToDouble(finaldate) - 0.5;
                            }
                            dr = dt.NewRow();
                            dr[0] = fromdatea1.ToString("dd/MM/yyyy");
                            dr[1] = todatea.ToString("dd/MM/yyyy");
                            dr[2] = reason;
                            dr[3] = approvalstaff;
                            dr[4] = leavechage;
                            dr[5] = t;
                            dr[6] = Convert.ToString(ds.Tables[0].Rows[y]["LeaveSession"]);
                            dr[7] = hlf;
                            dt.Rows.Add(dr);
                        }
                        if (dt.Rows.Count > 0)
                        {
                            gridView2.DataSource = dt;
                            gridView2.DataBind();
                        }
                        lbl_leavedis.Text = d2.GetFunction("select category from leave_category where shortname='" + leavetypename + "' and college_code='" + collegecode1 + "'") + "(" + leavetypename + ")";
                    }
                }
            }
        }
    }
    protected void gridViewstaffleave_RowCommand(object sender, GridViewCommandEventArgs e)
    {
        leavetypecountt();
        gridViewstaffleave.Rows[rowval].Cells[colval].BackColor = ColorTranslator.FromHtml("#F0F0F0");
        string leaveheadername = "";
        string leavemonthh = "";
        string leavetext = "";
        int x = 0;
        int jj = Convert.ToInt32(e.CommandArgument);
        int cc = Convert.ToInt32(leavetypecount);
        cc = cc + 2;
        for (x = 2; x < cc; x++)
        {
            if (e.CommandName == Convert.ToString(x))
            {
                leavetext = gridViewstaffleave.Rows[jj].Cells[x].Text;
                leavemonthh = gridViewstaffleave.Rows[jj].Cells[1].Text;
                gridViewstaffleave.Rows[jj].Cells[x].BackColor = Color.OrangeRed;
                leaveheadername = Convert.ToString(gridViewstaffleave.HeaderRow.Cells[x].Text);
                rowval = jj;
                colval = x;
                string[] spl = leavetext.Split('/');
                string f = spl[0];
                if (f != "0")
                {
                    divleavedis.Visible = true;
                    leavedetailgrid(leavemonthh, leaveheadername);
                }
                else
                {
                    imgdiv2.Visible = true;
                    lbl_alert.Text = "You Are Doesn't Take A Leave On This Category Of " + leaveheadername;
                }
            }
        }
        int r = 0;
        int c = 0;
        if (partl_check == 1)
        {
            string[] sp = rowgrid.Split(',');
            for (int f = 0; f < sp.Length; f++)
            {
                string[] sp1 = sp[f].Split('-');
                r = Convert.ToInt32(sp1[0]);
                c = Convert.ToInt32(sp1[1]);
                gridViewstaffleave.Rows[r].Cells[c].BackColor = ColorTranslator.FromHtml("#A4F9C9");
            }
        }
        if (full_check == 1)
        {
            string[] spsecond = colgrind.Split(',');
            for (int f = 0; f < spsecond.Length; f++)
            {
                string[] sp11 = spsecond[f].Split('-');
                r = Convert.ToInt32(sp11[0]);
                c = Convert.ToInt32(sp11[1]);
                gridViewstaffleave.Rows[r].Cells[c].BackColor = Color.Tomato;
            }
        }
    }
    public void btn_leavedisclose_Click(object sender, EventArgs e)
    {
        divleavedis.Visible = false;
    }
    public void txt_staff_name_TextChanged(object sender, EventArgs e)
    {
        try
        {
            string staffname = Convert.ToString(txt_staff_name.Text);
            string query = "select m.staff_code, s.*,h.dept_name as dept,d.desig_name as design from staff_appl_master s,staffmaster m,stafftrans t,hrdept_master h,desig_master d where s.appl_no = m.appl_no and m.staff_code = t.staff_code and t.dept_code = h.dept_code and t.desig_code = d.desig_code and m.college_code = 13 and t.latestrec = 1 and m.resign = 0 and settled = 0 and m.staff_name = '" + staffname + "'";
            ds = d2.select_method_wo_parameter(query, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    txt_staff_name.Text = staffname;
                    txt_dep.Text = Convert.ToString(ds.Tables[0].Rows[i]["dept"]);
                    txt_des.Text = Convert.ToString(ds.Tables[0].Rows[i]["design"]);
                    txt_staff_code.Text = Convert.ToString(ds.Tables[0].Rows[i]["staff_code"]);
                    BindLeave();
                    bindgrid2();
                }
            }
        }
        catch
        {
        }
    }
    public void altbatch_click(object sender, EventArgs e)
    {
    }
    public string subjectcode(string textcri, string subjename)
    {
        string subjec_no = "";
        try
        {
            string select_subno = "select TextCode from textvaltable where TextCriteria='" + textcri + "' and college_code =" + collegecode1 + " and TextVal='" + subjename + "'";
            ds.Clear();
            ds = d2.select_method_wo_parameter(select_subno, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                subjec_no = Convert.ToString(ds.Tables[0].Rows[0]["TextCode"]);
            }
            else
            {
                string insertquery = "insert into textvaltable(TextCriteria,TextVal,college_code) values('" + textcri + "','" + subjename + "','" + collegecode1 + "')";
                int result = d2.update_method_wo_parameter(insertquery, "Text");
                if (result != 0)
                {
                    string select_subno1 = "select TextCode from textvaltable where TextCriteria='" + textcri + "' and college_code =" + collegecode1 + " and TextVal='" + subjename + "'";
                    ds.Clear();
                    ds = d2.select_method_wo_parameter(select_subno1, "Text");
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        subjec_no = Convert.ToString(ds.Tables[0].Rows[0]["TextCode"]);
                    }
                }
            }
        }
        catch
        {
        }
        return subjec_no;
    }
    protected void gatepassadd_Click(object sender, EventArgs e)
    {
    }
    protected void gatepassexit_Click(object sender, EventArgs e)
    {
        try
        {
            //pan_gatepass.Visible = false;
        }
        catch (Exception ex)
        {
        }
    }
    protected void imagebtnpopclose11_Click(object sender, EventArgs e)
    {
        popwindow1.Visible = false;
    }
    protected void cb_itemheader3_CheckedChange(object sender, EventArgs e)
    {
        int cout = 0;
        txt_itemheader3.Text = "--Select--";
        if (cb_itemheader3.Checked == true)
        {
            cout++;
            for (int i = 0; i < cbl_itemheader3.Items.Count; i++)
            {
                cbl_itemheader3.Items[i].Selected = true;
            }
            txt_itemheader3.Text = "Item Header(" + (cbl_itemheader3.Items.Count) + ")";
        }
        else
        {
            for (int i = 0; i < cbl_itemheader3.Items.Count; i++)
            {
                cbl_itemheader3.Items[i].Selected = false;
            }
        }
        loadsubheadername();
        itemmaster();
    }
    protected void cbl_itemheader_SelectedIndexChange(object sender, EventArgs e)
    {
        int i = 0;
        int commcount = 0;
        txt_itemheader3.Text = "--Select--";
        for (i = 0; i < cbl_itemheader3.Items.Count; i++)
        {
            if (cbl_itemheader3.Items[i].Selected == true)
            {
                commcount = commcount + 1;
                cb_itemheader3.Checked = false;
            }
        }
        if (commcount > 0)
        {
            if (commcount == cbl_itemheader3.Items.Count)
            {
                cb_itemheader3.Checked = true;
            }
            txt_itemheader3.Text = "Item Header(" + commcount.ToString() + ")";
        }
        loadsubheadername();
        itemmaster();
    }
    public void loadsubheadername()
    {
        try
        {
            cbl_subheadername.Items.Clear();
            string itemheader = "";
            for (int i = 0; i < cbl_itemheader3.Items.Count; i++)
            {
                if (cbl_itemheader3.Items[i].Selected == true)
                {
                    if (itemheader == "")
                    {
                        itemheader = "" + cbl_itemheader3.Items[i].Value.ToString() + "";
                    }
                    else
                    {
                        itemheader = itemheader + "'" + "," + "" + "'" + cbl_itemheader3.Items[i].Value.ToString() + "";
                    }
                }
            }
            if (itemheader.Trim() != "")
            {
                string query = "";
                query = "select distinct t.TextCode,t.TextVal  from TextValTable t,IM_ItemMaster i where t.TextCode=i.subheader_code and ItemHeaderCode in ('" + itemheader + "')";
                ds.Clear();
                ds = d2.select_method_wo_parameter(query, "Text");
                // ds.Clear();
                // ds = d2.BindItemCodeAll(itemheader);
                if (ds.Tables[0].Rows.Count > 0)
                {
                    cbl_subheadername.DataSource = ds;
                    cbl_subheadername.DataTextField = "TextVal";
                    cbl_subheadername.DataValueField = "TextCode";
                    cbl_subheadername.DataBind();
                    if (cbl_subheadername.Items.Count > 0)
                    {
                        for (int i = 0; i < cbl_subheadername.Items.Count; i++)
                        {
                            cbl_subheadername.Items[i].Selected = true;
                        }
                        txt_subheadername.Text = "Sub Header Name(" + cbl_subheadername.Items.Count + ")";
                    }
                    if (cbl_subheadername.Items.Count > 5)
                    {
                        Panel5.Width = 300;
                        Panel5.Height = 300;
                    }
                }
                else
                {
                    txt_subheadername.Text = "--Select--";
                }
            }
            else
            {
                txt_subheadername.Text = "--Select--";
            }
        }
        catch
        {
        }
    }
    public void itemmaster()
    {
        chklst_pop2itemtyp.Items.Clear();
        string itemheadercode = "";
        string subheader = "";
        for (int i = 0; i < cbl_itemheader3.Items.Count; i++)
        {
            if (cbl_itemheader3.Items[i].Selected == true)
            {
                if (itemheadercode == "")
                {
                    itemheadercode = "" + cbl_itemheader3.Items[i].Value.ToString() + "";
                }
                else
                {
                    itemheadercode = itemheadercode + "'" + "," + "'" + cbl_itemheader3.Items[i].Value.ToString() + "";
                }
            }
        }
        for (int i = 0; i < cbl_subheadername.Items.Count; i++)
        {
            if (cbl_subheadername.Items[i].Selected == true)
            {
                if (subheader == "")
                {
                    subheader = "" + cbl_subheadername.Items[i].Value.ToString() + "";
                }
                else
                {
                    subheader = subheader + "'" + "," + "" + "'" + cbl_subheadername.Items[i].Value.ToString() + "";
                }
            }
        }
        if (itemheadercode.Trim() != "" && subheader.Trim() != "")
        {
            // ds.Clear();
            //  ds = d2.BindItemCodewithsubheader(itemheadercode, subheader);
            string query = "";
            query = "select distinct ItemCode,ItemName  from IM_ItemMaster where ItemHeaderCode in ('" + itemheadercode + "') and subheader_code in ('" + subheader + "')";
            ds.Clear();
            ds = d2.select_method_wo_parameter(query, "Text");
            chklst_pop2itemtyp.Items.Clear();
            //if (itemheadercode.Trim() != "")
            //{
            //    ds.Clear();
            //    ds = d2.BindItemCode(itemheadercode);
            if (ds.Tables[0].Rows.Count > 0)
            {
                chklst_pop2itemtyp.DataSource = ds;
                chklst_pop2itemtyp.DataTextField = "ItemName";
                chklst_pop2itemtyp.DataValueField = "ItemCode";
                chklst_pop2itemtyp.DataBind();
                if (chklst_pop2itemtyp.Items.Count > 0)
                {
                    for (int i = 0; i < chklst_pop2itemtyp.Items.Count; i++)
                    {
                        chklst_pop2itemtyp.Items[i].Selected = true;
                    }
                    txt_itemname3.Text = "Item Name(" + chklst_pop2itemtyp.Items.Count + ")";
                }
            }
            else
            {
                txt_itemname3.Text = "--Select--";
            }
        }
        else
        {
            txt_itemname3.Text = "--Select--";
        }
    }
    protected void chklstitemtyp(object sender, EventArgs e)
    {
        int i = 0;
        chk_pop2itemtyp.Checked = false;
        int commcount = 0;
        txt_itemname3.Text = "--Select--";
        for (i = 0; i < chklst_pop2itemtyp.Items.Count; i++)
        {
            if (chklst_pop2itemtyp.Items[i].Selected == true)
            {
                commcount = commcount + 1;
            }
        }
        if (commcount > 0)
        {
            if (commcount == chklst_pop2itemtyp.Items.Count)
            {
                chk_pop2itemtyp.Checked = true;
            }
            txt_itemname3.Text = "Item Name(" + commcount.ToString() + ")";
        }
    }
    protected void chkitemtyp(object sender, EventArgs e)
    {
        int cout = 0;
        txt_itemname3.Text = "--Select--";
        chk_pop2itemtyp.Checked = false;
        if (chk_pop2itemtyp.Checked == true)
        {
            cout++;
            for (int i = 0; i < chklst_pop2itemtyp.Items.Count; i++)
            {
                chklst_pop2itemtyp.Items[i].Selected = true;
            }
            txt_itemname3.Text = "Item Name(" + (chklst_pop2itemtyp.Items.Count) + ")";
        }
        else
        {
            for (int i = 0; i < chklst_pop2itemtyp.Items.Count; i++)
            {
                chklst_pop2itemtyp.Items[i].Selected = false;
            }
        }
    }
    protected void ddl_type_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (ddl_type.SelectedValue == "0")
        {
            txt_searchby.Visible = true;
            txt_searchitemcode.Visible = false;
            txt_searchheadername.Visible = false;
            txt_searchheadername.Text = "";
            txt_searchitemcode.Text = "";
        }
        else if (ddl_type.SelectedValue == "1")
        {
            txt_searchby.Visible = false;
            txt_searchitemcode.Visible = true;
            txt_searchheadername.Visible = false;
            txt_searchby.Text = "";
            txt_searchheadername.Text = "";
        }
        else if (ddl_type.SelectedValue == "2")
        {
            txt_searchby.Visible = false;
            txt_searchitemcode.Visible = false;
            txt_searchheadername.Visible = true;
            txt_searchby.Text = "";
            txt_searchitemcode.Text = "";
        }
    }
    protected void btn_conexit1_Click(object sender, EventArgs e)
    {
        popwindow1.Visible = false;
    }
    protected void btn_errorclose_Click(object sender, EventArgs e)
    {
        try
        {
            imgdiv2.Visible = false;
            if (chkrelived == 1)
            {
                Response.Redirect("HierarchySettingReport.aspx");
            }
            chkrelived = 0;
        }
        catch (Exception ex)
        {
        }
    }
    protected void cb_subheadername_CheckedChange(object sender, EventArgs e)
    {
        try
        {
            if (cb_subheadername.Checked == true)
            {
                for (int i = 0; i < cbl_subheadername.Items.Count; i++)
                {
                    cbl_subheadername.Items[i].Selected = true;
                }
                txt_subheadername.Text = "Sub Header Name(" + (cbl_subheadername.Items.Count) + ")";
            }
            else
            {
                for (int i = 0; i < cbl_subheadername.Items.Count; i++)
                {
                    cbl_subheadername.Items[i].Selected = false;
                }
                txt_subheadername.Text = "--Select--";
            }
            // loadsubheadername();
            itemmaster();
        }
        catch (Exception ex)
        {
        }
    }
    protected void cbl_subheadername_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            txt_subheadername.Text = "--Select--";
            cb_subheadername.Checked = false;
            int commcount = 0;
            for (int i = 0; i < cbl_subheadername.Items.Count; i++)
            {
                if (cbl_subheadername.Items[i].Selected == true)
                {
                    commcount = commcount + 1;
                }
            }
            if (commcount > 0)
            {
                txt_subheadername.Text = "Sub Header Name(" + commcount.ToString() + ")";
                if (commcount == cbl_subheadername.Items.Count)
                {
                    cb_subheadername.Checked = true;
                }
            }
            itemmaster();
        }
        catch (Exception ex)
        {
        }
    }
    protected void btn_go3_Click(object sender, EventArgs e)
    {
        try
        {
            if (ViewState["selecteditems"] != null)
            {
                DataTable dnew = (DataTable)ViewState["selecteditems"];
                ViewState["sb"] = dnew;
                checknew = "s";
            }
            string itemheadercode = "";
            for (int i = 0; i < cbl_itemheader3.Items.Count; i++)
            {
                if (cbl_itemheader3.Items[i].Selected == true)
                {
                    if (itemheadercode == "")
                    {
                        itemheadercode = "" + cbl_itemheader3.Items[i].Value.ToString() + "";
                    }
                    else
                    {
                        itemheadercode = itemheadercode + "'" + "," + "'" + cbl_itemheader3.Items[i].Value.ToString() + "";
                    }
                }
            }
            string itemheadercode1 = "";
            for (int i = 0; i < chklst_pop2itemtyp.Items.Count; i++)
            {
                if (chklst_pop2itemtyp.Items[i].Selected == true)
                {
                    if (itemheadercode1 == "")
                    {
                        itemheadercode1 = "" + chklst_pop2itemtyp.Items[i].Value.ToString() + "";
                    }
                    else
                    {
                        itemheadercode1 = itemheadercode1 + "'" + "," + "'" + chklst_pop2itemtyp.Items[i].Value.ToString() + "";
                    }
                }
            }
            string selectquery = "";
            if (txt_searchby.Text.Trim() != "")
            {
                //selectquery = "select itemheader_name,itemheader_code,item_code,item_name ,model_name,Size_name ,item_unit,description ,special_instru from Item_Master where item_name='" + txt_searchby.Text + "' order by item_code";
                selectquery = "select ItemHeaderName,ItemHeaderCode,ItemCode,ItemName ,ItemModel,ItemSize ,ItemUnit  from IM_ItemMaster where ItemName='" + txt_searchby.Text + "' order by ItemCode";
            }
            else if (txt_searchitemcode.Text.Trim() != "")
            {
                //selectquery = "select itemheader_name,itemheader_code,item_code,item_name ,model_name,Size_name ,item_unit,description ,special_instru from Item_Master where item_code='" + txt_searchitemcode.Text + "' order by item_code";
                selectquery = "select ItemHeaderName,ItemHeaderCode,ItemCode,ItemName ,ItemModel,ItemSize ,ItemUnit  from IM_ItemMaster where ItemCode='" + txt_searchby.Text + "' order by ItemCode";
            }
            else if (txt_searchheadername.Text.Trim() != "")
            {
                // selectquery = "select itemheader_name,itemheader_code,item_code,item_name ,model_name,Size_name ,item_unit,description ,special_instru from Item_Master where itemheader_name='" + txt_searchheadername.Text + "' order by item_code";
                selectquery = "select ItemHeaderName,ItemHeaderCode,ItemCode,ItemName ,ItemModel,ItemSize ,ItemUnit  from IM_ItemMaster where ItemHeaderName='" + txt_searchby.Text + "' order by ItemCode";
            }
            else if (itemheadercode.Trim() != "" && itemheadercode1.Trim() != "")
            {
                //selectquery = "select distinct  item_code ,item_name , itemheader_code,itemheader_name,item_unit from item_master where itemheader_code in ('" + itemheadercode + "') and item_code in ('" + itemheadercode1 + "') order by item_code ";
                selectquery = "select ItemHeaderName,ItemHeaderCode,ItemCode,ItemName ,ItemModel,ItemSize ,ItemUnit  from IM_ItemMaster where ItemHeaderCode in ('" + itemheadercode + "') and ItemCode in ('" + itemheadercode1 + "') order by ItemCode ";
            }
            if (txt_itemheader3.Text.Trim() != "--Select--" && txt_itemname3.Text.Trim() != "--Select--")
            {
                if (selectquery.Trim() != "")
                {
                    ds.Clear();
                    ds = d2.select_method_wo_parameter(selectquery, "Text");
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        gvdatass.DataSource = ds.Tables[0];
                        gvdatass.DataBind();
                        gvdatass.Visible = true;
                        Div22.Visible = true;
                        btn_itemsave4.Visible = true;
                        btn_conexist4.Visible = true;
                        lbl_error3.Visible = false;
                    }
                }
            }
            else
            {
                lbl_error3.Visible = true;
                lbl_error3.Text = "Please select all fields";
                Div22.Visible = false;
                btn_itemsave4.Visible = false;
                btn_conexist4.Visible = false;
            }
            txt_searchby.Text = "";
            txt_searchitemcode.Text = "";
            txt_searchheadername.Text = "";
        }
        catch
        {
        }
    }
    public void bindtable()
    {
        dt.Columns.Add("S.No");
        dt.Columns.Add("Item Name");
        dt.Columns.Add("ItemCode");
        dt.Columns.Add("Header Name");
        dt.Columns.Add("Header code");
        dt.Columns.Add("Item unit");
        dt.TableName = "selecteditems";
    }
    protected void selectedmenuchk(object sender, EventArgs e)
    {
        int count = 0;
        bindtable();
        if (checknew == "s")
        {
            if (ViewState["sb"] != null)
            {
                DataTable dts = (DataTable)ViewState["sb"];
                DataView dv = new DataView(dts);
                dt = dv.ToTable();
                dr = null;
                // checknew = "";
            }
        }
        else
        {
        }
        foreach (DataListItem gvrow in gvdatass.Items)
        {
            CheckBox chkSelect = (gvrow.FindControl("CheckBox2") as CheckBox);
            if (chkSelect.Checked)
            {
                count++;
                dr = dt.NewRow();
                string itemcode = "";
                string itemnamegv = "";
                string itemheadername = "";
                dr[0] = Convert.ToString(count);
                Label lbl_itemname = (Label)gvrow.FindControl("lbl_itemname");
                itemnamegv = lbl_itemname.Text;
                dr[1] = itemnamegv;
                Label lbl_itemcode = (Label)gvrow.FindControl("lbl_itemcode");
                itemcode = lbl_itemcode.Text;
                dr[2] = itemcode;
                Label lbl_headername = (Label)gvrow.FindControl("lblitemheadername");
                itemheadername = lbl_headername.Text;
                dr[3] = itemheadername;
                Label lbl_itemheadercode = (Label)gvrow.FindControl("lbl_itemheadercode");
                string itemheadercode = lbl_itemheadercode.Text;
                dr[4] = itemheadercode;
                Label lbl_measureitem = (Label)gvrow.FindControl("lbl_measureitem");
                string measureitem = lbl_measureitem.Text;
                //if(measureitem.Trim()!="")
                //{
                dr[5] = measureitem;
                //}
                if (dt.Rows.Count > 0)
                {
                    DataView d = new DataView(dt);
                    d.RowFilter = "ItemCode ='" + itemcode + "'";
                    if (d.Count == 0)
                    {
                        dt.Rows.Add(dr);
                    }
                }
                else
                {
                    dt.Rows.Add(dr);
                }
                // dt = dt.DefaultView.ToTable(true, "Item Name", "Item Code", "Header Name", "Header code", "Item unit");
                //ViewState["selecteditems"] = dt;
                selectitemgrid.DataSource = dt;
                selectitemgrid.DataBind();
            }
            else
            {
            }
        }
        selectitemgrid.DataSource = dt;
        selectitemgrid.DataBind();
        ViewState["selecteditems"] = dt;
        ViewState["selecteditems1"] = dt;
    }
    protected void btn_itemsave4_Click(object sender, EventArgs e)
    {
        try
        {
            DataTable dt = new DataTable();
            DataRow dr;
            dt.Columns.Add("ItemCode");
            dt.Columns.Add("ItemName");
            dt.Columns.Add("Measure");
            dt.Columns.Add("Quantity");
            //20.10.15
            if (Session["dt"] != null)
            {
                DataTable d1 = new DataTable();
                d1 = (DataTable)Session["dt"];
                if (d1.Rows.Count > 0)
                {
                    for (int r = 0; r < d1.Rows.Count; r++)
                    {
                        dr = dt.NewRow();
                        for (int c = 0; c < d1.Columns.Count; c++)
                        {
                            dr[c] = Convert.ToString(d1.Rows[r][c]);
                        }
                        dt.Rows.Add(dr);
                    }
                }
            }
            int count = 0;
            string itemname = "";
            if (selectitemgrid.Rows.Count > 0)
            {
                for (int i = 0; i < selectitemgrid.Rows.Count; i++)
                {
                    dr = dt.NewRow();
                    dr[0] = Convert.ToString((selectitemgrid.Rows[i].FindControl("itemcodegv") as Label).Text);
                    dr[1] = Convert.ToString((selectitemgrid.Rows[i].FindControl("itemnamegv") as Label).Text);
                    dr[2] = Convert.ToString((selectitemgrid.Rows[i].FindControl("lbl_measureitem") as Label).Text);
                    // string noofperson = Convert.ToString(txt_noofperson.Text);
                    dr[3] = Convert.ToString("");
                    dt.Rows.Add(dr);
                }
            }
            if (dt.Rows.Count > 0)
            {
                SelectdptGrid.Visible = true;
                SelectdptGrid.DataSource = dt;
                SelectdptGrid.DataBind();
                griddiv.Visible = true;
                SelectdptGrid.Visible = true;
                Sergrid.Visible = true;
                Sergrid.DataSource = dt;
                Sergrid.DataBind();
                sergriddiv.Visible = true;
                Session["dt"] = dt;
                popwindow1.Visible = false;
                btn_reqclear.Visible = true;
                btn_reqsave.Visible = true;
            }
            btn_reqclear.Visible = true;
            btn_reqsave.Visible = true;
            if (count == 0)
            {
            }
        }
        catch
        {
        }
    }
    protected void btn_conexit4_Click(object sender, EventArgs e)
    {
        popwindow1.Visible = false;
    }
    public void imagebtnpop1close22_Click(object sender, EventArgs e)
    {
        Div1.Visible = false;
    }
    public void ddldepratstaff_SelectedIndexChanged(object sender, EventArgs e)
    {
        bind_stafType();
        bind_design();
        loadfsstaff();
    }
    public void ddl_stftype_SelectedIndexChanged(object sender, EventArgs e)
    {
        bind_design();
        loadfsstaff();
    }
    public void ddl_design_SelectedIndexChanged(object sender, EventArgs e)
    {
        loadfsstaff();
    }
    public void ddlstaff_SelectedIndexChanged(object sender, EventArgs e)
    {
        loadfsstaff();
    }
    public void txt_search_TextChanged(object sender, EventArgs e)
    {
    }
    public void fsstaff_CellClick(object sender, EventArgs e)
    {
    }
    public void btnstaffadd_Click(object sender, EventArgs e)
    {
        try
        {
            string activerow = fsstaff.ActiveSheetView.ActiveRow.ToString();
            if (Convert.ToInt32(activerow.ToString()) > 0)
            {
                string name_active = fsstaff.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Text;
                string des_active = fsstaff.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text;
                txtissueper.Text = name_active.ToString();
                txt_staff_code.Text = des_active.ToString();
                txtstaff_co.Text = fsstaff.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text;
                Div1.Visible = false;
                DataTable dt_get_staff = d2.select_method_wop_table("select  s.*,h.dept_name as dept,d.desig_name as design from staff_appl_master s,staffmaster m,stafftrans t,hrdept_master h,desig_master d where s.appl_no = m.appl_no and m.staff_code = t.staff_code and t.dept_code = h.dept_code and t.desig_code = d.desig_code and m.college_code = 13 and t.latestrec = 1 and m.resign = 0 and settled = 0 and m.staff_code = '" + des_active + "'", "Text");
                txt_staff_code.Text = des_active;
                txt_staff_name.Text = dt_get_staff.Rows[0]["appl_name"].ToString();
                txt_dep.Text = dt_get_staff.Rows[0]["dept"].ToString();
                txt_des.Text = dt_get_staff.Rows[0]["design"].ToString();
                BindLeave();
                bindgrid2();
            }
            else
            {
                ermsg.Visible = true;
                ermsg.Text = "Please Select Staff";
            }
        }
        catch
        {
        }
    }
    public void exitpop_Click(object sender, EventArgs e)
    {
        Div1.Visible = false;
    }
    public void imagebtnpopclose1new_Click(object sender, EventArgs e)
    {
    }
    public void txt_staff_code_TextChanged(object sender, EventArgs e)
    {
        try
        {
            string staffcode = Convert.ToString(txt_staff_code.Text);
            string query = "select  s.*,h.dept_name as dept,d.desig_name as design from staff_appl_master s,staffmaster m,stafftrans t,hrdept_master h,desig_master d where s.appl_no = m.appl_no and m.staff_code = t.staff_code and t.dept_code = h.dept_code and t.desig_code = d.desig_code and m.college_code = 13 and t.latestrec = 1 and m.resign = 0 and settled = 0 and m.staff_code = '" + staffcode + "'";
            ds = d2.select_method_wo_parameter(query, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    txt_staff_name.Text = Convert.ToString(ds.Tables[0].Rows[i]["appl_name"]);
                    txt_dep.Text = Convert.ToString(ds.Tables[0].Rows[i]["dept"]);
                    txt_des.Text = Convert.ToString(ds.Tables[0].Rows[i]["design"]);
                    txt_staff_code.Text = staffcode;
                    BindLeave();
                    bindgrid2();
                }
            }
        }
        catch
        {
        }
    }
    protected void ddlbatch1_selectedchanged(object sender, EventArgs e)
    {
        try
        {
        }
        catch
        {
        }
    }
    protected void Button1_Click(object sender, EventArgs e)
    {
        try
        {
            paneladd.Visible = true;
            // bindgrid();
            //bindspread();
            //btnnew_click(sender, e);
        }
        catch
        {
        }
    }
    protected void gridview1_OnRowDataBound(object sender, System.Web.UI.WebControls.GridViewRowEventArgs e)
    {
        try
        {
        }
        catch
        {
        }
    }
    protected void btnstaff_click(object sender, EventArgs e)
    {
        try
        {
            Div1.Visible = true;
            fsstaff.Visible = true;
            fsstaff.Sheets[0].RowCount = 0;
            BindCollege();
            loadstaffdep(collegecode);
            bind_stafType();
            bind_design();
            loadfsstaff();
        }
        catch
        {
        }
    }
    protected void btnnew_click(object sender, EventArgs e)
    {
        try
        {
            txtissueper.Text = "";
            txtapply.Text = DateTime.Now.ToString("dd/MM/yyyy");
            txtfromdate.Text = DateTime.Now.ToString("dd/MM/yyyy");
            txttodate.Text = DateTime.Now.ToString("dd/MM/yyyy");
            //string time = DateTime.Now.ToLongTimeString();
            //string[] split = time.Split(':', ' ');
            //ddlendhour.SelectedValue = split[0].ToString();
            //ddlendmin.SelectedValue = split[1].ToString();
            //ddlenssession.SelectedValue = split[3].ToString();
            //ddlhour.SelectedValue = split[0].ToString();
            //ddlmin.SelectedValue = split[1].ToString();
            //ddlsession.SelectedValue = split[3].ToString();
            //erroemesssagelbl.Visible = false;
            //lblview.Visible = false;
            //BtnView.Visible = false;
            //bindgrid();
        }
        catch
        {
        }
    }
    public void gatepass()
    {
        Int64 ReqStaffAppNo = 0;
        string reason = "";
        string mode = "";
        string by = "";
        string hr = Convert.ToString(ddlhour.SelectedItem.Text);
        string min = Convert.ToString(ddlmin.SelectedItem.Text);
        string day = Convert.ToString(ddlsession.SelectedItem.Text);
        string time_exit = hr + ":" + min + ":" + day;
        string hr1 = Convert.ToString(ddlendhour.SelectedItem.Text);
        string min1 = Convert.ToString(ddlendmin.SelectedItem.Text);
        string day1 = Convert.ToString(ddlenssession.SelectedItem.Text);
        string time_entry = hr1 + ":" + min1 + ":" + day1;
        DateTime RequestfromDate = new DateTime();
        RequestfromDate = TextToDate(txtfromdate);
        DateTime RequesttoDate = new DateTime();
        RequesttoDate = TextToDate(txttodate);
        DateTime RequestDate = new DateTime();
        //RequestDate = TextToDate(txt_reqtn_gate_date);
        string req_code = "";
        // Convert.ToString(txt_reqtn_gate.Text);
        if (ddlgatepass.SelectedItem.Value != "Select")
        {
            if (ddlgatepass.SelectedItem.Value != "Others")
            {
                reason = Convert.ToString(ddlgatepass.SelectedItem.Value);
            }
            else
            {
                string txtreason = Convert.ToString(txt_ddlgatepassreson.Text);
                reason = subjectcode("GRRea", txtreason);
            }
        }
        if (ddlrequest.SelectedItem.Value != "Select")
        {
            if (ddlrequest.SelectedItem.Value != "Others")
            {
                by = Convert.ToString(ddlrequest.SelectedItem.Value);
            }
            else
            {
                string txtby = Convert.ToString(txt_gatepassreq.Text);
                by = subjectcode("GRTyp", txtby);
            }
        }
        if (ddlrequestmode.SelectedItem.Value != "Select")
        {
            if (ddlrequestmode.SelectedItem.Value != "Others")
            {
                mode = Convert.ToString(ddlrequestmode.SelectedItem.Value);
            }
            else
            {
                string txtreason = Convert.ToString(txt_gatepassreqmode.Text);
                mode = subjectcode("GRMod", txtreason);
            }
        }
        string stud = "";
        string appno = "";
        string staff_name = Convert.ToString(txtissueper.Text);
        string[] split = staff_name.Split('-');
        string names = split[0];
        string staff_code = d2.GetFunction("select appl_no from staffmaster where staff_name='" + names + "'");
        if (staff_code.Trim() != "")
        {
            ReqStaffAppNo = Convert.ToInt64(d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staff_code + "'"));
        }
        //for (int i = 0; i < GridView1.Rows.Count; i++)
        //{
        //    CheckBox chkItemHeader = (CheckBox)GridView1.Rows[i].FindControl("chkup3");
        //    if (chkItemHeader.Checked == true)
        //    {
        //        Label rollno = (Label)GridView1.Rows[i].FindControl("lblrollno");
        //        string appno1 = Convert.ToString(rollno.Text);
        //        appno = d2.GetFunction("select app_no  from Registration where Reg_No ='" + appno1 + "'");
        //        //}
        //        //if (chkItemHeader.Checked == true)
        //        //{
        //        string query = "insert into RQ_Requisition(RequestType,RequestMode,RequestBy,RequestCode,RequestDate,ReqAppNo,ReqStaffAppNo,GateReqExitDate,GateReqExitTime,GateReqEntryDate,GateReqEntryTime,GateReqReason,MemType,ReqApproveStage)values('6','" + mode + "','" + by + "','" + req_code + "','" + RequestDate + "','" + appno + "','" + ReqStaffAppNo + "','" + RequestfromDate + "','" + time_exit + "','" + RequesttoDate + "','" + time_entry + "','" + reason + "','1','0')";
        //        d2.update_method_wo_parameter(query, "Text");
        //        imgdiv2.Visible = true;
        //        lbl_alert.Text = "Saved Successfully";
        //    }
        //}
    }
    protected void Btnedit_click(object sender, EventArgs e)
    {
        try
        {
            popview.Visible = false;
            //panel10.Visible = false;
        }
        catch
        {
        }
    }
    public string getdepartment(string dept)
    {
        string appno = d2.GetFunction("select Dept_Name  from Department where Dept_Code ='" + dept + "'");
        return appno;
    }
    public string getitemname(string item)
    {
        string itemname = d2.GetFunction("select itemname from IM_ItemMaster where ItemPK='" + item + "'");
        return itemname;
    }
    public string getitemcode(string item)
    {
        string itemname = d2.GetFunction("select ItemCode from IM_ItemMaster where ItemPK='" + item + "'");
        return itemname;
    }
    public string getiteunit(string item)
    {
        string itemname = d2.GetFunction("select ItemUnit from IM_ItemMaster where ItemPK='" + item + "'");
        return itemname;
    }
    public string getstaffname(string staff)
    {
        string codestaff = d2.GetFunction("select staff_name  from staffmaster where staff_code ='" + staff + "'");
        return codestaff;
    }
    public string gettext(string text)
    {
        string text_val = d2.GetFunction("select TextVal  from textvaltable where TextCriteria='ReCom' and TextCode ='" + text + "'");
        return text_val;
    }
    public string gettext1(string text)
    {
        string text_val = d2.GetFunction("select TextVal  from textvaltable where TextCriteria='ReSug' and TextCode ='" + text + "'");
        return text_val;
    }
    public string getstaffnameappl_no(string app_no)
    {
        string codestaff = d2.GetFunction("select staff_name  from staffmaster where appl_no ='" + app_no + "'");
        return codestaff;
    }
    public void view1()
    {
        try
        {
            lblitemTotal.Visible = false;
            lblitemcostTotal.Visible = false;
            string query = "";
            string activerow = "";
            string dept = "";
            string expt_date = "";
            string req_date = "";
            string item = "";
            string ReqQty = "";
            string ReqtQty = "";
            string reqby = "";
            string cost = "";
            DataTable dt = new DataTable();
            DataRow dr;
            dt.Columns.Add("ItemCode");
            dt.Columns.Add("ItemName");
            dt.Columns.Add("Measure");
            dt.Columns.Add("Quantity");
            dt.Columns.Add("SuggestedCost");
            dt.Columns.Add("Cost");
            dt.Columns.Add("Approvedqty");
            activerow = Fpspread1.ActiveSheetView.ActiveRow.ToString();
            Color backcolr = Fpspread1.Sheets[0].Cells[Convert.ToInt32(activerow), 0].BackColor;
            string cc = backcolr.Name;


            if (rdo_approval.Checked == true)
            {
                btn_itm_save.Visible = true;
                btn_item_reject.Visible = true;
                btn_approval.Visible = true; //poo
                btn_reject.Visible = true;   //poo 
            }
            else
            {
                btn_itm_save.Visible = false;
                btn_item_reject.Visible = false;
                btn_approval.Visible = false; //poo
                btn_reject.Visible = false;   //poo 
            }

            string reqnumb1 = "";
            string req_no = "";
            string reqsts = "";

            reqnumb1 = Convert.ToString(Fpspread1.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
            req_no = d2.GetFunction("select RequestCode from RQ_Requisition where RequestType=1 and RequisitionPK='" + reqnumb1 + "'");
            txt_reqno.Text = req_no;
            TextBox2.Text = reqnumb1;
            //query = "SELECT RequisitionPK, CASE WHEN RequestType = 1 THEN 'Item Request' END RequestType,RequestCode,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,CASE WHEN RequestBy = 1 THEN 'Own' when RequestBy=2  then 'Others' else 'Both' END RequestBy,Remarks,ReqAppNo, case when MemType=2 then 'Staff' when MemType =1 then 'Stuedent' end as memtype FROM RQ_Requisition where RequestType='1' and RequestCode='"+req_no+"'";
            if (rdo_waiting.Checked == true)
                query = "select distinct DeptFK,r.Remarks,ReqQty,RequestBy,ItemFK,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,RequestQty,suggestedcost,d.ReqAppStatus  from RQ_Requisition r,RQ_RequisitionDet d,IM_ItemMaster i where RequestType=1 and RequisitionFK=RequisitionPK and RequestCode='" + req_no + "' and d.ReqAppStatus='1'";

            else
                query = "select distinct DeptFK,r.Remarks,ReqQty,RequestBy,ItemFK,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,RequestQty,suggestedcost,d.ReqAppStatus from RQ_Requisition r,RQ_RequisitionDet d,IM_ItemMaster i where RequestType=1 and RequisitionFK=RequisitionPK and RequestCode='" + req_no + "'";



            ds = d2.select_method_wo_parameter(query, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                //Added By Saranyadevi 3.4.2018
                double totalcost = 0;
                for (int irow = 0; irow < ds.Tables[0].Rows.Count; irow++)
                {
                    cb_other.Checked = false;
                    cb_own.Checked = false;
                    dept = ds.Tables[0].Rows[irow]["DeptFK"].ToString();
                    txt_dept.Text = getdepartment(dept);
                    txt_reqremarks.Text = ds.Tables[0].Rows[irow]["Remarks"].ToString();
                    req_date = ds.Tables[0].Rows[irow]["RequestDate"].ToString();
                    string[] ay = req_date.Split('/');
                    txt_date.Text = ay[0].ToString() + "/" + ay[1].ToString() + "/" + ay[2].ToString();
                    txt_exdate.Text = ds.Tables[0].Rows[irow]["ReqExpectedDate"].ToString();
                    item = ds.Tables[0].Rows[irow]["ItemFK"].ToString();
                    ReqQty = ds.Tables[0].Rows[irow]["ReqQty"].ToString();
                    reqby = ds.Tables[0].Rows[irow]["RequestBy"].ToString();
                    ReqtQty = ds.Tables[0].Rows[irow]["RequestQty"].ToString();
                    cost = ds.Tables[0].Rows[irow]["suggestedcost"].ToString();
                    reqsts = ds.Tables[0].Rows[irow]["ReqAppStatus"].ToString();
                    decimal reqty = Convert.ToDecimal(ds.Tables[0].Rows[irow]["ReqQty"]);
                    decimal sugcos = 0;
                    if (cost != "")
                    {
                        decimal cos = Convert.ToDecimal(cost);
                        sugcos = cos / reqty;
                    }
                    if (reqby == "1")
                    {
                        cb_own.Checked = true;
                    }
                    else if (reqby == "2")
                    {
                        cb_other.Checked = true;
                    }
                    else
                    {
                        cb_other.Checked = true;
                        cb_own.Checked = true;
                    }

                    string select = "select * from IM_ItemMaster where ItemPK='" + item + "'";
                    ds1 = da.select_method_wo_parameter(select, "Text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        dr = dt.NewRow();
                        dr[0] = Convert.ToString(ds1.Tables[0].Rows[0]["ItemCode"]);
                        dr[1] = Convert.ToString(ds1.Tables[0].Rows[0]["itemname"]);
                        dr[2] = Convert.ToString(ds1.Tables[0].Rows[0]["ItemUnit"]);
                        if (sugcos.ToString() != "" && sugcos.ToString() != "0")
                            dr[4] = Convert.ToString(sugcos);

                        else
                            dr[4] = "";
                        dr[5] = Convert.ToString(cost);
                        if (cost != "")
                            totalcost = totalcost + Convert.ToDouble(cost);
                        if (rdo_request.Checked == true && cc == "ffa4f9c9")
                        {
                            dr[3] = ReqtQty;
                            if (reqsts == "1")
                                dr[6] = ReqQty;
                            else
                                dr[6] = "0";
                        }
                        else
                            dr[3] = ReqQty;
                        dt.Rows.Add(dr);
                    }
                    if (totalcost != 0)
                    {
                        lblitemTotal.Visible = true;
                        lblitemcostTotal.Visible = true;
                        lblitemcostTotal.Text = totalcost.ToString();

                    }
                    else
                    {
                        lblitemTotal.Visible = false;
                        lblitemcostTotal.Visible = false;

                    }

                }
                if (dt.Rows.Count > 0)
                {

                    SelectdptGrid.DataSource = dt;
                    SelectdptGrid.DataBind();
                    if (rdo_request.Checked == true && cc == "ffa4f9c9")
                        SelectdptGrid.Columns[8].Visible = true;
                    else
                        SelectdptGrid.Columns[8].Visible = false;

                }
            }
            bindgrid_Item_approvalstaff(reqnumb1);
        }
        catch
        {
        }
    }
    public void view2()
    {
        try
        {
            string query = "";
            string activerow = "";
            string dept = "";
            string expt_date = "";
            string req_date = "";
            string item = "";
            string ReqQty = "";
            string loc = "";
            string loc_val = "";
            string venfk_val = "";
            string reqby = "";
            string ven_fk = "";
            if (rdo_approval.Checked == true)
            {
                btn_ser_save.Visible = true;
                btn_reject_ser_save.Visible = true;
                btn_approval.Visible = true; //poo
                btn_reject.Visible = true;   //poo 
            }
            else
            {
                btn_ser_save.Visible = false;
                btn_reject_ser_save.Visible = false;
                btn_approval.Visible = false; //poo
                btn_reject.Visible = false;   //poo 
            }
            activerow = Fpspread2.ActiveSheetView.ActiveRow.ToString();
            string reqnumb = "";
            string req_no = "";
            reqnumb = Convert.ToString(Fpspread2.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
            req_no = d2.GetFunction("select RequestCode from RQ_Requisition where RequestType=2 and RequisitionPK='" + reqnumb + "'");
            TextBox3.Text = reqnumb;
            txt_serreqno.Text = req_no;
            query = "select distinct DeptFK,r.Remarks,ReqQty,ItemFK,RequestBy,SugServiceLoc,SugVendorFK ,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate from RQ_Requisition r,RQ_RequisitionDet d,IM_ItemMaster i where RequestType=2 and RequisitionFK=RequisitionPK and RequestCode='" + req_no + "'";
            ds = d2.select_method_wo_parameter(query, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                dept = ds.Tables[0].Rows[0]["DeptFK"].ToString();
                txt_serdept.Text = getdepartment(dept);
                txt_serremarks.Text = ds.Tables[0].Rows[0]["Remarks"].ToString();
                req_date = ds.Tables[0].Rows[0]["RequestDate"].ToString();
                string[] ay = req_date.Split('/');
                txt_serreqdate.Text = ay[0].ToString() + "/" + ay[1].ToString() + "/" + ay[2].ToString();
                txt_serexpdate.Text = ds.Tables[0].Rows[0]["ReqExpectedDate"].ToString();
                item = ds.Tables[0].Rows[0]["ItemFK"].ToString();
                ReqQty = ds.Tables[0].Rows[0]["ReqQty"].ToString();
                loc = ds.Tables[0].Rows[0]["SugServiceLoc"].ToString();
                ven_fk = ds.Tables[0].Rows[0]["SugVendorFK"].ToString();
                reqby = ds.Tables[0].Rows[0]["RequestBy"].ToString();
                if (reqby == "1")
                {
                    cb_serown.Checked = true;
                }
                else if (reqby == "2")
                {
                    cb_serother.Checked = true;
                }
                else
                {
                    cb_serother.Checked = true;
                    cb_serown.Checked = true;
                }
                if (loc == "0")
                {
                    loc_val = "Indoor";
                }
                else
                {
                    loc_val = "Outdoor";
                }
            }
            string select = "select * from IM_ItemMaster where ItemPK='" + item + "'";
            ds1 = da.select_method_wo_parameter(select, "Text");
            DataTable dt = new DataTable();
            DataRow dr;
            dt.Columns.Add("ItemCode");
            dt.Columns.Add("ItemName");
            dt.Columns.Add("Measure");
            dt.Columns.Add("Quantity");
            if (ds1.Tables[0].Rows.Count > 0)
            {
                for (int j = 0; j < ds1.Tables[0].Rows.Count; j++)
                {
                    dr = dt.NewRow();
                    dr[0] = Convert.ToString(ds1.Tables[0].Rows[j]["ItemCode"]);
                    dr[1] = Convert.ToString(ds1.Tables[0].Rows[j]["itemname"]);
                    dr[2] = Convert.ToString(ds1.Tables[0].Rows[j]["ItemUnit"]);
                    dr[3] = ReqQty;
                    dt.Rows.Add(dr);
                }
            }
            if (dt.Rows.Count > 0)
            {
                Sergrid.DataSource = dt;
                Sergrid.DataBind();
            }
        }
        catch
        {
        }
    }
    public void view3()
    {
        try
        {
            string query = "";
            string activerow = "";
            string meettodept = "";
            string meettostaff = "";
            string req_date = "";
            string dept = "";
            string dept_name = "";
            string staffname = "";
            string time = "";
            if (rdo_approval.Checked == true)
            {
                btn_visit_save.Visible = true;
                btn_visit_reject.Visible = true;
                btn_approval.Visible = true; //poo
                btn_reject.Visible = true;   //poo 
            }
            else
            {
                btn_visit_save.Visible = false;
                btn_visit_reject.Visible = false;
                btn_approval.Visible = false; //poo
                btn_reject.Visible = false;   //poo 
            }
            activerow = Fpspread3.ActiveSheetView.ActiveRow.ToString();
            string reqnumb = "";
            string req_no = "";
            reqnumb = Convert.ToString(Fpspread3.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
            req_no = d2.GetFunction("select RequestCode from RQ_Requisition where RequestType=3 and RequisitionPK='" + reqnumb + "'");
            TextBox4.Text = reqnumb;
            txt_visitorreqno.Text = req_no;
            query = "select r.VendorFK,VendorContactFK,r.MeetToStaff,r.MeetStaffAppNo,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,im.VendorCompName ,v.VenContactName ,v.VenContactDesig,v.VenContactDept,v.VendorMobileNo,v.VendorPhoneNo ,v.VendorEmail,r.MeetToDept ,r.ReqExpectedTime ,r.MeetDeptCode ,Remarks,im.VendorAddress  from RQ_Requisition r,IM_VendorContactMaster v,CO_VendorMaster im where r.VendorFK =im.VendorPK and r.VendorContactFK =v.VendorContactPK and im.VendorPK =v.VendorFK and RequestType=3 and RequestCode='" + req_no + "' ";
            ds = d2.select_method_wo_parameter(query, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                ddl_designation.SelectedItem.Text = ds.Tables[0].Rows[0]["VenContactDesig"].ToString();
                ddl_department.SelectedItem.Text = ds.Tables[0].Rows[0]["VenContactDept"].ToString();
                txt_visitorpurpose.Text = ds.Tables[0].Rows[0]["Remarks"].ToString();
                req_date = ds.Tables[0].Rows[0]["RequestDate"].ToString();
                string[] ay = req_date.Split('/');
                txt_visitorreqdate.Text = ay[0].ToString() + "/" + ay[1].ToString() + "/" + ay[2].ToString();
                txt_visitdate.Text = ds.Tables[0].Rows[0]["ReqExpectedDate"].ToString();
                txt_cname.Text = ds.Tables[0].Rows[0]["VendorCompName"].ToString();
                txt_name.Text = ds.Tables[0].Rows[0]["VenContactName"].ToString();
                txt_visitorph.Text = ds.Tables[0].Rows[0]["VendorPhoneNo"].ToString();
                txt_visitormob.Text = ds.Tables[0].Rows[0]["VendorMobileNo"].ToString();
                txt_visitoremail.Text = ds.Tables[0].Rows[0]["VendorEmail"].ToString();
                txt_address.Text = Convert.ToString(ds.Tables[0].Rows[0]["VendorAddress"]);
                meettodept = ds.Tables[0].Rows[0]["MeetToDept"].ToString();
                meettostaff = ds.Tables[0].Rows[0]["MeetToStaff"].ToString();
                dept = ds.Tables[0].Rows[0]["MeetDeptCode"].ToString();
                staffname = ds.Tables[0].Rows[0]["MeetStaffAppNo"].ToString();
                time = ds.Tables[0].Rows[0]["ReqExpectedTime"].ToString();
                string[] split1 = time.Split(':');
                string spl = (split1[1]);
                string[] split2 = spl.Split(' ');
                ddl_hrs.SelectedItem.Text = (split1[0]);
                ddl_mins.SelectedItem.Text = (split2[0]);
                ddl_ampm.SelectedItem.Text = (split2[1]);
                if (meettodept == "True")//barath 01.04.17
                {
                    cb_dept.Checked = true;
                    div_dept.Visible = true;
                    string[] split = dept.Split(',');
                    if (split.Length == 1)
                    {
                        dept_name = getdepartment(dept);
                        txt_dept_to.Text = dept_name;
                    }
                    else if (split.Length == 2)
                    {
                        txt_dept_to.Text = getdepartment(split[0]);
                        txt_dept_cc.Text = getdepartment(split[1]);
                    }
                    else if (split.Length == 3)
                    {
                        txt_dept_to.Text = getdepartment(split[0]);
                        txt_dept_cc.Text = getdepartment(split[1]);
                        txt_to1.Visible = true;
                        txt_to1.Text = getdepartment(split[2]);
                    }
                    else if (split.Length == 4)
                    {
                        txt_dept_to.Text = getdepartment(split[0]);
                        txt_dept_cc.Text = getdepartment(split[1]);
                        txt_to1.Visible = true;
                        txt_to1.Text = getdepartment(split[2]);
                        txt_cc1.Visible = true;
                        txt_cc1.Text = getdepartment(split[3]);
                    }
                }
                else
                {
                    cb_dept.Checked = false;
                    div_dept.Visible = false;
                }
                if (meettostaff == "True")
                {
                    cb_individual.Checked = true;
                    div_indiv.Visible = true;
                    string[] split = staffname.Split(',');
                    if (split.Length == 1)
                    {
                        staffname = getstaffnameappl_no(staffname);//getstaffname(staffname);
                        txt_indiv.Text = staffname;
                    }
                    else if (split.Length == 2)
                    {
                        txt_indiv.Text = getstaffnameappl_no(split[0]);
                        txt_indiv_cc.Text = getstaffnameappl_no(split[1]);
                    }
                    else if (split.Length == 3)
                    {
                        txt_indiv.Text = getstaffnameappl_no(split[0]);
                        txt_indiv_cc.Text = getstaffnameappl_no(split[1]);
                        txt_indiv1.Visible = true;
                        txt_indiv1.Text = getstaffnameappl_no(split[2]);
                    }
                    else if (split.Length == 4)
                    {
                        txt_indiv.Text = getstaffnameappl_no(split[0]);
                        txt_indiv_cc.Text = getstaffnameappl_no(split[1]);
                        txt_indiv1.Visible = true;
                        txt_indiv1.Text = getstaffnameappl_no(split[2]);
                        txt_cc2.Visible = true;
                        txt_cc2.Text = getstaffnameappl_no(split[3]);
                    }
                }
                else
                {
                    cb_individual.Checked = false;
                    div_indiv.Visible = false;
                }
            }
        }
        catch
        {
        }
    }
    public void view4()
    {
        try
        {
            string query = "";
            string activerow = "";
            string comp = "";
            string sugg = "";
            string req_date = "";
            if (rdo_approval.Checked == true)
            {
                btn_comp_save.Visible = true;
                btn_comp_reject.Visible = true;
                btn_approval.Visible = true; //poo
                btn_reject.Visible = true;   //poo 
            }
            else
            {
                btn_comp_save.Visible = false;
                btn_comp_reject.Visible = false;
                btn_approval.Visible = false; //poo
                btn_reject.Visible = false;   //poo 
            }
            activerow = Fpspread4.ActiveSheetView.ActiveRow.ToString();
            string reqnumb = "";
            string req_no = "";
            reqnumb = Convert.ToString(Fpspread4.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
            req_no = d2.GetFunction("select RequestCode from RQ_Requisition where RequestType=4 and RequisitionPK='" + reqnumb + "'");
            TextBox5.Text = reqnumb;
            txt_compreqno.Text = req_no;
            query = "select ReqComplaints,ReqComplaintSub,ReqSuggestions,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate from  RQ_Requisition where RequestType=4 and RequestCode='" + req_no + "' ";
            ds = d2.select_method_wo_parameter(query, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                req_date = ds.Tables[0].Rows[0]["RequestDate"].ToString();
                string[] ay = req_date.Split('/');
                txt_compreqdate.Text = ay[0].ToString() + "/" + ay[1].ToString() + "/" + ay[2].ToString();
                txt_regards.Text = ds.Tables[0].Rows[0]["ReqComplaintSub"].ToString();
                comp = ds.Tables[0].Rows[0]["ReqComplaints"].ToString();
                sugg = ds.Tables[0].Rows[0]["ReqSuggestions"].ToString();
                ddl_complaints.SelectedItem.Text = gettext(comp);
                ddl_suggestions.SelectedItem.Text = gettext1(sugg);
            }
        }
        catch
        {
        }
    }
    public void view5()
    {
        try
        {
            BindLeave();
            alternateRights();
            txt_reasonchng.Text = "";
            Label5.Text = "";
            string appreason = "";
            string query = "";
            string activerow = "";
            string req_date = "";
            string fromdate = "";
            string todate = "";
            string leave_type = "";
            string halfday = "";
            string changerea = "";
            if (rdo_approval.Checked == true)
            {
                btn_approval.Visible = true;
                btn_reject.Visible = true;

            }
            else
            {
                Btn_Apply_Leave.Visible = false;
                Btn_Cancel.Visible = false;
                btn_approval.Visible = false; //poo
                btn_reject.Visible = false;   //poo 
            }
            activerow = Fpspread5.ActiveSheetView.ActiveRow.ToString();
            string reqnumb = "";
            string req_no = "";
            string appstage = "";
            string allreason = "";
            string approvalstaffname = "";
            reqnumb = Convert.ToString(Fpspread5.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
            req_no = d2.GetFunction("select RequestCode from RQ_Requisition where RequestType=5 and RequisitionPK='" + reqnumb + "'");
            TextBox7.Text = reqnumb;
            txt_rqstn_leave.Text = req_no;
            query = "select * from RQ_ReqApprovalDetails where ReqFK='" + reqnumb + "' order by ReqApproveStaffStage,ApproveStaffPriority";
            ds1 = d2.select_method_wo_parameter(query, "Text");
            if (ds1.Tables[0].Rows.Count > 0)
            {
                for (int g = 0; g < ds1.Tables[0].Rows.Count; g++)
                {
                    approvalstaffname = d2.GetFunction("select appl_name+'-'+dept_name+'-'+desig_name from staff_appl_master where appl_id='" + Convert.ToString(ds1.Tables[0].Rows[g]["ReqApproveStaffappNo"]) + "'");
                    if (approvalstaffname == "0")
                    {
                        approvalstaffname = "";
                    }
                    appreason = Convert.ToString(ds1.Tables[0].Rows[g]["ApproveReason"]);
                    appstage = Convert.ToString(ds1.Tables[0].Rows[g]["ReqApproveStaffStage"]);
                    if (!string.IsNullOrEmpty(appreason) && appreason != "0")
                    {
                        if (allreason == "")
                        {
                            allreason = appreason + "(" + approvalstaffname + "-Stage(" + appstage + "))";
                        }
                        else
                        {
                            allreason = allreason + "," + appreason + "(" + approvalstaffname + "-Stage(" + appstage + "))";
                        }
                    }
                }
            }
            //////
            string inchargeStfCode = string.Empty;
            query = "SELECT ReqAppNo,ReqAppStaffAppNo,LeaveMasterFK,CASE WHEN RequestType = 5 THEN 'Leave Request' END RequestType,RequestCode,ReqAppStatus,leaveChangeReason,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when  LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession, Staff_Code,Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE GateReqReason = T.MasterCode) GateReqReason,HodAlterInchargeAppNo FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.LeaveMasterFK = LeaveMasterPK  and RequestType=5 and RequestCode='" + req_no + "' and r.RequisitionPK='" + reqnumb + "'";
            ds = d2.select_method_wo_parameter(query, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                string statuss = Convert.ToString(ds.Tables[0].Rows[0]["ReqAppStatus"]);
                if (allreason != "")
                {
                    Label5.Text = allreason;
                }
                if (rdo_waiting.Checked == true || rdo_request.Checked == true || rdo_reject.Checked == true)
                {
                    txt_reasonchng.Enabled = false;
                }
                else
                {
                    txt_reasonchng.Enabled = true;
                }
                if (statuss == "0")
                {
                    txt_reasonchng.Visible = true;
                    lbl_chngreason.Visible = true;
                }
                if (rdo_waiting.Checked == true || rdo_request.Checked == true || rdo_reject.Checked == true)
                {
                    txt_reasonchng.Visible = false;
                    lbl_chngreason.Visible = false;
                }
                if (allreason == "")
                {
                    Label6.Visible = false;
                }
                else
                {
                    Label6.Visible = true;
                }
                req_date = ds.Tables[0].Rows[0]["RequestDate"].ToString();
                string[] ay = req_date.Split('/');
                txt_time_rqstn_leave.Text = ay[0].ToString() + "/" + ay[1].ToString() + "/" + ay[2].ToString();
                txt_applydate.Text = ay[0].ToString() + "/" + ay[1].ToString() + "/" + ay[2].ToString();
                string staffcode = "select staff_name,staff_code from staff_appl_master sm ,staffmaster s where sm.appl_no=s.appl_no and sm.appl_id='" + ds.Tables[0].Rows[0]["ReqAppNo"].ToString() + "'";
                ds6 = d2.select_method_wo_parameter(staffcode, "text");
                if (ds6.Tables[0].Rows.Count > 0)
                {
                    txt_staff_code.Text = ds6.Tables[0].Rows[0]["Staff_Code"].ToString();
                    txt_staff_name.Text = ds6.Tables[0].Rows[0]["Staff_Name"].ToString();
                }
                string code = ds.Tables[0].Rows[0]["Staff_Code"].ToString();
                // ddl_leave_type.SelectedItem.Text = ds.Tables[0].Rows[0]["Staff_Name"].ToString();
                fromdate = ds.Tables[0].Rows[0]["LeaveFrom"].ToString();
                string[] ay1 = fromdate.Split('/');
                txt_frm.Text = ay1[0].ToString() + "/" + ay1[1].ToString() + "/" + ay1[2].ToString();
                todate = ds.Tables[0].Rows[0]["LeaveTo"].ToString();
                string[] ay2 = todate.Split('/');
                txt_to.Text = ay2[0].ToString() + "/" + ay2[1].ToString() + "/" + ay2[2].ToString();
                string reson = ds.Tables[0].Rows[0]["GateReqReason"].ToString();
                if (reson != "")
                {
                    //  ddl_leavereason.SelectedItem.Text = reson;
                    txtleavereason.Text = reson;
                }
                else
                {
                    // ddl_leavereason.SelectedItem.Text = "Select";
                    txtleavereason.Text = "";
                }
                leave_type = ds.Tables[0].Rows[0]["LeaveMasterFK"].ToString();
                // ddl_leave_type.SelectedItem.Value = leave_type;
                ddl_leave_type.SelectedIndex = ddl_leave_type.Items.IndexOf(ddl_leave_type.Items.FindByValue(leave_type));
                halfday = ds.Tables[0].Rows[0]["Leave"].ToString();
                ddl_sess.SelectedItem.Text = ds.Tables[0].Rows[0]["LeaveSession"].ToString();
                if (halfday == "Full Day")
                {
                    rdlist.Checked = true;
                }
                else
                {
                    rdlist1.Checked = true;
                    lbl_sess.Visible = true;
                    ddl_sess.Visible = true;
                }
                string dept = d2.GetFunction("select h.dept_name from staffmaster s ,hrdept_master h,desig_master d,stafftrans t where s.staff_code =t.staff_code and t.dept_code =h.dept_code and t.desig_code =d.desig_code and latestrec ='1' and s.staff_code in ('" + code + "')");
                txt_dep.Text = dept;
                string des = d2.GetFunction("select d.desig_name from staffmaster s ,hrdept_master h,desig_master d,stafftrans t where s.staff_code =t.staff_code and t.dept_code =h.dept_code and t.desig_code =d.desig_code and latestrec ='1' and s.staff_code in ('" + code + "')");
                txt_des.Text = des;
                imagestaff.ImageUrl = "~/Handler/staffphoto.ashx?Staff_Code=" + txt_staff_code.Text;
                string photo = d2.GetFunction("select photo from staffphoto where staff_code='" + txt_staff_code.Text + "'");
                if (photo == "0")
                {
                    imagestaff.ImageUrl = "image/Gender Neutral User Filled-100(1).png";
                }
                inchargeStfCode = Convert.ToString(ds.Tables[0].Rows[0]["HodAlterInchargeAppNo"]);
                if (inchargeStfCode != "0") //alter hod staff incharge name
                    getAlterStaff(inchargeStfCode);
                else
                    divaltstf.Visible = false;
            }
            if (rdo_request.Checked == true)
            {
                btnpartcancel.Visible = true;
            }
            else
            {
                btnpartcancel.Visible = false;
            }

            bindgrid_approvalstaff(reqnumb);
            bindgrid2();
            fromtodate();
            BindGridview();
            //alternate schedule changed based on settings
            if (alterrigths == "1")
                degbatchsem();
            else if (alterrigths == "2")
                afteralterSchedule();
            // degbatchsem();
            //BindGridview();
        }
        catch
        {
        }
    }
    protected void getAlterStaff(string staffappno)
    {
        string staffName = d2.GetFunction("select staff_name from staff_appl_master sm ,staffmaster s where sm.appl_no=s.appl_no and sm.appl_id='" + staffappno + "'");//staff_code
        if (staffName != "0")
        {
            lblaltstfcode.Text = staffName;
            divaltstf.Visible = true;
        }
        else
            divaltstf.Visible = false;
    }
    protected void OnRowDataBound_gv1(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            int cellvalue = e.Row.Cells.Count;
            string datecheck;
            string code = "";

            string deptCode = string.Empty;
            string holidate = "";
            var dateholy = (TextBox)e.Row.FindControl("txtdate");
            datecheck = Convert.ToString(dateholy.Text);
            string[] ay = datecheck.Split('/');
            DateTime dt = new DateTime();
            dt = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
            string type = d2.GetFunction("select LinkValue  from InsSettings where LinkName like 'Staff Holiday By Staff Type%' and college_code='" + collegecode1 + "'");
            if (type == "0")
            {
                code = d2.GetFunction("select category_code from stafftrans where staff_code='" + txt_staff_code.Text + "'");
                deptCode = d2.GetFunction("select dept_code from stafftrans where staff_code='" + txt_staff_code.Text + "'");//delsi1806
                holidate = d2.GetFunction("select holiday_date from holidayStaff where category_code ='" + code + "' and holiday_date='" + dt.ToString("MM/dd/yyyy") + "' and college_code ='" + collegecode1 + "'and dept_code='" + deptCode + "'");
                string sunday = dt.ToString("dddd");
                if (sunday == "Sunday" || holidate != "0")
                {
                    e.Row.BackColor = Color.Aqua;
                    if (h == "")
                    {
                        h = dateholy.Text;
                    }
                    else
                    {
                        h = h + "," + dateholy.Text;
                    }
                    lbl_holidayalert.Visible = true;
                    lbl_holidayalert.Text = h + "-Holiday";
                    var chkmrng = (CheckBox)e.Row.FindControl("chk_mrng");
                    chkmrng.Enabled = false;
                    chkmrng.Checked = false;
                    var chkeve = (CheckBox)e.Row.FindControl("chk_evng");
                    chkeve.Enabled = false;
                    chkeve.Checked = false;
                }
                else
                {
                    var chkmrng = (CheckBox)e.Row.FindControl("chk_mrng");
                    chkmrng.Enabled = true;
                    var chkeve = (CheckBox)e.Row.FindControl("chk_evng");
                    chkeve.Enabled = true;
                    lbl_holidayalert.Visible = false;
                }
            }
            else
            {
                code = d2.GetFunction("select stftype from stafftrans where staff_code='" + txt_staff_code.Text + "'");
                deptCode = deptCode = d2.GetFunction("select dept_code from stafftrans where staff_code='" + txt_staff_code.Text + "'");//delsi1806
                holidate = d2.GetFunction("select holidayStaff from holidayStaff where stftype ='" + code + "' and holiday_date='" + dt.ToString("MM/dd/yyyy") + "' and college_code ='" + collegecode1 + "' and dept_code='" + deptCode + "'");
                string sunday = dt.ToString("dddd");
                if (sunday == "Sunday" || holidate != "0")
                {
                    e.Row.BackColor = Color.Aqua;
                    lbl_holidayalert.Visible = true;
                    lbl_holidayalert.Text = dateholy.Text + "-Holiday";
                    var chkmrng = (CheckBox)e.Row.FindControl("chk_mrng");
                    chkmrng.Enabled = false;
                    chkmrng.Checked = false;
                    var chkeve = (CheckBox)e.Row.FindControl("chk_evng");
                    chkeve.Enabled = false;
                    chkeve.Checked = false;
                }
                else
                {
                    var chkmrng = (CheckBox)e.Row.FindControl("chk_mrng");
                    chkmrng.Enabled = true;
                    var chkeve = (CheckBox)e.Row.FindControl("chk_evng");
                    lbl_holidayalert.Visible = false;
                    chkeve.Enabled = true;
                }
            }
        }
    }
    protected void gridViewstaffleave_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        int t = 2;
        int c = 0;
        leavetypecountt();
        c = Convert.ToInt32(leavetypecount);
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            e.Row.Cells[1].HorizontalAlign = HorizontalAlign.Left;
            // e.Row.Cells[3].Width = 50;
            if (c == 1)
            {
                e.Row.Cells[2].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "2$" + e.Row.RowIndex);
            }
            else if (c == 2)
            {
                e.Row.Cells[2].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "2$" + e.Row.RowIndex);
                e.Row.Cells[3].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "3$" + e.Row.RowIndex);
            }
            else if (c == 3)
            {
                e.Row.Cells[2].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "2$" + e.Row.RowIndex);
                e.Row.Cells[3].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "3$" + e.Row.RowIndex);
                e.Row.Cells[4].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "4$" + e.Row.RowIndex);
            }
            else
            {
                e.Row.Cells[2].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "2$" + e.Row.RowIndex);
                if (c + 2 > t)
                {
                    e.Row.Cells[3].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "3$" + e.Row.RowIndex);
                }
                t = 3 + 1;
                if (c + 2 > t)
                {
                    e.Row.Cells[4].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "4$" + e.Row.RowIndex);
                }
                t = 4 + 1;
                if (c + 2 > t)
                {
                    e.Row.Cells[5].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "5$" + e.Row.RowIndex);
                }
                t = 5 + 1;
                if (c + 2 > t)
                {
                    e.Row.Cells[6].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "6$" + e.Row.RowIndex);
                }
                t = 6 + 1;
                if (c + 2 > t)
                {
                    e.Row.Cells[7].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "7$" + e.Row.RowIndex);
                }
                t = 7 + 1;
                if (c + 2 > t)
                {
                    e.Row.Cells[8].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "8$" + e.Row.RowIndex);
                }
                t = 8 + 1;
                if (c + 2 > t)
                {
                    e.Row.Cells[9].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "9$" + e.Row.RowIndex);
                }
                t = 9 + 1;
                if (c + 2 > t)
                {
                    e.Row.Cells[10].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "10$" + e.Row.RowIndex);
                }
                t = 10 + 1;
                if (c + 2 > t)
                {
                    e.Row.Cells[11].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "11$" + e.Row.RowIndex);
                }
                t = 11 + 1;
                if (c + 2 > t)
                {
                    e.Row.Cells[12].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "12$" + e.Row.RowIndex);
                }
                t = 12 + 1;
                if (c + 2 > t)
                {
                    e.Row.Cells[13].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "13$" + e.Row.RowIndex);
                }
                t = 13 + 1;
                if (c + 2 > t)
                {
                    e.Row.Cells[15].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "14$" + e.Row.RowIndex);
                }
                t = 14 + 1;
                if (c + 2 > t)
                {
                    e.Row.Cells[16].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "15$" + e.Row.RowIndex);
                }
                t = 15 + 1;
                if (c + 2 > t)
                {
                    e.Row.Cells[17].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "16$" + e.Row.RowIndex);
                }
                t = 16 + 1;
                if (c + 2 > t)
                {
                    e.Row.Cells[18].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "17$" + e.Row.RowIndex);
                }
                t = 17 + 1;
                if (c + 2 > t)
                {
                    e.Row.Cells[19].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "18$" + e.Row.RowIndex);
                }
                t = 18 + 1;
                if (c + 2 > t)
                {
                    e.Row.Cells[20].Attributes["onclick"] = Page.ClientScript.GetPostBackEventReference(gridViewstaffleave, "19$" + e.Row.RowIndex);
                }
            }
        }
    }
    protected void gridViewstaffleave_databound(object sender, EventArgs e)
    {
        try
        {
            int ss = 0;
            for (int i = gridViewstaffleave.Rows.Count - 1; i > 0; i--)
            {
                GridViewRow row1 = gridViewstaffleave.Rows[i];
                for (int j = 0; j <= 5; j++)
                {
                    string lnlname = gridViewstaffleave.Rows[i].Cells[1].Text;
                    if (lnlname == "Total")
                    {
                        row1.Cells[1].ColumnSpan = 2;
                        row1.Cells[0].Visible = false;
                    }
                }
                string type = "select leavetype from individual_Leave_type where staff_code='" + txt_staff_code.Text + "'";
                ds = d2.select_method_wo_parameter(type, "text");
                int col_cnt = 0;
                if (ds.Tables[0].Rows.Count > 0)
                {
                    string[] spl_type = ds2.Tables[0].Rows[0]["leavetype"].ToString().Split(new Char[] { '\\' });
                    for (int l = 0; spl_type.GetUpperBound(0) >= l; l++)
                    {
                        string[] split_leave = spl_type[l].Split(';');
                        if (spl_type[0] != "")
                        {
                            col_cnt++;
                        }
                    }
                }
                int ccc = 0;
                ccc = col_cnt;
                for (int j = 1; j <= ccc; j++)
                {
                    string lnlname = gridViewstaffleave.Rows[i].Cells[j].Text;
                    string[] spl = lnlname.Split('/');
                    if (spl.Length == 2)
                    {
                        string f = spl[0];
                        string l = spl[1];
                        int div = Convert.ToInt32(l) / 2;
                        if (f != "0")
                        {
                            if (f != l)
                            {
                                gridViewstaffleave.Rows[i].Cells[j].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                                string con = Convert.ToString(i) + "-" + Convert.ToString(j);
                                partl_check = 1;
                                if (rowgrid == "")
                                {
                                    rowgrid = con;
                                }
                                else
                                {
                                    rowgrid = rowgrid + "," + con;
                                }
                            }
                        }
                        if (l != "0")
                        {
                            if (f == l)
                            {
                                gridViewstaffleave.Rows[i].Cells[j].BackColor = Color.Tomato;
                                string header = gridViewstaffleave.HeaderRow.Cells[j].Text;
                                full_check = 1;
                                string con = Convert.ToString(i) + "-" + Convert.ToString(j);
                                if (colgrind == "")
                                {
                                    colgrind = con;
                                }
                                else
                                {
                                    colgrind = colgrind + "," + con;
                                }
                            }
                        }
                    }
                    string chklnlname = gridViewstaffleave.Rows[i].Cells[j].Text;
                    if (chklnlname == "Total")
                    {
                        ss = i;
                    }
                    gridViewstaffleave.Rows[ss].Cells[j].Font.Bold = true;
                }
            }
        }
        catch
        {
        }
    }
    public void bindgrid_approvalstaff(string reqnumb)
    {
        requeststaffapprovalnumber = reqnumb;
        string rq_no = "";
        string applid = "";
        leaverequestsetting();
        //if (requestpermissioncheck == "2")
        //{
        applid = d2.GetFunction("select ReqStaffAppNo from RQ_Requisition where RequestType=5 and RequisitionPK='" + reqnumb + "'");
        //}
        // applid = d2.GetFunction("select ReqAppNo from RQ_Requisition where RequestType=5 and RequisitionPK='" + rq_no + "'");
        string query = "select * from RQ_RequestHierarchy where ReqStaffAppNo='" + applid + "' and RequestType=5 order by ReqStaffAppNo,ReqApproveStage,ReqAppPriority";
        ds = d2.select_method_wo_parameter(query, "Text");
        DataTable dt = new DataTable();
        dt.Columns.Add("Dummy");
        dt.Columns.Add("Dummy1");
        dt.Columns.Add("Dummy2");
        dt.Columns.Add("Dummy3");
        dt.Columns.Add("Dummy0");
        DataRow dr;
        chkrelived = 0;
        if (ds.Tables[0].Rows.Count > 0)
        {
            chkrelived = 0;
            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                string staffcode = d2.GetFunction("select staff_code from staffmaster s,staff_appl_master sm where s.appl_no=sm.appl_no and s.resign=0 and s.settled=0  and sm.appl_id='" + Convert.ToString(ds.Tables[0].Rows[i]["ReqAppStaffAppNo"]) + "'");
                if (staffcode == "0")
                {
                    imgdiv2.Visible = true;
                    lbl_alert.Text = "The Approval Staff Was Relived,Change The Hierarchy Setting";
                    chkrelived = 1;
                }
                else
                {
                    chkrelived = 0;
                    string staffname = d2.GetFunction("select appl_name from staff_appl_master where appl_id='" + Convert.ToString(ds.Tables[0].Rows[i]["ReqAppStaffAppNo"]) + "'");
                    string dept = d2.GetFunction("select s.dept_name as dept from staff_appl_master s,staffmaster m,stafftrans t,hrdept_master h,desig_master d where s.appl_no = m.appl_no and m.staff_code = t.staff_code and t.dept_code = h.dept_code and t.desig_code = d.desig_code and m.college_code = 13 and t.latestrec = 1 and m.resign = 0 and settled = 0 and s.appl_id='" + Convert.ToString(ds.Tables[0].Rows[i]["ReqAppStaffAppNo"]) + "'");
                    string desg = d2.GetFunction("select d.desig_name as design from staff_appl_master s,staffmaster m,stafftrans t,hrdept_master h,desig_master d where s.appl_no = m.appl_no and m.staff_code = t.staff_code and t.dept_code = h.dept_code and t.desig_code = d.desig_code and m.college_code = 13 and t.latestrec = 1 and m.resign = 0 and settled = 0 and s.appl_id='" + Convert.ToString(ds.Tables[0].Rows[i]["ReqAppStaffAppNo"]) + "'");
                    string stagecount = Convert.ToString(ds.Tables[0].Rows[i]["ReqApproveStage"]);
                    pri_txt = Convert.ToString(ds.Tables[0].Rows[i]["ReqAppPriority"]);
                    abc();
                    string stage = stagecount + "-" + con_txt;
                    dr = dt.NewRow();
                    dr[0] = staffname;
                    dr[1] = dept;
                    dr[2] = desg;
                    dr[3] = stage;
                    dr[4] = staffcode;
                    dt.Rows.Add(dr);
                }
            }
        }
        if (dt.Rows.Count > 0)
        {
            grid_approvalstaff.DataSource = dt;
            grid_approvalstaff.DataBind();
            sp_appstaf.Visible = true;
        }
    }
    protected void OnRowDataBound_grid_approvalstaff(object sender, GridViewRowEventArgs e)
    {
        string stafname = "";
        string approvestage = "";
        string qur = "";
        string appstaffnum = "";
        color_check = false;
        string staffapplid = d2.GetFunction("select sm.appl_id from staff_appl_master sm,staffmaster s where sm.appl_no=s.appl_no and staff_code='" + txt_staff_code.Text + "'");
        staffapplid = d2.GetFunction("select ReqStaffAppNo from RQ_Requisition where RequestType=5 and RequisitionPK='" + requeststaffapprovalnumber + "'");
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            var staffname = (Label)e.Row.FindControl("lblname");
            stafname = Convert.ToString(staffname.Text);
            string name = d2.GetFunction("select staff_name from staffmaster where staff_code='" + staffcodesession + "'");
            approvestage = d2.GetFunction("select ReqApproveStage from RQ_Requisition where RequestType=5  and RequisitionPK='" + TextBox7.Text + "'");
            //and ISNULL(ReqAppStatus,'0')=0
            qur = "select distinct h.ReqAppStaffAppNo  from RQ_RequestHierarchy h,RQ_Requisition r where h.RequestType=5 and h.ReqStaffAppNo='" + staffapplid + "' and r.ReqStaffAppNo=h.ReqStaffAppNo and h.RequestType=r.RequestType and h.ReqApproveStage>'" + approvestage + "'";
            ds = d2.select_method_wo_parameter(qur, "text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    appstaffnum = d2.GetFunction("select appl_name  from staff_appl_master  where  appl_id='" + Convert.ToString(ds.Tables[0].Rows[i]["ReqAppStaffAppNo"]) + "'");
                    if (appstaffnum == name)
                    {
                        e.Row.BackColor = Color.LightPink;
                        color_check = true;
                    }
                }
            }
            qur = "select distinct h.ReqAppStaffAppNo  from RQ_RequestHierarchy h,RQ_Requisition r where h.RequestType=5 and h.ReqStaffAppNo='" + staffapplid + "' and r.ReqStaffAppNo=h.ReqStaffAppNo and h.RequestType=r.RequestType and h.ReqApproveStage<='" + approvestage + "'";
            ds1 = d2.select_method_wo_parameter(qur, "text");
            //approved
            if (ds1.Tables[0].Rows.Count > 0)
            {
                for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                {
                    appstaffnum = d2.GetFunction("select appl_name  from staff_appl_master  where  appl_id='" + Convert.ToString(ds1.Tables[0].Rows[i]["ReqAppStaffAppNo"]) + "'");
                    if (appstaffnum == stafname)
                    {
                        e.Row.BackColor = Color.MediumPurple;
                        color_check = true;
                    }
                }
            }
            if (stafname == name)
            {
                // current login
                e.Row.BackColor = Color.Aqua;
                color_check = true;
            }
            else
            {
                if (color_check == false)
                {
                    string q = "select distinct r.ReqApproveStage from RQ_RequestHierarchy h,RQ_Requisition r where h.RequestType=5 and h.ReqStaffAppNo='" + staffapplid + "' and r.ReqStaffAppNo=h.ReqStaffAppNo and h.RequestType=r.RequestType";
                    ds1.Clear();
                    ds1 = d2.select_method_wo_parameter(q, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                        {
                            string appstageh = d2.GetFunction("select MAX(ReqApproveStage) from RQ_RequestHierarchy where RequestType=5 and ReqStaffAppNo='" + staffapplid + "'");
                            string stgr = Convert.ToString(ds1.Tables[0].Rows[i]["ReqApproveStage"]);
                            if (Convert.ToInt32(stgr) <= Convert.ToInt32(appstageh))
                            {
                                e.Row.BackColor = Color.LightPink;
                            }
                            else
                            {
                                e.Row.BackColor = Color.MediumPurple;
                            }
                        }
                    }
                }
            }
        }
    }
    public void abc()
    {
        if (pri_txt == "1")
        {
            con_txt = "A";
        }
        if (pri_txt == "2")
        {
            con_txt = "B";
        }
        if (pri_txt == "3")
        {
            con_txt = "C";
        }
        if (pri_txt == "4")
        {
            con_txt = "D";
        }
        if (pri_txt == "5")
        {
            con_txt = "E";
        }
        if (pri_txt == "6")
        {
            con_txt = "F";
        }
        if (pri_txt == "7")
        {
            con_txt = "G";
        }
        if (pri_txt == "8")
        {
            con_txt = "H";
        }
        if (pri_txt == "9")
        {
            con_txt = "I";
        }
        if (pri_txt == "10")
        {
            con_txt = "J";
        }
        if (pri_txt == "11")
        {
            con_txt = "K";
        }
        if (pri_txt == "12")
        {
            con_txt = "L";
        }
        if (pri_txt == "13")
        {
            con_txt = "M";
        }
        if (pri_txt == "14")
        {
            con_txt = "N";
        }
        if (pri_txt == "15")
        {
            con_txt = "O";
        }
        if (pri_txt == "16")
        {
            con_txt = "P";
        }
        if (pri_txt == "17")
        {
            con_txt = "Q";
        }
        if (pri_txt == "18")
        {
            con_txt = "R";
        }
        if (pri_txt == "19")
        {
            con_txt = "S";
        }
        if (pri_txt == "20")
        {
            con_txt = "T";
        }
        if (pri_txt == "21")
        {
            con_txt = "U";
        }
        if (pri_txt == "22")
        {
            con_txt = "V";
        }
        if (pri_txt == "23")
        {
            con_txt = "W";
        }
        if (pri_txt == "24")
        {
            con_txt = "X";
        }
        if (pri_txt == "25")
        {
            con_txt = "Y";
        }
        if (pri_txt == "26")
        {
            con_txt = "Z";
        }
    }
    public void view6()
    {
        try
        {
            div_gate_reqstn.Visible = true;
            paneladd.Visible = true;
            // bindgrid();
            if (rdo_approval.Checked == true)
            {
                btnsave.Visible = true;
                Btnedit.Visible = true;
                btnReject.Visible = true;
                btn_approval.Visible = true; //poo
                btn_reject.Visible = true;   //poo 
            }
            else
            {
                btnsave.Visible = false;
                Btnedit.Visible = false;
                btnReject.Visible = false;
                btn_approval.Visible = false; //poo
                btn_reject.Visible = false;   //poo 
            }
            string activerow = "";
            string req_date = "";
            string exitdate = "";
            string entrydate = "";
            string exittime = "";
            string entrytime = "";
            string Stud_Name = "";
            string rollno = "";
            string query = "";
            string Staff_Code = "";
            activerow = Fpspread6.ActiveSheetView.ActiveRow.ToString();
            //string req_no = Fpspread6.Sheets[0].Cells[Convert.ToInt32(activerow), 3].Text;
            string req_no = Fpspread6.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Note;//magesh 2.7.18
            string reqnumb = Convert.ToString(Fpspread6.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);


            txt_reqtn_gate.Text = req_no;
            TextBox1.Text = reqnumb;
            string MEMTYPE = d2.GetFunction("SELECT MemType FROM RQ_Requisition WHERE RequestType=6 AND RequisitionPK='" + reqnumb + "'");
            if (MEMTYPE == "1")
            {
                div_gatestudview.Visible = true;
                div_gatestaffview.Visible = false;
                query = "SELECT CASE WHEN RequestType = 6 THEN 'Gate Pass' END RequestType,RequestCode,(Select MasterValue FROM CO_MasterValues T WHERE R.GateReqReason = T.MasterCode) GateReqReason,ReqStaffAppNo,CONVERT(VARCHAR(11),GateReqExitDate,103) as GateReqExitDate,GateReqExitTime,CONVERT(VARCHAR(11),GateReqEntryDate,103) as GateReqEntryDate,GateReqEntryTime,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.RequestBy = T.TextCode) RequestBy,(Select TextVal FROM TextValTable T WHERE R.RequestMode = T.TextCode) RequestMode,Roll_No,Stud_Name,case when MemType=2 then  'Staff' when MemType =1 then 'Stuedent' end as memtype FROM RQ_Requisition R,Registration S    WHERE R.ReqAppNo = S.App_No  and  RequestType=6 and RequestCode='" + req_no + "' and RequisitionPK='" + reqnumb + "'";
            }
            else
            {
                div_gatestudview.Visible = false;
                div_gatestaffview.Visible = true;
                query = "SELECT distinct CASE WHEN RequestType = 6 THEN 'Gate Pass' END RequestType,RequestCode,(Select MasterValue FROM CO_MasterValues T WHERE R.GateReqReason = T.MasterCode) GateReqReason,ReqStaffAppNo,CONVERT(VARCHAR(11),GateReqExitDate,103) as GateReqExitDate,GateReqExitTime,CONVERT(VARCHAR(11),GateReqEntryDate,103) as GateReqEntryDate,GateReqEntryTime,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.RequestBy = T.TextCode) RequestBy,(Select TextVal FROM TextValTable T WHERE R.RequestMode = T.TextCode) RequestMode,case when MemType=2 then  'Staff' when MemType =1 then 'Stuedent' end as memtype,sm.appl_name,s.Staff_Code FROM RQ_Requisition R, staff_appl_master sm,staffmaster s   WHERE R.ReqAppNo = sm.appl_id  and MemType=2 and RequestType=6 and sm.appl_no=s.appl_no and RequestCode='" + req_no + "' and RequisitionPK='" + reqnumb + "'";
            }
            ds = d2.select_method_wo_parameter(query, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                req_date = ds.Tables[0].Rows[0]["RequestDate"].ToString();
                exitdate = ds.Tables[0].Rows[0]["GateReqExitDate"].ToString();
                entrydate = ds.Tables[0].Rows[0]["GateReqEntryDate"].ToString();
                string[] ay = req_date.Split('/');
                string[] ay1 = exitdate.Split('/');
                string[] ay2 = entrydate.Split('/');
                txt_reqtn_gate_date.Text = ay[0].ToString() + "/" + ay[1].ToString() + "/" + ay[2].ToString();
                txt_reqtn_gate_date.Enabled = false;
                txt_appldatereq.Text = ay[0].ToString() + "/" + ay[1].ToString() + "/" + ay[2].ToString();
                txt_appldatereq.Enabled = false;
                txtapply.Text = ay[0].ToString() + "/" + ay[1].ToString() + "/" + ay[2].ToString();
                txtapply.Enabled = false;
                txtfromdate.Text = ay1[0].ToString() + "/" + ay1[1].ToString() + "/" + ay1[2].ToString();
                txtfromdate.Enabled = false;
                txttodate.Text = ay2[0].ToString() + "/" + ay2[1].ToString() + "/" + ay2[2].ToString();
                txttodate.Enabled = false;
                ddlgatepass.SelectedItem.Text = ds.Tables[0].Rows[0]["GateReqReason"].ToString();
                ddlgatepass.Enabled = false;
                ////if (gatepass_staffdept == "2")
                ////{
                ddlrequest.SelectedItem.Text = "Self";
                ddlrequestmode.Visible = false;
                lblrequestmode.Visible = false;
                txtissueper.Visible = false;
                lblissueperson.Visible = false;
                btnstaff.Visible = false;
                ////}
                ////else
                ////{
                //    ddlrequest.SelectedItem.Text = ds.Tables[0].Rows[0]["RequestBy"].ToString();
                //}
                ddlrequestmode.SelectedItem.Text = ds.Tables[0].Rows[0]["RequestMode"].ToString();
                ddlrequestmode.Enabled = false;
                // txtissueper.Text = ds.Tables[0].Rows[0]["Staff_Name"].ToString();
                txtissueper.Enabled = false;
                exittime = ds.Tables[0].Rows[0]["GateReqExitTime"].ToString();
                entrytime = ds.Tables[0].Rows[0]["GateReqEntryTime"].ToString();
                if (MEMTYPE == "1")
                {
                    Stud_Name = ds.Tables[0].Rows[0]["Stud_Name"].ToString();
                    rollno = ds.Tables[0].Rows[0]["Roll_No"].ToString();
                }
                else
                {
                    Staff_Code = ds.Tables[0].Rows[0]["Staff_Code"].ToString();
                }
                string[] split1 = exittime.Split(':');
                string spl = (split1[1]);
                //string[] split2 = spl.Split(' ');              
                ddlhour.SelectedItem.Text = (split1[0]);
                ddlmin.SelectedItem.Text = (split1[1]);
                ddlsession.SelectedItem.Text = (split1[2]);
                ddlhour.Enabled = false;
                ddlmin.Enabled = false;
                ddlsession.Enabled = false;
                string[] split3 = entrytime.Split(':');
                string spl1 = (split3[1]);
                // string[] split4 = spl1.Split(' ');
                ddlendhour.SelectedItem.Text = (split3[0]);
                ddlendmin.SelectedItem.Text = (split3[1]);
                ddlenssession.SelectedItem.Text = (split3[2]);
                ddlendhour.Enabled = false;
                ddlendmin.Enabled = false;
                ddlenssession.Enabled = false;
                if (MEMTYPE == "1")
                {
                    image8.ImageUrl = "Handler/Handler4.ashx?rollno=" + rollno;
                }
                else
                {
                    image9.ImageUrl = "~/Handler/staffphoto.ashx?Staff_Code=" + Staff_Code;
                }
                ddlrequest.Enabled = false;
            }
            string select = "";
            if (MEMTYPE == "1")
            {
                string stu_type = d2.GetFunction("select Stud_Type  from Registration where Roll_No = '" + rollno + "'");
                if (stu_type == "hostler" || stu_type == "Hostler" || stu_type == "HOSTLER")
                {
                    select = "select distinct B.Building_Name, rm.Room_Name,rm.Room_type, f.Floor_Name, Sections,r.Current_Semester,dt.Dept_Name,c.Course_Name,r.Batch_Year,r.Roll_No,r.Reg_No,r.stud_name,r.Stud_Type,hd.HostelName,hd.HostelMasterPK,r.Batch_Year,(c.Course_Name +'-'+dt.Dept_Name+'-'+CONVERT(varchar(10), r.Current_Semester)+'-'+Sections) as Degree  from HT_HostelRegistration hs,Registration r,HM_HostelMaster hd,Degree d,Department dt,Course c ,Floor_Master f,Room_Detail rm ,Building_Master B where d.Degree_Code =r.degree_code and d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and hd.HostelMasterPK=hs.HostelMasterFK and hs.APP_No=r.App_No  and r.Roll_No = '" + rollno + "' and f.Floorpk=hs.FloorFK and rm.RoomPk=hs.RoomFK and hs.BuildingFK=B.Code";
                }
                else
                {

                    select = "select  Sections,r.Current_Semester,dt.Dept_Name,c.Course_Name,r.Batch_Year,r.Roll_No,r.Reg_No,r.stud_name,r.Stud_Type,r.Batch_Year,(c.Course_Name +'-'+dt.Dept_Name+'-'+CONVERT(varchar(10), r.Current_Semester)+'-'+Sections) as Degree  from Registration r,Degree d,Department dt,Course c  where d.Degree_Code =r.degree_code and d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id  and r.Roll_No = '" + rollno + "'";
                }
                ds1 = da.select_method_wo_parameter(select, "Text");
                if (ds1.Tables[0].Rows.Count > 0)
                {
                    txt_gatebatch.Text = Convert.ToString(ds1.Tables[0].Rows[0]["Batch_Year"]);
                    txt_degreq.Text = Convert.ToString(ds1.Tables[0].Rows[0]["Course_Name"]);
                    txt_deptreq.Text = Convert.ToString(ds1.Tables[0].Rows[0]["Dept_Name"]);
                    txt_semreq.Text = Convert.ToString(ds1.Tables[0].Rows[0]["Current_Semester"]);
                    txt_rollreq.Text = Convert.ToString(ds1.Tables[0].Rows[0]["Roll_No"]);
                    txt_namereq.Text = Convert.ToString(ds1.Tables[0].Rows[0]["stud_name"]);
                    txt_secreq.Text = Convert.ToString(ds1.Tables[0].Rows[0]["Sections"]);
                    Session["rollno"] = Convert.ToString(ds1.Tables[0].Rows[0]["Roll_No"]);

                    if (stu_type == "hostler" || stu_type == "Hostler" || stu_type == "HOSTLER")
                    {
                        hos1.Visible = true;
                        hos2.Visible = true;
                        hos4.Visible = true;
                        hos3.Visible = true;
                        hos5.Visible = true;

                        txt_gateflr.Text = Convert.ToString(ds1.Tables[0].Rows[0]["Floor_Name"]);
                        txt_gateroom.Text = Convert.ToString(ds1.Tables[0].Rows[0]["Room_type"]);
                        txt_gatehostel.Text = Convert.ToString(ds1.Tables[0].Rows[0]["HostelName"]);
                        txt_gatebuli.Text = Convert.ToString(ds1.Tables[0].Rows[0]["Building_Name"]);
                        txt_gatermname.Text = Convert.ToString(ds1.Tables[0].Rows[0]["Room_Name"]);
                    }


                    else
                    {
                        hos1.Visible = false;
                        hos2.Visible = false;
                        hos4.Visible = false;
                        hos3.Visible = false;
                        hos5.Visible = false;
                    }
                    bindgridleave();
                }
            }
            else
            {
                query = "select  s.*,h.dept_name as dept,d.desig_name as design from staff_appl_master s,staffmaster m,stafftrans t,hrdept_master h,desig_master d where s.appl_no = m.appl_no and m.staff_code = t.staff_code and t.dept_code = h.dept_code and t.desig_code = d.desig_code and m.college_code = 13 and t.latestrec = 1 and m.resign = 0 and settled = 0 and m.staff_code = '" + Staff_Code + "'";
                ds = d2.select_method_wo_parameter(query, "Text");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                    {
                        txt_gatestaffname.Text = Convert.ToString(ds.Tables[0].Rows[i]["appl_name"]);
                        txt_gatedeptname.Text = Convert.ToString(ds.Tables[0].Rows[i]["dept"]);
                        txt_gatedeign.Text = Convert.ToString(ds.Tables[0].Rows[i]["design"]);
                        txt_gatestsffcode.Text = Staff_Code;
                    }
                }
                bindgridleavestaff();
            }
        }
        catch
        {
        }
    }
    public void view7()
    {
        string activerow = "";
        string query = "";
        string req_date = "";
        string name = "";
        string loctyp = "";
        string batch = "";
        string degree = "";
        string branch = "";
        string sem = "";
        string eventtype = "";
        if (rdo_approval.Checked == true)
        {
            btn_app_eventsave.Visible = true;
            btn_event_reject.Visible = true;
            btn_approval.Visible = true; //poo
            btn_reject.Visible = true;   //poo 
        }
        else
        {
            btn_app_eventsave.Visible = false;
            btn_event_reject.Visible = false;
            btn_approval.Visible = false; //poo
            btn_reject.Visible = false;   //poo 
        }
        activerow = Fpspread7.ActiveSheetView.ActiveRow.ToString();
        string reqpk = "";
        string req_no = "";
        reqpk = Convert.ToString(Fpspread7.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
        req_no = d2.GetFunction("select RequestCode from RQ_Requisition where RequestType=7 and RequisitionPK='" + reqpk + "'");
        TextBox8.Text = reqpk;
        rqustn_no_event.Text = req_no;
        query = "select distinct eventtype,ReqApproveStage,ReqAppStatus,IsCommonParticipate,RequestType,ReqEventName,RequestCode,ReqAppNo,CONVERT(VARCHAR(11),ReqFromDate,103) as ReqFromDate,CONVERT(VARCHAR(11),ReqToDate,103) as ReqToDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqLocType FROM RQ_Requisition R ,staff_appl_master A,staffmaster M WHERE RequestType=7 AND R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and RequestCode='" + req_no + "' and RequisitionPK='" + reqpk + "'";
        query = query + "select distinct CONVERT(VARCHAR(11),EventDate,103) as EventDate,RequisitionFK,ActionPK,ACtionDesc,OutdoorLoc,BuildCode,FloorNo,RoomNo,(Select MasterValue FROM CO_MasterValues T WHERE ActionName = T.MasterCode) ActionName,StartTime,EndTime,OutdoorLoc from RQ_ReqActionDet a,RQ_Requisition R  where a.RequisitionFK=RequisitionPK and RequisitionFK='" + reqpk + "'   ";
        query = query + "SELECT ApplNo,BatchYear,DegreeCode,Semester FROM RQ_EventMemberDet where RequisitionFK='" + reqpk + "' and  ISNULL(MemType,'0')=0";
        query = query + "SELECT ApplNo,BatchYear,DegreeCode,Semester FROM RQ_EventMemberDet where RequisitionFK='" + reqpk + "' and  ISNULL(MemberAction,'0')=0 and ActionType='3' and ISNULL(BatchYear,'0')=0";
        query = query + " SELECT BatchYear,DegreeCode,Semester FROM RQ_EventMemberDet where RequisitionFK='" + reqpk + "' AND ISNULL(MemType,0)=0 AND ISNULL(ACTIONTYPE ,0)=0";
        query = query + "SELECT (Select MasterValue FROM CO_MasterValues T WHERE Institution = T.MasterCode) Institution FROM RQ_EventMemberDet where RequisitionFK='" + reqpk + "' and  ISNULL(MemberAction,'0')=0 and ISNULL(ActionType,'0')=0 and ISNULL(BatchYear,'0')=0 and ISNULL(ActionFK,'0')=0 and ISNULL(ActionType,'0')=0 and ISNULL(memtype,'0')=0";
        query = query + "SELECT (Select MasterValue FROM CO_MasterValues T WHERE ApplNo = T.MasterCode) ApplNo FROM RQ_EventMemberDet where RequisitionFK='" + reqpk + "' and  ISNULL(MemberAction,'0')=0 and ISNULL(ActionType,'0')=0 and ISNULL(BatchYear,'0')=0 and MemType='3'";
        ds = d2.select_method_wo_parameter(query, "Text");
        string common = "";
        if (ds.Tables[0].Rows.Count > 0)
        {
            common = ds.Tables[0].Rows[0]["IsCommonParticipate"].ToString();
            eventtype = ds.Tables[0].Rows[0]["eventtype"].ToString();
            req_date = ds.Tables[0].Rows[0]["RequestDate"].ToString();
            string[] ay = req_date.Split('/');
            TextBox6.Text = ay[0].ToString() + "/" + ay[1].ToString() + "/" + ay[2].ToString();
            name = ds.Tables[0].Rows[0]["ReqEventName"].ToString();
            string getevent = d2.GetFunction("select MasterValue from CO_MasterValues where MasterCode='" + name + "' and collegecode='" + collegecode1 + "'");
            txtothers.Text = getevent;
            loctyp = ds.Tables[0].Rows[0]["ReqLocType"].ToString();
            if (loctyp == "0")
            {
                rdb1.Checked = true;
                rdb2.Checked = false;
            }
            else
            {
                rdb1.Checked = false;
                rdb2.Checked = true;
            }
        }
        if (rdb1.Checked == true)
        {
            DIV_indoor.Visible = true;
            DIV_outdoor.Visible = false;
        }
        else
        {
            DIV_indoor.Visible = false;
            DIV_outdoor.Visible = true;
        }
        //if (eventtype == "0")
        //{
        //SINGLE DAY EVENT
        if (ds.Tables[1].Rows.Count > 0)
        {
            DataTable dt = new DataTable();
            dt.Columns.Add("Dummy");
            dt.Columns.Add("Dummy1");
            dt.Columns.Add("Dummy2");
            dt.Columns.Add("Dummy3");
            dt.Columns.Add("Dummy4");
            dt.Columns.Add("Dummay5");
            dt.Columns.Add("Dummay6");
            dt.Columns.Add("Dummay7");
            string date = "";
            for (int i = 0; i < ds.Tables[1].Rows.Count; i++)
            {
                gridadd.Visible = true;
                string actnamecountpk = ds.Tables[1].Rows[i]["ActionPK"].ToString();
                string countperson = "";
                if (common == "1")
                {
                    countperson = d2.GetFunction("select COUNT(applno) as count from RQ_EventMemberDet where ActionFK='" + actnamecountpk + "' and RequisitionFK='" + reqpk + "' and ActionType='1'");
                }
                else
                {
                    countperson = d2.GetFunction("select COUNT(applno) as count from RQ_EventMemberDet where ActionType='1' and RequisitionFK='" + reqpk + "' AND ActionFK='" + actnamecountpk + "'");
                }
                string countperson1 = d2.GetFunction("select COUNT(applno) as count from RQ_EventMemberDet where ActionFK='" + actnamecountpk + "' and RequisitionFK='" + reqpk + "' and ActionType='2'");
                DataRow dr;
                dr = dt.NewRow();
                string dd = ds.Tables[1].Rows[i]["EventDate"].ToString();
                if (dd != "")
                {
                    string[] ay = dd.Split('/');
                    date = ay[1].ToString() + "/" + ay[0].ToString() + "/" + ay[2].ToString();
                }
                dr[0] = date;
                dr[1] = ds.Tables[1].Rows[i]["ActionName"].ToString();
                dr[2] = ds.Tables[1].Rows[i]["ACtionDesc"].ToString();
                dr[3] = ds.Tables[1].Rows[i]["StartTime"].ToString();
                dr[4] = ds.Tables[1].Rows[i]["EndTime"].ToString();
                if (rdb1.Checked == true)
                {
                    dr[5] = ds.Tables[1].Rows[i]["BuildCode"].ToString() + "-" + ds.Tables[1].Rows[i]["FloorNo"].ToString() + "-" + ds.Tables[1].Rows[i]["RoomNo"].ToString();
                }
                else
                {
                    dr[5] = ds.Tables[1].Rows[i]["OutdoorLoc"].ToString();
                }
                dr[6] = countperson;
                string gg = countperson;
                dr[7] = countperson1;
                dt.Rows.Add(dr);
            }
            if (dt.Rows.Count > 0)
            {
                gridadd.DataSource = dt;
                gridadd.DataBind();
            }
            //gridadd.Columns[1].Visible = false;
        }
        //}
        //else // MULTIPLE DAY EVENT
        //{
        //}
        if (rdb2.Checked == true)
        {
            if (ds.Tables[5].Rows.Count > 0)
            {
                for (int i = 0; i < ds.Tables[5].Rows.Count; i++)
                {
                    txt_outinstitution.Text = ds.Tables[5].Rows[i]["Institution"].ToString();
                }
            }
            if (ds.Tables[6].Rows.Count > 0)
            {
                for (int i = 0; i < ds.Tables[6].Rows.Count; i++)
                {
                    txt_outorganizer.Text = ds.Tables[6].Rows[i]["ApplNo"].ToString();
                }
            }
        }
        if (rdb1.Checked == true)
        {
            string bulname = "";
            string semester = "";
            string applno = "";
            string staffcheck = "";
            string semcount = "";
            if (ds.Tables[2].Rows.Count > 0)
            {
                ddl_org_batch.SelectedItem.Text = ds.Tables[2].Rows[0]["BatchYear"].ToString();
                for (int i = 0; i < ds.Tables[2].Rows.Count; i++)
                {
                    // ddl_org_batch.SelectedItem.Text = ds.Tables[2].Rows[i]["BatchYear"].ToString();
                    batch = ds.Tables[2].Rows[i]["BatchYear"].ToString();
                }
            }
            if (ds.Tables[3].Rows.Count > 0)
            {
                for (int i = 0; i < ds.Tables[3].Rows.Count; i++)
                {
                    applno = ds.Tables[3].Rows[i]["ApplNo"].ToString();
                    if (applno != "")
                    {
                        if (staffcheck == "")
                        {
                            staffcheck = applno;
                        }
                        else
                        {
                            staffcheck = staffcheck + "'" + "," + "'" + applno;
                        }
                    }
                }
            }
            if (ds.Tables[4].Rows.Count > 0)
            {
                for (int i = 0; i < ds.Tables[4].Rows.Count; i++)
                {
                    degree = ds.Tables[4].Rows[i]["DegreeCode"].ToString();
                    semester = ds.Tables[4].Rows[i]["Semester"].ToString();
                    if (degree != "")
                    {
                        if (bulname == "")
                        {
                            bulname = degree;
                        }
                        else
                        {
                            bulname = bulname + "'" + "," + "'" + degree;
                        }
                    }
                    if (semester != "")
                    {
                        if (semcount == "")
                        {
                            semcount = semester;
                        }
                        else
                        {
                            semcount = semcount + "" + "," + "" + semester;
                        }
                    }
                    txt_org_sem.Text = semcount;
                }
            }
            query = "select distinct degree.degree_code,department.dept_name,degree.Acronym  from degree,department,course,deptprivilages where course.course_id=degree.course_id  and department.dept_code=degree.dept_code and course.college_code = degree.college_code and department.college_code = degree.college_code and deptprivilages.Degree_code=degree.Degree_code and degree.degree_code in('" + bulname + "')";
            ds1 = d2.select_method(query, hat, "Text");
            string degree1 = "";
            string bulname1 = "";
            if (ds1.Tables[0].Rows.Count > 0)
            {
                for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                {
                    degree1 = ds1.Tables[0].Rows[i]["dept_name"].ToString();
                    if (bulname1 == "")
                    {
                        bulname1 = degree1;
                    }
                    else
                    {
                        bulname1 = bulname1 + "'" + "," + "'" + degree1;
                    }
                    txt_branch.Text = bulname1;
                }
            }
            query = "select distinct degree.course_id,course.course_name from degree,course,deptprivilages  where course.course_id=degree.course_id and course.college_code = degree.college_code  and degree.college_code='" + collegecode1 + "' and deptprivilages.Degree_code=degree.Degree_code and degree.degree_code in('" + bulname + "') ";
            ds1 = d2.select_method_wo_parameter(query, "Text");
            string degree11 = "";
            string bulname11 = "";
            if (ds1.Tables[0].Rows.Count > 0)
            {
                for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                {
                    degree11 = ds1.Tables[0].Rows[i]["course_name"].ToString();
                    if (bulname11 == "")
                    {
                        bulname11 = degree11;
                    }
                    else
                    {
                        bulname11 = bulname11 + "'" + "," + "'" + degree11;
                    }
                    txt_degree.Text = bulname11;
                }
            }
            string srisql = "select distinct s.staff_name,s.staff_code from staffmaster s,staff_appl_master sa,hrdept_master hr,desig_master dm where s.appl_no=sa.appl_no and sa.dept_code=hr.dept_code and dm.desig_code=sa.desig_code and settled=0 and resign =0 and sa.appl_id in('" + staffcheck + "') ";
            ds1 = d2.select_method(srisql, hat, "Text");
            string staff = "";
            string namestf = "";
            if (ds1.Tables[0].Rows.Count > 0)
            {
                for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                {
                    staff = ds1.Tables[0].Rows[i]["staff_name"].ToString();
                    if (namestf == "")
                    {
                        namestf = staff;
                    }
                    else
                    {
                        namestf = namestf + "" + "," + "" + staff;
                    }
                }
                txt_staffnamemul.Text = namestf;
            }
        }
        view7_others();
    }
    public void view7_others()
    {
        string rq_no = Convert.ToString(TextBox8.Text);
        lbl_prereqheader.Visible = false;
        lbl_materialreq.Visible = false;
        lbl_expncreq.Visible = false;
        lbl_spncrdetail.Visible = false;
        string qur = "select RepresentApllNo,ActivityName,ActivityDesc,CONVERT(VARCHAR(11),StartDate,103) as StartDate,CONVERT(VARCHAR(11),EndDate,103) as EndDate from RQ_EventPreRequest where RequisitionFK='" + rq_no + "'";
        qur = qur + "select ItemFK,ReqQty,CONVERT(VARCHAR(11),ExpectedDate,103) as ExpectedDate,CASE WHEN PurchaseStatus = '0' THEN 'To Be Purchase' when PurchaseStatus='1' then 'Use Existing'  END PurchaseStatus from RQ_EventMaterialReq where RequisitionFK='" + rq_no + "'";
        qur = qur + "select (Select MasterValue FROM CO_MasterValues T WHERE ExpensesName = T.MasterCode) ExpensesName,ExpensesDesc,ExpAmount from RQ_EventExpensesDet where RequisitionFK='" + rq_no + "'";
        qur = qur + "select resources,c.VendorCompName,CASE WHEN SponserType = '1' THEN 'Institution' when SponserType='2' then 'Association' when SponserType='3' then 'Individual' when SponserType='4' then 'Company'  END SponserType,VendorFK,VendorContactFK,SponserAmount from RQ_EventSponserDet ,CO_VendorMaster c where c.VendorPK=VendorFK and RequisitionFK='" + rq_no + "'";
        ds = d2.select_method_wo_parameter(qur, "Text");
        if (ds.Tables[0].Rows.Count > 0)
        {
            DataTable dt = new DataTable();
            dt.Columns.Add("Dummy");
            dt.Columns.Add("Dummy1");
            dt.Columns.Add("Dummy2");
            dt.Columns.Add("Dummy3");
            dt.Columns.Add("Dummy4");
            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                GridView4.Visible = true;
                GridView4_div.Visible = true;
                lbl_prereqheader.Visible = true;
                string staffappid = ds.Tables[0].Rows[i]["RepresentApllNo"].ToString();
                string stfname = d2.GetFunction("select appl_name from staff_appl_master where appl_id='" + staffappid + "'");
                DataRow dr;
                dr = dt.NewRow();
                dr[0] = ds.Tables[0].Rows[i]["ActivityName"].ToString();
                dr[1] = ds.Tables[0].Rows[i]["StartDate"].ToString();
                dr[2] = ds.Tables[0].Rows[i]["EndDate"].ToString();
                dr[3] = ds.Tables[0].Rows[i]["ActivityDesc"].ToString();
                dr[4] = stfname;
                dt.Rows.Add(dr);
            }
            if (dt.Rows.Count > 0)
            {
                GridView4.DataSource = dt;
                GridView4.DataBind();
            }
        }
        //##################################### MaterialsRequested ############################################
        if (ds.Tables[1].Rows.Count > 0)
        {
            DataTable dt = new DataTable();
            dt.Columns.Add("Dummy");
            dt.Columns.Add("Dummy1");
            dt.Columns.Add("Dummy2");
            dt.Columns.Add("Dummy3");
            for (int i = 0; i < ds.Tables[1].Rows.Count; i++)
            {
                GridView5.Visible = true;
                GridView5_div.Visible = true;
                lbl_materialreq.Visible = true;
                string itemfk = ds.Tables[1].Rows[i]["ItemFK"].ToString();
                string itemname = d2.GetFunction("select ItemName from IM_ItemMaster WHERE ItemPK='" + itemfk + "'");
                DataRow dr;
                dr = dt.NewRow();
                dr[0] = itemname;
                dr[1] = ds.Tables[1].Rows[i]["ReqQty"].ToString();
                dr[2] = ds.Tables[1].Rows[i]["ExpectedDate"].ToString();
                dr[3] = ds.Tables[1].Rows[i]["PurchaseStatus"].ToString();
                dt.Rows.Add(dr);
            }
            if (dt.Rows.Count > 0)
            {
                GridView5.DataSource = dt;
                GridView5.DataBind();
            }
        }
        if (ds.Tables[2].Rows.Count > 0)
        {
            DataTable dt = new DataTable();
            dt.Columns.Add("Dummy");
            dt.Columns.Add("Dummy1");
            dt.Columns.Add("Dummy2");
            dt.Columns.Add("Dummy3");
            for (int i = 0; i < ds.Tables[2].Rows.Count; i++)
            {
                GridView7.Visible = true;
                lbl_expncreq.Visible = true;
                DataRow dr;
                dr = dt.NewRow();
                dr[0] = ds.Tables[2].Rows[i]["ExpensesName"].ToString();
                dr[1] = ds.Tables[2].Rows[i]["ExpensesDesc"].ToString();
                dr[2] = ds.Tables[2].Rows[i]["ExpAmount"].ToString();
                dt.Rows.Add(dr);
            }
            if (dt.Rows.Count > 0)
            {
                GridView7.DataSource = dt;
                GridView7.DataBind();
            }
        }
        if (ds.Tables[3].Rows.Count > 0)
        {
            DataTable dt = new DataTable();
            dt.Columns.Add("Dummy");
            dt.Columns.Add("Dummy1");
            dt.Columns.Add("Dummy2");
            dt.Columns.Add("Dummy3");
            for (int i = 0; i < ds.Tables[3].Rows.Count; i++)
            {
                GridView3.Visible = true;
                lbl_spncrdetail.Visible = true;
                DataRow dr;
                dr = dt.NewRow();
                dr[0] = ds.Tables[3].Rows[i]["SponserType"].ToString();
                dr[1] = ds.Tables[3].Rows[i]["VendorCompName"].ToString();
                dr[2] = ds.Tables[3].Rows[i]["resources"].ToString();
                dr[3] = ds.Tables[3].Rows[i]["SponserAmount"].ToString();
                dt.Rows.Add(dr);
            }
            if (dt.Rows.Count > 0)
            {
                GridView3.DataSource = dt;
                GridView3.DataBind();
            }
        }
    }
    public void newbindbatch()
    {
        ds = d2.BindBatch();
        if (ds.Tables[0].Rows.Count > 0)
        {
            ddl_org_batch.DataSource = ds;
            ddl_org_batch.DataTextField = "batch_year";
            ddl_org_batch.DataValueField = "batch_year";
            ddl_org_batch.DataBind();
            // ddl_org_batch.SelectedIndex = 3;
        }
    }
    public void view9()
    {
        try
        {
            string activerow = "";
            activerow = Fpspread9.ActiveSheetView.ActiveRow.ToString();
            string req_type = Fpspread9.Sheets[0].Cells[Convert.ToInt32(activerow), 3].Text;
            if (req_type == "Item Request")
            {
                panelrollnopop.Visible = false;
                div_service.Visible = false;
                div_complaints.Visible = false;
                div_leavereq.Visible = false;
                view9_item();
                div_itmreqst.Visible = true;
            }
            else if (req_type == "Service Request")
            {
                div_itmreqst.Visible = false;
                div_service.Visible = true;
                div_visitor.Visible = false;
                div_complaints.Visible = false;
                div_leavereq.Visible = false;
                paneladd.Visible = false;
                panelrollnopop.Visible = false;
                view9_service();
            }
            else if (req_type == "Visitor Appointment Request")
            {
                div_itmreqst.Visible = false;
                div_service.Visible = false;
                div_visitor.Visible = true;
                div_leavereq.Visible = false;
                div_service.Visible = false;
                panelrollnopop.Visible = false;
                view9_visitor();
                btn_visit_save.Visible = false;
            }
            else if (req_type == "Complaints")
            {
                div_itmreqst.Visible = false;
                div_visitor.Visible = false;
                div_complaints.Visible = true;
                div_leavereq.Visible = false;
                div_service.Visible = false;
                btn_comp_save.Visible = false;
                panelrollnopop.Visible = false;
                view9_comp();
            }
            else if (req_type == "Leave Request")
            {
                DataTable dt = new DataTable();
                grid_altersub.DataSource = dt;
                grid_altersub.DataBind();
                div_itmreqst.Visible = false;
                div_leavereq.Visible = true;
                div_complaints.Visible = false;
                div_visitor.Visible = false;
                div_service.Visible = false;
                panelrollnopop.Visible = false;
                view9_leave();
                Btn_Apply_Leave.Visible = false;
            }
            else if (req_type == "Gate Pass")
            {
                div_itmreqst.Visible = false;
                panelrollnopop.Visible = true;
                div_leavereq.Visible = false;
                div_visitor.Visible = false;
                div_service.Visible = false;
                div_complaints.Visible = false;
                view9_gatepass();
                btnsave.Visible = false;
                Btnedit.Visible = false;
            }
            else if (req_type == "Event Request")
            {
                div_itmreqst.Visible = false;
                panelrollnopop.Visible = false;
                div_leavereq.Visible = false;
                div_visitor.Visible = false;
                div_service.Visible = false;
                div_complaints.Visible = false;
                div_event_app.Visible = true;
                btnsave.Visible = false;
                Btnedit.Visible = false;
                view9_event();
            }
        }
        catch
        {
        }
    }
    public void view9_item()
    {
        string query = "";
        string activerow = "";
        string dept = "";
        string expt_date = "";
        string req_date = "";
        string item = "";
        string ReqQty = "";
        string reqby = "";
        btn_itm_save.Visible = false;
        activerow = Fpspread9.ActiveSheetView.ActiveRow.ToString();
        string req_no = Fpspread9.Sheets[0].Cells[Convert.ToInt32(activerow), 4].Text;
        txt_reqno.Text = req_no;
        query = "select distinct DeptFK,r.Remarks,ReqQty,RequestBy,ItemFK,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate from RQ_Requisition r,RQ_RequisitionDet d,IM_ItemMaster i where RequestType=1 and RequisitionFK=RequisitionPK and RequestCode='" + req_no + "'";
        ds = d2.select_method_wo_parameter(query, "Text");
        if (ds.Tables[0].Rows.Count > 0)
        {
            dept = ds.Tables[0].Rows[0]["DeptFK"].ToString();
            txt_dept.Text = getdepartment(dept);
            txt_reqremarks.Text = ds.Tables[0].Rows[0]["Remarks"].ToString();
            req_date = ds.Tables[0].Rows[0]["RequestDate"].ToString();
            string[] ay = req_date.Split('/');
            txt_date.Text = ay[0].ToString() + "/" + ay[1].ToString() + "/" + ay[2].ToString();
            txt_exdate.Text = ds.Tables[0].Rows[0]["ReqExpectedDate"].ToString();
            item = ds.Tables[0].Rows[0]["ItemFK"].ToString();
            ReqQty = ds.Tables[0].Rows[0]["ReqQty"].ToString();
            reqby = ds.Tables[0].Rows[0]["RequestBy"].ToString();
            if (reqby == "1")
            {
                cb_own.Checked = true;
            }
            else if (reqby == "2")
            {
                cb_other.Checked = true;
            }
            else
            {
                cb_other.Checked = true;
                cb_own.Checked = true;
            }
        }
        string select = "select * from IM_ItemMaster where ItemPK='" + item + "'";
        ds1 = da.select_method_wo_parameter(select, "Text");
        DataTable dt = new DataTable();
        DataRow dr;
        dt.Columns.Add("ItemCode");
        dt.Columns.Add("ItemName");
        dt.Columns.Add("Measure");
        dt.Columns.Add("Quantity");
        if (ds1.Tables[0].Rows.Count > 0)
        {
            for (int j = 0; j < ds1.Tables[0].Rows.Count; j++)
            {
                dr = dt.NewRow();
                dr[0] = Convert.ToString(ds1.Tables[0].Rows[j]["ItemCode"]);
                dr[1] = Convert.ToString(ds1.Tables[0].Rows[j]["itemname"]);
                dr[2] = Convert.ToString(ds1.Tables[0].Rows[j]["ItemUnit"]);
                dr[3] = ReqQty;
                dt.Rows.Add(dr);
            }
        }
        if (dt.Rows.Count > 0)
        {
            SelectdptGrid.DataSource = dt;
            SelectdptGrid.DataBind();
        }
    }
    public void view9_service()
    {
        try
        {
            string query = "";
            string activerow = "";
            string dept = "";
            string expt_date = "";
            string req_date = "";
            string item = "";
            string ReqQty = "";
            string loc = "";
            string loc_val = "";
            string venfk_val = "";
            string reqby = "";
            string ven_fk = "";
            btn_ser_save.Visible = false;
            activerow = Fpspread9.ActiveSheetView.ActiveRow.ToString();
            string req_no = Fpspread9.Sheets[0].Cells[Convert.ToInt32(activerow), 4].Text;
            txt_serreqno.Text = req_no;
            query = "select distinct DeptFK,r.Remarks,ReqQty,ItemFK,RequestBy,SugServiceLoc,SugVendorFK ,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate from RQ_Requisition r,RQ_RequisitionDet d,IM_ItemMaster i where RequestType=2 and RequisitionFK=RequisitionPK and RequestCode='" + req_no + "'";
            ds = d2.select_method_wo_parameter(query, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                dept = ds.Tables[0].Rows[0]["DeptFK"].ToString();
                txt_serdept.Text = getdepartment(dept);
                txt_serremarks.Text = ds.Tables[0].Rows[0]["Remarks"].ToString();
                req_date = ds.Tables[0].Rows[0]["RequestDate"].ToString();
                string[] ay = req_date.Split('/');
                txt_serreqdate.Text = ay[0].ToString() + "/" + ay[1].ToString() + "/" + ay[2].ToString();
                txt_serexpdate.Text = ds.Tables[0].Rows[0]["ReqExpectedDate"].ToString();
                item = ds.Tables[0].Rows[0]["ItemFK"].ToString();
                ReqQty = ds.Tables[0].Rows[0]["ReqQty"].ToString();
                loc = ds.Tables[0].Rows[0]["SugServiceLoc"].ToString();
                ven_fk = ds.Tables[0].Rows[0]["SugVendorFK"].ToString();
                reqby = ds.Tables[0].Rows[0]["RequestBy"].ToString();
                if (reqby == "1")
                {
                    cb_serown.Checked = true;
                }
                else if (reqby == "2")
                {
                    cb_serother.Checked = true;
                }
                else
                {
                    cb_serother.Checked = true;
                    cb_serown.Checked = true;
                }
                if (loc == "0")
                {
                    loc_val = "Indoor";
                }
                else
                {
                    loc_val = "Outdoor";
                }
            }
            string select = "select * from IM_ItemMaster where ItemPK='" + item + "'";
            ds1 = da.select_method_wo_parameter(select, "Text");
            DataTable dt = new DataTable();
            DataRow dr;
            dt.Columns.Add("ItemCode");
            dt.Columns.Add("ItemName");
            dt.Columns.Add("Measure");
            dt.Columns.Add("Quantity");
            if (ds1.Tables[0].Rows.Count > 0)
            {
                for (int j = 0; j < ds1.Tables[0].Rows.Count; j++)
                {
                    dr = dt.NewRow();
                    dr[0] = Convert.ToString(ds1.Tables[0].Rows[j]["ItemCode"]);
                    dr[1] = Convert.ToString(ds1.Tables[0].Rows[j]["itemname"]);
                    dr[2] = Convert.ToString(ds1.Tables[0].Rows[j]["ItemUnit"]);
                    dr[3] = ReqQty;
                    dt.Rows.Add(dr);
                }
            }
            if (dt.Rows.Count > 0)
            {
                Sergrid.DataSource = dt;
                Sergrid.DataBind();
            }
        }
        catch
        {
        }
    }
    public void view9_visitor()
    {
        try
        {
            div_complaints.Visible = false;
            string query = "";
            string activerow = "";
            string meettodept = "";
            string meettostaff = "";
            string req_date = "";
            string dept = "";
            string dept_name = "";
            string staffname = "";
            string time = "";
            if (rdo_approval.Checked == true)
            {
                btn_visit_save.Visible = true;
                btn_visit_reject.Visible = true;
                btn_approval.Visible = true; //poo
                btn_reject.Visible = true;   //poo 
            }
            else
            {
                btn_visit_save.Visible = false;
                btn_visit_reject.Visible = false;
                btn_approval.Visible = false; //poo
                btn_reject.Visible = false;   //poo 
            }
            activerow = Fpspread9.ActiveSheetView.ActiveRow.ToString();
            string reqnumb = "";
            string req_no = "";
            reqnumb = Convert.ToString(Fpspread9.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
            req_no = d2.GetFunction("select RequestCode from RQ_Requisition where RequestType=3 and RequisitionPK='" + reqnumb + "'");
            TextBox4.Text = reqnumb;
            txt_visitorreqno.Text = req_no;
            query = "select r.VendorFK,VendorContactFK,r.MeetToStaff,r.MeetStaffAppNo,CONVERT(VARCHAR(11),ReqExpectedDate,103) as ReqExpectedDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,im.VendorCompName ,v.VenContactName ,v.VenContactDesig,v.VenContactDept,v.VendorMobileNo,v.VendorPhoneNo ,v.VendorEmail,r.MeetToDept ,r.ReqExpectedTime ,r.MeetDeptCode ,Remarks from RQ_Requisition r,IM_VendorContactMaster v,CO_VendorMaster im where r.VendorFK =im.VendorPK and r.VendorContactFK =v.VendorContactPK and im.VendorPK =v.VendorFK and RequestType=3 and RequestCode='" + req_no + "' ";
            ds = d2.select_method_wo_parameter(query, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                ddl_designation.SelectedItem.Text = ds.Tables[0].Rows[0]["VenContactDesig"].ToString();
                ddl_department.SelectedItem.Text = ds.Tables[0].Rows[0]["VenContactDept"].ToString();
                txt_visitorpurpose.Text = ds.Tables[0].Rows[0]["Remarks"].ToString();
                req_date = ds.Tables[0].Rows[0]["RequestDate"].ToString();
                string[] ay = req_date.Split('/');
                txt_visitorreqdate.Text = ay[0].ToString() + "/" + ay[1].ToString() + "/" + ay[2].ToString();
                txt_visitdate.Text = ds.Tables[0].Rows[0]["ReqExpectedDate"].ToString();
                txt_cname.Text = ds.Tables[0].Rows[0]["VendorCompName"].ToString();
                txt_name.Text = ds.Tables[0].Rows[0]["VenContactName"].ToString();
                txt_visitorph.Text = ds.Tables[0].Rows[0]["VendorPhoneNo"].ToString();
                txt_visitormob.Text = ds.Tables[0].Rows[0]["VendorMobileNo"].ToString();
                txt_visitoremail.Text = ds.Tables[0].Rows[0]["VendorEmail"].ToString();
                meettodept = ds.Tables[0].Rows[0]["MeetToDept"].ToString();
                meettostaff = ds.Tables[0].Rows[0]["MeetToStaff"].ToString();
                dept = ds.Tables[0].Rows[0]["MeetDeptCode"].ToString();
                staffname = ds.Tables[0].Rows[0]["MeetStaffAppNo"].ToString();
                time = ds.Tables[0].Rows[0]["ReqExpectedTime"].ToString();
                string[] split1 = time.Split(':');
                string spl = (split1[1]);
                string[] split2 = spl.Split(' ');
                ddl_hrs.SelectedItem.Text = (split1[0]);
                ddl_mins.SelectedItem.Text = (split2[0]);
                ddl_ampm.SelectedItem.Text = (split2[1]);
                if (meettodept == "True")
                {
                    cb_dept.Checked = true;
                    div_dept.Visible = true;
                    string[] split = dept.Split(',');
                    if (split.Length == 1)
                    {
                        dept_name = getdepartment(dept);
                        txt_dept_to.Text = dept_name;
                    }
                    else if (split.Length == 2)
                    {
                        txt_dept_to.Text = getdepartment(split[0]);
                        txt_dept_cc.Text = getdepartment(split[1]);
                    }
                    else if (split.Length == 3)
                    {
                        txt_dept_to.Text = getdepartment(split[0]);
                        txt_dept_cc.Text = getdepartment(split[1]);
                        txt_to1.Visible = true;
                        txt_to1.Text = getdepartment(split[2]);
                    }
                    else if (split.Length == 4)
                    {
                        txt_dept_to.Text = getdepartment(split[0]);
                        txt_dept_cc.Text = getdepartment(split[1]);
                        txt_to1.Visible = true;
                        txt_to1.Text = getdepartment(split[2]);
                        txt_cc1.Visible = true;
                        txt_cc1.Text = getdepartment(split[3]);
                    }
                }
                else
                {
                    cb_dept.Checked = false;
                    div_dept.Visible = false;
                }
                if (meettostaff == "True")
                {
                    cb_individual.Checked = true;
                    div_indiv.Visible = true;
                    string[] split = dept.Split(',');
                    if (split.Length == 1)
                    {
                        staffname = getstaffname(dept);
                        txt_indiv.Text = staffname;
                    }
                    else if (split.Length == 2)
                    {
                        txt_indiv.Text = getstaffname(split[0]);
                        txt_indiv_cc.Text = getstaffname(split[1]);
                    }
                    else if (split.Length == 3)
                    {
                        txt_indiv.Text = getstaffname(split[0]);
                        txt_indiv_cc.Text = getstaffname(split[1]);
                        txt_indiv1.Visible = true;
                        txt_indiv1.Text = getstaffname(split[2]);
                    }
                    else if (split.Length == 4)
                    {
                        txt_indiv.Text = getstaffname(split[0]);
                        txt_indiv_cc.Text = getstaffname(split[1]);
                        txt_indiv1.Visible = true;
                        txt_indiv1.Text = getstaffname(split[2]);
                        txt_cc2.Visible = true;
                        txt_cc2.Text = getstaffname(split[3]);
                    }
                }
                else
                {
                    cb_individual.Checked = false;
                    div_indiv.Visible = false;
                }
            }
        }
        catch
        {
        }
    }
    public void view9_comp()
    {
        try
        {
            string query = "";
            string activerow = "";
            string comp = "";
            string sugg = "";
            string req_date = "";
            activerow = Fpspread9.ActiveSheetView.ActiveRow.ToString();
            string req_no = Fpspread9.Sheets[0].Cells[Convert.ToInt32(activerow), 4].Text;
            txt_compreqno.Text = req_no;
            query = "select ReqComplaints,ReqComplaintSub,ReqSuggestions,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate from  RQ_Requisition where RequestType=4 and RequestCode='" + req_no + "' ";
            ds = d2.select_method_wo_parameter(query, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                req_date = ds.Tables[0].Rows[0]["RequestDate"].ToString();
                string[] ay = req_date.Split('/');
                txt_compreqdate.Text = ay[0].ToString() + "/" + ay[1].ToString() + "/" + ay[2].ToString();
                txt_compreqdate.Enabled = false;
                txt_regards.Text = ds.Tables[0].Rows[0]["ReqComplaintSub"].ToString();
                txt_regards.Enabled = false;
                comp = ds.Tables[0].Rows[0]["ReqComplaints"].ToString();
                sugg = ds.Tables[0].Rows[0]["ReqSuggestions"].ToString();
                ddl_complaints.SelectedItem.Text = gettext(comp);
                txtComplaintsDetails.Text = gettext(comp);
                txtComplaintsDetails.Enabled = false;
                txtComplaintSuggession.Text = gettext1(sugg);
                txtComplaintSuggession.Enabled = false;
                ddl_suggestions.SelectedItem.Text = gettext1(sugg);
                ddl_complaints.Enabled = false;
                btn_compplus.Enabled = false;
                btn_compminus.Enabled = false;
                btn_sugplus.Enabled = false;
                ddl_suggestions.Enabled = false;
                btn_sugminus.Enabled = false;
            }
        }
        catch
        {
        }
    }
    public void view9_leave()
    {
        try
        {
            string query = "";
            string activerow = "";
            string req_date = "";
            string fromdate = "";
            string todate = "";
            string leave_type = "";
            string halfday = "";
            BindLeave();
            activerow = Fpspread9.ActiveSheetView.ActiveRow.ToString();
            string req_no = Fpspread9.Sheets[0].Cells[Convert.ToInt32(activerow), 4].Text;
            string reqnumb = Convert.ToString(Fpspread9.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
            TextBox7.Text = reqnumb;
            txt_rqstn_leave.Text = req_no;
            string inchargeStfCode = string.Empty;
            query = "SELECT ReqAppStaffAppNo,LeaveMasterFK,CASE WHEN RequestType = 5 THEN 'Leave Request' END RequestType,RequestCode,ReqAppStatus,leaveChangeReason,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when  LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession, Staff_Code,Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE GateReqReason = T.MasterCode) GateReqReason,HodAlterInchargeAppNo FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.LeaveMasterFK = LeaveMasterPK  and RequestType=5 and RequestCode='" + req_no + "' and r.RequisitionPK='" + reqnumb + "'";
            ds = d2.select_method_wo_parameter(query, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                string approvalstaffname = d2.GetFunction("select appl_name from staff_appl_master where appl_id='" + Convert.ToString(ds.Tables[0].Rows[0]["ReqAppStaffAppNo"]) + "'");
                if (approvalstaffname == "0")
                {
                    approvalstaffname = "";
                }
                string statuss = Convert.ToString(ds.Tables[0].Rows[0]["ReqAppStatus"]);
                string appreason = Convert.ToString(ds.Tables[0].Rows[0]["leaveChangeReason"]);
                if (appreason != "")
                {
                    Label5.Text = appreason + " - " + approvalstaffname;
                }
                if (rdo_waiting.Checked == true || rdo_request.Checked == true || rdo_reject.Checked == true)
                {
                    txt_reasonchng.Enabled = false;
                }
                else
                {
                    txt_reasonchng.Enabled = true;
                }
                if (statuss == "0")
                {
                    txt_reasonchng.Visible = true;
                    lbl_chngreason.Visible = true;
                }
                if (rdo_waiting.Checked == true || rdo_request.Checked == true || rdo_reject.Checked == true)
                {
                    txt_reasonchng.Visible = false;
                    lbl_chngreason.Visible = false;
                }
                if (appreason == "")
                {
                    Label6.Visible = false;
                }
                else
                {
                    Label6.Visible = true;
                }
                req_date = ds.Tables[0].Rows[0]["RequestDate"].ToString();
                string[] ay = req_date.Split('/');
                txt_time_rqstn_leave.Text = ay[0].ToString() + "/" + ay[1].ToString() + "/" + ay[2].ToString();
                txt_applydate.Text = ay[0].ToString() + "/" + ay[1].ToString() + "/" + ay[2].ToString();
                txt_staff_code.Text = ds.Tables[0].Rows[0]["Staff_Code"].ToString();
                txt_staff_name.Text = ds.Tables[0].Rows[0]["Staff_Name"].ToString();
                string code = ds.Tables[0].Rows[0]["Staff_Code"].ToString();
                // ddl_leave_type.SelectedItem.Text = ds.Tables[0].Rows[0]["Staff_Name"].ToString();
                fromdate = ds.Tables[0].Rows[0]["LeaveFrom"].ToString();
                string[] ay1 = fromdate.Split('/');
                txt_frm.Text = ay1[0].ToString() + "/" + ay1[1].ToString() + "/" + ay1[2].ToString();
                todate = ds.Tables[0].Rows[0]["LeaveTo"].ToString();
                string[] ay2 = todate.Split('/');
                txt_to.Text = ay2[0].ToString() + "/" + ay2[1].ToString() + "/" + ay2[2].ToString();
                string reson = ds.Tables[0].Rows[0]["GateReqReason"].ToString();
                if (reson != "")
                {
                    //  ddl_leavereason.SelectedItem.Text = reson;
                    txtleavereason.Text = reson;
                }
                else
                {
                    // ddl_leavereason.SelectedItem.Text = "Select";
                    txtleavereason.Text = "";
                }
                leave_type = ds.Tables[0].Rows[0]["LeaveMasterFK"].ToString();
                ddl_leave_type.SelectedIndex = ddl_leave_type.Items.IndexOf(ddl_leave_type.Items.FindByValue(leave_type));
                // ddl_leave_type.SelectedItem.Value = leave_type;
                halfday = ds.Tables[0].Rows[0]["Leave"].ToString();
                ddl_sess.SelectedItem.Text = ds.Tables[0].Rows[0]["LeaveSession"].ToString();
                if (halfday == "Full Day")
                {
                    rdlist.Checked = true;
                }
                else
                {
                    rdlist1.Checked = true;
                    lbl_sess.Visible = true;
                    ddl_sess.Visible = true;
                }
                string dept = d2.GetFunction("select h.dept_name from staffmaster s ,hrdept_master h,desig_master d,stafftrans t where s.staff_code =t.staff_code and t.dept_code =h.dept_code and t.desig_code =d.desig_code and latestrec ='1' and s.staff_code in ('" + code + "')");
                txt_dep.Text = dept;
                string des = d2.GetFunction("select d.desig_name from staffmaster s ,hrdept_master h,desig_master d,stafftrans t where s.staff_code =t.staff_code and t.dept_code =h.dept_code and t.desig_code =d.desig_code and latestrec ='1' and s.staff_code in ('" + code + "')");
                txt_des.Text = des;
                imagestaff.ImageUrl = "~/Handler/staffphoto.ashx?Staff_Code=" + txt_staff_code.Text;
                string photo = d2.GetFunction("select photo from staffphoto where staff_code='" + txt_staff_code.Text + "'");
                if (photo == "0")
                {
                    imagestaff.ImageUrl = "image/Gender Neutral User Filled-100(1).png";
                }
                inchargeStfCode = Convert.ToString(ds.Tables[0].Rows[0]["HodAlterInchargeAppNo"]);
                if (inchargeStfCode != "0") //alter hod staff incharge name
                    getAlterStaff(inchargeStfCode);
                else
                    divaltstf.Visible = false;
            }
            bindgrid_approvalstaff(reqnumb);
            bindgrid2();
            fromtodate();
            BindGridview();
            //alternate schedule based on settings 
            if (alterrigths == "1")
                degbatchsem();
            else if (alterrigths == "2")
                afteralterSchedule();
            // degbatchsem();
            // altersubject();
        }
        catch
        {
        }
    }
    public void view9_gatepass()
    {
        try
        {
            div_gate_reqstn.Visible = true;
            paneladd.Visible = true;
            string activerow = "";
            string exittime = "";
            string entrytime = "";
            string req_date = "";
            string exitdate = "";
            string entrydate = "";
            string Stud_Name = "";
            activerow = Fpspread9.ActiveSheetView.ActiveRow.ToString();
            string req_no = Fpspread9.Sheets[0].Cells[Convert.ToInt32(activerow), 4].Text;
            txt_reqtn_gate.Text = req_no;
            string rollno = "";
            string reqnumb = Convert.ToString(Fpspread9.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
            txt_reqtn_gate.Text = req_no;
            TextBox1.Text = reqnumb;
            string query = "SELECT CASE WHEN RequestType = 6 THEN 'Gate Pass' END RequestType,RequestCode,(Select MasterValue FROM CO_MasterValues T WHERE R.GateReqReason = T.MasterCode) GateReqReason,ReqStaffAppNo,CONVERT(VARCHAR(11),GateReqExitDate,103) as GateReqExitDate,GateReqExitTime,CONVERT(VARCHAR(11),GateReqEntryDate,103) as GateReqEntryDate,GateReqEntryTime,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,(Select TextVal FROM TextValTable T WHERE R.RequestBy = T.TextCode) RequestBy,(Select TextVal FROM TextValTable T WHERE R.RequestMode = T.TextCode) RequestMode,Roll_No,Stud_Name,Staff_Code,Staff_Name,case when MemType=2 then  'Staff' when MemType =1 then 'Stuedent' end as memtype FROM RQ_Requisition R,Registration S,staff_appl_master A, staffmaster M WHERE R.ReqAppNo = S.App_No AND R.ReqStaffAppNo = A.appl_id AND A.appl_no = M.appl_no and  RequestType=6 and RequestCode='" + req_no + "' and RequisitionPK='" + reqnumb + "'";
            ds = d2.select_method_wo_parameter(query, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                req_date = ds.Tables[0].Rows[0]["RequestDate"].ToString();
                exitdate = ds.Tables[0].Rows[0]["GateReqExitDate"].ToString();
                entrydate = ds.Tables[0].Rows[0]["GateReqEntryDate"].ToString();
                string[] ay = req_date.Split('/');
                string[] ay1 = exitdate.Split('/');
                string[] ay2 = entrydate.Split('/');
                txt_reqtn_gate_date.Text = ay[0].ToString() + "/" + ay[1].ToString() + "/" + ay[2].ToString();
                txt_appldatereq.Text = ay[0].ToString() + "/" + ay[1].ToString() + "/" + ay[2].ToString();
                txtapply.Text = ay[0].ToString() + "/" + ay[1].ToString() + "/" + ay[2].ToString();
                txtfromdate.Text = ay1[0].ToString() + "/" + ay1[1].ToString() + "/" + ay1[2].ToString();
                txttodate.Text = ay2[0].ToString() + "/" + ay2[1].ToString() + "/" + ay2[2].ToString();
                ddlgatepass.SelectedItem.Text = ds.Tables[0].Rows[0]["GateReqReason"].ToString();
                ddlrequest.SelectedItem.Text = "Self";
                ddlrequestmode.Visible = false;
                lblrequestmode.Visible = false;
                txtissueper.Visible = false;
                lblissueperson.Visible = false;
                btnstaff.Visible = false;
                //  ddlrequest.SelectedItem.Text = ds.Tables[0].Rows[0]["RequestBy"].ToString();
                ddlrequestmode.SelectedItem.Text = ds.Tables[0].Rows[0]["RequestMode"].ToString();
                txtissueper.Text = ds.Tables[0].Rows[0]["Staff_Name"].ToString();
                exittime = ds.Tables[0].Rows[0]["GateReqExitTime"].ToString();
                entrytime = ds.Tables[0].Rows[0]["GateReqEntryTime"].ToString();
                Stud_Name = ds.Tables[0].Rows[0]["Stud_Name"].ToString();
                rollno = ds.Tables[0].Rows[0]["Roll_No"].ToString();
                string[] split1 = exittime.Split(':');
                string spl = (split1[1]);
                //string[] split2 = spl.Split(' ');              
                ddlhour.SelectedItem.Text = (split1[0]);
                ddlmin.SelectedItem.Text = (split1[1]);
                ddlsession.SelectedItem.Text = (split1[2]);
                string[] split3 = entrytime.Split(':');
                string spl1 = (split3[1]);
                // string[] split4 = spl1.Split(' ');
                ddlendhour.SelectedItem.Text = (split3[0]);
                ddlendmin.SelectedItem.Text = (split3[1]);
                ddlenssession.SelectedItem.Text = (split3[2]);
                image8.ImageUrl = "Handler/Handler4.ashx?rollno=" + rollno;
            }
            string select = "select distinct B.Building_Name, rm.Room_Name,rm.Room_type, f.Floor_Name, Sections,r.Current_Semester,dt.Dept_Name,c.Course_Name,r.Batch_Year,r.Roll_No,r.Reg_No,r.stud_name,r.Stud_Type,hd.HostelName,hd.HostelMasterPK,r.Batch_Year,(c.Course_Name +'-'+dt.Dept_Name+'-'+CONVERT(varchar(10), r.Current_Semester)+'-'+Sections) as Degree  from HT_HostelRegistration hs,Registration r,HM_HostelMaster hd,Degree d,Department dt,Course c ,Floor_Master f,Room_Detail rm ,Building_Master B where d.Degree_Code =r.degree_code and d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and hd.HostelMasterPK=hs.HostelMasterFK and hs.APP_No=r.App_No and Stud_Type='Hostler' and r.Roll_No = '" + rollno + "' and f.Floorpk=hs.FloorFK and rm.RoomPk=hs.RoomFK and hs.BuildingFK=B.Code";
            ds1 = da.select_method_wo_parameter(select, "Text");
            if (ds1.Tables[0].Rows.Count > 0)
            {
                txt_gatebatch.Text = Convert.ToString(ds1.Tables[0].Rows[0]["Batch_Year"]);
                txt_degreq.Text = Convert.ToString(ds1.Tables[0].Rows[0]["Course_Name"]);
                txt_deptreq.Text = Convert.ToString(ds1.Tables[0].Rows[0]["Dept_Name"]);
                txt_semreq.Text = Convert.ToString(ds1.Tables[0].Rows[0]["Current_Semester"]);
                txt_gateflr.Text = Convert.ToString(ds1.Tables[0].Rows[0]["Floor_Name"]);
                txt_gateroom.Text = Convert.ToString(ds1.Tables[0].Rows[0]["Room_type"]);
                txt_gatehostel.Text = Convert.ToString(ds1.Tables[0].Rows[0]["HostelName"]);
                txt_gatebuli.Text = Convert.ToString(ds1.Tables[0].Rows[0]["Building_Name"]);
                txt_rollreq.Text = Convert.ToString(ds1.Tables[0].Rows[0]["Roll_No"]);
                txt_namereq.Text = Convert.ToString(ds1.Tables[0].Rows[0]["stud_name"]);
                txt_secreq.Text = Convert.ToString(ds1.Tables[0].Rows[0]["Sections"]);
                txt_gatermname.Text = Convert.ToString(ds1.Tables[0].Rows[0]["Room_Name"]);
                bindgridleave();
            }
        }
        catch
        {
        }
    }
    public void view9_event()
    {
        string activerow = "";
        string query = "";
        string req_date = "";
        string name = "";
        string loctyp = "";
        string batch = "";
        string degree = "";
        string branch = "";
        string sem = "";
        if (rdo_approval.Checked == true)
        {
            btn_app_eventsave.Visible = true;
            btn_event_reject.Visible = true;
            btn_approval.Visible = true; //poo
            btn_reject.Visible = true;   //poo 
        }
        else
        {
            btn_app_eventsave.Visible = false;
            btn_event_reject.Visible = false;
            btn_approval.Visible = false; //poo
            btn_reject.Visible = false;   //poo 
        }
        activerow = Fpspread9.ActiveSheetView.ActiveRow.ToString();
        string reqpk = "";
        string req_no = "";
        reqpk = Convert.ToString(Fpspread9.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
        req_no = d2.GetFunction("select RequestCode from RQ_Requisition where RequestType=7 and RequisitionPK='" + reqpk + "'");
        TextBox8.Text = reqpk;
        rqustn_no_event.Text = req_no;
        query = "select distinct ReqApproveStage,IsCommonParticipate,ReqAppStatus,RequestType,ReqEventName,RequestCode,ReqAppNo,CONVERT(VARCHAR(11),ReqFromDate,103) as ReqFromDate,CONVERT(VARCHAR(11),ReqToDate,103) as ReqToDate,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,ReqLocType FROM RQ_Requisition R ,staff_appl_master A,staffmaster M WHERE RequestType=7 AND R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and RequestCode='" + req_no + "' and RequisitionPK='" + reqpk + "'";
        query = query + "select distinct RequisitionFK,ActionPK,ACtionDesc,OutdoorLoc,BuildCode,FloorNo,RoomNo,(Select MasterValue FROM CO_MasterValues T WHERE ActionName = T.MasterCode) ActionName,StartTime,EndTime,OutdoorLoc from RQ_ReqActionDet a,RQ_Requisition R  where a.RequisitionFK=RequisitionPK and RequisitionFK='" + reqpk + "'   ";
        query = query + "SELECT ApplNo,BatchYear,DegreeCode,Semester FROM RQ_EventMemberDet where RequisitionFK='" + reqpk + "' and  ISNULL(MemType,'0')=0";
        query = query + "SELECT ApplNo,BatchYear,DegreeCode,Semester FROM RQ_EventMemberDet where RequisitionFK='" + reqpk + "' and  ISNULL(MemberAction,'0')=0 and ISNULL(ActionType,'0')=0 and ISNULL(BatchYear,'0')=0";
        query = query + " SELECT ApplNo,BatchYear,DegreeCode,Semester FROM RQ_EventMemberDet where RequisitionFK='" + reqpk + "'";
        query = query + "SELECT (Select MasterValue FROM CO_MasterValues T WHERE Institution = T.MasterCode) Institution FROM RQ_EventMemberDet where RequisitionFK='" + reqpk + "' and  ISNULL(MemberAction,'0')=0 and ISNULL(ActionType,'0')=0 and ISNULL(BatchYear,'0')=0 and ISNULL(ActionFK,'0')=0 and ISNULL(ActionType,'0')=0 and ISNULL(memtype,'0')=0";
        query = query + "SELECT (Select MasterValue FROM CO_MasterValues T WHERE ApplNo = T.MasterCode) ApplNo FROM RQ_EventMemberDet where RequisitionFK='" + reqpk + "' and  ISNULL(MemberAction,'0')=0 and ISNULL(ActionType,'0')=0 and ISNULL(BatchYear,'0')=0 and MemType='3'";
        ds = d2.select_method_wo_parameter(query, "Text");
        if (ds.Tables[0].Rows.Count > 0)
        {
            req_date = ds.Tables[0].Rows[0]["RequestDate"].ToString();
            string common = ds.Tables[0].Rows[0]["IsCommonParticipate"].ToString();
            string[] ay = req_date.Split('/');
            TextBox6.Text = ay[0].ToString() + "/" + ay[1].ToString() + "/" + ay[2].ToString();
            name = ds.Tables[0].Rows[0]["ReqEventName"].ToString();
            string getevent = d2.GetFunction("select MasterValue from CO_MasterValues where MasterCode='" + name + "' and collegecode='" + collegecode1 + "'");
            txtothers.Text = getevent;
            loctyp = ds.Tables[0].Rows[0]["ReqLocType"].ToString();
            if (loctyp == "0")
            {
                rdb1.Checked = true;
                rdb2.Checked = false;
            }
            else
            {
                rdb1.Checked = false;
                rdb2.Checked = true;
            }
        }
        if (rdb1.Checked == true)
        {
            DIV_indoor.Visible = true;
            DIV_outdoor.Visible = false;
        }
        else
        {
            DIV_indoor.Visible = false;
            DIV_outdoor.Visible = true;
        }
        if (ds.Tables[1].Rows.Count > 0)
        {
            DataTable dt = new DataTable();
            dt.Columns.Add("Dummy");
            dt.Columns.Add("Dummy1");
            dt.Columns.Add("Dummy2");
            dt.Columns.Add("Dummy3");
            dt.Columns.Add("Dummy4");
            dt.Columns.Add("Dummay5");
            dt.Columns.Add("Dummay6");
            dt.Columns.Add("Dummay7");
            for (int i = 0; i < ds.Tables[1].Rows.Count; i++)
            {
                gridadd.Visible = true;
                string actnamecountpk = ds.Tables[1].Rows[i]["ActionPK"].ToString();
                string countperson = d2.GetFunction("select COUNT(applno) as count from RQ_EventMemberDet where ActionFK='" + actnamecountpk + "' and ActionType='1'");
                string countperson1 = d2.GetFunction("select COUNT(applno) as count from RQ_EventMemberDet where ActionFK='" + actnamecountpk + "' and ActionType='2'");
                DataRow dr;
                dr = dt.NewRow();
                dr[0] = ds.Tables[1].Rows[i]["ActionName"].ToString();
                dr[1] = ds.Tables[1].Rows[i]["ACtionDesc"].ToString();
                dr[2] = ds.Tables[1].Rows[i]["StartTime"].ToString();
                dr[3] = ds.Tables[1].Rows[i]["EndTime"].ToString();
                if (rdb1.Checked == true)
                {
                    dr[4] = ds.Tables[1].Rows[i]["BuildCode"].ToString() + "-" + ds.Tables[1].Rows[i]["FloorNo"].ToString() + "-" + ds.Tables[1].Rows[i]["RoomNo"].ToString();
                }
                else
                {
                    dr[4] = ds.Tables[1].Rows[i]["OutdoorLoc"].ToString();
                }
                dr[5] = countperson;
                string gg = countperson;
                dr[6] = countperson1;
                dt.Rows.Add(dr);
            }
            if (dt.Rows.Count > 0)
            {
                gridadd.DataSource = dt;
                gridadd.DataBind();
            }
        }
        if (rdb2.Checked == true)
        {
            if (ds.Tables[5].Rows.Count > 0)
            {
                for (int i = 0; i < ds.Tables[5].Rows.Count; i++)
                {
                    txt_outinstitution.Text = ds.Tables[5].Rows[i]["Institution"].ToString();
                }
            }
            if (ds.Tables[6].Rows.Count > 0)
            {
                for (int i = 0; i < ds.Tables[6].Rows.Count; i++)
                {
                    txt_outorganizer.Text = ds.Tables[6].Rows[i]["ApplNo"].ToString();
                }
            }
        }
        if (rdb1.Checked == true)
        {
            string bulname = "";
            string semester = "";
            string applno = "";
            string staffcheck = "";
            string semcount = "";
            if (ds.Tables[2].Rows.Count > 0)
            {
                for (int i = 0; i < ds.Tables[2].Rows.Count; i++)
                {
                    ddl_org_batch.SelectedItem.Text = ds.Tables[2].Rows[i]["BatchYear"].ToString();
                    batch = ds.Tables[2].Rows[i]["BatchYear"].ToString();
                }
            }
            if (ds.Tables[3].Rows.Count > 0)
            {
                for (int i = 0; i < ds.Tables[3].Rows.Count; i++)
                {
                    applno = ds.Tables[3].Rows[i]["ApplNo"].ToString();
                    if (applno != "")
                    {
                        if (staffcheck == "")
                        {
                            staffcheck = applno;
                        }
                        else
                        {
                            staffcheck = staffcheck + "'" + "," + "'" + applno;
                        }
                    }
                }
            }
            if (ds.Tables[4].Rows.Count > 0)
            {
                for (int i = 0; i < ds.Tables[4].Rows.Count; i++)
                {
                    degree = ds.Tables[4].Rows[i]["DegreeCode"].ToString();
                    semester = ds.Tables[4].Rows[i]["Semester"].ToString();
                    if (degree != "")
                    {
                        if (bulname == "")
                        {
                            bulname = degree;
                        }
                        else
                        {
                            bulname = bulname + "'" + "," + "'" + degree;
                        }
                    }
                    if (semester != "")
                    {
                        if (semcount == "")
                        {
                            semcount = semester;
                        }
                        else
                        {
                            semcount = semcount + "" + "," + "" + semester;
                        }
                    }
                    txt_org_sem.Text = semcount;
                }
            }
            query = "select distinct degree.degree_code,department.dept_name,degree.Acronym  from degree,department,course,deptprivilages where course.course_id=degree.course_id  and department.dept_code=degree.dept_code and course.college_code = degree.college_code and department.college_code = degree.college_code and deptprivilages.Degree_code=degree.Degree_code and degree.degree_code in('" + bulname + "')";
            ds1 = d2.select_method(query, hat, "Text");
            string degree1 = "";
            string bulname1 = "";
            if (ds1.Tables[0].Rows.Count > 0)
            {
                for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                {
                    degree1 = ds1.Tables[0].Rows[i]["dept_name"].ToString();
                    if (bulname1 == "")
                    {
                        bulname1 = degree1;
                    }
                    else
                    {
                        bulname1 = bulname1 + "'" + "," + "'" + degree1;
                    }
                    txt_branch.Text = bulname1;
                }
            }
            query = "select distinct degree.course_id,course.course_name from degree,course,deptprivilages  where course.course_id=degree.course_id and course.college_code = degree.college_code  and degree.college_code='" + collegecode1 + "' and deptprivilages.Degree_code=degree.Degree_code and degree.degree_code in('" + bulname + "') ";
            ds1 = d2.select_method_wo_parameter(query, "Text");
            string degree11 = "";
            string bulname11 = "";
            if (ds1.Tables[0].Rows.Count > 0)
            {
                for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                {
                    degree11 = ds1.Tables[0].Rows[i]["course_name"].ToString();
                    if (bulname11 == "")
                    {
                        bulname11 = degree11;
                    }
                    else
                    {
                        bulname11 = bulname11 + "'" + "," + "'" + degree11;
                    }
                    txt_degree.Text = bulname11;
                }
            }
            string srisql = "select distinct s.staff_name,s.staff_code from staffmaster s,staff_appl_master sa,hrdept_master hr,desig_master dm where s.appl_no=sa.appl_no and sa.dept_code=hr.dept_code and dm.desig_code=sa.desig_code and settled=0 and resign =0 and sa.appl_id in('" + staffcheck + "') ";
            ds1 = d2.select_method(srisql, hat, "Text");
            string staff = "";
            string namestf = "";
            if (ds1.Tables[0].Rows.Count > 0)
            {
                for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                {
                    staff = ds1.Tables[0].Rows[i]["staff_name"].ToString();
                    if (namestf == "")
                    {
                        namestf = staff;
                    }
                    else
                    {
                        namestf = namestf + "" + "," + "" + staff;
                    }
                }
                txt_staffnamemul.Text = namestf;
            }
        }
        view7_others();
    }
    public void loadreqby()
    {
        ds.Tables.Clear();
        string sql = "select TextCode,TextVal from TextValTable where TextCriteria ='GRTyp'";
        ds = d2.select_method_wo_parameter(sql, "TEXT");
        if (ds.Tables[0].Rows.Count > 0)
        {
            ddlrequest.DataSource = ds;
            ddlrequest.DataTextField = "TextVal";
            ddlrequest.DataValueField = "TextCode";
            ddlrequest.DataBind();
            ddlrequest.Items.Insert(0, new ListItem("Select", "0"));
        }
        else
        {
            ddlrequest.Items.Insert(0, new ListItem("Select", "0"));
        }
    }
    public void loadreqmode()
    {
        ds.Tables.Clear();
        string sql = "select TextCode,TextVal from TextValTable where TextCriteria ='GRMod'";
        ds = d2.select_method_wo_parameter(sql, "TEXT");
        if (ds.Tables[0].Rows.Count > 0)
        {
            ddlrequestmode.DataSource = ds;
            ddlrequestmode.DataTextField = "TextVal";
            ddlrequestmode.DataValueField = "TextCode";
            ddlrequestmode.DataBind();
            ddlrequestmode.Items.Insert(0, new ListItem("Select", "0"));
        }
        else
        {
            ddlrequestmode.Items.Insert(0, new ListItem("Select", "0"));
        }
    }
    public void res()
    {
        try
        {
            ddlgatepass.Items.Insert(ddlgatepass.Items.Count, "Others");
        }
        catch
        {
        }
    }
    public void resrequest()
    {
        try
        {
            ddlrequest.Items.Insert(ddlrequest.Items.Count, "Others");
        }
        catch
        {
        }
    }
    public void req_mode()
    {
        try
        {
            ddlrequestmode.Items.Insert(ddlrequestmode.Items.Count, "Others");
        }
        catch
        {
        }
    }


    //Saranyadevi 
    public void btn_itm_save_Click(object sender, EventArgs e)
    {
        try
        {

            //Added by Saranyaevi 5.4.2018
            string getappno = "";
            double value1 = 0;
            double value2 = 0;
            string stage1 = "";
            string getappid = "";
            string pkcode = "";
            string sqlcmd = "";
            string reqno_item = Convert.ToString(txt_reqno.Text);
            string date = DateTime.Now.ToString("MM/dd/yyyy");
            string req = Convert.ToString(TextBox2.Text);
            bool result = false;
            int q1 = 0;
            if (div_itmreqst.Visible == true)
            {
                pkcode = req;
                stage1 = d2.GetFunction("select ReqApproveStage from RQ_Requisition where RequisitionPK='" + pkcode + "'");
            }
            if (staffcodesession.Trim() == "" || staffcodesession.Trim() == null)
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "You Are Not Have A Approval Permission";
            }
            else
            {
                if (stage1 == "0")
                {
                    value2 = 1;
                }
                else
                {
                    value1 = Convert.ToDouble(stage1);
                    value2 = value1 + 1;
                    // getappid = d2.GetFunction("select ReqAppStaffAppNo from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'");
                }
                sqlcmd = "select distinct ReqAppStaffAppNo,ReqApproveStage,RequestType,ReqApproveStage,ReqAppPriority from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "' ";
                ds = d2.select_method_wo_parameter(sqlcmd, "Text");
                DataView dv = new DataView();
                if (ds.Tables[0].Rows.Count > 0)
                {
                    for (int loop = 0; loop < ds.Tables[0].Rows.Count; loop++)
                    {
                        string pri = Convert.ToString(ds.Tables[0].Rows[loop]["ReqAppPriority"]);
                        ds.Tables[0].DefaultView.RowFilter = "ReqApproveStage='" + value2 + "' and RequestType=1 ";
                        dv = ds.Tables[0].DefaultView;
                        if (dv.Count > 0)
                        {
                            //Added By Saranyadevi 4.4.2018
                            for (int dvi = 0; dvi < dv.Count; dvi++)
                            {
                                getappid = Convert.ToString(dv[dvi]["ReqAppStaffAppNo"]);
                                getappno = d2.GetFunction("select staff_code  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and appl_id='" + getappid + "'");
                                // getappid = d2.GetFunction("select ReqAppStaffAppNo from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'");
                                if (getappno == staffcodesession)
                                {
                                    if (div_itmreqst.Visible == true)
                                    {
                                        string update_query = "update RQ_Requisition set ReqApproveStage='" + value2 + "',ReqAppStatus='0' ,ReqAppStaffAppNo='" + getappid + "' where RequisitionPK='" + pkcode + "' and RequestCode='" + reqno_item + "'";
                                        d2.update_method_wo_parameter(update_query, "Text");
                                        string select_query = "select ReqApproveStage,ReqAppStaffAppNo,ReqAppStatus,RequisitionPK from RQ_Requisition where RequisitionPK='" + pkcode + "' ";
                                        ds = d2.select_method_wo_parameter(select_query, "Text");
                                        if (ds.Tables[0].Rows.Count > 0)
                                        {
                                            for (int j = 0; j < ds.Tables[0].Rows.Count; j++)
                                            {
                                                string pkv = Convert.ToString(ds.Tables[0].Rows[j]["RequisitionPK"]);
                                                string stage = Convert.ToString(ds.Tables[0].Rows[j]["ReqApproveStage"]);
                                                string status = Convert.ToString(ds.Tables[0].Rows[j]["ReqAppStatus"]);
                                                string appno = Convert.ToString(ds.Tables[0].Rows[j]["ReqAppStaffAppNo"]);
                                                string insert_query = "insert into RQ_RequestionApprove(ReqApproveDate,ReqApproveStage,ReqAppStatus,RequisitionFK,ReqAppStaffAppNo,ReqAppPriority)values('" + date + "','" + stage + "','" + status + "','" + pkv + "','" + appno + "','" + pri + "')";
                                                d2.update_method_wo_parameter(insert_query, "Text");

                                                string fnl1 = d2.GetFunction("select ReqApproveStage from RQ_Requisition where RequisitionPK='" + pkcode + "'");
                                                string fnl2 = d2.GetFunction("select ReqApproveStateCount from RQ_RequestHierarchy where RequestType='1' and ReqAppStaffAppNo='" + getappid + "'  order by RequestHierarchyPK desc");

                                                if (fnl1 == fnl2)
                                                {
                                                    update_query = "update RQ_Requisition set ReqApproveStage='" + value2 + "',ReqAppStatus='1',ReqAppStaffAppNo='" + getappid + "' where RequisitionPK='" + pkcode + "' and RequestCode='" + reqno_item + "'";
                                                    q1 = d2.update_method_wo_parameter(update_query, "Text");
                                                }
                                                string depcode = getdepartmentcode(txt_dept.Text);
                                                int cnt = 0;
                                                if (!string.IsNullOrEmpty(depcode))
                                                {
                                                    for (int i = 0; i < SelectdptGrid.Rows.Count; i++)
                                                    {

                                                        CheckBox cbsel = (CheckBox)SelectdptGrid.Rows[i].FindControl("cb_select");
                                                        //int RowCnt = Convert.ToInt32(row.RowIndex);
                                                        if (cbsel.Checked == true)
                                                        {
                                                            cnt++;
                                                            string itemcode = Convert.ToString((SelectdptGrid.Rows[i].FindControl("lbl_itemcode") as Label).Text);
                                                            Int64 ItemFK = Convert.ToInt64(d2.GetFunction("select ItemPK from IM_ItemMaster where ItemCode='" + itemcode + "'"));
                                                            decimal ReqQty = Convert.ToDecimal((SelectdptGrid.Rows[i].FindControl("txt_quantity") as TextBox).Text);

                                                            //saran 30.11.2018
                                                            TextBox ttcost = (TextBox)SelectdptGrid.Rows[i].FindControl("txt_SuggestedCost");
                                                            decimal cost = 0;
                                                            if (ttcost.Text != "")
                                                                cost = Convert.ToDecimal(ttcost.Text);

                                                            decimal sugcost = ReqQty * cost;

                                                            if (ReqQty != null)
                                                            {
                                                                string updatequery = "update RQ_RequisitionDet set ReqQty='" + ReqQty + "',ReqAppStatus='1',suggestedcost='" + sugcost + "' where RequisitionFK='" + pkcode + "' and ItemFK='" + ItemFK + "' and DeptFK='" + depcode + "'";
                                                                q1 = d2.update_method_wo_parameter(updatequery, "Text");
                                                                TextBox txtCost = (TextBox)SelectdptGrid.Rows[i].FindControl("txt_Cost");
                                                                txtCost.Text = sugcost.ToString();


                                                            }
                                                            else
                                                            {
                                                                imgdiv2.Visible = true;
                                                                lbl_alert.Text = "Please Fill The Quantity Value";
                                                            }
                                                        }
                                                    }
                                                    if (cnt == 0)
                                                    {

                                                        imgdiv2.Visible = true;
                                                        lbl_alert.Text = "Please Select Atleast one Approval Items";
                                                        return;
                                                    }

                                                    //else 
                                                    //{
                                                    //    update_query = "update RQ_Requisition set ReqApproveStage='" + value2 + "',ReqAppStatus='0',ReqAppStaffAppNo='" + getappid + "' where RequisitionPK='" + pkcode + "' and RequestCode='" + reqno_item + "'";
                                                    //    q1 = d2.update_method_wo_parameter(update_query, "Text");

                                                    //    string depcode = getdepartmentcode(txt_dept.Text);
                                                    //    for (int i = 0; i < SelectdptGrid.Rows.Count; i++)
                                                    //    {
                                                    //        string itemcode = Convert.ToString((SelectdptGrid.Rows[i].FindControl("lbl_itemcode") as Label).Text);
                                                    //        Int64 ItemFK = Convert.ToInt64(d2.GetFunction("select ItemPK from IM_ItemMaster where ItemCode='" + itemcode + "'"));
                                                    //        decimal ReqQty = Convert.ToDecimal((SelectdptGrid.Rows[i].FindControl("txt_quantity") as TextBox).Text);
                                                    //        if (ReqQty != null)
                                                    //        {
                                                    //            string updatequery = "update RQ_RequisitionDet set ReqQty='" + ReqQty + "' where RequisitionFK='" + pkcode + "' and ItemFK='" + ItemFK + "' and DeptFK='" + depcode + "'";
                                                    //            q1 = d2.update_method_wo_parameter(updatequery, "Text");


                                                    //        }
                                                    //        else
                                                    //        {
                                                    //            imgdiv2.Visible = true;
                                                    //            lbl_alert.Text = "Please Fill The Quantity Value";
                                                    //        }
                                                    //    }

                                                    //}
                                                    //if (sms_app == "2")
                                                    //{
                                                    //    sms();
                                                    //}
                                                    //cmd By Saranyadevi 4.4.2018
                                                    //imgdiv2.Visible = true;
                                                    //lbl_alert.Text = "Approved Successfully";
                                                    result = true;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            //Added By Saranyadevi 4.4.2018
                            if (result == true)
                            {
                                imgdiv2.Visible = true;
                                lbl_alert.Text = "Approved Successfully";
                            }
                            else
                            {
                                imgdiv2.Visible = true;
                                lbl_alert.Text = "You Cannot Give the Approval Permission";
                            }

                        }
                    }
                }
            }
        }
        catch
        {
        }
    }

    //Added By Saranyadevi 5.4.2018
    public string getdepartmentcode(string deptname)
    {
        string deptcode = d2.GetFunction("select  Dept_Code  from Department where Dept_Name ='" + deptname + "' and college_code='" + collegecode1 + "'");
        return deptcode;
    }
    //End By Saranyadevi 5.4.2018
    public void sms()
    {
        access1();
        string reqno_item = "";
        string pkcode = "";
        string rq_appno = "";
        string apprvl_stage = "";
        string mob = "";
        string appl_stg = "";
        user_id = d2.GetFunction("select SMS_User_ID from Track_Value where college_code='" + collegecode1 + "'");
        string getval = d2.GetUserapi(user_id);
        string[] spret = getval.Split('-');
        if (spret.GetUpperBound(0) == 1)
        {
            SenderID = spret[0].ToString();
            Password = spret[1].ToString();
            Session["api"] = user_id;
            Session["senderid"] = SenderID;
        }
        string appno = d2.GetFunction("select ReqAppNo from RQ_Requisition where RequestType=6 and RequisitionPK='" + smsstudrq + "'");
        string reasongate = d2.GetFunction("select GateReqReason from RQ_Requisition where RequestType=6 and requisitionpk='" + smsstudrq + "'");
        string reason = d2.GetFunction("select MasterValue from CO_MasterValues where MasterCriteria='GRRea' and MasterCode='" + reasongate + "'");
        string q = "select a.stud_name, r.Roll_no,r.Stud_Type,c.Course_Name,dt.Dept_Name,r.Current_Semester ,r.Sections, a.parent_name from applyn a,Registration r ,Degree d,course c,Department dt where   a.app_no=r.app_no   and  r.degree_code=d.Degree_Code and d.Course_Id=c.Course_Id and  d.Dept_Code=dt.Dept_Code and a.app_no='" + appno + "'";
        ds = d2.select_method_wo_parameter(q, "Text");
        if (ds.Tables[0].Rows.Count > 0)
        {
            string name = Convert.ToString(ds.Tables[0].Rows[0]["stud_name"]);
            string course = Convert.ToString(ds.Tables[0].Rows[0]["Course_Name"]);
            string dept = Convert.ToString(ds.Tables[0].Rows[0]["Dept_Name"]);
            string date = DateTime.Now.ToString("dd/MM/yyyy");
            // strmsg = "Your ward miss " + name + "-" + course + "-" + dept + " from home on" + date;
            strmsg = "Your ward Ms." + name + " request approved to go for " + reason + " on " + date;
        }
        if (sms_mom == "1")
        {
            string momnum = d2.GetFunction("select parentM_Mobile from applyn where app_no='" + appno + "'");
            mobilenos = momnum;
            // mobilenos = "9585698019";
            if (mobilenos != "")
            {
                int smsdet = d2.send_sms(user_id, collegecode1, usercode, mobilenos, strmsg, isst);
                //string strpath = "http://dnd.airsmsmarketing.info/api/sendmsg.php?user=" + user_id + "&pass=" + Password + "&sender=" + SenderID + "&phone=" + mobilenos + "&text=" + strmsg + "&priority=ndnd&stype=normal";
                //smsreport(strpath, isst);
            }
        }
        if (sms_dad == "2")
        {
            string fathernum = d2.GetFunction("select parentF_Mobile from applyn where app_no='" + appno + "'");
            mobilenos = fathernum;
            //mobilenos = "9585698019";
            if (mobilenos != "")
            {
                int smsdet = d2.send_sms(user_id, collegecode1, usercode, mobilenos, strmsg, isst);
                //string strpath = "http://dnd.airsmsmarketing.info/api/sendmsg.php?user=" + user_id + "&pass=" + Password + "&sender=" + SenderID + "&phone=" + mobilenos + "&text=" + strmsg + "&priority=ndnd&stype=normal";
                //smsreport(strpath, isst);
            }
        }
        if (sms_stud == "3")
        {
            string studnum = d2.GetFunction("select Student_Mobile from applyn where app_no='" + appno + "'");
            mobilenos = studnum;
            if (mobilenos != "")
            {
                int smsdet = d2.send_sms(user_id, collegecode1, usercode, mobilenos, strmsg, isst);
                //string strpath = "http://dnd.airsmsmarketing.info/api/sendmsg.php?user=" + user_id + "&pass=" + Password + "&sender=" + SenderID + "&phone=" + mobilenos + "&text=" + strmsg + "&priority=ndnd&stype=normal";
                //smsreport(strpath, isst);
            }
        }
    }
    //public void sms1(string req)
    //{
    //    user_id = d2.GetFunction("select SMS_User_ID from Track_Value where college_code='" + collegecode1 + "'");
    //    string getval = d2.GetUserapi(user_id);
    //    string[] spret = getval.Split('-');
    //    if (spret.GetUpperBound(0) == 1)
    //    {
    //        SenderID = spret[0].ToString();
    //        Password = spret[1].ToString();
    //        Session["api"] = user_id;
    //        Session["senderid"] = SenderID;
    //    }
    //    string appno = d2.GetFunction("select ReqAppNo from RQ_Requisition where RequestType=5 and RequisitionPK='" + req + "'");
    //    if (rejectflag == true)
    //    {
    //        strmsg = "Your Request Was Rejected";
    //    }
    //    else if (approvalflag == true)
    //    {
    //        strmsg = "Your Request Was Approved Successfully!";
    //    }
    //    string staffnum = d2.GetFunction("select per_mobileno from staff_appl_master where appl_id='" + appno + "'");
    //    mobilenos = staffnum;
    //    if (mobilenos != "")
    //    {
    //        string strpath = "http://dnd.airsmsmarketing.info/api/sendmsg.php?user=" + user_id + "&pass=" + Password + "&sender=" + SenderID + "&phone=" + mobilenos + "&text=" + strmsg + "&priority=ndnd&stype=normal";
    //        smsreport(strpath, isst);
    //    }
    //}
    public void sms1(string req, string strmsg)
    {
        user_id = d2.GetFunction("select SMS_User_ID from Track_Value where college_code='" + collegecode1 + "'");
        string getval = d2.GetUserapi(user_id);
        string[] spret = getval.Split('-');
        if (spret.GetUpperBound(0) == 1)
        {
            SenderID = spret[0].ToString();
            Password = spret[1].ToString();
            Session["api"] = user_id;
            Session["senderid"] = SenderID;
        }
        string appno = d2.GetFunction("select ReqAppNo from RQ_Requisition where RequestType=5 and RequisitionPK='" + req + "'");
        // strmsg = "Approved Successfully!";
        string staffnum = d2.GetFunction("select per_mobileno from staff_appl_master where appl_id='" + appno + "'");
        mobilenos = staffnum;
        if (mobilenos != "")
        {
            //string strpath = "http://dnd.airsmsmarketing.info/api/sendmsg.php?user=" + user_id + "&pass=" + Password + "&sender=" + SenderID + "&phone=" + mobilenos + "&text=" + strmsg + "&priority=ndnd&stype=normal";
            //smsreport(strpath, isst);
            isst = "1";
            int smsdet = d2.send_sms(user_id, collegecode1, usercode, mobilenos, strmsg, isst);
        }
    }
    public void smsreport(string uril, string isstaff)
    {
        try
        {
            string date = DateTime.Now.ToString("MM/dd/yyyy");
            WebRequest request = WebRequest.Create(uril);
            WebResponse response = request.GetResponse();
            Stream data = response.GetResponseStream();
            StreamReader sr = new StreamReader(data);
            string strvel = sr.ReadToEnd();
            string groupmsgid = "";
            groupmsgid = strvel.Trim().ToString();
            int sms = 0;
            string smsreportinsert = "";
            string[] split_id = groupmsgid.Split(' ');
            string[] split_mobileno = mobilenos.Split(new Char[] { ',' });
            for (int icount = 0; icount <= split_mobileno.GetUpperBound(0); icount++)
            {
                string group_id = split_id[icount].ToString();
                smsreportinsert = "insert into smsdeliverytrackmaster (mobilenos,groupmessageid,message,college_code,isstaff,date )values( '" + split_mobileno[icount] + "','" + group_id + "','" + strmsg + "','" + collegecode1 + "','" + isstaff + "','" + date + "' )";
                sms = d2.insert_method(smsreportinsert, hat, "Text");
            }
        }
        catch
        {
        }
    }
    public void btn_ser_save_Click(object sender, EventArgs e)
    {
        try
        {
            string getappno = "";
            double value1 = 0;
            double value2 = 0;
            string stage1 = "";
            string getappid = "";
            string pkcode = "";
            string sqlcmd = "";
            string date = DateTime.Now.ToString("MM/dd/yyyy");
            string reqno_sevice = Convert.ToString(txt_serreqno.Text);
            string req = Convert.ToString(TextBox3.Text);
            if (div_service.Visible == true)
            {
                pkcode = req;
                stage1 = d2.GetFunction("select ReqApproveStage from RQ_Requisition where RequisitionPK='" + pkcode + "'");
            }
            if (staffcodesession.Trim() == "" || staffcodesession.Trim() == null)
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "You Are Not Have A Approval Permission";
            }
            else
            {
                if (stage1 == "0")
                {
                    value2 = 1;
                }
                else
                {
                    value1 = Convert.ToDouble(stage1);
                    value2 = value1 + 1;
                    // getappid = d2.GetFunction("select ReqAppStaffAppNo from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'");
                }
                sqlcmd = "select ReqAppStaffAppNo,ReqApproveStage,RequestType,ReqApproveStage from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "' ";
                ds = d2.select_method_wo_parameter(sqlcmd, "Text");
                DataView dv = new DataView();
                if (ds.Tables[0].Rows.Count > 0)
                {
                    for (int loop = 0; loop < ds.Tables[0].Rows.Count; loop++)
                    {
                        ds.Tables[0].DefaultView.RowFilter = "ReqApproveStage='" + value2 + "' and RequestType=2";
                        dv = ds.Tables[0].DefaultView;
                        if (dv.Count > 0)
                        {
                            getappid = Convert.ToString(dv[0]["ReqAppStaffAppNo"]);
                            getappno = d2.GetFunction("select staff_code  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and appl_id='" + getappid + "'");
                            // getappid = d2.GetFunction("select ReqAppStaffAppNo from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'");
                            if (getappno == staffcodesession)
                            {
                                if (div_service.Visible == true)
                                {
                                    string update_query = "update RQ_Requisition set ReqApproveStage='" + value2 + "',ReqAppStatus='0',ReqAppStaffAppNo='" + getappid + "' where RequisitionPK='" + pkcode + "' and RequestCode='" + reqno_sevice + "'";
                                    d2.update_method_wo_parameter(update_query, "Text");
                                    string select_query = "select ReqApproveStage,ReqAppStaffAppNo,ReqAppStatus,RequisitionPK from RQ_Requisition where RequisitionPK='" + pkcode + "' ";
                                    ds = d2.select_method_wo_parameter(select_query, "Text");
                                    if (ds.Tables[0].Rows.Count > 0)
                                    {
                                        for (int j = 0; j < ds.Tables[0].Rows.Count; j++)
                                        {
                                            string pkv = Convert.ToString(ds.Tables[0].Rows[j]["RequisitionPK"]);
                                            string stage = Convert.ToString(ds.Tables[0].Rows[j]["ReqApproveStage"]);
                                            string status = Convert.ToString(ds.Tables[0].Rows[j]["ReqAppStatus"]);
                                            string appno = Convert.ToString(ds.Tables[0].Rows[j]["ReqAppStaffAppNo"]);
                                            string insert_query = "insert into RQ_RequestionApprove(ReqApproveDate,ReqApproveStage,ReqAppStatus,RequisitionFK,ReqAppStaffAppNo,ReqAppPriority)values('" + date + "','" + stage + "','" + status + "','" + pkv + "','" + getappid + "','')";
                                            d2.update_method_wo_parameter(insert_query, "Text");
                                            string fnl1 = d2.GetFunction("select ReqApproveStage from RQ_Requisition where RequisitionPK='" + pkcode + "'");
                                            string fnl2 = d2.GetFunction("select ReqApproveStateCount from RQ_RequestHierarchy where RequestType='2' and ReqAppStaffAppNo='" + getappid + "'");
                                            if (fnl1 == fnl2)
                                            {
                                                update_query = "update RQ_Requisition set ReqApproveStage='" + value2 + "',ReqAppStatus='1',ReqAppStaffAppNo='" + getappid + "' where RequisitionPK='" + pkcode + "' and RequestCode='" + reqno_sevice + "'";
                                                d2.update_method_wo_parameter(update_query, "Text");
                                            }
                                            //if (sms_app == "2")
                                            //{
                                            //    sms();
                                            //}
                                            imgdiv2.Visible = true;
                                            lbl_alert.Text = "Approved Successfully";
                                        }
                                    }
                                }
                            }
                            else
                            {
                                imgdiv2.Visible = true;
                                lbl_alert.Text = "You Cannot Give the Approval Permission";
                            }
                        }
                    }
                }
            }
        }
        catch
        {
        }
    }
    public void btn_visit_save_Click(object sender, EventArgs e)
    {
        try
        {
            string getappno = "";
            double value1 = 0;
            double value2 = 0;
            string stage1 = "";
            string getappid = "";
            string pkcode = "";
            string sqlcmd = "";
            string date = DateTime.Now.ToString("MM/dd/yyyy");
            string Requisition_no_visit = Convert.ToString(txt_visitorreqno.Text);
            string req = Convert.ToString(TextBox4.Text);
            if (Convert.ToString(Session["gatevis"]) == "1")
            {
                //pkcode = req;
                //stage1 = d2.GetFunction("select ReqApproveStage from RQ_Requisition where RequisitionPK='" + pkcode + "'");
                popview.Visible = true;
                div_visitor.Visible = true;
            }

            if (div_visitor.Visible == true)
            {
                if (Convert.ToString(Session["gatevis"]) == "1")
                {
                    popview.Visible = false;
                    div_visitor.Visible = false;
                }
                pkcode = req;
                stage1 = d2.GetFunction("select ReqApproveStage from RQ_Requisition where RequisitionPK='" + pkcode + "'");

            }
            if (staffcodesession.Trim() == "" || staffcodesession.Trim() == null)
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "You Are Not Have A Approval Permission";
            }
            else
            {
                if (stage1 == "0")
                {
                    value2 = 1;
                }
                else
                {
                    value1 = Convert.ToDouble(stage1);
                    value2 = value1 + 1;
                    // getappid = d2.GetFunction("select ReqAppStaffAppNo from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'");
                }
                sqlcmd = "select ReqAppStaffAppNo,ReqApproveStage,RequestType,ReqApproveStage,ReqAppPriority from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "' ";
                ds = d2.select_method_wo_parameter(sqlcmd, "Text");
                DataView dv = new DataView();
                if (ds.Tables[0].Rows.Count > 0)
                {
                    for (int loop = 0; loop < ds.Tables[0].Rows.Count; loop++)
                    {
                        string pri = Convert.ToString(ds.Tables[0].Rows[loop]["ReqAppPriority"]);
                        ds.Tables[0].DefaultView.RowFilter = "ReqApproveStage='" + value2 + "' and RequestType=3 and ReqAppStaffAppNo='" + LoginStaffApplid + "'";
                        dv = ds.Tables[0].DefaultView;
                        if (dv.Count > 0)
                        {
                            getappid = Convert.ToString(dv[0]["ReqAppStaffAppNo"]);
                            getappno = d2.GetFunction("select staff_code  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and appl_id='" + getappid + "'");
                            //01.06.17 ReqAppNo
                            //string meetstaffapplno = d2.GetFunction("select meetstaffappno from RQ_Requisition where RequisitionPK='" + req + "'");
                            //string meetstaffcode = d2.GetFunction("select staff_code from staffmaster sm,staff_appl_master ap where sm.appl_no=ap.appl_no and sm.appl_no in('" + meetstaffapplno.Replace(",", "','") + ")'");
                            if (getappno == staffcodesession)//meetstaffcode)
                            {
                                if (Convert.ToString(Session["gatevis"]) == "1")
                                {
                                    popview.Visible = true;
                                    div_visitor.Visible = true;
                                }
                                if (div_visitor.Visible == true)
                                {
                                    if (Convert.ToString(Session["gatevis"]) == "1")
                                    {
                                        popview.Visible = false;
                                        div_visitor.Visible = false;
                                    }
                                    string update_query = "update RQ_Requisition set ReqApproveStage='" + value2 + "',ReqAppStatus='0',ReqAppStaffAppNo='" + getappid + "' where RequisitionPK='" + pkcode + "' and RequestCode='" + Requisition_no_visit + "'";
                                    d2.update_method_wo_parameter(update_query, "Text");
                                    string select_query = "select ReqApproveStage,ReqAppStaffAppNo,ReqAppStatus,RequisitionPK from RQ_Requisition where RequisitionPK='" + pkcode + "' ";
                                    ds = d2.select_method_wo_parameter(select_query, "Text");
                                    if (ds.Tables[0].Rows.Count > 0)
                                    {
                                        for (int j = 0; j < ds.Tables[0].Rows.Count; j++)
                                        {
                                            string pkv = Convert.ToString(ds.Tables[0].Rows[j]["RequisitionPK"]);
                                            string stage = Convert.ToString(ds.Tables[0].Rows[j]["ReqApproveStage"]);
                                            string status = Convert.ToString(ds.Tables[0].Rows[j]["ReqAppStatus"]);
                                            string appno = Convert.ToString(ds.Tables[0].Rows[j]["ReqAppStaffAppNo"]);
                                            string insert_query = "insert into RQ_RequestionApprove(ReqApproveDate,ReqApproveStage,ReqAppStatus,RequisitionFK,ReqAppStaffAppNo,ReqAppPriority)values('" + date + "','" + stage + "','" + status + "','" + pkv + "','" + getappid + "','" + pri + "')";
                                            d2.update_method_wo_parameter(insert_query, "Text");
                                            string fnl1 = d2.GetFunction("select ReqApproveStage from RQ_Requisition where RequisitionPK='" + pkcode + "'");
                                            string fnl2 = d2.GetFunction("select ReqApproveStateCount from RQ_RequestHierarchy where RequestType='3' and ReqAppStaffAppNo='" + getappid + "'");
                                            if (fnl1 == fnl2)
                                            {
                                                update_query = "update RQ_Requisition set ReqApproveStage='" + value2 + "',ReqAppStatus='1',ReqAppStaffAppNo='" + getappid + "' where RequisitionPK='" + pkcode + "' and RequestCode='" + Requisition_no_visit + "'";
                                                d2.update_method_wo_parameter(update_query, "Text");
                                            }
                                            access();
                                            if (sms_req == "1")
                                            {
                                                string requestpersonmobileno = txt_visitormob.Text;
                                                string companynameandpersonname = Convert.ToString(txt_cname.Text + "-" + txt_name.Text);
                                                string ReqTime = ddl_hrs.SelectedItem.Text + ":" + ddl_mins.SelectedItem.Text + " " + ddl_ampm.SelectedItem.Text;
                                                visitorsms(Convert.ToString(pkcode), companynameandpersonname, txt_visitdate.Text, ReqTime, txt_visitorpurpose.Text.Trim(), requestpersonmobileno);
                                            }
                                            imgdiv2.Visible = true;
                                            lbl_alert.Text = "Approved Successfully";
                                        }
                                    }
                                }

                            }
                            else
                            {
                                imgdiv2.Visible = true;
                                lbl_alert.Text = "You Cannot Give the Approval Permission";
                            }
                        }
                    }
                }
            }
        }
        catch
        {
        }
        finally
        {
            ScriptManager.RegisterStartupScript(this, GetType(), "InvokeButton", "HideLoadingDiv();", true);
        }
    }
    public void btn_comp_save_Click(object sender, EventArgs e)
    {
        try
        {
            double value1 = 0;
            double value2 = 0;
            string stage1 = "";
            string getappid = "";
            string pkcode = "";
            string sqlcmd = "";
            string date = DateTime.Now.ToString("MM/dd/yyyy");
            string Requisition_no_comp = Convert.ToString(txt_compreqno.Text);
            string req = Convert.ToString(TextBox5.Text);
            if (div_complaints.Visible == true)
            {
                pkcode = req;
                stage1 = d2.GetFunction("select ReqApproveStage from RQ_Requisition where RequisitionPK='" + pkcode + "'");
            }
            if (staffcodesession.Trim() == "" || staffcodesession.Trim() == null)
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "You Are Not Have A Approval Permission";
            }
            else
            {
                if (stage1 == "0")
                {
                    value2 = 1;
                }
                else
                {
                    value1 = Convert.ToDouble(stage1);
                    value2 = value1 + 1;
                    // getappid = d2.GetFunction("select ReqAppStaffAppNo from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'");
                }
                sqlcmd = " select ReqApproveStage, RequestType,ReqAppStaffAppNo from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "' ";
                ds = d2.select_method_wo_parameter(sqlcmd, "Text");
                DataView dv = new DataView();
                if (ds.Tables[0].Rows.Count > 0)
                {
                    for (int loop = 0; loop < ds.Tables[0].Rows.Count; loop++)
                    {
                        ds.Tables[0].DefaultView.RowFilter = "ReqApproveStage='" + value2 + "' and RequestType=4";
                        dv = ds.Tables[0].DefaultView;
                        if (dv.Count > 0)
                        {
                            getappid = Convert.ToString(dv[0]["ReqAppStaffAppNo"]);
                            //getappid = d2.GetFunction("select ReqAppStaffAppNo from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'");
                            string getappno = d2.GetFunction("select staff_code  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and appl_id='" + getappid + "'");
                            if (getappno == staffcodesession)
                            {
                                if (div_complaints.Visible == true)
                                {
                                    string update_query = "update RQ_Requisition set ReqApproveStage='" + value2 + "',ReqAppStatus='0',ReqAppStaffAppNo='" + getappid + "' where RequisitionPK='" + pkcode + "' and RequestCode='" + Requisition_no_comp + "'";
                                    d2.update_method_wo_parameter(update_query, "Text");
                                    string select_query = "select ReqApproveStage,ReqAppStaffAppNo,ReqAppStatus,RequisitionPK from RQ_Requisition where RequisitionPK='" + pkcode + "' ";
                                    ds = d2.select_method_wo_parameter(select_query, "Text");
                                    if (ds.Tables[0].Rows.Count > 0)
                                    {
                                        for (int j = 0; j < ds.Tables[0].Rows.Count; j++)
                                        {
                                            string pkv = Convert.ToString(ds.Tables[0].Rows[j]["RequisitionPK"]);
                                            string stage = Convert.ToString(ds.Tables[0].Rows[j]["ReqApproveStage"]);
                                            string status = Convert.ToString(ds.Tables[0].Rows[j]["ReqAppStatus"]);
                                            string appno = Convert.ToString(ds.Tables[0].Rows[j]["ReqAppStaffAppNo"]);
                                            string insert_query = "insert into RQ_RequestionApprove(ReqApproveDate,ReqApproveStage,ReqAppStatus,RequisitionFK,ReqAppStaffAppNo,ReqAppPriority)values('" + date + "','" + stage + "','" + status + "','" + pkv + "','" + getappid + "','')";
                                            d2.update_method_wo_parameter(insert_query, "Text");
                                            string fnl1 = d2.GetFunction("select ReqApproveStage from RQ_Requisition where RequisitionPK='" + pkcode + "'");
                                            string fnl2 = d2.GetFunction("select ReqApproveStateCount from RQ_RequestHierarchy where RequestType='4' and ReqAppStaffAppNo='" + getappid + "'");
                                            if (fnl1 == fnl2)
                                            {
                                                update_query = "update RQ_Requisition set ReqApproveStage='" + value2 + "',ReqAppStatus='1',ReqAppStaffAppNo='" + getappid + "' where RequisitionPK='" + pkcode + "' and RequestCode='" + Requisition_no_comp + "'";
                                                d2.update_method_wo_parameter(update_query, "Text");
                                            }
                                            ////if (sms_app == "2")
                                            ////{
                                            ////    sms();
                                            ////}
                                            imgdiv2.Visible = true;
                                            lbl_alert.Text = "Approved Successfully";
                                        }
                                    }
                                }
                            }
                            else
                            {
                                imgdiv2.Visible = true;
                                lbl_alert.Text = "You Cannot Give the Approval Permission";
                            }
                        }
                    }
                }
            }
        }
        catch
        {
        }
    }
    protected void Btn_Approval_Click(object sender, EventArgs e)//poo
    {
        try
        {
            if (Fpspread5.Visible == true)
            {
                for (int ro = 1; ro < Fpspread5.Sheets[0].RowCount; ro++)
                {
                    double value2 = 0; string approvalvalue1 = string.Empty;
                    double value1 = 0; string getappid = string.Empty; string approvalvalue2 = string.Empty;
                    string reqpk = Convert.ToString(Fpspread5.Sheets[0].Cells[ro, 0].Tag);
                    string reqcode = Fpspread5.Sheets[0].Cells[ro, 3].Text;
                    string reqdate = Fpspread5.Sheets[0].Cells[ro, 4].Text;
                    string Fromdate = Fpspread5.Sheets[0].Cells[ro, 7].Text;
                    string Todate = Fpspread5.Sheets[0].Cells[ro, 8].Text;
                    string halfdate = Fpspread5.Sheets[0].Cells[ro, 11].Text;
                    string approvalstage = Fpspread5.Sheets[0].Cells[ro, 15].Text;
                    string leavesession = Fpspread5.Sheets[0].Cells[ro, 10].Text;
                    if (leavesession.Trim().ToUpper() == "MORNING")//delsi2606
                    {

                        leavesession = "1";
                    }
                    else if (leavesession.Trim().ToUpper() == "EVENING")
                    {
                        leavesession = "2";

                    }
                    string leavereason = Fpspread5.Sheets[0].Cells[ro, Fpspread5.Sheets[0].ColumnCount - 1].Text;
                    string check = Convert.ToString(Fpspread5.Sheets[0].Cells[ro, 1].Value);
                    if (check == "1")
                    {
                        string cstaff = d2.GetFunction(" select ReqStaffAppNo from RQ_Requisition where RequestType=5 and RequisitionPK='" + reqpk + "'");
                        string stage1 = d2.GetFunction("select ReqApproveStage from RQ_Requisition where RequisitionPK='" + reqpk + "'");
                        string lonstaff = d2.GetFunction("select sm.appl_id from staff_appl_master sm,staffmaster s where sm.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                        if (stage1 == "0")
                            value2 = 1;
                        else
                        {
                            value1 = Convert.ToDouble(stage1);
                            value2 = value1 + 1;
                            // getappid = d2.GetFunction("select ReqAppStaffAppNo from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'");
                        }

                        approvalvalue1 = Convert.ToString(value1);
                        approvalvalue2 = Convert.ToString(value2);
                        string sqlcmd = " select ReqApproveStage,RequestType, ReqAppStaffAppNo,ReqAppPriority from RQ_RequestHierarchy where ReqApproveStage='" + approvalvalue2 + "'and RequestType=5 and ReqStaffAppNo='" + cstaff + "'";
                        sqlcmd += " select ReqAppPriority from RQ_RequestHierarchy where ReqApproveStage='" + approvalvalue2 + "'";
                        ds = d2.select_method_wo_parameter(sqlcmd, "Text");
                        DataView dv = new DataView();
                        if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                        {
                            for (int loop = 0; loop < ds.Tables[0].Rows.Count; loop++)
                            {
                                //string priorityval = d2.GetFunction("select ReqAppPriority from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'");
                                string priorityval = Convert.ToString(ds.Tables[1].Rows[0]["ReqAppPriority"]);
                                string pri = Convert.ToString(ds.Tables[0].Rows[loop]["ReqAppPriority"]);
                                ds.Tables[0].DefaultView.RowFilter = "ReqApproveStage='" + approvalvalue2 + "' and RequestType=5 and ReqAppStaffAppNo='" + lonstaff + "'";
                                dv = ds.Tables[0].DefaultView;
                                if (dv.Count > 0)
                                {
                                    getappid = Convert.ToString(dv[0]["ReqAppStaffAppNo"]);
                                    string getappno = d2.GetFunction("select staff_code  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and appl_id='" + getappid + "'");


                                    if (getappno == staffcodesession)//29/12
                                    {
                                        string update_query = "";

                                        if (halfdate != "")
                                        {
                                            string[] spl = halfdate.Split('/');
                                            string halfday = spl[1] + "/" + spl[0] + "/" + spl[2];
                                            update_query = "update RQ_Requisition set ReqApproveStage='" + approvalvalue2 + "',ReqAppStatus='0',ReqAppStaffAppNo='" + getappid + "',IsHalfDay='1',LeaveSession='" + leavesession + "',HalfDate='" + halfday + "',leaveChangeReason='" + leavereason + "' where RequisitionPK='" + reqpk + "' and RequestCode='" + reqcode + "'";//changed leavesession 2 to leavesession delsi2606
                                        }
                                        else
                                        {
                                            update_query = "update RQ_Requisition set ReqApproveStage='" + approvalvalue2 + "',ReqAppStatus='0',ReqAppStaffAppNo='" + getappid + "',IsHalfDay='0',LeaveSession='0',leaveChangeReason='" + leavereason + "' where RequisitionPK='" + reqpk + "' and RequestCode='" + reqcode + "'";
                                        }
                                        d2.update_method_wo_parameter(update_query, "Text");
                                        string prio = d2.GetFunction("select ReqAppPriority from RQ_RequestHierarchy where RequestType=5 and ReqStaffAppNo='" + cstaff + "' and ReqAppStaffAppNo='" + getappid + "'");
                                        string appstaff_query = "insert into RQ_ReqApprovalDetails(ReqFK,ReqApproveStaffStage,ReqApproveStaffappNo,ApproveStaffPriority,ApproveReason)values('" + reqpk + "','" + approvalvalue1 + "','" + getappid + "','" + prio + "','" + leavereason + "')";
                                        d2.update_method_wo_parameter(appstaff_query, "Text");
                                        string select_query = "select ReqApproveStage,ReqAppStaffAppNo,ReqAppStatus,RequisitionPK from RQ_Requisition where RequisitionPK='" + reqpk + "' ";
                                        ds = d2.select_method_wo_parameter(select_query, "Text");
                                        if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                                        {
                                            for (int j = 0; j < ds.Tables[0].Rows.Count; j++)
                                            {
                                                string pkv = Convert.ToString(ds.Tables[0].Rows[j]["RequisitionPK"]);
                                                string stage = Convert.ToString(ds.Tables[0].Rows[j]["ReqApproveStage"]);
                                                string status = Convert.ToString(ds.Tables[0].Rows[j]["ReqAppStatus"]);
                                                string appno = Convert.ToString(ds.Tables[0].Rows[j]["ReqAppStaffAppNo"]);
                                                string date = DateTime.Now.ToString("MM/dd/yyyy");
                                                string insert_query = "insert into RQ_RequestionApprove(ReqApproveDate,ReqApproveStage,ReqAppStatus,RequisitionFK,ReqAppStaffAppNo,ReqAppPriority)values('" + date + "','" + stage + "','" + status + "','" + pkv + "','" + getappid + "','" + pri + "')";
                                                d2.update_method_wo_parameter(insert_query, "Text");
                                                string fnl1 = d2.GetFunction("select ReqApproveStage from RQ_Requisition where RequisitionPK='" + reqpk + "'");
                                                string fnl2 = d2.GetFunction("select max(ReqApproveStage) from RQ_RequestHierarchy where RequestType='5' and ReqStaffAppNo='" + cstaff + "'");
                                                if (fnl1 == fnl2)
                                                {
                                                    update_query = "update RQ_Requisition set ReqApproveStage='" + approvalvalue2 + "',ReqAppStatus='1',ReqAppStaffAppNo='" + getappid + "' where RequisitionPK='" + reqpk + "' and RequestCode='" + reqcode + "'";
                                                    d2.update_method_wo_parameter(update_query, "Text");
                                                    //staff leave type update
                                                    add_attn(reqpk);
                                                }
                                                if (sms_app == "2")//delsireff
                                                {
                                                    string leave_cateCode = d2.GetFunction("select category from leave_category where LeaveMasterPK in(select LeaveMasterFK from RQ_Requisition where RequisitionPK='" + pkv + "')");
                                                    string text = leave_cateCode + "Approved Successfully";
                                                    // string text = "Approved Successfully";
                                                    approvalflag = true;
                                                    access();
                                                    sms1(reqpk, text);
                                                }

                                                imgdiv2.Visible = true;
                                                lbl_alert.Text = "Approved Successfully";
                                                popview.Visible = false;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }

                }

                leave();
            }
            //magesh 13.6.18
            if (Fpspread3.Visible == true)
            {
                for (int ro = 0; ro < Fpspread3.Sheets[0].RowCount; ro++)
                {
                    string value = Convert.ToString(Fpspread3.Sheets[0].Cells[ro, 1].Value);
                    if (value == "1")
                    {
                        string reqnumb = "";
                        string req_no = "";
                        reqnumb = Convert.ToString(Fpspread3.Sheets[0].Cells[ro, 0].Tag);
                        req_no = d2.GetFunction("select RequestCode from RQ_Requisition where RequestType=3 and RequisitionPK='" + reqnumb + "'");
                        TextBox4.Text = reqnumb;
                        txt_visitorreqno.Text = req_no;
                        Session["gatevis"] = "1";
                        btn_visit_save_Click(sender, e);
                        Session["gatevis"] = "0";
                    }
                }
            }
        }
        catch (Exception ex)
        {
        }
    }
    protected void Btn_Reject_Click(object sender, EventArgs e)
    {
        try
        {
            for (int ro = 1; ro < Fpspread5.Sheets[0].RowCount; ro++)
            {
                double value2 = 0; string approvalvalue1 = string.Empty; string appnumb = "";
                string appnumb1 = ""; string fromdate = ""; string todate = ""; string leavetype = "";
                string leavesession = ""; string appstatus = ""; string cstaff = ""; int fday0 = 0;
                DataSet dsval = new DataSet();
                double value1 = 0; string getappid = string.Empty; string approvalvalue2 = string.Empty;
                string reqpk = Convert.ToString(Fpspread5.Sheets[0].Cells[ro, 0].Tag);
                string reqcode = Fpspread5.Sheets[0].Cells[ro, 3].Text;
                string reqdate = Fpspread5.Sheets[0].Cells[ro, 4].Text;
                string halfdate = Fpspread5.Sheets[0].Cells[ro, 11].Text;
                string approvalstage = Fpspread5.Sheets[0].Cells[ro, 15].Text;
                string leavereason = Fpspread5.Sheets[0].Cells[ro, Fpspread5.Sheets[0].ColumnCount - 1].Text;
                string check = Convert.ToString(Fpspread5.Sheets[0].Cells[ro, 1].Value);
                if (check == "1")
                {
                    string stage1 = d2.GetFunction("select ReqApproveStage from RQ_Requisition where RequisitionPK='" + reqpk + "'");
                    string lonstaff = d2.GetFunction("select sm.appl_id from staff_appl_master sm,staffmaster s where sm.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
                    string apprl_app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'"); string selQ = " select ReqAppNo,ReqStaffAppNo,LeaveFrom,LeaveTo,IsHalfDay,LeaveSession,ReqStaffAppNo,ReqAppStatus from RQ_Requisition where RequestType=5 and RequisitionPK='" + reqpk + "'";
                    dsval.Clear();
                    dsval = d2.select_method_wo_parameter(selQ, "Text");
                    if (dsval.Tables.Count > 0 && dsval.Tables[0].Rows.Count > 0)
                    {
                        appnumb = Convert.ToString(dsval.Tables[0].Rows[0]["ReqAppNo"]);
                        appnumb1 = Convert.ToString(dsval.Tables[0].Rows[0]["ReqStaffAppNo"]);
                        fromdate = Convert.ToString(dsval.Tables[0].Rows[0]["LeaveFrom"]);
                        todate = Convert.ToString(dsval.Tables[0].Rows[0]["LeaveTo"]);
                        leavetype = Convert.ToString(dsval.Tables[0].Rows[0]["IsHalfDay"]);
                        leavesession = Convert.ToString(dsval.Tables[0].Rows[0]["LeaveSession"]);
                        cstaff = Convert.ToString(dsval.Tables[0].Rows[0]["ReqStaffAppNo"]);
                        appstatus = Convert.ToString(dsval.Tables[0].Rows[0]["ReqAppStatus"]);
                    }
                    string staffcode = d2.GetFunction("select s.staff_code from staff_appl_master sa, staffmaster s where sa.appl_no=s.appl_no and appl_id='" + appnumb + "'");
                    stafcodealter = staffcode;
                    if (leavetype == "False")
                    {
                        fday0 = 0;
                    }
                    else
                    {
                        if (leavesession == "1")
                            fday0 = 1;
                        else
                            fday0 = 2;
                    }
                    if (stage1 == "0")
                        value2 = 1;
                    else
                    {
                        value1 = Convert.ToDouble(stage1);
                        value2 = value1 + 1;
                    }
                    string sqlcmd = " select ReqApproveStage,RequestType, ReqAppStaffAppNo,ReqAppPriority from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'and RequestType=5 and ReqStaffAppNo='" + cstaff + "'";
                    ds = d2.select_method_wo_parameter(sqlcmd, "Text");
                    DataView dv = new DataView();
                    if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                    {
                        for (int loop = 0; loop < ds.Tables[0].Rows.Count; loop++)
                        {
                            string priorityval = d2.GetFunction("select ReqAppPriority from RQ_RequestHierarchy where RequestType=5 and ReqApproveStage='" + value2 + "'");
                            //string pri = Convert.ToString(ds.Tables[0].Rows[loop]["ReqAppPriority"]);
                            ds.Tables[0].DefaultView.RowFilter = "ReqApproveStage='" + value2 + "' and RequestType=5 and ReqAppStaffAppNo='" + lonstaff + "'";
                            dv = ds.Tables[0].DefaultView;
                            if (dv.Count > 0)
                            {
                                getappid = Convert.ToString(dv[0]["ReqAppStaffAppNo"]);
                                string getappno = d2.GetFunction("select staff_code  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and appl_id='" + getappid + "'");
                                string hir_stage = d2.GetFunction("select ReqApproveStage from RQ_RequestHierarchy where ReqStaffAppNo='" + appnumb1 + "' and ReqAppStaffAppNo='" + apprl_app + "'");
                                if (getappno == staffcodesession)
                                {
                                    Check_Status(staffcode, fromdate, todate, fday0);
                                    lv_cancel = 1;
                                    //  string appstatus = d2.GetFunction("select ReqAppStatus from RQ_Requisition where RequestType=5 and RequisitionPK='" + req + "'");

                                    if (appstatus != "2")
                                    {
                                        string update_query = "update RQ_Requisition set ReqAppStatus='2',ReqApproveStage='" + hir_stage + "',ReqAppStaffAppNo='" + apprl_app + "' where RequisitionPK='" + reqpk + "'";
                                        d2.update_method_wo_parameter(update_query, "Text");
                                        if (sms_reject == "4")
                                        {
                                            string text = "Rejected Successfully";
                                            rejectflag = true;
                                            access();
                                            sms1(reqpk, text);
                                        }
                                        else
                                        {
                                            rejectflag = false;
                                        }
                                        imgdiv2.Visible = true;
                                        lbl_alert.Text = "Rejected Successfully";
                                        popview.Visible = false;

                                    }

                                    else
                                    {
                                        imgdiv2.Visible = true;
                                        lbl_alert.Text = "Already Rejected";
                                    }
                                }
                                else
                                {
                                    imgdiv2.Visible = true;
                                    lbl_alert.Text = "You Reject This Staff ";
                                }
                            }

                            else
                            {
                                string qur = "select ReqAppStaffAppNo from RQ_RequestHierarchy where ReqApproveStage='" + stage1 + "' and RequestType='5' and ReqStaffAppNo='" + cstaff + "'";
                                ds1.Clear();
                                ds1 = d2.select_method_wo_parameter(qur, "text");
                                if (ds1.Tables[0].Rows.Count > 0)
                                {
                                    string checkstaff = "";
                                    for (int z = 0; z < ds1.Tables[0].Rows.Count; z++)
                                    {
                                        checkstaff = Convert.ToString(ds1.Tables[0].Rows[z]["ReqAppStaffAppNo"]);
                                        if (checkstaff == lonstaff)
                                        {
                                            imgdiv2.Visible = true;
                                            lbl_alert.Text = "Already Rejected";
                                        }
                                    }
                                }
                                else
                                {
                                    imgdiv2.Visible = true;
                                    lbl_alert.Text = "You Cannot Reject This Staff ";
                                }
                            }
                        }

                    }
                    else
                    {
                        string checkstaff = d2.GetFunction("select ReqAppStaffAppNo from RQ_RequestHierarchy where ReqApproveStage='" + stage1 + "' and RequestType='5' and ReqStaffAppNo='" + cstaff + "'");
                        if (checkstaff == lonstaff)
                        {
                            imgdiv2.Visible = true;
                            lbl_alert.Text = "Already You Gave a Rejected";
                        }
                    }
                }
            }
            leave();
        }
        catch { }
    }
    protected void Btn_Apply_Leave_Click(object sender, EventArgs e)
    {
        try
        {
            chkrelived = 0;
            double value1 = 0;
            double value2 = 0;
            string stage1 = "";
            string getappid = "";
            string pkcode = "";
            string sqlcmd = "";
            string stg = "";
            string date = DateTime.Now.ToString("MM/dd/yyyy");
            string Requisition_no_lv = Convert.ToString(txt_rqstn_leave.Text);
            string req = Convert.ToString(TextBox7.Text);
            string changereason = Convert.ToString(txt_reasonchng.Text);
            string cstaff = d2.GetFunction(" select ReqStaffAppNo from RQ_Requisition where RequestType=5 and RequisitionPK='" + req + "'");
            string lonstaff = d2.GetFunction("select sm.appl_id from staff_appl_master sm,staffmaster s where sm.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            if (div_leavereq.Visible == true)
            {
                pkcode = req;
                stage1 = d2.GetFunction("select ReqApproveStage from RQ_Requisition where RequisitionPK='" + pkcode + "'");
                stg = stage1;
            }
            if (string.IsNullOrEmpty(staffcodesession))
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "You Are Not Have A Approval Permission";
                return;
            }
            else
            {
                if (stage1 == "0")
                    value2 = 1;
                else
                {
                    value1 = Convert.ToDouble(stage1);
                    value2 = value1 + 1;
                    // getappid = d2.GetFunction("select ReqAppStaffAppNo from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'");
                }
                sqlcmd = " select ReqApproveStage,RequestType, ReqAppStaffAppNo,ReqAppPriority from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'and RequestType=5 and ReqStaffAppNo='" + cstaff + "'";
                sqlcmd += " select ReqAppPriority from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'";
                ds = d2.select_method_wo_parameter(sqlcmd, "Text");
                DataView dv = new DataView();
                if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                {
                    for (int loop = 0; loop < ds.Tables[0].Rows.Count; loop++)
                    {
                        //string priorityval = d2.GetFunction("select ReqAppPriority from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'");
                        string priorityval = Convert.ToString(ds.Tables[1].Rows[0]["ReqAppPriority"]);
                        string pri = Convert.ToString(ds.Tables[0].Rows[loop]["ReqAppPriority"]);
                        ds.Tables[0].DefaultView.RowFilter = "ReqApproveStage='" + value2 + "' and RequestType=5 and ReqAppStaffAppNo='" + lonstaff + "'";
                        dv = ds.Tables[0].DefaultView;
                        if (dv.Count > 0)
                        {
                            #region
                            getappid = Convert.ToString(dv[0]["ReqAppStaffAppNo"]);
                            string getappno = d2.GetFunction("select staff_code  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and appl_id='" + getappid + "'");
                            if (getappno == staffcodesession)
                            {
                                if (div_leavereq.Visible == true)
                                {
                                    //............................
                                    string halfday = "";
                                    string halfdate = "";
                                    string day = "";
                                    int cc = 0;
                                    int ccc = 0;
                                    int tt = 0;
                                    int tt1 = 0;
                                    int ch = 0;
                                    int ch1 = 0;
                                    int alchk = 0;
                                    for (int j = 0; j < GV1.Rows.Count; j++)
                                    {
                                        CheckBox chkmrng = (CheckBox)GV1.Rows[j].FindControl("chk_mrng");
                                        CheckBox chkevng = (CheckBox)GV1.Rows[j].FindControl("chk_evng");
                                        ch = 0;
                                        ch1 = 0;
                                        if (chkmrng.Checked == true)
                                        {
                                            ch = 1;
                                            alchk = 1;
                                        }
                                        if (chkevng.Checked == true)
                                        {
                                            ch1 = 1;
                                            alchk = 1;
                                        }
                                        if (chkmrng.Enabled == true)
                                        {
                                            if (chkmrng.Checked == false)
                                                tt++;
                                        }
                                        if (chkevng.Enabled == true)
                                        {
                                            if (chkevng.Checked == false)
                                                tt1++;
                                        }
                                        if (chkevng.Enabled == true && chkmrng.Enabled == true)
                                        {
                                            if (chkmrng.Checked == false || chkevng.Checked == false)
                                                ccc++;
                                        }
                                        TextBox dateeee = (TextBox)GV1.Rows[j].FindControl("txtdate");
                                        string dateee = Convert.ToString(dateeee.Text);
                                    }
                                    //if (tt > 1)//delsi
                                    //{
                                    //    imgdiv2.Visible = true;
                                    //    lbl_alert.Text = "Select the Correct leave Days";
                                    //    return;
                                    //}
                                    //if (tt >= 1 && tt1 >= 1)
                                    //{
                                    //    imgdiv2.Visible = true;
                                    //    lbl_alert.Text = "Select the Correct leave Days";
                                    //    return;
                                    //}
                                    //if (tt1 > 1)
                                    //{
                                    //    imgdiv2.Visible = true;
                                    //    lbl_alert.Text = "Select the Correct leave Days";
                                    //    return;
                                    //}


                                    if (alchk != 1)
                                    {
                                        imgdiv2.Visible = true;
                                        lbl_alert.Text = "Select the leave";
                                        return;
                                    }
                                    if (ccc % 2 == 0)
                                    {
                                        // fullday
                                        halfday = "0";
                                    }
                                    else
                                    {
                                        //halfday
                                        // halfday = "1";
                                        for (int j = 0; j < GV1.Rows.Count; j++)
                                        {
                                            string dateee = "";
                                            CheckBox chkmrng = (CheckBox)GV1.Rows[j].FindControl("chk_mrng");
                                            CheckBox chkevng = (CheckBox)GV1.Rows[j].FindControl("chk_evng");
                                            ch = 0;
                                            ch1 = 0;
                                            if (chkmrng.Checked == false)
                                            {
                                                TextBox dateeeee = (TextBox)GV1.Rows[j].FindControl("txtdate");
                                                dateee = Convert.ToString(dateeeee.Text);
                                                ch = 1;
                                            }
                                            if (chkevng.Checked == false)
                                            {
                                                TextBox dateeeee = (TextBox)GV1.Rows[j].FindControl("txtdate");
                                                dateee = Convert.ToString(dateeeee.Text);
                                                ch1 = 1;
                                            }
                                            if (dateee != "")
                                            {
                                                string[] spl = dateee.Split('/');
                                                halfdate = spl[1] + "/" + spl[0] + "/" + spl[2];
                                                if (ch == 1)
                                                    day = "2";
                                                else
                                                    day = "1";
                                            }
                                        }
                                    }
                                    string update_query = "";
                                    //leave day off or full day update
                                    if (halfday == "1")
                                    {
                                        update_query = "update RQ_Requisition set ReqApproveStage='" + value2 + "',ReqAppStatus='0',ReqAppStaffAppNo='" + getappid + "',IsHalfDay='" + halfday + "',LeaveSession='" + day + "',HalfDate='" + halfdate + "',leaveChangeReason='" + changereason + "' where RequisitionPK='" + pkcode + "' and RequestCode='" + Requisition_no_lv + "'";
                                    }
                                    else
                                    {
                                        update_query = "update RQ_Requisition set ReqApproveStage='" + value2 + "',ReqAppStatus='0',ReqAppStaffAppNo='" + getappid + "',IsHalfDay='" + halfday + "',LeaveSession='" + day + "',leaveChangeReason='" + changereason + "' where RequisitionPK='" + pkcode + "' and RequestCode='" + Requisition_no_lv + "'";
                                    }
                                    d2.update_method_wo_parameter(update_query, "Text");
                                    string prio = d2.GetFunction("select ReqAppPriority from RQ_RequestHierarchy where RequestType=5 and ReqStaffAppNo='" + cstaff + "' and ReqAppStaffAppNo='" + getappid + "'");
                                    string appstaff_query = "insert into RQ_ReqApprovalDetails(ReqFK,ReqApproveStaffappNo,ReqApproveStaffStage,ApproveStaffPriority,ApproveReason)values('" + pkcode + "','" + getappid + "','" + value2 + "','" + prio + "','" + changereason + "')";
                                    d2.update_method_wo_parameter(appstaff_query, "Text");
                                    string select_query = "select ReqApproveStage,ReqAppStaffAppNo,ReqAppStatus,RequisitionPK,LeaveMasterFK from RQ_Requisition where RequisitionPK='" + pkcode + "' ";
                                    ds = d2.select_method_wo_parameter(select_query, "Text");
                                    if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                                    {
                                        for (int j = 0; j < ds.Tables[0].Rows.Count; j++)
                                        {
                                            string pkv = Convert.ToString(ds.Tables[0].Rows[j]["RequisitionPK"]);
                                            string stage = Convert.ToString(ds.Tables[0].Rows[j]["ReqApproveStage"]);
                                            string status = Convert.ToString(ds.Tables[0].Rows[j]["ReqAppStatus"]);
                                            string appno = Convert.ToString(ds.Tables[0].Rows[j]["ReqAppStaffAppNo"]);
                                            string LeaveTypeget = Convert.ToString(ds.Tables[0].Rows[j]["LeaveMasterFK"]);
                                            string insert_query = "insert into RQ_RequestionApprove(ReqApproveDate,ReqApproveStage,ReqAppStatus,RequisitionFK,ReqAppStaffAppNo,ReqAppPriority)values('" + date + "','" + stage + "','" + status + "','" + pkv + "','" + getappid + "','" + pri + "')";
                                            d2.update_method_wo_parameter(insert_query, "Text");

                                            string usergrpcode = string.Empty;//delsi 29/12
                                            if ((Session["group_code"].ToString().Trim() != "") && (Session["group_code"].ToString().Trim() != "0") && (Session["group_code"].ToString().Trim() != "-1"))
                                            {
                                                string group = Session["group_code"].ToString();
                                                if (group.Contains(';'))
                                                {
                                                    string[] group_semi = group.Split(';');
                                                    usergrpcode = group_semi[0].ToString();

                                                }
                                                else
                                                {
                                                    usergrpcode = group;

                                                }

                                            }
                                            else
                                            {
                                                usergrpcode = usercode;
                                            }

                                            int leavetypechangeright = 0;

                                            int.TryParse(Convert.ToString(d2.GetFunction(" select LinkValue from New_InsSettings where LinkName='Change LeaveType Rights' and user_code ='" + usergrpcode + "'")), out leavetypechangeright);
                                            if (leavetypechangeright == 1)
                                            {
                                                string getalterLeaveType = ddl_leave_type.SelectedItem.Value;
                                                if (getalterLeaveType.Trim().ToString() != LeaveTypeget.Trim().ToString())
                                                {
                                                    string updateLeavTyp = "update RQ_Requisition set LeaveMasterFK='" + getalterLeaveType + "',originalLeaveFK='" + LeaveTypeget + "' where RequisitionPK='" + pkcode + "' and RequestCode='" + Requisition_no_lv + "'";
                                                    d2.update_method_wo_parameter(updateLeavTyp, "Text");
                                                }

                                            }
                                            string fnl1 = d2.GetFunction("select ReqApproveStage from RQ_Requisition where RequisitionPK='" + pkcode + "'");
                                            string fnl2 = d2.GetFunction("select max(ReqApproveStage) from RQ_RequestHierarchy where RequestType='5' and ReqStaffAppNo='" + cstaff + "'");
                                            if (fnl1 == fnl2)
                                            {
                                                update_query = "update RQ_Requisition set ReqApproveStage='" + value2 + "',ReqAppStatus='1',ReqAppStaffAppNo='" + getappid + "' where RequisitionPK='" + pkcode + "' and RequestCode='" + Requisition_no_lv + "'";
                                                d2.update_method_wo_parameter(update_query, "Text");


                                                sqlcmd = "select * from RQ_Requisition where RequestType=5 and RequisitionPK='" + req + "'";
                                                ds = d2.select_method_wo_parameter(sqlcmd, "Text");

                                                if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                                                {
                                                    string fromdate = Convert.ToString(ds.Tables[0].Rows[0]["LeaveFrom"]);
                                                    string todate = Convert.ToString(ds.Tables[0].Rows[0]["LeaveTo"]);

                                                    if (fromdate != todate)//deljus
                                                    {
                                                        int counts = 0;
                                                        for (int k = 0; k < GV1.Rows.Count; k++)
                                                        {
                                                            string monyear = string.Empty;
                                                            string dateval = string.Empty;
                                                            TextBox dateeeee = (TextBox)GV1.Rows[k].FindControl("txtdate");
                                                            string getdate = Convert.ToString(dateeeee.Text);
                                                            if (getdate.Contains('/'))
                                                            {
                                                                string[] splitdate = getdate.Split('/');
                                                                getdate = Convert.ToString(splitdate[1]) + "/" + Convert.ToString(splitdate[0]) + "/" + Convert.ToString(splitdate[2]);
                                                                monyear = Convert.ToString(splitdate[1]) + "/" + Convert.ToString(splitdate[2]);
                                                                dateval = Convert.ToString(splitdate[0]);
                                                            }
                                                            string session = d2.GetFunction("select SessionType from staff_leave_dates where requestfk='" + req + "' and LeaveDate='" + getdate + "'");
                                                            string isApprovecheck = d2.GetFunction("select isApproved from staff_leave_dates where requestfk='" + req + "' and LeaveDate='" + getdate + "'");

                                                            if (session != "")
                                                            {

                                                                if (session == "0")
                                                                {

                                                                    CheckBox chkmrng = (CheckBox)GV1.Rows[k].FindControl("chk_mrng");
                                                                    CheckBox chkevng = (CheckBox)GV1.Rows[k].FindControl("chk_evng");
                                                                    if (chkmrng.Checked == false && chkevng.Checked == false)
                                                                    {
                                                                        // string delquery = "delete staff_leave_dates where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                                                        string updateqry = "update staff_leave_dates set checkdel='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                                                        counts = d2.update_method_wo_parameter(updateqry, "text");


                                                                    }
                                                                }
                                                                if (session == "1")
                                                                {
                                                                    CheckBox chkmrng = (CheckBox)GV1.Rows[k].FindControl("chk_mrng");
                                                                    CheckBox chkevng = (CheckBox)GV1.Rows[k].FindControl("chk_evng");
                                                                    if (chkmrng.Checked == false && chkevng.Checked == false)
                                                                    {
                                                                        // string delquery = "delete staff_leave_dates where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                                                        string updateqry = "update staff_leave_dates set checkdel='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                                                        counts = d2.update_method_wo_parameter(updateqry, "text");


                                                                    }
                                                                }
                                                                if (session == "2")
                                                                {
                                                                    CheckBox chkmrng = (CheckBox)GV1.Rows[k].FindControl("chk_mrng");
                                                                    CheckBox chkevng = (CheckBox)GV1.Rows[k].FindControl("chk_evng");
                                                                    if (chkmrng.Checked == false && chkevng.Checked == false)
                                                                    {
                                                                        string updateqry = "update staff_leave_dates set checkdel='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                                                        // string delquery = "delete staff_leave_dates where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                                                        counts = d2.update_method_wo_parameter(updateqry, "text");


                                                                    }
                                                                }

                                                            }
                                                        }


                                                    }
                                                    else
                                                    {
                                                        imgdiv2.Visible = true;
                                                        lbl_alert.Text = "Delete Only For Multiple Dates";
                                                    }

                                                }


                                                //staff leave type update
                                                add_attn(pkcode);
                                            }
                                            if (sms_app == "2")//delsi 1003
                                            {
                                                string leave_cateCode = d2.GetFunction("select category from leave_category where LeaveMasterPK in(select LeaveMasterFK from RQ_Requisition where RequisitionPK='" + pkcode + "')");
                                                string text = leave_cateCode + "Approved Successfully";
                                                // string text = "Approved Successfully";
                                                approvalflag = true;
                                                access();
                                                sms1(pkcode, text);
                                            }
                                            leave();
                                            imgdiv2.Visible = true;
                                            lbl_alert.Text = "Approved Successfully";
                                            popview.Visible = false;
                                        }
                                    }
                                }
                            }
                            else
                            {
                                imgdiv2.Visible = true;
                                lbl_alert.Text = "You Cannot Give the Approval Permission";
                            }
                            #endregion
                        }
                        else
                        {
                            #region
                            string qur = "select ReqAppStaffAppNo from RQ_RequestHierarchy where ReqApproveStage='" + stg + "' and RequestType='5' and ReqStaffAppNo='" + cstaff + "'";
                            ds1.Clear();
                            ds1 = d2.select_method_wo_parameter(qur, "text");
                            if (ds1.Tables[0].Rows.Count > 0)
                            {
                                string checkstaff = "";
                                for (int z = 0; z < ds1.Tables[0].Rows.Count; z++)
                                {
                                    checkstaff = Convert.ToString(ds1.Tables[0].Rows[z]["ReqAppStaffAppNo"]);
                                    if (checkstaff == lonstaff)
                                    {
                                        imgdiv2.Visible = true;
                                        lbl_alert.Text = "Already Approved";
                                    }
                                }
                            }
                            else
                            {
                                imgdiv2.Visible = true;
                                lbl_alert.Text = "You Cannot Give the Approval Permission";
                            }
                            #endregion
                        }
                    }
                }
                else
                {
                    string checkstaff = d2.GetFunction("select ReqAppStaffAppNo from RQ_RequestHierarchy where ReqApproveStage='" + stg + "' and RequestType='5' and ReqStaffAppNo='" + cstaff + "'");
                    if (checkstaff == lonstaff)
                    {
                        imgdiv2.Visible = true;
                        lbl_alert.Text = "Already You Gave a Approval";
                    }
                }
            }
        }
        catch
        {
        }
    }
    public void add_attn(string pkcodevalue)
    {
        string fromdate = "";
        string todate = "";
        string day = "";
        string month = "";
        string year = "";
        string halfday = "";
        string halfdate = "";
        string leavesession = "";
        string leavetype = "";
        string leavemasterfk = "";
        string qur = string.Empty;
        leavemasterfk = d2.GetFunction("select LeaveMasterFK from RQ_Requisition where RequestType=5 and RequisitionPK='" + pkcodevalue + "'");
        string leavecat = d2.GetFunction("select category from leave_category where leavemasterpk='" + leavemasterfk + "'");
        fromdate = d2.GetFunction("select LeaveFrom from RQ_Requisition where RequestType=5 and RequisitionPK='" + pkcodevalue + "'");
        todate = d2.GetFunction("select LeaveTo from RQ_Requisition where RequestType=5 and RequisitionPK='" + pkcodevalue + "'");
        halfday = d2.GetFunction("select IsHalfDay from RQ_Requisition where RequestType=5 and RequisitionPK='" + pkcodevalue + "'");
        leavesession = d2.GetFunction("select LeaveSession from RQ_Requisition where RequestType=5 and RequisitionPK='" + pkcodevalue + "'");
        string reqstaff_app_ids = d2.GetFunction("select ReqStaffAppNo from RQ_Requisition where RequisitionPK='" + pkcodevalue + "'");//delsi1806
        string appl_nums = d2.GetFunction("select appl_no from staff_appl_master where appl_id='" + reqstaff_app_ids + "'");//delsi1806
        string sftcodes = d2.GetFunction("select staff_code from staffmaster where appl_no='" + appl_nums + "'");//delsi1806
        string getstaffCodes = string.Empty;//delsi0906
        if (txt_staff_code.Text == "" || txt_staff_code.Text == "0")
        {
            getstaffCodes = Convert.ToString(sftcodes);
            qur = "select * from individual_leave_type where staff_code='" + getstaffCodes + "' and college_code='" + collegecode1 + "'";

        }
        else
        {
            qur = "select * from individual_leave_type where staff_code='" + txt_staff_code.Text + "' and college_code='" + collegecode1 + "'";

        }


        ds = d2.select_method_wo_parameter(qur, "Text");
        DateTime fdate = Convert.ToDateTime(fromdate);
        DateTime tdate = Convert.ToDateTime(todate);

        if (halfday == "True")
        {
            halfdate = d2.GetFunction("select HalfDate from RQ_Requisition where RequestType=5 and RequisitionPK='" + pkcodevalue + "'");
        }
        if (ds.Tables[0].Rows.Count > 0)
        {
            string[] spl_type = ds.Tables[0].Rows[0]["leavetype"].ToString().Split(new Char[] { '\\' });
            for (int i = 0; spl_type.GetUpperBound(0) >= i; i++)
            {
                string[] split_leave = spl_type[i].Split(';');
                if (leavecat == split_leave[0])
                {
                    if (split_leave[4] == "1")
                    {
                        sun_check = true; // Include Sunday
                    }
                    else
                    {
                        sun_check = false;
                    }
                    if (split_leave[5] == "1")
                    {
                        holi_check = true; // Include Holiday
                    }
                    else
                    {
                        holi_check = false;
                    }
                }
            }
        }
        if (fdate == tdate)
        {
            for (; fdate <= tdate; )
            {
                fromdate = Convert.ToString(fdate);
                string[] sp = fromdate.Split('/');
                day = sp[1];
                month = sp[0];
                string year1 = sp[2];
                string[] sp1 = year1.Split(' ');
                DateTime dt = new DateTime();
                dt = Convert.ToDateTime(sp[0] + "/" + sp[1] + "/" + sp[2]);
                string sunday = dt.ToString("dddd");
                year = sp1[0];
                string mothyear = month + "/" + year;
                string shortname = d2.GetFunction("select l.shortname from leave_category l,RQ_Requisition r where r.LeaveMasterFK=l.LeaveMasterPK and r.RequisitionPK='" + pkcodevalue + "'");
                string code = d2.GetFunction("select category_code from stafftrans where staff_code='" + txt_staff_code.Text + "'");

                string deptCode = d2.GetFunction("select dept_code from stafftrans where staff_code='" + txt_staff_code.Text + "'");//delsi1806
                string get = d2.GetFunction("select holiday_date from holidayStaff where category_code ='" + code + "' and  holiday_date='" + dt + "' and college_code ='" + collegecode1 + "'and dept_code='" + deptCode + "'");


                string reqstaff_app_id = d2.GetFunction("select ReqStaffAppNo from RQ_Requisition where RequisitionPK='" + pkcodevalue + "'");//delsi0906
                string appl_num = d2.GetFunction("select appl_no from staff_appl_master where appl_id='" + reqstaff_app_id + "'");//delsi0906
                string sftcode = d2.GetFunction("select staff_code from staffmaster where appl_no='" + appl_num + "'");//delsi0906

                if (halfdate == fromdate)
                {
                    if (leavesession == "1") //2 poo 01.12.17
                    {
                        leavetype = shortname + "-";
                    }
                    else if (leavesession == "2") //1 poo 01.12.17
                    {
                        leavetype = "-" + shortname;
                    }
                }
                else
                {
                    leavetype = shortname + "-" + shortname;
                }
                bool CheckFalg = false;
                if (sun_check == true)
                {
                    if (sunday == "Sunday")
                    {
                        CheckFalg = true;
                    }
                }
                if (sunday != "Sunday")
                {
                    if (holi_check == true)
                    {
                        CheckFalg = true;
                    }
                    else if (holi_check == false)
                    {
                        if (get == "0")
                        {
                            CheckFalg = true;
                        }
                    }
                }

                string getstaffCode = string.Empty;//delsi0906
                if (txt_staff_code.Text == "" || txt_staff_code.Text == "0")
                {
                    getstaffCode = Convert.ToString(sftcode);

                }


                if (CheckFalg == true)
                {
                    if (txt_staff_code.Text != "")
                    {
                        string attn_query = "if exists (select * from staff_attnd where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + mothyear + "')update staff_attnd set [" + day + "]='" + leavetype + "' where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + mothyear + "'else insert into staff_attnd (staff_code,mon_year,[" + day + "])values ('" + txt_staff_code.Text + "','" + mothyear + "','" + leavetype + "')";
                        int val = d2.update_method_wo_parameter(attn_query, "Text");
                    }
                    else //delsi0906
                    {
                        string attn_query = "if exists (select * from staff_attnd where staff_code ='" + getstaffCode + "' and mon_year ='" + mothyear + "')update staff_attnd set [" + day + "]='" + leavetype + "' where staff_code ='" + getstaffCode + "' and mon_year ='" + mothyear + "'else insert into staff_attnd (staff_code,mon_year,[" + day + "])values ('" + getstaffCode + "','" + mothyear + "','" + leavetype + "')";
                        int val = d2.update_method_wo_parameter(attn_query, "Text");

                    }
                }
                fdate = fdate.AddDays(1);
            }
        }
        else
        {
            for (; fdate <= tdate; )
            {
                DataSet alldateds = new DataSet();
                fromdate = Convert.ToString(fdate);
                string[] sp = fromdate.Split('/');
                day = sp[1];
                month = sp[0];
                string year1 = sp[2];
                string[] sp1 = year1.Split(' ');
                DateTime dt = new DateTime();
                dt = Convert.ToDateTime(sp[0] + "/" + sp[1] + "/" + sp[2]);
                string sunday = dt.ToString("dddd");
                year = sp1[0];
                string mothyear = month + "/" + year;
                string shortname = d2.GetFunction("select l.shortname from leave_category l,RQ_Requisition r where r.LeaveMasterFK=l.LeaveMasterPK and r.RequisitionPK='" + pkcodevalue + "'");
                string code = d2.GetFunction("select category_code from stafftrans where staff_code='" + txt_staff_code.Text + "'");

                string deptCode = d2.GetFunction("select dept_code from stafftrans where staff_code='" + txt_staff_code.Text + "'");//delsi1806
                string get = d2.GetFunction("select holiday_date from holidayStaff where category_code ='" + code + "' and  holiday_date='" + dt + "' and college_code ='" + collegecode1 + "'and dept_code='" + deptCode + "'");


                string reqstaff_app_id = d2.GetFunction("select ReqStaffAppNo from RQ_Requisition where RequisitionPK='" + pkcodevalue + "'");//delsi0906
                string appl_num = d2.GetFunction("select appl_no from staff_appl_master where appl_id='" + reqstaff_app_id + "'");//delsi0906
                string sftcode = d2.GetFunction("select staff_code from staffmaster where appl_no='" + appl_num + "'");//delsi0906
                string quer = "select * from staff_leave_dates where requestfk='" + pkcodevalue + "' and LeaveDate='" + fromdate + "'";
                alldateds = d2.select_method_wo_parameter(quer, "text");
                string session = string.Empty;
                string chkdel = string.Empty;
                if (alldateds.Tables[0].Rows.Count > 0)
                {
                    session = Convert.ToString(alldateds.Tables[0].Rows[0]["SessionType"]);
                    chkdel = Convert.ToString(alldateds.Tables[0].Rows[0]["checkdel"]);

                    if (session == "0")
                    {
                        leavetype = shortname + "-" + shortname;


                    }
                    if (session == "1")
                    {
                        string firsthalf = string.Empty;//delsi11/05/2018
                        string secondhalf = string.Empty;
                        string getpresentapp = d2.GetFunction(" select [" + day + "] from staff_attnd where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + mothyear + "'");
                        if (getpresentapp != null && getpresentapp != "" && getpresentapp != "0")
                        {
                            if (getpresentapp.Contains('-'))
                            {
                                string[] splitval = getpresentapp.Split('-');
                                firsthalf = Convert.ToString(splitval[0]);
                                secondhalf = Convert.ToString(splitval[1]);
                            }


                        }
                        leavetype = shortname + "-" + secondhalf;

                    }
                    if (session == "2")
                    {

                        string firsthalf = string.Empty;
                        string secondhalf = string.Empty;
                        string getpresentapp = d2.GetFunction(" select [" + day + "] from staff_attnd where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + mothyear + "'");
                        if (getpresentapp != null && getpresentapp != "" && getpresentapp != "0")
                        {
                            if (getpresentapp.Contains('-'))
                            {
                                string[] splitval = getpresentapp.Split('-');
                                firsthalf = Convert.ToString(splitval[0]);
                                secondhalf = Convert.ToString(splitval[1]);
                            }

                        }
                        leavetype = firsthalf + "-" + shortname;

                    }
                    if (chkdel == "1")
                    {
                        leavetype = "";

                    }
                }

                bool CheckFalg = false;
                if (sun_check == true)
                {
                    if (sunday == "Sunday")
                    {
                        CheckFalg = true;
                    }
                }
                if (sunday != "Sunday")
                {
                    if (holi_check == true)
                    {
                        CheckFalg = true;
                    }
                    else if (holi_check == false)
                    {
                        if (get == "0")
                        {
                            CheckFalg = true;
                        }
                    }
                }

                string getstaffCode = string.Empty;//delsi0906
                if (txt_staff_code.Text == "" || txt_staff_code.Text == "0")
                {
                    getstaffCode = Convert.ToString(sftcode);

                }


                if (CheckFalg == true)
                {
                    if (txt_staff_code.Text != "")
                    {
                        string attn_query = "if exists (select * from staff_attnd where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + mothyear + "')update staff_attnd set [" + day + "]='" + leavetype + "' where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + mothyear + "'else insert into staff_attnd (staff_code,mon_year,[" + day + "])values ('" + txt_staff_code.Text + "','" + mothyear + "','" + leavetype + "')";
                        int val = d2.update_method_wo_parameter(attn_query, "Text");

                        string update = "update staff_leave_dates set isApproved='1' where requestfk='" + pkcodevalue + "' and LeaveDate='" + fdate + "' and sessiontype='" + session + "'";
                        int upval = d2.update_method_wo_parameter(update, "text");
                    }
                    else //delsi0906
                    {
                        string attn_query = "if exists (select * from staff_attnd where staff_code ='" + getstaffCode + "' and mon_year ='" + mothyear + "')update staff_attnd set [" + day + "]='" + leavetype + "' where staff_code ='" + getstaffCode + "' and mon_year ='" + mothyear + "'else insert into staff_attnd (staff_code,mon_year,[" + day + "])values ('" + getstaffCode + "','" + mothyear + "','" + leavetype + "')";
                        int val = d2.update_method_wo_parameter(attn_query, "Text");

                        string update = "update staff_leave_dates set isApproved='1' where requestfk='" + pkcodevalue + "' and LeaveDate='" + fdate + "' and sessiontype='" + session + "'";
                        int upval = d2.update_method_wo_parameter(update, "text");

                    }
                }
                fdate = fdate.AddDays(1);
            }

        }
    }
    protected void btnsave_click(object sender, EventArgs e)
    {
        try
        {
            string apprl_app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            double value1 = 0;
            double value2 = 0;
            string stage1 = "";
            string getappid = "";
            string pkcode = "";
            string sqlcmd = "";
            string date = DateTime.Now.ToString("MM/dd/yyyy");
            string req = Convert.ToString(TextBox1.Text);
            //string Requisition_no_gate = Convert.ToString(txt_reqtn_gate.Text);
            //string req_appno = d2.GetFunction("select ReqStaffAppNo from RQ_Requisition where RequestType=6 and RequisitionPK='" + req + "'");
            //string appnumb = d2.GetFunction("select ReqAppNo from RQ_Requisition where RequestType=6 and RequisitionPK='" + req + "'");
            //string memtype = d2.GetFunction("select MemType from RQ_Requisition where RequestType=6 and RequisitionPK='" + req + "'");
            string Requisition_no_gate = string.Empty;
            string req_appno = string.Empty;
            string appnumb = string.Empty;
            string memtype = string.Empty;
            string staffstu = string.Empty;
            DataSet RequestSDetailsDS = new DataSet();
            RequestSDetailsDS = d2.select_method_wo_parameter("select ReqStaffAppNo,ReqAppNo,MemType,CONVERT(varchar(10),requestdate,101)requestdate,ReqApproveStage,RequestCode,stud from RQ_Requisition where RequestType=6 and RequisitionPK='" + req + "'", "Text");
            if (RequestSDetailsDS.Tables[0].Rows.Count > 0)
            {
                Requisition_no_gate = Convert.ToString(RequestSDetailsDS.Tables[0].Rows[0]["RequestCode"]);//requestdate
                req_appno = Convert.ToString(RequestSDetailsDS.Tables[0].Rows[0]["ReqStaffAppNo"]);
                appnumb = Convert.ToString(RequestSDetailsDS.Tables[0].Rows[0]["ReqAppNo"]);
                memtype = Convert.ToString(RequestSDetailsDS.Tables[0].Rows[0]["MemType"]);
                pkcode = req;
                stage1 = Convert.ToString(RequestSDetailsDS.Tables[0].Rows[0]["ReqApproveStage"]);
                staffstu = Convert.ToString(RequestSDetailsDS.Tables[0].Rows[0]["stud"]);
            }
            if (panelrollnopop.Visible == true)
            {
                pkcode = req;
                // pkcode = d2.GetFunction("select RequisitionPK from RQ_Requisition where RequestCode='" + Requisition_no_gate + "' ");
                stage1 = d2.GetFunction("select ReqApproveStage from RQ_Requisition where RequisitionPK='" + pkcode + "'");
            }
            if (staffcodesession.Trim() == "" || staffcodesession.Trim() == null)
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "You Are Not Have A Approval Permission";
            }
            else
            {
                if (stage1 == "")
                {
                    stage1 = "0";
                }
                //    value2 = 1;
                //}
                //else
                //{
                value1 = Convert.ToDouble(stage1);
                value2 = value1 + 1;
                // getappid = d2.GetFunction("select ReqAppStaffAppNo from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'");
                //}
                if (staffstu != "1")
                {
                    sqlcmd = " select ReqApproveStage,RequestType, ReqAppStaffAppNo,ReqAppPriority from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "' and ReqStaffAppNo='" + req_appno + "' ";
                    ds = d2.select_method_wo_parameter(sqlcmd, "Text");
                    DataView dv = new DataView();
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        for (int loop = 0; loop < ds.Tables[0].Rows.Count; loop++)
                        {
                            string pri = Convert.ToString(ds.Tables[0].Rows[loop]["ReqAppPriority"]);

                            // string pri ="1";
                            ds.Tables[0].DefaultView.RowFilter = "ReqApproveStage='" + value2 + "' and RequestType=6  ";
                            dv = ds.Tables[0].DefaultView;
                            if (dv.Count > 0)
                            {
                                for (int appro = 0; appro < dv.Count; appro++)
                                {
                                label:

                                    //if ((hrrr > ihr) || (v_min > iday1) || (hrrr > ihr && v_min > iday1))
                                    //{

                                    getappid = Convert.ToString(dv[appro]["ReqAppStaffAppNo"]);
                                    //  getappid = staffcodesession;
                                    imgdiv2.Visible = false;
                                    string getappno1 = d2.GetFunction("select appl_id   from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");


                                    //  getappid = getappno1;
                                    //getappid = d2.GetFunction("select ReqAppStaffAppNo from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'");
                                    string getappno = d2.GetFunction("select staff_code  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and appl_id='" + getappid + "'");
                                    if (getappno == staffcodesession)
                                    {
                                        int appcount = 0;
                                        int tolcount = 0;
                                        appro = dv.Count;
                                        string approvcount = d2.GetFunction("select SUM(ReqAppStatus) as Approvecount from HM_HostelMaster hm,HT_HostelRegistration hr,RQ_Requisition req where hm.HostelMasterPK=hr.HostelMasterFK and hr.APP_No=req.ReqAppNo and hr.MemType='1' and ReqAppStatus='1' and hr.APP_No='" + appnumb + "' and MONTH(RequestDate)=MONTH(GateReqEntryDate) group by HostelGatePassPerCount");
                                        appcount = Convert.ToInt32(approvcount);
                                        string totleavecount = string.Empty;
                                        string stu_type = d2.GetFunction("select Stud_Type  from Registration where  app_no='" + appnumb + "'");
                                        if (stu_type == "hostler" || stu_type == "Hostler" || stu_type.ToUpper() == "HOSTLER")
                                        {
                                            totleavecount = d2.GetFunction("select hm.HostelGatePassPerCount from HT_HostelRegistration ht,HM_HostelMaster hm where app_no='" + appnumb + "'and hm.hostelmasterpk=ht.hostelmasterfk");
                                        }
                                        else
                                            totleavecount = d2.GetFunction("select leavecount from gatepasscount  where college_code='" + collegecode1 + "'");
                                        tolcount = Convert.ToInt32(totleavecount);
                                        //if (panelrollnopop.Visible == true)
                                        //{
                                        if (memtype == "1")
                                        {
                                            if (appcount >= tolcount)
                                            {
                                                imgdiv2.Visible = true;
                                                lbl_alert.Text = "This Student Doesn't Have Approval Permission";
                                                return;
                                            }
                                            else
                                            {
                                                string rq_cancel1 = "select gatereqentrytime,GateReqExitDate from RQ_Requisition where RequestType=6 and  GateReqExitDate>='" + date + "' and ReqAppNo='" + appnumb + "' and RequisitionPK='" + req + "'";
                                                ds = d2.select_method_wo_parameter(rq_cancel1, "Text");
                                                if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                                                {
                                                    string currentdate = DateTime.Now.ToString("dd/MM/yyyy");
                                                    string nowtime = DateTime.Now.ToString();
                                                    string exitdate = Convert.ToString(ds.Tables[0].Rows[0]["GateReqExitDate"]);
                                                    string[] exitdat = exitdate.Split();
                                                    string[] exitdat1 = exitdat[0].Split('/');
                                                    string exitddate = exitdat1[1] + '/' + exitdat1[0] + '/' + exitdat1[2];
                                                    string[] spl = nowtime.Split();
                                                    string[] Spl1 = spl[1].Split(':');
                                                    string nowtime1 = Convert.ToString(ds.Tables[0].Rows[0]["gatereqentrytime"]);

                                                    string[] spl3 = nowtime1.Split(':');

                                                    if (exitddate == currentdate)
                                                    {
                                                        if (spl[2] == spl3[2])
                                                        {
                                                            string hrs = Spl1[0];
                                                            string minss = Spl1[1];
                                                            int hour = 0;
                                                            int.TryParse(hrs, out hour);
                                                            int minsu = 0;
                                                            int.TryParse(minss, out minsu);
                                                            int hours = 0;
                                                            int.TryParse(spl3[0], out hours);
                                                            int minsut = 0;
                                                            int.TryParse(spl3[1], out minsut);
                                                            if (hour == 12)
                                                            {
                                                                if (hours > hour)
                                                                {
                                                                }
                                                            }
                                                            else if (hours < hour)
                                                            {


                                                                imgdiv2.Visible = true;
                                                                lbl_alert.Text = "You Cannot Give the Approval Permission because time out ";
                                                                return;

                                                            }
                                                            if (hours == hour)
                                                            {
                                                                if (minsut < minsu)
                                                                {
                                                                    imgdiv2.Visible = true;
                                                                    lbl_alert.Text = "You Cannot Give the Approval Permission because time out ";
                                                                    return;
                                                                }
                                                            }
                                                        }
                                                        //magesh 21.6.18
                                                        else if (spl[2] == "AM" && spl3[2] == "PM")
                                                        {

                                                        }
                                                        else
                                                        {
                                                            imgdiv2.Visible = true;
                                                            lbl_alert.Text = "You Cannot Give the Approval Permission because time out ";
                                                            return;
                                                        }
                                                    }
                                                    else
                                                    {

                                                    }


                                                }
                                            }
                                        }
                                        else
                                        {
                                            string approvalcount = d2.GetFunction("select SUM(ReqAppStatus) as Approvecount from Master_Settings hm,staff_appl_master hr,RQ_Requisition req where  hr.appl_id=req.ReqAppNo and req.MemType='2' and ReqAppStatus='1' and hr.appl_id='" + appnumb + "' and MONTH(RequestDate)=MONTH(GateReqEntryDate) group by value");
                                            appcount = Convert.ToInt32(approvalcount);
                                            string toatalcount = d2.GetFunction("select value from Master_Settings where settings ='Gatepass Staff Permission' and usercode ='" + usercode + "'");
                                            tolcount = Convert.ToInt32(toatalcount);
                                            if (appcount >= tolcount)
                                            {
                                                imgdiv2.Visible = true;
                                                lbl_alert.Text = "This Staff Doesn't Have Approval Permission";
                                                return;
                                            }
                                        }
                                        string rq_cancel = d2.GetFunction("select count(*) from RQ_Requisition where RequestType=6 and  GateReqExitDate>='" + date + "' and ReqAppNo='" + appnumb + "' and RequisitionPK='" + req + "'");
                                        if (rq_cancel == "0" || rq_cancel == "")
                                        {
                                            imgdiv2.Visible = true;
                                            lbl_alert.Text = "Date is Exited,Request Will Be Delete";
                                            string delquery = "delete from RQ_Requisition where RequisitionPK='" + req + "'";
                                            ds = d2.select_method_wo_parameter(delquery, "Text");
                                            return;
                                        }
                                        else
                                        {
                                            string update_query = "update RQ_Requisition set ReqApproveStage='" + value2 + "',ReqAppStaffAppNo='" + apprl_app + "' where RequisitionPK='" + pkcode + "' and RequestCode='" + Requisition_no_gate + "'";
                                            d2.update_method_wo_parameter(update_query, "Text");
                                            string select_query = "select ReqApproveStage,ReqAppStaffAppNo,ReqAppStatus,RequisitionPK from RQ_Requisition where RequisitionPK='" + pkcode + "' ";
                                            ds = d2.select_method_wo_parameter(select_query, "Text");
                                            if (ds.Tables[0].Rows.Count > 0)
                                            {
                                                for (int j = 0; j < ds.Tables[0].Rows.Count; j++)
                                                {
                                                    string pkv = Convert.ToString(ds.Tables[0].Rows[j]["RequisitionPK"]);
                                                    smsstudrq = pkv;
                                                    string stage = Convert.ToString(ds.Tables[0].Rows[j]["ReqApproveStage"]);
                                                    //  string status = Convert.ToString(ds.Tables[0].Rows[j]["ReqAppStatus"]);
                                                    string status = "1";
                                                    string appno = Convert.ToString(ds.Tables[0].Rows[j]["ReqAppStaffAppNo"]);

                                                    string insert_query = "insert into RQ_RequestionApprove(ReqApproveDate,ReqApproveStage,ReqAppStatus,RequisitionFK,ReqAppStaffAppNo,ReqAppPriority)values('" + date + "','" + stage + "','" + status + "','" + pkv + "','" + getappid + "','" + pri + "')";
                                                    d2.update_method_wo_parameter(insert_query, "Text");
                                                    //if (sms_app == "2")
                                                    //{
                                                    //    sms();
                                                    //}
                                                    string fnl1 = d2.GetFunction("select ReqApproveStage from RQ_Requisition where RequisitionPK='" + pkcode + "'");
                                                    string fnl2 = d2.GetFunction("select ReqApproveStateCount from RQ_RequestHierarchy where RequestType='6' and ReqAppStaffAppNo='" + apprl_app + "'");
                                                    if (fnl1 == fnl2)
                                                    {
                                                        update_query = "update RQ_Requisition set ReqAppStatus=1 where RequisitionPK='" + pkcode + "' and RequestCode='" + Requisition_no_gate + "'";
                                                        d2.update_method_wo_parameter(update_query, "Text");
                                                        if (Convert.ToString(ViewState["MultipleApproval"]) != "1")
                                                            gate();
                                                        sms();
                                                    }
                                                    imgdiv2.Visible = true;
                                                    lbl_alert.Text = "Approved Successfully";
                                                }
                                            }
                                        }
                                        //   //}
                                    }
                                    else
                                    {
                                        imgdiv2.Visible = true;
                                        lbl_alert.Text = "You Cannot Give the Approval Permission";
                                    }
                                }
                            }
                        }
                    }
                }

                else if (staffstu == "1")
                {
                    //for (int loop = 0; loop < ds.Tables[0].Rows.Count; loop++)
                    //{
                    // string pri = Convert.ToString(ds.Tables[0].Rows[loop]["ReqAppPriority"]);
                    Int64 ReqAppStaffAppNo = Convert.ToInt64(da.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'"));
                    sqlcmd = " select ReqApproveStage,RequestType, ReqAppStaffAppNo,ReqAppPriority from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "' and ReqAppStaffAppNo='" + ReqAppStaffAppNo + "' ";
                    ds = d2.select_method_wo_parameter(sqlcmd, "Text");
                    DataView dv = new DataView();
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        for (int loop = 0; loop < ds.Tables[0].Rows.Count; loop++)
                        {
                            string pri = Convert.ToString(ds.Tables[0].Rows[loop]["ReqAppPriority"]);

                            // string pri ="1";
                            ds.Tables[0].DefaultView.RowFilter = "ReqApproveStage='" + value2 + "' and RequestType=6 ";
                            dv = ds.Tables[0].DefaultView;




                            //string pri = "1";
                            // ds.Tables[0].DefaultView.RowFilter = "ReqApproveStage='" + value2 + "' and RequestType=6 ";
                            //  dv = ds.Tables[0].DefaultView;
                            if (dv.Count > 0)
                            {
                                for (int appro = 0; appro < dv.Count; appro++)
                                {
                                    getappid = Convert.ToString(dv[appro]["ReqAppStaffAppNo"]);
                                    // getappid = staffcodesession;
                                    imgdiv2.Visible = false;

                                    string getappno1 = d2.GetFunction("select appl_id   from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");


                                    //  getappid = getappno1;
                                    //getappid = d2.GetFunction("select ReqAppStaffAppNo from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'");
                                    string getappno = d2.GetFunction("select staff_code  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and appl_id='" + getappno1 + "'");
                                    if (getappno == staffcodesession)
                                    {
                                        appro = dv.Count;
                                        int appcount = 0;
                                        int tolcount = 0;
                                        string approvcount = d2.GetFunction("select SUM(ReqAppStatus) as Approvecount from HM_HostelMaster hm,HT_HostelRegistration hr,RQ_Requisition req where hm.HostelMasterPK=hr.HostelMasterFK and hr.APP_No=req.ReqAppNo and hr.MemType='1' and ReqAppStatus='1' and hr.APP_No='" + appnumb + "' and MONTH(RequestDate)=MONTH(GateReqEntryDate) group by HostelGatePassPerCount");
                                        appcount = Convert.ToInt32(approvcount);
                                        string totleavecount = string.Empty;
                                        string stu_type = d2.GetFunction("select Stud_Type  from Registration where  app_no='" + appnumb + "'");
                                        if (stu_type == "hostler" || stu_type == "Hostler" || stu_type.ToUpper() == "HOSTLER")
                                        {
                                            totleavecount = d2.GetFunction("select hm.HostelGatePassPerCount from HT_HostelRegistration ht,HM_HostelMaster hm where app_no='" + appnumb + "'and hm.hostelmasterpk=ht.hostelmasterfk");
                                        }
                                        else
                                            totleavecount = d2.GetFunction("select leavecount from gatepasscount  where college_code='" + collegecode1 + "'");
                                        tolcount = Convert.ToInt32(totleavecount);
                                        //if (panelrollnopop.Visible == true)
                                        //{
                                        if (memtype == "1")
                                        {
                                            if (appcount >= tolcount)
                                            {
                                                imgdiv2.Visible = true;
                                                lbl_alert.Text = "This Student Doesn't Have Approval Permission";
                                                return;
                                            }
                                        }
                                        else
                                        {
                                            string approvalcount = d2.GetFunction("select SUM(ReqAppStatus) as Approvecount from Master_Settings hm,staff_appl_master hr,RQ_Requisition req where  hr.appl_id=req.ReqAppNo and req.MemType='2' and ReqAppStatus='1' and hr.appl_id='" + appnumb + "' and MONTH(RequestDate)=MONTH(GateReqEntryDate) group by value");
                                            appcount = Convert.ToInt32(approvalcount);
                                            string toatalcount = d2.GetFunction("select value from Master_Settings where settings ='Gatepass Staff Permission' and usercode ='" + usercode + "'");
                                            tolcount = Convert.ToInt32(toatalcount);
                                            if (appcount >= tolcount)
                                            {
                                                imgdiv2.Visible = true;
                                                lbl_alert.Text = "This Staff Doesn't Have Approval Permission";
                                                return;
                                            }
                                        }
                                        string rq_cancel = d2.GetFunction("select count(*) from RQ_Requisition where RequestType=6 and  GateReqExitDate>='" + date + "' and ReqAppNo='" + appnumb + "' and RequisitionPK='" + req + "'");
                                        if (rq_cancel == "0" || rq_cancel == "")
                                        {
                                            imgdiv2.Visible = true;
                                            lbl_alert.Text = "Date is Exited,Request Will Be Delete";
                                            string delquery = "delete from RQ_Requisition where RequisitionPK='" + req + "'";
                                            ds = d2.select_method_wo_parameter(delquery, "Text");
                                            return;
                                        }
                                        else
                                        {
                                            string update_query = "update RQ_Requisition set ReqApproveStage='" + value2 + "',ReqAppStaffAppNo='" + apprl_app + "' where RequisitionPK='" + pkcode + "' and RequestCode='" + Requisition_no_gate + "'";
                                            d2.update_method_wo_parameter(update_query, "Text");
                                            string select_query = "select ReqApproveStage,ReqAppStaffAppNo,ReqAppStatus,RequisitionPK from RQ_Requisition where RequisitionPK='" + pkcode + "' ";
                                            ds = d2.select_method_wo_parameter(select_query, "Text");
                                            if (ds.Tables[0].Rows.Count > 0)
                                            {
                                                for (int j = 0; j < ds.Tables[0].Rows.Count; j++)
                                                {
                                                    string pkv = Convert.ToString(ds.Tables[0].Rows[j]["RequisitionPK"]);
                                                    smsstudrq = pkv;
                                                    string stage = Convert.ToString(ds.Tables[0].Rows[j]["ReqApproveStage"]);
                                                    //  string status = Convert.ToString(ds.Tables[0].Rows[j]["ReqAppStatus"]);
                                                    string status = "1";
                                                    string appno = Convert.ToString(ds.Tables[0].Rows[j]["ReqAppStaffAppNo"]);
                                                    string insert_query = "insert into RQ_RequestionApprove(ReqApproveDate,ReqApproveStage,ReqAppStatus,RequisitionFK,ReqAppStaffAppNo,ReqAppPriority)values('" + date + "','" + stage + "','" + status + "','" + pkv + "','" + getappid + "','" + pri + "')";
                                                    d2.update_method_wo_parameter(insert_query, "Text");
                                                    //if (sms_app == "2")
                                                    //{
                                                    //    sms();
                                                    //}
                                                    string fnl1 = d2.GetFunction("select ReqApproveStage from RQ_Requisition where RequisitionPK='" + pkcode + "'");
                                                    string fnl2 = d2.GetFunction("select ReqApproveStateCount from RQ_RequestHierarchy where RequestType='6' and ReqAppStaffAppNo='" + apprl_app + "'");
                                                    if (fnl1 == fnl2)
                                                    {
                                                        update_query = "update RQ_Requisition set ReqAppStatus=1 where RequisitionPK='" + pkcode + "' and RequestCode='" + Requisition_no_gate + "'";
                                                        d2.update_method_wo_parameter(update_query, "Text");
                                                        if (Convert.ToString(ViewState["MultipleApproval"]) != "1")
                                                            gate();
                                                        sms();
                                                    }
                                                    imgdiv2.Visible = true;
                                                    lbl_alert.Text = "Approved Successfully";
                                                }
                                            }
                                        }
                                        //   //}
                                    }
                                    else
                                    {
                                        imgdiv2.Visible = true;
                                        lbl_alert.Text = "You Cannot Give the Approval Permission";
                                    }
                                    // }
                                    //  }
                                }
                            }
                            else
                            {
                                imgdiv2.Visible = true;
                                lbl_alert.Text = "You Cannot Give the Approval Permission";
                                return;
                            }
                        }
                    }
                }
            }
        }
        catch
        {
        }
    }
    //***********************Event start************************
    public void rdb1_CheckedChanged(object sender, EventArgs e)
    {
    }
    public void rdb2_CheckedChanged(object sender, EventArgs e)
    {
    }
    public void cbl_branch_SelectedIndexChanged(object sender, EventArgs e)
    {
    }
    public void cb_branch_checkedchange(object sender, EventArgs e)
    {
    }
    public void cbl_degree_SelectedIndexChanged(object sender, EventArgs e)
    {
    }
    public void cb_degree_checkedchange(object sender, EventArgs e)
    {
    }
    public void ddl_org_batch_SelectedIndexChanged(object sender, EventArgs e)
    {
    }
    public void cb_or_sem_checkedchange(object sender, EventArgs e)
    {
    }
    public void cbl_or_sem_SelectedIndexChanged(object sender, EventArgs e)
    {
    }
    public void cb_staff_name1_CheckedChange(object sender, EventArgs e)
    {
    }
    public void cb_staff_name1_SelectedIndexChanged(object sender, EventArgs e)
    {
    }
    public void BindGridviewadd()
    {
        //gridadd.Visible = true;
        //DataTable dt = new DataTable();
        //dt.Columns.Add("Dummy");
        //dt.Columns.Add("Dummy1");
        //dt.Columns.Add("Dummy2");
        //dt.Columns.Add("Dummy3");
        //dt.Columns.Add("Dummy4");
        //dt.Columns.Add("Dummay5");
        //dt.Columns.Add("Dummay6");
        //dt.Columns.Add("Dummay7");
        //DataRow dr;
        //dr = dt.NewRow();
        //dr[0] = "1";
        //dr[1] = "";
        //dr[2] = "";
        //dr[3] = "";
        //dr[4] = "";
        //dr[5] = "";
        //dr[6] = "";
        //dt.Rows.Add(dr);
        //if (dt.Rows.Count > 0)
        //{
        //    gridadd.DataSource = dt;
        //    gridadd.DataBind();
        //}
    }
    public void btn_app_eventsave_Click(object sender, EventArgs e)
    {
        try
        {
            string getappno = "";
            double value1 = 0;
            double value2 = 0;
            string stage1 = "";
            string getappid = "";
            string pkcode = "";
            string sqlcmd = "";
            string stg = "";
            string reqno_item = Convert.ToString(rqustn_no_event.Text);
            string req = Convert.ToString(TextBox8.Text);
            string date = DateTime.Now.ToString("MM/dd/yyyy");
            string cstaff = d2.GetFunction(" select ReqAppNo from RQ_Requisition where RequestType=7 and RequisitionPK='" + req + "'");
            string lonstaff = d2.GetFunction("select sm.appl_id from staff_appl_master sm,staffmaster s where sm.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            pkcode = req;
            stage1 = d2.GetFunction("select ReqApproveStage from RQ_Requisition where RequisitionPK='" + pkcode + "'");
            stg = stage1;
            if (staffcodesession.Trim() == "" || staffcodesession.Trim() == null)
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "You Do Not Have Approval Permission";
            }
            else
            {
                if (stage1 == "0")
                {
                    value2 = 1;
                }
                else
                {
                    value1 = Convert.ToInt32(stage1);
                    value2 = value1 + 1;
                }
                sqlcmd = " select ReqApproveStage,RequestType, ReqAppStaffAppNo,ReqAppPriority from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'and RequestType=7 and ReqStaffAppNo='" + cstaff + "'";
                ds = d2.select_method_wo_parameter(sqlcmd, "Text");
                DataView dv = new DataView();
                if (ds.Tables[0].Rows.Count > 0)
                {
                    for (int loop = 0; loop < ds.Tables[0].Rows.Count; loop++)
                    {
                        string priorityval = d2.GetFunction("select ReqAppPriority from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'");
                        string pri = Convert.ToString(ds.Tables[0].Rows[loop]["ReqAppPriority"]);
                        ds.Tables[0].DefaultView.RowFilter = "ReqApproveStage='" + value2 + "' and RequestType=7 and ReqAppStaffAppNo='" + lonstaff + "'";
                        dv = ds.Tables[0].DefaultView;
                        if (dv.Count > 0)
                        {
                            getappid = Convert.ToString(dv[0]["ReqAppStaffAppNo"]);
                            getappno = d2.GetFunction("select staff_code  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and appl_id='" + getappid + "'");
                            if (getappno == staffcodesession)
                            {
                                if (div_event_app.Visible == true)
                                {
                                    string update_query = "update RQ_Requisition set ReqApproveStage='" + value2 + "',ReqAppStatus='0' where RequisitionPK='" + pkcode + "' and RequestCode='" + reqno_item + "'";
                                    d2.update_method_wo_parameter(update_query, "Text");
                                    string select_query = "select ReqApproveStage,ReqStaffAppNo,ReqAppStatus,RequisitionPK from RQ_Requisition where RequisitionPK='" + pkcode + "' ";
                                    ds = d2.select_method_wo_parameter(select_query, "Text");
                                    if (ds.Tables[0].Rows.Count > 0)
                                    {
                                        for (int j = 0; j < ds.Tables[0].Rows.Count; j++)
                                        {
                                            string pkv = Convert.ToString(ds.Tables[0].Rows[j]["RequisitionPK"]);
                                            string stage = Convert.ToString(ds.Tables[0].Rows[j]["ReqApproveStage"]);
                                            string status = Convert.ToString(ds.Tables[0].Rows[j]["ReqAppStatus"]);
                                            string appno = Convert.ToString(ds.Tables[0].Rows[j]["ReqStaffAppNo"]);
                                            string insert_query = "insert into RQ_RequestionApprove(ReqApproveDate,ReqApproveStage,ReqAppStatus,RequisitionFK,ReqAppStaffAppNo,ReqAppPriority)values('" + date + "','" + stage + "','" + status + "','" + pkv + "','" + appno + "','" + pri + "')";
                                            d2.update_method_wo_parameter(insert_query, "Text");
                                            string fnl1 = d2.GetFunction("select ReqApproveStage from RQ_Requisition where RequisitionPK='" + pkcode + "'");
                                            string fnl2 = d2.GetFunction("select max(ReqApproveStage) from RQ_RequestHierarchy where RequestType='7' and ReqStaffAppNo='" + cstaff + "'");
                                            if (fnl1 == fnl2)
                                            {
                                                update_query = "update RQ_Requisition set ReqApproveStage='" + value2 + "',ReqAppStatus='1',ReqAppStaffAppNo='" + getappid + "' where RequisitionPK='" + pkcode + "' and RequestCode='" + rqustn_no_event.Text + "'";
                                                d2.update_method_wo_parameter(update_query, "Text");
                                            }
                                            if (sms_app == "2")
                                            {
                                                sms();
                                            }
                                            imgdiv2.Visible = true;
                                            lbl_alert.Text = "Approved Successfully";
                                        }
                                    }
                                }
                            }
                            else
                            {
                                imgdiv2.Visible = true;
                                lbl_alert.Text = "You Cannot Give the Approval Permission";
                            }
                        }
                        else
                        {
                            string qur = "select ReqAppStaffAppNo from RQ_RequestHierarchy where ReqApproveStage='" + stg + "' and RequestType='7' and ReqStaffAppNo='" + cstaff + "'";
                            ds1.Clear();
                            ds1 = d2.select_method_wo_parameter(qur, "text");
                            if (ds1.Tables[0].Rows.Count > 0)
                            {
                                string checkstaff = "";
                                for (int z = 0; z < ds1.Tables[0].Rows.Count; z++)
                                {
                                    checkstaff = Convert.ToString(ds1.Tables[0].Rows[z]["ReqAppStaffAppNo"]);
                                    if (checkstaff == lonstaff)
                                    {
                                        imgdiv2.Visible = true;
                                        lbl_alert.Text = "Already Approved";
                                    }
                                }
                            }
                            else
                            {
                                imgdiv2.Visible = true;
                                lbl_alert.Text = "You Cannot Give the Approval Permission";
                            }
                        }
                    }
                }
                else
                {
                    string checkstaff = d2.GetFunction("select ReqAppStaffAppNo from RQ_RequestHierarchy where ReqApproveStage='" + stg + "' and RequestType='7' and ReqStaffAppNo='" + cstaff + "'");
                    if (checkstaff == lonstaff)
                    {
                        imgdiv2.Visible = true;
                        lbl_alert.Text = "Already You Gave a Approval";
                    }
                }
            }
        }
        catch
        {
        }
    }
    public void access()
    {
        try
        {
            string query = "";
            string Master1 = "";
            string sms = "";
            string sms1 = "";
            string sms2 = "";
            if ((Session["group_code"].ToString().Trim() != "") && (Session["group_code"].ToString().Trim() != "0") && (Session["group_code"].ToString().Trim() != "-1"))
            {
                string group = Session["group_code"].ToString();
                if (group.Contains(';'))
                {
                    string[] group_semi = group.Split(';');
                    Master1 = group_semi[0].ToString();
                    query = "select * from Master_Settings where settings ='SMS Rights' and group_code ='" + Master1 + "'";
                }
                else
                    query = "select * from Master_Settings where settings ='Gatepass Staff Permission' and group_code ='" + group + "'"; //poo 12.12.17
            }
            else
            {
                Master1 = Session["usercode"].ToString();
                query = "select * from Master_Settings where settings ='SMS Rights' and usercode ='" + Master1 + "'";
            }
            ds1 = d2.select_method_wo_parameter(query, "Text");
            if (ds1.Tables[0].Rows.Count > 0)
            {
                for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                {
                    string val = Convert.ToString(ds1.Tables[0].Rows[i]["value"]);
                    string[] split1 = val.Split('-');
                    string[] split = split1[0].Split(',');
                    for (int u = 0; u < split.Length; u++)
                    {
                        if (split[u] == "1")
                        {
                            sms_req = "1";
                        }
                        if (split[u] == "2")
                        {
                            sms_app = "2";
                        }
                        if (split[u] == "3")
                        {
                            sms_exit = "3";
                        }
                        if (split[u] == "4")
                        {
                            sms_reject = "4";
                        }
                    }
                }
            }
        }
        catch
        {
        }
    }
    public void access1()
    {
        try
        {
            string query = "";
            string Master1 = "";
            string stud = "";
            string values = "";
            string sms = "";
            string sms1 = "";
            string sms2 = "";
            if ((Session["group_code"].ToString().Trim() != "") && (Session["group_code"].ToString().Trim() != "0") && (Session["group_code"].ToString().Trim() != "-1"))
            {
                string group = Session["group_code"].ToString();
                if (group.Contains(';'))
                {
                    string[] group_semi = group.Split(';');
                    Master1 = group_semi[0].ToString();
                    query = "select * from Master_Settings where settings ='SMS Mobile Rights' and group_code ='" + Master1 + "'"; //poo 12.12.17
                }
                else
                    query = "select * from Master_Settings where settings ='Gatepass Staff Permission' and group_code ='" + group + "'"; //poo 12.12.17

            }
            else
            {
                Master1 = Session["usercode"].ToString();
                query = "select * from Master_Settings where settings ='SMS Mobile Rights' and usercode ='" + Master1 + "'";
            }
            ds = d2.select_method_wo_parameter(query, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    string val = Convert.ToString(ds.Tables[0].Rows[i]["value"]);
                    string[] split = val.Split(',');
                    if (split.Length == 1)
                    {
                        sms = split[0];
                        if (sms == "1")
                        {
                            sms_mom = sms;
                        }
                        else if (sms == "2")
                        {
                            sms_dad = sms;
                        }
                        else if (sms == "3")
                        {
                            sms_stud = sms;
                        }
                    }
                    else if (split.Length == 2)
                    {
                        sms = split[0];
                        sms1 = split[1];
                        if (sms == "1")
                        {
                            sms_mom = sms;
                        }
                        else if (sms == "2")
                        {
                            sms_dad = sms;
                        }
                        else if (sms == "3")
                        {
                            sms_stud = sms;
                        }
                        if (sms1 == "1")
                        {
                            sms_mom = sms1;
                        }
                        else if (sms1 == "2")
                        {
                            sms_dad = sms1;
                        }
                        else if (sms1 == "3")
                        {
                            sms_stud = sms1;
                        }
                    }
                    else
                    {
                        sms = split[0];
                        sms1 = split[1];
                        sms2 = split[2];
                        sms_mom = "1";
                        sms_dad = "2";
                        sms_stud = "3";
                    }
                }
            }
        }
        catch
        {
        }
    }
    [System.Web.Script.Services.ScriptMethod()]
    [System.Web.Services.WebMethod]
    public static List<string> Getnamegatpass(string prefixText)
    {
        DataSet dt = new DataSet();
        DAccess2 dsa = new DAccess2();
        List<string> CityNames = new List<string>();
        // string strsql = "select distinct r.Batch_Year,r.Roll_No,r.Reg_No,r.stud_name,r.Stud_Type,hd.Hostel_Name,hd.Hostel_code,hs.Floor_Name,hs.Room_Name  from Hostel_StudentDetails hs,Registration r,Hostel_Details hd where hd.Hostel_code=hs.Hostel_Code and hs.Roll_Admit=r.Roll_Admit and  Stud_Type='Hostler' and r.stud_name like '" + prefixText + "%'";
        string strsql = " select distinct r.Batch_Year,r.Roll_No,r.Reg_No,r.stud_name,r.Stud_Type,hd.HostelName,hd.HostelMasterPK,hs.FloorFK, hs.Roomfk  from HT_HostelRegistration hs,Registration r,HM_HostelMaster hd where hd.HostelMasterPK=hs.HostelMasterFK and hs.App_No=r.APP_No and  Stud_Type='Hostler' and r.stud_name like '" + prefixText + "%'";
        dt = dsa.select_method_wo_parameter(strsql, "text");
        for (int i = 0; i < dt.Tables[0].Rows.Count; i++)
        {
            CityNames.Add(dt.Tables[0].Rows[i]["stud_name"].ToString());
        }
        return CityNames;
    }
    [System.Web.Script.Services.ScriptMethod()]
    [System.Web.Services.WebMethod]
    public static List<string> Getroll(string prefixText)
    {
        DataSet dt = new DataSet();
        DAccess2 dsa = new DAccess2();
        List<string> CityNames = new List<string>();
        string strsql = " select distinct r.Batch_Year,r.Roll_No,r.Reg_No,r.stud_name,r.Stud_Type,hd.HostelName,hd.HostelMasterPK,hs.FloorFK, hs.Roomfk  from HT_HostelRegistration hs,Registration r,HM_HostelMaster hd where hd.HostelMasterPK=hs.HostelMasterFK and hs.App_No=r.APP_No and  Stud_Type='Hostler' and r.roll_no like '" + prefixText + "%'";
        dt = dsa.select_method_wo_parameter(strsql, "text");
        for (int i = 0; i < dt.Tables[0].Rows.Count; i++)
        {
            CityNames.Add(dt.Tables[0].Rows[i]["roll_no"].ToString());
        }
        return CityNames;
    }
    public void txt_studrptroll_Changed(object sender, EventArgs e)
    {
        if (txt_studrptroll.Text != "")
        {
            txt_studrptname.Text = "";
        }
    }
    public void txt_studrptname_Changed(object sender, EventArgs e)
    {
        if (txt_studrptname.Text != "")
        {
            txt_studrptroll.Text = "";
        }
    }
    public void btn_rptfind_Click(object sender, EventArgs e)
    {
        //imgbtn_gatepass_Click(sender, e);
        div_event.Visible = false;
        gate_div.Visible = true;
        item_div.Visible = false;
        service_div.Visible = false;
        vist_div.Visible = false;
        comp_div.Visible = false;
        leave_div.Visible = false;
        div_all.Visible = false;
        loadhour();
        loadminits();
        timevalue();
        getsaveColumnOrder();
        gate();
    }
    public void bindgrid()
    {
        try
        {
            Hashtable monthlst = new Hashtable();
            monthlst.Clear();
            DataTable dt = new DataTable();
            dt.Columns.Add("Sno");
            dt.Columns.Add("month");
            dt.Columns.Add("monthno");
            dt.Columns.Add("allleave");
            dt.Columns.Add("grantleave");
            dt.Columns.Add("Remainlev");
            DataRow dr;
            monthlst.Add(01, "Jan");
            monthlst.Add(02, "Feb");
            monthlst.Add(03, "Mar");
            monthlst.Add(04, "Apr");
            monthlst.Add(05, "May");
            monthlst.Add(06, "Jun");
            monthlst.Add(07, "July");
            monthlst.Add(08, "Aug");
            monthlst.Add(09, "Sep");
            monthlst.Add(10, "Oct");
            monthlst.Add(11, "Nov");
            monthlst.Add(12, "Dec");
            string app_no = Convert.ToString(ViewState["app_no"]);
            string alllev = "";
            string allotleave = d2.GetFunction("select HostelGatePassPerCount from HM_HostelMaster hm,HT_HostelRegistration hr where hm.HostelmasterPK=hr.HostelMasterFK and App_No='" + app_no + "' and MemType='1'");
            if (allotleave.Trim() != "0")
            {
                alllev = allotleave;
            }
            else
            {
                alllev = "0";
            }
            for (int i = 1; i <= 12; i++)
            {
                dr = dt.NewRow();
                dr["Sno"] = i;
                dr["month"] = Convert.ToString(monthlst[i]);
                dr["allleave"] = Convert.ToString(alllev);
                string val = Convert.ToString(i);
                if (val.Length == 1)
                {
                    val = "0" + val;
                }
                else
                {
                    val = Convert.ToString(i);
                }
                string selquery = "select ISNULL(HostelGatePassPerCount,0)-SUM(ISNULL(ReqAppStatus,0)) as Gatepasscount,SUM(ReqAppStatus) as Approvecount from HM_HostelMaster hm,HT_HostelRegistration hr,RQ_Requisition req where hm.HostelMasterPK=hr.HostelMasterFK and hr.APP_No=req.ReqAppNo and hr.MemType='1' and ReqAppStatus='1' and hr.APP_No='" + app_no + "' and MONTH(RequestDate)=MONTH(GateReqEntryDate) and SUBSTRING(CONVERT(varchar(10), RequestDate, 105), 4, 2)='" + val + "' group by HostelGatePassPerCount";
                ds.Clear();
                ds = d2.select_method_wo_parameter(selquery, "Text");
                if (ds.Tables.Count > 0)
                {
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        dr["grantleave"] = Convert.ToString(ds.Tables[0].Rows[0]["Approvecount"]);
                        dr["Remainlev"] = Convert.ToString(ds.Tables[0].Rows[0]["Gatepasscount"]);
                    }
                    else
                    {
                        dr["grantleave"] = 0;
                        dr["Remainlev"] = Convert.ToInt32(alllev) - Convert.ToInt32(dr["grantleave"]);
                    }
                }
                dt.Rows.Add(dr);
            }
            grdshow.DataSource = dt;
            grdshow.DataBind();
            grdshow.Visible = true;
            divright.Visible = true;
        }
        catch
        {
        }
    }
    public void bindgridleave()
    {
        try
        {
            DataTable dt = new DataTable();
            dt.Columns.Add("Month");
            dt.Columns.Add("allleave");
            dt.Columns.Add("grantleave");
            dt.Columns.Add("balleave");
            Hashtable monthlst = new Hashtable();
            monthlst.Clear();
            monthlst.Add(01, "January");
            monthlst.Add(02, "Feburary");
            monthlst.Add(03, "March");
            monthlst.Add(04, "April");
            monthlst.Add(05, "May");
            monthlst.Add(06, "June");
            monthlst.Add(07, "July");
            monthlst.Add(08, "August");
            monthlst.Add(09, "September");
            monthlst.Add(10, "October");
            monthlst.Add(11, "November");
            monthlst.Add(12, "December");
            DataRow dr = null;
            string activerow = "";
            string req_no = "";
            if (div_all.Visible == true)
            {
                activerow = Fpspread9.ActiveSheetView.ActiveRow.ToString();
                req_no = Convert.ToString(Fpspread9.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
            }
            else
            {
                activerow = Fpspread6.ActiveSheetView.ActiveRow.ToString();
                req_no = Convert.ToString(Fpspread6.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
            }
            string appno = d2.GetFunction("select ReqAppNo from RQ_Requisition where RequestType=6 and RequisitionPK='" + req_no + "'");
            string stu_type = d2.GetFunction("select Stud_Type  from Registration where Roll_No ='" + Convert.ToString(Session["rollno"]) + "'");
            string app1 = string.Empty;
            string gatecount = string.Empty;
            if (stu_type == "hostler" || stu_type == "Hostler" || stu_type == "HOSTLER")
            {
                app1 = d2.GetFunction("select HostelMasterFK from HT_HostelRegistration where app_no='" + appno + "'");
                gatecount = d2.GetFunction("select HostelGatePassPerCount from HM_HostelMaster where HostelMasterPK='" + app1 + "'");
            }
            else
                gatecount = d2.GetFunction("select leavecount from gatepasscount  where college_code='" + collegecode1 + "'");
            string leave = d2.GetFunction("select COUNT(ReqAppStatus) as count from RQ_Requisition where ReqAppNo='" + appno + "' and RequestType=6 and ReqAppStatus='1'");
            string alllev = "";
            string allotleave = string.Empty;
            if (stu_type == "hostler" || stu_type == "Hostler" || stu_type == "HOSTLER")
            {
                allotleave = d2.GetFunction("select HostelGatePassPerCount from HM_HostelMaster hm,HT_HostelRegistration hr where hm.HostelmasterPK=hr.HostelMasterFK and App_No='" + appno + "' and MemType='1'");
            }
            else
                allotleave = d2.GetFunction("select leavecount from gatepasscount  where college_code='" + collegecode1 + "'");
            if (allotleave.Trim() != "0")
            {
                alllev = allotleave;
            }
            else
            {
                alllev = "0";
            }
            for (int i = 1; i < 12; i++)
            {
                dr = dt.NewRow();
                dr["month"] = Convert.ToString(monthlst[i]);
                dr["allleave"] = Convert.ToString(alllev);
                string val = Convert.ToString(i);
                if (val.Length == 1)
                {
                    val = "0" + val;
                }
                else
                {
                    val = Convert.ToString(i);
                }
                string selquery = string.Empty;
                if (stu_type == "hostler" || stu_type == "Hostler" || stu_type == "HOSTLER")
                {
                    selquery = "select ISNULL(HostelGatePassPerCount,0)-SUM(ISNULL(ReqAppStatus,0)) as Gatepasscount,SUM(ReqAppStatus) as Approvecount from HM_HostelMaster hm,HT_HostelRegistration hr,RQ_Requisition req where hm.HostelMasterPK=hr.HostelMasterFK and hr.APP_No=req.ReqAppNo and hr.MemType='1' and ReqAppStatus='1' and hr.APP_No='" + appno + "' and MONTH(RequestDate)=MONTH(GateReqEntryDate) and SUBSTRING(CONVERT(varchar(10), RequestDate, 105), 4, 2)='" + val + "' group by HostelGatePassPerCount";
                }
                else
                    selquery = "select ISNULL(leavecount,0)-SUM(ISNULL(ReqAppStatus,0)) as Gatepasscount,SUM(ReqAppStatus) as Approvecount from gatepasscount,registration r,RQ_Requisition req where r.APP_No=req.ReqAppNo  and ReqAppStatus='1' and r.APP_No='" + appno + "' and MONTH(RequestDate)=MONTH(GateReqEntryDate) and SUBSTRING(CONVERT(varchar(10), RequestDate, 105), 4, 2)='" + val + "' group by leavecount";
                ds.Clear();
                ds = d2.select_method_wo_parameter(selquery, "Text");
                if (ds.Tables.Count > 0)
                {
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        dr["grantleave"] = Convert.ToString(ds.Tables[0].Rows[0]["Approvecount"]);
                        dr["balleave"] = Convert.ToString(ds.Tables[0].Rows[0]["Gatepasscount"]);
                    }
                    else
                    {
                        dr["grantleave"] = 0;
                        dr["balleave"] = Convert.ToInt32(alllev) - Convert.ToInt32(dr["grantleave"]);
                    }
                }
                dt.Rows.Add(dr);
            }
            if (dt.Rows.Count > 0)
            {
                grdshow.DataSource = dt;
                grdshow.DataBind();
                grdshow.Visible = true;
                divright.Visible = true;
            }
            Session["rollno"] = "";
        }
        catch
        {
        }
    }
    public void bindgridleavestaff()
    {
        try
        {
            DataTable dt = new DataTable();
            dt.Columns.Add("Month");
            dt.Columns.Add("allleave");
            dt.Columns.Add("grantleave");
            dt.Columns.Add("balleave");
            Hashtable monthlst = new Hashtable();
            monthlst.Clear();
            monthlst.Add(01, "January");
            monthlst.Add(02, "Feburary");
            monthlst.Add(03, "March");
            monthlst.Add(04, "April");
            monthlst.Add(05, "May");
            monthlst.Add(06, "June");
            monthlst.Add(07, "July");
            monthlst.Add(08, "August");
            monthlst.Add(09, "September");
            monthlst.Add(10, "October");
            monthlst.Add(11, "November");
            monthlst.Add(12, "December");
            DataRow dr = null;
            string activerow = "";
            string req_no = "";
            if (div_all.Visible == true)
            {
                activerow = Fpspread9.ActiveSheetView.ActiveRow.ToString();
                req_no = Convert.ToString(Fpspread9.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
            }
            else
            {
                activerow = Fpspread6.ActiveSheetView.ActiveRow.ToString();
                req_no = Convert.ToString(Fpspread6.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
            }
            string appno = d2.GetFunction("select ReqAppNo from RQ_Requisition where RequestType=6 and RequisitionPK='" + req_no + "'");
            string gatecount = d2.GetFunction("select value from Master_Settings where settings ='Gatepass Staff Permission' and usercode ='" + usercode + "'");
            string leave = d2.GetFunction("select COUNT(ReqAppStatus) as count from RQ_Requisition where ReqAppNo='" + appno + "' and RequestType=6 and MemType=2 and ReqAppStatus='1'");
            string alllev = "";
            string allotleave = d2.GetFunction("select value from Master_Settings where settings ='Gatepass Staff Permission' and usercode ='" + usercode + "'");
            if (allotleave.Trim() != "0")
            {
                alllev = allotleave;
            }
            else
            {
                alllev = "0";
            }
            for (int i = 1; i < 12; i++)
            {
                dr = dt.NewRow();
                dr["month"] = Convert.ToString(monthlst[i]);
                dr["allleave"] = Convert.ToString(alllev);
                string val = Convert.ToString(i);
                if (val.Length == 1)
                {
                    val = "0" + val;
                }
                else
                {
                    val = Convert.ToString(i);
                }
                string selquery = "select SUM(ReqAppStatus) as Approvecount from RQ_Requisition req where req.MemType='2' and ReqAppStatus='1' and RequestType='6' and req.ReqStaffAppNo='" + appno + "' and MONTH(RequestDate)=MONTH(GateReqEntryDate) and SUBSTRING(CONVERT(varchar(10), RequestDate, 105), 4, 2)='" + val + "'";
                //select ISNULL(value,0)-SUM(ISNULL(ReqAppStatus,0)) as Gatepasscount,SUM(ReqAppStatus) as Approvecount from Master_Settings m,RQ_Requisition req,staff_appl_master sm where  sm.appl_id=req.ReqAppNo and req.MemType='2' and ReqAppStatus='1' and req.ReqAppNo='"+appno+"' and MONTH(RequestDate)=MONTH(GateReqEntryDate) and SUBSTRING(CONVERT(varchar(10), RequestDate, 105), 4, 2)='"+val+"' group by value";
                string Gatepasscount = d2.GetFunction("select value from Master_Settings where usercode='" + usercode + "' and settings='Gatepass Staff Permission'");
                ds.Clear();
                ds = d2.select_method_wo_parameter(selquery, "Text");
                if (ds.Tables.Count > 0)
                {
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        string approvecount = Convert.ToString(ds.Tables[0].Rows[0]["Approvecount"]);
                        if (approvecount == "")
                        {
                            approvecount = "0";
                        }
                        int balance = Convert.ToInt32(Gatepasscount) - Convert.ToInt32(approvecount);
                        dr["grantleave"] = approvecount;
                        dr["balleave"] = balance;
                    }
                    else
                    {
                        dr["grantleave"] = 0;
                        dr["balleave"] = Convert.ToInt32(alllev) - Convert.ToInt32(dr["grantleave"]);
                    }
                }
                dt.Rows.Add(dr);
            }
            if (dt.Rows.Count > 0)
            {
                GridView1.DataSource = dt;
                GridView1.DataBind();
                GridView1.Visible = true;
                div4.Visible = true;
            }
        }
        catch
        {
        }
    }
    public void bt1_delete_ok_Click(object sender, EventArgs e)
    {
        try
        {

            string deletepermission = string.Empty;
            string usergrpcode = string.Empty;
            string query = "";
            string Master1 = "";

            if ((Session["group_code"].ToString().Trim() != "") && (Session["group_code"].ToString().Trim() != "0") && (Session["group_code"].ToString().Trim() != "-1"))
            {
                string group = Session["group_code"].ToString();
                if (group.Contains(';'))
                {
                    string[] group_semi = group.Split(';');
                    Master1 = group_semi[0].ToString();
                    query = "select * from Master_Settings where settings ='Leave Delete Permission' and group_code ='" + Master1 + "'";
                }
                else
                    query = "select * from Master_Settings where settings ='Leave Delete Permission' and group_code ='" + group + "'"; // poo 11.12.17
            }
            else
            {
                query = "select * from Master_Settings where settings ='Leave Delete Permission' AND usercode='" + usercode + "'";
            }

            DataSet qrycheck = new DataSet();
            qrycheck.Clear();
            qrycheck = d2.select_method_wo_parameter(query, "text");

            if (qrycheck.Tables[0].Rows.Count > 0)
            {
                for (int i = 0; i < qrycheck.Tables[0].Rows.Count; i++)
                {
                    string val = Convert.ToString(qrycheck.Tables[0].Rows[i]["value"]);
                    deletepermission = val;
                }
            }

            double checkvalue = 0;
            string activerow = "";
            string det = "";
            string appstatus = "";
            bool saveflage = false;
            string currentdate = DateTime.Now.ToString("dd/MM/yyyy");
            string[] ay = currentdate.Split('/');
            DateTime dt = new DateTime();
            dt = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
            if (Fpspread1.Visible == true)
            {
                for (int i = 0; i < Fpspread1.Sheets[0].RowCount; i++)
                {
                    double.TryParse(Convert.ToString(Fpspread1.Sheets[0].Cells[i, 1].Value), out checkvalue);
                    if (checkvalue == 1)
                    {
                        activerow = Fpspread1.ActiveSheetView.ActiveRow.ToString();
                        string val = Convert.ToString(Fpspread1.Sheets[0].Cells[Convert.ToInt32(i), 0].Tag);
                        string selQ = " select Requestcode,ReqApproveStage from RQ_Requisition where RequisitionPK='" + val + "'";
                        ds.Clear();
                        ds = d2.select_method_wo_parameter(selQ, "Text");
                        if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                        {
                            det = Convert.ToString(ds.Tables[0].Rows[0]["Requestcode"]);
                            appstatus = Convert.ToString(ds.Tables[0].Rows[0]["ReqApproveStage"]);
                            if (appstatus == "0")
                            {
                                string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + val + "'";
                                d2.update_method_wo_parameter(del_query1, "Text");
                                string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + val + "'";
                                d2.update_method_wo_parameter(del_query, "Text");
                                saveflage = true;
                            }
                        }
                    }
                }
            }
            if (Fpspread2.Visible == true)
            {
                for (int i = 0; i < Fpspread2.Sheets[0].RowCount; i++)
                {
                    double.TryParse(Convert.ToString(Fpspread2.Sheets[0].Cells[i, 1].Value), out checkvalue);
                    if (checkvalue == 1)
                    {
                        activerow = Fpspread2.ActiveSheetView.ActiveRow.ToString();
                        string val = Convert.ToString(Fpspread2.Sheets[0].Cells[Convert.ToInt32(i), 0].Tag);
                        string selQ = " select Requestcode,ReqApproveStage from RQ_Requisition where RequisitionPK='" + val + "'";
                        ds.Clear();
                        ds = d2.select_method_wo_parameter(selQ, "Text");
                        if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                        {
                            det = Convert.ToString(ds.Tables[0].Rows[0]["Requestcode"]);
                            appstatus = Convert.ToString(ds.Tables[0].Rows[0]["ReqApproveStage"]);
                            if (delete == "1")
                            {
                                if (appstatus == "0")
                                {
                                    string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + val + "'";
                                    d2.update_method_wo_parameter(del_query1, "Text");
                                    string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + val + "'";
                                    d2.update_method_wo_parameter(del_query, "Text");
                                    saveflage = true;
                                }
                            }
                            else if (delete == "2")
                            {
                                if (appstatus == "1")
                                {
                                    string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + val + "'";
                                    d2.update_method_wo_parameter(del_query1, "Text");
                                    string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + val + "'";
                                    d2.update_method_wo_parameter(del_query, "Text");
                                    saveflage = true;
                                }
                            }
                        }
                    }
                }
            }
            if (Fpspread3.Visible == true)
            {
                for (int i = 0; i < Fpspread3.Sheets[0].RowCount; i++)
                {
                    double.TryParse(Convert.ToString(Fpspread3.Sheets[0].Cells[i, 1].Value), out checkvalue);
                    if (checkvalue == 1)
                    {
                        activerow = Fpspread3.ActiveSheetView.ActiveRow.ToString();
                        string val = Convert.ToString(Fpspread3.Sheets[0].Cells[Convert.ToInt32(i), 0].Tag);
                        string selQ = " select Requestcode,ReqApproveStage from RQ_Requisition where RequisitionPK='" + val + "'";
                        ds.Clear();
                        ds = d2.select_method_wo_parameter(selQ, "Text");
                        if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                        {
                            det = Convert.ToString(ds.Tables[0].Rows[0]["Requestcode"]);
                            appstatus = Convert.ToString(ds.Tables[0].Rows[0]["ReqApproveStage"]);
                            if (appstatus == "0")
                            {
                                string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + val + "'";
                                d2.update_method_wo_parameter(del_query1, "Text");
                                string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + val + "'";
                                d2.update_method_wo_parameter(del_query, "Text");
                                saveflage = true;
                            }
                        }
                    }
                }
            }
            if (Fpspread4.Visible == true)
            {
                for (int i = 0; i < Fpspread4.Sheets[0].RowCount; i++)
                {
                    double.TryParse(Convert.ToString(Fpspread4.Sheets[0].Cells[i, 1].Value), out checkvalue);
                    if (checkvalue == 1)
                    {
                        activerow = Fpspread4.ActiveSheetView.ActiveRow.ToString();
                        string val = Convert.ToString(Fpspread4.Sheets[0].Cells[Convert.ToInt32(i), 0].Tag);
                        string selQ = " select Requestcode,ReqApproveStage from RQ_Requisition where RequisitionPK='" + val + "'";
                        ds.Clear();
                        ds = d2.select_method_wo_parameter(selQ, "Text");
                        if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                        {
                            det = Convert.ToString(ds.Tables[0].Rows[0]["Requestcode"]);
                            appstatus = Convert.ToString(ds.Tables[0].Rows[0]["ReqApproveStage"]);
                            if (appstatus == "0")
                            {
                                string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + val + "'";
                                d2.update_method_wo_parameter(del_query1, "Text");
                                string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + val + "'";
                                d2.update_method_wo_parameter(del_query, "Text");
                                saveflage = true;
                            }
                        }
                    }
                }
            }
            if (Fpspread5.Visible == true)
            {
                if (deletepermission == "2")
                {

                    for (int i = 0; i < Fpspread5.Sheets[0].RowCount; i++)
                    {
                        double.TryParse(Convert.ToString(Fpspread5.Sheets[0].Cells[i, 1].Value), out checkvalue);
                        if (checkvalue == 1)
                        {
                            activerow = Fpspread5.ActiveSheetView.ActiveRow.ToString();
                            Session["activerow"] = Convert.ToInt32(i);
                            string val = Convert.ToString(Fpspread5.Sheets[0].Cells[Convert.ToInt32(i), 0].Tag);
                            string checkdelval = d2.GetFunction("select deleteflag from rq_requisition where RequisitionPK='" + val + "'");
                            if (checkdelval == "1")
                            {

                                string selQ = " select Requestcode,ReqApproveStage,ReqAppStatus from RQ_Requisition where RequisitionPK='" + val + "'";
                                ds.Clear();
                                ds = d2.select_method_wo_parameter(selQ, "Text");
                                if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                                {
                                    det = Convert.ToString(ds.Tables[0].Rows[0]["Requestcode"]);
                                    appstatus = Convert.ToString(ds.Tables[0].Rows[0]["ReqAppStatus"]);//ReqApproveStage barath 15.11.17
                                    if (delete == "1")
                                    {
                                        if (appstatus == "0")
                                        {
                                            deletealtertimetable();
                                            updateAdd_attn(val); // poo 28.11.17

                                            string deleteQur = "delete RQ_RequestionApprove where RequisitionFK='" + val + "'";
                                            int valss = d2.update_method_wo_parameter(deleteQur, "Text");

                                            string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + val + "'";
                                            int vals = d2.update_method_wo_parameter(del_query, "Text");

                                            string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + val + "'";
                                            int values = d2.update_method_wo_parameter(del_query1, "Text");
                                            saveflage = true;


                                        }
                                    }
                                    else if (delete == "2")
                                    {
                                        if (appstatus == "1")
                                        {
                                            //barath 15.11.17
                                            int Settings = 0;
                                            int.TryParse(Convert.ToString(d2.GetFunction(" select LinkValue from New_InsSettings where LinkName='Approval leave Cancel Rights' and user_code ='" + usercode + "'")), out Settings);//and college_code ='" + ddl_rpt_collge.SelectedItem.Value + "' delsi2410
                                            string SettingsQry = " and LeaveFrom<='" + dt.ToString("MM/dd/yyyy") + "'";
                                            if (Settings == 1)
                                                SettingsQry = " ";
                                            string delcheck = d2.GetFunction("select CONVERT(varchar(10), LeaveFrom,101)LeaveFrom from RQ_Requisition where RequestType=5 and RequisitionPK='" + val + "'" + SettingsQry + "");
                                            if (Settings == 1)
                                            {
                                                updateAdd_attn(val); // poo 29.11.17
                                                AlternateScheduleRemove(val, Convert.ToDateTime(delcheck));//barath 08.12.17
                                                string update_query = "update RQ_Requisition set ReqAppStatus='3' where RequisitionPK='" + val + "'";
                                                d2.update_method_wo_parameter(update_query, "Text");

                                                imgdiv2.Visible = true;
                                                lbl_alert.Text = "Cancel Successfully";
                                                saveflage = true;//delsiref1407
                                            }
                                            else
                                            {
                                                if (delcheck == "0")
                                                {
                                                    deletealtertimetable();
                                                    updateAdd_attn(val); // poo
                                                    string deleteQur = "delete RQ_RequestionApprove where RequisitionFK='" + val + "'";
                                                    int valss = d2.update_method_wo_parameter(deleteQur, "Text");
                                                    string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + val + "'";
                                                    d2.update_method_wo_parameter(del_query1, "Text");

                                                    string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + val + "'";
                                                    d2.update_method_wo_parameter(del_query, "Text");
                                                    saveflage = true;

                                                }
                                            }


                                        }
                                    }
                                }


                            }
                            else
                            {
                                imgdiv2.Visible = true;
                                lbl_alert.Text = "You Have Not Requested To Delete";
                                saveflage = false;

                            }
                        }
                    }

                }

                else if (deletepermission == "1")
                {
                    for (int i = 0; i < Fpspread5.Sheets[0].RowCount; i++)
                    {
                        double.TryParse(Convert.ToString(Fpspread5.Sheets[0].Cells[i, 1].Value), out checkvalue);
                        if (checkvalue == 1)
                        {
                            activerow = Fpspread5.ActiveSheetView.ActiveRow.ToString();
                            Session["activerow"] = Convert.ToInt32(i);
                            string val = Convert.ToString(Fpspread5.Sheets[0].Cells[Convert.ToInt32(i), 0].Tag);
                            string selQ = " select Requestcode,ReqApproveStage,ReqAppStatus,LeaveFrom from RQ_Requisition where RequisitionPK='" + val + "'";
                            string StaffCode = d2.GetFunction("select distinct s.staff_code from staff_appl_master sa, staffmaster s,RQ_Requisition rq where sa.appl_id=rq.ReqAppNo and sa.appl_no=s.appl_no and rq.RequisitionPK='" + val + "'");
                            ds.Clear();
                            ds = d2.select_method_wo_parameter(selQ, "Text");
                            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                            {
                                det = Convert.ToString(ds.Tables[0].Rows[0]["Requestcode"]);
                                appstatus = Convert.ToString(ds.Tables[0].Rows[0]["ReqAppStatus"]);
                                DateTime getdatetime = Convert.ToDateTime(ds.Tables[0].Rows[0]["LeaveFrom"]);//ReqApproveStage barath 15.11.17
                                string currentYear = DateTime.Now.ToString();
                                DateTime todaydatetime = Convert.ToDateTime(currentYear);
                                if (delete == "1")
                                {
                                    if (appstatus == "0")
                                    {
                                        deletealtertimetable();
                                        updateAdd_attn(val); // poo 28.11.17
                                        string frm_date = string.Empty;
                                        string to_date = string.Empty;
                                        if (Fpspread5.Sheets[0].Columns.Count > 0)
                                        {
                                            for (int m = 0; m < Fpspread5.Sheets[0].Columns.Count; m++)
                                            {
                                                if (Fpspread5.Sheets[0].ColumnHeader.Cells[0, m].Text == "From Date")
                                                {
                                                    string datss = Fpspread5.Sheets[0].Cells[i, m].Text;
                                                    string[] spl_frm_date = datss.Split('/');
                                                    frm_date = spl_frm_date[1] + "/" + spl_frm_date[0] + "/" + spl_frm_date[2];
                                                }
                                                if (Fpspread5.Sheets[0].ColumnHeader.Cells[0, m].Text == "To Date")
                                                {
                                                    string datss = Fpspread5.Sheets[0].Cells[i, m].Text;
                                                    string[] spl_frm_date = datss.Split('/');
                                                    to_date = spl_frm_date[1] + "/" + spl_frm_date[0] + "/" + spl_frm_date[2];
                                                }
                                            }
                                        }
                                        alterremove(StaffCode, frm_date, to_date);
                                        string deleteQur = "delete RQ_RequestionApprove where RequisitionFK='" + val + "'";
                                        int valss = d2.update_method_wo_parameter(deleteQur, "Text");

                                        string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + val + "'";
                                        int vals = d2.update_method_wo_parameter(del_query, "Text");

                                        string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + val + "'";
                                        int values = d2.update_method_wo_parameter(del_query1, "Text");
                                        saveflage = true;


                                    }
                                }
                                else if (delete == "2")
                                {
                                    if (appstatus == "1")
                                    {
                                        if (requestpermissioncheck != "3")
                                        {
                                            //barath 15.11.17
                                            int Settings = 0;
                                            int.TryParse(Convert.ToString(d2.GetFunction(" select LinkValue from New_InsSettings where LinkName='Approval leave Cancel Rights' and user_code ='" + usercode + "'")), out Settings);//and college_code ='" + ddl_rpt_collge.SelectedItem.Value + "' delsi2410
                                            string SettingsQry = " and LeaveFrom<='" + dt.ToString("MM/dd/yyyy") + "'";
                                            if (Settings == 1)
                                                SettingsQry = " ";
                                            string delcheck = d2.GetFunction("select CONVERT(varchar(10), LeaveFrom,101)LeaveFrom from RQ_Requisition where RequestType=5 and RequisitionPK='" + val + "'" + SettingsQry + "");
                                            if (Settings == 1)
                                            {
                                                updateAdd_attn(val); // poo 29.11.17

                                                // AlternateScheduleRemove(val, Convert.ToDateTime(delcheck));//barath 08.12.17

                                                string frm_date = string.Empty;
                                                string to_date = string.Empty;
                                                if (Fpspread5.Sheets[0].Columns.Count > 0)
                                                {
                                                    for (int m = 0; m < Fpspread5.Sheets[0].Columns.Count; m++)
                                                    {
                                                        if (Fpspread5.Sheets[0].ColumnHeader.Cells[0, m].Text == "From Date")
                                                        {
                                                            string datss = Fpspread5.Sheets[0].Cells[i, m].Text;
                                                            string[] spl_frm_date = datss.Split('/');
                                                            frm_date = spl_frm_date[1] + "/" + spl_frm_date[0] + "/" + spl_frm_date[2];
                                                        }
                                                        if (Fpspread5.Sheets[0].ColumnHeader.Cells[0, m].Text == "To Date")
                                                        {
                                                            string datss = Fpspread5.Sheets[0].Cells[i, m].Text;
                                                            string[] spl_frm_date = datss.Split('/');
                                                            to_date = spl_frm_date[1] + "/" + spl_frm_date[0] + "/" + spl_frm_date[2];
                                                        }
                                                    }
                                                }
                                                alterremove(StaffCode, frm_date, to_date);
                                                string update_query = "update RQ_Requisition set ReqAppStatus='3' where RequisitionPK='" + val + "'";
                                                d2.update_method_wo_parameter(update_query, "Text");

                                                imgdiv2.Visible = true;
                                                lbl_alert.Text = "Cancel Successfully";
                                                saveflage = true;//delsiref1407
                                            }
                                            else
                                            {
                                                if (delcheck == "0")
                                                {
                                                    alterremovenew(StaffCode);
                                                    updateAdd_attn(val); // poo
                                                    string deleteQur = "delete RQ_RequestionApprove where RequisitionFK='" + val + "'";
                                                    int valss = d2.update_method_wo_parameter(deleteQur, "Text");
                                                    string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + val + "'";
                                                    d2.update_method_wo_parameter(del_query1, "Text");

                                                    string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + val + "'";
                                                    d2.update_method_wo_parameter(del_query, "Text");
                                                    saveflage = true;

                                                }
                                            }
                                        }
                                        if (requestpermissioncheck == "3")
                                        {
                                            bool Is_Staff;
                                            bool.TryParse(d2.GetFunction("select Is_Staff from UserMaster where User_Code='" + usercode + "' and college_code='" + Session["collegecode"] + "'"), out Is_Staff);
                                            if (Is_Staff == true)
                                            {
                                                if (getdatetime >= todaydatetime)
                                                {
                                                    //barath 15.11.17
                                                    int Settings = 0;
                                                    int.TryParse(Convert.ToString(d2.GetFunction(" select LinkValue from New_InsSettings where LinkName='Approval leave Cancel Rights' and user_code ='" + usercode + "'")), out Settings);//and college_code ='" + ddl_rpt_collge.SelectedItem.Value + "' delsi2410
                                                    string SettingsQry = " and LeaveFrom<='" + dt.ToString("MM/dd/yyyy") + "'";
                                                    if (Settings == 1)
                                                        SettingsQry = " ";
                                                    string delcheck = d2.GetFunction("select CONVERT(varchar(10), LeaveFrom,101)LeaveFrom from RQ_Requisition where RequestType=5 and RequisitionPK='" + val + "'" + SettingsQry + "");
                                                    if (Settings == 1)
                                                    {
                                                        updateAdd_attn(val); // poo 29.11.17

                                                        // AlternateScheduleRemove(val, Convert.ToDateTime(delcheck));//barath 08.12.17

                                                        string frm_date = string.Empty;
                                                        string to_date = string.Empty;
                                                        if (Fpspread5.Sheets[0].Columns.Count > 0)
                                                        {
                                                            for (int m = 0; m < Fpspread5.Sheets[0].Columns.Count; m++)
                                                            {
                                                                if (Fpspread5.Sheets[0].ColumnHeader.Cells[0, m].Text == "From Date")
                                                                {
                                                                    string datss = Fpspread5.Sheets[0].Cells[i, m].Text;
                                                                    string[] spl_frm_date = datss.Split('/');
                                                                    frm_date = spl_frm_date[1] + "/" + spl_frm_date[0] + "/" + spl_frm_date[2];
                                                                }
                                                                if (Fpspread5.Sheets[0].ColumnHeader.Cells[0, m].Text == "To Date")
                                                                {
                                                                    string datss = Fpspread5.Sheets[0].Cells[i, m].Text;
                                                                    string[] spl_frm_date = datss.Split('/');
                                                                    to_date = spl_frm_date[1] + "/" + spl_frm_date[0] + "/" + spl_frm_date[2];
                                                                }
                                                            }
                                                        }
                                                        alterremove(StaffCode, frm_date, to_date);
                                                        string update_query = "update RQ_Requisition set ReqAppStatus='3' where RequisitionPK='" + val + "'";
                                                        d2.update_method_wo_parameter(update_query, "Text");

                                                        imgdiv2.Visible = true;
                                                        lbl_alert.Text = "Cancel Successfully";
                                                        saveflage = true;//delsiref1407
                                                    }
                                                    else
                                                    {
                                                        if (delcheck == "0")
                                                        {
                                                            alterremovenew(StaffCode);
                                                            updateAdd_attn(val); // poo
                                                            string deleteQur = "delete RQ_RequestionApprove where RequisitionFK='" + val + "'";
                                                            int valss = d2.update_method_wo_parameter(deleteQur, "Text");
                                                            string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + val + "'";
                                                            d2.update_method_wo_parameter(del_query1, "Text");

                                                            string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + val + "'";
                                                            d2.update_method_wo_parameter(del_query, "Text");
                                                            saveflage = true;

                                                        }
                                                    }

                                                }
                                                else
                                                {
                                                    div_confm.Visible = false;
                                                    div_del_confm.Visible = false;
                                                    imgdiv2.Visible = true;
                                                    lbl_alert.Text = "You Cannot Delete This Record Please Contact Admin";
                                                    return;
                                                }

                                            }
                                            else
                                            {
                                                //barath 15.11.17
                                                int Settings = 0;
                                                int.TryParse(Convert.ToString(d2.GetFunction(" select LinkValue from New_InsSettings where LinkName='Approval leave Cancel Rights' and user_code ='" + usercode + "'")), out Settings);//and college_code ='" + ddl_rpt_collge.SelectedItem.Value + "' delsi2410
                                                string SettingsQry = " and LeaveFrom<='" + dt.ToString("MM/dd/yyyy") + "'";
                                                if (Settings == 1)
                                                    SettingsQry = " ";
                                                string delcheck = d2.GetFunction("select CONVERT(varchar(10), LeaveFrom,101)LeaveFrom from RQ_Requisition where RequestType=5 and RequisitionPK='" + val + "'" + SettingsQry + "");
                                                if (Settings == 1)
                                                {
                                                    updateAdd_attn(val); // poo 29.11.17

                                                    // AlternateScheduleRemove(val, Convert.ToDateTime(delcheck));//barath 08.12.17

                                                    string frm_date = string.Empty;
                                                    string to_date = string.Empty;
                                                    if (Fpspread5.Sheets[0].Columns.Count > 0)
                                                    {
                                                        for (int m = 0; m < Fpspread5.Sheets[0].Columns.Count; m++)
                                                        {
                                                            if (Fpspread5.Sheets[0].ColumnHeader.Cells[0, m].Text == "From Date")
                                                            {
                                                                string datss = Fpspread5.Sheets[0].Cells[i, m].Text;
                                                                string[] spl_frm_date = datss.Split('/');
                                                                frm_date = spl_frm_date[1] + "/" + spl_frm_date[0] + "/" + spl_frm_date[2];
                                                            }
                                                            if (Fpspread5.Sheets[0].ColumnHeader.Cells[0, m].Text == "To Date")
                                                            {
                                                                string datss = Fpspread5.Sheets[0].Cells[i, m].Text;
                                                                string[] spl_frm_date = datss.Split('/');
                                                                to_date = spl_frm_date[1] + "/" + spl_frm_date[0] + "/" + spl_frm_date[2];
                                                            }
                                                        }
                                                    }
                                                    alterremove(StaffCode, frm_date, to_date);
                                                    string update_query = "update RQ_Requisition set ReqAppStatus='3' where RequisitionPK='" + val + "'";
                                                    d2.update_method_wo_parameter(update_query, "Text");

                                                    imgdiv2.Visible = true;
                                                    lbl_alert.Text = "Cancel Successfully";
                                                    saveflage = true;//delsiref1407
                                                }
                                                else
                                                {
                                                    if (delcheck == "0")
                                                    {
                                                        alterremovenew(StaffCode);
                                                        updateAdd_attn(val); // poo
                                                        string deleteQur = "delete RQ_RequestionApprove where RequisitionFK='" + val + "'";
                                                        int valss = d2.update_method_wo_parameter(deleteQur, "Text");
                                                        string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + val + "'";
                                                        d2.update_method_wo_parameter(del_query1, "Text");

                                                        string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + val + "'";
                                                        d2.update_method_wo_parameter(del_query, "Text");
                                                        saveflage = true;

                                                    }
                                                }
                                            
                                            }


                                        }

                                    }
                                }

                            }
                        }
                    }


                }

                //for (int i = 0; i < Fpspread5.Sheets[0].RowCount; i++)
                //{
                //    double.TryParse(Convert.ToString(Fpspread5.Sheets[0].Cells[i, 1].Value), out checkvalue);
                //    if (checkvalue == 1)
                //    {
                //        activerow = Fpspread5.ActiveSheetView.ActiveRow.ToString();
                //        Session["activerow"] = Convert.ToInt32(i);
                //        string val = Convert.ToString(Fpspread5.Sheets[0].Cells[Convert.ToInt32(i), 0].Tag);
                //        string selQ = " select Requestcode,ReqApproveStage,ReqAppStatus from RQ_Requisition where RequisitionPK='" + val + "'";
                //        string StaffCode = d2.GetFunction("select distinct s.staff_code from staff_appl_master sa, staffmaster s,RQ_Requisition rq where sa.appl_id=rq.ReqAppNo and sa.appl_no=s.appl_no and rq.RequisitionPK='" + val + "'");
                //        ds.Clear();
                //        ds = d2.select_method_wo_parameter(selQ, "Text");
                //        if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                //        {
                //            det = Convert.ToString(ds.Tables[0].Rows[0]["Requestcode"]);
                //            appstatus = Convert.ToString(ds.Tables[0].Rows[0]["ReqAppStatus"]);//ReqApproveStage barath 15.11.17
                //            if (delete == "1")
                //            {
                //                if (appstatus == "0")
                //                {
                //                    // remove magesh  deletealtertimetable();
                //                    updateAdd_attn(val); // poo 28.11.17
                //                    string frm_date = string.Empty;
                //                    string to_date = string.Empty;
                //                    if (Fpspread5.Sheets[0].Columns.Count > 0)
                //                    {
                //                        for (int m = 0; m < Fpspread5.Sheets[0].Columns.Count; m++)
                //                        {
                //                            if (Fpspread5.Sheets[0].ColumnHeader.Cells[0, m].Text == "From Date")
                //                            {
                //                                string datss = Fpspread5.Sheets[0].Cells[i, m].Text;
                //                                string[] spl_frm_date = datss.Split('/');
                //                                frm_date = spl_frm_date[1] + "/" + spl_frm_date[0] + "/" + spl_frm_date[2];
                //                            }
                //                            if (Fpspread5.Sheets[0].ColumnHeader.Cells[0, m].Text == "To Date")
                //                            {
                //                                string datss = Fpspread5.Sheets[0].Cells[i, m].Text;
                //                                string[] spl_frm_date = datss.Split('/');
                //                                to_date = spl_frm_date[1] + "/" + spl_frm_date[0] + "/" + spl_frm_date[2];
                //                            }
                //                        }
                //                    }
                //                    alterremove(StaffCode, frm_date, to_date);
                //                    string deleteQur = "delete RQ_RequestionApprove where RequisitionFK='" + val + "'";
                //                    int valss = d2.update_method_wo_parameter(deleteQur, "Text");

                //                    string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + val + "'";
                //                    int vals = d2.update_method_wo_parameter(del_query, "Text");

                //                    string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + val + "'";
                //                    int values = d2.update_method_wo_parameter(del_query1, "Text");
                //                    saveflage = true;


                //                }
                //            }
                //            else if (delete == "2")
                //            {
                //                if (appstatus == "1")
                //                {
                //                    //barath 15.11.17
                //                    int Settings = 0;
                //                    int.TryParse(Convert.ToString(d2.GetFunction(" select LinkValue from New_InsSettings where LinkName='Approval leave Cancel Rights' and user_code ='" + usercode + "'")), out Settings);//and college_code ='" + ddl_rpt_collge.SelectedItem.Value + "' delsi2410
                //                    string SettingsQry = " and LeaveFrom<='" + dt.ToString("MM/dd/yyyy") + "'";
                //                    if (Settings == 1)
                //                        SettingsQry = " ";
                //                    string delcheck = d2.GetFunction("select CONVERT(varchar(10), LeaveFrom,101)LeaveFrom from RQ_Requisition where RequestType=5 and RequisitionPK='" + val + "'" + SettingsQry + "");
                //                    if (Settings == 1)
                //                    {
                //                        updateAdd_attn(val); // poo 29.11.17
                //                        // remove magesh  AlternateScheduleRemove(val, Convert.ToDateTime(delcheck));//barath 08.12.17

                //                        string frm_date = string.Empty;
                //                        string to_date = string.Empty;
                //                        if (Fpspread5.Sheets[0].Columns.Count > 0)
                //                        {
                //                            for (int m = 0; m < Fpspread5.Sheets[0].Columns.Count; m++)
                //                            {
                //                                if (Fpspread5.Sheets[0].ColumnHeader.Cells[0, m].Text == "From Date")
                //                                {
                //                                    string datss = Fpspread5.Sheets[0].Cells[i, m].Text;
                //                                    string[] spl_frm_date = datss.Split('/');
                //                                    frm_date = spl_frm_date[1] + "/" + spl_frm_date[0] + "/" + spl_frm_date[2];
                //                                }
                //                                if (Fpspread5.Sheets[0].ColumnHeader.Cells[0, m].Text == "To Date")
                //                                {
                //                                    string datss = Fpspread5.Sheets[0].Cells[i, m].Text;
                //                                    string[] spl_frm_date = datss.Split('/');
                //                                    to_date = spl_frm_date[1] + "/" + spl_frm_date[0] + "/" + spl_frm_date[2];
                //                                }
                //                            }
                //                        }
                //                        alterremove(StaffCode, frm_date, to_date);
                //                        string update_query = "update RQ_Requisition set ReqAppStatus='3' where RequisitionPK='" + val + "'";
                //                        d2.update_method_wo_parameter(update_query, "Text");

                //                        imgdiv2.Visible = true;
                //                        lbl_alert.Text = "Cancel Successfully";
                //                        saveflage = true;//delsiref1407
                //                    }
                //                    else
                //                    {
                //                        if (delcheck == "0")
                //                        {
                //                            deletealtertimetable();
                //                            updateAdd_attn(val); // poo
                //                            string deleteQur = "delete RQ_RequestionApprove where RequisitionFK='" + val + "'";
                //                            int valss = d2.update_method_wo_parameter(deleteQur, "Text");
                //                            string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + val + "'";
                //                            d2.update_method_wo_parameter(del_query1, "Text");

                //                            string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + val + "'";
                //                            d2.update_method_wo_parameter(del_query, "Text");
                //                            saveflage = true;

                //                        }
                //                    }


                //                }
                //            }

                //        }
                //    }
                //}

            }
            #region GatePass
            if (Fpspread6.Visible == true)
            {
                for (int i = 0; i < Fpspread6.Sheets[0].RowCount; i++)
                {
                    double.TryParse(Convert.ToString(Fpspread6.Sheets[0].Cells[i, 1].Value), out checkvalue);
                    if (checkvalue == 1)
                    {
                        activerow = Fpspread6.ActiveSheetView.ActiveRow.ToString();
                        string val = Convert.ToString(Fpspread6.Sheets[0].Cells[Convert.ToInt32(i), 0].Tag);
                        string selQ = " select Requestcode,ReqApproveStage from RQ_Requisition where RequisitionPK='" + val + "'";
                        ds.Clear();
                        ds = d2.select_method_wo_parameter(selQ, "Text");
                        if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                        {
                            appstatus = Convert.ToString(ds.Tables[0].Rows[0]["ReqApproveStage"]);
                            if (appstatus == "0")
                            {
                                string del_query1 = "delete RQ_RequisitionDet where RequisitionFK=" + val + "";
                                d2.update_method_wo_parameter(del_query1, "Text");
                                string del_query = "delete RQ_Requisition where RequisitionPK='" + val + "'";
                                d2.update_method_wo_parameter(del_query, "Text");
                                saveflage = true;
                            }
                            if (appstatus == "1")
                            {
                                string del_query1 = "delete RQ_RequisitionDet where RequisitionFK=" + val + "";
                                d2.update_method_wo_parameter(del_query1, "Text");
                                string del_query2 = "delete RQ_RequestionApprove where RequisitionFK='" + val + "'";
                                d2.update_method_wo_parameter(del_query2, "Text");
                                string del_query = "delete RQ_Requisition where RequisitionPK='" + val + "'";
                                d2.update_method_wo_parameter(del_query, "Text");
                                saveflage = true;
                            }
                        }
                    }
                }
                gate();
            }
            #endregion
            if (Fpspread9.Visible == true)
            {
                for (int i = 0; i < Fpspread9.Sheets[0].RowCount; i++)
                {
                    double.TryParse(Convert.ToString(Fpspread9.Sheets[0].Cells[i, 1].Value), out checkvalue);
                    if (checkvalue == 1)
                    {
                        activerow = Fpspread9.ActiveSheetView.ActiveRow.ToString();
                        string val = Convert.ToString(Fpspread9.Sheets[0].Cells[Convert.ToInt32(i), 0].Tag);
                        string selQ = " select Requestcode,ReqApproveStage from RQ_Requisition where RequisitionPK='" + val + "'";
                        ds.Clear();
                        ds = d2.select_method_wo_parameter(selQ, "Text");
                        if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                        {
                            det = Convert.ToString(ds.Tables[0].Rows[0]["Requestcode"]);
                            appstatus = Convert.ToString(ds.Tables[0].Rows[0]["ReqApproveStage"]);
                            if (appstatus == "0")
                            {

                                string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + val + "'";
                                d2.update_method_wo_parameter(del_query1, "Text");
                                string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + val + "'";
                                d2.update_method_wo_parameter(del_query, "Text");
                                saveflage = true;
                                imgbtn_all_Click(sender, e);
                            }
                        }
                    }
                }
            }
            if (saveflage == true)
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "Deleted Successfully";//delsiref 1407
                imgbtn_leave_Click(sender, e);
            }
            else
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "You Cannot Delete This Record";
            }
            div_del_confm.Visible = false;
            div_confm.Visible = false;
        }
        catch
        {
        }
    }
    public void btn_delete_exit_Click(object sender, EventArgs e)
    {
        div_del_confm.Visible = false;
        div_confm.Visible = false;
    }
    public void rdo_waiting_CheckedChanged(object sender, EventArgs e)
    {
    }
    public void btnReject_click(object sender, EventArgs e)
    {
        string apprl_app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
        string req = Convert.ToString(TextBox1.Text);
        string appnumb = d2.GetFunction("select ReqAppNo from RQ_Requisition where RequestType=6 and RequisitionPK='" + req + "'");
        string update_query = "update RQ_Requisition set ReqAppStatus='2',ReqAppStaffAppNo='" + apprl_app + "' where RequisitionPK='" + req + "'";
        d2.update_method_wo_parameter(update_query, "Text");
        imgdiv2.Visible = true;
        lbl_alert.Text = "Rejected Successfully";
    }
    public void btn_item_reject_Click(object sender, EventArgs e)
    {
        string apprl_app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
        string req = Convert.ToString(TextBox2.Text);
        string appnumb = d2.GetFunction("select ReqAppNo from RQ_Requisition where RequestType=1 and RequisitionPK='" + req + "'");
        string update_query = "update RQ_Requisition set ReqAppStatus='2',ReqAppStaffAppNo='" + apprl_app + "' where RequisitionPK='" + req + "'";
        d2.update_method_wo_parameter(update_query, "Text");
        imgdiv2.Visible = true;
        lbl_alert.Text = "Rejected Successfully";
    }
    public void btn_reject_ser_save_Click(object sender, EventArgs e)
    {
        string apprl_app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
        string req = Convert.ToString(TextBox3.Text);
        string appnumb = d2.GetFunction("select ReqAppNo from RQ_Requisition where RequestType=2 and RequisitionPK='" + req + "'");
        string update_query = "update RQ_Requisition set ReqAppStatus='2',ReqAppStaffAppNo='" + apprl_app + "' where RequisitionPK='" + req + "'";
        d2.update_method_wo_parameter(update_query, "Text");
        imgdiv2.Visible = true;
        lbl_alert.Text = "Rejected Successfully";
    }
    public void btn_visit_reject_Click(object sender, EventArgs e)
    {
        string apprl_app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
        string req = Convert.ToString(TextBox4.Text);
        string appnumb = d2.GetFunction("select ReqAppNo from RQ_Requisition where RequestType=3 and RequisitionPK='" + req + "'");
        string update_query = "update RQ_Requisition set ReqAppStatus='2',ReqAppStaffAppNo='" + apprl_app + "' where RequisitionPK='" + req + "'";
        d2.update_method_wo_parameter(update_query, "Text");
        imgdiv2.Visible = true;
        lbl_alert.Text = "Rejected Successfully";
    }
    public void btn_comp_reject_Click(object sender, EventArgs e)
    {
        string apprl_app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
        string req = Convert.ToString(TextBox5.Text);
        string appnumb = d2.GetFunction("select ReqAppNo from RQ_Requisition where RequestType=4 and RequisitionPK='" + req + "'");
        string update_query = "update RQ_Requisition set ReqAppStatus='2',ReqAppStaffAppNo='" + apprl_app + "' where RequisitionPK='" + req + "'";
        d2.update_method_wo_parameter(update_query, "Text");
        imgdiv2.Visible = true;
        lbl_alert.Text = "Rejected Successfully";
    }
    public void Btn_Cancel_Click(object sender, EventArgs e)
    {
        try
        {
            chkrelived = 0;
            int fday0 = 0;
            string startdate = "";
            string appnumb = "";
            string appnumb1 = "";
            string fromdate = "";
            string todate = "";
            string leavetype = "";
            string leavesession = "";
            string appstatus = "";
            string cstaff = "";
            DataSet dsval = new DataSet();
            string apprl_app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            string req = Convert.ToString(TextBox7.Text);
            string selQ = " select ReqAppNo,ReqStaffAppNo,LeaveFrom,LeaveTo,IsHalfDay,LeaveSession,ReqStaffAppNo,ReqAppStatus from RQ_Requisition where RequestType=5 and RequisitionPK='" + req + "'";
            dsval.Clear();
            dsval = d2.select_method_wo_parameter(selQ, "Text");
            if (dsval.Tables.Count > 0 && dsval.Tables[0].Rows.Count > 0)
            {
                appnumb = Convert.ToString(dsval.Tables[0].Rows[0]["ReqAppNo"]);
                appnumb1 = Convert.ToString(dsval.Tables[0].Rows[0]["ReqStaffAppNo"]);
                fromdate = Convert.ToString(dsval.Tables[0].Rows[0]["LeaveFrom"]);
                todate = Convert.ToString(dsval.Tables[0].Rows[0]["LeaveTo"]);
                leavetype = Convert.ToString(dsval.Tables[0].Rows[0]["IsHalfDay"]);
                leavesession = Convert.ToString(dsval.Tables[0].Rows[0]["LeaveSession"]);
                cstaff = Convert.ToString(dsval.Tables[0].Rows[0]["ReqStaffAppNo"]);
                appstatus = Convert.ToString(dsval.Tables[0].Rows[0]["ReqAppStatus"]);
            }
            string staffcode = d2.GetFunction("select s.staff_code from staff_appl_master sa, staffmaster s where sa.appl_no=s.appl_no and appl_id='" + appnumb + "'");
            stafcodealter = staffcode;
            // string appnumb = d2.GetFunction("select ReqAppNo from RQ_Requisition where RequestType=5 and RequisitionPK='" + req + "'");
            // string appnumb1 = d2.GetFunction("select ReqStaffAppNo from RQ_Requisition where RequestType=5 and RequisitionPK='" + req + "'");
            // string fromdate = d2.GetFunction("select LeaveFrom from RQ_Requisition where RequestType='5' and RequisitionPK='" + req + "'");
            // string todate = d2.GetFunction("select LeaveTo from RQ_Requisition where RequestType='5' and RequisitionPK='" + req + "'");
            //string leavetype = d2.GetFunction("select IsHalfDay from RQ_Requisition where RequestType='5' and RequisitionPK='" + req + "'");
            // string leavesession = d2.GetFunction("select LeaveSession from RQ_Requisition where RequestType='5' and RequisitionPK='" + req + "'");
            string hir_stage = d2.GetFunction("select ReqApproveStage from RQ_RequestHierarchy where ReqStaffAppNo='" + appnumb1 + "' and ReqAppStaffAppNo='" + apprl_app + "'");
            if (leavetype == "False")
            {
                fday0 = 0;
            }
            else
            {
                if (leavesession == "1")
                    fday0 = 1;
                else
                    fday0 = 2;
            }
            //------------------------------------------------------------------------------------------------
            double value1 = 0;
            double value2 = 0;
            string stage1 = "";
            string getappid = "";
            string pkcode = "";
            string sqlcmd = "";
            string stg = "";
            string date = DateTime.Now.ToString("MM/dd/yyyy");
            string Requisition_no_lv = Convert.ToString(txt_rqstn_leave.Text);
            //  req = Convert.ToString(TextBox7.Text);
            string changereason = Convert.ToString(txt_reasonchng.Text);
            //   string cstaff = d2.GetFunction(" select ReqStaffAppNo from RQ_Requisition where RequestType=5 and RequisitionPK='" + req + "'");
            string lonstaff = d2.GetFunction("select sm.appl_id from staff_appl_master sm,staffmaster s where sm.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            if (div_leavereq.Visible == true)
            {
                pkcode = req;
                stage1 = d2.GetFunction("select ReqApproveStage from RQ_Requisition where RequisitionPK='" + pkcode + "'");
                stg = stage1;
            }
            if (string.IsNullOrEmpty(staffcodesession))
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "You Are Not Have A Approval Permission";
            }
            else
            {
                if (stage1 == "0")
                    value2 = 1;
                else
                {
                    value1 = Convert.ToDouble(stage1);
                    value2 = value1 + 1;
                }
                sqlcmd = " select ReqApproveStage,RequestType, ReqAppStaffAppNo,ReqAppPriority from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'and RequestType=5 and ReqStaffAppNo='" + cstaff + "'";
                ds = d2.select_method_wo_parameter(sqlcmd, "Text");
                DataView dv = new DataView();
                if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                {
                    for (int loop = 0; loop < ds.Tables[0].Rows.Count; loop++)
                    {
                        string priorityval = d2.GetFunction("select ReqAppPriority from RQ_RequestHierarchy where RequestType=5 and ReqApproveStage='" + value2 + "'");
                        string pri = Convert.ToString(ds.Tables[0].Rows[loop]["ReqAppPriority"]);
                        ds.Tables[0].DefaultView.RowFilter = "ReqApproveStage='" + value2 + "' and RequestType=5 and ReqAppStaffAppNo='" + lonstaff + "'";
                        dv = ds.Tables[0].DefaultView;
                        if (dv.Count > 0)
                        {
                            getappid = Convert.ToString(dv[0]["ReqAppStaffAppNo"]);
                            string getappno = d2.GetFunction("select staff_code  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and appl_id='" + getappid + "'");
                            if (getappno == staffcodesession)
                            {
                                Check_Status(staffcode, fromdate, todate, fday0);
                                lv_cancel = 1;
                                //  string appstatus = d2.GetFunction("select ReqAppStatus from RQ_Requisition where RequestType=5 and RequisitionPK='" + req + "'");
                                if (appstatus != "2")
                                {
                                    string update_query = "update RQ_Requisition set ReqAppStatus='2',ReqApproveStage='" + hir_stage + "',ReqAppStaffAppNo='" + apprl_app + "' where RequisitionPK='" + req + "'";
                                    d2.update_method_wo_parameter(update_query, "Text");
                                    if (sms_reject == "4")
                                    {
                                        string text = "Rejected Successfully";
                                        rejectflag = true;
                                        access();
                                        sms1(req, text);
                                    }
                                    else
                                    {
                                        rejectflag = false;
                                    }
                                    imgdiv2.Visible = true;
                                    lbl_alert.Text = "Rejected Successfully";
                                    popview.Visible = false;
                                    leave();
                                }
                                else
                                {
                                    imgdiv2.Visible = true;
                                    lbl_alert.Text = "Already Rejected";
                                }
                            }
                            else
                            {
                                imgdiv2.Visible = true;
                                lbl_alert.Text = "You Reject This Staff ";
                            }
                        }
                        else
                        {
                            string qur = "select ReqAppStaffAppNo from RQ_RequestHierarchy where ReqApproveStage='" + stg + "' and RequestType='5' and ReqStaffAppNo='" + cstaff + "'";
                            ds1.Clear();
                            ds1 = d2.select_method_wo_parameter(qur, "text");
                            if (ds1.Tables[0].Rows.Count > 0)
                            {
                                string checkstaff = "";
                                for (int z = 0; z < ds1.Tables[0].Rows.Count; z++)
                                {
                                    checkstaff = Convert.ToString(ds1.Tables[0].Rows[z]["ReqAppStaffAppNo"]);
                                    if (checkstaff == lonstaff)
                                    {
                                        imgdiv2.Visible = true;
                                        lbl_alert.Text = "Already Rejected";
                                    }
                                }
                            }
                            else
                            {
                                imgdiv2.Visible = true;
                                lbl_alert.Text = "You Cannot Reject This Staff ";
                            }
                        }
                    }
                }
                else
                {
                    string checkstaff = d2.GetFunction("select ReqAppStaffAppNo from RQ_RequestHierarchy where ReqApproveStage='" + stg + "' and RequestType='5' and ReqStaffAppNo='" + cstaff + "'");
                    if (checkstaff == lonstaff)
                    {
                        imgdiv2.Visible = true;
                        lbl_alert.Text = "Already You Gave a Rejected";
                    }
                }
            }
        }
        catch { }
    }
    public void btn_event_reject_Click(object sender, EventArgs e)
    {
        string apprl_app = d2.GetFunction("select appl_id  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
        string req = Convert.ToString(TextBox8.Text);
        string appnumb = d2.GetFunction("select ReqAppNo from RQ_Requisition where RequestType=7 and RequisitionPK='" + req + "'");
        string update_query = "update RQ_Requisition set ReqAppStatus='2',ReqAppStaffAppNo='" + apprl_app + "' where RequisitionPK='" + req + "'";
        d2.update_method_wo_parameter(update_query, "Text");
        imgdiv2.Visible = true;
        lbl_alert.Text = "Rejected Successfully";
    }
    public void TabAccess()
    {
        try
        {
            string query = "";
            string Master1 = "";
            string stud = "";
            string values = "";
            if ((Session["group_code"].ToString().Trim() != "") && (Session["group_code"].ToString().Trim() != "0") && (Session["group_code"].ToString().Trim() != "-1"))
            {
                string group = Session["group_code"].ToString();
                if (group.Contains(';'))
                {
                    string[] group_semi = group.Split(';');
                    Master1 = group_semi[0].ToString();
                    query = "select * from Master_Settings where settings ='Request Tap Rights' and group_code ='" + Master1 + "'"; // poo 12.12.17
                }
                else
                    query = "select * from Master_Settings where settings ='Request Tap Rights' and group_code ='" + group + "'"; // poo 12.12.17
            }
            else
            {
                Master1 = Session["usercode"].ToString();
                query = "select * from Master_Settings where settings ='Request Tap Rights' and usercode ='" + Master1 + "'";
            }
            ds = d2.select_method_wo_parameter(query, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    string val = Convert.ToString(ds.Tables[0].Rows[i]["value"]);
                    string[] split = val.Split(',');
                    string len = split.Length.ToString();
                    if (len == "1")
                    {
                        values = val;
                        if (val == "1")
                        {
                            td_stud.Visible = true;
                        }
                        else
                        {
                            td_stud.Visible = false;
                        }
                        if (val == "2")
                        {
                            td_staff.Visible = true;
                        }
                        else
                        {
                            td_staff.Visible = false;
                        }
                        if (val == "3")
                        {
                            td_par.Visible = true;
                        }
                        else
                        {
                            td_par.Visible = false;
                        }
                        if (val == "4")
                        {
                            td_comp.Visible = true;
                        }
                        else
                        {
                            td_comp.Visible = false;
                        }
                        if (val == "5")
                        {
                            td_indi.Visible = true;
                            // cbdept.Visible = true;
                        }
                        else
                        {
                            td_indi.Visible = false;
                            // cbdept.Visible = false;
                        }
                        if (val == "6")
                        {
                            td_mag.Visible = true;
                        }
                        else
                        {
                            td_mag.Visible = false;
                        }
                        if (val == "7")
                        {
                            td3.Visible = true;
                        }
                        else
                        {
                            td3.Visible = false;
                        }
                    }
                    // ******************** length 2**************
                    if (len == "2")
                    {
                        string sp1 = (split[0]);
                        string sp2 = (split[1]);
                        if (sp1 == "1" || sp2 == "1")
                        {
                            td_stud.Visible = true;
                        }
                        else
                        {
                            td_stud.Visible = false;
                        }
                        if (sp1 == "2" || sp2 == "2")
                        {
                            td_staff.Visible = true;
                        }
                        else
                        {
                            td_staff.Visible = false;
                        }
                        if (sp1 == "3" || sp2 == "3")
                        {
                            td_par.Visible = true;
                        }
                        else
                        {
                            td_par.Visible = false;
                        }
                        if (sp1 == "4" || sp2 == "4")
                        {
                            td_comp.Visible = true;
                        }
                        else
                        {
                            td_comp.Visible = false;
                        }
                        if (sp1 == "5" || sp2 == "5")
                        {
                            td_indi.Visible = true;
                            //cbdept.Visible = true;
                        }
                        else
                        {
                            td_indi.Visible = false;
                            // cbdept.Visible = false;
                        }
                        if (sp1 == "6" || sp2 == "6")
                        {
                            td_mag.Visible = true;
                        }
                        else
                        {
                            td_mag.Visible = false;
                        }
                        if (sp1 == "7" || sp2 == "7")
                        {
                            td3.Visible = true;
                        }
                        else
                        {
                            td3.Visible = false;
                        }
                    }
                    //  *************************** length 3*****************
                    else if (len == "3")
                    {
                        string sp1 = (split[0]);
                        string sp2 = (split[1]);
                        string sp3 = (split[2]);
                        if (sp1 == "1" || sp2 == "1" || sp3 == "1")
                        {
                            td_stud.Visible = true;
                        }
                        else
                        {
                            td_stud.Visible = false;
                        }
                        if (sp1 == "2" || sp2 == "2" || sp3 == "2")
                        {
                            td_staff.Visible = true;
                        }
                        else
                        {
                            td_staff.Visible = false;
                        }
                        if (sp1 == "3" || sp2 == "3" || sp3 == "3")
                        {
                            td_par.Visible = true;
                        }
                        else
                        {
                            td_par.Visible = false;
                        }
                        if (sp1 == "4" || sp2 == "4" || sp3 == "4")
                        {
                            td_comp.Visible = true;
                        }
                        else
                        {
                            td_comp.Visible = false;
                        }
                        if (sp1 == "5" || sp2 == "5" || sp3 == "5")
                        {
                            td_indi.Visible = true;
                            //cbdept.Visible = true;
                        }
                        else
                        {
                            td_indi.Visible = false;
                            //cbdept.Visible = false;
                        }
                        if (sp1 == "6" || sp2 == "6" || sp3 == "6")
                        {
                            td_mag.Visible = true;
                        }
                        else
                        {
                            td_mag.Visible = false;
                        }
                        if (sp1 == "7" || sp2 == "7" || sp3 == "7")
                        {
                            td3.Visible = true;
                        }
                        else
                        {
                            td3.Visible = false;
                        }
                    }
                    //    *********************** length 4*****************
                    else if (len == "4")
                    {
                        string sp1 = (split[0]);
                        string sp2 = (split[1]);
                        string sp3 = (split[2]);
                        string sp4 = (split[3]);
                        if (sp1 == "1" || sp2 == "1" || sp3 == "1" || sp4 == "1")
                        {
                            td_stud.Visible = true;
                        }
                        else
                        {
                            td_stud.Visible = false;
                        }
                        if (sp1 == "2" || sp2 == "2" || sp3 == "2" || sp4 == "2")
                        {
                            td_staff.Visible = true;
                        }
                        else
                        {
                            td_staff.Visible = false;
                        }
                        if (sp1 == "3" || sp2 == "3" || sp3 == "3" || sp4 == "3")
                        {
                            td_par.Visible = true;
                        }
                        else
                        {
                            td_par.Visible = false;
                        }
                        if (sp1 == "4" || sp2 == "4" || sp3 == "4" || sp4 == "4")
                        {
                            td_comp.Visible = true;
                        }
                        else
                        {
                            td_comp.Visible = false;
                        }
                        if (sp1 == "5" || sp2 == "5" || sp3 == "5" || sp4 == "5")
                        {
                            td_indi.Visible = true;
                            // cbdept.Visible = true;
                        }
                        else
                        {
                            td_indi.Visible = false;
                            //cbdept.Visible = false;
                        }
                        if (sp1 == "6" || sp2 == "6" || sp3 == "6" || sp4 == "6")
                        {
                            td_mag.Visible = true;
                        }
                        else
                        {
                            td_mag.Visible = false;
                        }
                        if (sp1 == "7" || sp2 == "7" || sp3 == "7" || sp4 == "7")
                        {
                            td3.Visible = true;
                        }
                        else
                        {
                            td3.Visible = false;
                        }
                    }
                    else if (len == "5")
                    {
                        string sp1 = (split[0]);
                        string sp2 = (split[1]);
                        string sp3 = (split[2]);
                        string sp4 = (split[3]);
                        string sp5 = (split[4]);
                        if (sp1 == "1" || sp2 == "1" || sp3 == "1" || sp4 == "1" || sp5 == "1")
                        {
                            td_stud.Visible = true;
                        }
                        else
                        {
                            td_stud.Visible = false;
                        }
                        if (sp1 == "2" || sp2 == "2" || sp3 == "2" || sp4 == "2" || sp5 == "2")
                        {
                            td_staff.Visible = true;
                        }
                        else
                        {
                            td_staff.Visible = false;
                        }
                        if (sp1 == "3" || sp2 == "3" || sp3 == "3" || sp4 == "3" || sp5 == "3")
                        {
                            td_par.Visible = true;
                        }
                        else
                        {
                            td_par.Visible = false;
                        }
                        if (sp1 == "4" || sp2 == "4" || sp3 == "4" || sp4 == "4" || sp5 == "4")
                        {
                            td_comp.Visible = true;
                        }
                        else
                        {
                            td_comp.Visible = false;
                        }
                        if (sp1 == "5" || sp2 == "5" || sp3 == "5" || sp4 == "5" || sp5 == "5")
                        {
                            td_indi.Visible = true;
                            // cbdept.Visible = true;
                        }
                        else
                        {
                            td_indi.Visible = false;
                            // cbdept.Visible = false;
                        }
                        if (sp1 == "6" || sp2 == "6" || sp3 == "6" || sp4 == "6" || sp5 == "6")
                        {
                            td_mag.Visible = true;
                        }
                        else
                        {
                            td_mag.Visible = false;
                        }
                        if (sp1 == "7" || sp2 == "7" || sp3 == "7" || sp4 == "7" || sp5 == "7")
                        {
                            td3.Visible = true;
                        }
                        else
                        {
                            td3.Visible = false;
                        }
                    }
                    else if (len == "6")
                    {
                        string sp1 = (split[0]);
                        string sp2 = (split[1]);
                        string sp3 = (split[2]);
                        string sp4 = (split[3]);
                        string sp5 = (split[4]);
                        string sp6 = (split[5]);
                        if (sp1 == "1" || sp2 == "1" || sp3 == "1" || sp4 == "1" || sp5 == "1" || sp6 == "1")
                        {
                            td_stud.Visible = true;
                        }
                        else
                        {
                            td_stud.Visible = false;
                        }
                        if (sp1 == "2" || sp2 == "2" || sp3 == "2" || sp4 == "2" || sp5 == "2" || sp6 == "2")
                        {
                            td_staff.Visible = true;
                        }
                        else
                        {
                            td_staff.Visible = false;
                        }
                        if (sp1 == "3" || sp2 == "3" || sp3 == "3" || sp4 == "3" || sp5 == "3" || sp6 == "3")
                        {
                            td_par.Visible = true;
                        }
                        else
                        {
                            td_par.Visible = false;
                        }
                        if (sp1 == "4" || sp2 == "4" || sp3 == "4" || sp4 == "4" || sp5 == "4" || sp6 == "4")
                        {
                            td_comp.Visible = true;
                        }
                        else
                        {
                            td_comp.Visible = true;
                        }
                        if (sp1 == "5" || sp2 == "5" || sp3 == "5" || sp4 == "5" || sp5 == "5" || sp6 == "5")
                        {
                            td_indi.Visible = true;
                            //cbdept.Visible = true;
                        }
                        else
                        {
                            td_indi.Visible = false;
                            //cbdept.Visible = false;
                        }
                        if (sp1 == "6" || sp2 == "6" || sp3 == "6" || sp4 == "6" || sp5 == "6" || sp6 == "6")
                        {
                            td_mag.Visible = true;
                        }
                        else
                        {
                            td_mag.Visible = false;
                        }
                        if (sp1 == "7" || sp2 == "7" || sp3 == "7" || sp4 == "7" || sp5 == "7" || sp6 == "7")
                        {
                            td3.Visible = true;
                        }
                        else
                        {
                            td3.Visible = false;
                        }
                    }
                    else if (len == "7")
                    {
                        string sp1 = (split[0]);
                        string sp2 = (split[1]);
                        string sp3 = (split[2]);
                        string sp4 = (split[3]);
                        string sp5 = (split[4]);
                        string sp6 = (split[5]);
                        string sp7 = (split[6]);
                        if (sp1 == "1" || sp2 == "1" || sp3 == "1" || sp4 == "1" || sp5 == "1" || sp6 == "1" || sp7 == "1")
                        {
                            td_stud.Visible = true;
                        }
                        else
                        {
                            td_stud.Visible = false;
                        }
                        if (sp1 == "2" || sp2 == "2" || sp3 == "2" || sp4 == "2" || sp5 == "2" || sp6 == "2" || sp7 == "2")
                        {
                            td_staff.Visible = true;
                        }
                        else
                        {
                            td_staff.Visible = false;
                        }
                        if (sp1 == "3" || sp2 == "3" || sp3 == "3" || sp4 == "3" || sp5 == "3" || sp6 == "3" || sp7 == "3")
                        {
                            td_par.Visible = true;
                        }
                        else
                        {
                            td_par.Visible = false;
                        }
                        if (sp1 == "4" || sp2 == "4" || sp3 == "4" || sp4 == "4" || sp5 == "4" || sp6 == "4" || sp7 == "4")
                        {
                            td_comp.Visible = true;
                        }
                        else
                        {
                            td_comp.Visible = false;
                        }
                        if (sp1 == "5" || sp2 == "5" || sp3 == "5" || sp4 == "5" || sp5 == "5" || sp6 == "5" || sp7 == "5")
                        {
                            td_indi.Visible = true;
                            // cbdept.Visible = true;
                        }
                        else
                        {
                            td_indi.Visible = false;
                            //cbdept.Visible = false;
                        }
                        if (sp1 == "6" || sp2 == "6" || sp3 == "6" || sp4 == "6" || sp5 == "6" || sp6 == "6" || sp7 == "6")
                        {
                            td_mag.Visible = true;
                        }
                        else
                        {
                            td_mag.Visible = false;
                        }
                        if (sp1 == "7" || sp2 == "7" || sp3 == "7" || sp4 == "7" || sp5 == "7" || sp6 == "7" || sp7 == "7")
                        {
                            td3.Visible = true;
                        }
                        else
                        {
                            td3.Visible = false;
                        }
                    }
                }
            }
        }
        catch
        {
        }
    }
    public void staffcount()
    {
        try
        {
            string query = "";
            string Master1 = "";
            string stud = "";
            string values = "";
            if ((Session["group_code"].ToString().Trim() != "") && (Session["group_code"].ToString().Trim() != "0") && (Session["group_code"].ToString().Trim() != "-1"))
            {
                string group = Session["group_code"].ToString();
                if (group.Contains(';'))
                {
                    string[] group_semi = group.Split(';');
                    Master1 = group_semi[0].ToString();
                    query = "select * from Master_Settings where settings ='Gatepass Staff Permission' and group_code ='" + Master1 + "'"; //poo 12.12.17
                }
                else
                    query = "select * from Master_Settings where settings ='Gatepass Staff Permission' and group_code ='" + group + "'"; //poo 12.12.17
            }
            else
            {
                Master1 = Session["usercode"].ToString();
                query = "select * from Master_Settings where settings ='Gatepass Staff Permission' and usercode ='" + Master1 + "'";
            }
            ds = d2.select_method_wo_parameter(query, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    string val = Convert.ToString(ds.Tables[0].Rows[i]["value"]);
                    staff_per_count = val;
                }
            }
        }
        catch
        {
        }
    }
    public void fromtodate()
    {
        DateTime fromdate1 = new DateTime();
        fromdate1 = TextToDate(txt_frm);
        DateTime todate1 = new DateTime();
        todate1 = TextToDate(txt_to);
        if (fromdate1 != todate1)
        {
            for (; fromdate1 <= todate1; )
            {
                startdate1 = fromdate1.ToString("dd/MM/yyyy");
                // altersubject();
                if (lv_cancel == 1)
                {
                    altershdl();
                }
                fromdate1 = fromdate1.AddDays(1);
            }
        }
        else
        {
            startdate1 = fromdate1.ToString("dd/MM/yyyy");
            if (lv_cancel == 1)
            {
                altershdl();
            }
        }
    }
    public void Check_Status(string staffcode, string fdate, string tdate, int chkhalf)
    {
        try
        {
            chkrelived = 0;
            string[] Days = new string[7] { "mon", "tue", "wed", "thu", "fri", "sat", "sun" };
            DataSet dsgetvalue = new DataSet();
            DataSet dsalterperiod = new DataSet();
            DataSet dsstuatt = new DataSet();
            Hashtable hatvalue = new Hashtable();
            Hashtable hatsublab = new Hashtable();
            string degree_var = "";
            string cur_camprevar = "";
            string tmp_datevalue = "";
            string tmp_camprevar = "";
            string strsction = "";
            string strday = "";
            string start_datesem = "";
            string start_dayorder = "";
            string noofdays = "";
            string Strsql = "";
            string SqlFinal = "";
            string sql1 = "";
            string tmp_varstr = "";
            string vari = "";
            string stafftakenclass = "";
            string staffdegreeclass = "";
            string Day_Order = "";
            int noofhrs = 0;
            DataSet ds_attndmaster = new DataSet();
            ht_sch.Clear();
            hat.Clear();
            hat.Add("college_code", Session["collegecode"].ToString());
            string sql_stringvar = "sp_select_details_staff";
            ds_attndmaster.Dispose();
            ds_attndmaster.Reset();
            ds_attndmaster = d2.select_method(sql_stringvar, hat, "sp");
            if (ds_attndmaster.Tables.Count > 0 && ds_attndmaster.Tables[0].Rows.Count > 0)
            {
                for (int pcont = 0; pcont < ds_attndmaster.Tables[0].Rows.Count; pcont++)
                {
                    degree_var = Convert.ToString(ds_attndmaster.Tables[0].Rows[pcont]["degree_code"]) + "-" + Convert.ToString(ds_attndmaster.Tables[0].Rows[pcont]["semester"]);
                    if (!ht_sch.Contains(Convert.ToString(degree_var)))
                    {
                        vari = ds_attndmaster.Tables[0].Rows[pcont]["SchOrder"] + "," + ds_attndmaster.Tables[0].Rows[pcont]["nodays"];
                        ht_sch.Add(degree_var, Convert.ToString(vari));
                    }
                }
            }
            ht_sdate.Clear();
            if (ds_attndmaster.Tables[1].Rows.Count > 0)
            {
                for (int pcont = 0; pcont < ds_attndmaster.Tables[1].Rows.Count; pcont++)
                {
                    degree_var = Convert.ToString(ds_attndmaster.Tables[1].Rows[pcont]["batch_year"]) + "-" + Convert.ToString(ds_attndmaster.Tables[1].Rows[pcont]["degree_code"]) + "-" + Convert.ToString(ds_attndmaster.Tables[1].Rows[pcont]["semester"]);
                    if (!ht_sdate.Contains(Convert.ToString(degree_var)))
                    {
                        vari = ds_attndmaster.Tables[1].Rows[pcont]["sdate"] + "," + ds_attndmaster.Tables[1].Rows[pcont]["starting_dayorder"];
                        ht_sdate.Add(degree_var, Convert.ToString(vari));
                    }
                }
            }
            ht_bell.Clear();
            if (ds_attndmaster.Tables[2].Rows.Count > 0)
            {
                for (int pcont = 0; pcont < ds_attndmaster.Tables[2].Rows.Count; pcont++)
                {
                    degree_var = Convert.ToString(ds_attndmaster.Tables[2].Rows[pcont]["batch_year"]) + "-" + Convert.ToString(ds_attndmaster.Tables[2].Rows[pcont]["degree_code"]) + "-" + Convert.ToString(ds_attndmaster.Tables[2].Rows[pcont]["semester"]) + "-" + Convert.ToString(ds_attndmaster.Tables[2].Rows[pcont]["period1"]);
                    if (!ht_bell.Contains(Convert.ToString(degree_var)))
                    {
                        vari = ds_attndmaster.Tables[2].Rows[pcont]["start_time"] + "," + ds_attndmaster.Tables[2].Rows[pcont]["end_time"];
                        ht_bell.Add(degree_var, Convert.ToString(vari));
                    }
                }
            }
            ht_period.Clear();
            if (ds_attndmaster.Tables[3].Rows.Count > 0)
            {
                for (int pcont = 0; pcont < ds_attndmaster.Tables[3].Rows.Count; pcont++)
                {
                    degree_var = Convert.ToString(ds_attndmaster.Tables[3].Rows[pcont]["lock_hr"]);
                    if (!ht_period.Contains(Convert.ToString(degree_var)))
                    {
                        vari = ds_attndmaster.Tables[3].Rows[pcont]["markatt_from"] + "," + ds_attndmaster.Tables[3].Rows[pcont]["markatt_to"];
                        ht_period.Add(degree_var, Convert.ToString(vari));
                    }
                }
            }
            string degreename = "";
            Hashtable hatdegreename = new Hashtable();
            for (int i = 0; i < ds_attndmaster.Tables[5].Rows.Count; i++)
            {
                if (!hatdegreename.Contains(ds_attndmaster.Tables[5].Rows[i]["Degree_Code"].ToString()))
                {
                    hatdegreename.Add(ds_attndmaster.Tables[5].Rows[i]["Degree_Code"].ToString(), ds_attndmaster.Tables[5].Rows[i]["course"].ToString() + '-' + ds_attndmaster.Tables[5].Rows[i]["dept_acronym"].ToString());
                }
            }
            DateTime dtf = Convert.ToDateTime(fdate);
            DateTime dtt = Convert.ToDateTime(tdate);
            if (dtf <= dtt)
            {
                long days = -1;
                DateTime dt1 = DateTime.Now.AddDays(-6);
                DateTime dt2 = DateTime.Now;
                try
                {
                    dt1 = Convert.ToDateTime(fdate);
                    dt2 = Convert.ToDateTime(tdate);
                    TimeSpan t = dt2.Subtract(dt1);
                    days = t.Days;
                }
                catch
                {
                    try
                    {
                        dt1 = Convert.ToDateTime(fdate);
                        dt2 = Convert.ToDateTime(tdate);
                        TimeSpan t = dt2.Subtract(dt1);
                        days = t.Days;
                    }
                    catch
                    {
                    }
                }
                if (days >= 0)
                {
                    string[] differdays = new string[days];
                    noofhrs = 0;
                    if (ds_attndmaster.Tables[6].Rows.Count > 0)
                    {
                        if (ds_attndmaster.Tables[6].Rows[0]["noofhours"].ToString().Trim() != "" && ds_attndmaster.Tables[6].Rows[0]["noofhours"].ToString().Trim() != null && ds_attndmaster.Tables[6].Rows[0]["noofhours"].ToString().Trim() != "0")
                        {
                            noofhrs = Convert.ToInt32(ds_attndmaster.Tables[6].Rows[0]["noofhours"].ToString());
                        }
                    }
                    sql1 = "";
                    Strsql = "";
                    SqlFinal = "";
                    string stafcode = staffcode;
                    for (int day_lp = 0; day_lp < 7; day_lp++)
                    {
                        strday = Days[day_lp].ToString();
                        sql1 = sql1 + "(";
                        tmp_varstr = "";
                        for (int i_loop = 1; i_loop <= noofhrs; i_loop++)
                        {
                            Strsql = Strsql + strday + Convert.ToString(i_loop) + ",";
                            if (tmp_varstr == "")
                                tmp_varstr = tmp_varstr + strday + Convert.ToString(i_loop) + " like '%" + stafcode + "%'";
                            else
                                tmp_varstr = tmp_varstr + " or " + strday + Convert.ToString(i_loop) + " like '%" + stafcode + "%'";
                        }
                        if (day_lp != 6)
                            tmp_varstr = tmp_varstr + ") or ";
                        else
                            tmp_varstr = tmp_varstr + ")";
                        sql1 = sql1 + tmp_varstr.ToString();
                    }
                    SqlFinal = " select distinct r.Batch_Year,r.degree_code,sy.semester,r.Sections,si.end_date from staff_selector ss,Registration r,";
                    SqlFinal = SqlFinal + " subject s,sub_sem sm,syllabus_master sy,seminfo si where sy.Batch_Year=r.Batch_Year and sy.degree_code=r.degree_code";
                    SqlFinal = SqlFinal + " and sy.semester=r.Current_Semester and sy.syll_code=sm.syll_code and sm.subType_no=s.subType_no ";
                    SqlFinal = SqlFinal + " and s.subject_no=ss.subject_no and r.sections=ss.sections and ss.batch_year=r.Batch_Year";
                    SqlFinal = SqlFinal + " and si.Batch_Year=r.Batch_Year and si.degree_code=r.degree_code and si.semester=r.Current_Semester and ";
                    SqlFinal = SqlFinal + " si.Batch_Year=sy.Batch_Year and sy.degree_code=r.degree_code and si.semester=sy.Semester and r.CC=0 and r.Exam_Flag<>'debar'";
                    SqlFinal = SqlFinal + " and r.DelFlag=0 and ss.staff_code='" + stafcode + "'";
                    DataView dvalternaet = new DataView();
                    DataView dvsemster = new DataView();
                    DataView dvholiday = new DataView();
                    DataView dvdaily = new DataView();
                    DataView dvsubject = new DataView();
                    DataView dvsublab = new DataView();
                    string getalldetails = "select * from Alternate_Schedule where FromDate between '" + fdate + "' and '" + tdate + "' ; ";
                    getalldetails = getalldetails + " select * from Semester_Schedule order by FromDate desc; ";
                    getalldetails = getalldetails + " Select * from holidaystudents where holiday_date between '" + fdate + "' and '" + tdate + "' ; ";
                    getalldetails = getalldetails + " select staff_name,staff_code from staffmaster ; ";
                    getalldetails = getalldetails + " select s.subject_no,s.subject_name,s.subject_code,sy.Batch_Year,sy.degree_code,sy.semester,ss.Lab from Registration r,syllabus_master sy,sub_sem ss,subject s where r.Batch_Year=sy.Batch_Year and r.degree_code=sy.degree_code and r.Current_Semester=sy.semester and sy.syll_code=ss.syll_code and sy.syll_code=s.syll_code and ss.subType_no=ss.subType_no and r.cc=0 and r.delflag=0 and r.exam_flag<>'debar' and r.degree_code='2012' and r.Batch_Year='1052' and r.Current_Semester='3';";
                    getalldetails = getalldetails + " select distinct Current_Semester,Batch_Year,degree_code from Registration where cc=0 and delflag=0 and exam_flag<>'debar'; ";
                    getalldetails = getalldetails + " select no_of_hrs_I_half_day as mor,no_of_hrs_I_half_day as eve,degree_code,semester from periodattndschedule";
                    getalldetails = getalldetails + " select * from tbl_consider_day_order";
                    DataSet dsall = d2.select_method_wo_parameter(getalldetails, "Text");
                    Hashtable hatholiday = new Hashtable();
                    DataSet dsperiod = d2.select_method(SqlFinal, hat, "Text");
                    if (dsperiod.Tables[0].Rows.Count > 0)
                    {
                        for (int pre = 0; pre < dsperiod.Tables[0].Rows.Count; pre++)
                        {
                            staffdegreeclass = "";
                            cur_camprevar = Convert.ToString(dsperiod.Tables[0].Rows[pre]["batch_year"]) + "-" + Convert.ToString(dsperiod.Tables[0].Rows[pre]["degree_code"]) + "-" + Convert.ToString(dsperiod.Tables[0].Rows[pre]["semester"]) + "-" + Convert.ToString(dsperiod.Tables[0].Rows[pre]["sections"]);
                            deg_batch_sem = cur_camprevar;
                            string getdate = "";
                            if (Convert.ToString(tmp_camprevar.Trim()) != Convert.ToString(cur_camprevar.Trim()))
                            {
                                strsction = "";
                                if ((Convert.ToString(dsperiod.Tables[0].Rows[pre]["sections"]) != "") && (Convert.ToString(dsperiod.Tables[0].Rows[pre]["sections"]) != "-1"))
                                {
                                    strsction = " and sections='" + Convert.ToString(dsperiod.Tables[0].Rows[pre]["sections"]) + "'";
                                }
                                string strsubstucount = " select count(distinct r.Roll_No) as stucount,r.Batch_Year,r.degree_code,r.Current_Semester,r.Sections,s.subject_no,r.adm_date from registration r,subjectchooser s where  r.roll_no=s.roll_no and  r.current_semester=s.semester";
                                strsubstucount = strsubstucount + " and batch_year='" + dsperiod.Tables[0].Rows[pre]["batch_year"] + "' and  degree_code='" + dsperiod.Tables[0].Rows[pre]["degree_code"].ToString() + "'  and current_semester='" + dsperiod.Tables[0].Rows[pre]["semester"].ToString() + "'  and cc=0 and delflag=0 and exam_flag<>'debar' " + strsction + "  group by r.Batch_Year,r.degree_code,r.Current_Semester,r.Sections,s.subject_no,r.adm_date";
                                DataSet dssubstucount = d2.select_method_wo_parameter(strsubstucount, "Text");
                                DataView dvsubstucount = new DataView();
                                hatholiday.Clear();
                                dsall.Tables[2].DefaultView.RowFilter = " degree_code=" + dsperiod.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester=" + dsperiod.Tables[0].Rows[pre]["semester"].ToString() + " ";
                                DataView duholiday = dsall.Tables[2].DefaultView;
                                for (int i = 0; i < duholiday.Count; i++)
                                {
                                    if (!hatholiday.Contains(duholiday[i]["holiday_date"].ToString()))
                                    {
                                        hatholiday.Add(duholiday[i]["holiday_date"].ToString(), duholiday[i]["holiday_desc"].ToString());
                                    }
                                }
                                string subjectquery = "select s.subject_no,s.subject_name,s.subject_code,sy.Batch_Year,sy.degree_code,sy.semester,ss.Lab from Registration r,syllabus_master sy,sub_sem ss,subject s where r.Batch_Year=sy.Batch_Year and r.degree_code=sy.degree_code and r.Current_Semester=sy.semester and sy.syll_code=ss.syll_code and sy.syll_code=s.syll_code and ss.subType_no=ss.subType_no and r.cc=0 and r.delflag=0 and r.exam_flag<>'debar' and r.batch_year='" + dsperiod.Tables[0].Rows[pre]["batch_year"] + "' and  r.degree_code='" + dsperiod.Tables[0].Rows[pre]["degree_code"].ToString() + "'  and r.current_semester='" + dsperiod.Tables[0].Rows[pre]["semester"].ToString() + "'";
                                DataSet dssubject = d2.select_method_wo_parameter(subjectquery, "Text");
                                int frshlf = 0, schlf = 0;
                                dsall.Tables[6].DefaultView.RowFilter = " degree_code ='" + dsperiod.Tables[0].Rows[pre]["degree_code"].ToString() + "' and  semester='" + dsperiod.Tables[0].Rows[pre]["semester"].ToString() + "'";
                                DataView dvperiod = dsall.Tables[6].DefaultView;
                                if (dvperiod.Count > 0)
                                {
                                    string morhr = dvperiod[0]["mor"].ToString();
                                    string evehr = dvperiod[0]["mor"].ToString();
                                    if (morhr != null && morhr.Trim() != "")
                                    {
                                        frshlf = Convert.ToInt32(morhr);
                                    }
                                    if (evehr != null && evehr.Trim() != "")
                                    {
                                        schlf = Convert.ToInt32(evehr);
                                    }
                                }
                                string getcurrent_sem = "";
                                dsall.Tables[5].DefaultView.RowFilter = "degree_code ='" + dsperiod.Tables[0].Rows[pre]["degree_code"].ToString() + "'  and batch_year = '" + dsperiod.Tables[0].Rows[pre]["batch_year"].ToString() + "'";
                                DataView dvcurrsem = dsall.Tables[5].DefaultView;
                                if (dvcurrsem.Count > 0)
                                {
                                    getcurrent_sem = dvcurrsem[0]["current_semester"].ToString();
                                }
                                if (Convert.ToString(getcurrent_sem) == Convert.ToString(dsperiod.Tables[0].Rows[pre]["semester"]))
                                {
                                    string semenddate = dsperiod.Tables[0].Rows[pre]["end_date"].ToString();
                                    string altersetion = "";
                                    if (dsperiod.Tables[0].Rows[pre]["sections"].ToString() != "-1" && dsperiod.Tables[0].Rows[pre]["sections"].ToString() != null && dsperiod.Tables[0].Rows[pre]["sections"].ToString().Trim() != "")
                                    {
                                        altersetion = "and Sections='" + dsperiod.Tables[0].Rows[pre]["sections"].ToString() + "'";
                                    }
                                    Hashtable hatdc = new Hashtable();
                                    dsall.Tables[7].DefaultView.RowFilter = "degree_code ='" + dsperiod.Tables[0].Rows[pre]["degree_code"].ToString() + "'  and batch_year = '" + dsperiod.Tables[0].Rows[pre]["batch_year"].ToString() + "' and semester=" + dsperiod.Tables[0].Rows[pre]["semester"].ToString() + "  ";
                                    DataView dvdayorderchanged = dsall.Tables[7].DefaultView;
                                    for (int dc = 0; dc < dvdayorderchanged.Count; dc++)
                                    {
                                        DateTime dtdcf = Convert.ToDateTime(dvdayorderchanged[dc]["from_date"].ToString());
                                        DateTime dtdct = Convert.ToDateTime(dvdayorderchanged[dc]["to_date"].ToString());
                                        for (DateTime dtc = dtdcf; dtc <= dtdct; dtc = dtc.AddDays(1))
                                        {
                                            if (!hatdc.Contains(dtc))
                                            {
                                                hatdc.Add(dtc, dtc);
                                            }
                                        }
                                    }
                                    for (int row_inc = 0; row_inc <= days; row_inc++)
                                    {
                                        string setdate = "";
                                        if (hatdegreename.Contains(dsperiod.Tables[0].Rows[pre]["degree_code"].ToString()))
                                        {
                                            degreename = Convert.ToString(hatdegreename[dsperiod.Tables[0].Rows[pre]["degree_code"].ToString()]).ToString();
                                        }
                                        DateTime cur_day = new DateTime();
                                        cur_day = dt2.AddDays(-row_inc);
                                        if (!hatdc.Contains(cur_day))
                                        {
                                            tmp_datevalue = Convert.ToString(cur_day);
                                            degree_var = Convert.ToString(dsperiod.Tables[0].Rows[pre]["degree_code"]) + "-" + Convert.ToString(dsperiod.Tables[0].Rows[pre]["semester"]);
                                            string SchOrder = "";
                                            string day_from = cur_day.ToString("yyyy-MM-dd");
                                            DateTime schfromdate = cur_day;
                                            dsall.Tables[1].DefaultView.RowFilter = "batch_year='" + dsperiod.Tables[0].Rows[pre]["batch_year"].ToString() + "' and degree_code='" + dsperiod.Tables[0].Rows[pre]["degree_code"].ToString() + "' and semester='" + dsperiod.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and FromDate<='" + cur_day.ToString() + "'";
                                            dvsemster = dsall.Tables[1].DefaultView;
                                            if (dvsemster.Count > 0)
                                                getdate = dvsemster[0]["FromDate"].ToString();
                                            else
                                                getdate = "";
                                            if (Convert.ToString(getdate) != "" && Convert.ToString(getdate).Trim() != "0" && Convert.ToString(getdate).Trim() != null)
                                            {
                                                DateTime getsche = Convert.ToDateTime(getdate);
                                                if (Convert.ToDateTime(schfromdate) == Convert.ToDateTime(getsche) || Convert.ToDateTime(schfromdate) != Convert.ToDateTime(getsche))
                                                {
                                                    if (ht_sch.Contains(Convert.ToString(degree_var)))
                                                    {
                                                        string contvar = Convert.ToString(ht_sch[Convert.ToString(degree_var)]);
                                                        string[] sp_rd_semi = contvar.Split(',');
                                                        if (sp_rd_semi.GetUpperBound(0) >= 1)
                                                        {
                                                            SchOrder = sp_rd_semi[0].ToString();
                                                            noofdays = sp_rd_semi[1].ToString();
                                                        }
                                                    }
                                                    degree_var = Convert.ToString(dsperiod.Tables[0].Rows[pre]["batch_year"]) + "-" + Convert.ToString(dsperiod.Tables[0].Rows[pre]["degree_code"]) + "-" + Convert.ToString(dsperiod.Tables[0].Rows[pre]["semester"]);
                                                    if (ht_sdate.Contains(Convert.ToString(degree_var)))
                                                    {
                                                        string contvar = Convert.ToString(ht_sdate[Convert.ToString(degree_var)]);
                                                        string[] sp_rd_semi = contvar.Split(',');
                                                        if (sp_rd_semi.GetUpperBound(0) >= 1)
                                                        {
                                                            start_datesem = sp_rd_semi[0].ToString();
                                                            start_dayorder = sp_rd_semi[1].ToString();
                                                        }
                                                    }
                                                    if (noofdays.ToString().Trim() == "")
                                                    {
                                                        goto lb1;
                                                    }
                                                    Day_Order = "";
                                                    if (SchOrder == "1")
                                                    {
                                                        strday = cur_day.ToString("ddd");
                                                        Day_Order = "0-" + Convert.ToString(strday);
                                                    }
                                                    else
                                                    {
                                                        string[] sps = dt2.ToString().Split('/');
                                                        string curdate = sps[0] + '/' + sps[1] + '/' + sps[2];
                                                        strday = d2.findday(cur_day.ToString(), dsperiod.Tables[0].Rows[pre]["degree_code"].ToString(), dsperiod.Tables[0].Rows[pre]["semester"].ToString(), dsperiod.Tables[0].Rows[pre]["batch_year"].ToString(), start_datesem.ToString(), noofdays.ToString(), start_dayorder);
                                                        Day_Order = "0-" + Convert.ToString(strday);
                                                    }
                                                    if (strday.ToString().Trim() == "")
                                                    {
                                                        goto lb1;
                                                    }
                                                    string reasonsun = "";
                                                    if (!hatholiday.Contains(cur_day.ToString()) || reasonsun.Trim().ToLower() != "sunday")
                                                    {
                                                        string str_day = strday;
                                                        string Atmonth = cur_day.Month.ToString();
                                                        string Atyear = cur_day.Year.ToString();
                                                        long strdate = (Convert.ToInt32(Atmonth) + Convert.ToInt32(Atyear) * 12);
                                                        sql1 = "";
                                                        Strsql = "";
                                                        for (int i_loop = 1; i_loop <= noofhrs; i_loop++)
                                                        {
                                                            Strsql = Strsql + strday + Convert.ToString(i_loop) + ",";
                                                            if (sql1 == "")
                                                            {
                                                                sql1 = sql1 + strday + Convert.ToString(i_loop) + " like '%" + stafcode + "%'";//Modified by Manikandan 14/08/2013 from above comment line
                                                            }
                                                            else
                                                            {
                                                                sql1 = sql1 + " or " + strday + Convert.ToString(i_loop) + " like '%" + stafcode + "%'";//Modified by Manikandan 14/08/2013 from above comment line
                                                            }
                                                        }
                                                        string day_aten = cur_day.Day.ToString();
                                                        string strsectionvar = "";
                                                        string labsection = "";
                                                        if (Convert.ToString(dsperiod.Tables[0].Rows[pre]["sections"]) != "" && Convert.ToString(dsperiod.Tables[0].Rows[pre]["sections"]) != "-1")
                                                        {
                                                            strsectionvar = " and sections='" + Convert.ToString(dsperiod.Tables[0].Rows[pre]["sections"]) + "'";
                                                            labsection = " and sections='" + Convert.ToString(dsperiod.Tables[0].Rows[pre]["sections"]) + "'";
                                                        }
                                                        sql1 = " and (" + sql1 + ")";
                                                        dsall.Tables[0].DefaultView.RowFilter = "degree_code=" + dsperiod.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiod.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiod.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                        dvalternaet = dsall.Tables[0].DefaultView;
                                                        string text_temp = "";
                                                        int temp = 0;
                                                        text_temp = "";
                                                        string getcolumnfield = "";
                                                        Boolean moringleav = false;
                                                        Boolean evenleave = false;
                                                        dsall.Tables[2].DefaultView.RowFilter = "holiday_date='" + cur_day.ToString("MM/dd/yyyy") + "' and degree_code=" + dsperiod.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester='" + dsperiod.Tables[0].Rows[pre]["semester"].ToString() + "'";
                                                        dvholiday = dsall.Tables[2].DefaultView;
                                                        if (dvholiday.Count > 0)
                                                        {
                                                            if (!hatholiday.Contains(cur_day.ToString()))
                                                            {
                                                                hatholiday.Add(cur_day.ToString(), dvholiday[0]["holiday_desc"].ToString());
                                                            }
                                                            if (dvholiday[0]["morning"].ToString() == "1" || dvholiday[0]["morning"].ToString().Trim().ToLower() == "true")
                                                            {
                                                                moringleav = true;
                                                            }
                                                            if (dvholiday[0]["evening"].ToString() == "1" || dvholiday[0]["evening"].ToString().Trim().ToLower() == "true")
                                                            {
                                                                evenleave = true;
                                                            }
                                                            if (dvholiday[0]["halforfull"].ToString() == "0" || dvholiday[0]["halforfull"].ToString().Trim().ToLower() == "false")
                                                            {
                                                                evenleave = true;
                                                                moringleav = true;
                                                            }
                                                        }
                                                        for (temp = 1; temp <= noofhrs; temp++)
                                                        {
                                                            string sp_rd = "";
                                                            Boolean altfalg = false;
                                                            if (dvalternaet.Count > 0)
                                                            {
                                                                sp_rd = dvalternaet[0]["" + strday.Trim() + temp + ""].ToString();
                                                                if (hatdegreename.Contains(dvalternaet[0]["degree_code"].ToString()))
                                                                {
                                                                    degreename = Convert.ToString(hatdegreename[dvalternaet[0]["degree_code"].ToString()]);
                                                                }
                                                            }
                                                            else
                                                            {
                                                                sp_rd = "";
                                                            }
                                                            if (sp_rd.Trim() != "" && sp_rd.Trim() != "0" && sp_rd != null)
                                                            {
                                                                altfalg = true;
                                                                string[] sp_rd_split = sp_rd.Split(';');
                                                                for (int index = 0; index <= sp_rd_split.GetUpperBound(0); index++)
                                                                {
                                                                    string[] sp2 = sp_rd_split[index].Split(new Char[] { '-' });
                                                                    if (sp2.GetUpperBound(0) >= 1)
                                                                    {
                                                                        int upperbound = sp2.GetUpperBound(0);
                                                                        for (int multi_staff = 1; multi_staff < sp2.GetUpperBound(0); multi_staff++)
                                                                        {
                                                                            if (sp2[multi_staff] == stafcode)
                                                                            {
                                                                                string sect = dsperiod.Tables[0].Rows[pre]["sections"].ToString();
                                                                                if (sect != "-1" && sect != null && sect.Trim() != "")
                                                                                {
                                                                                    sect = "-Section " + sect + "";
                                                                                }
                                                                                else
                                                                                {
                                                                                    sect = "";
                                                                                }
                                                                                if (semenddate.Trim() != "" && semenddate.Trim() != null && semenddate.Trim() != "0")
                                                                                {
                                                                                    if (cur_day <= (Convert.ToDateTime(semenddate)))
                                                                                    {
                                                                                        double Num;
                                                                                        bool isNum = double.TryParse(sp2[0].ToString(), out Num);
                                                                                        if (isNum)
                                                                                        {
                                                                                            dssubject.Tables[0].DefaultView.RowFilter = " subject_no=" + sp2[0] + "";
                                                                                            dvsubject = dssubject.Tables[0].DefaultView;
                                                                                            if (dvsubject.Count > 0)
                                                                                            {
                                                                                                string hourset = "";
                                                                                                if (setdate == "")
                                                                                                {
                                                                                                    setdate = cur_day.ToString("dd/MM/yyyy");
                                                                                                    hourset = " Date :" + setdate + " Hour :" + temp.ToString();
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                    hourset = " , Hour :" + temp.ToString();
                                                                                                }
                                                                                                text_temp = hourset + " " + dvsubject[0]["subject_name"].ToString();
                                                                                            }
                                                                                            Boolean allowleave = false;
                                                                                            if (hatholiday.Contains(cur_day.ToString()))
                                                                                            {
                                                                                                if (moringleav == true)
                                                                                                {
                                                                                                    if (frshlf >= temp)
                                                                                                    {
                                                                                                        allowleave = true;
                                                                                                    }
                                                                                                }
                                                                                                if (evenleave == true)
                                                                                                {
                                                                                                    if (temp > frshlf)
                                                                                                    {
                                                                                                        allowleave = true;
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                            if (chkhalf == 1)
                                                                                            {
                                                                                                if (temp > frshlf)
                                                                                                {
                                                                                                    allowleave = true;
                                                                                                }
                                                                                            }
                                                                                            else if (chkhalf == 2)
                                                                                            {
                                                                                                if (frshlf >= temp)
                                                                                                {
                                                                                                    allowleave = true;
                                                                                                }
                                                                                            }
                                                                                            if (allowleave == false)
                                                                                            {
                                                                                                if (staffdegreeclass.Trim() == "")
                                                                                                {
                                                                                                    staffdegreeclass = dsperiod.Tables[0].Rows[pre]["batch_year"].ToString() + "-" + degreename + "-Sem " + dsperiod.Tables[0].Rows[pre]["semester"].ToString() + sect + " " + text_temp;
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                    staffdegreeclass = staffdegreeclass + text_temp;
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            if (altfalg == false)
                                                            {
                                                                getcolumnfield = Convert.ToString(strday + temp);
                                                                if (dvsemster.Count > 0)
                                                                {
                                                                    if (dvsemster[0][getcolumnfield].ToString() != "" && dvsemster[0][getcolumnfield].ToString() != null && dvsemster[0][getcolumnfield].ToString() != "\0")
                                                                    {
                                                                        string timetable = "";
                                                                        string name = dvsemster[0]["ttname"].ToString();
                                                                        if (name != null && name.Trim() != "")
                                                                        {
                                                                            timetable = name;
                                                                        }
                                                                        sp_rd = dvsemster[0][getcolumnfield].ToString();
                                                                        string[] sp_rd_semi = sp_rd.Split(';');
                                                                        for (int semi = 0; semi <= sp_rd_semi.GetUpperBound(0); semi++)
                                                                        {
                                                                            string[] sp2 = sp_rd_semi[semi].Split(new Char[] { '-' });
                                                                            if (sp2.GetUpperBound(0) >= 1)
                                                                            {
                                                                                int upperbound = sp2.GetUpperBound(0);
                                                                                for (int multi_staff = 1; multi_staff < sp2.GetUpperBound(0); multi_staff++)
                                                                                {
                                                                                    if (sp2[multi_staff] == stafcode)
                                                                                    {
                                                                                        string sect = dsperiod.Tables[0].Rows[pre]["sections"].ToString();
                                                                                        if (sect == "-1" || sect == null || sect.Trim() == "")
                                                                                        {
                                                                                            sect = "";
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            sect = "-Section " + sect + "";
                                                                                        }
                                                                                        if (semenddate.Trim() != "" && semenddate.Trim() != null && semenddate.Trim() != "0")
                                                                                        {
                                                                                            if (cur_day <= (Convert.ToDateTime(semenddate)))
                                                                                            {
                                                                                                Boolean allowleave = false;
                                                                                                if (hatholiday.Contains(cur_day.ToString()))
                                                                                                {
                                                                                                    if (moringleav == true)
                                                                                                    {
                                                                                                        if (frshlf >= temp)
                                                                                                        {
                                                                                                            allowleave = true;
                                                                                                        }
                                                                                                    }
                                                                                                    if (evenleave == true)
                                                                                                    {
                                                                                                        if (temp > frshlf)
                                                                                                        {
                                                                                                            allowleave = true;
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                                if (chkhalf == 1)
                                                                                                {
                                                                                                    if (temp > frshlf)
                                                                                                    {
                                                                                                        allowleave = true;
                                                                                                    }
                                                                                                }
                                                                                                else if (chkhalf == 2)
                                                                                                {
                                                                                                    if (frshlf >= temp)
                                                                                                    {
                                                                                                        allowleave = true;
                                                                                                    }
                                                                                                }
                                                                                                frshlf = hourstaff;
                                                                                                if (allowleave == false)
                                                                                                {
                                                                                                    double Num;
                                                                                                    bool isNum = double.TryParse(sp2[0].ToString(), out Num);
                                                                                                    if (isNum)
                                                                                                    {
                                                                                                        dssubject.Tables[0].DefaultView.RowFilter = " subject_no=" + sp2[0] + "";
                                                                                                        dvsubject = dssubject.Tables[0].DefaultView;
                                                                                                        if (dvsubject.Count > 0)
                                                                                                        {
                                                                                                            string hourset = "";
                                                                                                            if (setdate == "")
                                                                                                            {
                                                                                                                setdate = cur_day.ToString("dd/MM/yyyy");
                                                                                                                hourset = " Date :" + setdate + " Hour :" + temp.ToString();
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                hourset = " , Hour :" + temp.ToString();
                                                                                                            }
                                                                                                            text_temp = hourset + " Subject : " + dvsubject[0]["subject_name"].ToString();
                                                                                                        }
                                                                                                    }
                                                                                                    if (staffdegreeclass.Trim() == "")
                                                                                                    {
                                                                                                        staffdegreeclass = dsperiod.Tables[0].Rows[pre]["batch_year"].ToString() + " - " + degreename + "-Sem " + dsperiod.Tables[0].Rows[pre]["semester"].ToString() + sect + " " + text_temp;
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        staffdegreeclass = staffdegreeclass + text_temp;
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            if (staffdegreeclass.Trim() != "")
                            {
                                if (stafftakenclass == "")
                                {
                                    stafftakenclass = staffdegreeclass;
                                }
                                else
                                {
                                    stafftakenclass = stafftakenclass + " / " + staffdegreeclass;
                                }
                            }
                        lb1: tmp_camprevar = Convert.ToString(dsperiod.Tables[0].Rows[pre]["batch_year"]) + "-" + Convert.ToString(dsperiod.Tables[0].Rows[pre]["degree_code"]) + "-" + Convert.ToString(dsperiod.Tables[0].Rows[pre]["semester"]) + "-" + Convert.ToString(dsperiod.Tables[0].Rows[pre]["sections"]);
                        }
                    }
                }
            }
            if (stafftakenclass.Trim() != "")
            {
                // ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('Please allot alternate schedule for this staff. " + stafftakenclass + "')", true);
                //Div3.Visible = true;
                //Label12.Text = "Please allot alternate schedule for this staff. " + stafftakenclass;
                //flag = true;
            }
            fromtodate();
        }
        catch (Exception ex)
        {
        }
    }
    public void altershdl()
    {
        try
        {
            string dayord = "";
            string req = Convert.ToString(TextBox7.Text);
            string fromdate = d2.GetFunction("select LeaveFrom from RQ_Requisition where RequestType='5' and RequisitionPK='" + req + "'");
            string todate = d2.GetFunction("select LeaveTo from RQ_Requisition where RequestType='5' and RequisitionPK='" + req + "'");
            string day_value = "", srt_day = "", dt1 = "", dt2 = "", strsec = "";
            string[] sp = deg_batch_sem.Split('-');
            string batch = sp[0];
            string deg = sp[1];
            string sem = sp[2];
            string[] dt1_split = startdate1.Split('/');
            dt1 = dt1_split[1] + "-" + dt1_split[0] + "-" + dt1_split[2];
            DateTime startdate = Convert.ToDateTime(d2.GetFunction("select start_date from seminfo where degree_code='" + deg + "' and semester='" + sem + "' and batch_year='" + batch + "' "));
            string start_dayorder = d2.GetFunction("select starting_dayorder from seminfo where degree_code='" + deg + "' and semester='" + sem + "' and batch_year='" + batch + "'");
            if (startdate.ToString() != "" && startdate.ToString() != null)
            {
                day_value = startdate.ToString("ddd");
            }
            con.Close();
            con.Open();
            SqlDataReader dr;
            cmd = new SqlCommand("Select No_of_hrs_per_day,schorder,nodays from periodattndschedule where degree_code='" + deg + "' and semester = '" + sem + "'", con);
            dr = cmd.ExecuteReader();
            dr.Read();
            if (dr.HasRows == true)
            {
                if ((dr["No_of_hrs_per_day"].ToString()) != "")
                {
                    intNHrs = Convert.ToInt32(dr["No_of_hrs_per_day"]);
                    SchOrder = Convert.ToInt32(dr["schorder"]);
                    nodays = Convert.ToInt32(dr["nodays"]);
                }
            }
            if (intNHrs > 0)
            {
                if (SchOrder != 0)
                {
                    srt_day = (Convert.ToDateTime(dt1)).ToString("ddd");
                }
                else
                {
                    string[] sps = dt2.ToString().Split('/');
                    string curdate = sps[1] + '/' + sps[0] + '/' + sps[2];
                    srt_day = d2.findday(curdate.ToString(), deg, sem, batch, startdate.ToString(), nodays.ToString(), start_dayorder.ToString());
                }
            }
            string sql1 = "";
            string Strsql = "";
            for (int i_loop = 1; i_loop <= intNHrs; i_loop++)
            {
                if (sql1 == "")
                {
                    sql1 = sql1 + srt_day + Convert.ToString(i_loop);
                }
                else
                {
                    sql1 = sql1 + " - " + srt_day + Convert.ToString(i_loop);
                }
            }
            if (srt_day != "")
            {
                string altersech = "";
                string dayclu = srt_day;
                string value = "";
                string note = "";
                hourstaff = 0;
                string[] array = sql1.Split('-');
                string add = "";
                for (int j = 0; j < array.Length; j++)
                {
                    dayord = d2.GetFunction("select " + array[j] + " from semester_schedule where degree_code='" + deg + "'and semester='" + sem + "' and batch_year='" + batch + "'");
                    string[] dsplt = dayord.Split('-');
                    for (int k = 0; k < dsplt.Length; k++)
                    {
                        if (dsplt[k] == stafcodealter)
                        {
                            //for (int i_loop = 1; i_loop <= intNHrs; i_loop++)
                            //{
                            hourstaff = 1;
                            string set = d2.GetFunction("select COUNT(*) from tbl_alter_schedule_Details where degree_code='" + deg + "' and batch_year='" + batch + "' " + strsec + " and semester='" + sem + "' and fromdate='" + dt1 + "' and No_of_Alter=" + hourstaff + " ");
                            if (set.Trim() != "" && set.Trim() != null && set.Trim() != "0")
                            {
                                string alterquery = "update tbl_alter_schedule_Details set " + array[j] + "='" + altersech + "' where degree_code='" + deg + "' and batch_year=" + batch + " " + strsec + " and semester='" + sem + "' and fromdate='" + dt1 + "' and No_of_Alter=" + hourstaff + "";
                                int a = d2.update_method_wo_parameter(alterquery, "Text");
                            }
                            else
                            {
                                string secvalue = "";
                                string alterquery = "insert into  tbl_alter_schedule_Details(batch_year,degree_code,semester,sections,fromdate,No_of_Alter," + array[j] + ") values(" + batch + "," + deg + " ,'" + sem + "','" + secvalue + "','" + dt1 + "' ," + hourstaff + ",'" + note + "')";
                                int a = d2.update_method_wo_parameter(alterquery, "Text");
                            }
                            SqlDataReader dr_update;
                            con.Close();
                            con.Open();
                            cmd = new SqlCommand("update alternate_schedule set " + array[j] + "='" + altersech + "' where degree_code='" + deg + "' and batch_year='" + batch + "' " + strsec + " and semester='" + sem + "' and fromdate='" + dt1 + "' ", con);
                            dr_update = cmd.ExecuteReader();
                            // }
                        }
                    }
                }
            }
        }
        catch
        {
        }
    }
    public void degbatchsem()
    {
        string[] ay = txt_frm.Text.Split('/');
        string[] ay1 = txt_to.Text.Split('/');
        //string currdate = DateTime.Now.ToString("dd/MM/yyyy");        
        DateTime dt = new DateTime();
        DateTime dt1 = new DateTime();
        dt = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
        dt1 = Convert.ToDateTime(ay1[1] + "/" + ay1[0] + "/" + ay1[2]);
        string SqlFinal = " select distinct r.Batch_Year,r.degree_code,sy.semester,ltrim(rtrim(isnull(r.sections,''))) as Sections,si.end_date from staff_selector ss,Registration r,";
        SqlFinal = SqlFinal + " subject s,sub_sem sm,syllabus_master sy,seminfo si where sy.Batch_Year=r.Batch_Year and sy.degree_code=r.degree_code";
        SqlFinal = SqlFinal + " and sy.semester=r.Current_Semester and sy.syll_code=sm.syll_code and sm.subType_no=s.subType_no ";
        SqlFinal = SqlFinal + " and s.subject_no=ss.subject_no and ltrim(rtrim(isnull(r.sections,'')))=ltrim(rtrim(isnull(ss.sections,'')))  and ss.batch_year=r.Batch_Year";
        SqlFinal = SqlFinal + " and si.Batch_Year=r.Batch_Year and si.degree_code=r.degree_code and si.semester=r.Current_Semester and ";
        SqlFinal = SqlFinal + " si.Batch_Year=sy.Batch_Year and sy.degree_code=r.degree_code and si.semester=sy.Semester and r.CC=0 and r.Exam_Flag<>'debar'";
        SqlFinal = SqlFinal + " and r.DelFlag=0 and ss.staff_code='" + txt_staff_code.Text + "'";
        DataView dvalternaet = new DataView();
        DataView dvsemster = new DataView();
        DataView dvholiday = new DataView();
        DataView dvdaily = new DataView();
        DataView dvsubject = new DataView();
        DataView dvsublab = new DataView();
        string getalldetails = "";
        getalldetails = "select * from Alternate_Schedule where FromDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "'";
        getalldetails = getalldetails + " select * from Semester_Schedule order by FromDate desc; ";
        getalldetails = getalldetails + " Select * from holidaystudents where holiday_date between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt.ToString("MM/dd/yyyy") + "' ";
        getalldetails = getalldetails + " select staff_name,staff_code from staffmaster ; ";
        getalldetails = getalldetails + " select s.subject_no,s.subject_name,s.subject_code,sy.Batch_Year,sy.degree_code,sy.semester,ss.Lab from Registration r,syllabus_master sy,sub_sem ss,subject s where r.Batch_Year=sy.Batch_Year and r.degree_code=sy.degree_code and r.Current_Semester=sy.semester and sy.syll_code=ss.syll_code and sy.syll_code=s.syll_code and ss.subType_no=ss.subType_no and r.cc=0 and r.delflag=0 and r.exam_flag<>'debar' and r.degree_code='2012' and r.Batch_Year='1052' and r.Current_Semester='3';";
        getalldetails = getalldetails + " select distinct Current_Semester,Batch_Year,degree_code from Registration where cc=0 and delflag=0 and exam_flag<>'debar'; ";
        getalldetails = getalldetails + " select no_of_hrs_I_half_day as mor,no_of_hrs_I_half_day as eve,degree_code,semester from periodattndschedule";
        getalldetails = getalldetails + " select * from tbl_consider_day_order";
        DataSet dsall = d2.select_method_wo_parameter(getalldetails, "Text");
        Hashtable hatholiday = new Hashtable();
        DataSet dsperiod = d2.select_method(SqlFinal, hat, "Text");
        DataSet dsperiodNew = d2.select_method_wo_parameter("select distinct s.batch_year,r.degree_code,s.semester,s.sections from registration r, Semester_Schedule s where s.batch_year=r.batch_year and s.degree_code=r.degree_code and r.current_semester=s.semester and ltrim(rtrim(isnull(r.sections,'')))=ltrim(rtrim(isnull(s.sections,''))) and r.cc=0 and r.delflag=0 and r.exam_flag<>'debar'  order by s.batch_year desc", "text");

        if (dsperiodNew.Tables[0].Rows.Count > 0)
        {
            for (int pre = 0; pre < dsperiodNew.Tables[0].Rows.Count; pre++)
            {
                string cur_camprevar = Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["batch_year"]) + "-" + Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["degree_code"]) + "-" + Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["semester"]) + "-" + Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["sections"]);
                deg_batch_sem = cur_camprevar;
                if (Session["altertimetable"] != "1")
                    altersubject();
                else
                    deletealtersubject();

            }
        }
        else
        {
            DataTable dummy = new DataTable();
            grid_altersub.DataSource = dummy;
            grid_altersub.DataBind();
            grid_altersub.Visible = false;
            spn1.Visible = false;
            deg_batch_sem = "";
        }
    }
    //public void altersubject()
    //{
    //    //sp_appsub.Visible = false;
    //    DataTable dt = new DataTable();
    //    //   degbatchsem();
    //    string dayord = "";
    //    string fromdate = "";
    //    string todate = "";
    //    string batch = "";
    //    string deg = "";
    //    string sem = "";
    //    string sec = "";
    //    string day_value = "", srt_day = "", dt1 = "", dt2 = "", strsec = "";
    //    string[] sp = deg_batch_sem.Split('-');
    //    if (deg_batch_sem != "")
    //    {
    //        batch = sp[0];
    //        deg = sp[1];
    //        sem = sp[2];
    //        sec = sp[3];
    //        strsec = " and sections in('" + sec + "')";
    //    }
    //    else
    //    {
    //        grid_altersub.Visible = false;
    //        spn1.Visible = false;
    //        return;
    //    }
    //    stafcodealter = Convert.ToString(txt_staff_code.Text);
    //    dt.Columns.Add("Dummy0");
    //    dt.Columns.Add("Dummy");
    //    dt.Columns.Add("Dummy5");
    //    dt.Columns.Add("Dummy3");
    //    dt.Columns.Add("Dummy4");
    //    dt.Columns.Add("Dummy6");
    //    dt.Columns.Add("Dummy2");
    //    dt.Columns.Add("Dummy1");
    //    DataRow dr1;
    //    DateTime fromdate1 = new DateTime();
    //    fromdate1 = TextToDate(txt_frm);
    //    DateTime todate1 = new DateTime();
    //    todate1 = TextToDate(txt_to);
    //    string dayy = "";
    //    for (; fromdate1 <= todate1; )
    //    {
    //        startdate1 = fromdate1.ToString("dd/MM/yyyy");
    //        dayy = fromdate1.ToString("dddd");
    //        string[] dt1_split = startdate1.Split('/');
    //        dt1 = dt1_split[1] + "-" + dt1_split[0] + "-" + dt1_split[2];
    //        DateTime dtnew = new DateTime();
    //        dtnew = Convert.ToDateTime(dt1_split[1] + "/" + dt1_split[0] + "/" + dt1_split[2]);
    //        DateTime startdate = Convert.ToDateTime(d2.GetFunction("select start_date from seminfo where degree_code='" + deg + "' and semester='" + sem + "' and batch_year='" + batch + "' "));
    //        string start_dayorder = d2.GetFunction("select starting_dayorder from seminfo where degree_code='" + deg + "' and semester='" + sem + "' and batch_year='" + batch + "'");
    //        if (startdate.ToString() != "" && startdate.ToString() != null)
    //            day_value = startdate.ToString("ddd");
    //        con.Close();
    //        con.Open();
    //        SqlDataReader dr;
    //        cmd = new SqlCommand("Select No_of_hrs_per_day,schorder,nodays from periodattndschedule where degree_code='" + deg + "' and semester = '" + sem + "'", con);
    //        dr = cmd.ExecuteReader();
    //        dr.Read();
    //        if (dr.HasRows == true)
    //        {
    //            if ((dr["No_of_hrs_per_day"].ToString()) != "")
    //            {
    //                intNHrs = Convert.ToInt32(dr["No_of_hrs_per_day"]);
    //                SchOrder = Convert.ToInt32(dr["schorder"]);
    //                nodays = Convert.ToInt32(dr["nodays"]);
    //            }
    //        }
    //        if (intNHrs > 0)
    //        {
    //            if (SchOrder != 0)
    //                srt_day = (Convert.ToDateTime(dt1)).ToString("ddd");
    //            else
    //            {
    //                string[] sps = dtnew.ToString().Split('/');
    //                string curdate = sps[0] + '/' + sps[1] + '/' + sps[2];
    //                srt_day = d2.findday(curdate.ToString(), deg, sem, batch, startdate.ToString(), nodays.ToString(), start_dayorder.ToString());
    //            }
    //        }
    //        string sql1 = "";
    //        string Strsql = "";
    //        for (int i_loop = 1; i_loop <= intNHrs; i_loop++)
    //        {
    //            if (sql1 == "")
    //                sql1 = sql1 + srt_day + Convert.ToString(i_loop);
    //            else
    //                sql1 = sql1 + " - " + srt_day + Convert.ToString(i_loop);
    //        }
    //        if (srt_day != "")
    //        {
    //            string altersech = "";
    //            string dayclu = srt_day;
    //            string value = "";
    //            string note = "";
    //            string day = "";
    //            hourstaff = 0;
    //            string[] array = sql1.Split('-');
    //            string add = "";
    //            for (int j = 0; j < array.Length; j++)
    //            {
    //                dayord = d2.GetFunction("select " + array[j] + " from semester_schedule where degree_code='" + deg + "'and semester='" + sem + "' and batch_year='" + batch + "' and sections='" + sec + "'");
    //                string[] dsplt = dayord.Split('-');
    //                for (int k = 0; k < dsplt.Length; k++)
    //                {
    //                    if (dsplt[k] == stafcodealter)
    //                    {
    //                        if (day == "")
    //                            day = array[j];
    //                        else
    //                            day = day + "-" + array[j];
    //                    }
    //                }
    //            }
    //            string[] daysp = day.Split('-');
    //            for (int j = 0; j < daysp.Length; j++)
    //            {
    //                string ss = "";
    //                string qur = d2.GetFunction("select " + daysp[j] + " from Alternate_Schedule where  degree_code='" + deg + "' and batch_year='" + batch + "' " + strsec + " and semester='" + sem + "' and fromdate='" + dt1 + "' ");
    //                //dr1 = dt.NewRow();
    //                string sub = "";
    //                string sub1 = "";
    //                string qur1 = "";
    //                string stf1 = "";
    //                string stf = "";
    //                string stfcode = "";
    //                string staf1code = "";
    //                if ((qur != ""))
    //                {
    //                    if ((qur != "0"))
    //                    {
    //                        string[] q = qur.Split('-');
    //                        qur1 = d2.GetFunction("select " + daysp[j] + " from semester_schedule where  degree_code='" + deg + "' and batch_year='" + batch + "' " + strsec + " and semester='" + sem + "' ");
    //                        string[] splq1 = qur1.Split(';');
    //                        for (int i = 0; i < splq1.Length; i++)
    //                        {
    //                            string[] q1 = splq1[i].Split('-');
    //                            //multiple staff time table alter
    //                            if (q1.Length > 1)
    //                            {
    //                                for (int row = 1; row < q1.Length - 1; row++)
    //                                {
    //                                    if (q1[row] == stafcodealter)
    //                                    {
    //                                        // string[] q1 = qur1.Split('-');
    //                                        sub = d2.GetFunction("select subject_name from subject where subject_no='" + q[0] + "'");
    //                                        sub1 = d2.GetFunction("select subject_name from subject where subject_no='" + q1[0] + "'");
    //                                        if (q1.Length >= 2)
    //                                        {
    //                                            stf = d2.GetFunction("select staff_name from staffmaster where staff_code='" + q[1] + "'");
    //                                            stfcode = Convert.ToString(txt_staff_code.Text);
    //                                            staf1code = Convert.ToString(q[1]);
    //                                        }
    //                                        stf1 = d2.GetFunction("select staff_name from staffmaster where staff_code='" + txt_staff_code.Text + "'");
    //                                        ss = daysp[j];
    //                                        tblday = daysp[j];
    //                                        dayfuction();
    //                                        ss = curday;
    //                                    }
    //                                }
    //                            }
    //                        }
    //                    }
    //                    else
    //                    {
    //                        string tyyype = d2.GetFunction("select LinkValue  from InsSettings where LinkName like 'Staff Holiday By Staff Type%' and college_code='" + collegecode1 + "'");
    //                        if (tyyype == "0")
    //                        {
    //                            string code = d2.GetFunction("select category_code from stafftrans where staff_code='" + txt_staff_code.Text + "'");
    //                            string deptCode = d2.GetFunction("select dept_code from stafftrans where staff_code='" + txt_staff_code.Text + "'");//delsi1806
    //                            string get = d2.GetFunction("select holiday_date from holidayStaff where category_code ='" + code + "' and  holiday_date='" + dt1 + "' and college_code ='" + collegecode1 + "'and dept_code='" + deptCode + "'");
    //                            string sunday = dtnew.ToString("dddd");
    //                            string get1 = d2.GetFunction("select holiday_date from holidayStudents where semester='" + sem + "' and degree_code='" + deg + "' and holiday_date='" + dt1 + "'");
    //                            if (get != "0" || sunday == "Sunday")
    //                                ss = dayy + "-Holiday";
    //                            else if (get1 != "0")
    //                                ss = dayy + "-No Classes";
    //                            else
    //                                ss = dayy;
    //                            stf = "-";
    //                            sub = "-";
    //                            stf1 = "-";
    //                            sub1 = "-";
    //                            stfcode = "-";
    //                            staf1code = "-";
    //                        }
    //                        else
    //                        {
    //                            string code = d2.GetFunction("select StfType from stafftrans where staff_code='" + txt_staff_code.Text + "'");
    //                            string deptCode = d2.GetFunction("select dept_code from stafftrans where staff_code='" + txt_staff_code.Text + "'");//delsi1806
    //                            string get = d2.GetFunction("select holiday_date from holidayStaff where StfType ='" + code + "' and  holiday_date='" + dt1 + "' and college_code ='" + collegecode1 + "'and dept_code='" + deptCode + "'");
    //                            string sunday = dtnew.ToString("dddd");
    //                            string get1 = d2.GetFunction("select holiday_date from holidayStudents where semester='" + sem + "' and degree_code='" + deg + "' and holiday_date='" + dt1 + "'");
    //                            if (get != "0" || sunday == "Sunday")
    //                                ss = dayy + "-Holiday";
    //                            else if (get1 != "0")
    //                                ss = dayy + "-No Classes";
    //                            else
    //                                ss = dayy;
    //                            stf = "-";
    //                            sub = "-";
    //                            stf1 = "-";
    //                            sub1 = "-";
    //                            stfcode = "-";
    //                            staf1code = "-";
    //                        }
    //                    }
    //                }
    //                else
    //                {
    //                    string code = d2.GetFunction("select StfType from stafftrans where staff_code='" + txt_staff_code.Text + "'");

    //                    string deptCode = d2.GetFunction("select dept_code from stafftrans where staff_code='" + txt_staff_code.Text + "'");//delsi1806
    //                    string get = d2.GetFunction("select holiday_date from holidayStaff where StfType ='" + code + "' and  holiday_date='" + dt1 + "' and college_code ='" + collegecode1 + "'and dept_code='" + deptCode + "'");
    //                    string sunday = dtnew.ToString("dddd");
    //                    string get1 = d2.GetFunction("select holiday_date from holidayStudents where semester='" + sem + "' and degree_code='" + deg + "' and holiday_date='" + dt1 + "'");
    //                    if (get != "0" || sunday == "Sunday")
    //                        ss = dayy + "-Holiday";
    //                    else if (get1 != "0")
    //                        ss = dayy + "-No Classes";
    //                    else
    //                        ss = dayy;
    //                    stf = "-";
    //                    sub = "-";
    //                    stf1 = "-";
    //                    sub1 = "-";
    //                    stfcode = "-";
    //                    staf1code = "-";
    //                }
    //                if (stf != "-" && sub != "-" && stf1 != "-" && sub1 != "-" && stfcode != "-" && staf1code != "-")
    //                {
    //                    if (grid_altersub.Rows.Count > 0)
    //                    {
    //                        foreach (GridViewRow item in grid_altersub.Rows)
    //                        {
    //                            Label date = (Label)item.FindControl("txtday0");
    //                            Label dayhr = (Label)item.FindControl("txtday1");
    //                            Label stafcode = (Label)item.FindControl("txtday22");
    //                            Label staff = (Label)item.FindControl("txtday2");
    //                            Label subj = (Label)item.FindControl("txtday3");
    //                            Label alterstafcode = (Label)item.FindControl("txtday44");
    //                            Label alterstaf = (Label)item.FindControl("txtday4");
    //                            Label altersub = (Label)item.FindControl("txtday5");
    //                            dr1 = dt.NewRow();
    //                            dr1[0] = Convert.ToString(date.Text);
    //                            dr1[1] = Convert.ToString(dayhr.Text);
    //                            dr1[2] = Convert.ToString(stafcode.Text);
    //                            dr1[3] = Convert.ToString(staff.Text);
    //                            dr1[4] = Convert.ToString(subj.Text);
    //                            dr1[5] = Convert.ToString(alterstafcode.Text);
    //                            dr1[6] = Convert.ToString(alterstaf.Text);
    //                            dr1[7] = Convert.ToString(altersub.Text);
    //                            dt.Rows.Add(dr1);
    //                        }
    //                    }
    //                    dr1 = dt.NewRow();
    //                    dr1[0] = startdate1;
    //                    dr1[1] = ss;
    //                    dr1[2] = stfcode;
    //                    dr1[3] = stf1;
    //                    dr1[4] = sub1;
    //                    dr1[5] = staf1code;
    //                    dr1[6] = stf;
    //                    dr1[7] = sub;
    //                    dt.Rows.Add(dr1);
    //                }
    //                if (dt.Rows.Count > 0)
    //                {
    //                    grid_altersub.DataSource = dt;
    //                    grid_altersub.DataBind();
    //                    grid_altersub.Visible = true;
    //                    spn1.Visible = true;
    //                }
    //                //    else
    //                //{
    //                //    spn1.Visible = false;
    //                //    DataTable dtdummyRow = new DataTable();//barath 29.12.17
    //                //    grid_altersub.DataSource = dtdummyRow;
    //                //    grid_altersub.DataBind();
    //                //}
    //                //else if (grid_altersub.Rows.Count == 0 && dt.Rows.Count == 0)
    //                //{
    //                //        spn1.Visible = false;
    //                //        DataTable dtdummyRow = new DataTable();//barath 29.12.17
    //                //        grid_altersub.DataSource = dtdummyRow;
    //                //        grid_altersub.DataBind();

    //                //}
    //                else
    //                    spn1.Visible = false;
    //                dt.Clear();
    //            }
    //        }
    //        fromdate1 = fromdate1.AddDays(1);
    //    }
    //}



    public void altersubject()
    {
        collegecode1 = Convert.ToString(Session["collegecode"]);
        // sp_appsub.Visible = false;
        DataTable dt = new DataTable();
        Hashtable hatalt = new Hashtable();
        // degbatchsem();
        string dayord = "";
        string Altdayord = "";
        string batch = "";
        string deg = "";
        string sem = "";
        string sec = "";
        string day_value = "", srt_day = "", dt1 = "", dt2 = "", strsec = "";
        string[] sp = deg_batch_sem.Split('-');
        if (deg_batch_sem != "")
        {
            batch = sp[0];
            deg = sp[1];
            sem = sp[2];
            sec = sp[3];
            strsec = " and sections in('" + sec + "')";
        }
        else
        {
            grid_altersub.Visible = false;
            spn1.Visible = false;
            return;
        }
        stafcodealter = Convert.ToString(txt_staff_code.Text);
        dt.Columns.Add("Dummy0");
        dt.Columns.Add("Dummy");
        dt.Columns.Add("Dummy5");
        dt.Columns.Add("Dummy3");
        dt.Columns.Add("Dummy4");
        dt.Columns.Add("Dummy6");
        dt.Columns.Add("Dummy2");
        dt.Columns.Add("Dummy1");
        DataRow dr1;
        DateTime fromdate1 = new DateTime();
        fromdate1 = TextToDate(txt_frm);
        DateTime todate1 = new DateTime();
        todate1 = TextToDate(txt_to);
        string dayy = "";
        for (; fromdate1 <= todate1; )
        {
            startdate1 = fromdate1.ToString("dd/MM/yyyy");
            dayy = fromdate1.ToString("dddd");
            string[] dt1_split = startdate1.Split('/');
            dt1 = dt1_split[1] + "-" + dt1_split[0] + "-" + dt1_split[2];
            DateTime dtnew = new DateTime();
            dtnew = Convert.ToDateTime(dt1_split[1] + "/" + dt1_split[0] + "/" + dt1_split[2]);
            DateTime startdate = Convert.ToDateTime(d2.GetFunction("select start_date from seminfo where degree_code='" + deg + "' and semester='" + sem + "' and batch_year='" + batch + "' "));
            string start_dayorder = d2.GetFunction("select starting_dayorder from seminfo where degree_code='" + deg + "' and semester='" + sem + "' and batch_year='" + batch + "'");
            if (startdate.ToString() != "" && startdate.ToString() != null)
                day_value = startdate.ToString("ddd");
            con.Close();
            con.Open();
            SqlDataReader dr;
            cmd = new SqlCommand("Select No_of_hrs_per_day,schorder,nodays from periodattndschedule where degree_code='" + deg + "' and semester = '" + sem + "'", con);
            dr = cmd.ExecuteReader();
            dr.Read();
            if (dr.HasRows == true)
            {
                if ((dr["No_of_hrs_per_day"].ToString()) != "")
                {
                    intNHrs = Convert.ToInt32(dr["No_of_hrs_per_day"]);
                    SchOrder = Convert.ToInt32(dr["schorder"]);
                    nodays = Convert.ToInt32(dr["nodays"]);
                }
            }
            if (intNHrs > 0)
            {
                if (SchOrder != 0)
                    srt_day = (Convert.ToDateTime(dt1)).ToString("ddd");
                else
                {
                    string[] sps = dtnew.ToString().Split('/');
                    string curdate = sps[0] + '/' + sps[1] + '/' + sps[2];//mag
                    srt_day = d2.findday(curdate.ToString(), deg, sem, batch, startdate.ToString(), nodays.ToString(), start_dayorder.ToString());
                }
            }
            string sql1 = "";
            string Strsql = "";
            for (int i_loop = 1; i_loop <= intNHrs; i_loop++)
            {
                if (sql1 == "")
                    sql1 = sql1 + srt_day + Convert.ToString(i_loop);
                else
                    sql1 = sql1 + " - " + srt_day + Convert.ToString(i_loop);
            }
            if (srt_day != "")
            {
                string altersech = "";
                string dayclu = srt_day;
                string value = "";
                string note = "";
                string day = "";
                string altday = "";
                hourstaff = 0;
                string[] array = sql1.Split('-');
                string add = "";
                for (int j = 0; j < array.Length; j++)
                {
                    dayord = d2.GetFunction("select " + array[j] + " from semester_schedule where degree_code='" + deg + "'and semester='" + sem + "' and batch_year='" + batch + "' and sections='" + sec + "'");
                    string[] dsplt = dayord.Split('-');
                    for (int k = 0; k < dsplt.Length; k++)
                    {
                        if (dsplt[k] == stafcodealter)
                        {
                            if (day == "")
                                day = array[j];
                            else
                                day = day + "-" + array[j];
                        }
                    }
                }

                //Rajkumar for second Alter-----------------------------------------
                for (int j = 0; j < array.Length; j++)
                {
                    Altdayord = d2.GetFunction("select " + array[j] + " from semester_schedule where degree_code='" + deg + "'and semester='" + sem + "' and batch_year='" + batch + "' and sections='" + sec + "'");
                    string[] dsplt = Altdayord.Split('-');
                    for (int k = 0; k < 1; k++)
                    {
                        //  if (dsplt[k] == stafcodealter)//mas
                        {
                            if (altday == "")
                                altday = array[j];
                            else
                                altday = altday + "-" + array[j];
                        }
                    }
                }



                string[] daysp = day.Split('-');
                for (int j = 0; j < array.Length; j++)
                {
                    //  for (int mns = 0; mns < daysp.Length; mns++)
                    //{
                    string ss = "";
                    string qur = d2.GetFunction("select " + array[j] + " from Alternate_Schedule where  degree_code='" + deg + "' and batch_year='" + batch + "' " + strsec + " and semester='" + sem + "' and fromdate='" + dt1 + "' ");
                    //string qur = d2.GetFunction("select " + array[j] + " from tbl_alter_schedule_Details where  degree_code='" + deg + "' and batch_year='" + batch + "' " + strsec + " and semester='" + sem + "' and fromdate='" + dt1 + "' and No_of_Alter='1' ");
                    string sub = "";
                    string sub1 = "";
                    string qur1 = "";
                    string stf1 = "";
                    string stf = "";
                    string stfcode = "";
                    string staf1code = "";
                    if ((qur != ""))
                    {
                        if ((qur != "0"))
                        {
                            string[] q = qur.Split('-');
                            qur1 = d2.GetFunction("select " + array[j] + " from semester_schedule where  degree_code='" + deg + "' and batch_year='" + batch + "' " + strsec + " and semester='" + sem + "' ");
                            string[] qq = qur1.Split('-');

                            string[] splq1 = qur1.Split(';');

                            bool isfalse = false;
                            for (int i = 0; i < splq1.Length; i++)
                            {
                                string[] q1 = splq1[i].Split('-');
                                //multiple staff time table alter
                                if (q1.Length > 1)
                                {
                                    for (int row = 1; row < q1.Length - 1; row++)
                                    {
                                        if (q1[row] == stafcodealter)
                                        {
                                            sub = d2.GetFunction("select subject_name from subject where subject_no='" + q[0] + "'");
                                            sub1 = d2.GetFunction("select subject_name from subject where subject_no='" + qq[0] + "'");
                                            if (q1.Length >= 2)
                                            {
                                                stf = d2.GetFunction("select staff_name from staffmaster where staff_code='" + q[1] + "'");
                                                stfcode = Convert.ToString(txt_staff_code.Text);
                                                staf1code = Convert.ToString(q[1]);
                                            }
                                            stf1 = d2.GetFunction("select staff_name from staffmaster where staff_code='" + txt_staff_code.Text + "'");
                                            ss = array[j];
                                            tblday = array[j];
                                            dayfuction();
                                            ss = curday;
                                            isfalse = true;
                                        }
                                    }
                                }
                            }
                            if (!isfalse)
                            {
                                string[] splq2 = qur.Split(';');
                                for (int ii = 0; ii < splq2.Length; ii++)
                                {
                                    string[] q2 = splq2[ii].Split('-');
                                    //multiple staff time table alter
                                    if (q2.Length > 1)
                                    {
                                        for (int row = 1; row < q2.Length - 1; row++)
                                        {
                                            if (q2[row] == stafcodealter)
                                            {
                                                sub = d2.GetFunction("select subject_name from subject where subject_no='" + qq[0] + "'");
                                                sub1 = d2.GetFunction("select subject_name from subject where subject_no='" + q[0] + "'");
                                                if (q2.Length >= 2)
                                                {
                                                    stf = d2.GetFunction("select staff_name from staffmaster where staff_code='" + qq[1] + "'");
                                                    stfcode = Convert.ToString(txt_staff_code.Text);
                                                    staf1code = Convert.ToString(qq[1]);
                                                }
                                                stf1 = d2.GetFunction("select staff_name from staffmaster where staff_code='" + txt_staff_code.Text + "'");
                                                ss = array[j];
                                                tblday = array[j];
                                                dayfuction();
                                                ss = curday;
                                            }
                                        }
                                    }
                                }
                            }
                            //}
                        }
                        else
                        {
                            string tyyype = d2.GetFunction("select LinkValue  from InsSettings where LinkName like 'Staff Holiday By Staff Type%' and college_code='" + collegecode1 + "'");
                            if (tyyype == "0")
                            {
                                string code = d2.GetFunction("select category_code from stafftrans where staff_code='" + txt_staff_code.Text + "'");
                                string deptCode = d2.GetFunction("select dept_code from stafftrans where staff_code='" + txt_staff_code.Text + "'");//delsi1806
                                string get = d2.GetFunction("select holiday_date from holidayStaff where category_code ='" + code + "' and  holiday_date='" + dt1 + "' and college_code ='" + collegecode1 + "' and dept_code='" + deptCode + "'");
                                string sunday = dtnew.ToString("dddd");
                                string get1 = d2.GetFunction("select holiday_date from holidayStudents where semester='" + sem + "' and degree_code='" + deg + "' and holiday_date='" + dt1 + "'");
                                if (get != "0" || sunday == "Sunday")
                                    ss = dayy + "-Holiday";
                                else if (get1 != "0")
                                    ss = dayy + "-No Classes";
                                else
                                    ss = dayy;
                                stf = "-";
                                sub = "-";
                                stf1 = "-";
                                sub1 = "-";
                                stfcode = "-";
                                staf1code = "-";
                            }
                            else
                            {
                                string code = d2.GetFunction("select StfType from stafftrans where staff_code='" + txt_staff_code.Text + "'");
                                string deptCode = d2.GetFunction("select dept_code from stafftrans where staff_code='" + txt_staff_code.Text + "'");//delsi1806
                                string get = d2.GetFunction("select holiday_date from holidayStaff where StfType ='" + code + "' and  holiday_date='" + dt1 + "' and college_code ='" + collegecode1 + "'and dept_code='" + deptCode + "'");
                                string sunday = dtnew.ToString("dddd");
                                string get1 = d2.GetFunction("select holiday_date from holidayStudents where semester='" + sem + "' and degree_code='" + deg + "' and holiday_date='" + dt1 + "'");
                                if (get != "0" || sunday == "Sunday")
                                    ss = dayy + "-Holiday";
                                else if (get1 != "0")
                                    ss = dayy + "-No Classes";
                                else
                                    ss = dayy;
                                stf = "-";
                                sub = "-";
                                stf1 = "-";
                                sub1 = "-";
                                stfcode = "-";
                                staf1code = "-";
                            }
                        }
                    }
                    else
                    {
                        string code = d2.GetFunction("select StfType from stafftrans where staff_code='" + txt_staff_code.Text + "'");
                        string deptCode = d2.GetFunction("select dept_code from stafftrans where staff_code='" + txt_staff_code.Text + "'");
                        string get = d2.GetFunction("select holiday_date from holidayStaff where StfType ='" + code + "' and  holiday_date='" + dt1 + "' and college_code ='" + collegecode1 + "' and dept_code='" + deptCode + "'");
                        string sunday = dtnew.ToString("dddd");
                        string get1 = d2.GetFunction("select holiday_date from holidayStudents where semester='" + sem + "' and degree_code='" + deg + "' and holiday_date='" + dt1 + "'");
                        if (get != "0" || sunday == "Sunday")
                            ss = dayy + "-Holiday";
                        else if (get1 != "0")
                            ss = dayy + "-No Classes";
                        else
                            ss = dayy;
                        ss = array[j];
                        tblday = array[j];
                        dayfuction();
                        ss = curday;
                        stf = "-";
                        sub = "-";
                        stf1 = "-";
                        sub1 = "-";
                        stfcode = "-";
                        staf1code = "-";
                    }
                    if (!string.IsNullOrEmpty(stf) && stf != "-" && sub != "-" && !string.IsNullOrEmpty(sub) && stf1 != "-" && !string.IsNullOrEmpty(stf1) && sub1 != "-" && !string.IsNullOrEmpty(sub1) && stfcode != "-" && !string.IsNullOrEmpty(stfcode) && staf1code != "-" && !string.IsNullOrEmpty(staf1code))
                    {
                        if (grid_altersub.Rows.Count > 0)
                        {
                            foreach (GridViewRow item in grid_altersub.Rows)
                            {
                                Label date = (Label)item.FindControl("txtday0");
                                Label dayhr = (Label)item.FindControl("txtday1");
                                Label stafcode = (Label)item.FindControl("txtday22");
                                Label staff = (Label)item.FindControl("txtday2");
                                Label subj = (Label)item.FindControl("txtday3");
                                Label alterstafcode = (Label)item.FindControl("txtday44");
                                Label alterstaf = (Label)item.FindControl("txtday4");
                                Label altersub = (Label)item.FindControl("txtday5");
                                dr1 = dt.NewRow();
                                dr1[0] = Convert.ToString(date.Text);
                                dr1[1] = Convert.ToString(dayhr.Text);
                                dr1[2] = Convert.ToString(stafcode.Text);
                                dr1[3] = Convert.ToString(staff.Text);
                                dr1[4] = Convert.ToString(subj.Text);
                                dr1[5] = Convert.ToString(alterstafcode.Text);
                                dr1[6] = Convert.ToString(alterstaf.Text);
                                dr1[7] = Convert.ToString(altersub.Text);
                                dt.Rows.Add(dr1);
                            }
                        }
                        dr1 = dt.NewRow();
                        dr1[0] = startdate1;
                        dr1[1] = ss;
                        dr1[2] = stfcode;
                        dr1[3] = stf1;
                        dr1[4] = sub1;
                        dr1[5] = staf1code;
                        dr1[6] = stf;
                        dr1[7] = sub;
                        dt.Rows.Add(dr1);
                    }
                    if (dt.Rows.Count > 0)
                    {
                        grid_altersub.DataSource = dt;
                        grid_altersub.DataBind();
                        grid_altersub.Visible = true;
                        spn1.Visible = true;
                    }
                    else
                        spn1.Visible = false;
                    dt.Clear();
                }




                DataTable dtNoalt = dir.selectDataTable("select * from tbl_alter_schedule_Details where  degree_code='" + deg + "' and batch_year='" + batch + "' " + strsec + " and semester='" + sem + "' and fromdate='" + dt1 + "'");
                if (dtNoalt.Rows.Count > 0)
                {
                    int noaltCount = dtNoalt.Rows.Count;
                    if (noaltCount > 1)
                    {
                        //for (int ii = 1; ii < noaltCount; ii++)
                        //{
                        //    int noalt = ii;
                        if (!string.IsNullOrEmpty(altday))
                        {
                            string[] altdaysp = altday.Split('-');
                            for (int j = 0; j < array.Length; j++)
                            {
                                string ss = "";
                                string qur = d2.GetFunction("select " + array[j] + " from tbl_alter_schedule_Details where  degree_code='" + deg + "' and batch_year='" + batch + "' " + strsec + " and semester='" + sem + "' and fromdate='" + dt1 + "' and No_of_Alter='2'");//and No_of_Alter='" + noalt + "'
                                string sub = "";
                                string sub1 = "";
                                string qur1 = "";
                                string stf1 = "";
                                string stf = "";
                                string stfcode = "";
                                string staf1code = "";

                                if ((qur != ""))
                                {
                                    //if (!hatalt.ContainsKey(dt1 + "-" + array[j]))
                                    {
                                        // hatalt.Add()
                                        if ((qur != "0"))
                                        {
                                            string[] q = qur.Split('-');
                                            qur1 = d2.GetFunction("select " + array[j] + " from tbl_alter_schedule_Details where  degree_code='" + deg + "' and batch_year='" + batch + "' " + strsec + " and semester='" + sem + "' and fromdate='" + dt1 + "' and No_of_Alter='1'");
                                            string[] splq1 = qur1.Split(';');
                                            for (int i = 0; i < splq1.Length; i++)
                                            {
                                                string[] q1 = splq1[i].Split('-');
                                                //multiple staff time table alter
                                                if (q1.Length > 1)
                                                {
                                                    for (int row = 1; row < q1.Length - 1; row++)
                                                    {
                                                        if (q1[row] == stafcodealter)
                                                        {
                                                            sub = d2.GetFunction("select subject_name from subject where subject_no='" + q[0] + "'");
                                                            sub1 = d2.GetFunction("select subject_name from subject where subject_no='" + q1[0] + "'");
                                                            if (q1.Length >= 2)
                                                            {
                                                                stf = d2.GetFunction("select staff_name from staffmaster where staff_code='" + q[1] + "'");
                                                                stfcode = Convert.ToString(txt_staff_code.Text);
                                                                staf1code = Convert.ToString(q[1]);
                                                            }
                                                            stf1 = d2.GetFunction("select staff_name from staffmaster where staff_code='" + txt_staff_code.Text + "'");
                                                            ss = array[j];
                                                            tblday = array[j];
                                                            dayfuction();
                                                            ss = curday;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {
                                            string tyyype = d2.GetFunction("select LinkValue  from InsSettings where LinkName like 'Staff Holiday By Staff Type%' and college_code='" + collegecode1 + "'");
                                            if (tyyype == "0")
                                            {
                                                string code = d2.GetFunction("select category_code from stafftrans where staff_code='" + txt_staff_code.Text + "'");
                                                string deptCode = d2.GetFunction("select dept_code from stafftrans where staff_code='" + txt_staff_code.Text + "'");//delsi1806
                                                string get = d2.GetFunction("select holiday_date from holidayStaff where category_code ='" + code + "' and  holiday_date='" + dt1 + "' and college_code ='" + collegecode1 + "' and dept_code='" + deptCode + "'");
                                                string sunday = dtnew.ToString("dddd");
                                                string get1 = d2.GetFunction("select holiday_date from holidayStudents where semester='" + sem + "' and degree_code='" + deg + "' and holiday_date='" + dt1 + "'");
                                                if (get != "0" || sunday == "Sunday")
                                                    ss = dayy + "-Holiday";
                                                else if (get1 != "0")
                                                    ss = dayy + "-No Classes";
                                                else
                                                    ss = dayy;
                                                stf = "-";
                                                sub = "-";
                                                stf1 = "-";
                                                sub1 = "-";
                                                stfcode = "-";
                                                staf1code = "-";
                                            }
                                            else
                                            {
                                                string code = d2.GetFunction("select StfType from stafftrans where staff_code='" + txt_staff_code.Text + "'");
                                                string deptCode = d2.GetFunction("select dept_code from stafftrans where staff_code='" + txt_staff_code.Text + "'");//delsi1806
                                                string get = d2.GetFunction("select holiday_date from holidayStaff where StfType ='" + code + "' and  holiday_date='" + dt1 + "' and college_code ='" + collegecode1 + "'and dept_code='" + deptCode + "'");
                                                string sunday = dtnew.ToString("dddd");
                                                string get1 = d2.GetFunction("select holiday_date from holidayStudents where semester='" + sem + "' and degree_code='" + deg + "' and holiday_date='" + dt1 + "'");
                                                if (get != "0" || sunday == "Sunday")
                                                    ss = dayy + "-Holiday";
                                                else if (get1 != "0")
                                                    ss = dayy + "-No Classes";
                                                else
                                                    ss = dayy;
                                                stf = "-";
                                                sub = "-";
                                                stf1 = "-";
                                                sub1 = "-";
                                                stfcode = "-";
                                                staf1code = "-";
                                            }
                                        }
                                    }
                                }
                                else
                                {
                                    string code = d2.GetFunction("select StfType from stafftrans where staff_code='" + txt_staff_code.Text + "'");
                                    string deptCode = d2.GetFunction("select dept_code from stafftrans where staff_code='" + txt_staff_code.Text + "'");
                                    string get = d2.GetFunction("select holiday_date from holidayStaff where StfType ='" + code + "' and  holiday_date='" + dt1 + "' and college_code ='" + collegecode1 + "' and dept_code='" + deptCode + "'");
                                    string sunday = dtnew.ToString("dddd");
                                    string get1 = d2.GetFunction("select holiday_date from holidayStudents where semester='" + sem + "' and degree_code='" + deg + "' and holiday_date='" + dt1 + "'");
                                    if (get != "0" || sunday == "Sunday")
                                        ss = dayy + "-Holiday";
                                    else if (get1 != "0")
                                        ss = dayy + "-No Classes";
                                    else
                                        ss = dayy;
                                    ss = altdaysp[j];
                                    tblday = altdaysp[j];
                                    dayfuction();
                                    ss = curday;
                                    stf = "-";
                                    sub = "-";
                                    stf1 = "-";
                                    sub1 = "-";
                                    stfcode = "-";
                                    staf1code = "-";
                                }
                                if (!string.IsNullOrEmpty(stf) && stf != "-" && sub != "-" && !string.IsNullOrEmpty(sub) && stf1 != "-" && !string.IsNullOrEmpty(stf1) && sub1 != "-" && !string.IsNullOrEmpty(sub1) && stfcode != "-" && !string.IsNullOrEmpty(stfcode) && staf1code != "-" && !string.IsNullOrEmpty(staf1code))
                                {
                                    if (grid_altersub.Rows.Count > 0)
                                    {
                                        foreach (GridViewRow item in grid_altersub.Rows)
                                        {
                                            Label date = (Label)item.FindControl("txtday0");
                                            Label dayhr = (Label)item.FindControl("txtday1");
                                            Label stafcode = (Label)item.FindControl("txtday22");
                                            Label staff = (Label)item.FindControl("txtday2");
                                            Label subj = (Label)item.FindControl("txtday3");
                                            Label alterstafcode = (Label)item.FindControl("txtday44");
                                            Label alterstaf = (Label)item.FindControl("txtday4");
                                            Label altersub = (Label)item.FindControl("txtday5");
                                            dr1 = dt.NewRow();
                                            dr1[0] = Convert.ToString(date.Text);
                                            dr1[1] = Convert.ToString(dayhr.Text);
                                            dr1[2] = Convert.ToString(stafcode.Text);
                                            dr1[3] = Convert.ToString(staff.Text);
                                            dr1[4] = Convert.ToString(subj.Text);
                                            dr1[5] = Convert.ToString(alterstafcode.Text);
                                            dr1[6] = Convert.ToString(alterstaf.Text);
                                            dr1[7] = Convert.ToString(altersub.Text);
                                            dt.Rows.Add(dr1);
                                        }
                                    }
                                    dr1 = dt.NewRow();
                                    dr1[0] = startdate1;
                                    dr1[1] = ss;
                                    dr1[2] = stfcode;
                                    dr1[3] = stf1;
                                    dr1[4] = sub1;
                                    dr1[5] = staf1code;
                                    dr1[6] = stf;
                                    dr1[7] = sub;
                                    dt.Rows.Add(dr1);
                                }
                                if (dt.Rows.Count > 0)
                                {
                                    grid_altersub.DataSource = dt;
                                    grid_altersub.DataBind();
                                    grid_altersub.Visible = true;
                                    spn1.Visible = true;
                                }
                                else
                                    spn1.Visible = false;
                                dt.Clear();
                                dt.Clear();

                            }
                        }
                        //}
                    }
                }
                //---------------------------------------------------


            }
            fromdate1 = fromdate1.AddDays(1);
        }
    }
    protected void grid_altersub_databound(object sender, EventArgs e)
    {
        try
        {
            int curindx = 0;
            int curLength = 0;
            string datecheck = "";
            for (int i = grid_altersub.Rows.Count - 1; i > 0; i--)
            {
                GridViewRow row = grid_altersub.Rows[i];
                GridViewRow previousRow = grid_altersub.Rows[i - 1];
                for (int j = 0; j <= 7; j++)
                {
                    Label lnldate = (Label)row.FindControl("txtday0");
                    Label lnlname = (Label)row.FindControl("txtday1");
                    Label lnlname1 = (Label)previousRow.FindControl("txtday1");
                    if (lnlname.Text == lnlname1.Text)
                    {
                        if (previousRow.Cells[j].RowSpan == 0)
                        {
                            if (row.Cells[j].RowSpan == 0)
                            {
                                previousRow.Cells[j].RowSpan += 2;
                            }
                            else
                            {
                                previousRow.Cells[j].RowSpan = row.Cells[j].RowSpan + 1;
                            }
                            row.Cells[j].Visible = false;
                        }
                    }
                    if (lnlname.Text == "Sunday-Holiday")
                    {
                        row.Cells[1].ColumnSpan = 8;
                        row.Cells[1].HorizontalAlign = HorizontalAlign.Center;
                        row.Cells[1].ForeColor = Color.Red;
                        row.Cells[1].BorderColor = Color.Black;
                        row.Cells[2].Visible = false;
                        row.Cells[3].Visible = false;
                        row.Cells[4].Visible = false;
                        row.Cells[5].Visible = false;
                        row.Cells[6].Visible = false;
                        row.Cells[7].Visible = false;
                    }
                    DateTime dt = new DateTime();
                    string datee = Convert.ToString(lnldate.Text);
                    string[] dt1_split = datee.Split('/');
                    dt = Convert.ToDateTime(dt1_split[1] + "/" + dt1_split[0] + "/" + dt1_split[2]);
                    string day = dt.ToString("dddd");
                    string dayy = day + "-No Classes";
                    if (lnlname.Text == dayy)
                    {
                        row.Cells[1].ColumnSpan = 8;
                        row.Cells[1].HorizontalAlign = HorizontalAlign.Center;
                        row.Cells[1].ForeColor = Color.Red;
                        row.Cells[1].BorderColor = Color.Black;
                        row.Cells[2].Visible = false;
                        row.Cells[3].Visible = false;
                        row.Cells[4].Visible = false;
                        row.Cells[5].Visible = false;
                        row.Cells[6].Visible = false;
                        row.Cells[7].Visible = false;
                    }
                    dayy = day + "-Holiday";
                    if (lnlname.Text == dayy)
                    {
                        row.Cells[1].ColumnSpan = 8;
                        row.Cells[1].HorizontalAlign = HorizontalAlign.Center;
                        row.Cells[1].ForeColor = Color.Red;
                        row.Cells[1].BorderColor = Color.Black;
                        row.Cells[2].Visible = false;
                        row.Cells[3].Visible = false;
                        row.Cells[4].Visible = false;
                        row.Cells[5].Visible = false;
                        row.Cells[6].Visible = false;
                        row.Cells[7].Visible = false;
                    }
                }
            }
        }
        catch
        {
        }
    }
    protected void grid_altersub_onrowdatabound(object sender, System.Web.UI.WebControls.GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
        }
    }
    public void BindGridview()
    {
        ArrayList addnew = new ArrayList();
        DateTime fromdate = new DateTime();
        fromdate = TextToDate(txt_frm);
        DateTime todate = new DateTime();
        todate = TextToDate(txt_to);
        GV1.Visible = true;
        TimeSpan c = fromdate - todate;
        DataTable dt = new DataTable();
        dt.Columns.Add("Dummy");
        dt.Columns.Add("Dummy1");
        dt.Columns.Add("Dummy2");
        dt.Columns.Add("Dummy3");
        DataRow dr;
        if (fromdate != todate)
        {
            for (; fromdate <= todate; )
            {
                string to = Convert.ToString(txt_frm.Text);
                string from = Convert.ToString(txt_to.Text);
                dr = dt.NewRow();
                dr[0] = "1";
                dr[1] = fromdate.ToString("dd/MM/yyyy");
                dt.Rows.Add(dr);
                fromdate = fromdate.AddDays(1);
            }
        }
        else
        {
            dr = dt.NewRow();
            dr[0] = "1";
            dr[1] = fromdate.ToString("dd/MM/yyyy");
            dt.Rows.Add(dr);
            fromdate = fromdate.AddDays(1);
        }
        if (dt.Rows.Count > 0)
        {
            GV1.DataSource = dt;
            GV1.DataBind();
            div_GV1.Visible = true;
        }
        string halfdate = "";
        string leavesession = "";
        string halfdy = d2.GetFunction("select IsHalfDay from RQ_Requisition where RequestType=5 and RequisitionPK='" + TextBox7.Text + "'");
        halfdate = d2.GetFunction("select HalfDate from RQ_Requisition where RequestType=5 and RequisitionPK='" + TextBox7.Text + "'");
        leavesession = d2.GetFunction("select LeaveSession from RQ_Requisition where RequestType=5 and RequisitionPK='" + TextBox7.Text + "'");
        if (fromdate == todate)
        {
            if (halfdy == "False")
            {
                for (int i = 0; i < GV1.Rows.Count; i++)
                {
                    CheckBox chkItemHeader = (CheckBox)GV1.Rows[i].FindControl("chk_mrng");
                    chkItemHeader.Checked = true;
                    CheckBox chkItemHeader1 = (CheckBox)GV1.Rows[i].FindControl("chk_evng");
                    chkItemHeader1.Checked = true;
                }
            }
            else
            {
                for (int i = 0; i < GV1.Rows.Count; i++)
                {
                    TextBox txtdate = (TextBox)GV1.Rows[i].FindControl("txtdate");
                    string[] ay = txtdate.Text.Split('/');
                    DateTime dt11 = new DateTime();
                    dt11 = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
                    string dattt = Convert.ToString(dt11);
                    if (dattt == halfdate)
                    {
                        if (leavesession == "1")
                        {
                            CheckBox chkItemHeader = (CheckBox)GV1.Rows[i].FindControl("chk_mrng");
                            chkItemHeader.Checked = true;
                            CheckBox chkItemHeader1 = (CheckBox)GV1.Rows[i].FindControl("chk_evng");
                            chkItemHeader1.Checked = false;
                        }
                        else
                        {
                            CheckBox chkItemHeader = (CheckBox)GV1.Rows[i].FindControl("chk_mrng");
                            chkItemHeader.Checked = false;
                            CheckBox chkItemHeader1 = (CheckBox)GV1.Rows[i].FindControl("chk_evng");
                            chkItemHeader1.Checked = true;
                        }
                    }
                }
            }
        }
        else
        {
            for (int i = 0; i < GV1.Rows.Count; i++)
            {
                DataSet alldateds = new DataSet();
                alldateds.Clear();
                TextBox txtdate = (TextBox)GV1.Rows[i].FindControl("txtdate");
                string[] ay = txtdate.Text.Split('/');
                DateTime dt11 = new DateTime();
                dt11 = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
                string dattt = Convert.ToString(dt11);
                string quer = "select * from staff_leave_dates where requestfk='" + TextBox7.Text + "' and LeaveDate='" + dattt + "'";
                alldateds = d2.select_method_wo_parameter(quer, "text");
                if (alldateds.Tables[0].Rows.Count > 0)
                {
                    string session = Convert.ToString(alldateds.Tables[0].Rows[0]["SessionType"]);
                    string checkdelete = Convert.ToString(alldateds.Tables[0].Rows[0]["checkdel"]);
                    if (session == "0")//delsi1711
                    {
                        CheckBox chkItemHeader = (CheckBox)GV1.Rows[i].FindControl("chk_mrng");
                        chkItemHeader.Checked = true;
                        CheckBox chkItemHeader1 = (CheckBox)GV1.Rows[i].FindControl("chk_evng");
                        chkItemHeader1.Checked = true;

                    }
                    if (session == "1")
                    {
                        CheckBox chkItemHeader = (CheckBox)GV1.Rows[i].FindControl("chk_mrng");
                        chkItemHeader.Checked = true;
                        CheckBox chkItemHeader1 = (CheckBox)GV1.Rows[i].FindControl("chk_evng");
                        chkItemHeader1.Checked = false;

                    }
                    if (session == "2")
                    {
                        CheckBox chkItemHeader = (CheckBox)GV1.Rows[i].FindControl("chk_mrng");
                        chkItemHeader.Checked = false;
                        CheckBox chkItemHeader1 = (CheckBox)GV1.Rows[i].FindControl("chk_evng");
                        chkItemHeader1.Checked = true;
                    }
                    if (checkdelete == "1")
                    {
                        CheckBox chkItemHeader = (CheckBox)GV1.Rows[i].FindControl("chk_mrng");
                        chkItemHeader.Checked = false;
                        CheckBox chkItemHeader1 = (CheckBox)GV1.Rows[i].FindControl("chk_evng");
                        chkItemHeader1.Checked = false;
                    }
                }
                else
                {
                    CheckBox chkItemHeader = (CheckBox)GV1.Rows[i].FindControl("chk_mrng");
                    chkItemHeader.Checked = false;
                    CheckBox chkItemHeader1 = (CheckBox)GV1.Rows[i].FindControl("chk_evng");
                    chkItemHeader1.Checked = false;
                }

            }
        }
    }
    public void dayfuction()
    {
        ArrayList a = new ArrayList();
        a.Add("Mon");
        a.Add("Tue");
        a.Add("Wed");
        a.Add("Thu");
        a.Add("Fri");
        a.Add("Sat");
        a.Add("Sun");
        string val = "";
        for (int i = 0; i < a.Count; i++)
        {
            for (int j = 1; j <= 9; j++)//magesh 17.8.18 for (int j = 1; j < 9; j++)
            {
                val = a[i] + "" + j;
                if (tblday.Trim().ToUpper() == val.ToUpper())
                {
                    if (a[i] == "Mon")
                    {
                        curday = "Monday-" + j + "hour";
                    }
                    if (a[i] == "Tue")
                    {
                        curday = "Tuesday-" + j + "hour";
                    }
                    if (a[i] == "Wed")
                    {
                        curday = "Wednesday-" + j + "hour";
                    }
                    if (a[i] == "Thu")
                    {
                        curday = "Thursday-" + j + "hour";
                    }
                    if (a[i] == "Fri")
                    {
                        curday = "Friday-" + j + "hour";
                    }
                    if (a[i] == "Sat")
                    {
                        curday = "Saturday-" + j + "hour";
                    }
                    if (a[i] == "Sun")
                    {
                        curday = "Sunday-" + j + "hour";
                    }
                }
            }
        }
    }
    public void leaverequestsetting()
    {
        try
        {
            string query = "";
            string Master1 = "";
            string stud = "";
            string values = "";
            if ((Session["group_code"].ToString().Trim() != "") && (Session["group_code"].ToString().Trim() != "0") && (Session["group_code"].ToString().Trim() != "-1"))
            {
                string group = Session["group_code"].ToString();
                if (group.Contains(';'))
                {
                    string[] group_semi = group.Split(';');
                    Master1 = group_semi[0].ToString();
                    query = "select * from Master_Settings where settings ='Gatepass Staff Permission' and group_code ='" + Master1 + "'"; //poo 12.12.17
                }
                else
                    query = "select * from Master_Settings where settings ='Gatepass Staff Permission' and group_code ='" + group + "'"; //poo 12.12.17
            }

            else
            {
                query = "select * from Master_Settings where settings ='Leave Approval Permission' AND usercode='" + usercode + "'";
            }
            ds = d2.select_method_wo_parameter(query, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    string val = Convert.ToString(ds.Tables[0].Rows[i]["value"]);
                    requestpermissioncheck = val;
                }
            }
        }
        catch
        {
        }
    }
    public void img_divleavedis_Click(object sender, EventArgs e)
    {
        divleavedis.Visible = false;
    }
    public void btn_exitpop_Click(object sender, EventArgs e)
    {
        popview.Visible = false;
        DataTable dtdummyRow = new DataTable();//barath 29.12.17
        grid_altersub.DataSource = dtdummyRow;
        grid_altersub.DataBind();
    }
    //added by sudhagar 18.01.2017
    protected void btnApprCancel_Click(object sender, EventArgs e)
    {
        try
        {
            double checkvalue = 0;
            string activerow = "";
            string det = "";
            string appstatus = "";
            bool saveflage = false;
            string currentdate = DateTime.Now.ToString("dd/MM/yyyy");
            string[] ay = currentdate.Split('/');
            DateTime dt = new DateTime();
            dt = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);
            string val = string.Empty;
            if (Fpspread1.Visible == true)
            {
                #region
                for (int i = 0; i < Fpspread1.Sheets[0].RowCount; i++)
                {
                    double.TryParse(Convert.ToString(Fpspread1.Sheets[0].Cells[i, 1].Value), out checkvalue);
                    if (checkvalue == 1)
                    {
                        activerow = Fpspread1.ActiveSheetView.ActiveRow.ToString();
                        val = Convert.ToString(Fpspread1.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
                        string selQ = " select Requestcode,ReqApproveStage,ReqAppStatus from RQ_Requisition where RequisitionPK='" + val + "'";
                        ds.Clear();
                        ds = d2.select_method_wo_parameter(selQ, "Text");
                        if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                        {
                            det = Convert.ToString(ds.Tables[0].Rows[0]["Requestcode"]);
                            appstatus = Convert.ToString(ds.Tables[0].Rows[0]["ReqAppStatus"]);
                            if (appstatus == "0")
                            {
                                string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + val + "'";
                                d2.update_method_wo_parameter(del_query1, "Text");
                                string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + val + "'";
                                d2.update_method_wo_parameter(del_query, "Text");
                                saveflage = true;
                            }
                        }
                    }
                }
                #endregion
            }
            if (Fpspread2.Visible == true)
            {
                #region
                for (int i = 0; i < Fpspread2.Sheets[0].RowCount; i++)
                {
                    double.TryParse(Convert.ToString(Fpspread2.Sheets[0].Cells[i, 1].Value), out checkvalue);
                    if (checkvalue == 1)
                    {
                        activerow = Fpspread2.ActiveSheetView.ActiveRow.ToString();
                        val = Convert.ToString(Fpspread2.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
                        string selQ = " select Requestcode,ReqApproveStage,ReqAppStatus from RQ_Requisition where RequisitionPK='" + val + "'";
                        ds.Clear();
                        ds = d2.select_method_wo_parameter(selQ, "Text");
                        if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                        {
                            det = Convert.ToString(ds.Tables[0].Rows[0]["Requestcode"]);
                            appstatus = Convert.ToString(ds.Tables[0].Rows[0]["ReqAppStatus"]);
                            if (delete == "1")
                            {
                                if (appstatus == "0")
                                {
                                    string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + val + "'";
                                    d2.update_method_wo_parameter(del_query1, "Text");
                                    string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + val + "'";
                                    d2.update_method_wo_parameter(del_query, "Text");
                                    saveflage = true;
                                }
                            }
                            else if (delete == "2")
                            {
                                if (appstatus == "1")
                                {
                                    string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + val + "'";
                                    d2.update_method_wo_parameter(del_query1, "Text");
                                    string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + val + "'";
                                    d2.update_method_wo_parameter(del_query, "Text");
                                    saveflage = true;
                                }
                            }
                        }
                    }
                }
                #endregion
            }
            if (Fpspread3.Visible == true)
            {
                #region
                for (int i = 0; i < Fpspread3.Sheets[0].RowCount; i++)
                {
                    double.TryParse(Convert.ToString(Fpspread3.Sheets[0].Cells[i, 1].Value), out checkvalue);
                    if (checkvalue == 1)
                    {
                        activerow = Fpspread3.ActiveSheetView.ActiveRow.ToString();
                        val = Convert.ToString(Fpspread3.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
                        string selQ = " select Requestcode,ReqApproveStage,ReqAppStatus from RQ_Requisition where RequisitionPK='" + val + "'";
                        ds.Clear();
                        ds = d2.select_method_wo_parameter(selQ, "Text");
                        if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                        {
                            det = Convert.ToString(ds.Tables[0].Rows[0]["Requestcode"]);
                            appstatus = Convert.ToString(ds.Tables[0].Rows[0]["ReqAppStatus"]);
                            if (appstatus == "0")
                            {
                                string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + val + "'";
                                d2.update_method_wo_parameter(del_query1, "Text");
                                string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + val + "'";
                                d2.update_method_wo_parameter(del_query, "Text");
                                saveflage = true;
                            }
                        }
                    }
                }
                #endregion
            }
            if (Fpspread4.Visible == true)
            {
                #region
                for (int i = 0; i < Fpspread4.Sheets[0].RowCount; i++)
                {
                    double.TryParse(Convert.ToString(Fpspread4.Sheets[0].Cells[i, 1].Value), out checkvalue);
                    if (checkvalue == 1)
                    {
                        activerow = Fpspread4.ActiveSheetView.ActiveRow.ToString();
                        val = Convert.ToString(Fpspread4.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
                        string selQ = " select Requestcode,ReqApproveStage,ReqAppStatus from RQ_Requisition where RequisitionPK='" + val + "'";
                        ds.Clear();
                        ds = d2.select_method_wo_parameter(selQ, "Text");
                        if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                        {
                            det = Convert.ToString(ds.Tables[0].Rows[0]["Requestcode"]);
                            appstatus = Convert.ToString(ds.Tables[0].Rows[0]["ReqAppStatus"]);
                            if (appstatus == "0")
                            {
                                string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + val + "'";
                                d2.update_method_wo_parameter(del_query1, "Text");
                                string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + val + "'";
                                d2.update_method_wo_parameter(del_query, "Text");
                                saveflage = true;
                            }
                        }
                    }
                }
                #endregion
            }
            if (Fpspread5.Visible == true)
            {
                #region
                val = Convert.ToString(TextBox7.Text);
                string selQ = " select Requestcode,ReqApproveStage,ReqAppStatus from RQ_Requisition where RequisitionPK='" + val + "'";
                ds.Clear();
                ds = d2.select_method_wo_parameter(selQ, "Text");
                if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                {
                    det = Convert.ToString(ds.Tables[0].Rows[0]["Requestcode"]);
                    appstatus = Convert.ToString(ds.Tables[0].Rows[0]["ReqAppStatus"]);
                    if (appstatus == "1")
                    {
                        string delcheck = d2.GetFunction("select LeaveFrom from RQ_Requisition where RequestType=5 and RequisitionPK='" + val + "'"); //and LeaveFrom>='" + dt.ToString("MM/dd/yyyy") + "'
                        if (delcheck != "0")
                        {
                            string del_query1 = "update RQ_Requisition set reqappstatus='3' where RequisitionPK='" + val + "'";
                            d2.update_method_wo_parameter(del_query1, "Text");
                            saveflage = true;
                            updateAdd_attn(val);
                            imgbtn_leave_Click(sender, e);
                        }
                    }
                }
                #endregion
            }
            if (Fpspread6.Visible == true)
            {
                #region
                for (int i = 0; i < Fpspread6.Sheets[0].RowCount; i++)
                {
                    double.TryParse(Convert.ToString(Fpspread6.Sheets[0].Cells[i, 1].Value), out checkvalue);
                    if (checkvalue == 1)
                    {
                        activerow = Fpspread6.ActiveSheetView.ActiveRow.ToString();
                        val = Convert.ToString(Fpspread6.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Tag);
                        string selQ = " select Requestcode,ReqApproveStage,ReqAppStatus from RQ_Requisition where RequisitionPK='" + val + "'";
                        ds.Clear();
                        ds = d2.select_method_wo_parameter(selQ, "Text");
                        if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                        {
                            appstatus = Convert.ToString(ds.Tables[0].Rows[0]["ReqAppStatus"]);
                            if (appstatus == "0")
                            {
                                string del_query1 = "delete RQ_RequisitionDet where RequisitionFK=" + val + "";
                                d2.update_method_wo_parameter(del_query1, "Text");
                                string del_query = "delete RQ_Requisition where RequisitionPK='" + val + "'";
                                d2.update_method_wo_parameter(del_query, "Text");
                                saveflage = true;
                            }
                        }
                    }
                }
                gate();
                #endregion
            }
            if (Fpspread9.Visible == true)
            {
                #region
                val = Convert.ToString(TextBox7.Text);
                string selQ = " select Requestcode,ReqApproveStage,ReqAppStatus from RQ_Requisition where RequisitionPK='" + val + "'";
                ds.Clear();
                ds = d2.select_method_wo_parameter(selQ, "Text");
                if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                {
                    det = Convert.ToString(ds.Tables[0].Rows[0]["Requestcode"]);
                    appstatus = Convert.ToString(ds.Tables[0].Rows[0]["ReqAppStatus"]);
                    if (appstatus == "1")
                    {
                        string delcheck = d2.GetFunction("select LeaveFrom from RQ_Requisition where RequestType=5 and RequisitionPK='" + val + "' and LeaveFrom>'" + dt.ToString("MM/dd/yyyy") + "'");
                        if (delcheck != "0")
                        {
                            string del_query1 = "update RQ_Requisition set reqappstatus='3' where RequisitionPK='" + val + "'";
                            d2.update_method_wo_parameter(del_query1, "Text");
                            saveflage = true;
                            updateAdd_attn(val);
                            imgbtn_all_Click(sender, e);
                        }
                    }
                }
                #endregion
            }
            if (saveflage == true)
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "Canceled Successfully";
                popview.Visible = false;
            }
            else
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "You Cannot Cancel This Record";
            }
            div_del_confm.Visible = false;
            div_confm.Visible = false;
        }
        catch
        {
        }
    }
    public void updateAdd_attn(string pkcodevalue)
    {
        string fromdate = "";
        string todate = "";
        string day = "";
        string month = "";
        string year = "";
        string halfday = "";
        string halfdate = "";
        string leavesession = "";
        string leavetype = "";
        string leavemasterfk = ""; string appno = ""; string Reqstaffappno = "";
        string selQry = " select ReqAppNo,ReqStaffAppNo,LeaveMasterFK,LeaveFrom,LeaveTo,IsHalfDay,LeaveSession,HalfDate from RQ_Requisition where RequestType=5 and RequisitionPK='" + pkcodevalue + "'"; // poo 29.11.17
        DataSet dsl = d2.select_method_wo_parameter(selQry, "Text");
        if (dsl.Tables.Count > 0 && dsl.Tables[0].Rows.Count > 0)
        {
            appno = Convert.ToString(dsl.Tables[0].Rows[0]["ReqAppNo"]); // poo 29.11.17
            Reqstaffappno = Convert.ToString(dsl.Tables[0].Rows[0]["ReqStaffAppNo"]); //poo 29.11.17
            leavemasterfk = Convert.ToString(dsl.Tables[0].Rows[0]["LeaveMasterFK"]);
            fromdate = Convert.ToString(dsl.Tables[0].Rows[0]["LeaveFrom"]);
            todate = Convert.ToString(dsl.Tables[0].Rows[0]["LeaveTo"]);
            halfday = Convert.ToString(dsl.Tables[0].Rows[0]["IsHalfDay"]);
            halfdate = Convert.ToString(dsl.Tables[0].Rows[0]["HalfDate"]);
            leavesession = Convert.ToString(dsl.Tables[0].Rows[0]["LeaveSession"]);
        }
        string leavecat = d2.GetFunction("select category from leave_category where leavemasterpk='" + leavemasterfk + "'");
        string staffcode = d2.GetFunction("select s.staff_code from staff_appl_master sa, staffmaster s where sa.appl_no=s.appl_no and appl_id='" + appno + "'"); //poo 29.11.17
        string qur = "select * from individual_leave_type where staff_code='" + staffcode + "' and college_code='" + collegecode1 + "'";
        ds = d2.select_method_wo_parameter(qur, "Text");
        DateTime fdate = Convert.ToDateTime(fromdate);
        DateTime tdate = Convert.ToDateTime(todate);
        if (halfday == "True")
            halfdate = Convert.ToString(dsl.Tables[0].Rows[0]["HalfDate"]);
        // halfdate = d2.GetFunction("select HalfDate from RQ_Requisition where RequestType=5 and RequisitionPK='" + pkcodevalue + "'");
        for (; fdate <= tdate; )
        {
            fromdate = Convert.ToString(fdate);
            string[] sp = fromdate.Split('/');
            day = sp[1].TrimStart('0');
            month = sp[0].TrimStart('0');
            string year1 = sp[2];
            string[] sp1 = year1.Split(' ');
            DateTime dt = new DateTime();
            dt = Convert.ToDateTime(sp[0] + "/" + sp[1] + "/" + sp[2]);
            string sunday = dt.ToString("dddd");
            year = sp1[0];
            string mothyear = month + "/" + year;
            string shortname = d2.GetFunction("select l.shortname from leave_category l,RQ_Requisition r where r.LeaveMasterFK=l.LeaveMasterPK and r.RequisitionPK='" + pkcodevalue + "'");
            string code = d2.GetFunction("select category_code from stafftrans where staff_code='" + staffcode + "'");
            string deptCode = d2.GetFunction("select dept_code from stafftrans where staff_code='" + staffcode + "'");//delsi1806
            string get = d2.GetFunction("select holiday_date from holidayStaff where category_code ='" + code + "' and  holiday_date='" + dt + "' and college_code ='" + collegecode1 + "'and dept_code='" + deptCode + "'");
            if (ds.Tables[0].Rows.Count > 0)
            {
                string[] spl_type = ds.Tables[0].Rows[0]["leavetype"].ToString().Split(new Char[] { '\\' });
                for (int i = 0; spl_type.GetUpperBound(0) >= i; i++)
                {
                    string[] split_leave = spl_type[i].Split(';');
                    if (leavecat == split_leave[0])
                    {
                        if (split_leave[4] == "1")
                            sun_check = false;
                        else
                            sun_check = true;
                        if (sunday != "Sunday")
                        {
                            if (split_leave[5] == "1")
                                holi_check = false;
                            else
                                holi_check = true;
                        }
                    }
                }
            }
            if (halfdate == fromdate)//delsi0506
            {
                //if (leavesession == "2")
                //    leavetype = shortname + "-";
                //else if (leavesession == "1")
                //    leavetype = "-" + shortname;

                if (leavesession == "1")
                    leavetype = shortname + "-";
                else if (leavesession == "2")
                    leavetype = "-" + shortname;

            }
            else
                leavetype = shortname + "-" + shortname;
            if (sun_check == true)
            {
                if (sunday == "Sunday")
                    sun_check = true;
                else
                    sun_check = false;
            }
            if (sunday != "Sunday")
            {
                if (holi_check == true)
                {
                    if (get == "0")
                        holi_check = true;
                    else
                        holi_check = false;
                }
            }
            else
                holi_check = true;
            if (sun_check == false && holi_check == false)
            {

                string getpresentapp = string.Empty;
                if (halfday.ToUpper().Trim() == "TRUE")//delsi
                {
                    string firsthalf = string.Empty;//delsi0506
                    string secondhalf = string.Empty;
                    getpresentapp = d2.GetFunction(" select [" + day + "] from staff_attnd where staff_code ='" + staffcode + "' and mon_year ='" + mothyear + "'");
                    if (getpresentapp != null && getpresentapp != "" && getpresentapp != "0")
                    {
                        if (getpresentapp.Contains('-'))
                        {
                            string[] splitval = getpresentapp.Split('-');
                            firsthalf = Convert.ToString(splitval[0]);
                            secondhalf = Convert.ToString(splitval[1]);
                            if (leavesession == "2")
                                leavetype = firsthalf + "-";
                            else if (leavesession == "1")
                                leavetype = "-" + secondhalf;
                            string attn_query = "if exists (select * from staff_attnd where staff_code ='" + staffcode + "' and mon_year ='" + mothyear + "')update staff_attnd set [" + day + "]='" + leavetype + "' where staff_code ='" + staffcode + "' and mon_year ='" + mothyear + "'else insert into staff_attnd (staff_code,mon_year,[" + day + "])values ('" + staffcode + "','" + mothyear + "','" + leavetype + "')";
                            int val = d2.update_method_wo_parameter(attn_query, "Text");
                        }


                    }

                }
                else
                {
                    string attn_query = "if exists (select * from staff_attnd where staff_code ='" + staffcode + "' and mon_year ='" + mothyear + "')update staff_attnd set [" + day + "]='" + null + "' where staff_code ='" + staffcode + "' and mon_year ='" + mothyear + "'else insert into staff_attnd (staff_code,mon_year,[" + day + "])values ('" + staffcode + "','" + mothyear + "','" + null + "')";
                    int val = d2.update_method_wo_parameter(attn_query, "Text");
                }
            }
            else if (sun_check == false)
            {
                string attn_query = "if exists (select * from staff_attnd where staff_code ='" + staffcode + "' and mon_year ='" + mothyear + "')update staff_attnd set [" + day + "]='" + null + "' where staff_code ='" + staffcode + "' and mon_year ='" + mothyear + "'else insert into staff_attnd (staff_code,mon_year,[" + day + "])values ('" + staffcode + "','" + mothyear + "','" + null + "')";
                int val = d2.update_method_wo_parameter(attn_query, "Text");
            }
            else if (holi_check == false)
            {
                string attn_query = "if exists (select * from staff_attnd where staff_code ='" + staffcode + "' and mon_year ='" + mothyear + "')update staff_attnd set [" + day + "]='" + null + "' where staff_code ='" + staffcode + "' and mon_year ='" + mothyear + "'else insert into staff_attnd (staff_code,mon_year,[" + day + "])values ('" + staffcode + "','" + mothyear + "','" + null + "')";
                int val = d2.update_method_wo_parameter(attn_query, "Text");
            }
            fdate = fdate.AddDays(1);
        }
    }
    protected bool requestApprovalCheck()
    {
        bool check = false;
        try
        {
            chkrelived = 0;
            double value1 = 0;
            double value2 = 0;
            string stage1 = "";
            string getappid = "";
            string pkcode = "";
            string sqlcmd = "";
            string stg = "";
            string date = DateTime.Now.ToString("MM/dd/yyyy");
            string Requisition_no_lv = Convert.ToString(txt_rqstn_leave.Text);
            string req = Convert.ToString(TextBox7.Text);
            string changereason = Convert.ToString(txt_reasonchng.Text);
            string cstaff = d2.GetFunction(" select ReqStaffAppNo from RQ_Requisition where RequestType=5 and RequisitionPK='" + req + "'");
            string lonstaff = d2.GetFunction("select sm.appl_id from staff_appl_master sm,staffmaster s where sm.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            if (div_leavereq.Visible == true)
            {
                pkcode = req;
                stage1 = d2.GetFunction("select ReqApproveStage from RQ_Requisition where RequisitionPK='" + pkcode + "'");
                stg = stage1;
            }
            if (string.IsNullOrEmpty(staffcodesession))
            {
                //imgdiv2.Visible = true;
                // lbl_alert.Text = "You Are Not Have A Approval Permission";
            }
            else
            {
                if (stage1 == "0")
                    value2 = 1;
                else
                {
                    value1 = Convert.ToDouble(stage1);
                    value2 = value1 + 1;
                    // getappid = d2.GetFunction("select ReqAppStaffAppNo from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'");
                }
                sqlcmd = " select ReqApproveStage,RequestType, ReqAppStaffAppNo,ReqAppPriority from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'and RequestType=5 and ReqStaffAppNo='" + cstaff + "'";
                sqlcmd += " select ReqAppPriority from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'";
                ds = d2.select_method_wo_parameter(sqlcmd, "Text");
                DataView dv = new DataView();
                if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                {
                    for (int loop = 0; loop < ds.Tables[0].Rows.Count; loop++)
                    {
                        //string priorityval = d2.GetFunction("select ReqAppPriority from RQ_RequestHierarchy where ReqApproveStage='" + value2 + "'");
                        string priorityval = Convert.ToString(ds.Tables[1].Rows[0]["ReqAppPriority"]);
                        string pri = Convert.ToString(ds.Tables[0].Rows[loop]["ReqAppPriority"]);
                        ds.Tables[0].DefaultView.RowFilter = "ReqApproveStage='" + value2 + "' and RequestType=5 and ReqAppStaffAppNo='" + lonstaff + "'";
                        dv = ds.Tables[0].DefaultView;
                        if (dv.Count > 0)
                        {
                            #region
                            getappid = Convert.ToString(dv[0]["ReqAppStaffAppNo"]);
                            string getappno = d2.GetFunction("select staff_code  from staff_appl_master a, staffmaster s where a.appl_no=s.appl_no and appl_id='" + getappid + "'");
                            if (getappno == staffcodesession)
                            {
                                check = true;
                                //if (div_leavereq.Visible == true)
                                //{
                                //}
                            }
                            else
                            {
                                //imgdiv2.Visible = true;
                                // lbl_alert.Text = "You Cannot Give the Approval Permission";
                            }
                            #endregion
                        }
                    }
                }
            }
        }
        catch
        {
        }
        return check;
    }
    //added by department wise option leave request by sudhagar 06.02.2017
    protected void cbdept_Changed(object sender, EventArgs e)
    {
        if (cbdept.Checked)
        {
            tddept.Visible = true;
            trdept.Visible = true;
            binddept();
            binddesignation();
            loadstafftype();
            loadcategory();
        }
        else
        {
            tddept.Visible = false;
            trdept.Visible = false;
        }
    }
    protected void cbl_depts_CheckedChanged(object sender, EventArgs e)
    {
        reuse.CallCheckBoxChangedEvent(cbl_depts, cb_depts, txt_depts, "Department");
    }
    protected void cbl_depts_selectedchanged(object sender, EventArgs e)
    {
        reuse.CallCheckBoxListChangedEvent(cbl_depts, cb_depts, txt_depts, "Department");
    }
    protected void cb_desig_CheckedChanged(object sender, EventArgs e)
    {
        reuse.CallCheckBoxChangedEvent(cbl_desig, cb_desig, txt_desig, "Designation");
    }
    protected void cbl_desig_selectedchanged(object sender, EventArgs e)
    {
        reuse.CallCheckBoxListChangedEvent(cbl_desig, cb_desig, txt_desig, "Designation");
    }
    protected void cb_staffcat_CheckedChanged(object sender, EventArgs e)
    {
        reuse.CallCheckBoxChangedEvent(cbl_staffcat, cb_staffcat, txt_staffcat, "Category");
    }
    protected void cbl_staffcat_selectedchanged(object sender, EventArgs e)
    {
        reuse.CallCheckBoxListChangedEvent(cbl_staffcat, cb_staffcat, txt_staffcat, "Category");
    }
    protected void cb_stafftyp_CheckedChanged(object sender, EventArgs e)
    {
        reuse.CallCheckBoxChangedEvent(cbl_stafftyp, cb_stafftyp, txt_stafftyp, "StaffType");
    }
    protected void cbl_stafftyp_selectedchanged(object sender, EventArgs e)
    {
        reuse.CallCheckBoxListChangedEvent(cbl_stafftyp, cb_stafftyp, txt_stafftyp, "StaffType");
    }
    protected void binddept()
    {
        try
        {
            if (ddl_rpt_collge.Items.Count > 0)
                collegecode1 = Convert.ToString(ddl_rpt_collge.SelectedItem.Value);
            cbl_depts.Items.Clear();
            ds.Clear();
            string group_user = "";
            string cmd = "";
            string singleuser = Session["single_user"].ToString();
            if (singleuser == "True")
            {
                cmd = "SELECT DISTINCT hp.dept_code,dept_name from hr_privilege hp,hrdept_master hr  where  hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master where college_code='" + collegecode1 + "') order by dept_name";
            }
            else
            {
                group_user = Session["group_code"].ToString();
                if (group_user.Contains(';'))
                {
                    string[] group_semi = group_user.Split(';');
                    group_user = group_semi[0].ToString();
                }
                cmd = "SELECT DISTINCT hp.dept_code,dept_name from hr_privilege hp,hrdept_master hr  where  hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master where college_code='" + collegecode1 + "') order by dept_name";
            }
            ds = d2.select_method_wo_parameter(cmd, "Text");
            if (ds.Tables.Count > 0)
            {
                if (ds.Tables[0].Rows.Count > 0)
                {
                    cbl_depts.DataSource = ds.Tables[0];
                    cbl_depts.DataTextField = "dept_name";
                    cbl_depts.DataValueField = "dept_code";
                    cbl_depts.DataBind();
                    if (cbl_depts.Items.Count > 0)
                    {
                        for (int i = 0; i < cbl_depts.Items.Count; i++)
                        {
                            cbl_depts.Items[i].Selected = true;
                        }
                        txt_depts.Text = "Department(" + cbl_depts.Items.Count + ")";
                        cb_depts.Checked = true;
                    }
                }
                else
                {
                    txt_depts.Text = "--Select--";
                    cb_depts.Checked = false;
                }
            }
        }
        catch { }
    }
    protected void binddesignation()
    {
        if (ddl_rpt_collge.Items.Count > 0)
            collegecode1 = Convert.ToString(ddl_rpt_collge.SelectedItem.Value);
        ds.Clear();
        cbl_desig.Items.Clear();
        string statequery = "select desig_code,desig_name from desig_master where collegeCode='" + collegecode1 + "' order by desig_name";
        ds = d2.select_method_wo_parameter(statequery, "Text");
        if (ds.Tables[0].Rows.Count > 0)
        {
            cbl_desig.DataSource = ds;
            cbl_desig.DataTextField = "desig_name";
            cbl_desig.DataValueField = "desig_code";
            cbl_desig.DataBind();
            cbl_desig.Visible = true;
            if (cbl_desig.Items.Count > 0)
            {
                for (int i = 0; i < cbl_desig.Items.Count; i++)
                {
                    cbl_desig.Items[i].Selected = true;
                }
                txt_desig.Text = "Designation(" + cbl_desig.Items.Count + ")";
                cb_desig.Checked = true;
            }
        }
        else
        {
            txt_desig.Text = "--Select--";
            cb_desig.Checked = false;
        }
    }
    protected void loadstafftype()
    {
        try
        {
            if (ddl_rpt_collge.Items.Count > 0)
                collegecode1 = Convert.ToString(ddl_rpt_collge.SelectedItem.Value);
            ds.Clear();
            cbl_stafftyp.Items.Clear();
            string item = "select distinct stftype from stafftrans t ,staffmaster m where m.staff_code = t.staff_code and college_code = '" + collegecode1 + "'";
            ds = d2.select_method_wo_parameter(item, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                cbl_stafftyp.DataSource = ds;
                cbl_stafftyp.DataTextField = "stftype";
                cbl_stafftyp.DataBind();
                if (cbl_stafftyp.Items.Count > 0)
                {
                    for (int i = 0; i < cbl_stafftyp.Items.Count; i++)
                    {
                        cbl_stafftyp.Items[i].Selected = true;
                    }
                    txt_stafftyp.Text = "StaffType (" + cbl_stafftyp.Items.Count + ")";
                    cb_stafftyp.Checked = true;
                }
            }
            else
            {
                txt_stafftyp.Text = "--Select--";
                cb_stafftyp.Checked = false;
            }
        }
        catch { }
    }
    protected void loadcategory()
    {
        if (ddl_rpt_collge.Items.Count > 0)
            collegecode1 = Convert.ToString(ddl_rpt_collge.SelectedItem.Value);
        ds.Clear();
        cbl_staffcat.Items.Clear();
        string statequery = "select category_code,category_Name from staffcategorizer where college_code = '" + collegecode1 + "' ";
        ds = d2.select_method_wo_parameter(statequery, "Text");
        if (ds.Tables[0].Rows.Count > 0)
        {
            cbl_staffcat.DataSource = ds;
            cbl_staffcat.DataTextField = "category_Name";
            cbl_staffcat.DataValueField = "category_code";
            cbl_staffcat.DataBind();
            cbl_staffcat.Visible = true;
            if (cbl_staffcat.Items.Count > 0)
            {
                for (int i = 0; i < cbl_staffcat.Items.Count; i++)
                {
                    cbl_staffcat.Items[i].Selected = true;
                }
                txt_staffcat.Text = "Category(" + cbl_staffcat.Items.Count + ")";
                cb_staffcat.Checked = true;
            }
        }
        else
        {
            txt_staffcat.Text = "--Select--";
            cb_staffcat.Checked = false;
        }
    }
    private string getCblSelectedValue(CheckBoxList cblSelected)
    {
        System.Text.StringBuilder selectedvalue = new System.Text.StringBuilder();
        try
        {
            for (int sel = 0; sel < cblSelected.Items.Count; sel++)
            {
                if (cblSelected.Items[sel].Selected == true)
                {
                    if (selectedvalue.Length == 0)
                    {
                        selectedvalue.Append(Convert.ToString(cblSelected.Items[sel].Value));
                    }
                    else
                    {
                        selectedvalue.Append("','" + Convert.ToString(cblSelected.Items[sel].Value));
                    }
                }
            }
        }
        catch { cblSelected.Items.Clear(); }
        return selectedvalue.ToString();
    }
    //added bys sudhagar
    public void alternateRights()
    {
        try
        {
            alterrigths = string.Empty;
            string query = "";
            query = " select * from Master_Settings where settings ='Include Alternate Schedule' ";
            query += " select * from Master_Settings where settings ='Leave Apply in Alternate Schedule'";
            ds = d2.select_method_wo_parameter(query, "Text");
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                int rightVal = 0;
                int.TryParse(Convert.ToString(ds.Tables[0].Rows[0]["value"]), out rightVal);
                if (rightVal == 1)
                {
                    for (int i = 0; i < ds.Tables[1].Rows.Count; i++)
                    {
                        string val = Convert.ToString(ds.Tables[1].Rows[i]["value"]);
                        alterrigths = val;
                    }
                }
            }
        }
        catch
        {
        }
    }
    protected bool afteralterSchedule()//barath 
    {
        bool check = false;
        try
        {
            string actstaffid = Convert.ToString(txt_staff_code.Text);
            string[] spl_frm_date = txt_frm.Text.Split('/');
            string from = spl_frm_date[1] + "/" + spl_frm_date[0] + "/" + spl_frm_date[2];
            string[] spl_to_date = txt_to.Text.Split('/');
            string to = spl_to_date[1] + "/" + spl_to_date[0] + "/" + spl_to_date[2];
            string selq = " select BatchYear,DegreeFK,Sem,Sec,convert(varchar(10),AlterDate,103) as AlterDate,Hour,ActStaffID,ActSubjectNo,AlterStaffID from RQ_AlterStaffLeaveRequest where ActStaffID='" + actstaffid + "' and AlterDate between '" + from + "' and '" + to + "' ";
            //and AlterStaffID='" + alterstaffid + "'
            selq += " select d.Degree_Code,c.Course_Name,dt.dept_acronym , dt.Dept_Name,(c.Course_Name +'-'+dt.dept_acronym)as dept_acronym from Degree d,Department dt,Course c where d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and d.college_code ='" + collegecode1 + "'";
            selq += " select distinct (sm.staff_code+'-'+sm.staff_name) as staff,sm.staff_code,sm.staff_name from staffmaster sm,staff_appl_master sa,stafftrans st where sm.appl_no=sa.appl_no and st.latestrec='1' order by sm.staff_code asc";
            selq += " select distinct s.subject_no,s.subject_name,s.subject_code,sy.Batch_Year,sy.degree_code,sy.semester,ss.Lab,ss.subject_type,current_semester from Registration r,syllabus_master sy,sub_sem ss,subject s where r.Batch_Year=sy.Batch_Year and r.degree_code=sy.degree_code and r.Current_Semester=sy.semester and sy.syll_code=ss.syll_code and sy.syll_code=s.syll_code and ss.subType_no=s.subType_no and r.cc=0 and r.delflag=0 and r.exam_flag<>'debar'";
            DataSet dsdet = d2.select_method_wo_parameter(selq, "Text");
            if (dsdet.Tables.Count > 0 && dsdet.Tables[0].Rows.Count > 0)
            {
                DataTable dts = new DataTable();
                dts.Columns.Add("Dummy0");
                dts.Columns.Add("Dummy");
                dts.Columns.Add("Dummy5");
                dts.Columns.Add("Dummy3");
                dts.Columns.Add("Dummy4");
                dts.Columns.Add("Dummy6");
                dts.Columns.Add("Dummy2");
                dts.Columns.Add("Dummy1");
                DataRow drs;
                for (int i = 0; i < dsdet.Tables[0].Rows.Count; i++)
                {
                    drs = dts.NewRow();
                    drs[0] = Convert.ToString(dsdet.Tables[0].Rows[i]["AlterDate"]);
                    drs[1] = Convert.ToString(dsdet.Tables[0].Rows[i]["Hour"]);
                    drs[2] = Convert.ToString(dsdet.Tables[0].Rows[i]["ActStaffID"]);
                    string stafname = string.Empty;
                    if (dsdet.Tables[2].Rows.Count > 0)
                    {
                        dsdet.Tables[2].DefaultView.RowFilter = "staff_code='" + dsdet.Tables[0].Rows[i]["ActStaffID"] + "'";
                        DataView dvsfname = dsdet.Tables[2].DefaultView;
                        if (dvsfname.Count > 0)
                            stafname = Convert.ToString(dvsfname[0]["staff_name"]);
                    }
                    drs[3] = stafname;
                    string subname = string.Empty;
                    if (dsdet.Tables[3].Rows.Count > 0)
                    {
                        dsdet.Tables[3].DefaultView.RowFilter = "batch_year='" + dsdet.Tables[0].Rows[i]["BatchYear"] + "' and  degree_code='" + dsdet.Tables[0].Rows[i]["DegreeFK"] + "'  and current_semester='" + dsdet.Tables[0].Rows[i]["Sem"] + "' and subject_no='" + dsdet.Tables[0].Rows[i]["ActSubjectNo"] + " '";
                        DataView dvsub = dsdet.Tables[3].DefaultView;
                        if (dvsub.Count > 0)
                            subname = Convert.ToString(dvsub[0]["subject_name"]);
                    }
                    drs[4] = subname;
                    drs[5] = Convert.ToString(dsdet.Tables[0].Rows[i]["AlterStaffID"]);
                    stafname = string.Empty;
                    if (dsdet.Tables[2].Rows.Count > 0)
                    {
                        dsdet.Tables[2].DefaultView.RowFilter = "staff_code='" + dsdet.Tables[0].Rows[i]["AlterStaffID"] + "'";
                        DataView dvsfname = dsdet.Tables[2].DefaultView;
                        if (dvsfname.Count > 0)
                            stafname = Convert.ToString(dvsfname[0]["staff_name"]);
                    }
                    drs[6] = Convert.ToString(stafname);
                    drs[7] = Convert.ToString("");
                    dts.Rows.Add(drs);
                }
                if (dts.Rows.Count > 0)
                {
                    grid_altersub.DataSource = dts;
                    grid_altersub.DataBind();
                    grid_altersub.Visible = true;
                    spn1.Visible = true;
                    check = true;
                }
                else
                {
                    spn1.Visible = false;
                }
            }
        }
        catch { }
        return check;
    }
    //BARATH 01.07.17
    public void visitorsms(string RequisitionFK, string companyandperson, string date, string time, string reason, string requestpersonmobileno)
    {
        user_id = d2.GetFunction("select SMS_User_ID from Track_Value where college_code='" + collegecode1 + "'");
        string getval = d2.GetUserapi(user_id);
        string[] spret = getval.Split('-');
        if (spret.GetUpperBound(0) == 1)
        {
            SenderID = spret[0].ToString();
            Password = spret[1].ToString();
            Session["api"] = user_id;
            Session["senderid"] = SenderID;
        }
        string appno = d2.GetFunction("select MeetStaffAppNo from RQ_Requisition where RequestType=3 and RequisitionPK='" + RequisitionFK + "'");
        strmsg = "Your ward Ms." + companyandperson + " request to Visit for " + reason + " on " + date + " at " + time + " Approved Successfully";
        string staffnum = d2.GetFunction("select per_mobileno from staff_appl_master where appl_no in('" + appno.Replace(",", "','") + "')");
        mobilenos = staffnum + "," + requestpersonmobileno;
        if (mobilenos != "")
        {
            isst = "1";
            int smsdet = d2.send_sms(user_id, collegecode1, usercode, mobilenos, strmsg, isst);
        }
    }
    protected void btn_print_Click(object sender, EventArgs e)
    {
        string date = txt_visitorreqdate.Text;// Convert.ToString(System.DateTime.Now.ToString("dd/MM/yyyy"));
        string visitorname = txt_cname.Text;
        string name = txt_name.Text;
        string designation = ddl_designation.SelectedItem.Text;
        string Department = ddl_department.SelectedItem.Text;
        string phno = txt_visitorph.Text;
        string mobileno = txt_visitormob.Text;
        string address = txt_address.Text;
        string email = txt_visitoremail.Text;
        string dept = txt_dept_to.Text + "," + txt_dept_cc.Text;
        string meet = txt_indiv.Text + "," + txt_indiv_cc.Text;
        meet = meet.TrimEnd(',');
        meet = meet.TrimStart(',');
        dept = dept.TrimStart(',');
        dept = dept.TrimEnd(',');
        string meetto = dept + meet;
        string purpose = txt_visitorpurpose.Text;
        string expecteddate = ddl_hrs.SelectedItem.Text + " : " + ddl_mins.SelectedItem.Text + " " + ddl_ampm.SelectedItem.Text;
        StringBuilder html = new StringBuilder();
        html.Append("<div style='height: 500px;width: 100%; border: thin solid black; margin-left: 10px; margin: 0px; page-break-after: always;'> <center><div id='squre' style='border-style: solid; border-width: thin;  width: 250px; height: 20px;font-weight:bold; font-size: Large;margin-top: 5px; ' > VISITOR PASS </div> </center><table style='width: 100%; margin-top: 10px; font-size: medium;' cellpadding='5' cellspacing='5'> <tr>  <td align='Left' style='font-weight: bold'></td>  <td>  </td><td align='right' style='font-weight: bold'>Date :" + date + "  </td> <td align='right' style='font-weight: bold' width='80px'></td> </tr></table><table style='width: 100%; margin-top: 0px; font-size: medium;' cellpadding='5' cellspacing='5'>  <tr><td align='Left' width='280' style='font-weight: bold'> VISITOR DETAILS:  </td> </tr> <tr><td align='Left' width='280' style='font-weight: bold'>Company Name  </td><td width='10' style='font-weight: bold'>:  </td><td align='Left' width='300'>" + visitorname + "  </td> </tr> <tr><td align='Left' width='280' style='font-weight: bold'> Name </td>   <td width='10' style='font-weight: bold'>:  </td> <td align='Left' width='300'>" + name + "  </td> </tr> <tr><td align='Left' width='280' style='font-weight: bold'> Designation</td>      <td width='10' style='font-weight: bold'>: </td>  <td align='Left' width='300' >" + designation + "  </td> </tr> <tr> <td align='Left' width='280' style='font-weight: bold'> Department</td>      <td width='10' style='font-weight: bold'>:  </td>  <td align='Left' width='300'>" + Department + "  </td> </tr> <tr><td align='Left' width='280' style='font-weight: bold'> Phone No  </td> <td width='10' style='font-weight: bold'>:  </td>  <td align='Left' width='300'>" + phno + "  </td> </tr> <tr><td align='Left' width='280' style='font-weight: bold'>Mobile No</td>      <td width='10' style='font-weight: bold'>:  </td>  <td align='Left' width='300'>" + mobileno + " </td> </tr> <tr><td align='Left' width='280' style='font-weight: bold'> Address</td>      <td width='10' style='font-weight: bold'>:  </td>  <td align='Left' width='300'>" + address + "</td> </tr> <tr> <td align='Left' width='280' style='font-weight: bold'> E-Mail </td>      <td width='10' style='font-weight: bold'>:  </td>  <td align='Left' width='300'>" + email + "</td> </tr> <tr>  <td align='Left' width='280' style='font-weight: bold'>        Meet To </td>      <td width='10' style='font-weight: bold'>:  </td>  <td align='Left' width='300'>" + meetto + " </td> </tr> <tr>  <td align='Left' width='280' style='font-weight: bold'>Purpose </td>      <td width='10' style='font-weight: bold'>:  </td>  <td align='Left' width='300'>" + purpose + "        </td> </tr> <tr>  <td align='Left' width='280' style='font-weight: bold'>Expected Date</td>      <td width='10' style='font-weight: bold'>:  </td>  <td align='Left' width='300'>" + expecteddate + "        </td> </tr> <tr>  <td align='Left' width='280' style='font-weight: bold'></td><td width='10' style='font-weight: bold'></td>  <td align='Left' width='300'></td> </tr></table><table style='margin-left: 40px; margin-top: 10px; float: left;width: 80%; '> <tr>  <td></td> <td style='font-weight: bold;float:right;'>Signature  </td></tr></table><br /><br /><br /></div><br>");
        contentDiv.InnerHtml = html.ToString();
        ScriptManager.RegisterStartupScript(this, GetType(), "btn_print", "PrintDiv();", true);
    }
    /// <summary>
    /// Certificate Request 10.07.2017
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    protected void imgCertificateReq_Click(object sender, EventArgs e)
    {

        td_stud.BgColor = "white";
        td_staff.BgColor = "white";
        td_par.BgColor = "white";
        td_comp.BgColor = "white";
        td_indi.BgColor = "white";
        td_mag.BgColor = "white";
        td3.BgColor = "#c4c4c4";
        td_all.BgColor = "white";
        td2.BgColor = "white";
        lbl_studrptroll.Visible = false;
        txt_studrptroll.Visible = false;
        lbl_studrptname.Visible = false;
        txt_studrptname.Visible = false;
        rdo_gatestudent.Visible = false;
        rdo_gatestaff.Visible = false;
        btn_rptfind.Visible = false;
        gate_div.Visible = false;
        item_div.Visible = false;
        service_div.Visible = false;
        vist_div.Visible = false;
        comp_div.Visible = false;
        leave_div.Visible = false;
        div_all.Visible = false;
        div_event.Visible = false;
        lbl_certErr.Visible = false;
        div_certificate.Visible = true;

        CertificateGo();
    }
    protected void CertificateGo()
    {
        try
        {
            ds.Clear();
            string[] fmd = txt_fromdate.Text.Split('/');
            string[] tod = txt_todate.Text.Split('/');
            DateTime dt = new DateTime();
            DateTime dt1 = new DateTime();
            dt = Convert.ToDateTime(fmd[1] + "/" + fmd[0] + "/" + fmd[2]);
            dt1 = Convert.ToDateTime(tod[1] + "/" + tod[0] + "/" + tod[2]);
            lbl_certErr.Visible = false;
            string query = string.Empty;
            string REqusetQ = string.Empty;

            if (rdo_approval.Checked)
                REqusetQ = " and isnull(rq.ReqAppStatus,0)=0";
            else if (rdo_waiting.Checked)
                REqusetQ = " and isnull(rq.ReqAppStatus,0)=1";
            else if (rdo_reject.Checked)
                REqusetQ = " and isnull(rq.ReqAppStatus,0)=2";
            query = " select distinct TransPk,appNo,r.Stud_Name,c.Course_Name+' - '+dt.Dept_Name as degree,r.degree_code,r.Roll_No,r.Reg_No,r.Roll_Admit,convert(varchar(10),om.TransDate,103)PaidDate,rq.RequisitionPK,rq.RequestCode,isnull(rq.ReqAppStatus,0)ReqAppStatus from OnlineFeeTransactionMaster om,OnlineFeeTransaction od,course c,Degree d,Department dt,Registration r,RQ_Requisition rq where r.App_No=rq.ReqAppNo and om.appNo=rq.ReqAppNo and r.App_No=om.appNo and r.degree_code=d.Degree_Code and c.Course_Id=d.Course_Id and d.Dept_Code=dt.Dept_Code  and om.TransPk=od.TransFK and TransDate between '" + dt.ToString("MM/dd/yyyy") + "' and '" + dt1.ToString("MM/dd/yyyy") + "' and od.PaidStatus=1  and rq.CertReqType='1' " + REqusetQ + "";
            ds = d2.select_method_wo_parameter(query, "text");
            if (ds.Tables[0].Rows.Count > 0 && ds.Tables != null)
            {
                string header = "S.No-50/Select-70/View-70/Student Name-180/Roll No-150/Register No-150/Admission No-150/Degree-300/RequestDate-100";
                reuse.Fpreadheaderbindmethod(header, fp_certificate, "false");
                FarPoint.Web.Spread.ButtonCellType btn = new FarPoint.Web.Spread.ButtonCellType();
                FarPoint.Web.Spread.CheckBoxCellType cb = new FarPoint.Web.Spread.CheckBoxCellType();
                FarPoint.Web.Spread.TextCellType txt = new FarPoint.Web.Spread.TextCellType();
                cb.AutoPostBack = false;
                btn.Text = "View";
                btn.CssClass = "textbox btn1";
                btn.ForeColor = System.Drawing.Color.Blue;
                foreach (DataRow dr in ds.Tables[0].Rows)
                {
                    fp_certificate.Sheets[0].Rows.Count++;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(fp_certificate.Sheets[0].Rows.Count);
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 1].CellType = cb;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 2].CellType = btn;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(dr["RequisitionPK"]);
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 2].Note = Convert.ToString(dr["RequestCode"]);
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 3].Tag = Convert.ToString(dr["appNo"]);
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 3].Text = Convert.ToString(dr["stud_name"]);
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 3].Note = Convert.ToString(dr["TransPk"]);
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 4].CellType = txt;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 4].Text = Convert.ToString(dr["roll_no"]);
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 5].CellType = txt;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 5].Text = Convert.ToString(dr["Reg_No"]);
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 6].CellType = txt;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 6].Text = Convert.ToString(dr["Roll_Admit"]);
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 7].CellType = txt;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 7].Text = Convert.ToString(dr["degree"]);
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 8].Text = Convert.ToString(dr["PaidDate"]);


                    string ReqAppStatus = Convert.ToString(dr["ReqAppStatus"]);
                    if (ReqAppStatus == "1")
                    {
                        fp_certificate.Sheets[0].Rows[fp_certificate.Sheets[0].RowCount - 1].BackColor = ColorTranslator.FromHtml("#A4F9C9");
                    }
                    else if (ReqAppStatus == "0")
                    {
                        fp_certificate.Sheets[0].Rows[fp_certificate.Sheets[0].RowCount - 1].BackColor = ColorTranslator.FromHtml("#F0A3CC");
                    }
                    else if (ReqAppStatus == "2")
                    {
                        fp_certificate.Sheets[0].Rows[fp_certificate.Sheets[0].RowCount - 1].BackColor = ColorTranslator.FromHtml("#EDF7A3");
                    }
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 0].Font.Bold = true;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 0].CellType = txt;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 0].Locked = true;

                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 1].Font.Bold = true;
                    //fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 1].CellType = txt;
                    //fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 1].Locked = true;

                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 2].Font.Bold = true;
                    //fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 2].CellType = txt;
                    //fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 2].Locked = true;

                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Left;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 3].Font.Name = "Book Antiqua";
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 3].Font.Bold = true;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 3].CellType = txt;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 3].Locked = true;

                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Left;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 4].Font.Name = "Book Antiqua";
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 4].Font.Bold = true;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 4].CellType = txt;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 4].Locked = true;

                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 5].HorizontalAlign = HorizontalAlign.Left;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 5].Font.Name = "Book Antiqua";
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 5].Font.Size = FontUnit.Medium;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 5].Font.Bold = true;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 5].CellType = txt;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 5].Locked = true;

                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 6].HorizontalAlign = HorizontalAlign.Left;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 6].Font.Name = "Book Antiqua";
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 6].Font.Size = FontUnit.Medium;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 6].Font.Bold = true;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 6].CellType = txt;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 6].Locked = true;

                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 7].HorizontalAlign = HorizontalAlign.Left;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 7].Font.Name = "Book Antiqua";
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 7].Font.Size = FontUnit.Medium;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 7].Font.Bold = true;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 7].CellType = txt;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 7].Locked = true;

                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 8].HorizontalAlign = HorizontalAlign.Left;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 8].Font.Name = "Book Antiqua";
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 8].Font.Size = FontUnit.Medium;
                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 8].Font.Bold = true;

                    fp_certificate.Sheets[0].Cells[fp_certificate.Sheets[0].RowCount - 1, 8].Locked = true;
                }
                fp_certificate.Sheets[0].Columns[1].Visible = false;
                if (Convert.ToString(ViewState["rollnoFlag"]) == "1")
                    fp_certificate.Sheets[0].Columns[4].Visible = false;
                if (Convert.ToString(ViewState["RegnoFlag"]) == "1")
                    fp_certificate.Sheets[0].Columns[5].Visible = false;
                if (Convert.ToString(ViewState["AdmissionnoFlag"]) == "1")
                    fp_certificate.Sheets[0].Columns[6].Visible = false;
                fp_certificate.Height = 500;
                if (ds.Tables[0].Rows.Count > 0)
                    div_certificate.Visible = true;
            }
            else
            {
                lbl_certErr.Visible = true;
                lbl_certErr.Text = "No Records Founds";
                div_certificate.Visible = false;
            }
        }
        catch (Exception ex)
        {
            lbl_certErr.Visible = true;
            lbl_certErr.Text = ex.ToString();
            div_certificate.Visible = false;
        }
    }
    protected void fp_certificate_ButtonCommand(object sender, FarPoint.Web.Spread.SpreadCommandEventArgs e)
    {
        try
        {
            fp_certificate.SaveChanges(); lbl_certerror.Visible = false;
            string actrow = e.SheetView.ActiveRow.ToString();
            string actcol = e.SheetView.ActiveColumn.ToString();
            if (actcol.Trim() == "2")
            {
                string app_no = Convert.ToString(fp_certificate.Sheets[0].GetTag(Convert.ToInt32(actrow), 3));
                ViewState["app_no"] = app_no;
                lbl_certname.Text = " : " + Convert.ToString(fp_certificate.Sheets[0].GetText(Convert.ToInt32(actrow), 3));
                lbl_certRollno.Text = " : " + Convert.ToString(fp_certificate.Sheets[0].GetText(Convert.ToInt32(actrow), 4));
                lbl_certRegno.Text = " : " + Convert.ToString(fp_certificate.Sheets[0].GetText(Convert.ToInt32(actrow), 5));
                lbl_certadmissoinno.Text = " : " + Convert.ToString(fp_certificate.Sheets[0].GetText(Convert.ToInt32(actrow), 6));
                lbl_certdeg.Text = " : " + Convert.ToString(fp_certificate.Sheets[0].GetText(Convert.ToInt32(actrow), 7));
                txt_certreqno.Text = Convert.ToString(fp_certificate.Sheets[0].GetNote(Convert.ToInt32(actrow), 2));
                txt_certreqdate.Text = Convert.ToString(fp_certificate.Sheets[0].GetText(Convert.ToInt32(actrow), 8));

                if (Convert.ToString(ViewState["rollnoFlag"]) == "1")
                    tr_certRollno.Visible = true;
                if (Convert.ToString(ViewState["RegnoFlag"]) == "1")
                    tr_certRegno.Visible = true;
                if (Convert.ToString(ViewState["AdmissionnoFlag"]) == "1")
                    tr_certAdmissionno.Visible = true;

                string requisitionfk = Convert.ToString(fp_certificate.Sheets[0].GetTag(Convert.ToInt32(actrow), 2));
                lbl_requestPK.Text = requisitionfk;
                ds.Clear();
                ds = d2.select_method_wo_parameter("select c.CertificateName,c.Certificate_ID,isnull(r.ReqAppStatus,0)ReqAppStatus from RQ_Requisition r,RQ_RequisitionDet rd,CertificateNameDetail c where c.Certificate_ID=rd.ReqCertificateID and  r.RequisitionPK=rd.RequisitionFK and r.RequestType='11'  and r.RequisitionPK='" + requisitionfk + "'", "text");//and isnull(r.ReqAppStatus,0)=0
                if (ds.Tables[0].Rows.Count > 0 && ds.Tables != null)
                {
                    certificateRequest_grid.DataSource = ds.Tables[0];
                    certificateRequest_grid.DataBind();
                    div_CertificatePop.Visible = true;
                    btn_certificateBtn.Visible = true;
                    double ReqAppStatus = 0;
                    double.TryParse(Convert.ToString(ds.Tables[0].Rows[0]["ReqAppStatus"]), out ReqAppStatus);
                    if (ReqAppStatus != 0)
                    {
                        btn_certificateBtn.Visible = false;
                    }
                }
            }
        }
        catch
        {

        }
    }
    protected void btn_certApp_Click(object sender, EventArgs e)
    {
        try
        {
            string requestpk = Convert.ToString(lbl_requestPK.Text);
            if (staffcodesession.Trim() == "" || staffcodesession.Trim() == null)
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "You Are Not Have A Approval Permission";
            }
            else
            {
                string Staffdeptcode = d2.GetFunction("select distinct h.dept_code from staff_appl_master a ,staffmaster s,hrdept_master h,desig_master d,stafftrans st where a.appl_no =s.appl_no and s.staff_code=st.staff_code and st.Dept_Code = h.Dept_Code and d.desig_code=st.desig_code and s.college_code = h.college_code and s.college_code = d.collegecode and s.college_code = d.collegecode and s.college_code='" + collegecode1 + "' and resign = 0 and settled = 0 and latestrec=1 and appl_id='" + LoginStaffApplid + "'");
                string studentdepartment = d2.GetFunction("select distinct r.degree_code from course c,Degree d,Department dt,Registration r,RQ_Requisition rq where r.App_No=rq.ReqAppNo and r.degree_code=d.Degree_Code and c.Course_Id=d.Course_Id and d.Dept_Code=dt.Dept_Code  and isnull(rq.ReqAppStatus,0)=0 and rq.ReqAppNo='" + Convert.ToString(ViewState["app_no"]) + "'");
                if (!string.IsNullOrEmpty(Staffdeptcode) && Staffdeptcode != "0")
                {
                    //if (studentdepartment == Staffdeptcode)
                    //{
                    string query = " select StaffReqDeptCode ,StaffAppDeptCode,ReqAppStaffAppNo,ReqApproveStage,RequestType, ReqApproveStage,ReqAppPriority from RQ_RequestHierarchy where RequestType='11' and  StaffAppDeptCode='" + Staffdeptcode + "' and  ReqAppStaffAppNo='" + LoginStaffApplid + "'";
                    ds = d2.select_method_wo_parameter(query, "Text");
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        if (studentdepartment == Convert.ToString(ds.Tables[0].Rows[0]["StaffAppDeptCode"]))
                        {
                            double ReqApproveStage = 0;
                            double.TryParse(Convert.ToString(ds.Tables[0].Rows[0]["ReqApproveStage"]), out ReqApproveStage);
                            if (ReqApproveStage == 0)
                            {
                                ReqApproveStage = 1;
                            }
                            else
                            {
                                ReqApproveStage += 1;
                            }
                            string update_query = "update RQ_Requisition set ReqApproveStage='" + ReqApproveStage + "',ReqAppStatus='1' ,ReqAppStaffAppNo='" + LoginStaffApplid + "' where RequisitionPK='" + requestpk + "' ";
                            int update = d2.update_method_wo_parameter(update_query, "Text");
                            if (update != 0)
                            {
                                imgdiv2.Visible = true;
                                lbl_alert.Text = "Approved Successfully";
                            }
                        }
                        else
                        {
                            imgdiv2.Visible = true;
                            lbl_alert.Text = "You Are Not Have A Approval Permission";
                        }
                    }
                    //}
                    //else
                    //{
                    //    imgdiv2.Visible = true;
                    //    lbl_alert.Text = "You Are Not Have A Approval Permission";
                    //}
                }
                else
                {
                    imgdiv2.Visible = true;
                    lbl_alert.Text = "You Are Not Have A Approval Permission";
                }
            }
        }
        catch (Exception ex)
        {
            lbl_certerror.Visible = true;
            lbl_certerror.Text = ex.ToString();
        }
    }
    protected void btn_certClear_Click(object sender, EventArgs e)
    {

    }
    protected void btn_popcertificateclose_Click(object sender, EventArgs e)
    {
        div_CertificatePop.Visible = false;
    }
    protected void RollnoRegnoAdmissionRights(ref string rollnoFlag, ref string RegnoFlag, ref string StudtypeFlag, ref string AdmissionnoFlag)
    {
        string grouporusercode = "";
        if ((Session["group_code"].ToString().Trim() != "") && (Session["group_code"].ToString().Trim() != "0") && (Session["group_code"].ToString().Trim() != "-1"))
        {
            grouporusercode = " and group_code=" + Session["group_code"].ToString().Trim() + "";
        }
        else
        {
            grouporusercode = " and usercode=" + Session["usercode"].ToString().Trim() + "";
        }
        string Master = "select * from Master_Settings where settings in('Roll No','Register No','Admission No') " + grouporusercode + "";
        DataSet ds = d2.select_method(Master, hat, "Text");
        if (ds.Tables.Count > 0)
        {
            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                if (ds.Tables[0].Rows[i]["settings"].ToString() == "Roll No" && ds.Tables[0].Rows[i]["value"].ToString() == "1")
                {
                    rollnoFlag = "1";
                }
                if (ds.Tables[0].Rows[i]["settings"].ToString() == "Register No" && ds.Tables[0].Rows[i]["value"].ToString() == "1")
                {
                    RegnoFlag = "1";
                }
                if (ds.Tables[0].Rows[i]["settings"].ToString() == "Student_Type" && ds.Tables[0].Rows[i]["value"].ToString() == "1")
                {
                    StudtypeFlag = "1";
                }
                if (ds.Tables[0].Rows[i]["settings"].ToString() == "Admission No" && ds.Tables[0].Rows[i]["value"].ToString() == "1")
                {
                    AdmissionnoFlag = "1";
                }
            }
        }
    }
    protected void btnGatePassMultipleRequestClick(object sender, EventArgs e)
    {
        Fpspread6.SaveChanges();
        ViewState["MultipleApproval"] = null;
        bool selectNothing = false;
        for (int r = 0; r < Fpspread6.Sheets[0].RowCount; r++)
        {
            string value = Convert.ToString(Fpspread6.Sheets[0].Cells[r, 1].Value);
            if (value == "1")
            {
                string RequisitionCode = Convert.ToString(Fpspread6.Sheets[0].GetNote(r, 0));
                string req = Convert.ToString(Fpspread6.Sheets[0].GetTag(r, 0));
                TextBox1.Text = req;
                ViewState["MultipleApproval"] = 1;
                btnsave_click(sender, e);
                selectNothing = true;
            }
        }
        if (selectNothing)
            gate();
        else
        {
            imgdiv2.Visible = true;
            lbl_alert.Text = "Please Select Any One Request Person";
        }
    }

    public void AlternateScheduleRemove(string RequestFK, DateTime FromDate)
    {
        try
        {
            string StaffCode = d2.GetFunction("select distinct s.staff_code from staff_appl_master sa, staffmaster s,RQ_Requisition rq where sa.appl_id=rq.ReqAppNo and sa.appl_no=s.appl_no and rq.RequisitionPK='" + RequestFK + "'");
            string DateVal = string.Empty;
            string sql1 = string.Empty;
            string tmp_varstr = string.Empty;
            string Strsql = string.Empty;
            string[] Days = new string[7] { "mon", "tue", "wed", "thu", "fri", "sat", "sun" };
            int noofhrs = 0;
            int.TryParse(d2.GetFunction("select max(No_of_hrs_per_day) as noofhours from PeriodAttndSchedule "), out noofhrs);
            for (int day_lp = 0; day_lp < 7; day_lp++)
            {
                string dayL = Convert.ToString(Days[day_lp]);
                sql1 = sql1 + "(";
                tmp_varstr = string.Empty;
                for (int i_loop = 1; i_loop <= noofhrs; i_loop++)
                {
                    Strsql = Strsql + dayL + Convert.ToString(i_loop) + ",";
                    if (tmp_varstr == "")
                        tmp_varstr = tmp_varstr + dayL + Convert.ToString(i_loop) + " like '%" + StaffCode + "-%'";
                    else
                        tmp_varstr = tmp_varstr + " or " + dayL + Convert.ToString(i_loop) + " like '%" + StaffCode + "-%'";
                }
                if (day_lp != 6)
                    tmp_varstr = tmp_varstr + ") or ";
                else
                    tmp_varstr = tmp_varstr + ")";
                sql1 = sql1 + Convert.ToString(tmp_varstr);
            }
            if (!string.IsNullOrEmpty(sql1))
                sql1 = " and " + sql1;

            string AlternateUpdateQuery = string.Empty;
            string BatchYear = string.Empty;
            string DegreeCode = string.Empty;
            string Semester = string.Empty;
            string AlternateFromDate = string.Empty;
            string Sections = string.Empty;
            string alternateSchedule = "select * from semester_schedule where FromDate ='" + FromDate.ToString("MM/dd/yyyy") + "'";// " + sql1 + "";
            DataSet AlternateScheduleDs = d2.select_method_wo_parameter(alternateSchedule, "TEXT");
            if (AlternateScheduleDs.Tables[0].Rows.Count > 0)
            {
                for (int row = 0; row < AlternateScheduleDs.Tables[0].Rows.Count; row++)
                {
                    for (int col = 0; col < AlternateScheduleDs.Tables[0].Columns.Count; col++)
                    {
                        if (Strsql.Contains(AlternateScheduleDs.Tables[0].Columns[col].ColumnName))
                        {
                            string staffHour = Convert.ToString(AlternateScheduleDs.Tables[0].Rows[row][col]);
                            if (!string.IsNullOrEmpty(staffHour))
                            {
                                if (staffHour.Contains(StaffCode + "-"))
                                {
                                    AlternateUpdateQuery += "," + AlternateScheduleDs.Tables[0].Columns[col].ColumnName + "=''";
                                }
                            }
                        }
                    }
                    BatchYear = Convert.ToString(AlternateScheduleDs.Tables[0].Rows[row]["batch_year"]);
                    DegreeCode = Convert.ToString(AlternateScheduleDs.Tables[0].Rows[row]["degree_code"]);
                    Semester = Convert.ToString(AlternateScheduleDs.Tables[0].Rows[row]["semester"]);
                    AlternateFromDate = Convert.ToString(AlternateScheduleDs.Tables[0].Rows[row]["fromdate"]);
                    Sections = Convert.ToString(AlternateScheduleDs.Tables[0].Rows[row]["Sections"]);
                    if (string.IsNullOrEmpty(Sections.Trim()) || Convert.ToString(Sections.Trim()) == "-1")
                        Sections = string.Empty;
                    else
                        Sections = " and sections='" + Sections + "'";
                    if (!string.IsNullOrEmpty(AlternateUpdateQuery))
                    {
                        string q1 = "update alternate_schedule set " + AlternateUpdateQuery.TrimStart(',') + " where degree_code='" + DegreeCode + "' and batch_year='" + BatchYear + "' " + Sections + " and semester='" + Semester + "' and fromdate='" + FromDate.ToString("MM/dd/yyyy") + "'";
                        d2.update_method_wo_parameter(q1, "text");
                    }
                    AlternateUpdateQuery = string.Empty;
                }
            }
        }
        catch (Exception ex) { d2.sendErrorMail(ex, collegecode1, "Request Report"); }
    }
    //magesh 3.7.18
    protected bool getsaveColumnOrder()
    {
        bool boolSave = false;
        try
        {
            string strText = string.Empty;
            string strTextAlt = string.Empty;
            if (cblcolumnorder4.Items.Count > 0)
                strText = Convert.ToString(getCblSelectedValue(cblcolumnorder4));
            //if (cblcolumnorderAlt.Items.Count > 0)
            //    strTextAlt = Convert.ToString(getCblSelectedTextwithout(cblcolumnorderAlt));
            if (!string.IsNullOrEmpty(strText))
                strText = Convert.ToString(tborder4.Text);
            //if (!string.IsNullOrEmpty(strTextAlt))
            //    strTextAlt = Convert.ToString(txtallot.Text);
            string Usercollegecode = string.Empty;
            //if (Session["collegecode"] != null)
            //    Usercollegecode = Convert.ToString(Session["collegecode"]);
            if (ddl_rpt_collge.Items.Count > 0)
                Usercollegecode = Convert.ToString(ddl_rpt_collge.SelectedItem.Value);
            //string linkName = string.Empty;
            //if (ddlreport.Items.Count > 0 && ddlreport.SelectedItem.Text != "Select")
            //    linkName = Convert.ToString(ddlreport.SelectedItem.Text);
            if (!string.IsNullOrEmpty(Usercollegecode) && Usercollegecode != "0" && !string.IsNullOrEmpty(strText))
            {
                if (!string.IsNullOrEmpty(strTextAlt))
                    strText += "$" + strTextAlt;
                string SelQ = " if exists (select * from New_InsSettings where LinkName='gatepass column order'  and college_code='" + Usercollegecode + "' and user_code='" + usercode + "')update New_InsSettings set linkvalue='" + strText + "' where  LinkName='gatepass column order'  and college_code='" + Usercollegecode + "' and user_code='" + usercode + "' else insert into New_InsSettings(LinkName,linkvalue,user_code,college_code) values('gatepass column order','" + strText + "','" + usercode + "','" + Usercollegecode + "')";
                int insQ = d2.update_method_wo_parameter(SelQ, "Text");
                boolSave = true;
                // getOrderBySelectedColumn();



            }
            selectReportType();

            if (!boolSave)
            {

            }
        }
        catch { }
        return boolSave;
    }



    protected void selectReportType()
    {
        try
        {
            bool boolClear = false;
            bool boolcheck = false;
            string getName = string.Empty;
            // txtcolorder.Text = string.Empty;
            string strText = string.Empty;
            string Usercollegecode = string.Empty;
            //if (Session["collegecode"] != null)
            //    Usercollegecode = Convert.ToString(Session["collegecode"]);
            if (ddl_rpt_collge.Items.Count > 0)
                Usercollegecode = Convert.ToString(ddl_rpt_collge.SelectedItem.Value);

            string frstName = string.Empty;
            string sndName = string.Empty;
            ItemList_gate.Clear();
            if (!string.IsNullOrEmpty(Usercollegecode) && Usercollegecode != "0")
            {
                getName = d2.GetFunction("select LinkValue from New_InsSettings where LinkName='gatepass column order'  and college_code='" + Usercollegecode + "'and user_code='" + usercode + "' ");
                if (!string.IsNullOrEmpty(getName) && getName != "0")
                {
                    bool boolcolOrd = false;
                    string[] mainrpt = getName.Split('$');//for two type of column order
                    foreach (string firstN in mainrpt)
                    {
                        string[] splName = firstN.Split(',');
                        if (splName.Length > 0)
                        {
                            if (!boolcolOrd)
                            {
                                frstName = Convert.ToString(mainrpt[0]);
                                for (int sprow = 0; sprow < splName.Length; sprow++)
                                {
                                    for (int flt = 0; flt < cblcolumnorder4.Items.Count; flt++)
                                    {
                                        if (splName[sprow].Trim() == cblcolumnorder4.Items[flt].Text.Trim())
                                        {
                                            cblcolumnorder4.Items[flt].Selected = true;
                                            ItemList_gate.Add(splName[sprow]);
                                            boolcheck = true;

                                            int index = flt;

                                            // strText += cblcolumnorder.Items[flt].Text;
                                        }
                                    }
                                    boolcolOrd = true;
                                    boolClear = true;
                                }
                            }

                        }
                    }
                }
            }
            if (!boolClear)
            {
                tborder4.Text = string.Empty;

                for (int i = 0; i < cblcolumnorder4.Items.Count; i++)
                {
                    cblcolumnorder4.Items[i].Selected = false;
                }

                // cblcolumnorder4.Checked = false;
            }
            if (boolcheck)
            {
                tborder4.Text = frstName;

            }
        }
        catch { }
    }
    //magesh 3.7.18
    protected void deletealtertimetable()
    {
        try
        {
            Session["altertimetable"] = "1";
            string activerow = Fpspread5.ActiveSheetView.ActiveRow.ToString();
            string reqnumb = "";
            string req_no = "";
            string appstage = "";
            string allreason = "";
            string approvalstaffname = "";
            string m = Convert.ToString(Session["activerow"]);
            reqnumb = Convert.ToString(Fpspread5.Sheets[0].Cells[Convert.ToInt32(Session["activerow"]), 0].Tag);
            req_no = d2.GetFunction("select RequestCode from RQ_Requisition where RequestType=5 and RequisitionPK='" + reqnumb + "'");
            string query = "SELECT ReqAppNo,ReqAppStaffAppNo,LeaveMasterFK,CASE WHEN RequestType = 5 THEN 'Leave Request' END RequestType,RequestCode,ReqAppStatus,leaveChangeReason,CONVERT(VARCHAR(11),RequestDate,103) as RequestDate,CONVERT(VARCHAR(11),LeaveFrom,103) as LeaveFrom,CONVERT(VARCHAR(11),LeaveTo,103) as LeaveTo,CASE WHEN IsHalfDay = 1 THEN 'Half Day' ELSE 'Full Day' END Leave,case when  LeaveSession=1 then 'Morning' when LeaveSession=2 then 'Evening' else 'Full Day' end LeaveSession, Staff_Code,Staff_Name,(Select MasterValue FROM CO_MasterValues T WHERE GateReqReason = T.MasterCode) GateReqReason,HodAlterInchargeAppNo FROM RQ_Requisition R,staff_appl_master A,staffmaster M,leave_category C WHERE R.ReqAppNo = A.appl_id AND A.appl_no = M.appl_no and r.LeaveMasterFK = LeaveMasterPK  and RequestType=5 and RequestCode='" + req_no + "' and r.RequisitionPK='" + reqnumb + "'";
            ds = d2.select_method_wo_parameter(query, "Text");
            string staffcode = "select staff_name,staff_code from staff_appl_master sm ,staffmaster s where sm.appl_no=s.appl_no and sm.appl_id='" + ds.Tables[0].Rows[0]["ReqAppNo"].ToString() + "'";
            ds6 = d2.select_method_wo_parameter(staffcode, "text");
            if (ds6.Tables[0].Rows.Count > 0)
            {
                txt_staff_code.Text = ds6.Tables[0].Rows[0]["Staff_Code"].ToString();
                txt_staff_name.Text = ds6.Tables[0].Rows[0]["Staff_Name"].ToString();
            }
            string fromdate = ds.Tables[0].Rows[0]["LeaveFrom"].ToString();
            string[] ay1 = fromdate.Split('/');
            txt_frm.Text = ay1[0].ToString() + "/" + ay1[1].ToString() + "/" + ay1[2].ToString();
            string todate = ds.Tables[0].Rows[0]["LeaveTo"].ToString();
            string[] ay2 = todate.Split('/');
            txt_to.Text = ay2[0].ToString() + "/" + ay2[1].ToString() + "/" + ay2[2].ToString();
            degbatchsem();
            Session["altertimetable"] = "";
            Session["activerow"] = "";
        }
        catch
        {
        }
    }
    public void deletealtersubject()
    {
        //sp_appsub.Visible = false;
        DataTable dt = new DataTable();
        //   degbatchsem();
        string dayord = "";
        string fromdate = "";
        string todate = "";
        string batch = "";
        string deg = "";
        string sem = "";
        string sec = "";
        string day_value = "", srt_day = "", dt1 = "", dt2 = "", strsec = "";
        string[] sp = deg_batch_sem.Split('-');
        if (deg_batch_sem != "")
        {
            batch = sp[0];
            deg = sp[1];
            sem = sp[2];
            sec = sp[3];
            strsec = " and sections in('" + sec + "')";
        }
        else
        {
            grid_altersub.Visible = false;
            spn1.Visible = false;
            return;
        }
        stafcodealter = Convert.ToString(txt_staff_code.Text);
        dt.Columns.Add("Dummy0");
        dt.Columns.Add("Dummy");
        dt.Columns.Add("Dummy5");
        dt.Columns.Add("Dummy3");
        dt.Columns.Add("Dummy4");
        dt.Columns.Add("Dummy6");
        dt.Columns.Add("Dummy2");
        dt.Columns.Add("Dummy1");
        DataRow dr1;
        DateTime fromdate1 = new DateTime();
        fromdate1 = TextToDate(txt_frm);
        DateTime todate1 = new DateTime();
        todate1 = TextToDate(txt_to);
        string dayy = "";
        for (; fromdate1 <= todate1; )
        {
            startdate1 = fromdate1.ToString("dd/MM/yyyy");
            dayy = fromdate1.ToString("dddd");
            string[] dt1_split = startdate1.Split('/');
            dt1 = dt1_split[1] + "-" + dt1_split[0] + "-" + dt1_split[2];
            DateTime dtnew = new DateTime();
            dtnew = Convert.ToDateTime(dt1_split[1] + "/" + dt1_split[0] + "/" + dt1_split[2]);
            DateTime startdate = Convert.ToDateTime(d2.GetFunction("select start_date from seminfo where degree_code='" + deg + "' and semester='" + sem + "' and batch_year='" + batch + "' "));
            string start_dayorder = d2.GetFunction("select starting_dayorder from seminfo where degree_code='" + deg + "' and semester='" + sem + "' and batch_year='" + batch + "'");
            if (startdate.ToString() != "" && startdate.ToString() != null)
                day_value = startdate.ToString("ddd");
            con.Close();
            con.Open();
            SqlDataReader dr;
            cmd = new SqlCommand("Select No_of_hrs_per_day,schorder,nodays from periodattndschedule where degree_code='" + deg + "' and semester = '" + sem + "'", con);
            dr = cmd.ExecuteReader();
            dr.Read();
            if (dr.HasRows == true)
            {
                if ((dr["No_of_hrs_per_day"].ToString()) != "")
                {
                    intNHrs = Convert.ToInt32(dr["No_of_hrs_per_day"]);
                    SchOrder = Convert.ToInt32(dr["schorder"]);
                    nodays = Convert.ToInt32(dr["nodays"]);
                }
            }
            if (intNHrs > 0)
            {
                if (SchOrder != 0)
                    srt_day = (Convert.ToDateTime(dt1)).ToString("ddd");
                else
                {
                    string[] sps = dtnew.ToString().Split('/');
                    string curdate = sps[0] + '/' + sps[1] + '/' + sps[2];
                    srt_day = d2.findday(curdate.ToString(), deg, sem, batch, startdate.ToString(), nodays.ToString(), start_dayorder.ToString());
                }
            }
            string sql1 = "";
            string Strsql = "";
            for (int i_loop = 1; i_loop <= intNHrs; i_loop++)
            {
                if (sql1 == "")
                    sql1 = sql1 + srt_day + Convert.ToString(i_loop);
                else
                    sql1 = sql1 + " - " + srt_day + Convert.ToString(i_loop);
            }
            if (srt_day != "")
            {
                string altersech = "";
                string dayclu = srt_day;
                string value = "";
                string note = "";
                string day = "";
                hourstaff = 0;
                string[] array = sql1.Split('-');
                string add = "";
                for (int j = 0; j < array.Length; j++)
                {
                    dayord = d2.GetFunction("select " + array[j] + " from semester_schedule where degree_code='" + deg + "'and semester='" + sem + "' and batch_year='" + batch + "' and sections='" + sec + "'");
                    string[] dsplt = dayord.Split('-');
                    for (int k = 0; k < dsplt.Length; k++)
                    {
                        if (dsplt[k] == stafcodealter)
                        {
                            if (day == "")
                                day = array[j];
                            else
                                day = day + "-" + array[j];
                        }
                    }
                }
                string[] daysp = day.Split('-');
                for (int j = 0; j < daysp.Length; j++)
                {
                    string ss = "";
                    string qur = d2.GetFunction("select " + daysp[j] + " from Alternate_Schedule where  degree_code='" + deg + "' and batch_year='" + batch + "' " + strsec + " and semester='" + sem + "' and fromdate='" + dt1 + "' ");
                    if ((qur != ""))
                    {
                        if ((qur != "0"))
                        {
                            string qurs = d2.GetFunction("update   Alternate_Schedule set " + daysp[j] + "='' where      degree_code='" + deg + "' and batch_year='" + batch + "' " + strsec + " and semester='" + sem + "' and fromdate='" + dt1 + "'  and " + daysp[j] + "='" + qur + "' and lastrec=0");
                            string altertableqry = d2.GetFunction("update tbl_alter_schedule_Details set " + daysp[j] + "=''  where batch_year=" + batch + " and degree_code = " + deg + " and semester = " + sem + " and FromDate ='" + dt1 + "' " + strsec + " and lastrec='0'  and " + daysp[j] + "='" + qur + "'");
                        }
                    }





                    //dr1 = dt.NewRow();
                    //    string sub = "";
                    //    string sub1 = "";
                    //    string qur1 = "";
                    //    string stf1 = "";
                    //    string stf = "";
                    //    string stfcode = "";
                    //    string staf1code = "";
                    //    if ((qur != ""))
                    //    {
                    //        if ((qur != "0"))
                    //        {
                    //            string[] q = qur.Split('-');
                    //            qur1 = d2.GetFunction("select " + daysp[j] + " from semester_schedule where  degree_code='" + deg + "' and batch_year='" + batch + "' " + strsec + " and semester='" + sem + "' ");
                    //            string[] splq1 = qur1.Split(';');
                    //            for (int i = 0; i < splq1.Length; i++)
                    //            {
                    //                string[] q1 = splq1[i].Split('-');
                    //                //multiple staff time table alter
                    //                if (q1.Length > 1)
                    //                {
                    //                    for (int row = 1; row < q1.Length - 1; row++)
                    //                    {
                    //                        if (q1[row] == stafcodealter)
                    //                        {
                    //                            // string[] q1 = qur1.Split('-');
                    //                            sub = d2.GetFunction("select subject_name from subject where subject_no='" + q[0] + "'");
                    //                            sub1 = d2.GetFunction("select subject_name from subject where subject_no='" + q1[0] + "'");
                    //                            if (q1.Length >= 2)
                    //                            {
                    //                                stf = d2.GetFunction("select staff_name from staffmaster where staff_code='" + q[1] + "'");
                    //                                stfcode = Convert.ToString(txt_staff_code.Text);
                    //                                staf1code = Convert.ToString(q[1]);
                    //                            }
                    //                            stf1 = d2.GetFunction("select staff_name from staffmaster where staff_code='" + txt_staff_code.Text + "'");
                    //                            ss = daysp[j];
                    //                            tblday = daysp[j];
                    //                            dayfuction();
                    //                            ss = curday;
                    //                        }
                    //                    }
                    //                }
                    //            }
                    //        }
                    //        else
                    //        {
                    //            string tyyype = d2.GetFunction("select LinkValue  from InsSettings where LinkName like 'Staff Holiday By Staff Type%' and college_code='" + collegecode1 + "'");
                    //            if (tyyype == "0")
                    //            {
                    //                string code = d2.GetFunction("select category_code from stafftrans where staff_code='" + txt_staff_code.Text + "'");
                    //                string deptCode = d2.GetFunction("select dept_code from stafftrans where staff_code='" + txt_staff_code.Text + "'");//delsi1806
                    //                string get = d2.GetFunction("select holiday_date from holidayStaff where category_code ='" + code + "' and  holiday_date='" + dt1 + "' and college_code ='" + collegecode1 + "'and dept_code='" + deptCode + "'");
                    //                string sunday = dtnew.ToString("dddd");
                    //                string get1 = d2.GetFunction("select holiday_date from holidayStudents where semester='" + sem + "' and degree_code='" + deg + "' and holiday_date='" + dt1 + "'");
                    //                if (get != "0" || sunday == "Sunday")
                    //                    ss = dayy + "-Holiday";
                    //                else if (get1 != "0")
                    //                    ss = dayy + "-No Classes";
                    //                else
                    //                    ss = dayy;
                    //                stf = "-";
                    //                sub = "-";
                    //                stf1 = "-";
                    //                sub1 = "-";
                    //                stfcode = "-";
                    //                staf1code = "-";
                    //            }
                    //            else
                    //            {
                    //                string code = d2.GetFunction("select StfType from stafftrans where staff_code='" + txt_staff_code.Text + "'");
                    //                string deptCode = d2.GetFunction("select dept_code from stafftrans where staff_code='" + txt_staff_code.Text + "'");//delsi1806
                    //                string get = d2.GetFunction("select holiday_date from holidayStaff where StfType ='" + code + "' and  holiday_date='" + dt1 + "' and college_code ='" + collegecode1 + "'and dept_code='" + deptCode + "'");
                    //                string sunday = dtnew.ToString("dddd");
                    //                string get1 = d2.GetFunction("select holiday_date from holidayStudents where semester='" + sem + "' and degree_code='" + deg + "' and holiday_date='" + dt1 + "'");
                    //                if (get != "0" || sunday == "Sunday")
                    //                    ss = dayy + "-Holiday";
                    //                else if (get1 != "0")
                    //                    ss = dayy + "-No Classes";
                    //                else
                    //                    ss = dayy;
                    //                stf = "-";
                    //                sub = "-";
                    //                stf1 = "-";
                    //                sub1 = "-";
                    //                stfcode = "-";
                    //                staf1code = "-";
                    //            }
                    //        }
                    //    }
                    //    else
                    //    {
                    //        string code = d2.GetFunction("select StfType from stafftrans where staff_code='" + txt_staff_code.Text + "'");

                    //        string deptCode = d2.GetFunction("select dept_code from stafftrans where staff_code='" + txt_staff_code.Text + "'");//delsi1806
                    //        string get = d2.GetFunction("select holiday_date from holidayStaff where StfType ='" + code + "' and  holiday_date='" + dt1 + "' and college_code ='" + collegecode1 + "'and dept_code='" + deptCode + "'");
                    //        string sunday = dtnew.ToString("dddd");
                    //        string get1 = d2.GetFunction("select holiday_date from holidayStudents where semester='" + sem + "' and degree_code='" + deg + "' and holiday_date='" + dt1 + "'");
                    //        if (get != "0" || sunday == "Sunday")
                    //            ss = dayy + "-Holiday";
                    //        else if (get1 != "0")
                    //            ss = dayy + "-No Classes";
                    //        else
                    //            ss = dayy;
                    //        stf = "-";
                    //        sub = "-";
                    //        stf1 = "-";
                    //        sub1 = "-";
                    //        stfcode = "-";
                    //        staf1code = "-";
                    //    }
                    //    if (stf != "-" && sub != "-" && stf1 != "-" && sub1 != "-" && stfcode != "-" && staf1code != "-")
                    //    {
                    //        if (grid_altersub.Rows.Count > 0)
                    //        {
                    //            foreach (GridViewRow item in grid_altersub.Rows)
                    //            {
                    //                Label date = (Label)item.FindControl("txtday0");
                    //                Label dayhr = (Label)item.FindControl("txtday1");
                    //                Label stafcode = (Label)item.FindControl("txtday22");
                    //                Label staff = (Label)item.FindControl("txtday2");
                    //                Label subj = (Label)item.FindControl("txtday3");
                    //                Label alterstafcode = (Label)item.FindControl("txtday44");
                    //                Label alterstaf = (Label)item.FindControl("txtday4");
                    //                Label altersub = (Label)item.FindControl("txtday5");
                    //                dr1 = dt.NewRow();
                    //                dr1[0] = Convert.ToString(date.Text);
                    //                dr1[1] = Convert.ToString(dayhr.Text);
                    //                dr1[2] = Convert.ToString(stafcode.Text);
                    //                dr1[3] = Convert.ToString(staff.Text);
                    //                dr1[4] = Convert.ToString(subj.Text);
                    //                dr1[5] = Convert.ToString(alterstafcode.Text);
                    //                dr1[6] = Convert.ToString(alterstaf.Text);
                    //                dr1[7] = Convert.ToString(altersub.Text);
                    //                dt.Rows.Add(dr1);
                    //            }
                    //        }
                    //        dr1 = dt.NewRow();
                    //        dr1[0] = startdate1;
                    //        dr1[1] = ss;
                    //        dr1[2] = stfcode;
                    //        dr1[3] = stf1;
                    //        dr1[4] = sub1;
                    //        dr1[5] = staf1code;
                    //        dr1[6] = stf;
                    //        dr1[7] = sub;
                    //        dt.Rows.Add(dr1);
                    //    }
                    //    if (dt.Rows.Count > 0)
                    //    {
                    //        grid_altersub.DataSource = dt;
                    //        grid_altersub.DataBind();
                    //        grid_altersub.Visible = true;
                    //        spn1.Visible = true;
                    //    }
                    //    //    else
                    //    //{
                    //    //    spn1.Visible = false;
                    //    //    DataTable dtdummyRow = new DataTable();//barath 29.12.17
                    //    //    grid_altersub.DataSource = dtdummyRow;
                    //    //    grid_altersub.DataBind();
                    //    //}
                    //    //else if (grid_altersub.Rows.Count == 0 && dt.Rows.Count == 0)
                    //    //{
                    //    //        spn1.Visible = false;
                    //    //        DataTable dtdummyRow = new DataTable();//barath 29.12.17
                    //    //        grid_altersub.DataSource = dtdummyRow;
                    //    //        grid_altersub.DataBind();

                    //    //}
                    //    else
                    //        spn1.Visible = false;
                    //    dt.Clear();
                }
            }
            fromdate1 = fromdate1.AddDays(1);
        }
    }

    //added by Mullai
    protected void lnkdownlaodattachement_Click(object sender, EventArgs e)
    {
        string req = Convert.ToString(TextBox1.Text);

        byte[] bytes = null;
        string fileName = req;
        string contentType = string.Empty;
        string constr = ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString;
        using (SqlConnection con = new SqlConnection(constr))
        {
            using (SqlCommand cmd = new SqlCommand())
            {
                cmd.CommandText = "select attachments,contenttype from RQ_Requisition where RequisitionPK='" + req + "' ";
                // cmd.Parameters.AddWithValue("@attachments", id);
                cmd.Connection = con;
                con.Open();
                using (SqlDataReader sdr = cmd.ExecuteReader())
                {
                    if (sdr.Read())
                    {

                        bytes = (byte[])sdr["attachments"];
                        contentType = sdr["ContentType"].ToString();

                    }
                }
                con.Close();
            }
        }
        Response.Clear();
        Response.Buffer = true;
        Response.Charset = "";
        Response.Cache.SetCacheability(HttpCacheability.NoCache);
        Response.ContentType = contentType;
        // ("Content-Disposition", "attachment; filename=" + fileName);
        Response.AppendHeader("Content-Disposition", "attachment; fileName=" + fileName);
        Response.BinaryWrite(bytes);
        HttpContext.Current.Response.Flush(); // Sends all currently buffered output to the client.
        HttpContext.Current.Response.SuppressContent = true;  // Gets or sets a value indicating whether to send HTTP content to the client.
        HttpContext.Current.ApplicationInstance.CompleteRequest();
    }
    //****

    protected void btnselecteddatecancel_Click(object sender, EventArgs e)
    {
        try
        {

            double checkvalue = 0;
            string activerow = "";
            string det = "";
            string appstatus = "";
            bool saveflage = false;
            string deletepermission = string.Empty;
            string usergrpcode = string.Empty;
            string query = "";
            string Master1 = "";

            string currentdate = DateTime.Now.ToString("dd/MM/yyyy");
            string[] ay = currentdate.Split('/');
            DateTime dt = new DateTime();
            dt = Convert.ToDateTime(ay[1] + "/" + ay[0] + "/" + ay[2]);

            if ((Session["group_code"].ToString().Trim() != "") && (Session["group_code"].ToString().Trim() != "0") && (Session["group_code"].ToString().Trim() != "-1"))
            {
                string group = Session["group_code"].ToString();
                if (group.Contains(';'))
                {
                    string[] group_semi = group.Split(';');
                    Master1 = group_semi[0].ToString();
                    query = "select * from Master_Settings where settings ='Leave Delete Permission' and group_code ='" + Master1 + "'";
                }
                else
                    query = "select * from Master_Settings where settings ='Leave Delete Permission' and group_code ='" + group + "'"; // poo 11.12.17
            }
            else
            {
                query = "select * from Master_Settings where settings ='Leave Delete Permission' AND usercode='" + usercode + "'";
            }

            DataSet qrycheck = new DataSet();
            qrycheck.Clear();
            qrycheck = d2.select_method_wo_parameter(query, "text");

            if (qrycheck.Tables[0].Rows.Count > 0)
            {
                for (int i = 0; i < qrycheck.Tables[0].Rows.Count; i++)
                {
                    string val = Convert.ToString(qrycheck.Tables[0].Rows[i]["value"]);
                    deletepermission = val;
                }
            }


            //chkrelived = 0;
            //double value1 = 0;
            //double value2 = 0;
            //string stage1 = "";
            //string getappid = "";
            //string pkcode = "";
            //string sqlcmd = "";
            //string stg = "";
            //string date = DateTime.Now.ToString("MM/dd/yyyy");
            //string Requisition_no_lv = Convert.ToString(txt_rqstn_leave.Text);
            //string req = Convert.ToString(TextBox7.Text);
            //string changereason = Convert.ToString(txt_reasonchng.Text);
            //string cstaff = d2.GetFunction(" select ReqStaffAppNo from RQ_Requisition where RequestType=5 and RequisitionPK='" + req + "'");
            //string lonstaff = d2.GetFunction("select sm.appl_id from staff_appl_master sm,staffmaster s where sm.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");

            //// sqlcmd = "select * from staff_leave_dates where requestfk='" + req + "'";
            //sqlcmd = "select * from RQ_Requisition where RequestType=5 and RequisitionPK='" + req + "'";
            //ds = d2.select_method_wo_parameter(sqlcmd, "Text");
            //DataView dv = new DataView();
            //if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            //{
            //    string fromdate = Convert.ToString(ds.Tables[0].Rows[0]["LeaveFrom"]);
            //    string todate = Convert.ToString(ds.Tables[0].Rows[0]["LeaveTo"]);

            //    if (fromdate != todate)//deljus
            //    {
            //        int counts = 0;
            //        for (int j = 0; j < GV1.Rows.Count; j++)
            //        {
            //            string monyear = string.Empty;
            //            string dateval = string.Empty;
            //            TextBox dateeeee = (TextBox)GV1.Rows[j].FindControl("txtdate");
            //            string getdate = Convert.ToString(dateeeee.Text);
            //            if (getdate.Contains('/'))
            //            {
            //                string[] splitdate = getdate.Split('/');
            //                getdate = Convert.ToString(splitdate[1]) + "/" + Convert.ToString(splitdate[0]) + "/" + Convert.ToString(splitdate[2]);
            //                monyear = Convert.ToString(splitdate[1]) + "/" + Convert.ToString(splitdate[2]);
            //                dateval = Convert.ToString(splitdate[0]);
            //            }
            //            string session = d2.GetFunction("select SessionType from staff_leave_dates where requestfk='" + req + "' and LeaveDate='" + getdate + "'");
            //            string isApprovecheck = d2.GetFunction("select isApproved from staff_leave_dates where requestfk='" + req + "' and LeaveDate='" + getdate + "'");
            //            if (isApprovecheck != "1")
            //            {
            //                if (session != "")
            //                {

            //                    if (session == "0")
            //                    {

            //                        CheckBox chkmrng = (CheckBox)GV1.Rows[j].FindControl("chk_mrng");
            //                        CheckBox chkevng = (CheckBox)GV1.Rows[j].FindControl("chk_evng");
            //                        if (chkmrng.Checked == false && chkevng.Checked == false)
            //                        {
            //                            // string delquery = "delete staff_leave_dates where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
            //                            string updateqry = "update staff_leave_dates set checkdel='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
            //                            counts = d2.update_method_wo_parameter(updateqry, "text");


            //                        }
            //                    }
            //                    if (session == "1")
            //                    {
            //                        CheckBox chkmrng = (CheckBox)GV1.Rows[j].FindControl("chk_mrng");
            //                        CheckBox chkevng = (CheckBox)GV1.Rows[j].FindControl("chk_evng");
            //                        if (chkmrng.Checked == false && chkevng.Checked == false)
            //                        {
            //                            // string delquery = "delete staff_leave_dates where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
            //                            string updateqry = "update staff_leave_dates set checkdel='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
            //                            counts = d2.update_method_wo_parameter(updateqry, "text");


            //                        }
            //                    }
            //                    if (session == "2")
            //                    {
            //                        CheckBox chkmrng = (CheckBox)GV1.Rows[j].FindControl("chk_mrng");
            //                        CheckBox chkevng = (CheckBox)GV1.Rows[j].FindControl("chk_evng");
            //                        if (chkmrng.Checked == false && chkevng.Checked == false)
            //                        {
            //                            string updateqry = "update staff_leave_dates set checkdel='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
            //                            // string delquery = "delete staff_leave_dates where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
            //                            counts = d2.update_method_wo_parameter(updateqry, "text");


            //                        }
            //                    }

            //                }
            //            }
            //            else if (isApprovecheck == "1")
            //            {
            //                string leavetype = "";
            //                if (session != "")
            //                {
            //                    if (session == "0")
            //                    {

            //                        CheckBox chkmrng = (CheckBox)GV1.Rows[j].FindControl("chk_mrng");
            //                        CheckBox chkevng = (CheckBox)GV1.Rows[j].FindControl("chk_evng");
            //                        if (chkmrng.Checked == false && chkevng.Checked == false)
            //                        {

            //                            string updateqry = "update staff_leave_dates set checkdel='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
            //                            counts = d2.update_method_wo_parameter(updateqry, "text");
            //                            string firsthalf = string.Empty;
            //                            string secondhalf = string.Empty;
            //                            string getpresentapp = d2.GetFunction(" select [" + dateval + "] from staff_attnd where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'");
            //                            if (getpresentapp != null && getpresentapp != "" && getpresentapp != "0")
            //                            {
            //                                if (getpresentapp.Contains('-'))
            //                                {
            //                                    string[] splitval = getpresentapp.Split('-');
            //                                    firsthalf = Convert.ToString(splitval[0]);
            //                                    secondhalf = Convert.ToString(splitval[1]);
            //                                }
            //                                leavetype = "";

            //                            }

            //                            string updateq = "update staff_attnd set [" + dateval + "]='" + leavetype + "' where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'";
            //                            int upcnt = d2.update_method_wo_parameter(updateq, "text");


            //                        }
            //                        else if (chkmrng.Checked == true && chkevng.Checked == false)
            //                        {
            //                            string updateqry = "update staff_leave_dates set checkdel='1',SessionType='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
            //                            counts = d2.update_method_wo_parameter(updateqry, "text");
            //                            string firsthalf = string.Empty;
            //                            string secondhalf = string.Empty;
            //                            string getpresentapp = d2.GetFunction(" select [" + dateval + "] from staff_attnd where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'");
            //                            if (getpresentapp != null && getpresentapp != "" && getpresentapp != "0")
            //                            {
            //                                if (getpresentapp.Contains('-'))
            //                                {
            //                                    string[] splitval = getpresentapp.Split('-');
            //                                    firsthalf = Convert.ToString(splitval[0]);
            //                                    secondhalf = Convert.ToString(splitval[1]);
            //                                }
            //                                leavetype = firsthalf + "-";

            //                            }
            //                            string updateq = "update staff_attnd set [" + dateval + "]='" + leavetype + "' where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'";
            //                            int upcnt = d2.update_method_wo_parameter(updateq, "text");

            //                        }
            //                        else if (chkmrng.Checked == false && chkevng.Checked == true)
            //                        {
            //                            string updateqry = "update staff_leave_dates set checkdel='1',SessionType='2' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
            //                            counts = d2.update_method_wo_parameter(updateqry, "text");
            //                            string firsthalf = string.Empty;
            //                            string secondhalf = string.Empty;
            //                            string getpresentapp = d2.GetFunction(" select [" + dateval + "] from staff_attnd where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'");
            //                            if (getpresentapp != null && getpresentapp != "" && getpresentapp != "0")
            //                            {
            //                                if (getpresentapp.Contains('-'))
            //                                {
            //                                    string[] splitval = getpresentapp.Split('-');
            //                                    firsthalf = Convert.ToString(splitval[0]);
            //                                    secondhalf = Convert.ToString(splitval[1]);
            //                                }

            //                                leavetype = "-" + secondhalf;
            //                            }
            //                            string updateq = "update staff_attnd set [" + dateval + "]='" + leavetype + "' where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'";
            //                            int upcnt = d2.update_method_wo_parameter(updateq, "text");

            //                        }

            //                    }
            //                    if (session == "1")
            //                    {
            //                        CheckBox chkmrng = (CheckBox)GV1.Rows[j].FindControl("chk_mrng");
            //                        CheckBox chkevng = (CheckBox)GV1.Rows[j].FindControl("chk_evng");
            //                        if (chkmrng.Checked == false && chkevng.Checked == false)
            //                        {

            //                            string updateqry = "update staff_leave_dates set checkdel='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
            //                            counts = d2.update_method_wo_parameter(updateqry, "text");
            //                            string firsthalf = string.Empty;
            //                            string secondhalf = string.Empty;
            //                            string getpresentapp = d2.GetFunction(" select [" + dateval + "] from staff_attnd where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'");
            //                            if (getpresentapp != null && getpresentapp != "" && getpresentapp != "0")
            //                            {
            //                                if (getpresentapp.Contains('-'))
            //                                {
            //                                    string[] splitval = getpresentapp.Split('-');
            //                                    firsthalf = Convert.ToString(splitval[0]);
            //                                    secondhalf = Convert.ToString(splitval[1]);
            //                                }
            //                                leavetype = "-" + secondhalf;

            //                            }

            //                            string updateq = "update staff_attnd set [" + dateval + "]='" + leavetype + "' where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'";
            //                            int upcnt = d2.update_method_wo_parameter(updateq, "text");


            //                        }
            //                    }
            //                    if (session == "2")
            //                    {
            //                        CheckBox chkmrng = (CheckBox)GV1.Rows[j].FindControl("chk_mrng");
            //                        CheckBox chkevng = (CheckBox)GV1.Rows[j].FindControl("chk_evng");
            //                        if (chkmrng.Checked == false && chkevng.Checked == false)
            //                        {
            //                            string updateqry = "update staff_leave_dates set checkdel='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";

            //                            counts = d2.update_method_wo_parameter(updateqry, "text");

            //                            string firsthalf = string.Empty;
            //                            string secondhalf = string.Empty;
            //                            string getpresentapp = d2.GetFunction(" select [" + dateval + "] from staff_attnd where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'");
            //                            if (getpresentapp != null && getpresentapp != "" && getpresentapp != "0")
            //                            {
            //                                if (getpresentapp.Contains('-'))
            //                                {
            //                                    string[] splitval = getpresentapp.Split('-');
            //                                    firsthalf = Convert.ToString(splitval[0]);
            //                                    secondhalf = Convert.ToString(splitval[1]);
            //                                }
            //                                leavetype = firsthalf + "-";

            //                            }

            //                            string updateq = "update staff_attnd set [" + dateval + "]='" + leavetype + "' where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'";
            //                            int upcnt = d2.update_method_wo_parameter(updateq, "text");

            //                        }
            //                    }

            //                }


            //            }
            //        }
            //        if (counts > 0)
            //        {
            //            imgdiv2.Visible = true;
            //            lbl_alert.Text = "Cancelled Successfully";

            //        }

            //    }
            //    else
            //    {
            //        imgdiv2.Visible = true;
            //        lbl_alert.Text = "Delete Only For Multiple Dates";
            //    }

            //}
            //else
            //{
            //    imgdiv2.Visible = true;
            //    lbl_alert.Text = "No Records Found";
            //}


            if (deletepermission == "1")//delsijustin28
            {
                chkrelived = 0;
                double value1 = 0;
                double value2 = 0;
                string stage1 = "";
                string getappid = "";
                string pkcode = "";
                string sqlcmd = "";
                string stg = "";
                string date = DateTime.Now.ToString("MM/dd/yyyy");
                string Requisition_no_lv = Convert.ToString(txt_rqstn_leave.Text);
                string req = Convert.ToString(TextBox7.Text);
                string changereason = Convert.ToString(txt_reasonchng.Text);
                string cstaff = d2.GetFunction(" select ReqStaffAppNo from RQ_Requisition where RequestType=5 and RequisitionPK='" + req + "'");
                string lonstaff = d2.GetFunction("select sm.appl_id from staff_appl_master sm,staffmaster s where sm.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");

                // sqlcmd = "select * from staff_leave_dates where requestfk='" + req + "'";

                string StaffCode = d2.GetFunction("select distinct s.staff_code from staff_appl_master sa, staffmaster s,RQ_Requisition rq where sa.appl_id=rq.ReqAppNo and sa.appl_no=s.appl_no and rq.RequisitionPK='" + req + "'");
                sqlcmd = "select * from RQ_Requisition where RequestType=5 and RequisitionPK='" + req + "'";
                ds = d2.select_method_wo_parameter(sqlcmd, "Text");
                DataView dv = new DataView();
                if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                {
                    string fromdate = Convert.ToString(ds.Tables[0].Rows[0]["LeaveFrom"]);
                    string todate = Convert.ToString(ds.Tables[0].Rows[0]["LeaveTo"]);
                    Boolean alterdelte = false;

                    if (fromdate != todate)//deljus
                    {
                        int counts = 0;
                        for (int j = 0; j < GV1.Rows.Count; j++)
                        {
                            string monyear = string.Empty;
                            string dateval = string.Empty;
                            TextBox dateeeee = (TextBox)GV1.Rows[j].FindControl("txtdate");
                            string getdate = Convert.ToString(dateeeee.Text);
                            if (getdate.Contains('/'))
                            {
                                string[] splitdate = getdate.Split('/');
                                getdate = Convert.ToString(splitdate[1]) + "/" + Convert.ToString(splitdate[0]) + "/" + Convert.ToString(splitdate[2]);
                                monyear = Convert.ToString(splitdate[1]) + "/" + Convert.ToString(splitdate[2]);
                                dateval = Convert.ToString(splitdate[0]);
                            }
                            dateval = dateval.StartsWith("0") ? dateval.Substring(1) : dateval;
                            string session = d2.GetFunction("select SessionType from staff_leave_dates where requestfk='" + req + "' and LeaveDate='" + getdate + "'");
                            string isApprovecheck = d2.GetFunction("select isApproved from staff_leave_dates where requestfk='" + req + "' and LeaveDate='" + getdate + "'");
                            if (isApprovecheck != "1")
                            {
                                if (session != "")
                                {
                                    alterdelte = true;

                                    if (session == "0")
                                    {

                                        CheckBox chkmrng = (CheckBox)GV1.Rows[j].FindControl("chk_mrng");
                                        CheckBox chkevng = (CheckBox)GV1.Rows[j].FindControl("chk_evng");
                                        if (chkmrng.Checked == false && chkevng.Checked == false)
                                        {
                                            // string delquery = "delete staff_leave_dates where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                            string updateqry = "update staff_leave_dates set checkdel='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                            counts = d2.update_method_wo_parameter(updateqry, "text");


                                        }
                                    }
                                    if (session == "1")
                                    {
                                        CheckBox chkmrng = (CheckBox)GV1.Rows[j].FindControl("chk_mrng");
                                        CheckBox chkevng = (CheckBox)GV1.Rows[j].FindControl("chk_evng");
                                        if (chkmrng.Checked == false && chkevng.Checked == false)
                                        {
                                            // string delquery = "delete staff_leave_dates where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                            string updateqry = "update staff_leave_dates set checkdel='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                            counts = d2.update_method_wo_parameter(updateqry, "text");


                                        }
                                    }
                                    if (session == "2")
                                    {
                                        CheckBox chkmrng = (CheckBox)GV1.Rows[j].FindControl("chk_mrng");
                                        CheckBox chkevng = (CheckBox)GV1.Rows[j].FindControl("chk_evng");
                                        if (chkmrng.Checked == false && chkevng.Checked == false)
                                        {
                                            string updateqry = "update staff_leave_dates set checkdel='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                            // string delquery = "delete staff_leave_dates where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                            counts = d2.update_method_wo_parameter(updateqry, "text");


                                        }
                                    }

                                }

                            }
                            else if (isApprovecheck == "1")
                            {
                                string leavetype = "";
                                if (session != "")
                                {
                                    alterdelte = true;
                                    if (session == "0")
                                    {

                                        CheckBox chkmrng = (CheckBox)GV1.Rows[j].FindControl("chk_mrng");
                                        CheckBox chkevng = (CheckBox)GV1.Rows[j].FindControl("chk_evng");
                                        if (chkmrng.Checked == false && chkevng.Checked == false)
                                        {

                                            string updateqry = "update staff_leave_dates set checkdel='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                            counts = d2.update_method_wo_parameter(updateqry, "text");
                                            string firsthalf = string.Empty;
                                            string secondhalf = string.Empty;
                                            string getpresentapp = d2.GetFunction(" select [" + dateval + "] from staff_attnd where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'");
                                            if (getpresentapp != null && getpresentapp != "" && getpresentapp != "0")
                                            {
                                                if (getpresentapp.Contains('-'))
                                                {
                                                    string[] splitval = getpresentapp.Split('-');
                                                    firsthalf = Convert.ToString(splitval[0]);
                                                    secondhalf = Convert.ToString(splitval[1]);
                                                }
                                                leavetype = "";

                                            }

                                            string updateq = "update staff_attnd set [" + dateval + "]='" + leavetype + "' where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'";
                                            int upcnt = d2.update_method_wo_parameter(updateq, "text");


                                        }
                                        else if (chkmrng.Checked == true && chkevng.Checked == false)
                                        {
                                            string updateqry = "update staff_leave_dates set checkdel='1',SessionType='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                            counts = d2.update_method_wo_parameter(updateqry, "text");
                                            string firsthalf = string.Empty;
                                            string secondhalf = string.Empty;
                                            string getpresentapp = d2.GetFunction(" select [" + dateval + "] from staff_attnd where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'");
                                            if (getpresentapp != null && getpresentapp != "" && getpresentapp != "0")
                                            {
                                                if (getpresentapp.Contains('-'))
                                                {
                                                    string[] splitval = getpresentapp.Split('-');
                                                    firsthalf = Convert.ToString(splitval[0]);
                                                    secondhalf = Convert.ToString(splitval[1]);
                                                }
                                                leavetype = firsthalf + "-";

                                            }
                                            string updateq = "update staff_attnd set [" + dateval + "]='" + leavetype + "' where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'";
                                            int upcnt = d2.update_method_wo_parameter(updateq, "text");

                                        }
                                        else if (chkmrng.Checked == false && chkevng.Checked == true)
                                        {
                                            string updateqry = "update staff_leave_dates set checkdel='1',SessionType='2' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                            counts = d2.update_method_wo_parameter(updateqry, "text");
                                            string firsthalf = string.Empty;
                                            string secondhalf = string.Empty;
                                            string getpresentapp = d2.GetFunction(" select [" + dateval + "] from staff_attnd where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'");
                                            if (getpresentapp != null && getpresentapp != "" && getpresentapp != "0")
                                            {
                                                if (getpresentapp.Contains('-'))
                                                {
                                                    string[] splitval = getpresentapp.Split('-');
                                                    firsthalf = Convert.ToString(splitval[0]);
                                                    secondhalf = Convert.ToString(splitval[1]);
                                                }

                                                leavetype = "-" + secondhalf;
                                            }
                                            string updateq = "update staff_attnd set [" + dateval + "]='" + leavetype + "' where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'";
                                            int upcnt = d2.update_method_wo_parameter(updateq, "text");

                                        }

                                    }
                                    if (session == "1")
                                    {
                                        CheckBox chkmrng = (CheckBox)GV1.Rows[j].FindControl("chk_mrng");
                                        CheckBox chkevng = (CheckBox)GV1.Rows[j].FindControl("chk_evng");
                                        if (chkmrng.Checked == false && chkevng.Checked == false)
                                        {

                                            string updateqry = "update staff_leave_dates set checkdel='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                            counts = d2.update_method_wo_parameter(updateqry, "text");
                                            string firsthalf = string.Empty;
                                            string secondhalf = string.Empty;
                                            string getpresentapp = d2.GetFunction(" select [" + dateval + "] from staff_attnd where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'");
                                            if (getpresentapp != null && getpresentapp != "" && getpresentapp != "0")
                                            {
                                                if (getpresentapp.Contains('-'))
                                                {
                                                    string[] splitval = getpresentapp.Split('-');
                                                    firsthalf = Convert.ToString(splitval[0]);
                                                    secondhalf = Convert.ToString(splitval[1]);
                                                }
                                                leavetype = "-" + secondhalf;

                                            }

                                            string updateq = "update staff_attnd set [" + dateval + "]='" + leavetype + "' where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'";
                                            int upcnt = d2.update_method_wo_parameter(updateq, "text");


                                        }
                                    }
                                    if (session == "2")
                                    {
                                        CheckBox chkmrng = (CheckBox)GV1.Rows[j].FindControl("chk_mrng");
                                        CheckBox chkevng = (CheckBox)GV1.Rows[j].FindControl("chk_evng");
                                        if (chkmrng.Checked == false && chkevng.Checked == false)
                                        {
                                            string updateqry = "update staff_leave_dates set checkdel='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";

                                            counts = d2.update_method_wo_parameter(updateqry, "text");

                                            string firsthalf = string.Empty;
                                            string secondhalf = string.Empty;
                                            string getpresentapp = d2.GetFunction(" select [" + dateval + "] from staff_attnd where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'");
                                            if (getpresentapp != null && getpresentapp != "" && getpresentapp != "0")
                                            {
                                                if (getpresentapp.Contains('-'))
                                                {
                                                    string[] splitval = getpresentapp.Split('-');
                                                    firsthalf = Convert.ToString(splitval[0]);
                                                    secondhalf = Convert.ToString(splitval[1]);
                                                }
                                                leavetype = firsthalf + "-";

                                            }

                                            string updateq = "update staff_attnd set [" + dateval + "]='" + leavetype + "' where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'";
                                            int upcnt = d2.update_method_wo_parameter(updateq, "text");

                                        }
                                    }

                                }


                            }
                        }
                        if (counts > 0)
                        {
                            imgdiv2.Visible = true;
                            lbl_alert.Text = "Cancelled Successfully";

                        }
                        if (alterdelte == true)
                            alterremovenew(StaffCode);

                    }
                    else
                    {
                        if (fromdate == todate)
                        {
                            string selQ = " select Requestcode,ReqApproveStage,ReqAppStatus from RQ_Requisition where RequisitionPK='" + req + "'";
                            ds.Clear();
                            ds = d2.select_method_wo_parameter(selQ, "Text");
                            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                            {
                                det = Convert.ToString(ds.Tables[0].Rows[0]["Requestcode"]);
                                appstatus = Convert.ToString(ds.Tables[0].Rows[0]["ReqAppStatus"]);//ReqApproveStage barath 15.11.17

                                if (appstatus == "0")
                                {
                                    // deletealtertimetable();
                                    alterremovenew(StaffCode);
                                    updateAdd_attn(req); // poo 28.11.17

                                    string deleteQur = "delete RQ_RequestionApprove where RequisitionFK='" + req + "'";
                                    int valss = d2.update_method_wo_parameter(deleteQur, "Text");

                                    string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + req + "'";
                                    int vals = d2.update_method_wo_parameter(del_query, "Text");

                                    string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + req + "'";
                                    int values = d2.update_method_wo_parameter(del_query1, "Text");
                                    saveflage = true;
                                    imgdiv2.Visible = true;
                                    lbl_alert.Text = "Cancel Successfully";

                                }

                                if (appstatus == "1")
                                {
                                    //barath 15.11.17
                                    int Settings = 0;
                                    int.TryParse(Convert.ToString(d2.GetFunction(" select LinkValue from New_InsSettings where LinkName='Approval leave Cancel Rights' and user_code ='" + usercode + "'")), out Settings);//and college_code ='" + ddl_rpt_collge.SelectedItem.Value + "' delsi2410
                                    string SettingsQry = " and LeaveFrom<='" + dt.ToString("MM/dd/yyyy") + "'";
                                    if (Settings == 1)
                                        SettingsQry = " ";
                                    string delcheck = d2.GetFunction("select CONVERT(varchar(10), LeaveFrom,101)LeaveFrom from RQ_Requisition where RequestType=5 and RequisitionPK='" + req + "'" + SettingsQry + "");
                                    if (Settings == 1)
                                    {
                                        updateAdd_attn(req); // poo 29.11.17
                                        //  AlternateScheduleRemove(req, Convert.ToDateTime(delcheck));//barath 08.12.17

                                        alterremovenew(StaffCode);
                                        string update_query = "update RQ_Requisition set ReqAppStatus='3' where RequisitionPK='" + req + "'";
                                        d2.update_method_wo_parameter(update_query, "Text");

                                        imgdiv2.Visible = true;
                                        lbl_alert.Text = "Cancel Successfully";
                                        saveflage = true;//delsiref1407
                                    }
                                    else
                                    {
                                        if (delcheck == "0")
                                        {
                                            //  deletealtertimetable();
                                            alterremovenew(StaffCode);
                                            updateAdd_attn(req); // poo
                                            string deleteQur = "delete RQ_RequestionApprove where RequisitionFK='" + req + "'";
                                            int valss = d2.update_method_wo_parameter(deleteQur, "Text");
                                            string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + req + "'";
                                            d2.update_method_wo_parameter(del_query1, "Text");

                                            string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + req + "'";
                                            d2.update_method_wo_parameter(del_query, "Text");
                                            saveflage = true;

                                        }
                                    }


                                }


                            }


                        }
                    }


                }
                else
                {
                    imgdiv2.Visible = true;
                    lbl_alert.Text = "No Records Found";
                }
            }
            else if (deletepermission == "2")
            {
                chkrelived = 0;
                double value1 = 0;
                double value2 = 0;
                string stage1 = "";
                string getappid = "";
                string pkcode = "";
                string sqlcmd = "";
                string stg = "";
                string date = DateTime.Now.ToString("MM/dd/yyyy");
                string Requisition_no_lv = Convert.ToString(txt_rqstn_leave.Text);
                string req = Convert.ToString(TextBox7.Text);
                string changereason = Convert.ToString(txt_reasonchng.Text);
                string cstaff = d2.GetFunction(" select ReqStaffAppNo from RQ_Requisition where RequestType=5 and RequisitionPK='" + req + "'");
                string lonstaff = d2.GetFunction("select sm.appl_id from staff_appl_master sm,staffmaster s where sm.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");

                string StaffCode = d2.GetFunction("select distinct s.staff_code from staff_appl_master sa, staffmaster s,RQ_Requisition rq where sa.appl_id=rq.ReqAppNo and sa.appl_no=s.appl_no and rq.RequisitionPK='" + req + "'");
                string delflag = d2.GetFunction("select deleteflag from RQ_Requisition where RequestType=5 and RequisitionPK='" + req + "'");
                if (delflag == "1")
                {

                    sqlcmd = "select * from RQ_Requisition where RequestType=5 and RequisitionPK='" + req + "'";
                    ds = d2.select_method_wo_parameter(sqlcmd, "Text");
                    DataView dv = new DataView();
                    if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                    {
                        int countval = 0;
                        string fromdate = Convert.ToString(ds.Tables[0].Rows[0]["LeaveFrom"]);
                        string todate = Convert.ToString(ds.Tables[0].Rows[0]["LeaveTo"]);
                        Boolean alterdelte = false;
                        if (fromdate != todate)//deljus
                        {
                            int counts = 0;
                            for (int j = 0; j < GV1.Rows.Count; j++)
                            {
                                string monyear = string.Empty;
                                string dateval = string.Empty;
                                TextBox dateeeee = (TextBox)GV1.Rows[j].FindControl("txtdate");
                                string getdate = Convert.ToString(dateeeee.Text);
                                if (getdate.Contains('/'))
                                {
                                    string[] splitdate = getdate.Split('/');
                                    getdate = Convert.ToString(splitdate[1]) + "/" + Convert.ToString(splitdate[0]) + "/" + Convert.ToString(splitdate[2]);
                                    monyear = Convert.ToString(splitdate[1]) + "/" + Convert.ToString(splitdate[2]);
                                    dateval = Convert.ToString(splitdate[0]);
                                }
                                dateval = dateval.StartsWith("0") ? dateval.Substring(1) : dateval;
                                string session = d2.GetFunction("select SessionType from staff_leave_dates where requestfk='" + req + "' and LeaveDate='" + getdate + "'");
                                string isApprovecheck = d2.GetFunction("select isApproved from staff_leave_dates where requestfk='" + req + "' and LeaveDate='" + getdate + "'");
                                if (isApprovecheck != "1")
                                {
                                    if (session != "")
                                    {
                                        alterdelte = true;
                                        if (session == "0")
                                        {

                                            CheckBox chkmrng = (CheckBox)GV1.Rows[j].FindControl("chk_mrng");
                                            CheckBox chkevng = (CheckBox)GV1.Rows[j].FindControl("chk_evng");
                                            if (chkmrng.Checked == false && chkevng.Checked == false)
                                            {
                                                // string delquery = "delete staff_leave_dates where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                                string updateqry = "update staff_leave_dates set checkdel='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                                counts = d2.update_method_wo_parameter(updateqry, "text");


                                            }
                                        }
                                        if (session == "1")
                                        {
                                            CheckBox chkmrng = (CheckBox)GV1.Rows[j].FindControl("chk_mrng");
                                            CheckBox chkevng = (CheckBox)GV1.Rows[j].FindControl("chk_evng");
                                            if (chkmrng.Checked == false && chkevng.Checked == false)
                                            {
                                                // string delquery = "delete staff_leave_dates where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                                string updateqry = "update staff_leave_dates set checkdel='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                                counts = d2.update_method_wo_parameter(updateqry, "text");


                                            }
                                        }
                                        if (session == "2")
                                        {
                                            CheckBox chkmrng = (CheckBox)GV1.Rows[j].FindControl("chk_mrng");
                                            CheckBox chkevng = (CheckBox)GV1.Rows[j].FindControl("chk_evng");
                                            if (chkmrng.Checked == false && chkevng.Checked == false)
                                            {
                                                string updateqry = "update staff_leave_dates set checkdel='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                                // string delquery = "delete staff_leave_dates where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                                counts = d2.update_method_wo_parameter(updateqry, "text");


                                            }
                                        }

                                    }
                                }
                                else if (isApprovecheck == "1")
                                {
                                    string leavetype = "";
                                    if (session != "")
                                    {
                                        alterdelte = true;
                                        if (session == "0")
                                        {

                                            CheckBox chkmrng = (CheckBox)GV1.Rows[j].FindControl("chk_mrng");
                                            CheckBox chkevng = (CheckBox)GV1.Rows[j].FindControl("chk_evng");
                                            if (chkmrng.Checked == false && chkevng.Checked == false)
                                            {

                                                string updateqry = "update staff_leave_dates set checkdel='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                                counts = d2.update_method_wo_parameter(updateqry, "text");
                                                string firsthalf = string.Empty;
                                                string secondhalf = string.Empty;
                                                string getpresentapp = d2.GetFunction(" select [" + dateval + "] from staff_attnd where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'");
                                                if (getpresentapp != null && getpresentapp != "" && getpresentapp != "0")
                                                {
                                                    if (getpresentapp.Contains('-'))
                                                    {
                                                        string[] splitval = getpresentapp.Split('-');
                                                        firsthalf = Convert.ToString(splitval[0]);
                                                        secondhalf = Convert.ToString(splitval[1]);
                                                    }
                                                    leavetype = "";

                                                }

                                                string updateq = "update staff_attnd set [" + dateval + "]='" + leavetype + "' where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'";
                                                int upcnt = d2.update_method_wo_parameter(updateq, "text");
                                                countval++;

                                            }
                                            else if (chkmrng.Checked == true && chkevng.Checked == false)
                                            {
                                                string updateqry = "update staff_leave_dates set checkdel='1',SessionType='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                                counts = d2.update_method_wo_parameter(updateqry, "text");
                                                string firsthalf = string.Empty;
                                                string secondhalf = string.Empty;
                                                string getpresentapp = d2.GetFunction(" select [" + dateval + "] from staff_attnd where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'");
                                                if (getpresentapp != null && getpresentapp != "" && getpresentapp != "0")
                                                {
                                                    if (getpresentapp.Contains('-'))
                                                    {
                                                        string[] splitval = getpresentapp.Split('-');
                                                        firsthalf = Convert.ToString(splitval[0]);
                                                        secondhalf = Convert.ToString(splitval[1]);
                                                    }
                                                    leavetype = firsthalf + "-";

                                                }
                                                string updateq = "update staff_attnd set [" + dateval + "]='" + leavetype + "' where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'";
                                                int upcnt = d2.update_method_wo_parameter(updateq, "text");

                                            }
                                            else if (chkmrng.Checked == false && chkevng.Checked == true)
                                            {
                                                string updateqry = "update staff_leave_dates set checkdel='1',SessionType='2' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                                counts = d2.update_method_wo_parameter(updateqry, "text");
                                                string firsthalf = string.Empty;
                                                string secondhalf = string.Empty;
                                                string getpresentapp = d2.GetFunction(" select [" + dateval + "] from staff_attnd where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'");
                                                if (getpresentapp != null && getpresentapp != "" && getpresentapp != "0")
                                                {
                                                    if (getpresentapp.Contains('-'))
                                                    {
                                                        string[] splitval = getpresentapp.Split('-');
                                                        firsthalf = Convert.ToString(splitval[0]);
                                                        secondhalf = Convert.ToString(splitval[1]);
                                                    }

                                                    leavetype = "-" + secondhalf;
                                                }
                                                string updateq = "update staff_attnd set [" + dateval + "]='" + leavetype + "' where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'";
                                                int upcnt = d2.update_method_wo_parameter(updateq, "text");

                                            }

                                        }
                                        if (session == "1")
                                        {
                                            CheckBox chkmrng = (CheckBox)GV1.Rows[j].FindControl("chk_mrng");
                                            CheckBox chkevng = (CheckBox)GV1.Rows[j].FindControl("chk_evng");
                                            if (chkmrng.Checked == false && chkevng.Checked == false)
                                            {

                                                string updateqry = "update staff_leave_dates set checkdel='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";
                                                counts = d2.update_method_wo_parameter(updateqry, "text");
                                                string firsthalf = string.Empty;
                                                string secondhalf = string.Empty;
                                                string getpresentapp = d2.GetFunction(" select [" + dateval + "] from staff_attnd where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'");
                                                if (getpresentapp != null && getpresentapp != "" && getpresentapp != "0")
                                                {
                                                    if (getpresentapp.Contains('-'))
                                                    {
                                                        string[] splitval = getpresentapp.Split('-');
                                                        firsthalf = Convert.ToString(splitval[0]);
                                                        secondhalf = Convert.ToString(splitval[1]);
                                                    }
                                                    leavetype = "-" + secondhalf;

                                                }

                                                string updateq = "update staff_attnd set [" + dateval + "]='" + leavetype + "' where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'";
                                                int upcnt = d2.update_method_wo_parameter(updateq, "text");


                                            }
                                        }
                                        if (session == "2")
                                        {
                                            CheckBox chkmrng = (CheckBox)GV1.Rows[j].FindControl("chk_mrng");
                                            CheckBox chkevng = (CheckBox)GV1.Rows[j].FindControl("chk_evng");
                                            if (chkmrng.Checked == false && chkevng.Checked == false)
                                            {
                                                string updateqry = "update staff_leave_dates set checkdel='1' where requestfk='" + req + "' and LeaveDate='" + getdate + "'";

                                                counts = d2.update_method_wo_parameter(updateqry, "text");

                                                string firsthalf = string.Empty;
                                                string secondhalf = string.Empty;
                                                string getpresentapp = d2.GetFunction(" select [" + dateval + "] from staff_attnd where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'");
                                                if (getpresentapp != null && getpresentapp != "" && getpresentapp != "0")
                                                {
                                                    if (getpresentapp.Contains('-'))
                                                    {
                                                        string[] splitval = getpresentapp.Split('-');
                                                        firsthalf = Convert.ToString(splitval[0]);
                                                        secondhalf = Convert.ToString(splitval[1]);
                                                    }
                                                    leavetype = firsthalf + "-";

                                                }

                                                string updateq = "update staff_attnd set [" + dateval + "]='" + leavetype + "' where staff_code ='" + txt_staff_code.Text + "' and mon_year ='" + monyear + "'";
                                                int upcnt = d2.update_method_wo_parameter(updateq, "text");

                                            }
                                        }

                                    }


                                }
                                if (countval == GV1.Rows.Count)
                                {
                                    string selQ = " select Requestcode,ReqApproveStage,ReqAppStatus from RQ_Requisition where RequisitionPK='" + req + "'";
                                    ds.Clear();
                                    ds = d2.select_method_wo_parameter(selQ, "Text");
                                    if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                                    {
                                        det = Convert.ToString(ds.Tables[0].Rows[0]["Requestcode"]);
                                        appstatus = Convert.ToString(ds.Tables[0].Rows[0]["ReqAppStatus"]);//ReqApproveStage barath 15.11.17

                                        if (appstatus == "0")
                                        {
                                            //deletealtertimetable();
                                            updateAdd_attn(req); // poo 28.11.17
                                            alterremovenew(StaffCode);
                                            string deleteQur = "delete RQ_RequestionApprove where RequisitionFK='" + req + "'";
                                            int valss = d2.update_method_wo_parameter(deleteQur, "Text");

                                            string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + req + "'";
                                            int vals = d2.update_method_wo_parameter(del_query, "Text");

                                            string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + req + "'";
                                            int values = d2.update_method_wo_parameter(del_query1, "Text");
                                            saveflage = true;


                                        }

                                        if (appstatus == "1")
                                        {
                                            //barath 15.11.17
                                            int Settings = 0;
                                            int.TryParse(Convert.ToString(d2.GetFunction(" select LinkValue from New_InsSettings where LinkName='Approval leave Cancel Rights' and user_code ='" + usercode + "'")), out Settings);//and college_code ='" + ddl_rpt_collge.SelectedItem.Value + "' delsi2410
                                            string SettingsQry = " and LeaveFrom<='" + dt.ToString("MM/dd/yyyy") + "'";
                                            if (Settings == 1)
                                                SettingsQry = " ";
                                            string delcheck = d2.GetFunction("select CONVERT(varchar(10), LeaveFrom,101)LeaveFrom from RQ_Requisition where RequestType=5 and RequisitionPK='" + req + "'" + SettingsQry + "");
                                            if (Settings == 1)
                                            {
                                                updateAdd_attn(req); // poo 29.11.17
                                                // AlternateScheduleRemove(req, Convert.ToDateTime(delcheck));//barath 08.12.17
                                                alterremovenew(StaffCode);
                                                string update_query = "update RQ_Requisition set ReqAppStatus='3' where RequisitionPK='" + req + "'";
                                                d2.update_method_wo_parameter(update_query, "Text");

                                                imgdiv2.Visible = true;
                                                lbl_alert.Text = "Cancel Successfully";
                                                saveflage = true;//delsiref1407
                                            }
                                            else
                                            {
                                                if (delcheck == "0")
                                                {
                                                    //deletealtertimetable();
                                                    alterremovenew(StaffCode);
                                                    updateAdd_attn(req); // poo
                                                    string deleteQur = "delete RQ_RequestionApprove where RequisitionFK='" + req + "'";
                                                    int valss = d2.update_method_wo_parameter(deleteQur, "Text");
                                                    string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + req + "'";
                                                    d2.update_method_wo_parameter(del_query1, "Text");

                                                    string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + req + "'";
                                                    d2.update_method_wo_parameter(del_query, "Text");
                                                    saveflage = true;

                                                }
                                            }

                                        }
                                    }

                                }
                            }
                            if (counts > 0)
                            {
                                imgdiv2.Visible = true;
                                lbl_alert.Text = "Cancelled Successfully";

                            }
                            if (alterdelte == true)
                                alterremovenew(StaffCode);
                        }
                        else
                        {
                            if (fromdate == todate)
                            {
                                string selQ = " select Requestcode,ReqApproveStage,ReqAppStatus from RQ_Requisition where RequisitionPK='" + req + "'";
                                ds.Clear();
                                ds = d2.select_method_wo_parameter(selQ, "Text");
                                if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                                {
                                    det = Convert.ToString(ds.Tables[0].Rows[0]["Requestcode"]);
                                    appstatus = Convert.ToString(ds.Tables[0].Rows[0]["ReqAppStatus"]);//ReqApproveStage barath 15.11.17

                                    if (appstatus == "0")
                                    {
                                        //deletealtertimetable();
                                        updateAdd_attn(req); // poo 28.11.17
                                        alterremovenew(StaffCode);
                                        string deleteQur = "delete RQ_RequestionApprove where RequisitionFK='" + req + "'";
                                        int valss = d2.update_method_wo_parameter(deleteQur, "Text");

                                        string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + req + "'";
                                        int vals = d2.update_method_wo_parameter(del_query, "Text");

                                        string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + req + "'";
                                        int values = d2.update_method_wo_parameter(del_query1, "Text");
                                        saveflage = true;


                                    }

                                    if (appstatus == "1")
                                    {
                                        //barath 15.11.17
                                        int Settings = 0;
                                        int.TryParse(Convert.ToString(d2.GetFunction(" select LinkValue from New_InsSettings where LinkName='Approval leave Cancel Rights' and user_code ='" + usercode + "'")), out Settings);//and college_code ='" + ddl_rpt_collge.SelectedItem.Value + "' delsi2410
                                        string SettingsQry = " and LeaveFrom<='" + dt.ToString("MM/dd/yyyy") + "'";
                                        if (Settings == 1)
                                            SettingsQry = " ";
                                        string delcheck = d2.GetFunction("select CONVERT(varchar(10), LeaveFrom,101)LeaveFrom from RQ_Requisition where RequestType=5 and RequisitionPK='" + req + "'" + SettingsQry + "");
                                        if (Settings == 1)
                                        {
                                            updateAdd_attn(req); // poo 29.11.17
                                            // AlternateScheduleRemove(req, Convert.ToDateTime(delcheck));//barath 08.12.17
                                            alterremovenew(StaffCode);
                                            string update_query = "update RQ_Requisition set ReqAppStatus='3' where RequisitionPK='" + req + "'";
                                            d2.update_method_wo_parameter(update_query, "Text");

                                            imgdiv2.Visible = true;
                                            lbl_alert.Text = "Cancel Successfully";
                                            saveflage = true;//delsiref1407
                                        }
                                        else
                                        {
                                            if (delcheck == "0")
                                            {
                                                //deletealtertimetable();
                                                alterremovenew(StaffCode);
                                                updateAdd_attn(req); // poo
                                                string deleteQur = "delete RQ_RequestionApprove where RequisitionFK='" + req + "'";
                                                int valss = d2.update_method_wo_parameter(deleteQur, "Text");
                                                string del_query1 = "delete RQ_RequisitionDet where RequisitionFK='" + req + "'";
                                                d2.update_method_wo_parameter(del_query1, "Text");

                                                string del_query = "delete RQ_Requisition where RequestCode='" + det + "' and RequisitionPK='" + req + "'";
                                                d2.update_method_wo_parameter(del_query, "Text");
                                                saveflage = true;

                                            }
                                        }

                                    }
                                }


                            }
                        }

                    }
                    else
                    {
                        imgdiv2.Visible = true;
                        lbl_alert.Text = "No Records Found";
                    }
                }
                else
                {
                    imgdiv2.Visible = true;
                    lbl_alert.Text = "Staff Not Requested!!";
                }

            }

        }
        catch (Exception ex)
        {

        }


    }

    protected void ddlsearchappstf_change(object sender, EventArgs e)//delsi
    {
        if (ddlsearchappstf.SelectedItem.Text == "Staff Name")
        {
            txt_staffname.Visible = true;
            txt_staffname.Enabled = true;
            txt_StaffCode.Visible = false;

        }
        if (ddlsearchappstf.SelectedItem.Text == "Staff Code")
        {
            txt_StaffCode.Enabled = true;
            txt_StaffCode.Visible = true;
            txt_staffname.Visible = false;
        }
        if (ddlsearchappstf.SelectedItem.Text == "Select")
        {
            txt_StaffCode.Visible = false;
            txt_staffname.Visible = false;
        }
        txt_StaffCode.Text = "";
        txt_staffname.Text = "";

    }

    protected void bindsearchstapp()
    {
        ddlsearchappstf.Items.Clear();
        ddlsearchappstf.Items.Add(new ListItem("Select", "0"));
        ddlsearchappstf.Items.Add(new ListItem("Staff Name", "1"));
        ddlsearchappstf.Items.Add(new ListItem("Staff Code", "2"));
        ddlsearchappstf.DataBind();


    }

    [System.Web.Services.WebMethod]
    [System.Web.Script.Services.ScriptMethod()]
    public static List<string> GetStaffName(string prefixText)
    {
        //string collegecode1 = Convert.ToString(ddlcollege.SelectedItem.Value);
        WebService ws = new WebService();
        List<string> name = new List<string>();
        if (!String.IsNullOrEmpty(prefixText.Trim()))
        {
            if (clgcode1 != "")
            {
                string query = "select staff_name  from staffmaster where (resign =0 and settled =0 and isnull (Discontinue,'0') ='0') and staff_name like  '%" + prefixText + "%' and college_code='" + clgcode1 + "'";
                name = ws.Getname(query);
            }
        }
        return name;
    }
    [System.Web.Services.WebMethod]
    [System.Web.Script.Services.ScriptMethod()]
    public static List<string> GetStaffCode(string prefixText)
    {
        WebService ws = new WebService();
        List<string> name = new List<string>();
        if (!String.IsNullOrEmpty(prefixText.Trim()))
        {
            if (clgcode1 != "")
            {
                string query = "select staff_code from staffmaster where (resign =0 and settled =0 and isnull (Discontinue,'0') ='0') and staff_code like  '%" + prefixText + "%' and college_code='" + clgcode1 + "'";
                name = ws.Getname(query);
            }
        }
        return name;
    }
    public void alterremove(string staffcode, string fdate, string tdate)
    {
        try
        {
            DataTable dtgrid = new DataTable();
            int chkhalf = 0; string hlf = string.Empty; string d = string.Empty; bool saveOrAlter = false;
            int sno = 0;
            chkrelived = 0;
            string degcode = "";
            string[] Days = new string[7] { "mon", "tue", "wed", "thu", "fri", "sat", "sun" };
            DataSet dsgetvalue = new DataSet();
            DataSet dsalterperiod = new DataSet();
            DataSet dsstuatt = new DataSet();
            Hashtable hatvalue = new Hashtable();
            Hashtable hatsublab = new Hashtable();
            string degree_var = "";
            string cur_camprevar = "";
            string tmp_datevalue = "";
            string tmp_camprevar = "";
            string strsction = "";
            string strday = "";
            string start_datesem = "";
            string start_dayorder = "";
            string noofdays = "";
            string Strsql = "";
            string SqlFinal = "";
            string sql1 = "";
            string tmp_varstr = "";
            string vari = "";
            string stafftakenclass = "";
            string staffdegreeclass = "";
            string Day_Order = "";
            int noofhrs = 0;
            string MorningDayandEvening = string.Empty;
            DataSet ds_attndmaster = new DataSet();
            ht_sch.Clear();
            hat.Clear();
            hat.Add("college_code", Session["collegecode"].ToString());
            string sql_stringvar = "sp_select_details_staff";
            ds_attndmaster.Dispose();
            ds_attndmaster.Reset();
            ds_attndmaster = d2.select_method(sql_stringvar, hat, "sp");
            if (ds_attndmaster.Tables[0].Rows.Count > 0)
            {
                for (int pcont = 0; pcont < ds_attndmaster.Tables[0].Rows.Count; pcont++)
                {
                    degree_var = Convert.ToString(ds_attndmaster.Tables[0].Rows[pcont]["degree_code"]) + "-" + Convert.ToString(ds_attndmaster.Tables[0].Rows[pcont]["semester"]);
                    if (!ht_sch.Contains(Convert.ToString(degree_var)))
                    {
                        vari = ds_attndmaster.Tables[0].Rows[pcont]["SchOrder"] + "," + ds_attndmaster.Tables[0].Rows[pcont]["nodays"];
                        ht_sch.Add(degree_var, Convert.ToString(vari));
                    }
                }
            }
            ht_sdate.Clear();
            if (ds_attndmaster.Tables[1].Rows.Count > 0)
            {
                for (int pcont = 0; pcont < ds_attndmaster.Tables[1].Rows.Count; pcont++)
                {
                    degree_var = Convert.ToString(ds_attndmaster.Tables[1].Rows[pcont]["batch_year"]) + "-" + Convert.ToString(ds_attndmaster.Tables[1].Rows[pcont]["degree_code"]) + "-" + Convert.ToString(ds_attndmaster.Tables[1].Rows[pcont]["semester"]);
                    if (!ht_sdate.Contains(Convert.ToString(degree_var)))
                    {
                        vari = ds_attndmaster.Tables[1].Rows[pcont]["sdate"] + "," + ds_attndmaster.Tables[1].Rows[pcont]["starting_dayorder"];
                        ht_sdate.Add(degree_var, Convert.ToString(vari));
                    }
                }
            }
            ht_bell.Clear();
            if (ds_attndmaster.Tables[2].Rows.Count > 0)
            {
                for (int pcont = 0; pcont < ds_attndmaster.Tables[2].Rows.Count; pcont++)
                {
                    degree_var = Convert.ToString(ds_attndmaster.Tables[2].Rows[pcont]["batch_year"]) + "-" + Convert.ToString(ds_attndmaster.Tables[2].Rows[pcont]["degree_code"]) + "-" + Convert.ToString(ds_attndmaster.Tables[2].Rows[pcont]["semester"]) + "-" + Convert.ToString(ds_attndmaster.Tables[2].Rows[pcont]["period1"]);
                    if (!ht_bell.Contains(Convert.ToString(degree_var)))
                    {
                        vari = ds_attndmaster.Tables[2].Rows[pcont]["start_time"] + "," + ds_attndmaster.Tables[2].Rows[pcont]["end_time"];
                        ht_bell.Add(degree_var, Convert.ToString(vari));
                    }
                }
            }
            ht_period.Clear();
            if (ds_attndmaster.Tables[3].Rows.Count > 0)
            {
                for (int pcont = 0; pcont < ds_attndmaster.Tables[3].Rows.Count; pcont++)
                {
                    degree_var = Convert.ToString(ds_attndmaster.Tables[3].Rows[pcont]["lock_hr"]);
                    if (!ht_period.Contains(Convert.ToString(degree_var)))
                    {
                        vari = ds_attndmaster.Tables[3].Rows[pcont]["markatt_from"] + "," + ds_attndmaster.Tables[3].Rows[pcont]["markatt_to"];
                        ht_period.Add(degree_var, Convert.ToString(vari));
                    }
                }
            }
            string degreename = "";
            Hashtable hatdegreename = new Hashtable();
            for (int i = 0; i < ds_attndmaster.Tables[5].Rows.Count; i++)
            {
                if (!hatdegreename.Contains(ds_attndmaster.Tables[5].Rows[i]["Degree_Code"].ToString()))
                {
                    hatdegreename.Add(ds_attndmaster.Tables[5].Rows[i]["Degree_Code"].ToString(), ds_attndmaster.Tables[5].Rows[i]["course"].ToString() + '$' + ds_attndmaster.Tables[5].Rows[i]["dept_acronym"].ToString());
                }
            }


            DateTime dtf = Convert.ToDateTime(fdate);
            DateTime dtt = Convert.ToDateTime(tdate);
            if (dtf <= dtt)
            {
                long days = -1;
                DateTime dt1 = DateTime.Now.AddDays(-6);
                DateTime dt2 = DateTime.Now;
                try
                {
                    dt1 = Convert.ToDateTime(fdate);
                    dt2 = Convert.ToDateTime(tdate);
                    TimeSpan t = dt2.Subtract(dt1);
                    days = t.Days;
                }
                catch
                {
                    try
                    {
                        dt1 = Convert.ToDateTime(fdate);
                        dt2 = Convert.ToDateTime(tdate);
                        TimeSpan t = dt2.Subtract(dt1);
                        days = t.Days;
                    }
                    catch
                    {
                    }
                }
                if (days >= 0)
                {
                    string[] differdays = new string[days];
                    noofhrs = 0;
                    if (ds_attndmaster.Tables[6].Rows.Count > 0)
                    {
                        if (ds_attndmaster.Tables[6].Rows[0]["noofhours"].ToString().Trim() != "" && ds_attndmaster.Tables[6].Rows[0]["noofhours"].ToString().Trim() != null && ds_attndmaster.Tables[6].Rows[0]["noofhours"].ToString().Trim() != "0")
                        {
                            noofhrs = Convert.ToInt32(ds_attndmaster.Tables[6].Rows[0]["noofhours"].ToString());
                        }
                    }
                    sql1 = "";
                    Strsql = "";
                    SqlFinal = "";
                    string stafcode = staffcode;
                    for (int day_lp = 0; day_lp < 7; day_lp++)
                    {
                        strday = Days[day_lp].ToString();
                        sql1 = sql1 + "(";
                        tmp_varstr = "";
                        for (int i_loop = 1; i_loop <= noofhrs; i_loop++)
                        {
                            Strsql = Strsql + strday + Convert.ToString(i_loop) + ",";
                            if (tmp_varstr == "")
                            {
                                tmp_varstr = tmp_varstr + strday + Convert.ToString(i_loop) + " like '%" + stafcode + "%'";
                            }
                            else
                            {
                                tmp_varstr = tmp_varstr + " or " + strday + Convert.ToString(i_loop) + " like '%" + stafcode + "%'";
                            }
                        }
                        if (day_lp != 6)
                            tmp_varstr = tmp_varstr + ") or ";
                        else
                            tmp_varstr = tmp_varstr + ")";
                        sql1 = sql1 + tmp_varstr.ToString();
                    }
                    SqlFinal = " select distinct r.Batch_Year,r.degree_code,sy.semester,r.Sections,si.end_date from staff_selector ss,Registration r,";
                    SqlFinal = SqlFinal + " subject s,sub_sem sm,syllabus_master sy,seminfo si where sy.Batch_Year=r.Batch_Year and sy.degree_code=r.degree_code";
                    SqlFinal = SqlFinal + " and sy.semester=r.Current_Semester and sy.syll_code=sm.syll_code and sm.subType_no=s.subType_no ";
                    SqlFinal = SqlFinal + " and s.subject_no=ss.subject_no and isnull(r.sections,'')=isnull(ss.sections,'') and ss.batch_year=r.Batch_Year";
                    SqlFinal = SqlFinal + " and si.Batch_Year=r.Batch_Year and si.degree_code=r.degree_code and si.semester=r.Current_Semester and ";
                    SqlFinal = SqlFinal + " si.Batch_Year=sy.Batch_Year and sy.degree_code=r.degree_code and si.semester=sy.Semester and r.CC=0 and r.Exam_Flag<>'debar'";
                    SqlFinal = SqlFinal + " and r.DelFlag=0 and ss.staff_code='" + stafcode + "'";
                    DataView dvalternaet = new DataView();
                    DataView tabledvalternaet = new DataView();
                    DataView dvsemster = new DataView();
                    DataView dvholiday = new DataView();
                    DataView dvdaily = new DataView();
                    DataView dvsubject = new DataView();
                    DataView dvsublab = new DataView();
                    DataView dvalternaetdetails = new DataView();
                    string getalldetails = "select * from Alternate_Schedule where FromDate between '" + fdate + "' and '" + tdate + "' ; ";
                    getalldetails = getalldetails + " select * from Semester_Schedule order by FromDate desc; ";
                    getalldetails = getalldetails + " Select * from holidaystudents where holiday_date between '" + fdate + "' and '" + tdate + "' ; ";
                    getalldetails = getalldetails + " select staff_name,staff_code from staffmaster ; ";
                    getalldetails = getalldetails + " select s.subject_no,s.subject_name,s.subject_code,sy.Batch_Year,sy.degree_code,sy.semester,ss.Lab from Registration r,syllabus_master sy,sub_sem ss,subject s where r.Batch_Year=sy.Batch_Year and r.degree_code=sy.degree_code and r.Current_Semester=sy.semester and sy.syll_code=ss.syll_code and sy.syll_code=s.syll_code and ss.subType_no=ss.subType_no and r.cc=0 and r.delflag=0 and r.exam_flag<>'debar' and r.degree_code='2012' and r.Batch_Year='1052' and r.Current_Semester='3';";
                    getalldetails = getalldetails + " select distinct Current_Semester,Batch_Year,degree_code from Registration where cc=0 and delflag=0 and exam_flag<>'debar'; ";
                    getalldetails = getalldetails + " select no_of_hrs_I_half_day as mor,no_of_hrs_I_half_day as eve,degree_code,semester from periodattndschedule";
                    getalldetails = getalldetails + " select * from tbl_consider_day_order ;";
                    getalldetails = getalldetails + "select * from tbl_alter_schedule_Details where FromDate between '" + fdate + "' and '" + tdate + "'";
                    getalldetails = getalldetails + " select * from AlternateDetails where alternatedate between '" + fdate + "' and '" + tdate + "'";
                    DataSet dsall = d2.select_method_wo_parameter(getalldetails, "Text");
                    Hashtable hatholiday = new Hashtable();
                    DataSet dsperiod = d2.select_method(SqlFinal, hat, "Text");

                    DataSet dsperiodNew = d2.select_method_wo_parameter("select distinct s.batch_year,r.degree_code,s.semester,s.sections from registration r, Semester_Schedule s where s.batch_year=r.batch_year and s.degree_code=r.degree_code and r.current_semester=s.semester and ltrim(rtrim(isnull(r.sections,'')))=ltrim(rtrim(isnull(s.sections,''))) and r.CC=0 and r.Exam_Flag<>'debar' and r.DelFlag=0  order by s.batch_year desc", "text");

                    if (dsperiodNew.Tables.Count > 0 && dsperiodNew.Tables[0].Rows.Count > 0)
                    {
                        for (int pre = 0; pre < dsperiodNew.Tables[0].Rows.Count; pre++)
                        {
                            staffdegreeclass = "";
                            cur_camprevar = Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["batch_year"]) + "-" + Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["degree_code"]) + "-" + Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["semester"]) + "-" + Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["sections"]);
                            deg_batch_sem = cur_camprevar;
                            string getdate = "";
                            if (Convert.ToString(tmp_camprevar.Trim()) != Convert.ToString(cur_camprevar.Trim()))
                            {
                                strsction = "";
                                if ((Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["sections"]) != "") && (Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["sections"]) != "-1"))
                                {
                                    strsction = " and sections='" + Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["sections"]) + "'";
                                }
                                string strsubstucount = " select count(distinct r.Roll_No) as stucount,r.Batch_Year,r.degree_code,r.Current_Semester,isnull(r.Sections,'')Sections,s.subject_no,r.adm_date from registration r,subjectchooser s where  r.roll_no=s.roll_no and  r.current_semester=s.semester";
                                strsubstucount = strsubstucount + " and batch_year='" + dsperiodNew.Tables[0].Rows[pre]["batch_year"] + "' and  degree_code='" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + "'  and current_semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "'  and cc=0 and delflag=0 and exam_flag<>'debar' " + strsction + "  group by r.Batch_Year,r.degree_code,r.Current_Semester,isnull(r.Sections,''),s.subject_no,r.adm_date";
                                DataSet dssubstucount = d2.select_method_wo_parameter(strsubstucount, "Text");
                                DataView dvsubstucount = new DataView();
                                hatholiday.Clear();
                                dsall.Tables[2].DefaultView.RowFilter = " degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester=" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " ";
                                DataView duholiday = dsall.Tables[2].DefaultView;
                                for (int i = 0; i < duholiday.Count; i++)
                                {
                                    if (!hatholiday.Contains(duholiday[i]["holiday_date"].ToString()))
                                    {
                                        hatholiday.Add(duholiday[i]["holiday_date"].ToString(), duholiday[i]["holiday_desc"].ToString());
                                    }
                                }
                                string subjectquery = "select distinct s.subject_no,s.subject_name,s.subject_code,sy.Batch_Year,sy.degree_code,sy.semester,ss.Lab,ss.subject_type from Registration r,syllabus_master sy,sub_sem ss,subject s where r.Batch_Year=sy.Batch_Year and r.degree_code=sy.degree_code and r.Current_Semester=sy.semester and sy.syll_code=ss.syll_code and sy.syll_code=s.syll_code and ss.subType_no=s.subType_no and r.cc=0 and r.delflag=0 and r.exam_flag<>'debar' and r.batch_year='" + dsperiodNew.Tables[0].Rows[pre]["batch_year"] + "' and  r.degree_code='" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + "'  and r.current_semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' order by s.subject_no";
                                DataSet dssubject = d2.select_method_wo_parameter(subjectquery, "Text");
                                int frshlf = 0, schlf = 0;
                                dsall.Tables[6].DefaultView.RowFilter = " degree_code ='" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + "' and  semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "'";
                                DataView dvperiod = dsall.Tables[6].DefaultView;
                                if (dvperiod.Count > 0)
                                {
                                    string morhr = dvperiod[0]["mor"].ToString();
                                    string evehr = dvperiod[0]["eve"].ToString(); // poo
                                    MorningDayandEvening = morhr + "$" + evehr;
                                    if (morhr != null && morhr.Trim() != "")
                                        frshlf = Convert.ToInt32(morhr);
                                    if (evehr != null && evehr.Trim() != "")
                                        schlf = Convert.ToInt32(evehr);
                                }
                                string getcurrent_sem = "";
                                dsall.Tables[5].DefaultView.RowFilter = "degree_code ='" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + "'  and batch_year = '" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + "'";
                                DataView dvcurrsem = dsall.Tables[5].DefaultView;
                                if (dvcurrsem.Count > 0)
                                {
                                    getcurrent_sem = dvcurrsem[0]["current_semester"].ToString();
                                }
                                if (Convert.ToString(getcurrent_sem) == Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["semester"]))
                                {
                                    string semenddate = string.Empty;
                                    string altersetion = "";
                                    if (dsperiodNew.Tables[0].Rows[pre]["sections"].ToString() != "-1" && dsperiodNew.Tables[0].Rows[pre]["sections"].ToString() != null && dsperiodNew.Tables[0].Rows[pre]["sections"].ToString().Trim() != "")
                                    {
                                        altersetion = "and Sections='" + dsperiodNew.Tables[0].Rows[pre]["sections"].ToString() + "'";
                                    }
                                    Hashtable hatdc = new Hashtable();
                                    dsall.Tables[7].DefaultView.RowFilter = "degree_code ='" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + "'  and batch_year = '" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + "' and semester=" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "  ";
                                    DataView dvdayorderchanged = dsall.Tables[7].DefaultView;
                                    for (int dc = 0; dc < dvdayorderchanged.Count; dc++)
                                    {
                                        DateTime dtdcf = Convert.ToDateTime(dvdayorderchanged[dc]["from_date"].ToString());
                                        DateTime dtdct = Convert.ToDateTime(dvdayorderchanged[dc]["to_date"].ToString());
                                        for (DateTime dtc = dtdcf; dtc <= dtdct; dtc = dtc.AddDays(1))
                                        {
                                            if (!hatdc.Contains(dtc))
                                            {
                                                hatdc.Add(dtc, dtc);
                                            }
                                        }
                                    }
                                    for (int row_inc = 0; row_inc <= days; row_inc++)
                                    {
                                        string setdate = "";
                                        if (hatdegreename.Contains(dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString()))
                                        {
                                            degreename = Convert.ToString(hatdegreename[dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString()]).ToString();
                                        }
                                        DateTime cur_day = new DateTime();
                                        cur_day = dt2.AddDays(-row_inc);
                                        if (!hatdc.Contains(cur_day))
                                        {
                                            tmp_datevalue = Convert.ToString(cur_day);
                                            degree_var = Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["degree_code"]) + "-" + Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["semester"]);
                                            string SchOrder = "";
                                            string day_from = cur_day.ToString("yyyy-MM-dd");
                                            DateTime schfromdate = cur_day;
                                            dsall.Tables[1].DefaultView.RowFilter = "batch_year='" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + "' and degree_code='" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + "' and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and FromDate<='" + cur_day.ToString() + "'";
                                            dvsemster = dsall.Tables[1].DefaultView;
                                            if (dvsemster.Count > 0)
                                                getdate = dvsemster[0]["FromDate"].ToString();
                                            if (Convert.ToString(getdate) != "" && Convert.ToString(getdate).Trim() != "0" && Convert.ToString(getdate).Trim() != null)
                                            {
                                                DateTime getsche = Convert.ToDateTime(getdate);
                                                if (Convert.ToDateTime(schfromdate) == Convert.ToDateTime(getsche) || Convert.ToDateTime(schfromdate) != Convert.ToDateTime(getsche))
                                                {
                                                    if (ht_sch.Contains(Convert.ToString(degree_var)))
                                                    {
                                                        string contvar = Convert.ToString(ht_sch[Convert.ToString(degree_var)]);
                                                        string[] sp_rd_semi = contvar.Split(',');
                                                        if (sp_rd_semi.GetUpperBound(0) >= 1)
                                                        {
                                                            SchOrder = sp_rd_semi[0].ToString();
                                                            noofdays = sp_rd_semi[1].ToString();
                                                        }
                                                    }
                                                    degree_var = Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["batch_year"]) + "-" + Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["degree_code"]) + "-" + Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["semester"]);
                                                    if (ht_sdate.Contains(Convert.ToString(degree_var)))
                                                    {
                                                        string contvar = Convert.ToString(ht_sdate[Convert.ToString(degree_var)]);
                                                        string[] sp_rd_semi = contvar.Split(',');
                                                        if (sp_rd_semi.GetUpperBound(0) >= 1)
                                                        {
                                                            start_datesem = sp_rd_semi[0].ToString();
                                                            start_dayorder = sp_rd_semi[1].ToString();
                                                        }
                                                    }

                                                    Day_Order = "";
                                                    if (SchOrder == "1")
                                                    {
                                                        strday = cur_day.ToString("ddd");
                                                        Day_Order = "0-" + Convert.ToString(strday);
                                                    }
                                                    else
                                                    {
                                                        string[] sps = dt2.ToString().Split('/');
                                                        string curdate = sps[0] + '/' + sps[1] + '/' + sps[2];
                                                        strday = d2.findday(cur_day.ToString(), dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString(), dsperiodNew.Tables[0].Rows[pre]["semester"].ToString(), dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString(), start_datesem.ToString(), noofdays.ToString(), start_dayorder);
                                                        Day_Order = "0-" + Convert.ToString(strday);
                                                    }


                                                    string reasonsun = "";
                                                    if (!hatholiday.Contains(cur_day.ToString()) || reasonsun.Trim().ToLower() != "sunday")
                                                    {
                                                        string str_day = strday;
                                                        string Atmonth = cur_day.Month.ToString();
                                                        string Atyear = cur_day.Year.ToString();
                                                        long strdate = (Convert.ToInt32(Atmonth) + Convert.ToInt32(Atyear) * 12);
                                                        sql1 = "";
                                                        Strsql = "";
                                                        DataView dv = new DataView();

                                                        for (int i_loop = 1; i_loop <= noofhrs; i_loop++)//delsijref
                                                        {


                                                            Strsql = Strsql + strday + Convert.ToString(i_loop) + ",";
                                                            if (sql1 == "")
                                                            {
                                                                sql1 = sql1 + strday + Convert.ToString(i_loop) + " like '%" + stafcode + "%'";
                                                            }
                                                            else
                                                            {
                                                                sql1 = sql1 + " or " + strday + Convert.ToString(i_loop) + " like '%" + stafcode + "%'";
                                                            }

                                                        }
                                                        string day_aten = cur_day.Day.ToString();
                                                        string strsectionvar = "";
                                                        string labsection = "";
                                                        if (Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["sections"]) != "" && Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["sections"]) != "-1")
                                                        {
                                                            strsectionvar = " and sections='" + Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["sections"]) + "'";
                                                            labsection = " and sections='" + Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["sections"]) + "'";
                                                        }
                                                        sql1 = " and (" + sql1 + ")";
                                                        //zzz
                                                        dsall.Tables[0].DefaultView.RowFilter = "degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                        dvalternaet = dsall.Tables[0].DefaultView;
                                                        dsall.Tables[8].DefaultView.RowFilter = "degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                        tabledvalternaet = dsall.Tables[8].DefaultView;

                                                        string text_temp = "";
                                                        int temp = 0;
                                                        text_temp = "";
                                                        string alterSubType = string.Empty;
                                                        string getcolumnfield = "";
                                                        Boolean moringleav = false;
                                                        Boolean evenleave = false;
                                                        dsall.Tables[2].DefaultView.RowFilter = "holiday_date='" + cur_day.ToString("MM/dd/yyyy") + "' and degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "'";
                                                        dvholiday = dsall.Tables[2].DefaultView;
                                                        if (dvholiday.Count > 0)
                                                        {
                                                            if (!hatholiday.Contains(cur_day.ToString()))
                                                                hatholiday.Add(cur_day.ToString(), dvholiday[0]["holiday_desc"].ToString());
                                                            if (dvholiday[0]["morning"].ToString() == "1" || dvholiday[0]["morning"].ToString().Trim().ToLower() == "true")
                                                                moringleav = true;
                                                            if (dvholiday[0]["evening"].ToString() == "1" || dvholiday[0]["evening"].ToString().Trim().ToLower() == "true")
                                                                evenleave = true;
                                                            if (dvholiday[0]["halforfull"].ToString() == "0" || dvholiday[0]["halforfull"].ToString().Trim().ToLower() == "false")
                                                            {
                                                                evenleave = true;
                                                                moringleav = true;
                                                            }
                                                        }
                                                        if (hlf != "0" && hlf != "")
                                                        {
                                                            string hr = "";
                                                            if (d != "1")
                                                            {
                                                                hr = d2.GetFunction("select no_of_hrs_II_half_day from PeriodAttndSchedule where degree_code='" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + "' and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "'");
                                                            }
                                                            else if (d == "1")
                                                            {
                                                                hr = d2.GetFunction("select no_of_hrs_I_half_day from PeriodAttndSchedule where degree_code='" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + "' and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "'");
                                                            }
                                                            noofhrs = Convert.ToInt32(hr);
                                                        }

                                                        for (temp = 1; temp <= noofhrs; temp++)
                                                        {

                                                            //  string getselected = Convert.ToString(dv[0]["Dummy4"]);
                                                            // string lopval = Convert.ToString(temp);
                                                            // if (getselected.Contains(lopval))
                                                            // {
                                                            string sp_rd = "";
                                                            string sp_rds = "";
                                                            string sp_rdtbl = "";
                                                            string tablesp_rd = "";
                                                            Boolean altfalg = false;
                                                            if (altfalg == false)
                                                            {
                                                                #region semesterschedul
                                                                getcolumnfield = Convert.ToString(strday + temp);
                                                                if (dvsemster.Count > 0)
                                                                {
                                                                    if (dvsemster[0][getcolumnfield].ToString() != "" && dvsemster[0][getcolumnfield].ToString() != null && dvsemster[0][getcolumnfield].ToString() != "\0")
                                                                    {
                                                                        string timetable = "";
                                                                        string alterstafff = "";
                                                                        string alterstaffftbl = "";
                                                                        string name = dvsemster[0]["ttname"].ToString();
                                                                        if (name != null && name.Trim() != "")
                                                                        {
                                                                            timetable = name;
                                                                        }
                                                                        sp_rd = dvsemster[0][getcolumnfield].ToString();
                                                                        string[] sp_rd_semi = sp_rd.Split(';');
                                                                        for (int semi = 0; semi <= sp_rd_semi.GetUpperBound(0); semi++)
                                                                        {
                                                                            string[] sp2 = sp_rd_semi[semi].Split(new Char[] { '-' });
                                                                            if (sp2.GetUpperBound(0) >= 1)
                                                                            {
                                                                                int upperbound = sp2.GetUpperBound(0);
                                                                                for (int multi_staff = 1; multi_staff < sp2.GetUpperBound(0); multi_staff++)
                                                                                {
                                                                                    if (sp2[multi_staff] == stafcode)
                                                                                    {
                                                                                        altfalg = true;
                                                                                        dsall.Tables[9].DefaultView.RowFilter = "degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and alternatedate='" + day_from + "' and alterhour='" + temp + "' and actstaffcode='" + stafcode + "' and actsubno='" + sp2[0] + "'";
                                                                                        dvalternaetdetails = dsall.Tables[9].DefaultView;
                                                                                        if (dvalternaetdetails.Count > 0)
                                                                                        {
                                                                                            for (int alters = 0; alters < dvalternaetdetails.Count; alters++)
                                                                                            {
                                                                                                DataTable dtalter = dvalternaetdetails.ToTable();

                                                                                                dsall.Tables[9].DefaultView.RowFilter = "degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and alternatedate='" + day_from + "' and alterhour='" + temp + "' and actstaffcode='" + dvalternaetdetails[alters]["alterstaffcode"] + "' and actsubno='" + dtalter.Rows[alters]["altersubno"] + "' and noalter='2'";
                                                                                                DataView dvalternaetdetailstbl = dsall.Tables[9].DefaultView;

                                                                                                if (dvalternaetdetailstbl.Count >= 0)
                                                                                                {
                                                                                                    sp_rds = dvalternaet[0]["" + strday.Trim() + temp + ""].ToString();
                                                                                                    string[] sp_rdd = sp_rds.Split(';');
                                                                                                    for (int index = 0; index <= sp_rdd.GetUpperBound(0); index++)
                                                                                                    {
                                                                                                        string[] sp3 = sp_rdd[index].Split(new Char[] { '-' });
                                                                                                        if (sp3.GetUpperBound(0) >= 1)
                                                                                                        {
                                                                                                            int upperbounds = sp3.GetUpperBound(0);
                                                                                                            for (int multi_staffs = 1; multi_staffs < sp3.GetUpperBound(0); multi_staffs++)
                                                                                                            {
                                                                                                                if (sp3[multi_staffs] == Convert.ToString(dtalter.Rows[alters]["alterstaffcode"]).Trim())
                                                                                                                {

                                                                                                                }
                                                                                                                else
                                                                                                                {
                                                                                                                    if (alterstafff == "")
                                                                                                                    {
                                                                                                                        alterstafff = sp_rdd[index];
                                                                                                                    }
                                                                                                                    else
                                                                                                                        alterstafff = alterstafff + ';' + sp_rdd[index];
                                                                                                                }


                                                                                                            }
                                                                                                        }
                                                                                                    }

                                                                                                    if (alterstafff != "")
                                                                                                    {
                                                                                                        string sect = dsperiodNew.Tables[0].Rows[pre]["sections"].ToString();
                                                                                                        string q1 = "update alternate_schedule set " + getcolumnfield + "='" + alterstafff + "' where degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                                                                        int a = d2.update_method_wo_parameter(q1, "text");

                                                                                                        //string tbl_alter = " update tbl_alter_schedule_Details set " + getcolumnfield + "=''  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and FromDate ='" + day_from + "'" + altersetion + " ";
                                                                                                        // d2.update_method_wo_parameter(tbl_alter, "text");
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        string q1 = "update alternate_schedule set " + getcolumnfield + "='' where degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                                                                        int a = d2.update_method_wo_parameter(q1, "text");
                                                                                                    }



                                                                                                    // for (int cun = 0; cun < tabledvalternaet.Count; cun++)
                                                                                                    // {
                                                                                                    int alt = 1;
                                                                                                    sp_rdtbl = tabledvalternaet[0]["" + strday.Trim() + temp + ""].ToString();
                                                                                                    string[] sp_rdtbls = sp_rdtbl.Split(';');
                                                                                                    for (int index = 0; index <= sp_rdtbls.GetUpperBound(0); index++)
                                                                                                    {
                                                                                                        string[] sp4 = sp_rdtbls[index].Split(new Char[] { '-' });
                                                                                                        if (sp4.GetUpperBound(0) >= 1)
                                                                                                        {
                                                                                                            int upperboundtbl = sp4.GetUpperBound(0);
                                                                                                            for (int multi_stafftbl = 1; multi_stafftbl < sp4.GetUpperBound(0); multi_stafftbl++)
                                                                                                            {
                                                                                                                if (sp4[multi_stafftbl] == dtalter.Rows[alters]["alterstaffcode"].ToString().Trim())
                                                                                                                {

                                                                                                                }
                                                                                                                else
                                                                                                                {
                                                                                                                    if (alterstaffftbl == "")
                                                                                                                    {
                                                                                                                        alterstaffftbl = sp_rdtbls[index];
                                                                                                                    }
                                                                                                                    else
                                                                                                                        alterstaffftbl = alterstaffftbl + ';' + sp_rdtbls[index];
                                                                                                                }


                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                    if (alterstaffftbl != "")
                                                                                                    {
                                                                                                        string sect = dsperiodNew.Tables[0].Rows[pre]["sections"].ToString();
                                                                                                        //string q1 = "update alternate_schedule set " + getcolumnfield + "='" + alterstafff + "' where degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                                                                        //d2.update_method_wo_parameter(q1, "text");

                                                                                                        string tbl_alter = " update tbl_alter_schedule_Details set " + getcolumnfield + "='" + alterstaffftbl + "'  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and FromDate ='" + day_from + "'" + altersetion + "  and No_of_Alter='" + alt + "'";
                                                                                                        int a = d2.update_method_wo_parameter(tbl_alter, "text");

                                                                                                        string tbl_alters = " delete from AlternateDetails  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and alternatedate='" + day_from + "'" + altersetion + "  and noalter='" + alt + "' and actstaffcode='" + staffcode + "' and actsubno='" + sp2[0] + "' and alterhour='" + temp + "'";
                                                                                                        int b = d2.update_method_wo_parameter(tbl_alters, "text");
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        string tbl_alter = " update tbl_alter_schedule_Details set " + getcolumnfield + "=''  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and FromDate ='" + day_from + "'" + altersetion + "  and No_of_Alter='" + alt + "'";
                                                                                                        int a = d2.update_method_wo_parameter(tbl_alter, "text");
                                                                                                        string tbl_alters = " delete from AlternateDetails  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and alternatedate='" + day_from + "'" + altersetion + "  and NoAlter='" + alt + "' and actstaffcode='" + staffcode + "' and actsubno='" + sp2[0] + "' and alterhour='" + temp + "'";
                                                                                                        int b = d2.update_method_wo_parameter(tbl_alters, "text");
                                                                                                    }

                                                                                                    // }
                                                                                                }

                                                                                                if (dvalternaetdetailstbl.Count > 0)
                                                                                                {
                                                                                                    alterstafff = "";
                                                                                                    for (int cun = 1; cun < tabledvalternaet.Count; cun++)
                                                                                                    {
                                                                                                        int alt = cun + 1;
                                                                                                        sp_rdtbl = tabledvalternaet[cun]["" + strday.Trim() + temp + ""].ToString();
                                                                                                        string[] sp_rdtbls = sp_rdtbl.Split(';');
                                                                                                        for (int index = 0; index <= sp_rdtbls.GetUpperBound(0); index++)
                                                                                                        {
                                                                                                            string[] sp4 = sp_rdtbls[index].Split(new Char[] { '-' });
                                                                                                            if (sp4.GetUpperBound(0) >= 1)
                                                                                                            {
                                                                                                                int upperboundtbl = sp4.GetUpperBound(0);
                                                                                                                for (int multi_stafftbl = 1; multi_stafftbl < sp4.GetUpperBound(0); multi_stafftbl++)
                                                                                                                {
                                                                                                                    if (sp4[multi_stafftbl] == dvalternaetdetailstbl[alters]["alterstaffcode"].ToString().Trim())
                                                                                                                    {

                                                                                                                    }
                                                                                                                    else
                                                                                                                    {
                                                                                                                        if (alterstaffftbl == "")
                                                                                                                        {
                                                                                                                            alterstaffftbl = sp_rdtbls[index];
                                                                                                                        }
                                                                                                                        else
                                                                                                                            alterstaffftbl = alterstaffftbl + ';' + sp_rdtbls[index];
                                                                                                                    }
                                                                                                                    if (alterstaffftbl != "")
                                                                                                                    {
                                                                                                                        string sect = dsperiodNew.Tables[0].Rows[pre]["sections"].ToString();
                                                                                                                        //string q1 = "update alternate_schedule set " + getcolumnfield + "='" + alterstafff + "' where degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                                                                                        //d2.update_method_wo_parameter(q1, "text");

                                                                                                                        string tbl_alter = " update tbl_alter_schedule_Details set " + getcolumnfield + "='" + alterstaffftbl + "'  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and FromDate ='" + day_from + "'" + altersetion + "  and No_of_Alter='" + alt + "'";
                                                                                                                        int a = d2.update_method_wo_parameter(tbl_alter, "text");


                                                                                                                        string tbl_alters = " delete from AlternateDetails  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and alternatedate='" + day_from + "'" + altersetion + "  and NoAlter='" + alt + "' and actstaffcode='" + dtalter.Rows[alters]["alterstaffcode"] + "' and actsubno='" + dtalter.Rows[alters]["altersubno"] + "' and alterhour='" + temp + "'";
                                                                                                                        int b = d2.update_method_wo_parameter(tbl_alters, "text");

                                                                                                                    }
                                                                                                                    else
                                                                                                                    {
                                                                                                                        string sect = dsperiodNew.Tables[0].Rows[pre]["sections"].ToString();
                                                                                                                        //string q1 = "update alternate_schedule set " + getcolumnfield + "='" + alterstafff + "' where degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                                                                                        //d2.update_method_wo_parameter(q1, "text");

                                                                                                                        string tbl_alter = " update tbl_alter_schedule_Details set " + getcolumnfield + "=''  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and FromDate ='" + day_from + "'" + altersetion + "  and No_of_Alter='" + alt + "'";
                                                                                                                        int a = d2.update_method_wo_parameter(tbl_alter, "text");
                                                                                                                        string tbl_alters = " delete from AlternateDetails  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and alternatedate='" + day_from + "'" + altersetion + "  and NoAlter='" + alt + "' and actstaffcode='" + dtalter.Rows[alters]["alterstaffcode"] + "' and actsubno='" + dtalter.Rows[alters]["altersubno"] + "' and alterhour='" + temp + "'";
                                                                                                                        int b = d2.update_method_wo_parameter(tbl_alters, "text");
                                                                                                                    }

                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }

                                                                                                    sp_rds = dvalternaet[0]["" + strday.Trim() + temp + ""].ToString();
                                                                                                    string[] sp_rdds = sp_rds.Split(';');
                                                                                                    for (int index = 0; index <= sp_rdds.GetUpperBound(0); index++)
                                                                                                    {
                                                                                                        string[] sp3 = sp_rdds[index].Split(new Char[] { '-' });
                                                                                                        if (sp3.GetUpperBound(0) >= 1)
                                                                                                        {
                                                                                                            int upperbounds = sp3.GetUpperBound(0);
                                                                                                            for (int multi_staffs = 1; multi_staffs < sp3.GetUpperBound(0); multi_staffs++)
                                                                                                            {
                                                                                                                if (sp3[multi_staffs] == Convert.ToString(dvalternaetdetailstbl[alters]["alterstaffcode"]).Trim())
                                                                                                                {

                                                                                                                }
                                                                                                                else
                                                                                                                {
                                                                                                                    if (alterstafff == "")
                                                                                                                    {
                                                                                                                        alterstafff = sp_rdds[index];
                                                                                                                    }
                                                                                                                    else
                                                                                                                        alterstafff = alterstafff + ';' + sp_rdds[index];
                                                                                                                }


                                                                                                            }
                                                                                                        }
                                                                                                    }

                                                                                                    if (alterstafff != "")
                                                                                                    {
                                                                                                        string sect = dsperiodNew.Tables[0].Rows[pre]["sections"].ToString();
                                                                                                        string q1 = "update alternate_schedule set " + getcolumnfield + "='" + alterstafff + "' where degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                                                                        int a = d2.update_method_wo_parameter(q1, "text");

                                                                                                        //string tbl_alter = " update tbl_alter_schedule_Details set " + getcolumnfield + "=''  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and FromDate ='" + day_from + "'" + altersetion + " ";
                                                                                                        // d2.update_method_wo_parameter(tbl_alter, "text");
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        string q1 = "update alternate_schedule set " + getcolumnfield + "='' where degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                                                                        int a = d2.update_method_wo_parameter(q1, "text");
                                                                                                    }





                                                                                                }



                                                                                            }


                                                                                        }


                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                                #endregion
                                                            }

                                                            if (altfalg != true)
                                                            {
                                                                dsall.Tables[9].DefaultView.RowFilter = "degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and alternatedate='" + day_from + "' and alterhour='" + temp + "' and actstaffcode='" + stafcode + "'  and noalter>'1'";
                                                                DataView dvalternaetdetailstbls = dsall.Tables[9].DefaultView;

                                                                if (dvalternaetdetailstbls.Count > 0)
                                                                {
                                                                    string alterstafff = string.Empty;
                                                                    string alterstafffnew = string.Empty;
                                                                    if (tabledvalternaet.Count > 1)
                                                                    {

                                                                        for (int cun = 0; cun < tabledvalternaet.Count; cun++)
                                                                        {
                                                                            alterstafffnew = "";
                                                                            int alt = cun + 2;
                                                                            if (dvalternaet.Count > 0)
                                                                            {
                                                                                sp_rd = dvalternaet[0]["" + strday.Trim() + temp + ""].ToString();
                                                                                if (hatdegreename.Contains(dvalternaet[0]["degree_code"].ToString()))
                                                                                {
                                                                                    degreename = Convert.ToString(hatdegreename[dvalternaet[0]["degree_code"].ToString()]);
                                                                                    degcode = dvalternaet[0]["degree_code"].ToString();
                                                                                }
                                                                                tablesp_rd = tabledvalternaet[cun]["" + strday.Trim() + temp + ""].ToString();
                                                                            }
                                                                            else
                                                                            {
                                                                                sp_rd = "";
                                                                            }
                                                                            if (sp_rd.Trim() != "" && sp_rd.Trim() != "0" && sp_rd != null)
                                                                            {
                                                                                #region
                                                                                for (int alters = 0; alters < dvalternaetdetailstbls.Count; alters++)
                                                                                {

                                                                                    string[] tablesp_rd_split = tablesp_rd.Split(';');
                                                                                    for (int index = 0; index <= tablesp_rd_split.GetUpperBound(0); index++)
                                                                                    {
                                                                                        string[] sp2 = tablesp_rd_split[index].Split(new Char[] { '-' });
                                                                                        if (sp2.GetUpperBound(0) >= 1)
                                                                                        {
                                                                                            int upperbound = sp2.GetUpperBound(0);
                                                                                            for (int multi_staff = 1; multi_staff < sp2.GetUpperBound(0); multi_staff++)
                                                                                            {
                                                                                                if (sp2[multi_staff] == Convert.ToString(dvalternaetdetailstbls[alters]["actstaffcode"]).Trim())
                                                                                                {
                                                                                                    alterstafffnew = tablesp_rd_split[index];
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                    if (alterstafff == "")
                                                                                                    {
                                                                                                        alterstafff = tablesp_rd_split[index];
                                                                                                        alterstafffnew = alterstafffnew + ';' + tablesp_rd_split[index];
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        alterstafff = alterstafff + ';' + tablesp_rd_split
[index];
                                                                                                        alterstafffnew = alterstafffnew + ';' + tablesp_rd_split[index];
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }

                                                                                    if (alterstafff != "")
                                                                                    {
                                                                                        string sect = dsperiodNew.Tables[0].Rows[pre]["sections"].ToString();
                                                                                        //string q1 = "update alternate_schedule set " + getcolumnfield + "='" + alterstafff + "' where degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                                                        //d2.update_method_wo_parameter(q1, "text");

                                                                                        string tbl_alter = " update tbl_alter_schedule_Details set " + getcolumnfield + "='" + alterstafff + "'  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and FromDate ='" + day_from + "'" + altersetion + "  and No_of_Alter='" + alt + "'";
                                                                                        int a = d2.update_method_wo_parameter(tbl_alter, "text");

                                                                                        string tbl_alters = " delete from AlternateDetails  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and alternatedate='" + day_from + "'" + altersetion + "  and noalter='" + alt + "' and actstaffcode='" + stafcode + "' and alterhour='" + temp + "' ";
                                                                                        int b = d2.update_method_wo_parameter(tbl_alters, "text");
                                                                                        string q1 = "update alternate_schedule set " + getcolumnfield + "='" + alterstafffnew + "' where degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                                                        int c = d2.update_method_wo_parameter(q1, "text");
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        string tbl_alter = " update tbl_alter_schedule_Details set " + getcolumnfield + "=''  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and FromDate ='" + day_from + "'" + altersetion + "  and No_of_Alter='" + alt + "'";
                                                                                        int a = d2.update_method_wo_parameter(tbl_alter, "text");
                                                                                        string tbl_alters = " delete from AlternateDetails  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and alternatedate='" + day_from + "'" + altersetion + "  and NoAlter='" + alt + "' and actstaffcode='" + stafcode + "' and alterhour='" + temp + "' ";
                                                                                        int b = d2.update_method_wo_parameter(tbl_alters, "text");
                                                                                        string q1 = "update alternate_schedule set " + getcolumnfield + "='" + alterstafffnew + "' where degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                                                        int c = d2.update_method_wo_parameter(q1, "text");
                                                                                    }

                                                                                    // }
                                                                                }

                                                                            }

                                                                                #endregion

                                                                            if (tabledvalternaet.Count == alt)
                                                                                cun++;
                                                                        }
                                                                    }
                                                                }
                                                            }


                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }

                        }
                    }
                }
            }

        }
        catch (Exception ex)
        {
            imgdiv2.Visible = true;
            lbl_alert.Text = ex.ToString();
        }
    }

    protected void Request_cancelHierbased_Click(object sender, EventArgs e)
    {
        try
        {
            string Requisition_no_lv = Convert.ToString(txt_rqstn_leave.Text);
            string req = Convert.ToString(TextBox7.Text);
            int val = 0;
            if (req != "")
            {
                string update = "update RQ_Requisition set deleteflag='1' where RequisitionPK='" + req + "'";
                val = d2.update_method_wo_parameter(update, "text");

            }
            if (val > 0)
            {
                imgdiv2.Visible = true;
                lbl_alert.Text = "Approved Leave Requested For Cancel!!";
            }
        }
        catch (Exception ex)
        {


        }

    }


    public void alterremovenew(string staffcode)
    {
        try
        {
            DataTable dtgrid = new DataTable();
            int chkhalf = 0; string hlf = string.Empty; string d = string.Empty; bool saveOrAlter = false; string fdate = string.Empty; string tdate = string.Empty;
            DataTable dt = new DataTable();
            dt.Columns.Add("Dummy0");
            dt.Columns.Add("Dummy1");
            dt.Columns.Add("Dummy2");
            dt.Columns.Add("Dummy3");
            dt.Columns.Add("Dummy4");
            int sno = 0;

            for (int j = 0; j < GV1.Rows.Count; j++)
            {
                sno++;
                DataRow dr = dt.NewRow();
                string morningcheck = string.Empty;
                string eveningcheck = string.Empty;
                TextBox txtdt = (TextBox)GV1.Rows[j].FindControl("txtdate");
                CheckBox chkmrng = (CheckBox)GV1.Rows[j].FindControl("chk_mrng");
                CheckBox chkevng = (CheckBox)GV1.Rows[j].FindControl("chk_evng");
                // CheckBoxList atttype = (CheckBoxList)GV1.Rows[j].FindControl("cblhr");
                string getdatetime = Convert.ToString(txtdt.Text);

                if (getdatetime.Contains('/'))
                {
                    string[] splitdates = getdatetime.Split('/');
                    getdatetime = splitdates[1] + "/" + splitdates[0] + "/" + splitdates[2];

                }
                if (chkmrng.Checked)
                {
                    morningcheck = "True";
                }
                else
                {
                    morningcheck = "False";
                }
                if (chkevng.Checked)
                {
                    eveningcheck = "True";

                }
                else
                {
                    eveningcheck = "False";
                }
                string selectedItem = string.Empty;
                //if (atttype.Items.Count > 0)
                //{


                //    for (int cb = 0; cb < atttype.Items.Count; cb++)
                //    {

                //        if (atttype.Items[cb].Selected)
                //        {
                //            string cbVal = Convert.ToString(atttype.Items[cb].Value);
                //            if (selectedItem == "")
                //            {
                //                selectedItem = cbVal;
                //            }
                //            else
                //            {
                //                selectedItem = selectedItem + "," + cbVal;
                //            }
                //        }
                //    }
                //}
                dr["Dummy0"] = sno;
                dr["Dummy1"] = Convert.ToDateTime(getdatetime);
                dr["Dummy2"] = morningcheck;
                dr["Dummy3"] = eveningcheck;
                // dr["Dummy4"] = selectedItem;


                dt.Rows.Add(dr);
            }
            chkrelived = 0;
            string degcode = "";
            string[] Days = new string[7] { "mon", "tue", "wed", "thu", "fri", "sat", "sun" };
            DataSet dsgetvalue = new DataSet();
            DataSet dsalterperiod = new DataSet();
            DataSet dsstuatt = new DataSet();
            Hashtable hatvalue = new Hashtable();
            Hashtable hatsublab = new Hashtable();
            string degree_var = "";
            string cur_camprevar = "";
            string tmp_datevalue = "";
            string tmp_camprevar = "";
            string strsction = "";
            string strday = "";
            string start_datesem = "";
            string start_dayorder = "";
            string noofdays = "";
            string Strsql = "";
            string SqlFinal = "";
            string sql1 = "";
            string tmp_varstr = "";
            string vari = "";
            string stafftakenclass = "";
            string staffdegreeclass = "";
            string Day_Order = "";
            int noofhrs = 0;
            string MorningDayandEvening = string.Empty;
            string datss = txt_frm.Text;
            string[] spl_frm_date = datss.Split('/');
            fdate = spl_frm_date[1] + "/" + spl_frm_date[0] + "/" + spl_frm_date[2];
            string datss1 = txt_to.Text;
            string[] spl_frm_date1 = datss1.Split('/');
            tdate = spl_frm_date1[1] + "/" + spl_frm_date1[0] + "/" + spl_frm_date1[2];
            DataSet ds_attndmaster = new DataSet();
            ht_sch.Clear();
            hat.Clear();
            hat.Add("college_code", Session["collegecode"].ToString());
            string sql_stringvar = "sp_select_details_staff";
            ds_attndmaster.Dispose();
            ds_attndmaster.Reset();
            ds_attndmaster = d2.select_method(sql_stringvar, hat, "sp");
            if (ds_attndmaster.Tables[0].Rows.Count > 0)
            {
                for (int pcont = 0; pcont < ds_attndmaster.Tables[0].Rows.Count; pcont++)
                {
                    degree_var = Convert.ToString(ds_attndmaster.Tables[0].Rows[pcont]["degree_code"]) + "-" + Convert.ToString(ds_attndmaster.Tables[0].Rows[pcont]["semester"]);
                    if (!ht_sch.Contains(Convert.ToString(degree_var)))
                    {
                        vari = ds_attndmaster.Tables[0].Rows[pcont]["SchOrder"] + "," + ds_attndmaster.Tables[0].Rows[pcont]["nodays"];
                        ht_sch.Add(degree_var, Convert.ToString(vari));
                    }
                }
            }
            ht_sdate.Clear();
            if (ds_attndmaster.Tables[1].Rows.Count > 0)
            {
                for (int pcont = 0; pcont < ds_attndmaster.Tables[1].Rows.Count; pcont++)
                {
                    degree_var = Convert.ToString(ds_attndmaster.Tables[1].Rows[pcont]["batch_year"]) + "-" + Convert.ToString(ds_attndmaster.Tables[1].Rows[pcont]["degree_code"]) + "-" + Convert.ToString(ds_attndmaster.Tables[1].Rows[pcont]["semester"]);
                    if (!ht_sdate.Contains(Convert.ToString(degree_var)))
                    {
                        vari = ds_attndmaster.Tables[1].Rows[pcont]["sdate"] + "," + ds_attndmaster.Tables[1].Rows[pcont]["starting_dayorder"];
                        ht_sdate.Add(degree_var, Convert.ToString(vari));
                    }
                }
            }
            ht_bell.Clear();
            if (ds_attndmaster.Tables[2].Rows.Count > 0)
            {
                for (int pcont = 0; pcont < ds_attndmaster.Tables[2].Rows.Count; pcont++)
                {
                    degree_var = Convert.ToString(ds_attndmaster.Tables[2].Rows[pcont]["batch_year"]) + "-" + Convert.ToString(ds_attndmaster.Tables[2].Rows[pcont]["degree_code"]) + "-" + Convert.ToString(ds_attndmaster.Tables[2].Rows[pcont]["semester"]) + "-" + Convert.ToString(ds_attndmaster.Tables[2].Rows[pcont]["period1"]);
                    if (!ht_bell.Contains(Convert.ToString(degree_var)))
                    {
                        vari = ds_attndmaster.Tables[2].Rows[pcont]["start_time"] + "," + ds_attndmaster.Tables[2].Rows[pcont]["end_time"];
                        ht_bell.Add(degree_var, Convert.ToString(vari));
                    }
                }
            }
            ht_period.Clear();
            if (ds_attndmaster.Tables[3].Rows.Count > 0)
            {
                for (int pcont = 0; pcont < ds_attndmaster.Tables[3].Rows.Count; pcont++)
                {
                    degree_var = Convert.ToString(ds_attndmaster.Tables[3].Rows[pcont]["lock_hr"]);
                    if (!ht_period.Contains(Convert.ToString(degree_var)))
                    {
                        vari = ds_attndmaster.Tables[3].Rows[pcont]["markatt_from"] + "," + ds_attndmaster.Tables[3].Rows[pcont]["markatt_to"];
                        ht_period.Add(degree_var, Convert.ToString(vari));
                    }
                }
            }
            string degreename = "";
            Hashtable hatdegreename = new Hashtable();
            for (int i = 0; i < ds_attndmaster.Tables[5].Rows.Count; i++)
            {
                if (!hatdegreename.Contains(ds_attndmaster.Tables[5].Rows[i]["Degree_Code"].ToString()))
                {
                    hatdegreename.Add(ds_attndmaster.Tables[5].Rows[i]["Degree_Code"].ToString(), ds_attndmaster.Tables[5].Rows[i]["course"].ToString() + '$' + ds_attndmaster.Tables[5].Rows[i]["dept_acronym"].ToString());
                }
            }
            DateTime dtf = Convert.ToDateTime(fdate);
            DateTime dtt = Convert.ToDateTime(tdate);
            if (dtf <= dtt)
            {
                long days = -1;
                DateTime dt1 = DateTime.Now.AddDays(-6);
                DateTime dt2 = DateTime.Now;
                try
                {
                    dt1 = Convert.ToDateTime(fdate);
                    dt2 = Convert.ToDateTime(tdate);
                    TimeSpan t = dt2.Subtract(dt1);
                    days = t.Days;
                }
                catch
                {
                    try
                    {
                        dt1 = Convert.ToDateTime(fdate);
                        dt2 = Convert.ToDateTime(tdate);
                        TimeSpan t = dt2.Subtract(dt1);
                        days = t.Days;
                    }
                    catch
                    {
                    }
                }
                if (days >= 0)
                {
                    string[] differdays = new string[days];
                    noofhrs = 0;
                    if (ds_attndmaster.Tables[6].Rows.Count > 0)
                    {
                        if (ds_attndmaster.Tables[6].Rows[0]["noofhours"].ToString().Trim() != "" && ds_attndmaster.Tables[6].Rows[0]["noofhours"].ToString().Trim() != null && ds_attndmaster.Tables[6].Rows[0]["noofhours"].ToString().Trim() != "0")
                        {
                            noofhrs = Convert.ToInt32(ds_attndmaster.Tables[6].Rows[0]["noofhours"].ToString());
                        }
                    }
                    sql1 = "";
                    Strsql = "";
                    SqlFinal = "";
                    string stafcode = staffcode;
                    for (int day_lp = 0; day_lp < 7; day_lp++)
                    {
                        strday = Days[day_lp].ToString();
                        sql1 = sql1 + "(";
                        tmp_varstr = "";
                        for (int i_loop = 1; i_loop <= noofhrs; i_loop++)
                        {
                            Strsql = Strsql + strday + Convert.ToString(i_loop) + ",";
                            if (tmp_varstr == "")
                            {
                                tmp_varstr = tmp_varstr + strday + Convert.ToString(i_loop) + " like '%" + stafcode + "%'";
                            }
                            else
                            {
                                tmp_varstr = tmp_varstr + " or " + strday + Convert.ToString(i_loop) + " like '%" + stafcode + "%'";
                            }
                        }
                        if (day_lp != 6)
                            tmp_varstr = tmp_varstr + ") or ";
                        else
                            tmp_varstr = tmp_varstr + ")";
                        sql1 = sql1 + tmp_varstr.ToString();
                    }
                    SqlFinal = " select distinct r.Batch_Year,r.degree_code,sy.semester,r.Sections,si.end_date from staff_selector ss,Registration r,";
                    SqlFinal = SqlFinal + " subject s,sub_sem sm,syllabus_master sy,seminfo si where sy.Batch_Year=r.Batch_Year and sy.degree_code=r.degree_code";
                    SqlFinal = SqlFinal + " and sy.semester=r.Current_Semester and sy.syll_code=sm.syll_code and sm.subType_no=s.subType_no ";
                    SqlFinal = SqlFinal + " and s.subject_no=ss.subject_no and isnull(r.sections,'')=isnull(ss.sections,'') and ss.batch_year=r.Batch_Year";
                    SqlFinal = SqlFinal + " and si.Batch_Year=r.Batch_Year and si.degree_code=r.degree_code and si.semester=r.Current_Semester and ";
                    SqlFinal = SqlFinal + " si.Batch_Year=sy.Batch_Year and sy.degree_code=r.degree_code and si.semester=sy.Semester and r.CC=0 and r.Exam_Flag<>'debar'";
                    SqlFinal = SqlFinal + " and r.DelFlag=0 and ss.staff_code='" + stafcode + "'";
                    DataView dvalternaet = new DataView();
                    DataView tabledvalternaet = new DataView();
                    DataView dvalternaetdetails = new DataView();
                    DataView dvsemster = new DataView();
                    DataView dvholiday = new DataView();
                    DataView dvdaily = new DataView();
                    DataView dvsubject = new DataView();
                    DataView dvsublab = new DataView();
                    string getalldetails = "select * from Alternate_Schedule where FromDate between '" + fdate + "' and '" + tdate + "' ; ";
                    getalldetails = getalldetails + " select * from Semester_Schedule order by FromDate desc; ";
                    getalldetails = getalldetails + " Select * from holidaystudents where holiday_date between '" + fdate + "' and '" + tdate + "' ; ";
                    getalldetails = getalldetails + " select staff_name,staff_code from staffmaster ; ";
                    getalldetails = getalldetails + " select s.subject_no,s.subject_name,s.subject_code,sy.Batch_Year,sy.degree_code,sy.semester,ss.Lab from Registration r,syllabus_master sy,sub_sem ss,subject s where r.Batch_Year=sy.Batch_Year and r.degree_code=sy.degree_code and r.Current_Semester=sy.semester and sy.syll_code=ss.syll_code and sy.syll_code=s.syll_code and ss.subType_no=ss.subType_no and r.cc=0 and r.delflag=0 and r.exam_flag<>'debar' and r.degree_code='2012' and r.Batch_Year='1052' and r.Current_Semester='3';";
                    getalldetails = getalldetails + " select distinct Current_Semester,Batch_Year,degree_code from Registration where cc=0 and delflag=0 and exam_flag<>'debar'; ";
                    getalldetails = getalldetails + " select no_of_hrs_I_half_day as mor,no_of_hrs_I_half_day as eve,degree_code,semester from periodattndschedule";
                    getalldetails = getalldetails + " select * from tbl_consider_day_order";
                    getalldetails = getalldetails + " select * from tbl_alter_schedule_Details where FromDate between '" + fdate + "' and '" + tdate + "'";
                    getalldetails = getalldetails + " select * from AlternateDetails where alternatedate between '" + fdate + "' and '" + tdate + "'";
                    DataSet dsall = d2.select_method_wo_parameter(getalldetails, "Text");
                    Hashtable hatholiday = new Hashtable();
                    DataSet dsperiod = d2.select_method(SqlFinal, hat, "Text");

                    DataSet dsperiodNew = d2.select_method_wo_parameter("select distinct s.batch_year,r.degree_code,s.semester,s.sections from registration r, Semester_Schedule s where s.batch_year=r.batch_year and s.degree_code=r.degree_code and r.current_semester=s.semester and ltrim(rtrim(isnull(r.sections,'')))=ltrim(rtrim(isnull(s.sections,''))) and r.CC=0 and r.Exam_Flag<>'debar' and r.DelFlag=0  order by s.batch_year desc", "text");

                    if (dsperiodNew.Tables.Count > 0 && dsperiodNew.Tables[0].Rows.Count > 0)
                    {
                        for (int pre = 0; pre < dsperiodNew.Tables[0].Rows.Count; pre++)
                        {
                            staffdegreeclass = "";
                            cur_camprevar = Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["batch_year"]) + "-" + Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["degree_code"]) + "-" + Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["semester"]) + "-" + Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["sections"]);
                            deg_batch_sem = cur_camprevar;
                            string getdate = "";
                            if (Convert.ToString(tmp_camprevar.Trim()) != Convert.ToString(cur_camprevar.Trim()))
                            {
                                strsction = "";
                                if ((Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["sections"]) != "") && (Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["sections"]) != "-1"))
                                {
                                    strsction = " and sections='" + Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["sections"]) + "'";
                                }
                                string strsubstucount = " select count(distinct r.Roll_No) as stucount,r.Batch_Year,r.degree_code,r.Current_Semester,isnull(r.Sections,'')Sections,s.subject_no,r.adm_date from registration r,subjectchooser s where  r.roll_no=s.roll_no and  r.current_semester=s.semester";
                                strsubstucount = strsubstucount + " and batch_year='" + dsperiodNew.Tables[0].Rows[pre]["batch_year"] + "' and  degree_code='" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + "'  and current_semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "'  and cc=0 and delflag=0 and exam_flag<>'debar' " + strsction + "  group by r.Batch_Year,r.degree_code,r.Current_Semester,isnull(r.Sections,''),s.subject_no,r.adm_date";
                                DataSet dssubstucount = d2.select_method_wo_parameter(strsubstucount, "Text");
                                DataView dvsubstucount = new DataView();
                                hatholiday.Clear();
                                dsall.Tables[2].DefaultView.RowFilter = " degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester=" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " ";
                                DataView duholiday = dsall.Tables[2].DefaultView;
                                for (int i = 0; i < duholiday.Count; i++)
                                {
                                    if (!hatholiday.Contains(duholiday[i]["holiday_date"].ToString()))
                                    {
                                        hatholiday.Add(duholiday[i]["holiday_date"].ToString(), duholiday[i]["holiday_desc"].ToString());
                                    }
                                }
                                string subjectquery = "select distinct s.subject_no,s.subject_name,s.subject_code,sy.Batch_Year,sy.degree_code,sy.semester,ss.Lab,ss.subject_type from Registration r,syllabus_master sy,sub_sem ss,subject s where r.Batch_Year=sy.Batch_Year and r.degree_code=sy.degree_code and r.Current_Semester=sy.semester and sy.syll_code=ss.syll_code and sy.syll_code=s.syll_code and ss.subType_no=s.subType_no and r.cc=0 and r.delflag=0 and r.exam_flag<>'debar' and r.batch_year='" + dsperiodNew.Tables[0].Rows[pre]["batch_year"] + "' and  r.degree_code='" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + "'  and r.current_semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' order by s.subject_no";
                                DataSet dssubject = d2.select_method_wo_parameter(subjectquery, "Text");
                                int frshlf = 0, schlf = 0;
                                dsall.Tables[6].DefaultView.RowFilter = " degree_code ='" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + "' and  semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "'";
                                DataView dvperiod = dsall.Tables[6].DefaultView;
                                if (dvperiod.Count > 0)
                                {
                                    string morhr = dvperiod[0]["mor"].ToString();
                                    string evehr = dvperiod[0]["eve"].ToString(); // poo
                                    MorningDayandEvening = morhr + "$" + evehr;
                                    if (morhr != null && morhr.Trim() != "")
                                        frshlf = Convert.ToInt32(morhr);
                                    if (evehr != null && evehr.Trim() != "")
                                        schlf = Convert.ToInt32(evehr);
                                }
                                string getcurrent_sem = "";
                                dsall.Tables[5].DefaultView.RowFilter = "degree_code ='" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + "'  and batch_year = '" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + "'";
                                DataView dvcurrsem = dsall.Tables[5].DefaultView;
                                if (dvcurrsem.Count > 0)
                                {
                                    getcurrent_sem = dvcurrsem[0]["current_semester"].ToString();
                                }
                                if (Convert.ToString(getcurrent_sem) == Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["semester"]))
                                {
                                    string semenddate = string.Empty;
                                    //string semenddate = dsperiodNew.Tables[0].Rows[pre]["end_date"].ToString();
                                    string altersetion = "";
                                    if (dsperiodNew.Tables[0].Rows[pre]["sections"].ToString() != "-1" && dsperiodNew.Tables[0].Rows[pre]["sections"].ToString() != null && dsperiodNew.Tables[0].Rows[pre]["sections"].ToString().Trim() != "")
                                    {
                                        altersetion = "and Sections='" + dsperiodNew.Tables[0].Rows[pre]["sections"].ToString() + "'";
                                    }
                                    Hashtable hatdc = new Hashtable();
                                    dsall.Tables[7].DefaultView.RowFilter = "degree_code ='" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + "'  and batch_year = '" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + "' and semester=" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "  ";
                                    DataView dvdayorderchanged = dsall.Tables[7].DefaultView;
                                    for (int dc = 0; dc < dvdayorderchanged.Count; dc++)
                                    {
                                        DateTime dtdcf = Convert.ToDateTime(dvdayorderchanged[dc]["from_date"].ToString());
                                        DateTime dtdct = Convert.ToDateTime(dvdayorderchanged[dc]["to_date"].ToString());
                                        for (DateTime dtc = dtdcf; dtc <= dtdct; dtc = dtc.AddDays(1))
                                        {
                                            if (!hatdc.Contains(dtc))
                                            {
                                                hatdc.Add(dtc, dtc);
                                            }
                                        }
                                    }
                                    for (int row_inc = 0; row_inc <= days; row_inc++)
                                    {
                                        string setdate = "";
                                        if (hatdegreename.Contains(dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString()))
                                        {
                                            degreename = Convert.ToString(hatdegreename[dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString()]).ToString();
                                        }
                                        DateTime cur_day = new DateTime();
                                        cur_day = dt2.AddDays(-row_inc);
                                        if (!hatdc.Contains(cur_day))
                                        {
                                            tmp_datevalue = Convert.ToString(cur_day);
                                            degree_var = Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["degree_code"]) + "-" + Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["semester"]);
                                            string SchOrder = "";
                                            string day_from = cur_day.ToString("yyyy-MM-dd");
                                            DateTime schfromdate = cur_day;
                                            dsall.Tables[1].DefaultView.RowFilter = "batch_year='" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + "' and degree_code='" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + "' and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and FromDate<='" + cur_day.ToString() + "'";
                                            dvsemster = dsall.Tables[1].DefaultView;
                                            if (dvsemster.Count > 0)
                                                getdate = dvsemster[0]["FromDate"].ToString();
                                            if (Convert.ToString(getdate) != "" && Convert.ToString(getdate).Trim() != "0" && Convert.ToString(getdate).Trim() != null)
                                            {
                                                DateTime getsche = Convert.ToDateTime(getdate);
                                                if (Convert.ToDateTime(schfromdate) == Convert.ToDateTime(getsche) || Convert.ToDateTime(schfromdate) != Convert.ToDateTime(getsche))
                                                {
                                                    if (ht_sch.Contains(Convert.ToString(degree_var)))
                                                    {
                                                        string contvar = Convert.ToString(ht_sch[Convert.ToString(degree_var)]);
                                                        string[] sp_rd_semi = contvar.Split(',');
                                                        if (sp_rd_semi.GetUpperBound(0) >= 1)
                                                        {
                                                            SchOrder = sp_rd_semi[0].ToString();
                                                            noofdays = sp_rd_semi[1].ToString();
                                                        }
                                                    }
                                                    degree_var = Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["batch_year"]) + "-" + Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["degree_code"]) + "-" + Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["semester"]);
                                                    if (ht_sdate.Contains(Convert.ToString(degree_var)))
                                                    {
                                                        string contvar = Convert.ToString(ht_sdate[Convert.ToString(degree_var)]);
                                                        string[] sp_rd_semi = contvar.Split(',');
                                                        if (sp_rd_semi.GetUpperBound(0) >= 1)
                                                        {
                                                            start_datesem = sp_rd_semi[0].ToString();
                                                            start_dayorder = sp_rd_semi[1].ToString();
                                                        }
                                                    }

                                                    Day_Order = "";
                                                    if (SchOrder == "1")
                                                    {
                                                        strday = cur_day.ToString("ddd");
                                                        Day_Order = "0-" + Convert.ToString(strday);
                                                    }
                                                    else
                                                    {
                                                        string[] sps = dt2.ToString().Split('/');
                                                        string curdate = sps[0] + '/' + sps[1] + '/' + sps[2];
                                                        strday = d2.findday(cur_day.ToString(), dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString(), dsperiodNew.Tables[0].Rows[pre]["semester"].ToString(), dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString(), start_datesem.ToString(), noofdays.ToString(), start_dayorder);
                                                        Day_Order = "0-" + Convert.ToString(strday);
                                                    }

                                                    string reasonsun = "";
                                                    if (!hatholiday.Contains(cur_day.ToString()) || reasonsun.Trim().ToLower() != "sunday")
                                                    {
                                                        string str_day = strday;
                                                        string Atmonth = cur_day.Month.ToString();
                                                        string Atyear = cur_day.Year.ToString();
                                                        long strdate = (Convert.ToInt32(Atmonth) + Convert.ToInt32(Atyear) * 12);
                                                        sql1 = "";
                                                        Strsql = "";
                                                        DataView dv = new DataView();
                                                        int starhour = 0;
                                                        int endhour = 0;
                                                        string halfdat = string.Empty;
                                                        string fistday = string.Empty;
                                                        if (dt.Rows.Count > 0)
                                                        {


                                                            dt.DefaultView.RowFilter = "Dummy1='" + cur_day + "'";
                                                            dv = dt.DefaultView;
                                                            if (dv[0]["Dummy2"] == "False" && dv[0]["Dummy3"] == "False")
                                                            {
                                                                halfdat = d2.GetFunction("select no_of_hrs_I_half_day from PeriodAttndSchedule where degree_code='" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + "' and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "'");
                                                                if (halfdat != "")
                                                                {


                                                                    // for (int cb = 1; cb <= noofhrs; cb++)
                                                                    // {
                                                                    // if (halfdat == cb)
                                                                    //  {
                                                                    starhour = 1;
                                                                    endhour = noofhrs;
                                                                    // }
                                                                    // }

                                                                }
                                                            }
                                                            else if (dv[0]["Dummy2"] == "False")
                                                            {
                                                                halfdat = d2.GetFunction("select no_of_hrs_I_half_day from PeriodAttndSchedule where degree_code='" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + "' and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "'");
                                                                if (halfdat != "")
                                                                {

                                                                    int mrng = 0;
                                                                    int.TryParse(halfdat, out mrng);
                                                                    //for (int cb = 1; cb <= noofhrs; cb++)
                                                                    //{
                                                                    // if (halfdat == cb)
                                                                    //{
                                                                    starhour = 1;
                                                                    endhour = mrng;
                                                                    //    }
                                                                    //}

                                                                }
                                                            }
                                                            else if (dv[0]["Dummy3"] == "False")
                                                            {
                                                                fistday = d2.GetFunction("select no_of_hrs_I_half_day from PeriodAttndSchedule where degree_code='" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + "' and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "'");
                                                                halfdat = d2.GetFunction("select no_of_hrs_II_half_day from PeriodAttndSchedule where degree_code='" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + "' and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "'");
                                                                int evn = 0;
                                                                int.TryParse(fistday, out evn);
                                                                if (halfdat != "")
                                                                {


                                                                    // for (int cb = evn+1; cb <= noofhrs; cb++)
                                                                    // {
                                                                    //if (halfdat == cb)
                                                                    //  {
                                                                    starhour = evn + 1;
                                                                    endhour = noofhrs;
                                                                    //  }
                                                                    // }

                                                                }
                                                            }




                                                        }

                                                        if (starhour != 0 && endhour != 0)
                                                        {
                                                            for (int i_loop = starhour; i_loop <= endhour; i_loop++)//delsijref
                                                            {
                                                                if (dv.Count > 0)
                                                                {
                                                                    // string getselected = Convert.ToString(dv[0]["Dummy4"]);
                                                                    //  string lopval = Convert.ToString(i_loop);
                                                                    // if (getselected.Contains(lopval))
                                                                    // {

                                                                    Strsql = Strsql + strday + Convert.ToString(i_loop) + ",";
                                                                    if (sql1 == "")
                                                                    {
                                                                        sql1 = sql1 + strday + Convert.ToString(i_loop) + " like '%" + stafcode + "%'";//Modified by Manikandan 14/08/2013 from above comment line
                                                                    }
                                                                    else
                                                                    {
                                                                        sql1 = sql1 + " or " + strday + Convert.ToString(i_loop) + " like '%" + stafcode + "%'";//Modified by Manikandan 14/08/2013 from above comment line
                                                                    }
                                                                    // }
                                                                }

                                                            }
                                                            string day_aten = cur_day.Day.ToString();
                                                            string strsectionvar = "";
                                                            string labsection = "";
                                                            if (Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["sections"]) != "" && Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["sections"]) != "-1")
                                                            {
                                                                strsectionvar = " and sections='" + Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["sections"]) + "'";
                                                                labsection = " and sections='" + Convert.ToString(dsperiodNew.Tables[0].Rows[pre]["sections"]) + "'";
                                                            }
                                                            sql1 = " and (" + sql1 + ")";
                                                            //zzz
                                                            dsall.Tables[0].DefaultView.RowFilter = "degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                            dvalternaet = dsall.Tables[0].DefaultView;
                                                            dsall.Tables[8].DefaultView.RowFilter = "degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                            tabledvalternaet = dsall.Tables[8].DefaultView;

                                                            string text_temp = "";
                                                            int temp = 0;
                                                            text_temp = "";
                                                            string alterSubType = string.Empty;
                                                            string getcolumnfield = "";
                                                            Boolean moringleav = false;
                                                            Boolean evenleave = false;
                                                            //zzz                                                        
                                                            dsall.Tables[2].DefaultView.RowFilter = "holiday_date='" + cur_day.ToString("MM/dd/yyyy") + "' and degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "'";
                                                            dvholiday = dsall.Tables[2].DefaultView;
                                                            if (dvholiday.Count > 0)
                                                            {
                                                                if (!hatholiday.Contains(cur_day.ToString()))
                                                                    hatholiday.Add(cur_day.ToString(), dvholiday[0]["holiday_desc"].ToString());
                                                                if (dvholiday[0]["morning"].ToString() == "1" || dvholiday[0]["morning"].ToString().Trim().ToLower() == "true")
                                                                    moringleav = true;
                                                                if (dvholiday[0]["evening"].ToString() == "1" || dvholiday[0]["evening"].ToString().Trim().ToLower() == "true")
                                                                    evenleave = true;
                                                                if (dvholiday[0]["halforfull"].ToString() == "0" || dvholiday[0]["halforfull"].ToString().Trim().ToLower() == "false")
                                                                {
                                                                    evenleave = true;
                                                                    moringleav = true;
                                                                }
                                                            }
                                                            if (hlf != "0" && hlf != "")
                                                            {
                                                                string hr = "";
                                                                if (d != "1")
                                                                {
                                                                    hr = d2.GetFunction("select no_of_hrs_II_half_day from PeriodAttndSchedule where degree_code='" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + "' and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "'");
                                                                }
                                                                else if (d == "1")
                                                                {
                                                                    hr = d2.GetFunction("select no_of_hrs_I_half_day from PeriodAttndSchedule where degree_code='" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + "' and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "'");
                                                                }
                                                                noofhrs = Convert.ToInt32(hr);
                                                            }

                                                            for (temp = starhour; temp <= endhour; temp++)
                                                            {
                                                                if (dv.Count > 0)//delsi1203
                                                                {
                                                                    //  string getselected = Convert.ToString(dv[0]["Dummy4"]);
                                                                    // string lopval = Convert.ToString(temp);
                                                                    // if (getselected.Contains(lopval))
                                                                    // {
                                                                    string sp_rd = "";
                                                                    string sp_rds = "";
                                                                    string sp_rdtbl = "";
                                                                    string tablesp_rd = "";
                                                                    Boolean altfalg = false;
                                                                    if (altfalg == false)
                                                                    {
                                                                        #region semesterschedul
                                                                        getcolumnfield = Convert.ToString(strday + temp);
                                                                        if (dvsemster.Count > 0)
                                                                        {
                                                                            if (dvsemster[0][getcolumnfield].ToString() != "" && dvsemster[0][getcolumnfield].ToString() != null && dvsemster[0][getcolumnfield].ToString() != "\0")
                                                                            {
                                                                                string timetable = "";
                                                                                string alterstafff = "";
                                                                                string alterstaffftbl = "";
                                                                                string name = dvsemster[0]["ttname"].ToString();
                                                                                if (name != null && name.Trim() != "")
                                                                                {
                                                                                    timetable = name;
                                                                                }
                                                                                sp_rd = dvsemster[0][getcolumnfield].ToString();
                                                                                string[] sp_rd_semi = sp_rd.Split(';');
                                                                                for (int semi = 0; semi <= sp_rd_semi.GetUpperBound(0); semi++)
                                                                                {
                                                                                    string[] sp2 = sp_rd_semi[semi].Split(new Char[] { '-' });
                                                                                    if (sp2.GetUpperBound(0) >= 1)
                                                                                    {
                                                                                        int upperbound = sp2.GetUpperBound(0);
                                                                                        for (int multi_staff = 1; multi_staff < sp2.GetUpperBound(0); multi_staff++)
                                                                                        {
                                                                                            if (sp2[multi_staff] == stafcode)
                                                                                            {
                                                                                                altfalg = true;
                                                                                                dsall.Tables[9].DefaultView.RowFilter = "degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and alternatedate='" + day_from + "' and alterhour='" + temp + "' and actstaffcode='" + stafcode + "' and actsubno='" + sp2[0] + "'";
                                                                                                dvalternaetdetails = dsall.Tables[9].DefaultView;
                                                                                                if (dvalternaetdetails.Count > 0)
                                                                                                {
                                                                                                    for (int alters = 0; alters < dvalternaetdetails.Count; alters++)
                                                                                                    {
                                                                                                        DataTable dtalter = dvalternaetdetails.ToTable();

                                                                                                        dsall.Tables[9].DefaultView.RowFilter = "degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and alternatedate='" + day_from + "' and alterhour='" + temp + "' and actstaffcode='" + dvalternaetdetails[alters]["alterstaffcode"] + "' and actsubno='" + dtalter.Rows[alters]["altersubno"] + "' and noalter='2'";
                                                                                                        DataView dvalternaetdetailstbl = dsall.Tables[9].DefaultView;

                                                                                                        if (dvalternaetdetailstbl.Count >= 0)
                                                                                                        {
                                                                                                            sp_rds = dvalternaet[0]["" + strday.Trim() + temp + ""].ToString();
                                                                                                            string[] sp_rdd = sp_rds.Split(';');
                                                                                                            for (int index = 0; index <= sp_rdd.GetUpperBound(0); index++)
                                                                                                            {
                                                                                                                string[] sp3 = sp_rdd[index].Split(new Char[] { '-' });
                                                                                                                if (sp3.GetUpperBound(0) >= 1)
                                                                                                                {
                                                                                                                    int upperbounds = sp3.GetUpperBound(0);
                                                                                                                    for (int multi_staffs = 1; multi_staffs < sp3.GetUpperBound(0); multi_staffs++)
                                                                                                                    {
                                                                                                                        if (sp3[multi_staffs] == Convert.ToString(dtalter.Rows[alters]["alterstaffcode"]).Trim())
                                                                                                                        {

                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                            if (alterstafff == "")
                                                                                                                            {
                                                                                                                                alterstafff = sp_rdd[index];
                                                                                                                            }
                                                                                                                            else
                                                                                                                                alterstafff = alterstafff + ';' + sp_rdd[index];
                                                                                                                        }


                                                                                                                    }
                                                                                                                }
                                                                                                            }

                                                                                                            if (alterstafff != "")
                                                                                                            {
                                                                                                                string sect = dsperiodNew.Tables[0].Rows[pre]["sections"].ToString();
                                                                                                                string q1 = "update alternate_schedule set " + getcolumnfield + "='" + alterstafff + "' where degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                                                                                int a = d2.update_method_wo_parameter(q1, "text");

                                                                                                                //string tbl_alter = " update tbl_alter_schedule_Details set " + getcolumnfield + "=''  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and FromDate ='" + day_from + "'" + altersetion + " ";
                                                                                                                // d2.update_method_wo_parameter(tbl_alter, "text");
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                string q1 = "update alternate_schedule set " + getcolumnfield + "='' where degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                                                                                int a = d2.update_method_wo_parameter(q1, "text");
                                                                                                            }



                                                                                                            // for (int cun = 0; cun < tabledvalternaet.Count; cun++)
                                                                                                            // {
                                                                                                            int alt = 1;
                                                                                                            sp_rdtbl = tabledvalternaet[0]["" + strday.Trim() + temp + ""].ToString();
                                                                                                            string[] sp_rdtbls = sp_rdtbl.Split(';');
                                                                                                            for (int index = 0; index <= sp_rdtbls.GetUpperBound(0); index++)
                                                                                                            {
                                                                                                                string[] sp4 = sp_rdtbls[index].Split(new Char[] { '-' });
                                                                                                                if (sp4.GetUpperBound(0) >= 1)
                                                                                                                {
                                                                                                                    int upperboundtbl = sp4.GetUpperBound(0);
                                                                                                                    for (int multi_stafftbl = 1; multi_stafftbl < sp4.GetUpperBound(0); multi_stafftbl++)
                                                                                                                    {
                                                                                                                        if (sp4[multi_stafftbl] == dtalter.Rows[alters]["alterstaffcode"].ToString().Trim())
                                                                                                                        {

                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                            if (alterstaffftbl == "")
                                                                                                                            {
                                                                                                                                alterstaffftbl = sp_rdtbls[index];
                                                                                                                            }
                                                                                                                            else
                                                                                                                                alterstaffftbl = alterstaffftbl + ';' + sp_rdtbls[index];
                                                                                                                        }


                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                            if (alterstaffftbl != "")
                                                                                                            {
                                                                                                                string sect = dsperiodNew.Tables[0].Rows[pre]["sections"].ToString();
                                                                                                                //string q1 = "update alternate_schedule set " + getcolumnfield + "='" + alterstafff + "' where degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                                                                                //d2.update_method_wo_parameter(q1, "text");

                                                                                                                string tbl_alter = " update tbl_alter_schedule_Details set " + getcolumnfield + "='" + alterstaffftbl + "'  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and FromDate ='" + day_from + "'" + altersetion + "  and No_of_Alter='" + alt + "'";
                                                                                                                int a = d2.update_method_wo_parameter(tbl_alter, "text");

                                                                                                                string tbl_alters = " delete from AlternateDetails  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and alternatedate='" + day_from + "'" + altersetion + "  and noalter='" + alt + "' and actstaffcode='" + staffcode + "' and actsubno='" + sp2[0] + "' and alterhour='" + temp + "'";
                                                                                                                int b = d2.update_method_wo_parameter(tbl_alters, "text");
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                string tbl_alter = " update tbl_alter_schedule_Details set " + getcolumnfield + "=''  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and FromDate ='" + day_from + "'" + altersetion + "  and No_of_Alter='" + alt + "'";
                                                                                                                int a = d2.update_method_wo_parameter(tbl_alter, "text");
                                                                                                                string tbl_alters = " delete from AlternateDetails  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and alternatedate='" + day_from + "'" + altersetion + "  and NoAlter='" + alt + "' and actstaffcode='" + staffcode + "' and actsubno='" + sp2[0] + "' and alterhour='" + temp + "'";
                                                                                                                int b = d2.update_method_wo_parameter(tbl_alters, "text");
                                                                                                            }

                                                                                                            // }
                                                                                                        }

                                                                                                        if (dvalternaetdetailstbl.Count > 0)
                                                                                                        {
                                                                                                            alterstafff = "";
                                                                                                            for (int cun = 1; cun < tabledvalternaet.Count; cun++)
                                                                                                            {
                                                                                                                int alt = cun + 1;
                                                                                                                sp_rdtbl = tabledvalternaet[cun]["" + strday.Trim() + temp + ""].ToString();
                                                                                                                string[] sp_rdtbls = sp_rdtbl.Split(';');
                                                                                                                for (int index = 0; index <= sp_rdtbls.GetUpperBound(0); index++)
                                                                                                                {
                                                                                                                    string[] sp4 = sp_rdtbls[index].Split(new Char[] { '-' });
                                                                                                                    if (sp4.GetUpperBound(0) >= 1)
                                                                                                                    {
                                                                                                                        int upperboundtbl = sp4.GetUpperBound(0);
                                                                                                                        for (int multi_stafftbl = 1; multi_stafftbl < sp4.GetUpperBound(0); multi_stafftbl++)
                                                                                                                        {
                                                                                                                            if (sp4[multi_stafftbl] == dvalternaetdetailstbl[alters]["alterstaffcode"].ToString().Trim())
                                                                                                                            {

                                                                                                                            }
                                                                                                                            else
                                                                                                                            {
                                                                                                                                if (alterstaffftbl == "")
                                                                                                                                {
                                                                                                                                    alterstaffftbl = sp_rdtbls[index];
                                                                                                                                }
                                                                                                                                else
                                                                                                                                    alterstaffftbl = alterstaffftbl + ';' + sp_rdtbls[index];
                                                                                                                            }
                                                                                                                            if (alterstaffftbl != "")
                                                                                                                            {
                                                                                                                                string sect = dsperiodNew.Tables[0].Rows[pre]["sections"].ToString();
                                                                                                                                //string q1 = "update alternate_schedule set " + getcolumnfield + "='" + alterstafff + "' where degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                                                                                                //d2.update_method_wo_parameter(q1, "text");

                                                                                                                                string tbl_alter = " update tbl_alter_schedule_Details set " + getcolumnfield + "='" + alterstaffftbl + "'  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and FromDate ='" + day_from + "'" + altersetion + "  and No_of_Alter='" + alt + "'";
                                                                                                                                int a = d2.update_method_wo_parameter(tbl_alter, "text");


                                                                                                                                string tbl_alters = " delete from AlternateDetails  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and alternatedate='" + day_from + "'" + altersetion + "  and NoAlter='" + alt + "' and actstaffcode='" + dtalter.Rows[alters]["alterstaffcode"] + "' and actsubno='" + dtalter.Rows[alters]["altersubno"] + "' and alterhour='" + temp + "'";
                                                                                                                                int b = d2.update_method_wo_parameter(tbl_alters, "text");

                                                                                                                            }
                                                                                                                            else
                                                                                                                            {
                                                                                                                                string sect = dsperiodNew.Tables[0].Rows[pre]["sections"].ToString();
                                                                                                                                //string q1 = "update alternate_schedule set " + getcolumnfield + "='" + alterstafff + "' where degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                                                                                                //d2.update_method_wo_parameter(q1, "text");

                                                                                                                                string tbl_alter = " update tbl_alter_schedule_Details set " + getcolumnfield + "=''  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and FromDate ='" + day_from + "'" + altersetion + "  and No_of_Alter='" + alt + "'";
                                                                                                                                int a = d2.update_method_wo_parameter(tbl_alter, "text");
                                                                                                                                string tbl_alters = " delete from AlternateDetails  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and alternatedate='" + day_from + "'" + altersetion + "  and NoAlter='" + alt + "' and actstaffcode='" + dtalter.Rows[alters]["alterstaffcode"] + "' and actsubno='" + dtalter.Rows[alters]["altersubno"] + "' and alterhour='" + temp + "'";
                                                                                                                                int b = d2.update_method_wo_parameter(tbl_alters, "text");
                                                                                                                            }

                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }

                                                                                                            sp_rds = dvalternaet[0]["" + strday.Trim() + temp + ""].ToString();
                                                                                                            string[] sp_rdds = sp_rds.Split(';');
                                                                                                            for (int index = 0; index <= sp_rdds.GetUpperBound(0); index++)
                                                                                                            {
                                                                                                                string[] sp3 = sp_rdds[index].Split(new Char[] { '-' });
                                                                                                                if (sp3.GetUpperBound(0) >= 1)
                                                                                                                {
                                                                                                                    int upperbounds = sp3.GetUpperBound(0);
                                                                                                                    for (int multi_staffs = 1; multi_staffs < sp3.GetUpperBound(0); multi_staffs++)
                                                                                                                    {
                                                                                                                        if (sp3[multi_staffs] == Convert.ToString(dvalternaetdetailstbl[alters]["alterstaffcode"]).Trim())
                                                                                                                        {

                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                            if (alterstafff == "")
                                                                                                                            {
                                                                                                                                alterstafff = sp_rdds[index];
                                                                                                                            }
                                                                                                                            else
                                                                                                                                alterstafff = alterstafff + ';' + sp_rdds[index];
                                                                                                                        }


                                                                                                                    }
                                                                                                                }
                                                                                                            }

                                                                                                            if (alterstafff != "")
                                                                                                            {
                                                                                                                string sect = dsperiodNew.Tables[0].Rows[pre]["sections"].ToString();
                                                                                                                string q1 = "update alternate_schedule set " + getcolumnfield + "='" + alterstafff + "' where degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                                                                                int a = d2.update_method_wo_parameter(q1, "text");

                                                                                                                //string tbl_alter = " update tbl_alter_schedule_Details set " + getcolumnfield + "=''  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and FromDate ='" + day_from + "'" + altersetion + " ";
                                                                                                                // d2.update_method_wo_parameter(tbl_alter, "text");
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                string q1 = "update alternate_schedule set " + getcolumnfield + "='' where degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                                                                                int a = d2.update_method_wo_parameter(q1, "text");
                                                                                                            }





                                                                                                        }



                                                                                                    }


                                                                                                }


                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                        #endregion
                                                                    }

                                                                    if (altfalg != true)
                                                                    {
                                                                        dsall.Tables[9].DefaultView.RowFilter = "degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and alternatedate='" + day_from + "' and alterhour='" + temp + "' and actstaffcode='" + stafcode + "'  and noalter>'1'";
                                                                        DataView dvalternaetdetailstbls = dsall.Tables[9].DefaultView;

                                                                        if (dvalternaetdetailstbls.Count > 0)
                                                                        {
                                                                            string alterstafff = string.Empty;
                                                                            string alterstafffnew = string.Empty;
                                                                            if (tabledvalternaet.Count > 1)
                                                                            {

                                                                                for (int cun = 0; cun < tabledvalternaet.Count; cun++)
                                                                                {
                                                                                    alterstafffnew = "";
                                                                                    int alt = cun + 2;
                                                                                    if (dvalternaet.Count > 0)
                                                                                    {
                                                                                        sp_rd = dvalternaet[0]["" + strday.Trim() + temp + ""].ToString();
                                                                                        if (hatdegreename.Contains(dvalternaet[0]["degree_code"].ToString()))
                                                                                        {
                                                                                            degreename = Convert.ToString(hatdegreename[dvalternaet[0]["degree_code"].ToString()]);
                                                                                            degcode = dvalternaet[0]["degree_code"].ToString();
                                                                                        }
                                                                                        tablesp_rd = tabledvalternaet[cun]["" + strday.Trim() + temp + ""].ToString();
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        sp_rd = "";
                                                                                    }
                                                                                    if (sp_rd.Trim() != "" && sp_rd.Trim() != "0" && sp_rd != null)
                                                                                    {
                                                                                        #region
                                                                                        for (int alters = 0; alters < dvalternaetdetailstbls.Count; alters++)
                                                                                        {

                                                                                            string[] tablesp_rd_split = tablesp_rd.Split(';');
                                                                                            for (int index = 0; index <= tablesp_rd_split.GetUpperBound(0); index++)
                                                                                            {
                                                                                                string[] sp2 = tablesp_rd_split[index].Split(new Char[] { '-' });
                                                                                                if (sp2.GetUpperBound(0) >= 1)
                                                                                                {
                                                                                                    int upperbound = sp2.GetUpperBound(0);
                                                                                                    for (int multi_staff = 1; multi_staff < sp2.GetUpperBound(0); multi_staff++)
                                                                                                    {
                                                                                                        if (sp2[multi_staff] == Convert.ToString(dvalternaetdetailstbls[alters]["actstaffcode"]).Trim())
                                                                                                        {
                                                                                                            alterstafffnew = tablesp_rd_split[index];
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                            if (alterstafff == "")
                                                                                                            {
                                                                                                                alterstafff = tablesp_rd_split[index];
                                                                                                                alterstafffnew = alterstafffnew + ';' + tablesp_rd_split[index];
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                alterstafff = alterstafff + ';' + tablesp_rd_split
[index];
                                                                                                                alterstafffnew = alterstafffnew + ';' + tablesp_rd_split[index];
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }

                                                                                            if (alterstafff != "")
                                                                                            {
                                                                                                string sect = dsperiodNew.Tables[0].Rows[pre]["sections"].ToString();
                                                                                                //string q1 = "update alternate_schedule set " + getcolumnfield + "='" + alterstafff + "' where degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                                                                //d2.update_method_wo_parameter(q1, "text");

                                                                                                string tbl_alter = " update tbl_alter_schedule_Details set " + getcolumnfield + "='" + alterstafff + "'  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and FromDate ='" + day_from + "'" + altersetion + "  and No_of_Alter='" + alt + "'";
                                                                                                int a = d2.update_method_wo_parameter(tbl_alter, "text");

                                                                                                string tbl_alters = " delete from AlternateDetails  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and alternatedate='" + day_from + "'" + altersetion + "  and noalter='" + alt + "' and actstaffcode='" + stafcode + "' and alterhour='" + temp + "' ";
                                                                                                int b = d2.update_method_wo_parameter(tbl_alters, "text");
                                                                                                string q1 = "update alternate_schedule set " + getcolumnfield + "='" + alterstafffnew + "' where degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                                                                int c = d2.update_method_wo_parameter(q1, "text");
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                string tbl_alter = " update tbl_alter_schedule_Details set " + getcolumnfield + "=''  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and FromDate ='" + day_from + "'" + altersetion + "  and No_of_Alter='" + alt + "'";
                                                                                                int a = d2.update_method_wo_parameter(tbl_alter, "text");
                                                                                                string tbl_alters = " delete from AlternateDetails  where batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and degree_code = " + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and semester = " + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + " and alternatedate='" + day_from + "'" + altersetion + "  and NoAlter='" + alt + "' and actstaffcode='" + stafcode + "' and alterhour='" + temp + "' ";
                                                                                                int b = d2.update_method_wo_parameter(tbl_alters, "text");
                                                                                                string q1 = "update alternate_schedule set " + getcolumnfield + "='" + alterstafffnew + "' where degree_code=" + dsperiodNew.Tables[0].Rows[pre]["degree_code"].ToString() + " and batch_year=" + dsperiodNew.Tables[0].Rows[pre]["batch_year"].ToString() + " and semester='" + dsperiodNew.Tables[0].Rows[pre]["semester"].ToString() + "' " + altersetion + " and fromdate='" + day_from + "'";
                                                                                                int c = d2.update_method_wo_parameter(q1, "text");
                                                                                            }

                                                                                            // }
                                                                                        }

                                                                                    }

                                                                                        #endregion

                                                                                    if (tabledvalternaet.Count == alt)
                                                                                        cun++;
                                                                                }
                                                                            }
                                                                        }
                                                                    }

                                                                }
                                                            }





                                                            // }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }

                }
            }



        }

        catch (Exception ex)
        {
            imgdiv2.Visible = true;
            lbl_alert.Text = ex.ToString();
        }
    }



    //Added By SaranyaDevi 05.12.2018

    public void bindgrid_Item_approvalstaff(string reqnumber)
    {
        try
        {
            requeststaffapprovalno = reqnumber;
            string applid = "";

            applid = d2.GetFunction("select appl_id  from staff_appl_master sm, staffmaster s where sm.appl_no=s.appl_no and s.staff_code='" + staffcodesession + "' and s.resign=0 and s.settled=0");

            if (applid != "0")
            {
                string query = "select * from RQ_RequestHierarchy where ReqStaffAppNo='" + applid + "' and RequestType=1 order by ReqStaffAppNo,ReqApproveStage,ReqAppPriority";
                ds.Clear();
                ds = d2.select_method_wo_parameter(query, "Text");
                DataTable dtitem = new DataTable();
                dtitem.Columns.Add("StaffName");
                dtitem.Columns.Add("Department");
                dtitem.Columns.Add("Designation");
                dtitem.Columns.Add("Stage");
                dtitem.Columns.Add("StaffCode");
                DataRow drow;
                chkrelived = 0;
                if (ds.Tables[0].Rows.Count > 0)
                {
                    chkrelived = 0;
                    for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                    {
                        string staffcode = d2.GetFunction("select staff_code from staffmaster s,staff_appl_master sm where s.appl_no=sm.appl_no and s.resign=0 and s.settled=0 and sm.appl_id='" + Convert.ToString(ds.Tables[0].Rows[i]["ReqAppStaffAppNo"]) + "'");
                        if (staffcode == "0")
                        {
                            imgdiv2.Visible = true;
                            lbl_alert.Text = "The Approval Staff Was Relived,Change The Hierarchy Setting";
                            chkrelived = 1;
                        }
                        else
                        {
                            chkrelived = 0;
                            string staffname = d2.GetFunction("select appl_name from staff_appl_master where appl_id='" + Convert.ToString(ds.Tables[0].Rows[i]["ReqAppStaffAppNo"]) + "'");
                            string dept = d2.GetFunction("select s.dept_name as dept from staff_appl_master s,staffmaster m,stafftrans t,hrdept_master h,desig_master d where s.appl_no = m.appl_no and m.staff_code = t.staff_code and t.dept_code = h.dept_code and t.desig_code = d.desig_code and m.college_code = '" + Session["collegecode"] + "' and t.latestrec = 1 and m.resign = 0 and settled = 0  and m.college_code=h.college_code and m.college_code=d.collegeCode  and s.appl_id='" + Convert.ToString(ds.Tables[0].Rows[i]["ReqAppStaffAppNo"]) + "'");
                            string desg = d2.GetFunction("select d.desig_name as design from staff_appl_master s,staffmaster m,stafftrans t,hrdept_master h,desig_master d where s.appl_no = m.appl_no and m.staff_code = t.staff_code and t.dept_code = h.dept_code and t.desig_code = d.desig_code and m.college_code = '" + Session["collegecode"] + "' and t.latestrec = 1 and m.resign = 0 and settled = 0 and m.college_code=h.college_code and m.college_code=d.collegeCode  and s.appl_id='" + Convert.ToString(ds.Tables[0].Rows[i]["ReqAppStaffAppNo"]) + "'");
                            string stagecount = Convert.ToString(ds.Tables[0].Rows[i]["ReqApproveStage"]);
                            pri_txt = Convert.ToString(ds.Tables[0].Rows[i]["ReqAppPriority"]);
                            abc1();
                            string stage = stagecount + "-" + con_txt;
                            drow = dtitem.NewRow();
                            drow[0] = staffname;
                            drow[1] = dept;
                            drow[2] = desg;
                            drow[3] = stage;
                            drow[4] = staffcode;
                            dtitem.Rows.Add(drow);
                        }
                    }
                }
                if (dtitem.Rows.Count > 0)
                {
                    sp_appstaff_Item.Visible = true;
                    grid_Item_approvalstaff.DataSource = dtitem;
                    grid_Item_approvalstaff.DataBind();
                    grid_Item_approvalstaff.Visible = true;
                }
                else
                {
                    grid_Item_approvalstaff.Visible = false;
                }
            }
        }
        catch
        {


        }
    }

    protected void OnRowDataBound_grid_Item_approvalstaff(object sender, GridViewRowEventArgs e)
    {
        try
        {
            string itemstaffname = "";
            string stafname = "";
            string approvestage = "";
            string qur = "";
            string appstaffnum = "";
            color_check = false;
            string staffapplid = d2.GetFunction("select sm.appl_id from staff_appl_master sm,staffmaster s where sm.appl_no=s.appl_no and staff_code='" + staffcodesession + "'");
            staffapplid = d2.GetFunction("select ReqAppNo from RQ_Requisition where RequestType=1 and RequisitionPK='" + requeststaffapprovalno + "'");
            if (e.Row.RowType == DataControlRowType.DataRow)
            {
                var staffname1 = (Label)e.Row.FindControl("lblname1");
                stafname = Convert.ToString(staffname1.Text);
                string name = d2.GetFunction("select staff_name from staffmaster where staff_code='" + staffcodesession + "'");
                approvestage = d2.GetFunction("select ReqApproveStage from RQ_Requisition where RequestType=1  and RequisitionPK='" + TextBox2.Text + "'");
                //and ISNULL(ReqAppStatus,'0')=0
                qur = "select distinct h.ReqAppStaffAppNo  from RQ_RequestHierarchy h,RQ_Requisition r where h.RequestType=1 and h.ReqStaffAppNo='" + staffapplid + "' and r.ReqAppNo=h.ReqStaffAppNo and h.RequestType=r.RequestType and h.ReqApproveStage>'" + approvestage + "'";
                ds = d2.select_method_wo_parameter(qur, "text");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                    {
                        appstaffnum = d2.GetFunction("select appl_name  from staff_appl_master  where  appl_id='" + Convert.ToString(ds.Tables[0].Rows[i]["ReqAppStaffAppNo"]) + "'");
                        if (appstaffnum == name)
                        {
                            e.Row.BackColor = Color.LightPink;
                            color_check = true;
                        }
                    }
                }
                qur = "select distinct h.ReqAppStaffAppNo  from RQ_RequestHierarchy h,RQ_Requisition r where h.RequestType=1 and h.ReqStaffAppNo='" + staffapplid + "' and r.ReqAppNo=h.ReqStaffAppNo and h.RequestType=r.RequestType and h.ReqApproveStage<='" + approvestage + "'";
                ds1 = d2.select_method_wo_parameter(qur, "text");
                //approved
                if (ds1.Tables[0].Rows.Count > 0)
                {
                    for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                    {
                        appstaffnum = d2.GetFunction("select appl_name  from staff_appl_master  where  appl_id='" + Convert.ToString(ds1.Tables[0].Rows[i]["ReqAppStaffAppNo"]) + "'");
                        if (appstaffnum == stafname)
                        {
                            e.Row.BackColor = Color.MediumPurple;
                            color_check = true;
                        }
                    }
                }
                if (stafname == name)
                {
                    // current login
                    e.Row.BackColor = Color.Aqua;
                    color_check = true;
                }
                else
                {
                    if (color_check == false)
                    {
                        string q = "select distinct r.ReqApproveStage from RQ_RequestHierarchy h,RQ_Requisition r where h.RequestType=1 and h.ReqStaffAppNo='" + staffapplid + "' and r.ReqAppNo=h.ReqStaffAppNo and h.RequestType=r.RequestType";
                        ds1.Clear();
                        ds1 = d2.select_method_wo_parameter(q, "text");
                        if (ds1.Tables[0].Rows.Count > 0)
                        {
                            for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                            {
                                string appstageh = d2.GetFunction("select MAX(ReqApproveStage) from RQ_RequestHierarchy where RequestType=1 and ReqStaffAppNo='" + staffapplid + "'");
                                string stgr = Convert.ToString(ds1.Tables[0].Rows[i]["ReqApproveStage"]);
                                if (Convert.ToInt32(stgr) <= Convert.ToInt32(appstageh))
                                {
                                    e.Row.BackColor = Color.LightPink;
                                }
                                else
                                {
                                    e.Row.BackColor = Color.MediumPurple;
                                }
                            }
                        }
                    }
                }
            }
        }

        catch
        {
        }


    }

    public void abc1()
    {
        if (pri_txt == "1")
        {
            con_txt = "A";
        }
        if (pri_txt == "2")
        {
            con_txt = "B";
        }
        if (pri_txt == "3")
        {
            con_txt = "C";
        }
        if (pri_txt == "4")
        {
            con_txt = "D";
        }
        if (pri_txt == "5")
        {
            con_txt = "E";
        }
        if (pri_txt == "6")
        {
            con_txt = "F";
        }
        if (pri_txt == "7")
        {
            con_txt = "G";
        }
        if (pri_txt == "8")
        {
            con_txt = "H";
        }
        if (pri_txt == "9")
        {
            con_txt = "I";
        }
        if (pri_txt == "10")
        {
            con_txt = "J";
        }
        if (pri_txt == "11")
        {
            con_txt = "K";
        }
        if (pri_txt == "12")
        {
            con_txt = "L";
        }
        if (pri_txt == "13")
        {
            con_txt = "M";
        }
        if (pri_txt == "14")
        {
            con_txt = "N";
        }
        if (pri_txt == "15")
        {
            con_txt = "O";
        }
        if (pri_txt == "16")
        {
            con_txt = "P";
        }
        if (pri_txt == "17")
        {
            con_txt = "Q";
        }
        if (pri_txt == "18")
        {
            con_txt = "R";
        }
        if (pri_txt == "19")
        {
            con_txt = "S";
        }
        if (pri_txt == "20")
        {
            con_txt = "T";
        }
        if (pri_txt == "21")
        {
            con_txt = "U";
        }
        if (pri_txt == "22")
        {
            con_txt = "V";
        }
        if (pri_txt == "23")
        {
            con_txt = "W";
        }
        if (pri_txt == "24")
        {
            con_txt = "X";
        }
        if (pri_txt == "25")
        {
            con_txt = "Y";
        }
        if (pri_txt == "26")
        {
            con_txt = "Z";
        }
    }

    //End By SaranyaDevi 05.12.2018
}