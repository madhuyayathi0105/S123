using System;
using System.Collections.Generic;
using System.Web;
using System.Web.UI.WebControls;
using System.Data;
using System.Collections;
using System.Drawing;
using System.IO;
using System.Web.UI.DataVisualization.Charting;

public partial class StudentFeeAllotReportChart : System.Web.UI.Page
{
    string usercode = string.Empty;
    string collegecode1 = string.Empty;
    string collegecode = string.Empty;
    string singleuser = string.Empty;
    string group_user = "";
    string sessstream = string.Empty;
    string selectQuery = "";
    DAccess2 d2 = new DAccess2();
    DataSet ds = new DataSet();
    DataSet ds1 = new DataSet();
    DataSet dsprint = new DataSet();
    ArrayList colord = new ArrayList();
    DAccess2 queryObject = new DAccess2();
    DAccess2 da = new DAccess2();
    DataView dvhead = new DataView();
    DataSet dscol = new DataSet();
    string batch2 = "";
    string degree = "";
    int commcount;
    int i;
    int cout;
    int row;
    static int personmode = 0;
    static int chosedmode = 0;
    Boolean ledgercellclik = false;
    Boolean batchcellclick = false;
    Boolean degreecellclick = false;
    Boolean deptcellclick = false;
    Boolean semcellclick = false;
    Boolean studcellclick = false;
    static string cellclicktext = "";
    static string colhedername = "";
    static string colhedername1 = "";
    static string colledname = "";
    static string colbatname = "";
    static string coldegname = "";
    static string coldeptname = "";
    static string colsemname = "";
    string allot = "";
    string consession = "";

    protected void Page_Load(object sender, EventArgs e)
    {
        if (Session["collegecode"] == null)
        {
            Response.Redirect("Default.aspx");
        }
        usercode = Session["usercode"].ToString();
        collegecode1 = Session["collegecode"].ToString();
        singleuser = Session["single_user"].ToString();
        group_user = Session["group_code"].ToString();
        collegecode1 = Session["collegecode"].ToString();
        sessstream = Convert.ToString(Session["streamcode"]);
        lbl_str1.Text = sessstream;
        lbl_str2.Text = sessstream;

        if (!IsPostBack)
        {
            setLabelText();
            rb_degree.Text = lbldeg.Text;
            rb_dept.Text = lbldept.Text;
            rb_sem.Text = lblsem.Text;
            loadcollege();
            loadstrm();
            bindBtch();
            binddeg();
            binddept();
            bindsem();
            bindsec();
            loadstutype();
            loadseat();
            loadtype();
            loadpaid();
            loadstream();
            loadcourse();
            loadheader();
            loadfield();
            loadheaderandledger();
            ledgerload();
            rb_hori.Checked = true;
            rbstudhed.Checked = true;
            loadcolumnorder();
            loadfinanceyear();
            LoadIncludeSetting();
            txt_fromdate.Text = DateTime.Now.ToString("dd/MM/yyyy");
            txt_todate.Text = DateTime.Now.ToString("dd/MM/yyyy");
            txt_fromdate.Attributes.Add("readonly", "readonly");
            txt_todate.Attributes.Add("readonly", "readonly");
            tdcblbatch.Visible = true;
            tdcbldegree.Visible = true;
            tdcbldept.Visible = true;
            chkinclude_OnCheckedChanged(sender, e);
        }

    }
    public void loadfinanceyear()
    {
        try
        {
            string fnalyr = "";
            string getfinanceyear = "select distinct convert(nvarchar(15),FinYearStart,103) sdate,convert(nvarchar(15),FinYearEnd,103) edate,FinYearPK from FM_FinYearMaster order by FinYearPK desc";
            ds.Dispose();
            ds.Reset();
            chkfyear.Checked = false;
            chklsfyear.Items.Clear();
            ds = da.select_method_wo_parameter(getfinanceyear, "text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    string fdatye = ds.Tables[0].Rows[i]["sdate"].ToString() + '-' + ds.Tables[0].Rows[i]["edate"].ToString();
                    string actid = ds.Tables[0].Rows[i]["FinYearPK"].ToString();
                    chklsfyear.Items.Insert(0, new System.Web.UI.WebControls.ListItem(fdatye, actid));
                }

                for (int i = 0; i < chklsfyear.Items.Count; i++)
                {
                    chklsfyear.Items[i].Selected = true;
                    fnalyr = Convert.ToString(chklsfyear.Items[i].Text);
                }
                if (chklsfyear.Items.Count == 1)
                {
                    txtfyear.Text = "" + fnalyr + "";
                }
                else
                {
                    txtfyear.Text = "Finance Year(" + (chklsfyear.Items.Count) + ")";
                }
                chkfyear.Checked = true;
            }
        }
        catch (Exception ex)
        {

        }
    }
    protected void chklsfyear_selected(object sender, EventArgs e)
    {
        try
        {
            CallCheckboxListChange(chkfyear, chklsfyear, txtfyear, "Finance Year", "--Select--");
            //loadheader();
        }
        catch (Exception ex)
        { }
    }
    protected void chkfyear_changed(object sender, EventArgs e)
    {
        try
        {
            CallCheckboxChange(chkfyear, chklsfyear, txtfyear, "Finance Year", "--Select--");
        }
        catch (Exception ex)
        { }
    }
    protected void ddl_collegename_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            string clgvalue = ddl_collegename.SelectedItem.Value.ToString();
            loadstrm();
            bindBtch();
            binddeg();
            binddept();
            bindsem();
            bindsec();
            loadstutype();
            loadseat();
            loadtype();
            loadpaid();
            loadheaderandledger();
            ledgerload();
        }
        catch
        {
        }
    }
    #region colorder
    #region cellclick
    //public void loadstudcolorder()
    //{
    //    chkl_studcolorder.Items.Clear();
    //    //chkl_studcolorder.Items.Add(new ListItem("Header Name"));
    //    //chkl_studcolorder.Items.Add(new ListItem("Ledger Name"));
    //    //chkl_studcolorder.Items.Add(new ListItem("Batch Year"));
    //    //chkl_studcolorder.Items.Add(new ListItem("Course Name"));
    //    //chkl_studcolorder.Items.Add(new ListItem("Department Name"));
    //    //chkl_studcolorder.Items.Add(new ListItem("Semaster"));
    //    //chkl_studcolorder.Items.Add(new ListItem("Student Name"));
    //    chkl_studcolorder.Items.Add(new ListItem("Allot"));
    //    chkl_studcolorder.Items.Add(new ListItem("Concession"));
    //    chkl_studcolorder.Items.Add(new ListItem("Government"));
    //    chkl_studcolorder.Items.Add(new ListItem("Total"));
    //    chkl_studcolorder.Items.Add(new ListItem("Paid"));
    //    chkl_studcolorder.Items.Add(new ListItem("Balance"));
    //    chkl_studcolorder.Items.Add(new ListItem("Refund Amount"));
    //    chkl_studcolorder.Items.Add(new ListItem("Excess Amount"));
    //  //  chkl_studcolorder.Items.Add(new ListItem("Fine Amount"));
    //}
    //public void loadsemcolorder()
    //{
    //    chkl_semcolorder.Items.Clear();
    //    //chkl_semcolorder.Items.Add(new ListItem("Header Name"));
    //    //chkl_semcolorder.Items.Add(new ListItem("Ledger Name"));
    //    //chkl_semcolorder.Items.Add(new ListItem("Batch Year"));
    //    //chkl_semcolorder.Items.Add(new ListItem("Course Name"));
    //    //chkl_semcolorder.Items.Add(new ListItem("Department Name"));
    //    //chkl_semcolorder.Items.Add(new ListItem("Semaster"));
    //    chkl_semcolorder.Items.Add(new ListItem("Allot"));
    //    chkl_semcolorder.Items.Add(new ListItem("Concession"));
    //    chkl_semcolorder.Items.Add(new ListItem("Government"));
    //    chkl_semcolorder.Items.Add(new ListItem("Total"));
    //    chkl_semcolorder.Items.Add(new ListItem("Paid"));
    //    chkl_semcolorder.Items.Add(new ListItem("Balance"));
    //    chkl_semcolorder.Items.Add(new ListItem("Refund Amount"));
    //    chkl_semcolorder.Items.Add(new ListItem("Excess Amount"));
    //   // chkl_semcolorder.Items.Add(new ListItem("Fine Amount"));
    //}
    //public void loaddeptcolorder()
    //{
    //    chkl_deptcolorder.Items.Clear();
    //    //chkl_deptcolorder.Items.Add(new ListItem("Header Name"));
    //    //chkl_deptcolorder.Items.Add(new ListItem("Ledger Name"));
    //    //chkl_deptcolorder.Items.Add(new ListItem("Batch Year"));
    //    //chkl_deptcolorder.Items.Add(new ListItem("Course Name"));
    //    //chkl_deptcolorder.Items.Add(new ListItem("Department Name"));
    //    chkl_deptcolorder.Items.Add(new ListItem("Allot"));
    //    chkl_deptcolorder.Items.Add(new ListItem("Concession"));
    //    chkl_deptcolorder.Items.Add(new ListItem("Government"));
    //    chkl_deptcolorder.Items.Add(new ListItem("Total"));
    //    chkl_deptcolorder.Items.Add(new ListItem("Paid"));
    //    chkl_deptcolorder.Items.Add(new ListItem("Balance"));
    //    chkl_deptcolorder.Items.Add(new ListItem("Refund Amount"));
    //    chkl_deptcolorder.Items.Add(new ListItem("Excess Amount"));
    //   // chkl_deptcolorder.Items.Add(new ListItem("Fine Amount"));
    //}
    //public void loaddegreecolorder()
    //{
    //    chkl_degcolorder.Items.Clear();
    //   // chkl_degcolorder.Items.Add(new ListItem("Header Name"));
    //  //  chkl_degcolorder.Items.Add(new ListItem("Ledger Name"));
    //   // chkl_degcolorder.Items.Add(new ListItem("Batch Year"));
    //    //chkl_degcolorder.Items.Add(new ListItem("Degree Name"));
    //    chkl_degcolorder.Items.Add(new ListItem("Allot"));
    //    chkl_degcolorder.Items.Add(new ListItem("Concession"));
    //    chkl_degcolorder.Items.Add(new ListItem("Government"));
    //    chkl_degcolorder.Items.Add(new ListItem("Total"));
    //    chkl_degcolorder.Items.Add(new ListItem("Paid"));
    //    chkl_degcolorder.Items.Add(new ListItem("Balance"));
    //    chkl_degcolorder.Items.Add(new ListItem("Refund Amount"));
    //    chkl_degcolorder.Items.Add(new ListItem("Excess Amount"));
    //   // chkl_degcolorder.Items.Add(new ListItem("Fine Amount"));
    //}
    //public void loadbatchcolorder()
    //{
    //    chkl_batchcolorder.Items.Clear();
    //  //  chkl_batchcolorder.Items.Add(new ListItem("Header Name"));
    //   // chkl_batchcolorder.Items.Add(new ListItem("Ledger Name"));
    //   // chkl_batchcolorder.Items.Add(new ListItem("Batch Year"));
    //    chkl_batchcolorder.Items.Add(new ListItem("Allot"));
    //    chkl_batchcolorder.Items.Add(new ListItem("Concession"));
    //    chkl_batchcolorder.Items.Add(new ListItem("Government"));
    //    chkl_batchcolorder.Items.Add(new ListItem("Total"));
    //    chkl_batchcolorder.Items.Add(new ListItem("Paid"));
    //    chkl_batchcolorder.Items.Add(new ListItem("Balance"));
    //    chkl_batchcolorder.Items.Add(new ListItem("Refund Amount"));
    //    chkl_batchcolorder.Items.Add(new ListItem("Excess Amount"));
    //   // chkl_batchcolorder.Items.Add(new ListItem("Fine Amount"));
    //}

    //public void loadledgercoloreder()
    //{
    //    chkl_ledgercolorder.Items.Clear();
    //  //  chkl_ledgercolorder.Items.Add(new ListItem("Header Name"));
    //   // chkl_ledgercolorder.Items.Add(new ListItem("Ledger Name"));
    //    chkl_ledgercolorder.Items.Add(new ListItem("Allot"));
    //    chkl_ledgercolorder.Items.Add(new ListItem("Concession"));
    //    chkl_ledgercolorder.Items.Add(new ListItem("Government"));
    //    chkl_ledgercolorder.Items.Add(new ListItem("Total"));
    //    chkl_ledgercolorder.Items.Add(new ListItem("Paid"));
    //    chkl_ledgercolorder.Items.Add(new ListItem("Balance"));
    //    chkl_ledgercolorder.Items.Add(new ListItem("Refund Amount"));
    //    chkl_ledgercolorder.Items.Add(new ListItem("Excess Amount"));
    //  //  chkl_ledgercolorder.Items.Add(new ListItem("Fine Amount"));
    //}
    #endregion
    public void loadcolumnorder()
    {
        if (rb_header.Checked == true)
        {
            cblcolumnorder.Items.Clear();
            // cblcolumnorder.Items.Add(new ListItem("Header Name","0"));
            cblcolumnorder.Items.Add(new ListItem("Allot", "1"));
            cblcolumnorder.Items.Add(new ListItem("Concession", "2"));
            cblcolumnorder.Items.Add(new ListItem("Government", "3"));
            cblcolumnorder.Items.Add(new ListItem("Total", "4"));
            cblcolumnorder.Items.Add(new ListItem("Paid", "5"));
            cblcolumnorder.Items.Add(new ListItem("Balance", "6"));
            cblcolumnorder.Items.Add(new ListItem("Refund Amount", "7"));
            cblcolumnorder.Items.Add(new ListItem("Excess Amount", "8"));
            //  cblcolumnorder.Items.Add(new ListItem("Fine Amount", "9"));
        }
        else if (rb_ledger.Checked == true)
        {
            cblcolumnorder.Items.Clear();
            //cblcolumnorder.Items.Add(new ListItem("Header Name"));
            //cblcolumnorder.Items.Add(new ListItem("Ledger Name"));
            cblcolumnorder.Items.Add(new ListItem("Allot", "1"));
            cblcolumnorder.Items.Add(new ListItem("Concession", "2"));
            cblcolumnorder.Items.Add(new ListItem("Government", "3"));
            cblcolumnorder.Items.Add(new ListItem("Total", "4"));
            cblcolumnorder.Items.Add(new ListItem("Paid", "5"));
            cblcolumnorder.Items.Add(new ListItem("Balance", "6"));
            cblcolumnorder.Items.Add(new ListItem("Refund Amount", "7"));
            cblcolumnorder.Items.Add(new ListItem("Excess Amount", "8"));
            // cblcolumnorder.Items.Add(new ListItem("Fine Amount", "9"));
        }
        else if (rb_batch.Checked == true)
        {
            cblcolumnorder.Items.Clear();
            // cblcolumnorder.Items.Add(new ListItem("Batch Year"));
            cblcolumnorder.Items.Add(new ListItem("Allot", "1"));
            cblcolumnorder.Items.Add(new ListItem("Concession", "2"));
            cblcolumnorder.Items.Add(new ListItem("Government", "3"));
            cblcolumnorder.Items.Add(new ListItem("Total", "4"));
            cblcolumnorder.Items.Add(new ListItem("Paid", "5"));
            cblcolumnorder.Items.Add(new ListItem("Balance", "6"));
            cblcolumnorder.Items.Add(new ListItem("Refund Amount", "7"));
            cblcolumnorder.Items.Add(new ListItem("Excess Amount", "8"));
            // cblcolumnorder.Items.Add(new ListItem("Fine Amount", "9"));
        }
        else if (rb_degree.Checked == true)
        {
            cblcolumnorder.Items.Clear();
            //cblcolumnorder.Items.Add(new ListItem("Degree Name"));
            cblcolumnorder.Items.Add(new ListItem("Allot", "1"));
            cblcolumnorder.Items.Add(new ListItem("Concession", "2"));
            cblcolumnorder.Items.Add(new ListItem("Government", "3"));
            cblcolumnorder.Items.Add(new ListItem("Total", "4"));
            cblcolumnorder.Items.Add(new ListItem("Paid", "5"));
            cblcolumnorder.Items.Add(new ListItem("Balance", "6"));
            cblcolumnorder.Items.Add(new ListItem("Refund Amount", "7"));
            cblcolumnorder.Items.Add(new ListItem("Excess Amount", "8"));
            // cblcolumnorder.Items.Add(new ListItem("Fine Amount", "9"));
        }
        else if (rb_dept.Checked == true)
        {
            cblcolumnorder.Items.Clear();
            //cblcolumnorder.Items.Add(new ListItem("Course Name"));
            // cblcolumnorder.Items.Add(new ListItem("Department Name"));
            cblcolumnorder.Items.Add(new ListItem("Allot", "1"));
            cblcolumnorder.Items.Add(new ListItem("Concession", "2"));
            cblcolumnorder.Items.Add(new ListItem("Government", "3"));
            cblcolumnorder.Items.Add(new ListItem("Total", "4"));
            cblcolumnorder.Items.Add(new ListItem("Paid", "5"));
            cblcolumnorder.Items.Add(new ListItem("Balance", "6"));
            cblcolumnorder.Items.Add(new ListItem("Refund Amount", "7"));
            cblcolumnorder.Items.Add(new ListItem("Excess Amount", "8"));
            //cblcolumnorder.Items.Add(new ListItem("Fine Amount", "9"));
        }
        else if (rb_sem.Checked == true)
        {
            cblcolumnorder.Items.Clear();
            // cblcolumnorder.Items.Add(new ListItem("Semaster"));
            cblcolumnorder.Items.Add(new ListItem("Allot", "1"));
            cblcolumnorder.Items.Add(new ListItem("Concession", "2"));
            cblcolumnorder.Items.Add(new ListItem("Government", "3"));
            cblcolumnorder.Items.Add(new ListItem("Total", "4"));
            cblcolumnorder.Items.Add(new ListItem("Paid", "5"));
            cblcolumnorder.Items.Add(new ListItem("Balance", "6"));
            cblcolumnorder.Items.Add(new ListItem("Refund Amount", "7"));
            cblcolumnorder.Items.Add(new ListItem("Excess Amount", "8"));
            // cblcolumnorder.Items.Add(new ListItem("Fine Amount", "9"));
        }
        else if (rb_studentwise.Checked == true)
        {
            cblcolumnorder.Items.Clear();
            //  cblcolumnorder.Items.Add(new ListItem("Student Name"));
            //cblcolumnorder.Items.Add(new ListItem("Reg No"));
            // cblcolumnorder.Items.Add(new ListItem("Degree Name"));
            cblcolumnorder.Items.Add(new ListItem("Allot", "1"));
            cblcolumnorder.Items.Add(new ListItem("Concession", "2"));
            cblcolumnorder.Items.Add(new ListItem("Government", "3"));
            cblcolumnorder.Items.Add(new ListItem("Total", "4"));
            cblcolumnorder.Items.Add(new ListItem("Paid", "5"));
            cblcolumnorder.Items.Add(new ListItem("Balance", "6"));
            cblcolumnorder.Items.Add(new ListItem("Refund Amount", "7"));
            cblcolumnorder.Items.Add(new ListItem("Excess Amount", "8"));
            //cblcolumnorder.Items.Add(new ListItem("Fine Amount", "9"));
        }

    }
    #endregion

    #region headerandledger
    public void loadheaderandledger()
    {
        try
        {
            string clgvalue = ddl_collegename.SelectedItem.Value.ToString();
            chkl_studhed.Items.Clear();
            string query = " SELECT HeaderPK,HeaderName FROM FM_HeaderMaster H,FS_HeaderPrivilage P WHERE H.HeaderPK = P.HeaderFK AND P.CollegeCode = H.CollegeCode AND P. UserCode = " + usercode + " AND H.CollegeCode = " + clgvalue + "  ";

            ds = d2.select_method_wo_parameter(query, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                chkl_studhed.DataSource = ds;
                chkl_studhed.DataTextField = "HeaderName";
                chkl_studhed.DataValueField = "HeaderPK";
                chkl_studhed.DataBind();
                for (int i = 0; i < chkl_studhed.Items.Count; i++)
                {
                    chkl_studhed.Items[i].Selected = true;
                }
                txt_studhed.Text = "Header(" + chkl_studhed.Items.Count + ")";
                chk_studhed.Checked = true;
            }
        }
        catch
        {
        }
    }
    public void ledgerload()
    {
        try
        {
            string clgvalue = ddl_collegename.SelectedItem.Value.ToString();
            chkl_studled.Items.Clear();
            string hed = "";
            for (int i = 0; i < chkl_studhed.Items.Count; i++)
            {
                if (chkl_studhed.Items[i].Selected == true)
                {
                    if (hed == "")
                    {
                        hed = chkl_studhed.Items[i].Value.ToString();
                    }
                    else
                    {
                        hed = hed + "','" + "" + chkl_studhed.Items[i].Value.ToString() + "";
                    }
                }
            }


            string query1 = " SELECT LedgerPK,LedgerName FROM FM_LedgerMaster L,FS_LedgerPrivilage P WHERE L.LedgerPK = P.LedgerFK   AND P.CollegeCode = L.CollegeCode AND P. UserCode = " + usercode + " AND  Ledgermode='0' and L.CollegeCode = " + clgvalue + "  and L.HeaderFK in('" + hed + "')  order by isnull(l.priority,1000),l.ledgerName asc ";
            ds.Clear();
            ds = d2.select_method_wo_parameter(query1, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                chkl_studled.DataSource = ds;
                chkl_studled.DataTextField = "LedgerName";
                chkl_studled.DataValueField = "LedgerPK";
                chkl_studled.DataBind();
                for (int i = 0; i < chkl_studled.Items.Count; i++)
                {
                    chkl_studled.Items[i].Selected = true;
                }
                txt_studled.Text = "Ledger(" + chkl_studled.Items.Count + ")";
                chk_studled.Checked = true; ;

            }
            else
            {
                for (int i = 0; i < chkl_studled.Items.Count; i++)
                {
                    chkl_studled.Items[i].Selected = false;
                }
                txt_studled.Text = "--Select--";
                chk_studled.Checked = false; ;
            }

        }
        catch
        {
        }
    }
    public void chk_studhed_OnCheckedChanged(object sender, EventArgs e)
    {
        try
        {
            CallCheckboxChange(chk_studhed, chkl_studhed, txt_studhed, "Header", "--Select--");
            ledgerload();
        }
        catch (Exception ex)
        {

        }
    }

    public void chkl_studhed_OnSelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CallCheckboxListChange(chk_studhed, chkl_studhed, txt_studhed, "Header", "--Select--");
            ledgerload();
        }
        catch (Exception ex)
        { }
    }
    public void chk_studled_OnCheckedChanged(object sender, EventArgs e)
    {
        try
        {
            CallCheckboxChange(chk_studled, chkl_studled, txt_studled, "Ledger", "--Select--");
        }
        catch (Exception ex)
        {

        }
    }
    public void chkl_studled_OnSelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CallCheckboxListChange(chk_studled, chkl_studled, txt_studled, "Ledger", "--Select--");
        }
        catch (Exception ex)
        { }
    }
    #endregion

    #region pagesetting
    public void loadfield()
    {
        try
        {
            chkl_field.Items.Clear();
            chkl_field.Items.Add(new ListItem("Text", "0"));
            chkl_field.Items.Add(new ListItem("App No", "1"));
            chkl_field.Items.Add(new ListItem("Roll No", "2"));
            chkl_field.Items.Add(new ListItem("Admission No", "3"));
            chkl_field.Items.Add(new ListItem("Register", "4"));
            chkl_field.Items.Add(new ListItem("Student Name", "5"));
            chkl_field.Items.Add(new ListItem("Course", "6"));
            chkl_field.Items.Add(new ListItem("Branch", "7"));
            chkl_field.Items.Add(new ListItem("Batch", "8"));
            chkl_field.Items.Add(new ListItem("Semaster", "9"));
            chkl_field.Items.Add(new ListItem("Bank A/C No", "10"));
            for (int i = 0; i < chkl_field.Items.Count; i++)
            {
                chkl_field.Items[i].Selected = true;
            }
            chk_filed.Checked = true;
        }
        catch
        {
        }
    }
    public void loadheader()
    {
        try
        {
            //  string selqry = "select HeaderPK,HeaderName from FM_HeaderMaster where CollegeCode ='" + collegecode1 + "'";
            string selqry = "  select distinct ChlGroupHeader  from FS_ChlGroupHeaderSettings ";
            ds.Clear();
            ds = d2.select_method_wo_parameter(selqry, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                lb_selecthdr.DataSource = ds;
                lb_selecthdr.DataTextField = "ChlGroupHeader";
                lb_selecthdr.DataValueField = "ChlGroupHeader";
                lb_selecthdr.DataBind();
            }
        }
        catch
        {
        }
    }
    public void loadcourse()
    {

        try
        {
            chkl_course.Items.Clear();
            string stream = "";
            for (int i = 0; i < chkl_str.Items.Count; i++)
            {
                if (chkl_str.Items[i].Selected == true)
                {
                    if (stream == "")
                    {
                        stream = chkl_str.Items[i].Value.ToString();
                    }
                    else
                    {
                        stream = stream + "','" + "" + chkl_str.Items[i].Value.ToString() + "";
                    }
                }
            }

            string selqry = "select (c.Course_Name +'-'+ dt.Dept_Name) as Department,Degree_Code from Degree d,Department dt,Course c where d.Dept_Code =dt.Dept_Code and d.Course_Id =c.Course_Id";
            if (stream != "")
            {
                selqry = selqry + " and type in ('" + stream + "')";
            }
            ds.Clear();
            ds = d2.select_method_wo_parameter(selqry, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {

                chkl_course.DataSource = ds;
                chkl_course.DataTextField = "Department";
                chkl_course.DataValueField = "Degree_Code";
                chkl_course.DataBind();
            }
            else
            {
                chk_course.Checked = false;
            }
            for (int j = 0; j < chkl_course.Items.Count; j++)
            {
                chkl_course.Items[j].Selected = true;
                chk_course.Checked = true;
            }

            // txt_str.Text = "stream(" + chkl_str.Items.Count + ")";
            // chk_course.Checked = true;
        }
        catch
        {
        }
    }
    public void loadstream()
    {
        try
        {
            string selqry = "select distinct type  from Course where college_code ='" + collegecode1 + "' and type<>''";
            ds.Clear();
            ds = d2.select_method_wo_parameter(selqry, "Text");
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                chkl_str.DataSource = ds;
                chkl_str.DataTextField = "type";
                chkl_str.DataValueField = "type";
                chkl_str.DataBind();
                txt_str.Enabled = true;

                for (int i = 0; i < chkl_str.Items.Count; i++)
                {
                    chkl_str.Items[i].Selected = true;
                }
                if (lbl_str2.Text == "Stream")
                {
                    txt_str.Text = "stream(" + chkl_str.Items.Count + ")";
                }
                if (lbl_str2.Text == "Shift")
                {
                    txt_str.Text = "Shift(" + chkl_str.Items.Count + ")";
                }
                chk_str.Checked = true;
            }
            else
            {
                txt_str.Enabled = false;
            }

        }
        catch
        {

        }
    }
    public void bindsem1()
    {
        chkl_sema.Items.Clear();

        string settingquery = "select * from New_InsSettings where linkname = 'Fee Yearwise' and user_code ='" + usercode + "' and college_code ='" + Session["collegecode"] + "'";
        ds.Clear();
        ds = d2.select_method_wo_parameter(settingquery, "Text");
        if (ds.Tables[0].Rows.Count > 0)
        {
            string linkvalue = Convert.ToString(ds.Tables[0].Rows[0]["LinkValue"]);
            if (linkvalue == "0")
            {
                string semesterquery = "select * from textvaltable where TextCriteria = 'FEECA'and textval like '%Semester' and textval not like '-1%'";
                ds.Clear();
                ds = d2.select_method_wo_parameter(semesterquery, "Text");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    //text_circode = Convert.ToString(ds.Tables[0].Rows[0]["TextCode"]);
                    chkl_sema.DataSource = ds;
                    chkl_sema.DataTextField = "TextVal";
                    chkl_sema.DataValueField = "TextCode";
                    chkl_sema.DataBind();
                }
                if (chkl_sema.Items.Count > 0)
                {
                    for (int i = 0; i < chkl_sema.Items.Count; i++)
                    {
                        chkl_sema.Items[i].Selected = true;
                    }
                    //txt_sema.Text = "Semester(" + chkl_sema.Items.Count + ")";
                    chk_sema.Checked = true;
                }
            }
            else
            {
                string semesterquery = "select * from textvaltable where TextCriteria = 'FEECA'and textval like '%Year' and textval not like '-1%'";
                ds.Clear();
                ds = d2.select_method_wo_parameter(semesterquery, "Text");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    // text_circode = Convert.ToString(ds.Tables[0].Rows[0]["TextCode"]);
                    chkl_sema.DataSource = ds;
                    chkl_sema.DataTextField = "TextVal";
                    chkl_sema.DataValueField = "TextCode";
                    chkl_sema.DataBind();
                }
            }
        }
    }
    public void chk_str_OnCheckedChanged(object sender, EventArgs e)
    {
        try
        {
            if (chk_str.Checked == true)
            {
                for (int i = 0; i < chkl_str.Items.Count; i++)
                {
                    chkl_str.Items[i].Selected = true;
                }
                if (lbl_str2.Text == "Stream")
                {
                    txt_str.Text = "Stream(" + (chkl_str.Items.Count) + ")";
                }
                if (lbl_str2.Text == "Shift")
                {
                    txt_str.Text = "Shift(" + (chkl_str.Items.Count) + ")";
                }
            }
            else
            {
                for (int i = 0; i < chkl_str.Items.Count; i++)
                {
                    chkl_str.Items[i].Selected = false;
                }
                txt_str.Text = "---Select---";
            }
            loadcourse();

        }
        catch (Exception ex)
        {

        }

    }
    public void chkl_str_OnSelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {

            int commcount = 0;
            txt_str.Text = "--Select--";
            chk_str.Checked = false;
            for (int i = 0; i < chkl_str.Items.Count; i++)
            {
                if (chkl_str.Items[i].Selected == true)
                {
                    commcount = commcount + 1;
                }
            }
            if (commcount > 0)
            {
                if (commcount == chkl_str.Items.Count)
                {
                    chk_str.Checked = true;
                }
                if (lbl_str2.Text == "Stream")
                {
                    txt_str.Text = "Stream(" + commcount.ToString() + ")";
                }
                if (lbl_str2.Text == "Shift")
                {
                    txt_str.Text = "Shift(" + commcount.ToString() + ")";
                }
            }

            chkl_course.Items.Clear();
            string stream = "";
            for (int i = 0; i < chkl_str.Items.Count; i++)
            {
                if (chkl_str.Items[i].Selected == true)
                {
                    if (stream == "")
                    {
                        stream = chkl_str.Items[i].Value.ToString();
                    }
                    else
                    {
                        stream = stream + "','" + "" + chkl_str.Items[i].Value.ToString() + "";
                    }
                }
            }
            string selqry = "select (c.Course_Name +'-'+ dt.Dept_Name) as Department,degree_code from Degree d,Department dt,Course c where d.Dept_Code =dt.Dept_Code and d.Course_Id =c.Course_Id and type in ('" + stream + "')";
            ds.Clear();
            ds = d2.select_method_wo_parameter(selqry, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {

                chkl_course.DataSource = ds;
                chkl_course.DataTextField = "Department";
                chkl_course.DataValueField = "degree_code";
                chkl_course.DataBind();
            }
            for (int j = 0; j < chkl_course.Items.Count; j++)
            {
                chkl_course.Items[j].Selected = true;
                chk_course.Checked = true;

            }
            // txt_str.Text = "stream(" + chkl_str.Items.Count + ")";
            //  chk_course.Checked = true;

        }
        catch (Exception ex)
        {

        }

    }
    public void chk_course_OnCheckedChanged(object sender, EventArgs e)
    {
        try
        {
            if (chk_course.Checked == true)
            {
                for (int i = 0; i < chkl_course.Items.Count; i++)
                {
                    chkl_course.Items[i].Selected = true;
                }
                // txt_str.Text = "Stream(" + (chkl_course.Items.Count) + ")";
            }
            else
            {
                for (int i = 0; i < chkl_course.Items.Count; i++)
                {
                    chkl_course.Items[i].Selected = false;
                }
                //  txt_str.Text = "---Select---";
            }

        }
        catch (Exception ex)
        {

        }
    }
    public void chkl_course_OnSelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {

            int commcount = 0;
            // txt_str.Text = "--Select--";
            chk_course.Checked = false;
            for (int i = 0; i < chkl_course.Items.Count; i++)
            {
                if (chkl_course.Items[i].Selected == true)
                {
                    commcount = commcount + 1;
                }
            }
            if (commcount > 0)
            {
                //  txt_str.Text = "Stream(" + commcount.ToString() + ")";
                if (commcount == chkl_course.Items.Count)
                {
                    chk_course.Checked = true;
                }
            }

        }
        catch (Exception ex)
        {

        }
    }
    public void chk_sema_OnCheckedChanged(object sender, EventArgs e)
    {
        try
        {
            if (chk_sema.Checked == true)
            {
                for (int i = 0; i < chkl_sema.Items.Count; i++)
                {
                    chkl_sema.Items[i].Selected = true;
                }
                // txt_str.Text = "Stream(" + (chkl_course.Items.Count) + ")";
            }
            else
            {
                for (int i = 0; i < chkl_sema.Items.Count; i++)
                {
                    chkl_sema.Items[i].Selected = false;
                }
                //  txt_str.Text = "---Select---";
            }

        }
        catch (Exception ex)
        {

        }
    }
    public void chkl_sema_OnSelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {

            int commcount = 0;
            // txt_str.Text = "--Select--";
            chk_sema.Checked = false;
            for (int i = 0; i < chkl_sema.Items.Count; i++)
            {
                if (chkl_sema.Items[i].Selected == true)
                {
                    commcount = commcount + 1;
                }
            }
            if (commcount > 0)
            {
                //  txt_str.Text = "Stream(" + commcount.ToString() + ")";
                if (commcount == chkl_sema.Items.Count)
                {
                    chk_sema.Checked = true;
                }
            }

        }
        catch (Exception ex)
        {

        }
    }
    public void chk_field_OnCheckedChanged(object sender, EventArgs e)
    {
        try
        {
            if (chk_filed.Checked == true)
            {
                for (int i = 0; i < chkl_field.Items.Count; i++)
                {
                    chkl_field.Items[i].Selected = true;
                }
                // txt_str.Text = "Stream(" + (chkl_course.Items.Count) + ")";
            }
            else
            {
                for (int i = 0; i < chkl_field.Items.Count; i++)
                {
                    chkl_field.Items[i].Selected = false;
                }
                //  txt_str.Text = "---Select---";
            }

        }
        catch (Exception ex)
        {

        }
    }
    public void chkl_filed_OnSelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {

            int commcount = 0;
            // txt_str.Text = "--Select--";
            chk_filed.Checked = false;
            for (int i = 0; i < chkl_field.Items.Count; i++)
            {
                if (chkl_field.Items[i].Selected == true)
                {
                    commcount = commcount + 1;
                }
            }
            if (commcount > 0)
            {
                //  txt_str.Text = "Stream(" + commcount.ToString() + ")";
                if (commcount == chkl_field.Items.Count)
                {
                    chk_filed.Checked = true;
                }
            }

        }
        catch (Exception ex)
        {

        }
    }

    protected void btnMvOneRt_Click(object sender, EventArgs e)
    {
        try
        {
            bool ok = true;
            if (lb_selecthdr.Items.Count > 0 && lb_selecthdr.SelectedItem.Value != "")
            {
                for (int j = 0; j < lb_hdr.Items.Count; j++)
                {
                    if (lb_hdr.Items[j].Value == lb_selecthdr.SelectedItem.Value)
                    {
                        ok = false;
                    }

                }
                if (ok)
                {
                    ListItem lst = new ListItem(lb_selecthdr.SelectedItem.Text, lb_selecthdr.SelectedItem.Value);
                    lb_hdr.Items.Add(lst);
                }

            }
        }
        catch { }
    }
    protected void btnMvTwoRt_Click(object sender, EventArgs e)
    {
        try
        {
            lb_hdr.Items.Clear();
            if (lb_selecthdr.Items.Count > 0)
            {
                for (int j = 0; j < lb_selecthdr.Items.Count; j++)
                {
                    ListItem lst = new ListItem(lb_selecthdr.Items[j].Text, lb_selecthdr.Items[j].Value);
                    lb_hdr.Items.Add(lst);
                }
            }
        }
        catch { }
    }
    protected void btnMvOneLt_Click(object sender, EventArgs e)
    {
        try
        {
            if (lb_hdr.Items.Count > 0 && lb_hdr.SelectedItem.Value != "")
            {
                lb_hdr.Items.RemoveAt(lb_hdr.SelectedIndex);
            }
        }
        catch { }
    }
    protected void btnMvTwoLt_Click(object sender, EventArgs e)
    {
        try
        {
            lb_hdr.Items.Clear();
        }
        catch { }
    }
    #endregion
    public void loadcollege()
    {
        try
        {
            ds.Clear();
            string Query = "select cp.college_code,cf.collname from collegeprivilages cp,collinfo cf where user_code=" + Session["usercode"] + " and cp.college_code=cf.college_code";
            ds = d2.select_method_wo_parameter(Query, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                ddl_collegename.DataSource = ds;
                ddl_collegename.DataTextField = "collname";
                ddl_collegename.DataValueField = "college_code";
                ddl_collegename.DataBind();
            }

        }
        catch
        {
        }
    }
    protected void lb3_Click(object sender, EventArgs e)
    {
        Session.Abandon();
        Session.Clear();
        Session.RemoveAll();
        System.Web.Security.FormsAuthentication.SignOut();
        Response.Redirect("default.aspx", false);

    }
    #region stream

    public void loadstrm()
    {
        try
        {
            ddlstream.Items.Clear();
            string clgvalue = ddl_collegename.SelectedItem.Value.ToString();
            string selqry = "select distinct type  from Course where college_code ='" + clgvalue + "' and type<>''";
            ds.Clear();
            ds = d2.select_method_wo_parameter(selqry, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                ddlstream.DataSource = ds;
                ddlstream.DataTextField = "type";
                ddlstream.DataValueField = "type";
                ddlstream.DataBind();
                ddlstream.Enabled = true;
            }
            else
            {
                ddlstream.Enabled = false;
            }
            binddeg();
        }
        catch
        { }
    }
    protected void ddlstream_OnSelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            string clgvalue = ddl_collegename.SelectedItem.Value.ToString();
            string stream = ddlstream.SelectedItem.Text.ToString();
            string selqry = "select distinct c.Course_Name,c.Course_Id  from Degree d,Department dt,Course c where d.Dept_Code =dt.Dept_Code and d.Course_Id =c.Course_Id  and type  in('" + stream + "') and d.college_code='" + clgvalue + "'";
            ds.Clear();
            ds = d2.select_method_wo_parameter(selqry, "Text");

            if (ds.Tables[0].Rows.Count > 0)
            {

                cbl_degree.DataSource = ds;
                cbl_degree.DataTextField = "Course_Name";
                cbl_degree.DataValueField = "Course_Id";
                cbl_degree.DataBind();
            }
            for (int j = 0; j < cbl_degree.Items.Count; j++)
            {
                cbl_degree.Items[j].Selected = true;
                cb_degree.Checked = true;
            }

            txt_degree.Text = lbldeg.Text + "(" + cbl_degree.Items.Count + ")";
            binddept();
        }
        catch { }
    }
    #endregion

    #region batch
    public void bindBtch()
    {
        try
        {

            cbl_batch.Items.Clear();
            cb_batch.Checked = false;
            txt_batch.Text = "---Select---";
            ds.Clear();
            ds = d2.BindBatch();
            if (ds.Tables[0].Rows.Count > 0)
            {
                cbl_batch.DataSource = ds;
                cbl_batch.DataTextField = "batch_year";
                cbl_batch.DataValueField = "batch_year";
                cbl_batch.DataBind();
                if (cbl_batch.Items.Count > 0)
                {
                    for (i = 0; i < cbl_batch.Items.Count; i++)
                    {
                        cbl_batch.Items[i].Selected = true;
                    }
                    txt_batch.Text = "Batch(" + cbl_batch.Items.Count + ")";
                    cb_batch.Checked = true;
                }
            }
        }
        catch { }
    }
    protected void cb_batch_OnCheckedChanged(object sender, EventArgs e)
    {
        try
        {
            CallCheckboxChange(cb_batch, cbl_batch, txt_batch, "Batch", "--Select--");
            binddeg();
            binddept();
        }
        catch { }
    }
    protected void cbl_batch_OnSelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CallCheckboxListChange(cb_batch, cbl_batch, txt_batch, "Batch", "--Select--");
            binddeg();
            binddept();
        }
        catch { }
    }
    #endregion

    #region degree


    public void binddeg()
    {
        try
        {
            cbl_degree.Items.Clear();
            cb_degree.Checked = false;
            txt_degree.Text = "---Select---";
            string stream = "";
            if (ddlstream.Items.Count > 0)
            {
                if (ddlstream.SelectedItem.Text != "")
                {
                    stream = ddlstream.SelectedItem.Text.ToString();
                }
            }

            cbl_degree.Items.Clear();
            string clgvalue = ddl_collegename.SelectedItem.Value.ToString();
            ds.Clear();
            string selqry = "select distinct  c.Course_Name,c.Course_Id  from Degree d,Department dt,Course c where d.Dept_Code =dt.Dept_Code and d.Course_Id =c.Course_Id  and d.college_code='" + clgvalue + "'";
            if (stream != "")
            {
                selqry = selqry + " and type  in('" + stream + "')";
            }
            ds = d2.select_method_wo_parameter(selqry, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                cbl_degree.DataSource = ds;
                cbl_degree.DataTextField = "course_name";
                cbl_degree.DataValueField = "course_id";
                cbl_degree.DataBind();
                if (cbl_degree.Items.Count > 0)
                {
                    for (i = 0; i < cbl_degree.Items.Count; i++)
                    {
                        cbl_degree.Items[i].Selected = true;
                    }
                    txt_degree.Text = lbldeg.Text + "(" + cbl_degree.Items.Count + ")";
                    cb_degree.Checked = true;
                }
            }

        }
        catch { }
    }
    protected void cb_degree_OnCheckedChanged(object sender, EventArgs e)
    {
        try
        {
            CallCheckboxChange(cb_degree, cbl_degree, txt_degree, lbldeg.Text, "--Select--");
            binddept();
        }
        catch { }
    }
    protected void cbl_degree_OnSelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CallCheckboxListChange(cb_degree, cbl_degree, txt_degree, lbldeg.Text, "--Select--");
            binddept();
        }
        catch { }
    }
    #endregion

    #region dept
    public void binddept()
    {
        try
        {
            cbl_dept.Items.Clear();
            cb_dept.Checked = false;
            txt_dept.Text = "---Select---";
            batch2 = "";
            for (i = 0; i < cbl_batch.Items.Count; i++)
            {
                if (cbl_batch.Items[i].Selected == true)
                {
                    if (batch2 == "")
                    {
                        batch2 = Convert.ToString(cbl_batch.Items[i].Text);
                    }
                    else
                    {
                        batch2 += "','" + Convert.ToString(cbl_batch.Items[i].Text);
                    }
                }

            }

            degree = "";
            for (i = 0; i < cbl_degree.Items.Count; i++)
            {
                if (cbl_degree.Items[i].Selected == true)
                {
                    if (degree == "")
                    {
                        degree = Convert.ToString(cbl_degree.Items[i].Value);
                    }
                    else
                    {
                        degree += "," + Convert.ToString(cbl_degree.Items[i].Value);
                    }
                }

            }

            string collegecode = ddl_collegename.SelectedItem.Value.ToString();
            if (batch2 != "" && degree != "")
            {
                ds.Clear();
                ds = d2.BindBranchMultiple(singleuser, group_user, degree, collegecode, usercode);
                if (ds.Tables[0].Rows.Count > 0)
                {
                    cbl_dept.DataSource = ds;
                    cbl_dept.DataTextField = "dept_name";
                    cbl_dept.DataValueField = "degree_code";
                    cbl_dept.DataBind();
                    if (cbl_dept.Items.Count > 0)
                    {
                        for (i = 0; i < cbl_dept.Items.Count; i++)
                        {
                            cbl_dept.Items[i].Selected = true;
                        }
                        txt_dept.Text = lbldept.Text + "(" + cbl_dept.Items.Count + ")";
                        cb_dept.Checked = true;
                    }
                }
            }

        }
        catch { }
    }
    protected void cb_dept_OnCheckedChanged(object sender, EventArgs e)
    {
        try
        {
            CallCheckboxChange(cb_dept, cbl_dept, txt_dept, lbldept.Text, "--Select--");
            bindsec();
            bindsem();
        }
        catch { }
    }
    protected void cbl_dept_OnSelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CallCheckboxListChange(cb_dept, cbl_dept, txt_dept, lbldept.Text, "--Select--");
            bindsec();
            bindsem();
        }
        catch { }
    }
    #endregion

    #region sem
    protected void cb_sem_OnCheckedChanged(object sender, EventArgs e)
    {
        try
        {
            CallCheckboxChange(cb_sem, cbl_sem, txt_sem, "Semester", "--Select--");
            bindsec();
        }
        catch (Exception ex)
        { }
    }
    protected void cbl_sem_OnSelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CallCheckboxListChange(cb_sem, cbl_sem, txt_sem, "Semester", "--Select--");
            bindsec();
        }
        catch (Exception ex)
        { }
    }
    protected void bindsem()
    {
        try
        {
            cbl_sem.Items.Clear();
            cb_sem.Checked = false;
            txt_sem.Text = "--Select--";
            ds.Clear();
            string linkName = string.Empty;
            string cbltext = string.Empty;
            ds = d2.loadFeecategory(Convert.ToString(ddl_collegename.SelectedItem.Value), usercode, ref linkName);
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                cbl_sem.DataSource = ds;
                cbl_sem.DataTextField = "TextVal";
                cbl_sem.DataValueField = "TextCode";
                cbl_sem.DataBind();

                if (cbl_sem.Items.Count > 0)
                {
                    for (int i = 0; i < cbl_sem.Items.Count; i++)
                    {
                        cbl_sem.Items[i].Selected = true;
                        cbltext = Convert.ToString(cbl_sem.Items[i].Text);
                    }
                    if (cbl_sem.Items.Count == 1)
                        txt_sem.Text = "" + linkName + "(" + cbltext + ")";
                    else
                        txt_sem.Text = "" + linkName + "(" + cbl_sem.Items.Count + ")";
                    cb_sem.Checked = true;
                }
            }
        }
        catch { }
    }
    //protected void bindsem()
    //{
    //    try
    //    {
    //        string sem = "";
    //        string clgvalue = ddl_collegename.SelectedItem.Value.ToString();
    //        string semyear = "select * from New_InsSettings where linkname = 'SemesterandYear' and user_code ='" + usercode + "' and college_code ='" + clgvalue + "'";
    //        DataSet dsset = new DataSet();
    //        dsset.Clear();
    //        dsset = d2.select_method_wo_parameter(semyear, "Text");
    //        if (dsset.Tables.Count > 0 && dsset.Tables[0].Rows.Count > 0)
    //        {
    //            string value = Convert.ToString(dsset.Tables[0].Rows[0]["LinkValue"]);
    //            if (value == "1")
    //            {
    //                string SelectQ = "select * from textvaltable where TextCriteria = 'FEECA'and (textval like '%Semester' or textval like '%Year') and textval not like '-1%' and college_code ='" + clgvalue + "' order by len(textval),textval asc";
    //                ds.Clear();
    //                ds = d2.select_method_wo_parameter(SelectQ, "Text");
    //                if (ds.Tables[0].Rows.Count > 0)
    //                {
    //                    //text_circode = Convert.ToString(ds.Tables[0].Rows[0]["TextCode"]);
    //                    cbl_sem.DataSource = ds;
    //                    cbl_sem.DataTextField = "TextVal";
    //                    cbl_sem.DataValueField = "TextCode";
    //                    cbl_sem.DataBind();
    //                }
    //                if (cbl_sem.Items.Count > 0)
    //                {
    //                    for (int i = 0; i < cbl_sem.Items.Count; i++)
    //                    {
    //                        cbl_sem.Items[i].Selected = true;
    //                        sem = Convert.ToString(cbl_sem.Items[i].Text);
    //                    }
    //                    if (cbl_sem.Items.Count == 1)
    //                    {
    //                        txt_sem.Text = "SemesterandYear(" + sem + ")";
    //                    }
    //                    else
    //                    {
    //                        txt_sem.Text = "SemesterandYear(" + cbl_sem.Items.Count + ")";
    //                    }
    //                    cb_sem.Checked = true;
    //                }

    //            }
    //            else
    //            {
    //                cbl_sem.Items.Clear();
    //                string settingquery = "select * from New_InsSettings where linkname = 'Fee Yearwise' and user_code ='" + usercode + "' and college_code ='" + clgvalue + "'";
    //                ds.Clear();
    //                ds = d2.select_method_wo_parameter(settingquery, "Text");
    //                if (ds.Tables[0].Rows.Count > 0)
    //                {
    //                    string linkvalue = Convert.ToString(ds.Tables[0].Rows[0]["LinkValue"]);
    //                    if (linkvalue == "0")
    //                    {
    //                        string semesterquery = "select * from textvaltable where TextCriteria = 'FEECA'and textval like '%Semester' and textval not like '-1%' and college_code ='" + clgvalue + "' order by len(textval),textval asc";
    //                        ds.Clear();
    //                        ds = d2.select_method_wo_parameter(semesterquery, "Text");
    //                        if (ds.Tables[0].Rows.Count > 0)
    //                        {
    //                            //text_circode = Convert.ToString(ds.Tables[0].Rows[0]["TextCode"]);
    //                            cbl_sem.DataSource = ds;
    //                            cbl_sem.DataTextField = "TextVal";
    //                            cbl_sem.DataValueField = "TextCode";
    //                            cbl_sem.DataBind();
    //                        }
    //                        if (cbl_sem.Items.Count > 0)
    //                        {
    //                            for (int i = 0; i < cbl_sem.Items.Count; i++)
    //                            {
    //                                cbl_sem.Items[i].Selected = true;
    //                                sem = Convert.ToString(cbl_sem.Items[i].Text);
    //                            }
    //                            if (cbl_sem.Items.Count == 1)
    //                            {
    //                                txt_sem.Text = "Semester(" + sem + ")";
    //                            }
    //                            else
    //                            {
    //                                txt_sem.Text = "Semester(" + cbl_sem.Items.Count + ")";
    //                            }
    //                            cb_sem.Checked = true;
    //                        }
    //                    }
    //                    else
    //                    {
    //                        string semesterquery = "select * from textvaltable where TextCriteria = 'FEECA'and textval like '%Year' and textval not like '-1%' and college_code ='" + clgvalue + "' order by len(textval),textval asc";
    //                        ds.Clear();
    //                        ds = d2.select_method_wo_parameter(semesterquery, "Text");
    //                        if (ds.Tables[0].Rows.Count > 0)
    //                        {
    //                            // text_circode = Convert.ToString(ds.Tables[0].Rows[0]["TextCode"]);
    //                            cbl_sem.DataSource = ds;
    //                            cbl_sem.DataTextField = "TextVal";
    //                            cbl_sem.DataValueField = "TextCode";
    //                            cbl_sem.DataBind();
    //                        }
    //                        if (cbl_sem.Items.Count > 0)
    //                        {
    //                            for (int i = 0; i < cbl_sem.Items.Count; i++)
    //                            {
    //                                cbl_sem.Items[i].Selected = true;
    //                                sem = Convert.ToString(cbl_sem.Items[i].Text);
    //                            }
    //                            if (cbl_sem.Items.Count == 1)
    //                            {
    //                                txt_sem.Text = "Year(" + sem + ")";
    //                            }
    //                            else
    //                            {
    //                                txt_sem.Text = "Year(" + cbl_sem.Items.Count + ")";
    //                            }
    //                            cb_sem.Checked = true;
    //                        }
    //                    }
    //                }
    //            }
    //        }
    //    }
    //    catch { }
    //}
    //public void bindsem()
    //{
    //    string sem = "";
    //    string clgvalue = ddl_collegename.SelectedItem.Value.ToString();
    //    cbl_sem.Items.Clear();

    //    string settingquery = "select * from New_InsSettings where linkname = 'Fee Yearwise' and user_code ='" + usercode + "' and college_code ='" + clgvalue + "'";
    //    ds.Clear();
    //    ds = d2.select_method_wo_parameter(settingquery, "Text");
    //    if (ds.Tables[0].Rows.Count > 0)
    //    {
    //        string linkvalue = Convert.ToString(ds.Tables[0].Rows[0]["LinkValue"]);
    //        if (linkvalue == "0")
    //        {
    //            string semesterquery = "select * from textvaltable where TextCriteria = 'FEECA'and textval like '%Semester' and textval not like '-1%' and college_code ='" + clgvalue + "' order by textval asc";
    //            ds.Clear();
    //            ds = d2.select_method_wo_parameter(semesterquery, "Text");
    //            if (ds.Tables[0].Rows.Count > 0)
    //            {
    //                //text_circode = Convert.ToString(ds.Tables[0].Rows[0]["TextCode"]);
    //                cbl_sem.DataSource = ds;
    //                cbl_sem.DataTextField = "TextVal";
    //                cbl_sem.DataValueField = "TextCode";
    //                cbl_sem.DataBind();
    //            }
    //            if (cbl_sem.Items.Count > 0)
    //            {
    //                for (int i = 0; i < cbl_sem.Items.Count; i++)
    //                {
    //                    cbl_sem.Items[i].Selected = true;
    //                    sem = Convert.ToString(cbl_sem.Items[i].Text);
    //                }
    //                if (cbl_sem.Items.Count == 1)
    //                {
    //                    txt_sem.Text = "Semester(" + sem + ")";
    //                }
    //                else
    //                {
    //                    txt_sem.Text = "Semester(" + cbl_sem.Items.Count + ")";
    //                }
    //                cb_sem.Checked = true;
    //            }
    //        }
    //        else
    //        {
    //            string semesterquery = "select * from textvaltable where TextCriteria = 'FEECA'and textval like '%Year' and textval not like '-1%' and college_code ='" + clgvalue + "'";
    //            ds.Clear();
    //            ds = d2.select_method_wo_parameter(semesterquery, "Text");
    //            if (ds.Tables[0].Rows.Count > 0)
    //            {
    //                // text_circode = Convert.ToString(ds.Tables[0].Rows[0]["TextCode"]);
    //                cbl_sem.DataSource = ds;
    //                cbl_sem.DataTextField = "TextVal";
    //                cbl_sem.DataValueField = "TextCode";
    //                cbl_sem.DataBind();
    //            }
    //            if (cbl_sem.Items.Count > 0)
    //            {
    //                for (int i = 0; i < cbl_sem.Items.Count; i++)
    //                {
    //                    cbl_sem.Items[i].Selected = true;
    //                    sem = Convert.ToString(cbl_sem.Items[i].Text);
    //                }
    //                if (cbl_sem.Items.Count == 1)
    //                {
    //                    txt_sem.Text = "Semester(" + sem + ")";
    //                }
    //                else
    //                {
    //                    txt_sem.Text = "Semester(" + cbl_sem.Items.Count + ")";
    //                }
    //                cb_sem.Checked = true;
    //            }
    //        }
    //    }
    //}
    #endregion

    #region sec
    public void bindsec()
    {
        try
        {
            cbl_sect.Items.Clear();
            txt_sect.Text = "---Select---";
            cb_sect.Checked = false;
            string build = "";
            if (cbl_sem.Items.Count > 0)
            {
                for (int i = 0; i < cbl_sem.Items.Count; i++)
                {
                    if (cbl_sem.Items[i].Selected == true)
                    {
                        if (build == "")
                        {
                            build = Convert.ToString(cbl_sem.Items[i].Value);
                        }
                        else
                        {
                            build = build + "'" + "," + "'" + Convert.ToString(cbl_sem.Items[i].Value);
                        }
                    }
                }
            }
            string clgvalue = ddl_collegename.SelectedItem.Value.ToString();
            if (build != "")
            {
                ds = d2.BindSectionDetailmult(clgvalue);
                if (ds.Tables[0].Rows.Count > 0)
                {
                    cbl_sect.DataSource = ds;
                    cbl_sect.DataTextField = "sections";
                    cbl_sect.DataValueField = "sections";
                    cbl_sect.DataBind();
                    if (cbl_sect.Items.Count > 0)
                    {
                        for (int row = 0; row < cbl_sect.Items.Count; row++)
                        {
                            cbl_sect.Items[row].Selected = true;
                        }
                        txt_sect.Text = "Section(" + cbl_sect.Items.Count + ")";
                        cb_sect.Checked = true;
                    }

                }
            }
            else
            {
                cb_sect.Checked = false;
                txt_sect.Text = "--Select--";
            }
        }

        catch (Exception ex)
        {
        }
    }
    protected void cb_sect_OnCheckedChanged(object sender, EventArgs e)
    {
        try
        {
            CallCheckboxChange(cb_sect, cbl_sect, txt_sect, "Section", "--Select--");
        }
        catch (Exception ex)
        { }
    }
    protected void cbl_sect_OnSelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CallCheckboxListChange(cb_sect, cbl_sect, txt_sect, "Section", "--Select--");
        }

        catch (Exception ex)
        { }
    }
    #endregion

    #region Include setting
    private void LoadIncludeSetting()
    {
        try
        {
            cblinclude.Items.Clear();
            cblinclude.Items.Add(new ListItem("Course Completed", "1"));
            cblinclude.Items.Add(new ListItem("Debar", "2"));
            cblinclude.Items.Add(new ListItem("Discontinue", "3"));
            if (cblinclude.Items.Count > 0)
            {
                for (int i = 0; i < cblinclude.Items.Count; i++)
                {
                    cblinclude.Items[i].Selected = true;
                }
                cbinclude.Checked = true;
                txtinclude.Text = "Include Settings(" + cblinclude.Items.Count + ")";
            }
        }
        catch { }
    }
    protected void cbinclude_OnCheckedChanged(object sender, EventArgs e)
    {
        try
        {
            CallCheckboxChange(cbinclude, cblinclude, txtinclude, "Include Setting", "--Select--");
        }
        catch { }
    }
    protected void cblinclude_OnSelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CallCheckboxListChange(cbinclude, cblinclude, txtinclude, "Include Setting", "--Select--");
        }
        catch { }
    }


    #endregion

    #region allrbevents

    #region rb_header_change
    protected void rb_header_Change(object sender, EventArgs e)
    {
        fsdailydetail.Visible = false;
        studpaid.Visible = false;
        //btn_fpled.Visible = false;
        //btn_fpsema.Visible = false;
        //btn_fpdep.Visible = false;
        //btn_fpdeg.Visible = false;
        //btn_fpbat.Visible = false;
        lbl_alert.Visible = false;
        studwise.Visible = false;
        divstudwise.Visible = false;
        loadcolumnorder();
        div1.Visible = false;
        FpSpread1.Visible = false;
        divledger.Visible = false;
        fpledger.Visible = false;
        divdegree.Visible = false;
        divdept.Visible = false;
        fpdegree.Visible = false;
        divsem.Visible = false;
        fpdept.Visible = false;
        fpsem.Visible = false;
        lbl_ledg.Visible = false;
        lbl_ledg.Text = "";
        lbl_degr.Visible = false;
        lbl_degr.Text = "";
        lbl_dep.Visible = false;
        lbl_dep.Text = "";
        lbl_sem.Visible = false;
        lbl_sem.Text = "";
        rptprint.Visible = false;
        pheaderfilter.Visible = false;
        pcolumnorder.Visible = false;
        lblhed.Text = "";
        pagelnk.Visible = false;
        txtexcelname.Text = "";
        lblvalidation1.Text = "";
        //pnlledgercolorder.Visible = false;
        //Pnlledcolorder.Visible = false;
        //pnl_batchcolorder.Visible = false;
        //pnl_batcolorder.Visible = false;
        //pnl_degcolorder.Visible = false;
        //pnl_degreecolorder.Visible = false;
        //pnl_deptcolord.Visible = false;
        //pnl_deptcolorder.Visible = false;
        //pnl_semcolord.Visible = false;
        //pnl_semcolorder.Visible = false;
        //pnl_studcolord.Visible = false;
        //pnl_studcolorder.Visible = false;
        divstudcell.Visible = false;
        fpstudcell.Visible = false;
        lbl_semcell.Text = "";
        lbl_semcell.Visible = false;
        //ledgercellclik = false;
        Button1.Visible = false;
        //  divdatewise.Visible = false;
        chk_datewise.Checked = false;
        ledger.Visible = false;
        divdegr.Visible = false;
        divdep.Visible = false;
        divsema.Visible = false;
        div7.Visible = false;
        //dept
        deptfld.Visible = false;
        deptdtfld.Visible = false;
        otherfld.Visible = false;
        deptcomm.Visible = false;
        deptdetail.Visible = false;

        //chart
        // divchart.Visible = false;
        lblchart.Visible = false;
        //ddl stud paid chart
        tdddlbatch.Visible = false;
        tdddldegree.Visible = false;
        tdddldept.Visible = false;
        //
        tdcblbatch.Visible = true;
        tdcbldegree.Visible = true;
        tdcbldept.Visible = true;

    }
    #endregion

    #region rb_ledger_chang
    protected void rb_ledger_Change(object sender, EventArgs e)
    {
        fsdailydetail.Visible = false;
        studpaid.Visible = false;
        //btn_fpled.Visible = false;
        //btn_fpsema.Visible = false;
        //btn_fpdep.Visible = false;
        //btn_fpdeg.Visible = false;
        //btn_fpbat.Visible = false;
        lbl_alert.Visible = false;
        studwise.Visible = false;
        divstudwise.Visible = false;
        loadcolumnorder();
        div1.Visible = false;
        FpSpread1.Visible = false;
        divledger.Visible = false;
        fpledger.Visible = false;
        divbatch.Visible = false;
        fpbatch.Visible = false;
        divdegree.Visible = false;
        divdept.Visible = false;
        fpdegree.Visible = false;
        divsem.Visible = false;
        fpdept.Visible = false;
        fpsem.Visible = false;
        lbl_ledg.Visible = false;
        lbl_ledg.Text = "";
        lbl_bat.Visible = false;
        lbl_bat.Text = "";
        lbl_degr.Visible = false;
        lbl_degr.Text = "";
        lbl_dep.Visible = false;
        lbl_dep.Text = "";
        lbl_sem.Visible = false;
        lbl_sem.Text = "";
        rptprint.Visible = false;
        pheaderfilter.Visible = false;
        pcolumnorder.Visible = false;
        pagelnk.Visible = false;
        lblhed.Text = "";
        txtexcelname.Text = "";
        lblvalidation1.Text = "";
        //pnlledgercolorder.Visible = false;
        //Pnlledcolorder.Visible = false;
        //pnl_batchcolorder.Visible = false;
        //pnl_batcolorder.Visible = false;
        //pnl_degcolorder.Visible = false;
        //pnl_degreecolorder.Visible = false;
        //pnl_deptcolord.Visible = false;
        //pnl_deptcolorder.Visible = false;
        //pnl_semcolord.Visible = false;
        //pnl_semcolorder.Visible = false;
        //pnl_studcolord.Visible = false;
        //pnl_studcolorder.Visible = false;
        divstudcell.Visible = false;
        fpstudcell.Visible = false;
        lbl_semcell.Text = "";
        lbl_semcell.Visible = false;
        // divdatewise.Visible = false;
        chk_datewise.Checked = false;
        ledger.Visible = false;
        batch.Visible = false;
        divdegr.Visible = false;
        divdep.Visible = false;
        divsema.Visible = false;
        div7.Visible = false;
        //dept
        deptfld.Visible = false;
        deptdtfld.Visible = false;
        otherfld.Visible = false;
        deptcomm.Visible = false;
        deptdetail.Visible = false;

        //chart
        // divchart.Visible = false;
        lblchart.Visible = false;
        //ddl stud paid chart
        tdddlbatch.Visible = false;
        tdddldegree.Visible = false;
        tdddldept.Visible = false;
        //
        tdcblbatch.Visible = true;
        tdcbldegree.Visible = true;
        tdcbldept.Visible = true;
    }
    #endregion

    #region rb_batch_change
    protected void rb_batch_Change(object sender, EventArgs e)
    {
        fsdailydetail.Visible = false;
        studpaid.Visible = false;
        //btn_fpled.Visible = false;
        //btn_fpsema.Visible = false;
        //btn_fpdep.Visible = false;
        //btn_fpdeg.Visible = false;
        //btn_fpbat.Visible = false;
        lbl_alert.Visible = false;
        Button1.Visible = false;
        studwise.Visible = false;
        divstudwise.Visible = false;
        //bindBtch();
        //binddeg();
        //binddept();
        //bindsem();
        //bindsec();
        //loadstutype();
        //loadseat();
        //loadtype();
        //loadpaid();
        //loadpaid();
        //loadheaderandledger();
        //ledgerload();
        loadcolumnorder();
        div1.Visible = false;
        FpSpread1.Visible = false;
        divledger.Visible = false;
        fpledger.Visible = false;
        divbatch.Visible = false;
        fpbatch.Visible = false;
        divdegree.Visible = false;
        divdept.Visible = false;
        fpdegree.Visible = false;
        divsem.Visible = false;
        fpdept.Visible = false;
        fpsem.Visible = false;
        lbl_ledg.Visible = false;
        lbl_ledg.Text = "";
        lbl_bat.Visible = false;
        lbl_bat.Text = "";
        lbl_degr.Visible = false;
        lbl_degr.Text = "";
        lbl_dep.Visible = false;
        lbl_dep.Text = "";
        lbl_sem.Visible = false;
        lbl_sem.Text = "";
        rptprint.Visible = false;
        pheaderfilter.Visible = false;
        pcolumnorder.Visible = false;
        pagelnk.Visible = false;
        lblhed.Text = "";
        txtexcelname.Text = "";
        lblvalidation1.Text = "";
        //pnlledgercolorder.Visible = false;
        //Pnlledcolorder.Visible = false;
        //pnl_batchcolorder.Visible = false;
        //pnl_batcolorder.Visible = false;
        //pnl_degcolorder.Visible = false;
        //pnl_degreecolorder.Visible = false;
        //pnl_deptcolord.Visible = false;
        //pnl_deptcolorder.Visible = false;
        //pnl_semcolord.Visible = false;
        //pnl_semcolorder.Visible = false;
        //pnl_studcolord.Visible = false;
        //pnl_studcolorder.Visible = false;
        divstudcell.Visible = false;
        fpstudcell.Visible = false;
        lbl_semcell.Text = "";
        lbl_semcell.Visible = false;
        //  divdatewise.Visible = false;
        chk_datewise.Checked = false;
        ledger.Visible = false;
        batch.Visible = false;
        divdegr.Visible = false;
        divdep.Visible = false;
        divsema.Visible = false;
        div7.Visible = false;
        //dept
        deptfld.Visible = false;
        deptdtfld.Visible = false;
        otherfld.Visible = false;
        deptcomm.Visible = false;
        deptdetail.Visible = false;

        //chart
        // divchart.Visible = false;
        lblchart.Visible = false;
        //ddl stud paid chart
        tdddlbatch.Visible = false;
        tdddldegree.Visible = false;
        tdddldept.Visible = false;
        //
        tdcblbatch.Visible = true;
        tdcbldegree.Visible = true;
        tdcbldept.Visible = true;
    }
    #endregion

    #region rb_dept_change
    protected void rb_dept_Change(object sender, EventArgs e)
    {
        fsdailydetail.Visible = false;
        otherdetail.Visible = false;
        studpaid.Visible = false;
        //btn_fpled.Visible = false;
        //btn_fpsema.Visible = false;
        //btn_fpdep.Visible = false;
        //btn_fpdeg.Visible = false;
        //btn_fpbat.Visible = false;
        lbl_alert.Visible = false;
        Button1.Visible = false;
        studwise.Visible = false;
        divstudwise.Visible = false;
        loadcolumnorder();
        div1.Visible = false;
        FpSpread1.Visible = false;
        divledger.Visible = false;
        fpledger.Visible = false;
        divbatch.Visible = false;
        fpbatch.Visible = false;
        divdegree.Visible = false;
        divdept.Visible = false;
        fpdegree.Visible = false;
        divsem.Visible = false;
        fpdept.Visible = false;
        fpsem.Visible = false;
        lbl_ledg.Visible = false;
        lbl_ledg.Text = "";
        lbl_bat.Visible = false;
        lbl_bat.Text = "";
        lbl_degr.Visible = false;
        lbl_degr.Text = "";
        lbl_dep.Visible = false;
        lbl_dep.Text = "";
        lbl_sem.Visible = false;
        lbl_sem.Text = "";
        rptprint.Visible = false;
        pheaderfilter.Visible = false;
        pcolumnorder.Visible = false;
        lblhed.Text = "";
        pagelnk.Visible = false;
        txtexcelname.Text = "";
        lblvalidation1.Text = "";
        //pnlledgercolorder.Visible = false;
        //Pnlledcolorder.Visible = false;
        //pnl_batchcolorder.Visible = false;
        //pnl_batcolorder.Visible = false;
        //pnl_degcolorder.Visible = false;
        //pnl_degreecolorder.Visible = false;
        //pnl_deptcolord.Visible = false;
        //pnl_deptcolorder.Visible = false;
        //pnl_semcolord.Visible = false;
        //pnl_semcolorder.Visible = false;
        //pnl_studcolord.Visible = false;
        //pnl_studcolorder.Visible = false;
        divstudcell.Visible = false;
        fpstudcell.Visible = false;
        lbl_semcell.Text = "";
        lbl_semcell.Visible = false;
        // divdatewise.Visible = false;
        chk_datewise.Checked = false;
        ledger.Visible = false;
        batch.Visible = false;
        divdegr.Visible = false;
        divdep.Visible = false;
        divsema.Visible = false;
        div7.Visible = false;
        //dept
        //deptfld.Visible = true;
        //deptcomm.Visible = true;
        //rbdeptcommon.Checked = true;
        //rbdeptdetail.Checked = false;
        //deptdtfld.Visible = false;
        //deptdetail.Visible = false;
        //otherfld.Visible = false;

        //deptfld.Visible = false;
        //deptdtfld.Visible = false;
        //otherfld.Visible = false;
        //deptcomm.Visible = false;
        //deptdetail.Visible = false;

        //chart
        // divchart.Visible = false;
        lblchart.Visible = false;
        //ddl stud paid chart
        tdddlbatch.Visible = false;
        tdddldegree.Visible = false;
        tdddldept.Visible = false;
        //
        tdcblbatch.Visible = true;
        tdcbldegree.Visible = true;
        tdcbldept.Visible = true;
    }
    #endregion

    #region rb_degree_change
    protected void rb_degree_Change(object sender, EventArgs e)
    {
        fsdailydetail.Visible = false;
        studpaid.Visible = false;
        //btn_fpled.Visible = false;
        //btn_fpsema.Visible = false;
        //btn_fpdep.Visible = false;
        //btn_fpdeg.Visible = false;
        //btn_fpbat.Visible = false;
        Button1.Visible = false;
        studwise.Visible = false;
        divstudwise.Visible = false;
        loadcolumnorder();
        div1.Visible = false;
        FpSpread1.Visible = false;
        divledger.Visible = false;
        fpledger.Visible = false;
        divbatch.Visible = false;
        fpbatch.Visible = false;
        divdegree.Visible = false;
        divdept.Visible = false;
        fpdegree.Visible = false;
        divsem.Visible = false;
        fpdept.Visible = false;
        fpsem.Visible = false;
        lbl_ledg.Visible = false;
        lbl_ledg.Text = "";
        lbl_bat.Visible = false;
        lbl_bat.Text = "";
        lbl_degr.Visible = false;
        lbl_degr.Text = "";
        lbl_dep.Visible = false;
        lbl_dep.Text = "";
        lbl_sem.Visible = false;
        lbl_sem.Text = "";
        rptprint.Visible = false;
        pheaderfilter.Visible = false;
        pcolumnorder.Visible = false;
        pagelnk.Visible = false;
        lblhed.Text = "";
        txtexcelname.Text = "";
        lblvalidation1.Text = "";
        //pnlledgercolorder.Visible = false;
        //Pnlledcolorder.Visible = false;
        //pnl_batchcolorder.Visible = false;
        //pnl_batcolorder.Visible = false;
        //pnl_degcolorder.Visible = false;
        //pnl_degreecolorder.Visible = false;
        //pnl_deptcolord.Visible = false;
        //pnl_deptcolorder.Visible = false;
        //pnl_semcolord.Visible = false;
        //pnl_semcolorder.Visible = false;
        //pnl_studcolord.Visible = false;
        //pnl_studcolorder.Visible = false;
        divstudcell.Visible = false;
        fpstudcell.Visible = false;
        lbl_semcell.Text = "";
        lbl_semcell.Visible = false;
        // divdatewise.Visible = false;
        chk_datewise.Checked = false;
        ledger.Visible = false;
        batch.Visible = false;
        divdegr.Visible = false;
        divdep.Visible = false;
        divsema.Visible = false;
        div7.Visible = false;
        //dept
        deptfld.Visible = false;
        deptdtfld.Visible = false;
        otherfld.Visible = false;
        deptcomm.Visible = false;
        deptdetail.Visible = false;
        //chart
        // divchart.Visible = false;
        lblchart.Visible = false;
        //ddl stud paid chart
        tdddlbatch.Visible = false;
        tdddldegree.Visible = false;
        tdddldept.Visible = false;
        //
        tdcblbatch.Visible = true;
        tdcbldegree.Visible = true;
        tdcbldept.Visible = true;
    }
    #endregion

    #region rb_sem_change
    protected void rb_sem_Change(object sender, EventArgs e)
    {
        fsdailydetail.Visible = false;
        studpaid.Visible = false;
        //btn_fpled.Visible = false;
        //btn_fpsema.Visible = false;
        //btn_fpdep.Visible = false;
        //btn_fpdeg.Visible = false;
        //btn_fpbat.Visible = false;
        lbl_alert.Visible = false;
        studwise.Visible = false;
        divstudwise.Visible = false;
        loadcolumnorder();
        div1.Visible = false;
        FpSpread1.Visible = false;
        divledger.Visible = false;
        fpledger.Visible = false;
        divbatch.Visible = false;
        fpbatch.Visible = false;
        divdegree.Visible = false;
        divdept.Visible = false;
        fpdegree.Visible = false;
        divsem.Visible = false;
        fpdept.Visible = false;
        fpsem.Visible = false;
        lbl_ledg.Visible = false;
        lbl_ledg.Text = "";
        lbl_bat.Visible = false;
        lbl_bat.Text = "";
        lbl_degr.Visible = false;
        lbl_degr.Text = "";
        lbl_dep.Visible = false;
        lbl_dep.Text = "";
        lbl_sem.Visible = false;
        lbl_sem.Text = "";
        rptprint.Visible = false;
        pheaderfilter.Visible = false;
        pcolumnorder.Visible = false;
        pagelnk.Visible = false;
        lblhed.Text = "";
        txtexcelname.Text = "";
        lblvalidation1.Text = "";
        //pnlledgercolorder.Visible = false;
        //Pnlledcolorder.Visible = false;
        //pnl_batchcolorder.Visible = false;
        //pnl_batcolorder.Visible = false;
        //pnl_degcolorder.Visible = false;
        //pnl_degreecolorder.Visible = false;
        //pnl_deptcolord.Visible = false;
        //pnl_deptcolorder.Visible = false;
        //pnl_semcolord.Visible = false;
        //pnl_semcolorder.Visible = false;
        //pnl_studcolord.Visible = false;
        //pnl_studcolorder.Visible = false;
        divstudcell.Visible = false;
        fpstudcell.Visible = false;
        lbl_semcell.Text = "";
        lbl_semcell.Visible = false;
        Button1.Visible = false;
        //  divdatewise.Visible = false;
        chk_datewise.Checked = false;
        ledger.Visible = false;
        batch.Visible = false;
        divdegr.Visible = false;
        divdep.Visible = false;
        divsema.Visible = false;
        div7.Visible = false;
        //dept
        deptfld.Visible = false;
        deptdtfld.Visible = false;
        otherfld.Visible = false;
        deptcomm.Visible = false;
        deptdetail.Visible = false;

        //chart
        //  divchart.Visible = false;
        lblchart.Visible = false;
        //ddl stud paid chart
        tdddlbatch.Visible = false;
        tdddldegree.Visible = false;
        tdddldept.Visible = false;
        //
        tdcblbatch.Visible = true;
        tdcbldegree.Visible = true;
        tdcbldept.Visible = true;
    }
    #endregion

    #region rb_studwise_change
    protected void rb_studwise_Change(object sender, EventArgs e)
    {

        loadsetting();
        //btn_fpled.Visible = false;
        //btn_fpsema.Visible = false;
        //btn_fpdep.Visible = false;
        //btn_fpdeg.Visible = false;
        //btn_fpbat.Visible = false;
        lbl_alert.Visible = false;
        Button1.Visible = false;
        // studwise.Visible = true;
        divstudwise.Visible = true;
        loadcolumnorder();
        div1.Visible = false;
        FpSpread1.Visible = false;
        divledger.Visible = false;
        fpledger.Visible = false;
        divbatch.Visible = false;
        fpbatch.Visible = false;
        divdegree.Visible = false;
        divdept.Visible = false;
        fpdegree.Visible = false;
        divsem.Visible = false;
        fpdept.Visible = false;
        fpsem.Visible = false;
        lbl_ledg.Visible = false;
        lbl_ledg.Text = "";
        lbl_bat.Visible = false;
        lbl_bat.Text = "";
        lbl_degr.Visible = false;
        lbl_degr.Text = "";
        lbl_dep.Visible = false;
        lbl_dep.Text = "";
        lbl_sem.Visible = false;
        lbl_sem.Text = "";
        rptprint.Visible = false;
        rb_detail.Checked = false;
        rb_common.Checked = true;
        rb_hori.Enabled = false;
        rb_vert.Enabled = false;
        rbstudhed.Enabled = false;
        rbstudled.Enabled = false;
        rb_hori.Checked = true;
        rb_vert.Checked = false;
        rbstudhed.Checked = true;
        // pagelnk.Visible = true;
        LinkButton3.Visible = true;
        // pheaderfilter.Visible = true;
        pheaderfilter.Visible = false;
        pcolumnorder.Visible = false;
        lblhed.Text = "";
        ledgercellclik = false;
        txtexcelname.Text = "";
        // pagelnk.Visible = false;
        lblvalidation1.Text = "";
        //pnlledgercolorder.Visible = false;
        //Pnlledcolorder.Visible = false;
        //pnl_batchcolorder.Visible = false;
        //pnl_batcolorder.Visible = false;
        //pnl_degcolorder.Visible = false;
        //pnl_degreecolorder.Visible = false;
        //pnl_deptcolord.Visible = false;
        //pnl_deptcolorder.Visible = false;
        //pnl_semcolord.Visible = false;
        //pnl_semcolorder.Visible = false;
        //pnl_studcolord.Visible = false;
        //pnl_studcolorder.Visible = false;
        divstudcell.Visible = false;
        fpstudcell.Visible = false;
        lbl_semcell.Text = "";
        lbl_semcell.Visible = false;
        studpaid.Visible = true;
        //  divdatewise.Visible = false;
        chk_datewise.Checked = false;
        ledger.Visible = false;
        batch.Visible = false;
        divdegr.Visible = false;
        divdep.Visible = false;
        divsema.Visible = false;
        div7.Visible = false;
        txt_roll.Text = "";
        //dept
        deptfld.Visible = false;
        deptdtfld.Visible = false;
        otherfld.Visible = false;
        deptcomm.Visible = false;
        deptdetail.Visible = false;
        //chart
        // divchart.Visible = false;
        lblchart.Visible = false;
        //
        fsdailydetail.Visible = true;
        studwise.Visible = true;
        fspaid.Visible = true;
        //ddl stud paid chart
        tdddlbatch.Visible = false;
        tdddldegree.Visible = false;
        tdddldept.Visible = false;
        //
        tdcblbatch.Visible = true;
        tdcbldegree.Visible = true;
        tdcbldept.Visible = true;
    }
    #endregion

    #region studcommonanddetails
    public void rb_detail_Change(object sender, EventArgs e)
    {
        //dfcr.Visible = false;
        //btn_fpsema.Visible = false;
        //btn_fpdep.Visible = false;
        //btn_fpdeg.Visible = false;
        //btn_fpbat.Visible = false;
        lbl_alert.Visible = false;
        Button1.Visible = false;
        //bindBtch();
        //binddeg();
        //binddept();
        //bindsem();
        //bindsec();
        //loadstutype();
        //loadseat();
        //loadtype();
        //loadpaid();
        //loadpaid();
        //loadheaderandledger();
        //ledgerload();
        rb_hori.Checked = true;
        rb_vert.Checked = false;
        rb_hori.Enabled = true;
        rb_vert.Enabled = true;
        rbstudhed.Enabled = true;
        rbstudhed.Checked = true;
        rbstudled.Checked = false;
        rbstudled.Enabled = true;
        loadcolumnorder();
        pagelnk.Visible = true;
        //div1.Visible = false;
        //FpSpread1.Visible = false;
        //rptprint.Visible = false;
        // pheaderfilter.Visible = false;
        // pcolumnorder.Visible = false;
        lblhed.Text = "";
        // Button1.Visible = true;
        Button1.Visible = false;
        //dept
        deptcomm.Visible = false;
        deptdetail.Visible = false;

        //chart
        // divchart.Visible = false;
        lblchart.Visible = false;

    }
    public void rb_common_Change(object sender, EventArgs e)
    {
        try
        {
            // dfcr.Visible = false;
            //btn_fpsema.Visible = false;
            //btn_fpdep.Visible = false;
            //btn_fpdeg.Visible = false;
            //btn_fpbat.Visible = false;
            lbl_alert.Visible = false;
            //bindBtch();
            //binddeg();
            //binddept();
            //bindsem();
            //bindsec();
            //loadstutype();
            //loadseat();
            //loadtype();
            //loadpaid();
            //loadpaid();
            //loadheaderandledger();
            //ledgerload();
            rb_hori.Checked = true;
            rb_hori.Enabled = false;
            rb_vert.Enabled = false;
            rbstudhed.Enabled = false;
            rbstudled.Enabled = false;
            loadcolumnorder();
            pagelnk.Visible = true;
            //  div1.Visible = false;
            // FpSpread1.Visible = false;
            // rptprint.Visible = false;
            // pheaderfilter.Visible = false;
            //   pcolumnorder.Visible = false;
            lblhed.Text = "";
            Button1.Visible = false;
            //dept
            deptcomm.Visible = false;
            deptdetail.Visible = false;

            //chart
            //divchart.Visible = false;
            lblchart.Visible = false;

        }
        catch
        {

        }
    }
    public void rb_hori_Change(object sender, EventArgs e)
    {
        //dfcr.Visible = false;
        //btn_fpsema.Visible = false;
        //btn_fpdep.Visible = false;
        //btn_fpdeg.Visible = false;
        //btn_fpbat.Visible = false;
        loadcolumnorder();
        pagelnk.Visible = true;
        div1.Visible = false;
        FpSpread1.Visible = false;
        rptprint.Visible = false;
        pheaderfilter.Visible = false;
        pcolumnorder.Visible = false;
        lblhed.Text = "";
        Button1.Visible = false;
        //dept
        deptcomm.Visible = false;
        deptdetail.Visible = false;

        //chart
        // divchart.Visible = false;
        lblchart.Visible = false;

    }
    public void rb_vert_Change(object sender, EventArgs e)
    {
        // dfcr.Visible = false;
        //btn_fpsema.Visible = false;
        //btn_fpdep.Visible = false;
        //btn_fpdeg.Visible = false;
        //btn_fpbat.Visible = false;
        loadcolumnorder();
        pagelnk.Visible = false;
        div1.Visible = false;
        FpSpread1.Visible = false;
        rptprint.Visible = false;
        pheaderfilter.Visible = false;
        pcolumnorder.Visible = false;
        lblhed.Text = "";
        Button1.Visible = false;
        //dept
        deptcomm.Visible = false;
        deptdetail.Visible = false;

        //chart
        //divchart.Visible = false;
        lblchart.Visible = false;
    }
    public void rbstudhed_Change(object sender, EventArgs e)
    {
        // dfcr.Visible = false;
        lbl_alert.Visible = false;
        loadcolumnorder();
        div1.Visible = false;
        FpSpread1.Visible = false;
        rptprint.Visible = false;
        pheaderfilter.Visible = false;
        pcolumnorder.Visible = false;
        lblhed.Text = "";
        Button1.Visible = false;
        //dept
        deptcomm.Visible = false;
        deptdetail.Visible = false;

        //chart
        // divchart.Visible = false;
        lblchart.Visible = false;
    }
    public void rbstudled_Change(object sender, EventArgs e)
    {
        //dfcr.Visible = false;
        lbl_alert.Visible = false;
        loadcolumnorder();
        div1.Visible = false;
        FpSpread1.Visible = false;
        rptprint.Visible = false;
        pheaderfilter.Visible = false;
        pcolumnorder.Visible = false;
        lblhed.Text = "";
        Button1.Visible = false;
        //dept
        deptcomm.Visible = false;
        deptdetail.Visible = false;

        //chart
        //divchart.Visible = false;
        lblchart.Visible = false;
    }
    #endregion

    #region others
    protected void rb_others_Change(object sender, EventArgs e)
    {
        fsdailydetail.Visible = false;
        deptfld.Visible = false;
        deptdtfld.Visible = false;
        deptcomm.Visible = false;
        deptdetail.Visible = false;
        otherfld.Visible = true;
        otherdetail.Visible = true;
        //chart
        //divchart.Visible = false;
        lblchart.Visible = false;

        //stud
        divstudwise.Visible = false;
        studwise.Visible = false;
        studwise.Visible = false;
        //ddl stud paid chart
        tdddlbatch.Visible = false;
        tdddldegree.Visible = false;
        tdddldept.Visible = false;
        //
        tdcblbatch.Visible = true;
        tdcbldegree.Visible = true;
        tdcbldept.Visible = true;
    }
    protected void rbstaff_Change(object sender, EventArgs e)
    {
        fsdailydetail.Visible = false;
        FpSpread1.Visible = false;
        div1.Visible = false;
        header.Visible = false;
        pheaderfilter.Visible = false;
        pcolumnorder.Visible = false;
        rptprint.Visible = false;
        lblhed.Visible = false;
        //chart
        // divchart.Visible = false;
        lblchart.Visible = false;
    }
    protected void rbvendor_Change(object sender, EventArgs e)
    {
        fsdailydetail.Visible = false;
        FpSpread1.Visible = false;
        div1.Visible = false;
        header.Visible = false;
        pheaderfilter.Visible = false;
        pcolumnorder.Visible = false;
        rptprint.Visible = false;
        lblhed.Visible = false;
        //chart
        // divchart.Visible = false;
        lblchart.Visible = false;
    }
    protected void rbothers_Change(object sender, EventArgs e)
    {
        fsdailydetail.Visible = false;
        FpSpread1.Visible = false;
        div1.Visible = false;
        header.Visible = false;
        pheaderfilter.Visible = false;
        pcolumnorder.Visible = false;
        rptprint.Visible = false;
        lblhed.Visible = false;
        //chart
        // divchart.Visible = false;
        lblchart.Visible = false;
    }
    #endregion

    protected void rb_total_OnCheckedChanged(object sender, EventArgs e)
    {
        fsdailydetail.Visible = false;
        FpSpread1.Visible = false;
        div1.Visible = false;
        header.Visible = false;
        pheaderfilter.Visible = false;
        pcolumnorder.Visible = false;
        rptprint.Visible = false;
        lblhed.Visible = false;
        //chart
        // divchart.Visible = false;
        lblchart.Visible = false;
        otherdetail.Visible = false;
    }

    #region deptcommonanddetails
    protected void rbdeptcommon_Change(object sender, EventArgs e)
    {
        fsdailydetail.Visible = false;
        deptdetail.Visible = false;
        FpSpread1.Visible = false;
        div1.Visible = false;
        header.Visible = false;
        pheaderfilter.Visible = false;
        rptprint.Visible = false;
        lblhed.Visible = false;
        //chart
        // divchart.Visible = false;
        lblchart.Visible = false;

    }
    protected void rbdeptdetail_Change(object sender, EventArgs e)
    {
        fsdailydetail.Visible = false;
        deptdtfld.Visible = true;
        deptdetail.Visible = true;
        FpSpread1.Visible = false;
        div1.Visible = false;
        header.Visible = false;
        rbdeptyear.Checked = true;
        rbdepthead.Checked = false;
        rbdeptledg.Checked = false;
        pheaderfilter.Visible = false;
        pcolumnorder.Visible = false;
        rptprint.Visible = false;
        lblhed.Visible = false;
        //chart
        // divchart.Visible = false;
        lblchart.Visible = false;
    }
    protected void rbdeptyear_Change(object sender, EventArgs e)
    {
        fsdailydetail.Visible = false;
        FpSpread1.Visible = false;
        div1.Visible = false;
        header.Visible = false;
        pheaderfilter.Visible = false;
        pcolumnorder.Visible = false;
        rptprint.Visible = false;
        lblhed.Visible = false;
        //chart
        // divchart.Visible = false;
        lblchart.Visible = false;
    }
    protected void rbdepthead_Change(object sender, EventArgs e)
    {
        fsdailydetail.Visible = false;
        FpSpread1.Visible = false;
        div1.Visible = false;
        header.Visible = false;
        pheaderfilter.Visible = false;
        pcolumnorder.Visible = false;
        rptprint.Visible = false;
        lblhed.Visible = false;
        //chart
        //divchart.Visible = false;
        lblchart.Visible = false;
    }
    protected void rbdeptledg_Change(object sender, EventArgs e)
    {
        FpSpread1.Visible = false;
        div1.Visible = false;
        header.Visible = false;
        pheaderfilter.Visible = false;
        pcolumnorder.Visible = false;
        rptprint.Visible = false;
        lblhed.Visible = false;
        //chart
        // divchart.Visible = false;
        lblchart.Visible = false;
        fsdailydetail.Visible = false;
    }
    #endregion

    #endregion

    #region btnsearch

    public bool columncount()
    {
        bool colorder = false;
        try
        {

            for (int i = 0; i < cblcolumnorder.Items.Count; i++)
            {
                if (cblcolumnorder.Items[i].Selected == true)
                {
                    colorder = true;
                }
            }
        }
        catch { }
        return colorder;
    }

    #region cellclik columnsordervalues
    public void loadcolumns()
    {
        try
        {
            string linkname = "Studentfeeallot column order settings";
            string columnvalue = "";
            int clsupdate = 0;
            DataSet dscol = new DataSet();
            string selcol = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + collegecode1 + "' ";
            dscol.Clear();
            dscol = d2.select_method_wo_parameter(selcol, "Text");
            if (columncount() == true)
            {
                if (cblcolumnorder.Items.Count > 0)
                {
                    colord.Clear();
                    for (int i = 0; i < cblcolumnorder.Items.Count; i++)
                    {
                        if (cblcolumnorder.Items[i].Selected == true)
                        {
                            colord.Add(Convert.ToString(cblcolumnorder.Items[i].Value));
                            if (columnvalue == "")
                            {
                                columnvalue = Convert.ToString(cblcolumnorder.Items[i].Value);
                            }
                            else
                            {
                                columnvalue = columnvalue + ',' + Convert.ToString(cblcolumnorder.Items[i].Value);
                            }
                        }
                    }
                }
            }
            else if (dscol.Tables.Count > 0 && dscol.Tables[0].Rows.Count > 0)
            {
                colord.Clear();
                for (int col = 0; col < dscol.Tables[0].Rows.Count; col++)
                {
                    string value = Convert.ToString(dscol.Tables[0].Rows[col]["LinkValue"]);
                    string[] valuesplit = value.Split(',');
                    if (valuesplit.Length > 0)
                    {
                        for (int k = 0; k < valuesplit.Length; k++)
                        {
                            colord.Add(Convert.ToString(valuesplit[k]));
                            if (columnvalue == "")
                            {
                                columnvalue = Convert.ToString(valuesplit[k]);
                            }
                            else
                            {
                                columnvalue = columnvalue + ',' + Convert.ToString(valuesplit[k]);
                            }
                        }
                    }
                }

            }
            else
            {
                colord.Clear();
                for (int i = 0; i < cblcolumnorder.Items.Count; i++)
                {
                    cblcolumnorder.Items[i].Selected = true;
                    colord.Add(Convert.ToString(cblcolumnorder.Items[i].Value));
                    if (columnvalue == "")
                    {
                        columnvalue = Convert.ToString(cblcolumnorder.Items[i].Value);
                    }
                    else
                    {
                        columnvalue = columnvalue + ',' + Convert.ToString(cblcolumnorder.Items[i].Value);
                    }
                }
            }
            if (columnvalue != "" && columnvalue != null)
            {
                string clsinsert = " if exists(select * from New_InsSettings where LinkName='" + linkname + "') update New_InsSettings set LinkValue='" + columnvalue + "' where LinkName='" + linkname + "' and user_code='" + usercode + "' and college_code='" + collegecode1 + "' else insert into New_InsSettings (LinkName,LinkValue,user_code,college_code)values('" + linkname + "','" + columnvalue + "','" + usercode + "','" + collegecode1 + "')";
                clsupdate = d2.update_method_wo_parameter(clsinsert, "Text");
            }
            if (clsupdate == 1)
            {
                string sel = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + collegecode1 + "' ";
                DataSet dscolor = new DataSet();
                dscolor.Clear();
                dscolor = d2.select_method_wo_parameter(sel, "Text");
                if (dscolor.Tables.Count > 0)
                {
                    int count = 0;
                    if (dscolor.Tables[0].Rows.Count > 0)
                    {
                        string value = Convert.ToString(dscolor.Tables[0].Rows[0]["LinkValue"]);
                        string[] value1 = value.Split(',');
                        if (value1.Length > 0)
                        {
                            for (int i = 0; i < value1.Length; i++)
                            {
                                string val = value1[i].ToString();
                                for (int k = 0; k < cblcolumnorder.Items.Count; k++)
                                {
                                    if (val == cblcolumnorder.Items[k].Value)
                                    {
                                        cblcolumnorder.Items[k].Selected = true;
                                        count++;
                                    }
                                    if (count == cblcolumnorder.Items.Count)
                                    {
                                        cb_column.Checked = true;
                                    }
                                    else
                                    {
                                        cb_column.Checked = false;
                                    }
                                }
                            }
                        }

                    }
                }
            }
        }
        catch { }
    }
    public void loadledgercolumns(object sender, EventArgs e)
    {
        try
        {
            string linkname = "Studentfeeallot column order settings";
            string columnvalue = "";
            DataSet dscol = new DataSet();
            string selcol = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + collegecode1 + "' ";
            dscol.Clear();
            dscol = d2.select_method_wo_parameter(selcol, "Text");

            if (dscol.Tables.Count > 0)
            {
                if (dscol.Tables[0].Rows.Count > 0)
                {
                    colord.Clear();
                    for (int col = 0; col < dscol.Tables[0].Rows.Count; col++)
                    {
                        string value = Convert.ToString(dscol.Tables[0].Rows[col]["LinkValue"]);
                        string[] valuesplit = value.Split(',');
                        if (valuesplit.Length > 0)
                        {
                            for (int k = 0; k < valuesplit.Length; k++)
                            {
                                colord.Add(Convert.ToString(valuesplit[k]));
                                if (columnvalue == "")
                                {
                                    columnvalue = Convert.ToString(valuesplit[k]);
                                }
                                else
                                {
                                    columnvalue = columnvalue + ',' + Convert.ToString(valuesplit[k]);
                                }
                            }
                        }
                    }
                }

            }

            if (columnvalue != "" && columnvalue != null)
            {
                string clsinsert = " if exists(select * from New_InsSettings where LinkName='" + linkname + "') update New_InsSettings set LinkValue='" + columnvalue + "' where LinkName='" + linkname + "' and user_code='" + usercode + "' and college_code='" + collegecode1 + "' else insert into New_InsSettings (LinkName,LinkValue,user_code,college_code)values('" + linkname + "','" + columnvalue + "','" + usercode + "','" + collegecode1 + "')";
                int clsupdate = d2.update_method_wo_parameter(clsinsert, "Text");
            }

        }
        catch { }
    }
    public void loadbatchcolumns(object sender, EventArgs e)
    {
        try
        {
            string linkname = "Studentfeeallot column order settings";
            string columnvalue = "";
            DataSet dscol = new DataSet();
            string selcol = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + collegecode1 + "' ";
            dscol.Clear();
            dscol = d2.select_method_wo_parameter(selcol, "Text");

            if (dscol.Tables.Count > 0)
            {
                if (dscol.Tables[0].Rows.Count > 0)
                {
                    colord.Clear();
                    for (int col = 0; col < dscol.Tables[0].Rows.Count; col++)
                    {
                        string value = Convert.ToString(dscol.Tables[0].Rows[col]["LinkValue"]);
                        string[] valuesplit = value.Split(',');
                        if (valuesplit.Length > 0)
                        {
                            for (int k = 0; k < valuesplit.Length; k++)
                            {
                                colord.Add(Convert.ToString(valuesplit[k]));
                                if (columnvalue == "")
                                {
                                    columnvalue = Convert.ToString(valuesplit[k]);
                                }
                                else
                                {
                                    columnvalue = columnvalue + ',' + Convert.ToString(valuesplit[k]);
                                }
                            }
                        }
                    }
                }

            }

            if (columnvalue != "" && columnvalue != null)
            {
                string clsinsert = " if exists(select * from New_InsSettings where LinkName='" + linkname + "') update New_InsSettings set LinkValue='" + columnvalue + "' where LinkName='" + linkname + "' and user_code='" + usercode + "' and college_code='" + collegecode1 + "' else insert into New_InsSettings (LinkName,LinkValue,user_code,college_code)values('" + linkname + "','" + columnvalue + "','" + usercode + "','" + collegecode1 + "')";
                int clsupdate = d2.update_method_wo_parameter(clsinsert, "Text");
            }
        }
        catch { }
    }
    public void loaddegreecolumns(object sender, EventArgs e)
    {
        try
        {
            string linkname = "Studentfeeallot column order settings";
            string columnvalue = "";
            DataSet dscol = new DataSet();
            string selcol = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + collegecode1 + "' ";
            dscol.Clear();
            dscol = d2.select_method_wo_parameter(selcol, "Text");

            if (dscol.Tables.Count > 0)
            {
                if (dscol.Tables[0].Rows.Count > 0)
                {
                    colord.Clear();
                    for (int col = 0; col < dscol.Tables[0].Rows.Count; col++)
                    {
                        string value = Convert.ToString(dscol.Tables[0].Rows[col]["LinkValue"]);
                        string[] valuesplit = value.Split(',');
                        if (valuesplit.Length > 0)
                        {
                            for (int k = 0; k < valuesplit.Length; k++)
                            {
                                colord.Add(Convert.ToString(valuesplit[k]));
                                if (columnvalue == "")
                                {
                                    columnvalue = Convert.ToString(valuesplit[k]);
                                }
                                else
                                {
                                    columnvalue = columnvalue + ',' + Convert.ToString(valuesplit[k]);
                                }
                            }
                        }
                    }
                }

            }

            if (columnvalue != "" && columnvalue != null)
            {
                string clsinsert = " if exists(select * from New_InsSettings where LinkName='" + linkname + "') update New_InsSettings set LinkValue='" + columnvalue + "' where LinkName='" + linkname + "' and user_code='" + usercode + "' and college_code='" + collegecode1 + "' else insert into New_InsSettings (LinkName,LinkValue,user_code,college_code)values('" + linkname + "','" + columnvalue + "','" + usercode + "','" + collegecode1 + "')";
                int clsupdate = d2.update_method_wo_parameter(clsinsert, "Text");
            }
        }
        catch { }
    }
    public void loaddeptcolumns(object sender, EventArgs e)
    {
        try
        {
            string linkname = "Studentfeeallot column order settings";
            string columnvalue = "";
            DataSet dscol = new DataSet();
            string selcol = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + collegecode1 + "' ";
            dscol.Clear();
            dscol = d2.select_method_wo_parameter(selcol, "Text");

            if (dscol.Tables.Count > 0)
            {
                if (dscol.Tables[0].Rows.Count > 0)
                {
                    colord.Clear();
                    for (int col = 0; col < dscol.Tables[0].Rows.Count; col++)
                    {
                        string value = Convert.ToString(dscol.Tables[0].Rows[col]["LinkValue"]);
                        string[] valuesplit = value.Split(',');
                        if (valuesplit.Length > 0)
                        {
                            for (int k = 0; k < valuesplit.Length; k++)
                            {
                                colord.Add(Convert.ToString(valuesplit[k]));
                                if (columnvalue == "")
                                {
                                    columnvalue = Convert.ToString(valuesplit[k]);
                                }
                                else
                                {
                                    columnvalue = columnvalue + ',' + Convert.ToString(valuesplit[k]);
                                }
                            }
                        }
                    }
                }

            }

            if (columnvalue != "" && columnvalue != null)
            {
                string clsinsert = " if exists(select * from New_InsSettings where LinkName='" + linkname + "') update New_InsSettings set LinkValue='" + columnvalue + "' where LinkName='" + linkname + "' and user_code='" + usercode + "' and college_code='" + collegecode1 + "' else insert into New_InsSettings (LinkName,LinkValue,user_code,college_code)values('" + linkname + "','" + columnvalue + "','" + usercode + "','" + collegecode1 + "')";
                int clsupdate = d2.update_method_wo_parameter(clsinsert, "Text");
            }
        }
        catch { }
    }
    public void loadsemcolumns(object sender, EventArgs e)
    {
        try
        {
            string linkname = "Studentfeeallot column order settings";
            string columnvalue = "";
            DataSet dscol = new DataSet();
            string selcol = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + collegecode1 + "' ";
            dscol.Clear();
            dscol = d2.select_method_wo_parameter(selcol, "Text");

            if (dscol.Tables.Count > 0)
            {
                if (dscol.Tables[0].Rows.Count > 0)
                {
                    colord.Clear();
                    for (int col = 0; col < dscol.Tables[0].Rows.Count; col++)
                    {
                        string value = Convert.ToString(dscol.Tables[0].Rows[col]["LinkValue"]);
                        string[] valuesplit = value.Split(',');
                        if (valuesplit.Length > 0)
                        {
                            for (int k = 0; k < valuesplit.Length; k++)
                            {
                                colord.Add(Convert.ToString(valuesplit[k]));
                                if (columnvalue == "")
                                {
                                    columnvalue = Convert.ToString(valuesplit[k]);
                                }
                                else
                                {
                                    columnvalue = columnvalue + ',' + Convert.ToString(valuesplit[k]);
                                }
                            }
                        }
                    }
                }

            }

            if (columnvalue != "" && columnvalue != null)
            {
                string clsinsert = " if exists(select * from New_InsSettings where LinkName='" + linkname + "') update New_InsSettings set LinkValue='" + columnvalue + "' where LinkName='" + linkname + "' and user_code='" + usercode + "' and college_code='" + collegecode1 + "' else insert into New_InsSettings (LinkName,LinkValue,user_code,college_code)values('" + linkname + "','" + columnvalue + "','" + usercode + "','" + collegecode1 + "')";
                int clsupdate = d2.update_method_wo_parameter(clsinsert, "Text");
            }
        }
        catch { }
    }
    public void loadstudcolumns(object sender, EventArgs e)
    {
        try
        {
            string linkname = "Studentfeeallot column order settings";
            string columnvalue = "";
            DataSet dscol = new DataSet();
            string selcol = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + collegecode1 + "' ";
            dscol.Clear();
            dscol = d2.select_method_wo_parameter(selcol, "Text");

            if (dscol.Tables.Count > 0)
            {
                if (dscol.Tables[0].Rows.Count > 0)
                {
                    colord.Clear();
                    for (int col = 0; col < dscol.Tables[0].Rows.Count; col++)
                    {
                        string value = Convert.ToString(dscol.Tables[0].Rows[col]["LinkValue"]);
                        string[] valuesplit = value.Split(',');
                        if (valuesplit.Length > 0)
                        {
                            for (int k = 0; k < valuesplit.Length; k++)
                            {
                                colord.Add(Convert.ToString(valuesplit[k]));
                                if (columnvalue == "")
                                {
                                    columnvalue = Convert.ToString(valuesplit[k]);
                                }
                                else
                                {
                                    columnvalue = columnvalue + ',' + Convert.ToString(valuesplit[k]);
                                }
                            }
                        }
                    }
                }

            }

            if (columnvalue != "" && columnvalue != null)
            {
                string clsinsert = " if exists(select * from New_InsSettings where LinkName='" + linkname + "') update New_InsSettings set LinkValue='" + columnvalue + "' where LinkName='" + linkname + "' and user_code='" + usercode + "' and college_code='" + collegecode1 + "' else insert into New_InsSettings (LinkName,LinkValue,user_code,college_code)values('" + linkname + "','" + columnvalue + "','" + usercode + "','" + collegecode1 + "')";
                int clsupdate = d2.update_method_wo_parameter(clsinsert, "Text");
            }
        }
        catch { }
    }
    #endregion

    #region btnaction
    protected void btnsearch_Click(object sender, EventArgs e)
    {
        try
        {
            #region values
            ds.Clear();
            ds = loaddataset();
            if (rb_header.Checked == true)
            {
                headerChartValues();
            }
            else if (rb_ledger.Checked == true)
            {
                ledgerChartValues();
            }
            else if (rb_batch.Checked == true)
            {
                batchChartValues();
            }
            else if (rb_degree.Checked == true)
            {
                degreeChartValues();
            }
            else if (rb_dept.Checked == true)
            {
                deptChartValues();
            }
            else if (rb_sem.Checked == true)
            {
                semChartValues();
            }
            else if (rb_studentwise.Checked == true)
            {
                if (chkpaid.Checked == true)
                {
                    if (rb_paid.Checked == true)
                    {
                        if (txt_roll.Text == "")
                        {
                            studPaidChartValues();
                        }
                        else
                        {
                            studChartValues();
                        }
                    }
                    else if (tobepaid.Checked == true)
                    {
                        if (txt_roll.Text == "")
                        {
                            studPaidChartValues();
                        }
                        else
                        {
                            studChartValues();
                        }
                    }
                }
                else if (chkdailydetail.Checked == true)
                {
                    if (chk_datewise.Checked == true)
                    {
                        if (txt_roll.Text == "")
                        {
                            studDailyDetailChart();
                        }
                        else
                        {
                            studDailystudChartValues();
                        }
                    }
                    else
                    {
                        if (txt_roll.Text == "")
                        {
                            studDailywithoutDateDetailChart();
                        }
                        else
                        {
                            studDailystudChartValues();
                        }
                    }
                }
                else
                {
                    //studvalues(sender, e);               
                    studChartValues();
                }
            }
            else if (rb_others.Checked == true)
            {
                if (rbstaff.Checked == true)
                {
                    staffChartValues();
                }
                else if (rbvendor.Checked == true)
                {
                    vendorChartValues(sender, e);
                }
                else if (rbothers.Checked == true)
                {
                    vendorChartValues(sender, e);
                }
                // othersvalues(sender, e);
            }
            else if (rb_total.Checked == true)
            {
                totalChartValues();
            }
            #endregion
        }
        catch
        { }
    }
    #endregion

    #region btn loaddataset
    public DataSet loaddataset()
    {
        DataSet allds = new DataSet();
        try
        {
            #region getvalue
            string batch1 = "";
            string degcourseid = "";
            string deptdegcode = "";
            string sem = "";
            string sec = "";
            string stud = "";
            string seatype = "";
            string studtype = "";
            string paid = "";
            string headervalue = "";
            string ledgervalue = "";
            string Finyearvalue = "";
            DataView dvhead = new DataView();
            DataSet dscol = new DataSet();

            if (chkpaid.Checked == true)
            {
                batch1 = Convert.ToString(ddlbatch.SelectedItem.Value);
                degcourseid = Convert.ToString(ddldegree.SelectedItem.Value);
                deptdegcode = Convert.ToString(ddldept.SelectedItem.Value);
            }
            else
            {
                batch1 = Convert.ToString(getCblSelectedValue(cbl_batch));
                degcourseid = Convert.ToString(getCblSelectedValue(cbl_degree));
                deptdegcode = Convert.ToString(getCblSelectedValue(cbl_dept));
            }
            sem = Convert.ToString(getCblSelectedValue(cbl_sem));
            sec = Convert.ToString(getCblSelectedValue(cbl_sect));
            stud = Convert.ToString(getCblSelectedValue(cbl_stud));
            seatype = Convert.ToString(getCblSelectedValue(cbl_seat));
            studtype = Convert.ToString(getCblSelectedValue(cbl_studtype));
            paid = Convert.ToString(getCblSelectedValue(chkl_paid));
            headervalue = Convert.ToString(getCblSelectedValue(chkl_studhed));
            ledgervalue = Convert.ToString(getCblSelectedValue(chkl_studled));
            Finyearvalue = Convert.ToString(getCblSelectedValue(chklsfyear));


            string cc = "";
            string debar = "";
            string disc = "";
            if (cblinclude.Items.Count > 0)
            {
                for (int i = 0; i < cblinclude.Items.Count; i++)
                {
                    if (cblinclude.Items[i].Selected == true)
                    {
                        if (cblinclude.Items[i].Value == "1")
                        {
                            cc = " and r.cc=0";
                        }
                        if (cblinclude.Items[i].Value == "2")
                        {
                            debar = " and r.Exam_Flag<>'debar'";
                        }
                        if (cblinclude.Items[i].Value == "3")
                        {
                            disc = "";
                        }
                    }
                    else
                    {
                        disc = " and r.DelFlag=0";
                    }
                }
            }
            else
            {
                disc = " and r.DelFlag=0";
            }


            int datewise = 0;
            string fromdate = "";
            string todate = "";
            if (chk_datewise.Checked == true)
            {
                datewise = 1;
                if (datewise == 1)
                {
                    fromdate = txt_fromdate.Text;
                    todate = txt_todate.Text;
                    if (fromdate != "" && todate != "")
                    {
                        string[] frdate = fromdate.Split('/');
                        if (frdate.Length == 3)
                        {
                            fromdate = frdate[1].ToString() + "/" + frdate[0].ToString() + "/" + frdate[2].ToString();
                        }
                        string[] tdate = todate.Split('/');
                        if (tdate.Length == 3)
                        {
                            todate = tdate[1].ToString() + "/" + tdate[0].ToString() + "/" + tdate[2].ToString();
                        }
                    }
                }
            }


            #endregion

            #region rbheaderqry
            string selqry = "";
            if (rb_header.Checked == true)
            {

                // ds.Clear();
                // ds = d2.selectheader(collegecode1, batch1, deptdegcode, sem, sec, stud, seatype, studtype, headervalue, ledgervalue, datewise, fromdate, todate);
                #region rbheaderquery
                ////selqry = "SELECT A.HeaderFK,HeaderName,SUM(FeeAmount) as Allot,SUM(DeductAmout) as consustion ,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as total,SUM(PaidAmount) as paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount  FROM FT_FeeAllot A,Applyn P,Degree G,Course C,Department D,FM_HeaderMaster H WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code and A.HeaderFK = H.HeaderPK AND P.IsConfirm = 1 AND Admission_Status = 0 and G.college_code ='" + collegecode1 + "'";
                ////if (batch1 != "")
                ////{
                ////    selqry = selqry + "and p.Batch_Year in ('" + batch1 + "')";
                ////}

                ////if (deptdegcode != "")
                ////{
                ////    selqry = selqry + " and g.Degree_Code in ('" + deptdegcode + "')";
                ////}

                ////if (sem != "")
                ////{
                ////    selqry = selqry + "and A.FeeCategory in ('" + sem + "')";
                ////}
                ////if (stud != "")
                ////{
                ////    // selqry = selqry + "and p.mode in ('" + stud + "')";
                ////}
                ////if (seatype != "")
                ////{
                ////    // selqry = selqry + "and p.seattype in ('" + seatype + "')";
                ////}
                ////if (studtype != "")
                ////{
                ////    //  selqry = selqry + " and p.Stud_Type in ('" + studtype + "')";
                ////}
                ////if (headervalue != "")
                ////{
                ////    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                ////}
                ////if (ledgervalue != "")
                ////{
                ////    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                ////}
                ////if (datewise == 1)
                ////{
                ////    if (fromdate != "" && todate != "")
                ////    {
                ////        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                ////    }
                ////}
                ////selqry = selqry + "GROUP BY A.HeaderFK,HeaderName";
                //selqry = selqry + " SELECT A.HeaderFK,HeaderName,SUM(FeeAmount) as Allot ,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM  FT_FeeAllot A,Applyn P,Degree G,Course C,Department D,FM_HeaderMaster H WHERE A.App_No = P.app_no and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and  g.college_code = d.college_code and p.degree_code = g.degree_code and A.HeaderFK = H.HeaderPK AND P.IsConfirm = 1 AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "'";
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    // selqry = selqry + " and   ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    //selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    // selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headervalue != "")
                //{
                //    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                //}
                //if (ledgervalue != "")
                //{
                //    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY A.HeaderFK,HeaderName";

                ////selqry = selqry + " SELECT A.HeaderFK,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C,Department D WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 0 and G.college_code ='" + collegecode1 + "'";
                ////if (batch1 != "")
                ////{
                ////    selqry = selqry + "and p.Batch_Year in ('" + batch1 + "')";
                ////}
                ////if (deptdegcode != "")
                ////{
                ////    selqry = selqry + " and g.Degree_Code in ('" + deptdegcode + "')";
                ////}
                ////if (sem != "")
                ////{
                ////    selqry = selqry + "and A.FeeCategory in ('" + sem + "')";
                ////}
                ////if (stud != "")
                ////{
                ////    //  selqry = selqry + "and p.mode in ('" + stud + "')";
                ////}
                ////if (seatype != "")
                ////{
                ////    // selqry = selqry + "and p.seattype in ('" + seatype + "')";
                ////}
                ////if (studtype != "")
                ////{
                ////    // selqry = selqry + " and p.Stud_Type in ('" + studtype + "')";
                ////}
                ////if (headervalue != "")
                ////{
                ////    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                ////}
                ////if (ledgervalue != "")
                ////{
                ////    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                ////}
                ////if (datewise == 1)
                ////{
                ////    if (fromdate != "" && todate != "")
                ////    {
                ////        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                ////    }
                ////}
                ////selqry = selqry + "GROUP BY A.HeaderFK,PayMode";
                //selqry = selqry + " SELECT A.HeaderFK,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C,Department D WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code  AND P.IsConfirm = 1 AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "'";
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    // selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    // selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    //selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headervalue != "")
                //{
                //    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                //}
                //if (ledgervalue != "")
                //{
                //    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY A.HeaderFK,PayMode";

                //selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Degree G,Course C,Department D WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no  and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code and em.App_No = a.App_No   AND P.IsConfirm = 1  AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "' ";
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    // selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    // selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    //  selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    // selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headervalue != "")
                //{
                //    selqry = selqry + " and Ex.HeaderFK in('" + headervalue + "')";
                //}
                //if (ledgervalue != "")
                //{
                //    selqry = selqry + "  and Ex.LedgerFK in('" + ledgervalue + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY A.HeaderFK";
                //selqry = selqry + "  select headerfk,SUM(debit)as Paid from FT_FinDailyTransaction d,Registration r,degree g,course c where d.App_No = r.App_No  and r.degree_code = g.Degree_Code  and g.Course_Id = c.Course_Id and g.college_code ='" + collegecode1 + "' and r.Batch_Year in ('" + batch1 + "')  and  g.Degree_Code in ('" + deptdegcode + "') and d.FeeCategory in ('" + sem + "') and HeaderFK in ('" + headervalue + "') and LedgerFK in('" + ledgervalue + "')   group by HeaderFK ";
                #endregion
                #region newquery
                selqry = "SELECT A.HeaderFK,SUM(FeeAmount) as Allot ,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM  FT_FeeAllot A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.App_No =a.App_No and p.app_no =r.App_No  AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "') ";
                if (batch1 != "")
                {
                    selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                }
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (sec != "")
                {
                    // selqry = selqry + " and   ISNULL( r.Sections,'') in ('" + sec + "','')";
                }
                if (stud != "")
                {
                    //selqry = selqry + "and p.mode in ('" + stud + "')";
                }
                if (seatype != "")
                {
                    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                }
                if (studtype != "")
                {
                    // selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                }
                if (headervalue != "")
                {
                    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                }
                if (ledgervalue != "")
                {
                    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                }
                //if (chkinclude.Checked == true)
                //{
                //    selqry = selqry + " and r.DelFlag=0 ";
                //}
                if (cc != "")
                {
                    selqry = selqry + cc;
                }
                if (debar != "")
                {
                    selqry = selqry + debar;
                }
                if (disc != "")
                {
                    selqry = selqry + disc;
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                    }
                }
                selqry = selqry + "GROUP BY A.HeaderFK";
                selqry = selqry + " SELECT A.HeaderFK,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.App_No =a.App_No and r.App_No = p.app_no  AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "') ";
                if (batch1 != "")
                {
                    selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                }
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (sec != "")
                {
                    // selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                }
                if (stud != "")
                {
                    // selqry = selqry + "and p.mode in ('" + stud + "')";
                }
                if (seatype != "")
                {
                    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                }
                if (studtype != "")
                {
                    //selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                }
                if (headervalue != "")
                {
                    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                }
                if (ledgervalue != "")
                {
                    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                }
                //if (chkinclude.Checked == true)
                //{
                //    selqry = selqry + " and r.DelFlag=0 ";
                //}
                if (cc != "")
                {
                    selqry = selqry + cc;
                }
                if (debar != "")
                {
                    selqry = selqry + debar;
                }
                if (disc != "")
                {
                    selqry = selqry + disc;
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                    }
                }
                selqry = selqry + "GROUP BY A.HeaderFK,PayMode";
                selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Registration r WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no and r.App_No =a.App_No and r.App_No =p.app_no and em.App_No = a.App_No   AND P.IsConfirm = 1  AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "') ";
                if (batch1 != "")
                {
                    selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                }
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headervalue != "")
                {
                    selqry = selqry + " and Ex.HeaderFK in('" + headervalue + "')";
                }
                if (ledgervalue != "")
                {
                    selqry = selqry + "  and Ex.LedgerFK in('" + ledgervalue + "')";
                }
                //if (chkinclude.Checked == true)
                //{
                //    selqry = selqry + " and r.DelFlag=0 ";
                //}
                if (cc != "")
                {
                    selqry = selqry + cc;
                }
                if (debar != "")
                {
                    selqry = selqry + debar;
                }
                if (disc != "")
                {
                    selqry = selqry + disc;
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                    }
                }
                selqry = selqry + "GROUP BY A.HeaderFK";
                selqry = selqry + "  select headerfk,SUM(debit)as Paid from FT_FinDailyTransaction d,Registration r where d.App_No = r.App_No and r.college_code ='" + collegecode1 + "' and r.Batch_Year in ('" + batch1 + "')  and  r.Degree_Code in ('" + deptdegcode + "') and d.FeeCategory in ('" + sem + "') and HeaderFK in ('" + headervalue + "') and LedgerFK in('" + ledgervalue + "') and d.FinYearFK in ('" + Finyearvalue + "')  ";
                //if (chkinclude.Checked == true)
                //{
                //    selqry = selqry + " and r.DelFlag=0 ";
                //}
                if (cc != "")
                {
                    selqry = selqry + cc;
                }
                if (debar != "")
                {
                    selqry = selqry + debar;
                }
                if (disc != "")
                {
                    selqry = selqry + disc;
                }
                selqry = selqry + " group by HeaderFK ";

                selqry = selqry + "  select HeaderName,headerpk from FM_HeaderMaster where CollegeCode='" + collegecode1 + "'";
                #endregion
            }
            #endregion

            #region rbledger
            else if (rb_ledger.Checked == true)
            {
                ds.Clear();
                //ds = d2.selectledger(collegecode1, batch1, deptdegcode, sem, sec, stud, seatype, studtype, headervalue, ledgervalue, datewise, fromdate, todate);
                #region rbledgerquery
                ////selqry = "SELECT A.HeaderFK,HeaderName,LedgerName,LedgerFK, SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Degree G,Course C,Department D,FM_HeaderMaster H,FM_LedgerMaster L WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code and A.HeaderFK = H.HeaderPK AND A.LedgerFK = L.LedgerPK AND H.HeaderPK = L.HeaderFK AND P.IsConfirm = 1 AND Admission_Status = 0  and G.college_code ='" + collegecode + "'";
                ////if (batch1 != "")
                ////{
                ////    selqry = selqry + "and p.Batch_Year in ('" + batch1 + "')";
                ////}

                ////if (deptdegcode != "")
                ////{
                ////    selqry = selqry + " and g.Degree_Code in ('" + deptdegcode + "')";
                ////}

                ////if (sem != "")
                ////{
                ////    selqry = selqry + "and A.FeeCategory in ('" + sem + "')";
                ////}
                ////if (stud != "")
                ////{
                ////    selqry = selqry + "and p.mode in ('" + stud + "')";
                ////}
                ////if (seatype != "")
                ////{
                ////    selqry = selqry + "and p.seattype in ('" + seatype + "')";
                ////}
                ////if (studtype != "")
                ////{
                ////    selqry = selqry + " and p.Stud_Type in ('" + studtype + "')";
                ////}
                ////if (headervalue != "")
                ////{
                ////    selqry = selqry + " and a.HeaderFK in ('" + headervalue + "')";
                ////}
                ////if (ledgervalue != "")
                ////{
                ////    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                ////}
                ////if (datewise == 1)
                ////{
                ////    if (fromdate != "" && todate != "")
                ////    {
                ////        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                ////    }
                ////}

                ////selqry = selqry + " GROUP BY A.HeaderFK,HeaderName,LedgerFK,LedgerName";
                //selqry = selqry + "  SELECT A.HeaderFK,HeaderName,LedgerName,LedgerFK, SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Degree G,Course C,Department D,FM_HeaderMaster H,FM_LedgerMaster L WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and p.degree_code = g.degree_code and g.college_code = d.college_code and A.HeaderFK = H.HeaderPK AND A.LedgerFK = L.LedgerPK AND H.HeaderPK = L.HeaderFK AND P.IsConfirm = 1 AND Admission_Status = 1   and G.college_code ='" + collegecode1 + "'";
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    //selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    //selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    // selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headervalue != "")
                //{
                //    selqry = selqry + " and a.HeaderFK in ('" + headervalue + "')";
                //}
                //if (ledgervalue != "")
                //{
                //    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                //    }
                //}

                //selqry = selqry + "GROUP BY A.HeaderFK,HeaderName,LedgerFK,LedgerName";

                ////selqry = selqry + " SELECT HeaderName,PayMode,LedgerFK,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C,Department D,FM_HeaderMaster H WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code and A.HeaderFK = H.HeaderPK AND P.IsConfirm = 1 AND Admission_Status = 0  and G.college_code ='" + collegecode + "'";
                ////if (batch1 != "")
                ////{
                ////    selqry = selqry + "and p.Batch_Year in ('" + batch1 + "')";
                ////}
                ////if (deptdegcode != "")
                ////{
                ////    selqry = selqry + " and g.Degree_Code in ('" + deptdegcode + "')";
                ////}
                ////if (sem != "")
                ////{
                ////    selqry = selqry + "and A.FeeCategory in ('" + sem + "')";
                ////}
                ////if (stud != "")
                ////{
                ////    selqry = selqry + "and p.mode in ('" + stud + "')";
                ////}
                ////if (seatype != "")
                ////{
                ////    selqry = selqry + "and p.seattype in ('" + seatype + "')";
                ////}
                ////if (studtype != "")
                ////{
                ////    selqry = selqry + " and p.Stud_Type in ('" + studtype + "')";
                ////}
                ////if (headervalue != "")
                ////{
                ////    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                ////}
                ////if (ledgervalue != "")
                ////{
                ////    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                ////}
                ////if (datewise == 1)
                ////{
                ////    if (fromdate != "" && todate != "")
                ////    {
                ////        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                ////    }
                ////}
                ////selqry = selqry + "GROUP BY A.HeaderFK,HeaderName,PayMode,LedgerFK";
                //selqry = selqry + " SELECT PayMode,LedgerFK,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C,Department D WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code  AND P.IsConfirm = 1 AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "'";
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    //selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    // selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    //selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    // selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headervalue != "")
                //{
                //    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                //}
                //if (ledgervalue != "")
                //{
                //    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY A.HeaderFK,PayMode,LedgerFK";

                //selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,h.LedgerPK from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Degree G,Course C,Department D,FM_LedgerMaster H,FM_HeaderMaster fh WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no and  g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code  and h.LedgerPK =ex.LedgerFK and ex.HeaderFK=h.HeaderFK and h.HeaderFK=fh.HeaderPK and em.App_No = a.App_No   AND P.IsConfirm = 1  and a.LedgerFK=h.LedgerPK   AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "' ";
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    // selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    //  selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    //  selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    // selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headervalue != "")
                //{
                //    selqry = selqry + " and Ex.HeaderFK in('" + headervalue + "')";
                //}
                //if (ledgervalue != "")
                //{
                //    selqry = selqry + "  and Ex.LedgerFK in('" + ledgervalue + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY A.HeaderFK ,h.LedgerPK";
                #endregion
                #region newquery
                selqry = "  SELECT A.HeaderFK,LedgerFK, SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.App_No=p.app_no AND P.IsConfirm = 1 AND Admission_Status = 1   and P.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "') ";
                if (batch1 != "")
                {
                    selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                }
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headervalue != "")
                {
                    selqry = selqry + " and a.HeaderFK in ('" + headervalue + "')";
                }
                if (ledgervalue != "")
                {
                    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                }
                //if (chkinclude.Checked == true)
                //{
                //    selqry = selqry + " and r.DelFlag=0 ";
                //}
                if (cc != "")
                {
                    selqry = selqry + cc;
                }
                if (debar != "")
                {
                    selqry = selqry + debar;
                }
                if (disc != "")
                {
                    selqry = selqry + disc;
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                    }
                }

                selqry = selqry + "GROUP BY A.HeaderFK,LedgerFK";
                selqry = selqry + "  SELECT PayMode,LedgerFK,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.app_no=p.app_no  AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "') ";
                if (batch1 != "")
                {
                    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                }
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headervalue != "")
                {
                    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                }
                if (ledgervalue != "")
                {
                    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                }
                //if (chkinclude.Checked == true)
                //{
                //    selqry = selqry + " and r.DelFlag=0 ";
                //}
                if (cc != "")
                {
                    selqry = selqry + cc;
                }
                if (debar != "")
                {
                    selqry = selqry + debar;
                }
                if (disc != "")
                {
                    selqry = selqry + disc;
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                    }
                }
                selqry = selqry + "GROUP BY A.HeaderFK,PayMode,LedgerFK";
                selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,A.LedgerFK from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no and em.App_No = a.App_No   AND P.IsConfirm = 1  AND Admission_Status = 1 and P.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                if (batch1 != "")
                {
                    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                }
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  p.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headervalue != "")
                {
                    selqry = selqry + " and Ex.HeaderFK in('" + headervalue + "')";
                }
                if (ledgervalue != "")
                {
                    selqry = selqry + "  and Ex.LedgerFK in('" + ledgervalue + "')";
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                    }
                }
                selqry = selqry + "GROUP BY A.HeaderFK ,a.LedgerFK";
                selqry = selqry + "  select HeaderFK,LedgerPK,HeaderName,LedgerName from FM_HeaderMaster h,FM_LedgerMaster l where l.HeaderFK =h.HeaderPK and h.CollegeCode ='" + collegecode1 + "' order by isnull(l.priority,1000),l.ledgerName asc";
                #endregion

            }
            #endregion

            #region rbbatchqry
            else if (rb_batch.Checked == true)
            {
                //ds.Clear();
                //  ds = d2.selectbatchyr(collegecode1, batch1, deptdegcode, sem, sec, stud, seatype, studtype, headervalue, ledgervalue, datewise, fromdate, todate);
                #region batchqry
                //// selqry = "SELECT batch_year,SUM(FeeAmount)as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Degree G,Course C,Department D WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 0  and G.college_code ='" + collegecode + "'";
                ////if (batch1 != "")
                ////{
                ////    selqry = selqry + "and p.Batch_Year in ('" + batch1 + "')";
                ////}

                ////if (deptdegcode != "")
                ////{
                ////    selqry = selqry + " and g.Degree_Code in ('" + deptdegcode + "')";
                ////}

                ////if (sem != "")
                ////{
                ////    selqry = selqry + "and A.FeeCategory in ('" + sem + "')";
                ////}
                ////if (stud != "")
                ////{
                ////    selqry = selqry + "and p.mode in ('" + stud + "')";
                ////}
                ////if (seatype != "")
                ////{
                ////    selqry = selqry + "and p.seattype in ('" + seatype + "')";
                ////}
                ////if (studtype != "")
                ////{
                ////    selqry = selqry + " and p.Stud_Type in ('" + studtype + "')";
                ////}
                ////if (headervalue != "")
                ////{
                ////    selqry = selqry + " and a.HeaderFK in ('" + headervalue + "')";
                ////}
                ////if (ledgervalue != "")
                ////{
                ////    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                ////}
                ////if (datewise == 1)
                ////{
                ////    if (fromdate != "" && todate != "")
                ////    {
                ////        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                ////    }
                ////}
                ////selqry = selqry + "GROUP BY batch_year";

                //selqry = selqry + " SELECT p.batch_year,SUM(FeeAmount)as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Degree G,Course C,Department D WHERE A.App_No = P.app_no and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and p.degree_code = g.degree_code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "'";
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    //  selqry = selqry + " and   ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    // selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    // selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headervalue != "")
                //{
                //    selqry = selqry + " and a.HeaderFK in ('" + headervalue + "')";
                //}
                //if (ledgervalue != "")
                //{
                //    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY p.batch_year ";

                ////selqry = selqry + " SELECT batch_year,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C,Department D WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 0 and G.college_code ='" + collegecode + "'";
                ////if (batch1 != "")
                ////{
                ////    selqry = selqry + "and p.Batch_Year in ('" + batch1 + "')";
                ////}
                ////if (deptdegcode != "")
                ////{
                ////    selqry = selqry + " and g.Degree_Code in ('" + deptdegcode + "')";
                ////}
                ////if (sem != "")
                ////{
                ////    selqry = selqry + "and A.FeeCategory in ('" + sem + "')";
                ////}
                ////if (stud != "")
                ////{
                ////    selqry = selqry + "and p.mode in ('" + stud + "')";
                ////}
                ////if (seatype != "")
                ////{
                ////    selqry = selqry + "and p.seattype in ('" + seatype + "')";
                ////}
                ////if (studtype != "")
                ////{
                ////    selqry = selqry + " and p.Stud_Type in ('" + studtype + "')";
                ////}
                ////if (headervalue != "")
                ////{
                ////    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                ////}
                ////if (ledgervalue != "")
                ////{
                ////    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                ////}
                ////if (datewise == 1)
                ////{
                ////    if (fromdate != "" && todate != "")
                ////    {
                ////        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                ////    }
                ////}
                ////selqry = selqry + " GROUP BY PayMode,batch_year";
                //selqry = selqry + " SELECT p.batch_year ,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C,Department D WHERE A.App_No = P.app_no  AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "'";
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    // selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    // selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    // selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headervalue != "")
                //{
                //    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                //}
                //if (ledgervalue != "")
                //{
                //    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY p.batch_year,PayMode";

                //selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,h.LedgerPK,p.Batch_Year from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Degree G,Course C,Department D,FM_LedgerMaster H,FM_HeaderMaster fh WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no  and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code  and h.LedgerPK =ex.LedgerFK and ex.HeaderFK=h.HeaderFK and h.HeaderFK=fh.HeaderPK and em.App_No = a.App_No   AND P.IsConfirm = 1  and a.LedgerFK=h.LedgerPK   AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "' ";
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    //selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    //selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    //selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headervalue != "")
                //{
                //    selqry = selqry + " and Ex.HeaderFK in('" + headervalue + "')";
                //}
                //if (ledgervalue != "")
                //{
                //    selqry = selqry + "  and Ex.LedgerFK in('" + ledgervalue + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY A.HeaderFK ,h.LedgerPK,p.Batch_Year";
                #endregion

                #region new query
                selqry = selqry + " SELECT p.batch_year,SUM(FeeAmount)as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.App_No=P.App_No AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                if (batch1 != "")
                {
                    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                }
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headervalue != "")
                {
                    selqry = selqry + " and a.HeaderFK in ('" + headervalue + "')";
                }
                if (ledgervalue != "")
                {
                    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                }
                //if (chkinclude.Checked == true)
                //{
                //    selqry = selqry + " and r.DelFlag=0 ";
                //}
                if (cc != "")
                {
                    selqry = selqry + cc;
                }
                if (debar != "")
                {
                    selqry = selqry + debar;
                }
                if (disc != "")
                {
                    selqry = selqry + disc;
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                    }
                }
                selqry = selqry + "GROUP BY p.batch_year ";
                selqry = selqry + "SELECT p.batch_year ,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.App_No=p.app_no  AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "') ";
                if (batch1 != "")
                {
                    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                }
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headervalue != "")
                {
                    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                }
                if (ledgervalue != "")
                {
                    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                }
                //if (chkinclude.Checked == true)
                //{
                //    selqry = selqry + " and r.DelFlag=0 ";
                //}
                if (cc != "")
                {
                    selqry = selqry + cc;
                }
                if (debar != "")
                {
                    selqry = selqry + debar;
                }
                if (disc != "")
                {
                    selqry = selqry + disc;
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                    }
                }
                selqry = selqry + "GROUP BY p.batch_year,PayMode";
                selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,p.Batch_Year from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Registration r WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no and em.App_No = a.App_No and r.App_No=p.app_no AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')  ";
                if (batch1 != "")
                {
                    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                }
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headervalue != "")
                {
                    selqry = selqry + " and Ex.HeaderFK in('" + headervalue + "')";
                }
                if (ledgervalue != "")
                {
                    selqry = selqry + "  and Ex.LedgerFK in('" + ledgervalue + "')";
                }
                //if (chkinclude.Checked == true)
                //{
                //    selqry = selqry + " and r.DelFlag=0 ";
                //}
                if (cc != "")
                {
                    selqry = selqry + cc;
                }
                if (debar != "")
                {
                    selqry = selqry + debar;
                }
                if (disc != "")
                {
                    selqry = selqry + disc;
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                    }
                }
                selqry = selqry + "GROUP BY A.HeaderFK ,p.Batch_Year";
                #endregion
            }
            #endregion

            #region rbdegreeqry
            else if (rb_degree.Checked == true)
            {
                // ds.Clear();
                // ds = d2.selectdegree(collegecode1, batch1, deptdegcode, degcourseid, sem, sec, stud, seatype, studtype, headervalue, ledgervalue, datewise, fromdate, todate);


                #region newquery
                selqry = selqry + "  SELECT Course_Name DegreeName,G.Course_Id,SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Degree G,Course C WHERE A.App_No = P.app_no  and g.Course_Id = c.Course_Id and g.college_code = c.college_code  and p.degree_code = g.degree_code  AND P.IsConfirm = 1 AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                if (degcourseid != "")
                {
                    selqry = selqry + " and c.Course_Id in ('" + degcourseid + "')";
                }
                if (batch1 != "")
                {
                    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                }
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headervalue != "")
                {
                    selqry = selqry + " and a.HeaderFK in ('" + headervalue + "')";
                }
                if (ledgervalue != "")
                {
                    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                    }
                }
                selqry = selqry + "GROUP BY G.Course_Id,Course_Name  ";
                selqry = selqry + "  SELECT Course_Name,G.Course_Id,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code  AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and g.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                if (degcourseid != "")
                {
                    selqry = selqry + " and c.Course_Id in ('" + degcourseid + "')";
                }

                if (batch1 != "")
                {
                    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                }
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headervalue != "")
                {
                    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                }
                if (ledgervalue != "")
                {
                    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                    }
                }
                selqry = selqry + "GROUP BY G.Course_Id,Course_Name,PayMode ";

                selqry = selqry + "  select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,a.LedgerFK,p.Batch_Year,C.Course_Id from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Degree G,Course C WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no  and g.Course_Id = c.Course_Id and g.college_code = c.college_code  and em.App_No = a.App_No   AND P.IsConfirm = 1  AND Admission_Status = 1 AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                if (batch1 != "")
                {
                    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                }
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headervalue != "")
                {
                    selqry = selqry + " and Ex.HeaderFK in('" + headervalue + "')";
                }
                if (ledgervalue != "")
                {
                    selqry = selqry + "  and Ex.LedgerFK in('" + ledgervalue + "')";
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                    }
                }
                selqry = selqry + "GROUP BY A.HeaderFK ,A.LedgerFK,p.Batch_Year ,C.Course_Id";
                #endregion
            }
            #endregion

            #region rbdeptqry
            else if (rb_dept.Checked == true)
            {
                string headorledg = "";
                string headorledg1 = "";
                string feecatg = "";
                string textval = "";
                string textval1 = "";
                string feecatg1 = "";
                if (rbdeptdetail.Checked == true)
                {
                    if (rbdeptyear.Checked == true)
                    {
                        textval = " ,TextVal as TextVal ";
                        textval1 = " ,TextVal";
                        feecatg = ",a.FeeCategory as FeeCategory";
                        feecatg1 = " ,a.FeeCategory";
                    }
                    else if (rbdepthead.Checked == true)
                    {
                        headorledg = " ,A.HeaderFK as headerorledger";
                        headorledg1 = " ,A.HeaderFK";
                        textval = " ,TextVal as TextVal ";
                        textval1 = " ,TextVal";
                        feecatg = ",a.FeeCategory as FeeCategory";
                        feecatg1 = " ,a.FeeCategory";
                    }
                    else if (rbdeptledg.Checked == true)
                    {
                        headorledg = " ,A.LedgerFK as headerorledger";
                        headorledg1 = ",A.LedgerFK";
                        textval = " ,TextVal as TextVal ";
                        textval1 = " ,TextVal";
                        feecatg = ",a.FeeCategory as FeeCategory";
                        feecatg1 = " ,a.FeeCategory";
                    }
                }
                #region deptquery
                ////selqry = "SELECT Course_Name,Dept_Name,G.Dept_Code, SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Degree G,Course C,Department D WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 0   and G.college_code ='" + collegecode + "'";

                ////if (batch1 != "")
                ////{
                ////    selqry = selqry + "and p.Batch_Year in ('" + batch1 + "')";
                ////}

                ////if (deptdegcode != "")
                ////{
                ////    selqry = selqry + " and g.Degree_Code in ('" + deptdegcode + "')";
                ////}

                ////if (sem != "")
                ////{
                ////    selqry = selqry + "and A.FeeCategory in ('" + sem + "')";
                ////}
                ////if (stud != "")
                ////{
                ////    selqry = selqry + "and p.mode in ('" + stud + "')";
                ////}
                ////if (seatype != "")
                ////{
                ////    selqry = selqry + "and p.seattype in ('" + seatype + "')";
                ////}
                ////if (studtype != "")
                ////{
                ////    selqry = selqry + " and p.Stud_Type in ('" + studtype + "')";
                ////}
                ////if (headervalue != "")
                ////{
                ////    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                ////}
                ////if (ledgervalue != "")
                ////{
                ////    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                ////}
                ////if (datewise == 1)
                ////{
                ////    if (fromdate != "" && todate != "")
                ////    {
                ////        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                ////    }
                ////}
                ////selqry = selqry + "GROUP BY G.Course_Id,Course_Name,G.Dept_Code,Dept_Name ";

                //selqry = selqry + "  SELECT r.degree_code, SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.App_No=a.App_No and r.App_No =p.app_no  AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";

                //if (batch1 != "")
                //{
                //    selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    //  selqry = selqry + " and   ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    // selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    // selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headervalue != "")
                //{
                //    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                //}
                //if (ledgervalue != "")
                //{
                //    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY r.degree_code ";

                ////selqry = selqry + " SELECT Course_Name,Dept_Name,G.Dept_Code,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C,Department D WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 0  and G.college_code ='" + collegecode + "'";

                ////if (batch1 != "")
                ////{
                ////    selqry = selqry + "and p.Batch_Year in ('" + batch1 + "')";
                ////}
                ////if (deptdegcode != "")
                ////{
                ////    selqry = selqry + " and g.Degree_Code in ('" + deptdegcode + "')";
                ////}
                ////if (sem != "")
                ////{
                ////    selqry = selqry + "and A.FeeCategory in ('" + sem + "')";
                ////}
                ////if (stud != "")
                ////{
                ////    selqry = selqry + "and p.mode in ('" + stud + "')";
                ////}
                ////if (seatype != "")
                ////{
                ////    selqry = selqry + "and p.seattype in ('" + seatype + "')";
                ////}
                ////if (studtype != "")
                ////{
                ////    selqry = selqry + " and p.Stud_Type in ('" + studtype + "')";
                ////}
                ////if (headervalue != "")
                ////{
                ////    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                ////}
                ////if (ledgervalue != "")
                ////{
                ////    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                ////}
                ////if (datewise == 1)
                ////{
                ////    if (fromdate != "" && todate != "")
                ////    {
                ////        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                ////    }
                ////}
                ////selqry = selqry + "  GROUP BY G.Course_Id,Course_Name,G.Dept_Code,Dept_Name,PayMode";
                //selqry = selqry + " SELECT r.degree_code,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.App_No=p.app_no and r.App_No=a.App_No  AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";


                //if (batch1 != "")
                //{
                //    selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    // selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    // selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    // selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headervalue != "")
                //{
                //    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                //}
                //if (ledgervalue != "")
                //{
                //    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY PayMode,r.degree_code ";

                //selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,A.LedgerfK,r.Degree_Code from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Registration r WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no and em.App_No = a.App_No   AND P.IsConfirm = 1  AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    // selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    // selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    //selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headervalue != "")
                //{
                //    selqry = selqry + " and Ex.HeaderFK in('" + headervalue + "')";
                //}
                //if (ledgervalue != "")
                //{
                //    selqry = selqry + "  and Ex.LedgerFK in('" + ledgervalue + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                //    }
                //}
                //selqry = selqry + " GROUP BY A.HeaderFK,A.LedgerfK,r.Degree_Code";
                //selqry = selqry + " select d.Degree_Code,c.Course_Name,dt.Dept_Name from Degree d,Department dt,Course c where d.Dept_Code =dt.Dept_Code and d.Course_Id =c.Course_Id and c.type ='" + ddlstream.SelectedItem.Text + "'";
                #endregion
                #region newqry

                if (rbdeptcommon.Checked == true)
                {
                    #region deptcommonqry
                    selqry = selqry + "    SELECT r.degree_code , SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Registration r,Degree d,Course C,TextValTable T WHERE A.App_No = P.app_no and r.App_No=a.App_No and d.Degree_Code =r.degree_code and d.Course_Id =c.Course_Id and r.App_No =p.app_no and a.FeeCategory=t.TextCode   AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";

                    if (batch1 != "")
                    {
                        selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                    }
                    if (deptdegcode != "")
                    {
                        selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                    }
                    if (sem != "")
                    {
                        selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                    }
                    if (headervalue != "")
                    {
                        selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                    }
                    if (ledgervalue != "")
                    {
                        selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                    }
                    //if (chkinclude.Checked == true)
                    //{
                    //    selqry = selqry + " and r.DelFlag=0 ";
                    //}
                    if (cc != "")
                    {
                        selqry = selqry + cc;
                    }
                    if (debar != "")
                    {
                        selqry = selqry + debar;
                    }
                    if (disc != "")
                    {
                        selqry = selqry + disc;
                    }
                    if (datewise == 1)
                    {
                        if (fromdate != "" && todate != "")
                        {
                            selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                        }
                    }
                    selqry = selqry + "GROUP BY r.degree_code ";
                    selqry = selqry + " SELECT r.degree_code,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Registration r,Degree d,Course C ,TextValTable T WHERE A.App_No = P.app_no and r.App_No=p.app_no and r.App_No=a.App_No and d.Degree_Code =r.degree_code and d.Course_Id =c.Course_Id  and a.FeeCategory=t.TextCode  AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";

                    if (batch1 != "")
                    {
                        selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                    }
                    if (deptdegcode != "")
                    {
                        selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                    }
                    if (sem != "")
                    {
                        selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                    }
                    if (headervalue != "")
                    {
                        selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                    }
                    if (ledgervalue != "")
                    {
                        selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                    }
                    //if (chkinclude.Checked == true)
                    //{
                    //    selqry = selqry + " and r.DelFlag=0 ";
                    //}
                    if (cc != "")
                    {
                        selqry = selqry + cc;
                    }
                    if (debar != "")
                    {
                        selqry = selqry + debar;
                    }
                    if (disc != "")
                    {
                        selqry = selqry + disc;
                    }
                    if (datewise == 1)
                    {
                        if (fromdate != "" && todate != "")
                        {
                            selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                        }
                    }
                    selqry = selqry + "GROUP BY PayMode,r.degree_code ";

                    selqry = selqry + " SELECT  r.degree_code,SUM(FeeAmount) as Allot ,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance FROM FT_FeeAllot A,applyn  r,Registration P where  a.App_No = r.App_No and p.App_No =r.app_no and p.App_No = a.App_No  and isconfirm ='1' and admission_status ='1' and A.FinYearFK in ('" + Finyearvalue + "')";

                    if (batch1 != "")
                    {
                        selqry = selqry + " and P.Batch_Year in ('" + batch1 + "')";
                    }
                    if (deptdegcode != "")
                    {
                        selqry = selqry + "  and  P.Degree_Code in ('" + deptdegcode + "')";
                    }
                    if (sem != "")
                    {
                        selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                    }
                    if (sec != "")
                    {
                        //  selqry = selqry + " and   ISNULL( p.Sections,'') in ('" + sec + "','')";
                    }
                    if (headervalue != "")
                    {
                        selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                    }
                    if (ledgervalue != "")
                    {
                        selqry = selqry + " and LedgerFK in ('" + ledgervalue + "')";
                    }
                    //if (chkinclude.Checked == true)
                    //{
                    //    selqry = selqry + " and P.DelFlag=0 ";
                    //}
                    if (cc != "")
                    {
                        selqry = selqry + cc;
                    }
                    if (debar != "")
                    {
                        selqry = selqry + debar;
                    }
                    if (disc != "")
                    {
                        selqry = selqry + "  and p.DelFlag=0";
                    }
                    if (rbdepthead.Checked == true)
                    {
                        selqry = selqry + " GROUP BY  r.degree_code ";
                    }
                    else
                    {
                        selqry = selqry + " GROUP BY r.degree_code ";
                    }

                    selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,TextVal,A.HeaderFK,A.LedgerfK,r.Degree_Code from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Registration r,Degree d,Course C ,TextValTable T WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no and em.App_No = a.App_No and d.Degree_Code =r.degree_code and c.Course_Id =d.Course_Id and a.FeeCategory=t.TextCode   AND P.IsConfirm = 1  AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                    if (batch1 != "")
                    {
                        selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                    }
                    if (deptdegcode != "")
                    {
                        selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                    }
                    if (sem != "")
                    {
                        selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                    }
                    if (headervalue != "")
                    {
                        selqry = selqry + " and Ex.HeaderFK in('" + headervalue + "')";
                    }
                    if (ledgervalue != "")
                    {
                        selqry = selqry + "  and Ex.LedgerFK in('" + ledgervalue + "')";
                    }
                    //if (chkinclude.Checked == true)
                    //{
                    //    selqry = selqry + " and r.DelFlag=0 ";
                    //}
                    if (cc != "")
                    {
                        selqry = selqry + cc;
                    }
                    if (debar != "")
                    {
                        selqry = selqry + debar;
                    }
                    if (disc != "")
                    {
                        selqry = selqry + disc;
                    }
                    if (datewise == 1)
                    {
                        if (fromdate != "" && todate != "")
                        {
                            selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                        }
                    }
                    selqry = selqry + " GROUP BY A.HeaderFK,A.LedgerfK,r.Degree_Code,TextVal";
                    selqry = selqry + " select d.Degree_Code,c.Course_Name,dt.Dept_Name from Degree d,Department dt,Course c where d.Dept_Code =dt.Dept_Code and d.Course_Id =c.Course_Id";
                    if (ddlstream.Enabled == true)
                    {
                        selqry = selqry + " and c.type ='" + ddlstream.SelectedItem.Text + "'";
                    }
                    #endregion
                }
                else if (rbdeptdetail.Checked == true)
                {
                    #region deptdetails
                    selqry = " SELECT r.degree_code " + feecatg + " " + textval + " FROM FT_FeeAllot A,Applyn P,Registration r,Degree d,Course C,TextValTable T WHERE A.App_No = P.app_no and r.App_No=a.App_No and d.Degree_Code =r.degree_code and d.Course_Id =c.Course_Id and r.App_No =p.app_no and a.FeeCategory=t.TextCode   AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "') and r.cc=0 and r.Exam_Flag<>'debar'";

                    if (batch1 != "")
                    {
                        selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                    }
                    if (deptdegcode != "")
                    {
                        selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                    }
                    if (sem != "")
                    {
                        selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                    }
                    if (headervalue != "")
                    {
                        selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                    }
                    if (ledgervalue != "")
                    {
                        selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                    }
                    if (chkinclude.Checked == true)
                    {
                        selqry = selqry + " and r.DelFlag=0 ";
                    }
                    if (datewise == 1)
                    {
                        if (fromdate != "" && todate != "")
                        {
                            selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                        }
                    }
                    selqry = selqry + "GROUP BY r.degree_code " + feecatg1 + " " + textval1 + " ";
                    //allot
                    selqry = selqry + "  SELECT r.degree_code" + textval + "" + headorledg + "" + feecatg + ", SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Registration r,Degree d,Course C,TextValTable T WHERE A.App_No = P.app_no and r.App_No=a.App_No and d.Degree_Code =r.degree_code and d.Course_Id =c.Course_Id and r.App_No =p.app_no and a.FeeCategory=t.TextCode   AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "') and r.cc=0 and r.Exam_Flag<>'debar'";

                    if (batch1 != "")
                    {
                        selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                    }
                    if (deptdegcode != "")
                    {
                        selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                    }
                    if (sem != "")
                    {
                        selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                    }
                    if (headervalue != "")
                    {
                        selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                    }
                    if (ledgervalue != "")
                    {
                        selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                    }
                    if (chkinclude.Checked == true)
                    {
                        selqry = selqry + " and r.DelFlag=0 ";
                    }
                    if (datewise == 1)
                    {
                        if (fromdate != "" && todate != "")
                        {
                            selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                        }
                    }
                    selqry = selqry + "GROUP BY r.degree_code" + textval1 + "" + headorledg1 + "" + feecatg1 + "";
                    //paymode
                    selqry = selqry + " SELECT r.degree_code  ,PayMode,SUM(Debit) as total" + feecatg + " FROM FT_FinDailyTransaction A,Applyn P,Registration r,Degree d,Course C ,TextValTable T WHERE A.App_No = P.app_no and r.App_No=p.app_no and r.App_No=a.App_No and d.Degree_Code =r.degree_code and d.Course_Id =c.Course_Id  and a.FeeCategory=t.TextCode  AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "') and r.cc=0 and r.Exam_Flag<>'debar'";

                    if (batch1 != "")
                    {
                        selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                    }
                    if (deptdegcode != "")
                    {
                        selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                    }
                    if (sem != "")
                    {
                        selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                    }
                    if (headervalue != "")
                    {
                        selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                    }
                    if (ledgervalue != "")
                    {
                        selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                    }
                    if (chkinclude.Checked == true)
                    {
                        selqry = selqry + " and r.DelFlag=0 ";
                    }
                    if (datewise == 1)
                    {
                        if (fromdate != "" && todate != "")
                        {
                            selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                        }
                    }
                    selqry = selqry + "GROUP BY PayMode,r.degree_code" + feecatg1 + "";
                    //excess
                    selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount" + textval + "" + headorledg + "" + feecatg + ",r.Degree_Code from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Registration r,Degree d,Course C ,TextValTable T WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no and em.App_No = a.App_No and d.Degree_Code =r.degree_code and c.Course_Id =d.Course_Id and a.FeeCategory=t.TextCode   AND P.IsConfirm = 1  AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "') and r.cc=0 and r.Exam_Flag<>'debar'";
                    if (batch1 != "")
                    {
                        selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                    }
                    if (deptdegcode != "")
                    {
                        selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                    }
                    if (sem != "")
                    {
                        selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                    }
                    if (headervalue != "")
                    {
                        selqry = selqry + " and Ex.HeaderFK in('" + headervalue + "')";
                    }
                    if (ledgervalue != "")
                    {
                        selqry = selqry + "  and Ex.LedgerFK in('" + ledgervalue + "')";
                    }
                    if (chkinclude.Checked == true)
                    {
                        selqry = selqry + " and r.DelFlag=0 ";
                    }
                    if (datewise == 1)
                    {
                        if (fromdate != "" && todate != "")
                        {
                            selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                        }
                    }
                    selqry = selqry + " GROUP BY r.Degree_Code" + textval1 + "" + headorledg1 + "" + feecatg1 + "";
                    //degree and dept
                    selqry = selqry + " select d.Degree_Code,c.Course_Name,dt.Dept_Name from Degree d,Department dt,Course c where d.Dept_Code =dt.Dept_Code and d.Course_Id =c.Course_Id";
                    //stud no count
                    selqry = selqry + " select distinct COUNT (a.app_no) as countval " + feecatg1 + ",r.degree_code from FT_FinDailyTransaction a,Registration r where r.App_No=a.App_No and  isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1'and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "') and r.cc=0 and r.Exam_Flag<>'debar'";
                    if (batch1 != "")
                    {
                        selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                    }
                    if (deptdegcode != "")
                    {
                        selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                    }
                    if (sem != "")
                    {
                        selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                    }
                    if (headervalue != "")
                    {
                        selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                    }
                    if (ledgervalue != "")
                    {
                        selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                    }
                    if (chkinclude.Checked == true)
                    {
                        selqry = selqry + " and r.DelFlag=0 ";
                    }
                    if (datewise == 1)
                    {
                        if (fromdate != "" && todate != "")
                        {
                            selqry = selqry + "  AND TransDate between '" + fromdate + "' and '" + todate + "'";
                        }
                    }
                    selqry = selqry + " group by r.degree_code " + feecatg1 + "";
                    //if (ddlstream.Enabled == true)
                    //{
                    //    selqry = selqry + " and c.type ='" + ddlstream.SelectedItem.Text + "'";
                    //}
                    #endregion
                }
                #endregion
            }
            #endregion

            #region rbsemqry
            else if (rb_sem.Checked == true)
            {
                // ds.Clear();
                //  ds = d2.selectsem(collegecode1, batch1, deptdegcode, sem, sec, stud, seatype, studtype, headervalue, ledgervalue, datewise, fromdate, todate);
                #region rbsemquery
                ////selqry = "SELECT TextVal,SUM(FeeAmount) as allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Degree G,Course C,Department D,TextValTable T WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and p.degree_code = g.degree_code and g.college_code = d.college_code AND A.FeeCategory = T.TextCode AND P.IsConfirm = 1 AND Admission_Status = 0  and G.college_code ='" + collegecode + "'";

                ////if (batch1 != "")
                ////{
                ////    selqry = selqry + "and p.Batch_Year in ('" + batch1 + "')";
                ////}

                ////if (deptdegcode != "")
                ////{
                ////    selqry = selqry + " and g.Degree_Code in ('" + deptdegcode + "')";
                ////}

                ////if (sem != "")
                ////{
                ////    selqry = selqry + "and A.FeeCategory in ('" + sem + "')";
                ////}
                ////if (stud != "")
                ////{
                ////    selqry = selqry + "and p.mode in ('" + stud + "')";
                ////}
                ////if (seatype != "")
                ////{
                ////    selqry = selqry + "and p.seattype in ('" + seatype + "')";
                ////}
                ////if (studtype != "")
                ////{
                ////    selqry = selqry + " and p.Stud_Type in ('" + studtype + "')";
                ////}
                ////if (headervalue != "")
                ////{
                ////    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                ////}
                ////if (ledgervalue != "")
                ////{
                ////    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                ////}
                ////if (datewise == 1)
                ////{
                ////    if (fromdate != "" && todate != "")
                ////    {
                ////        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                ////    }
                ////}
                ////selqry = selqry + "GROUP BY TextVal ";

                //selqry = selqry + "  SELECT TextVal,SUM(FeeAmount) as allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,TextValTable T WHERE A.App_No = P.app_no  AND P.IsConfirm = 1 AND Admission_Status = 1 AND A.FeeCategory = T.TextCode and P.college_code ='" + collegecode1 + "'";

                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  P.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    // selqry = selqry + " and   ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    // selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    //selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headervalue != "")
                //{
                //    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                //}
                //if (ledgervalue != "")
                //{
                //    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY TextVal";

                ////selqry = selqry + " SELECT TextVal,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C,Department D,TextValTable T WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 0 AND A.FeeCategory = T.TextCode and G.college_code ='" + collegecode + "'";

                ////if (batch1 != "")
                ////{
                ////    selqry = selqry + "and p.Batch_Year in ('" + batch1 + "')";
                ////}
                ////if (deptdegcode != "")
                ////{
                ////    selqry = selqry + " and g.Degree_Code in ('" + deptdegcode + "')";
                ////}
                ////if (sem != "")
                ////{
                ////    selqry = selqry + "and A.FeeCategory in ('" + sem + "')";
                ////}
                ////if (stud != "")
                ////{
                ////    selqry = selqry + "and p.mode in ('" + stud + "')";
                ////}
                ////if (seatype != "")
                ////{
                ////    selqry = selqry + "and p.seattype in ('" + seatype + "')";
                ////}
                ////if (studtype != "")
                ////{
                ////    selqry = selqry + " and p.Stud_Type in ('" + studtype + "')";
                ////}
                ////if (headervalue != "")
                ////{
                ////    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                ////}
                ////if (ledgervalue != "")
                ////{
                ////    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                ////}
                ////if (datewise == 1)
                ////{
                ////    if (fromdate != "" && todate != "")
                ////    {
                ////        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                ////    }
                ////}
                ////selqry = selqry + "  GROUP BY TextVal, PayMode";
                //selqry = selqry + " SELECT TextVal,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C,Department D,TextValTable T WHERE A.App_No = P.app_no  AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 1 AND A.FeeCategory = T.TextCode and g.college_code ='" + collegecode1 + "'";


                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    //selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    // selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    // selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headervalue != "")
                //{
                //    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                //}
                //if (ledgervalue != "")
                //{
                //    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY TextVal,PayMode";

                //selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,h.LedgerPK,p.Batch_Year,C.Course_Id,d.Dept_Code,A.FeeCategory from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Degree G,Course C,Department D,FM_LedgerMaster H,FM_HeaderMaster fh WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no  and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code  and h.LedgerPK =ex.LedgerFK and ex.HeaderFK=h.HeaderFK and h.HeaderFK=fh.HeaderPK and em.App_No = a.App_No   AND P.IsConfirm = 1  and a.LedgerFK=h.LedgerPK   AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "' ";
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    // selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    // selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    // selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headervalue != "")
                //{
                //    selqry = selqry + " and Ex.HeaderFK in('" + headervalue + "')";
                //}
                //if (ledgervalue != "")
                //{
                //    selqry = selqry + "  and Ex.LedgerFK in('" + ledgervalue + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                //    }
                //}
                //selqry = selqry + " GROUP BY A.HeaderFK ,h.LedgerPK,p.Batch_Year ,C.Course_Id,d.Dept_Code,A.FeeCategory";
                #endregion

                #region newquery
                selqry = selqry + " SELECT TextVal,SUM(FeeAmount) as allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,TextValTable T WHERE A.App_No = P.app_no  AND P.IsConfirm = 1 AND Admission_Status = 1 AND A.FeeCategory = T.TextCode and P.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                if (batch1 != "")
                {
                    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                }
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  P.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headervalue != "")
                {
                    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                }
                if (ledgervalue != "")
                {
                    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                    }
                }
                selqry = selqry + " GROUP BY TextVal ";
                selqry = selqry + " SELECT TextVal,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Registration R,TextValTable T WHERE A.App_No = P.app_no and r.App_No=A.App_No and r.App_No=p.app_no  AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' AND A.FeeCategory = T.TextCode and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "') ";
                if (batch1 != "")
                {
                    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                }
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headervalue != "")
                {
                    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                }
                if (ledgervalue != "")
                {
                    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                }
                //if (chkinclude.Checked == true)
                //{
                //    selqry = selqry + " and r.DelFlag=0 ";
                //}
                if (cc != "")
                {
                    selqry = selqry + cc;
                }
                if (debar != "")
                {
                    selqry = selqry + debar;
                }
                if (disc != "")
                {
                    selqry = selqry + disc;
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                    }
                }
                selqry = selqry + "GROUP BY TextVal,PayMode";
                selqry = selqry + "  select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,A.LedgerFK,p.Batch_Year,A.FeeCategory from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Registration r WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no and r.App_No=p.app_no and r.App_No=A.App_No and em.App_No = a.App_No   AND P.IsConfirm = 1   AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                if (batch1 != "")
                {
                    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                }
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headervalue != "")
                {
                    selqry = selqry + " and Ex.HeaderFK in('" + headervalue + "')";
                }
                if (ledgervalue != "")
                {
                    selqry = selqry + "  and Ex.LedgerFK in('" + ledgervalue + "')";
                }
                //if (chkinclude.Checked == true)
                //{
                //    selqry = selqry + " and r.DelFlag=0 ";
                //}
                if (cc != "")
                {
                    selqry = selqry + cc;
                }
                if (debar != "")
                {
                    selqry = selqry + debar;
                }
                if (disc != "")
                {
                    selqry = selqry + disc;
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                    }
                }
                selqry = selqry + " GROUP BY A.HeaderFK ,A.LedgerfK,p.Batch_Year ,A.FeeCategory";

                #endregion
            }
            #endregion

            #region rbstudqry
            else if (rb_studentwise.Checked == true)
            {
                bool headval = false;
                bool student = false;
                string headerandledger = "";
                string appno = "";
                string rollno = txt_roll.Text.ToString();
                if (Convert.ToInt32(rbl_rollno.SelectedItem.Value) == 0)
                {
                    appno = d2.GetFunction(" select App_No from Registration where Roll_No='" + rollno + "'");
                }
                if (Convert.ToInt32(rbl_rollno.SelectedItem.Value) == 1)
                {
                    appno = d2.GetFunction(" select App_No from Registration where reg_no='" + rollno + "'");
                }
                if (Convert.ToInt32(rbl_rollno.SelectedItem.Value) == 2)
                {
                    appno = d2.GetFunction(" select App_No from Registration where Roll_admit='" + rollno + "'");
                }
                if (Convert.ToInt32(rbl_rollno.SelectedItem.Value) == 3)
                {
                    appno = d2.GetFunction(" select app_no from applyn where app_formno='" + rollno + "'");
                }

                if (chkdailydetail.Checked == true)
                {
                    if (txt_roll.Text == "")
                    {
                        #region text empty
                        selqry = "   select CONVERT(varchar(20),TransDate,103) as TransDate ,SUM(debit) as debit   from FT_FinDailyTransaction ft,Registration r,applyn p where ft.App_No=p.app_no and r.App_No=ft.App_No and r.App_No=p.app_no AND P.IsConfirm = 1 AND Admission_Status = 1  and r.college_code ='" + collegecode1 + "' and ft.FinYearFK in ('" + Finyearvalue + "')";
                        if (batch1 != "")
                        {
                            selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                        }
                        if (deptdegcode != "")
                        {
                            selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                        }
                        if (sem != "")
                        {
                            selqry = selqry + " and ft.FeeCategory in ('" + sem + "')";
                        }
                        if (headervalue != "")
                        {
                            selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                        }
                        if (ledgervalue != "")
                        {
                            selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                        }
                        //if (chkinclude.Checked == true)
                        //{
                        //    selqry = selqry + " and r.DelFlag=0 ";
                        //}
                        if (cc != "")
                        {
                            selqry = selqry + cc;
                        }
                        if (debar != "")
                        {
                            selqry = selqry + debar;
                        }
                        if (disc != "")
                        {
                            selqry = selqry + disc;
                        }
                        if (datewise == 1)
                        {
                            if (fromdate != "" && todate != "")
                            {
                                selqry = selqry + "  AND  ft.TransDate between '" + fromdate + "' and '" + todate + "'";
                            }
                        }
                        selqry = selqry + " group by TransDate ";
                        selqry = selqry + "  select SUM(debit) as debit,CONVERT(varchar(20),TransDate,103) as TransDate ,case when PayMode=1 then 'Cash' when PayMode=2 then 'Cheque' when PayMode=3 then 'DD' when PayMode=4 then 'Challan' when PayMode=5 then 'Online' end paymode  from FT_FinDailyTransaction ft,Registration r,applyn p where ft.App_No=p.app_no and r.App_No=ft.App_No and r.App_No=p.app_no AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and ft.FinYearFK in ('" + Finyearvalue + "')";
                        if (batch1 != "")
                        {
                            selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                        }
                        if (deptdegcode != "")
                        {
                            selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                        }
                        if (sem != "")
                        {
                            selqry = selqry + " and ft.FeeCategory in ('" + sem + "')";
                        }
                        if (headervalue != "")
                        {
                            selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                        }
                        if (ledgervalue != "")
                        {
                            selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                        }
                        //if (chkinclude.Checked == true)
                        //{
                        //    selqry = selqry + " and r.DelFlag=0 ";
                        //}
                        if (cc != "")
                        {
                            selqry = selqry + cc;
                        }
                        if (debar != "")
                        {
                            selqry = selqry + debar;
                        }
                        if (disc != "")
                        {
                            selqry = selqry + disc;
                        }
                        if (datewise == 1)
                        {
                            if (fromdate != "" && todate != "")
                            {
                                selqry = selqry + "  AND  ft.TransDate between '" + fromdate + "' and '" + todate + "'";
                            }
                        }
                        selqry = selqry + "group by TransDate,PayMode order by paymode";
                        selqry = selqry + " select SUM(debit) as debit,r.Current_Semester ,ft.App_No,TransCode,CONVERT(varchar(20),TransDate,103) as TransDate ,ft.FeeCategory,case when PayMode=1 then 'Cash' when PayMode=2 then 'Cheque' when PayMode=3 then 'DD' when PayMode=4 then 'Challan' when PayMode=5 then 'Online' end paymode,r.Stud_Name,r.Roll_No,r.Reg_No,r.degree_code  from FT_FinDailyTransaction ft,Registration r,applyn p where ft.App_No=p.app_no and r.App_No=ft.App_No and r.App_No=p.app_no AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and ft.FinYearFK in ('" + Finyearvalue + "') ";
                        if (batch1 != "")
                        {
                            selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                        }
                        if (deptdegcode != "")
                        {
                            selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                        }
                        if (sem != "")
                        {
                            selqry = selqry + " and ft.FeeCategory in ('" + sem + "')";
                        }
                        if (headervalue != "")
                        {
                            selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                        }
                        if (ledgervalue != "")
                        {
                            selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                        }
                        //if (chkinclude.Checked == true)
                        //{
                        //    selqry = selqry + " and r.DelFlag=0 ";
                        //}
                        if (cc != "")
                        {
                            selqry = selqry + cc;
                        }
                        if (debar != "")
                        {
                            selqry = selqry + debar;
                        }
                        if (disc != "")
                        {
                            selqry = selqry + disc;
                        }
                        if (datewise == 1)
                        {
                            if (fromdate != "" && todate != "")
                            {
                                selqry = selqry + "  AND  ft.TransDate between '" + fromdate + "' and '" + todate + "'";
                            }
                        }
                        selqry = selqry + "group by ft.App_No,TransDate,TransCode ,PayMode,r.Stud_Name,r.Roll_No,r.Reg_No,r.degree_code,ft.FeeCategory,r.Current_Semester order by paymode";
                        selqry = selqry + "  select SUM(debit) as debit  ,case when PayMode=1 then 'Cash' when PayMode=2 then 'Cheque' when PayMode=3 then 'DD' when PayMode=4 then 'Challan' when PayMode=5 then 'Online' end paymode from FT_FinDailyTransaction ft,Registration r,applyn p where ft.App_No=p.app_no and r.App_No=ft.App_No and r.App_No=p.app_no AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and ft.FinYearFK in ('" + Finyearvalue + "') ";
                        if (batch1 != "")
                        {
                            selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                        }
                        if (deptdegcode != "")
                        {
                            selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                        }
                        if (sem != "")
                        {
                            selqry = selqry + " and ft.FeeCategory in ('" + sem + "')";
                        }
                        if (headervalue != "")
                        {
                            selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                        }
                        if (ledgervalue != "")
                        {
                            selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                        }
                        //if (chkinclude.Checked == true)
                        //{
                        //    selqry = selqry + " and r.DelFlag=0 ";
                        //}
                        if (cc != "")
                        {
                            selqry = selqry + cc;
                        }
                        if (debar != "")
                        {
                            selqry = selqry + debar;
                        }
                        if (disc != "")
                        {
                            selqry = selqry + disc;
                        }
                        if (datewise == 1)
                        {
                            if (fromdate != "" && todate != "")
                            {
                                selqry = selqry + "  AND  ft.TransDate between '" + fromdate + "' and '" + todate + "'";
                            }
                        }
                        selqry = selqry + " group by PayMode order by paymode";
                        //selqry = selqry + " select d.Degree_Code,(c.Course_Name +'-'+ dt.Dept_Name) as degreename from Degree d,Department dt,Course c where d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and d.college_code ='" + collegecode1 + "'";
                        //selqry = selqry + " SELECT  PayMode,A.App_No,SUM(Debit) as total,A.FeeCategory  FROM FT_FinDailyTransaction A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.App_No =p.app_no and A.App_No =r.App_No  AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                        //if (batch1 != "")
                        //{
                        //    selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                        //}
                        //if (deptdegcode != "")
                        //{
                        //    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                        //}
                        //if (sem != "")
                        //{
                        //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                        //}

                        //if (headervalue != "")
                        //{
                        //    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                        //}
                        //if (ledgervalue != "")
                        //{
                        //    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                        //}
                        //if (datewise == 1)
                        //{
                        //    if (fromdate != "" && todate != "")
                        //    {
                        //        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                        //    }
                        //}
                        //selqry = selqry + "GROUP BY A.App_No,PayMode,A.FeeCategory " + headerandledger + "";
                        //only paymode
                        selqry = selqry + "  select distinct case when PayMode=1 then 'Cash' when PayMode=2 then 'Cheque' when PayMode=3 then 'DD' when PayMode=4 then 'Challan' when PayMode=5 then 'Online' end paymode from FT_FinDailyTransaction ft,Registration r,applyn p where ft.App_No=p.app_no and r.App_No=ft.App_No and r.App_No=p.app_no AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and ft.FinYearFK in ('" + Finyearvalue + "')";
                        if (batch1 != "")
                        {
                            selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                        }
                        if (deptdegcode != "")
                        {
                            selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                        }
                        if (sem != "")
                        {
                            selqry = selqry + " and ft.FeeCategory in ('" + sem + "')";
                        }
                        if (headervalue != "")
                        {
                            selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                        }
                        if (ledgervalue != "")
                        {
                            selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                        }
                        //if (chkinclude.Checked == true)
                        //{
                        //    selqry = selqry + " and r.DelFlag=0 ";
                        //}
                        if (cc != "")
                        {
                            selqry = selqry + cc;
                        }
                        if (debar != "")
                        {
                            selqry = selqry + debar;
                        }
                        if (disc != "")
                        {
                            selqry = selqry + disc;
                        }
                        if (datewise == 1)
                        {
                            if (fromdate != "" && todate != "")
                            {
                                selqry = selqry + "  AND  ft.TransDate between '" + fromdate + "' and '" + todate + "'";
                            }
                        }
                        selqry = selqry + " group by PayMode order by paymode";
                        #endregion
                    }
                    else
                    {
                        selqry = selqry + " SELECT R.app_no,Roll_No,Reg_No,Roll_Admit,R.Stud_Name,r.Degree_Code,a.FeeCategory , SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Registration R WHERE A.App_No = P.app_no AND P.app_no = R.App_No  AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "') ";

                        if (appno != "")
                        {
                            selqry = selqry + " and r.App_No ='" + appno + "'";
                        }
                        if (sem != "")
                        {
                            selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                        }
                        if (headervalue != "")
                        {
                            selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                        }
                        if (ledgervalue != "")
                        {
                            selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                        }
                        //if (chkinclude.Checked == true)
                        //{
                        //    selqry = selqry + " and r.DelFlag=0 ";
                        //}
                        if (cc != "")
                        {
                            selqry = selqry + cc;
                        }
                        if (debar != "")
                        {
                            selqry = selqry + debar;
                        }
                        if (disc != "")
                        {
                            selqry = selqry + disc;
                        }
                        if (datewise == 1)
                        {
                            if (fromdate != "" && todate != "")
                            {
                                selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                            }
                        }
                        selqry = selqry + "GROUP BY R.app_no,Roll_No,Reg_No,Roll_Admit,R.Stud_Name,r.Degree_Code,a.FeeCategory ";
                        selqry = selqry + " select SUM(debit) as debit ,ft.App_No,TransCode,CONVERT(varchar(20),TransDate,103) as TransDate ,ft.FeeCategory,case when PayMode=1 then 'Cash' when PayMode=2 then 'Cheque' when PayMode=3 then 'DD' when PayMode=4 then 'Challan' when PayMode=5 then 'Online' end paymode,r.Stud_Name,r.Roll_No,r.Reg_No,r.degree_code  from FT_FinDailyTransaction ft,Registration r,applyn p where ft.App_No=p.app_no and r.App_No=ft.App_No and r.App_No=p.app_no AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and ft.FinYearFK in ('" + Finyearvalue + "') ";
                        if (appno != "")
                        {
                            selqry = selqry + " and r.App_No ='" + appno + "'";
                        }
                        if (sem != "")
                        {
                            selqry = selqry + " and ft.FeeCategory in ('" + sem + "')";
                        }
                        if (headervalue != "")
                        {
                            selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                        }
                        if (ledgervalue != "")
                        {
                            selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                        }
                        //if (chkinclude.Checked == true)
                        //{
                        //    selqry = selqry + " and r.DelFlag=0 ";
                        //}
                        if (cc != "")
                        {
                            selqry = selqry + cc;
                        }
                        if (debar != "")
                        {
                            selqry = selqry + debar;
                        }
                        if (disc != "")
                        {
                            selqry = selqry + disc;
                        }
                        if (datewise == 1)
                        {
                            if (fromdate != "" && todate != "")
                            {
                                selqry = selqry + "  AND  ft.TransDate between '" + fromdate + "' and '" + todate + "'";
                            }
                        }
                        selqry = selqry + "group by ft.App_No,TransDate,TransCode ,PayMode,r.Stud_Name,r.Roll_No,r.Reg_No,r.degree_code,ft.FeeCategory order by paymode";
                        selqry = selqry + " select d.Degree_Code,(c.Course_Name +'-'+ dt.Dept_Name) as degreename from Degree d,Department dt,Course c where d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and d.college_code ='" + collegecode1 + "'";
                        selqry = selqry + " SELECT  PayMode,A.App_No,SUM(Debit) as total,A.FeeCategory " + headerandledger + " as HeaderandLedger FROM FT_FinDailyTransaction A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.App_No =p.app_no and A.App_No =r.App_No  AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";

                        if (appno != "")
                        {
                            selqry = selqry + " and r.App_No ='" + appno + "'";
                        }
                        if (sem != "")
                        {
                            selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                        }
                        if (headervalue != "")
                        {
                            selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                        }
                        if (ledgervalue != "")
                        {
                            selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                        }
                        //if (chkinclude.Checked == true)
                        //{
                        //    selqry = selqry + " and r.DelFlag=0 ";
                        //}
                        if (cc != "")
                        {
                            selqry = selqry + cc;
                        }
                        if (debar != "")
                        {
                            selqry = selqry + debar;
                        }
                        if (disc != "")
                        {
                            selqry = selqry + disc;
                        }
                        if (datewise == 1)
                        {
                            if (fromdate != "" && todate != "")
                            {
                                selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                            }
                        }
                        selqry = selqry + "GROUP BY A.App_No,PayMode,A.FeeCategory " + headerandledger + "";
                        selqry = selqry + " select TextCode,TextVal  from TextValTable where TextCriteria ='FEECA' and college_code ='" + collegecode1 + "'";
                    }

                }
                else
                {
                    if (txt_roll.Text.Trim() == "")
                    {
                        student = true;
                        string exheaderorledger = "";
                        if (rbstudhed.Checked == true)
                        {
                            headval = true;
                            headerandledger = " ,HeaderFK";
                            exheaderorledger = ",A.HeaderFK";


                        }
                        else
                        {
                            headval = false;
                            headerandledger = " ,LedgerFK";
                            exheaderorledger = ",A.LedgerFK";
                        }
                        //ds.Clear();
                        //ds = d2.selectstud(student, collegecode1, batch1, deptdegcode, sem, sec, stud, seatype, studtype, headervalue, ledgervalue, fromdate, todate, headval, appno);
                        #region newquery
                        //selqry = selqry + " SELECT R.app_no,A.FeeCategory,Roll_No,Reg_No,Roll_Admit,R.Stud_Name,r.Degree_Code, SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Registration R WHERE A.App_No = P.app_no AND P.app_no = R.App_No  AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";

                        //if (batch1 != "")
                        //{
                        //    selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                        //}
                        //if (deptdegcode != "")
                        //{
                        //    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                        //}
                        //if (sem != "")
                        //{
                        //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                        //}
                        //if (sec != "")
                        //{
                        //    selqry = selqry + " and   ISNULL( r.Sections,'') in ('" + sec + "','')";
                        //}

                        //if (headervalue != "")
                        //{
                        //    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                        //}
                        //if (ledgervalue != "")
                        //{
                        //    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                        //}
                        //if (datewise == 1)
                        //{
                        //    if (fromdate != "" && todate != "")
                        //    {
                        //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                        //    }
                        //}

                        //selqry = selqry + "GROUP BY R.app_no,Roll_No,Reg_No,Roll_Admit,R.Stud_Name,r.Degree_Code,A.FeeCategory";
                        //if (rb_paid.Checked == true)
                        //{
                        //    selqry = selqry + " having SUM(BalAmount)=0";
                        //}
                        //if (tobepaid.Checked == true)
                        //{
                        //    selqry = selqry + " having SUM(BalAmount    )>0";
                        //}
                        //selqry = selqry + " order by Reg_No";

                        //selqry = selqry + " SELECT  PayMode,A.App_No,SUM(Debit) as total,A.FeeCategory " + headerandledger + " as HeaderandLedger FROM FT_FinDailyTransaction A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.App_No =p.app_no and A.App_No =r.App_No  AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                        //if (batch1 != "")
                        //{
                        //    selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                        //}
                        //if (deptdegcode != "")
                        //{
                        //    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                        //}
                        //if (sem != "")
                        //{
                        //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                        //}

                        //if (headervalue != "")
                        //{
                        //    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                        //}
                        //if (ledgervalue != "")
                        //{
                        //    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                        //}
                        //if (datewise == 1)
                        //{
                        //    if (fromdate != "" && todate != "")
                        //    {
                        //        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                        //    }
                        //}
                        //selqry = selqry + "GROUP BY A.App_No,PayMode,A.FeeCategory " + headerandledger + "";
                        //string headerorledger = "";
                        //if (rbstudhed.Checked == true)
                        //{
                        //    selqry = selqry + " ,P.app_no";
                        //    headerorledger = "HeaderFK";
                        //}
                        //else
                        //{
                        //    selqry = selqry + " , P.app_no";
                        //    headerorledger = "LedgerFK";
                        //}
                        //selqry = selqry + " SELECT a.App_No ," + headerorledger + " as headerorledger,FeeCategory,SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance FROM FT_FeeAllot A,applyn  r,Registration P where  a.App_No = r.App_No and p.App_No =r.app_no and p.App_No = a.App_No  and isconfirm ='1' and admission_status ='1' and A.FinYearFK in ('" + Finyearvalue + "') ";

                        //if (batch1 != "")
                        //{
                        //    selqry = selqry + " and P.Batch_Year in ('" + batch1 + "')";
                        //}
                        //if (deptdegcode != "")
                        //{
                        //    selqry = selqry + "  and  P.Degree_Code in ('" + deptdegcode + "')";
                        //}
                        //if (sem != "")
                        //{
                        //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                        //}
                        //if (sec != "")
                        //{
                        //    //  selqry = selqry + " and   ISNULL( p.Sections,'') in ('" + sec + "','')";
                        //}
                        //if (headervalue != "")
                        //{
                        //    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                        //}
                        //if (ledgervalue != "")
                        //{
                        //    selqry = selqry + " and LedgerFK in ('" + ledgervalue + "')";
                        //}
                        //if (rbstudhed.Checked == true)
                        //{
                        //    selqry = selqry + " GROUP BY a.app_no,HeaderFK,FeeCategory";
                        //}
                        //else
                        //{
                        //    selqry = selqry + " GROUP BY a.app_no,LedgerFK,FeeCategory";
                        //}

                        //selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount" + exheaderorledger + " as Excessfk,p.Batch_Year,A.FeeCategory,p.App_No from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Registration r WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no and em.App_No = a.App_No and r.App_No =P.app_no and r.App_No =A.App_No and r.App_No =em.App_No  AND P.IsConfirm = 1  AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "') ";
                        //if (appno != "")
                        //{
                        //    selqry = selqry + " and r.App_No ='" + appno + "'";
                        //}
                        //if (batch1 != "")
                        //{
                        //    selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                        //}
                        //if (deptdegcode != "")
                        //{
                        //    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                        //}
                        //if (sem != "")
                        //{
                        //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                        //}
                        //if (headervalue != "")
                        //{
                        //    selqry = selqry + " and Ex.HeaderFK in('" + headervalue + "')";
                        //}
                        //if (ledgervalue != "")
                        //{
                        //    selqry = selqry + "  and Ex.LedgerFK in('" + ledgervalue + "')";
                        //}
                        //if (datewise == 1)
                        //{
                        //    if (fromdate != "" && todate != "")
                        //    {
                        //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                        //    }
                        //}
                        //selqry = selqry + " GROUP BY p.Batch_Year ,A.FeeCategory ,p.App_No" + exheaderorledger + "";

                        //selqry = selqry + " select d.Degree_Code,(c.Course_Name +'-'+ dt.Dept_Name) as degreename from Degree d,Department dt,Course c where d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and d.college_code ='" + collegecode1 + "'";
                        //selqry = selqry + " select TextCode,TextVal  from TextValTable where TextCriteria ='FEECA' and college_code ='" + collegecode1 + "'";

                        #endregion

                        #region stud paid chart query
                        selqry = selqry + " SELECT R.app_no,Roll_No,Reg_No,Roll_Admit,R.Stud_Name,r.Degree_Code, SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Registration R WHERE A.App_No = P.app_no AND P.app_no = R.App_No  AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";

                        if (batch1 != "")
                        {
                            selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                        }
                        if (deptdegcode != "")
                        {
                            selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                        }
                        if (sem != "")
                        {
                            selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                        }
                        if (sec != "")
                        {
                            //  selqry = selqry + " and   ISNULL( r.Sections,'') in ('" + sec + "','')";
                        }

                        if (headervalue != "")
                        {
                            selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                        }
                        if (ledgervalue != "")
                        {
                            selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                        }
                        //if (chkinclude.Checked == true)
                        //{
                        //    selqry = selqry + " and r.DelFlag=0 ";
                        //}
                        if (cc != "")
                        {
                            selqry = selqry + cc;
                        }
                        if (debar != "")
                        {
                            selqry = selqry + debar;
                        }
                        if (disc != "")
                        {
                            selqry = selqry + disc;
                        }
                        if (datewise == 1)
                        {
                            if (fromdate != "" && todate != "")
                            {
                                selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                            }
                        }

                        selqry = selqry + "GROUP BY R.app_no,Roll_No,Reg_No,Roll_Admit,R.Stud_Name,r.Degree_Code";
                        if (rb_paid.Checked == true)
                        {
                            selqry = selqry + " having SUM(BalAmount)=0";
                        }
                        if (tobepaid.Checked == true)
                        {
                            selqry = selqry + " having SUM(BalAmount    )>0";
                        }
                        selqry = selqry + " order by Reg_No";

                        selqry = selqry + " SELECT  PayMode,A.App_No,SUM(Debit) as total " + headerandledger + " as HeaderandLedger FROM FT_FinDailyTransaction A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.App_No =p.app_no and A.App_No =r.App_No  AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "') ";
                        if (batch1 != "")
                        {
                            selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                        }
                        if (deptdegcode != "")
                        {
                            selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                        }
                        if (sem != "")
                        {
                            selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                        }

                        if (headervalue != "")
                        {
                            selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                        }
                        if (ledgervalue != "")
                        {
                            selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                        }
                        //if (chkinclude.Checked == true)
                        //{
                        //    selqry = selqry + " and r.DelFlag=0 ";
                        //}
                        if (cc != "")
                        {
                            selqry = selqry + cc;
                        }
                        if (debar != "")
                        {
                            selqry = selqry + debar;
                        }
                        if (disc != "")
                        {
                            selqry = selqry + disc;
                        }
                        if (datewise == 1)
                        {
                            if (fromdate != "" && todate != "")
                            {
                                selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                            }
                        }
                        selqry = selqry + "GROUP BY A.App_No,PayMode " + headerandledger + "";
                        string headerorledger = "";
                        if (rbstudhed.Checked == true)
                        {
                            selqry = selqry + " ,P.app_no";
                            headerorledger = "HeaderFK";
                        }
                        else
                        {
                            selqry = selqry + " , P.app_no";
                            headerorledger = "LedgerFK";
                        }
                        selqry = selqry + " SELECT a.App_No ," + headerorledger + " as headerorledger,SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance FROM FT_FeeAllot A,applyn  r,Registration P where  a.App_No = r.App_No and p.App_No =r.app_no and p.App_No = a.App_No  and isconfirm ='1' and admission_status ='1' and A.FinYearFK in ('" + Finyearvalue + "')";

                        if (batch1 != "")
                        {
                            selqry = selqry + " and P.Batch_Year in ('" + batch1 + "')";
                        }
                        if (deptdegcode != "")
                        {
                            selqry = selqry + "  and  P.Degree_Code in ('" + deptdegcode + "')";
                        }
                        if (sem != "")
                        {
                            selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                        }
                        if (sec != "")
                        {
                            //  selqry = selqry + " and   ISNULL( p.Sections,'') in ('" + sec + "','')";
                        }
                        if (headervalue != "")
                        {
                            selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                        }
                        if (ledgervalue != "")
                        {
                            selqry = selqry + " and LedgerFK in ('" + ledgervalue + "')";
                        }
                        //if (chkinclude.Checked == true)
                        //{
                        //    selqry = selqry + " and P.DelFlag=0 ";
                        //}
                        if (cc != "")
                        {
                            selqry = selqry + " and p.cc=0";
                        }
                        if (debar != "")
                        {
                            selqry = selqry + " and p.Exam_Flag<>'debar'";
                        }
                        if (disc != "")
                        {
                            selqry = selqry + " and p.DelFlag=0";
                        }

                        if (rbstudhed.Checked == true)
                        {
                            selqry = selqry + " GROUP BY a.app_no,HeaderFK";
                        }
                        else
                        {
                            selqry = selqry + " GROUP BY a.app_no,LedgerFK";
                        }

                        selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount" + exheaderorledger + " as Excessfk,p.Batch_Year,p.App_No from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Registration r WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no and em.App_No = a.App_No and r.App_No =P.app_no and r.App_No =A.App_No and r.App_No =em.App_No  AND P.IsConfirm = 1  AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                        if (appno != "")
                        {
                            selqry = selqry + " and r.App_No ='" + appno + "'";
                        }
                        if (batch1 != "")
                        {
                            selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                        }
                        if (deptdegcode != "")
                        {
                            selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                        }
                        if (sem != "")
                        {
                            selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                        }
                        if (headervalue != "")
                        {
                            selqry = selqry + " and Ex.HeaderFK in('" + headervalue + "')";
                        }
                        if (ledgervalue != "")
                        {
                            selqry = selqry + "  and Ex.LedgerFK in('" + ledgervalue + "')";
                        }
                        //if (chkinclude.Checked == true)
                        //{
                        //    selqry = selqry + " and r.DelFlag=0 ";
                        //}
                        if (cc != "")
                        {
                            selqry = selqry + cc;
                        }
                        if (debar != "")
                        {
                            selqry = selqry + debar;
                        }
                        if (disc != "")
                        {
                            selqry = selqry + disc;
                        }
                        if (datewise == 1)
                        {
                            if (fromdate != "" && todate != "")
                            {
                                selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                            }
                        }
                        selqry = selqry + " GROUP BY p.Batch_Year  ,p.App_No" + exheaderorledger + "";

                        selqry = selqry + " select d.Degree_Code,(c.Course_Name +'-'+ dt.Dept_Name) as degreename from Degree d,Department dt,Course c where d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and d.college_code ='" + collegecode1 + "'";
                        selqry = selqry + " select TextCode,TextVal  from TextValTable where TextCriteria ='FEECA' and college_code ='" + collegecode1 + "'";
                        #endregion
                    }
                    else if (txt_roll.Text.Trim() != "")
                    {
                        student = false;
                        string exheaderorledger = "";
                        if (rbstudhed.Checked == true)
                        {
                            headval = true;
                            headerandledger = " ,HeaderFK";
                            exheaderorledger = ",A.HeaderFK";
                        }
                        else
                        {
                            headval = false;
                            headerandledger = " ,LedgerFK";
                            exheaderorledger = ",A.LedgerFK";
                        }

                        //ds.Clear();
                        //ds = d2.selectstud(student, collegecode1, batch1, deptdegcode, sem, sec, stud, seatype, studtype, headervalue, ledgervalue, fromdate, todate, headval,appno);

                        #region newquery

                        selqry = selqry + " SELECT R.app_no,A.FeeCategory,Roll_No,Reg_No,Roll_Admit,R.Stud_Name,r.Degree_Code, SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Registration R WHERE A.App_No = P.app_no AND P.app_no = R.App_No  AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "') ";
                        if (appno != "")
                        {
                            selqry = selqry + " and r.App_No ='" + appno + "'";
                        }
                        if (sem != "")
                        {
                            selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                        }
                        if (headervalue != "")
                        {
                            selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                        }
                        if (ledgervalue != "")
                        {
                            selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                        }
                        //if (chkinclude.Checked == true)
                        //{
                        //    selqry = selqry + " and r.DelFlag=0 ";
                        //}
                        if (cc != "")
                        {
                            selqry = selqry + cc;
                        }
                        if (debar != "")
                        {
                            selqry = selqry + debar;
                        }
                        if (disc != "")
                        {
                            selqry = selqry + disc;
                        }
                        if (datewise == 1)
                        {
                            if (fromdate != "" && todate != "")
                            {
                                selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                            }
                        }

                        selqry = selqry + "GROUP BY R.app_no,Roll_No,Reg_No,Roll_Admit,R.Stud_Name,r.Degree_Code,A.FeeCategory";
                        if (rb_paid.Checked == true)
                        {
                            selqry = selqry + " having SUM(BalAmount)=0";
                        }
                        if (tobepaid.Checked == true)
                        {
                            selqry = selqry + " having SUM(BalAmount    )>0";
                        }
                        selqry = selqry + " order by Reg_No";
                        selqry = selqry + " SELECT  PayMode,A.App_No,SUM(Debit) as total,A.FeeCategory " + headerandledger + " as HeaderandLedger FROM FT_FinDailyTransaction A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.App_No =p.app_no and A.App_No =r.App_No  AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                        if (appno != "")
                        {
                            selqry = selqry + " and r.App_No ='" + appno + "'";
                        }
                        if (sem != "")
                        {
                            selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                        }
                        if (headervalue != "")
                        {
                            selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                        }
                        if (ledgervalue != "")
                        {
                            selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                        }
                        //if (chkinclude.Checked == true)
                        //{
                        //    selqry = selqry + " and r.DelFlag=0 ";
                        //}
                        if (cc != "")
                        {
                            selqry = selqry + cc;
                        }
                        if (debar != "")
                        {
                            selqry = selqry + debar;
                        }
                        if (disc != "")
                        {
                            selqry = selqry + disc;
                        }
                        if (datewise == 1)
                        {
                            if (fromdate != "" && todate != "")
                            {
                                selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                            }
                        }
                        selqry = selqry + "GROUP BY A.App_No,PayMode,A.FeeCategory " + headerandledger + "";
                        string headerorledger = "";
                        if (rbstudhed.Checked == true)
                        {
                            selqry = selqry + " ,P.app_no";
                            headerorledger = "HeaderFK";
                        }
                        else
                        {
                            selqry = selqry + " , P.app_no";
                            headerorledger = "LedgerFK";
                        }
                        selqry = selqry + " SELECT a.App_No, " + headerorledger + " as headerorledger,FeeCategory,SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance FROM FT_FeeAllot A,applyn  r,Registration P where  a.App_No = r.App_No and p.App_No =r.app_no and p.App_No = a.App_No  and isconfirm ='1' and admission_status ='1' and A.FinYearFK in ('" + Finyearvalue + "') ";
                        if (appno != "")
                        {
                            selqry = selqry + " and P.App_No ='" + appno + "'";
                        }
                        if (sem != "")
                        {
                            selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                        }
                        if (headervalue != "")
                        {
                            selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                        }
                        if (ledgervalue != "")
                        {
                            selqry = selqry + " and LedgerFK in ('" + ledgervalue + "')";
                        }
                        //if (chkinclude.Checked == true)
                        //{
                        //    selqry = selqry + " and P.DelFlag=0 ";
                        //}
                        if (cc != "")
                        {
                            //selqry = selqry + cc;
                            selqry = selqry + " and p.cc=0 ";
                        }
                        if (debar != "")
                        {
                            // selqry = selqry + debar;
                            selqry = selqry + " and p.Exam_Flag<>'debar' ";
                        }
                        if (disc != "")
                        {
                            // selqry = selqry + disc;
                            selqry = selqry + " and p.DelFlag=0 ";
                        }
                        if (rbstudhed.Checked == true)
                        {
                            selqry = selqry + " GROUP BY a.app_no,HeaderFK,FeeCategory";
                        }
                        else
                        {
                            selqry = selqry + " GROUP BY a.app_no,LedgerFK,FeeCategory";
                        }

                        selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount" + exheaderorledger + " as Excessfk,p.Batch_Year,A.FeeCategory,p.App_No from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Registration r WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no and em.App_No = a.App_No and r.App_No =P.app_no and r.App_No =A.App_No and r.App_No =em.App_No  AND P.IsConfirm = 1  AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "') ";
                        if (appno != "")
                        {
                            selqry = selqry + " and r.App_No ='" + appno + "'";
                        }
                        if (sem != "")
                        {
                            selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                        }
                        if (headervalue != "")
                        {
                            selqry = selqry + " and Ex.HeaderFK in('" + headervalue + "')";
                        }
                        if (ledgervalue != "")
                        {
                            selqry = selqry + "  and Ex.LedgerFK in('" + ledgervalue + "')";
                        }
                        //if (chkinclude.Checked == true)
                        //{
                        //    selqry = selqry + " and r.DelFlag=0 ";
                        //}
                        if (cc != "")
                        {
                            selqry = selqry + cc;
                        }
                        if (debar != "")
                        {
                            selqry = selqry + debar;
                        }
                        if (disc != "")
                        {
                            selqry = selqry + disc;
                        }
                        if (datewise == 1)
                        {
                            if (fromdate != "" && todate != "")
                            {
                                selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                            }
                        }
                        selqry = selqry + " GROUP BY p.Batch_Year ,A.FeeCategory ,p.App_No" + exheaderorledger + "";

                        selqry = selqry + " select d.Degree_Code,(c.Course_Name +'-'+ dt.Dept_Name) as degreename from Degree d,Department dt,Course c where d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and d.college_code ='" + collegecode1 + "'";
                        selqry = selqry + " select TextCode,TextVal  from TextValTable where TextCriteria ='FEECA' and college_code ='" + collegecode1 + "'";
                        #endregion
                    }
                }
            }
            #endregion

            #region others
            if (rb_others.Checked == true)
            {
                if (rbstaff.Checked == true)
                {
                    #region staff qry
                    selqry = " SELECT p.appl_id,r.staff_code,r.staff_name,p.Dept_Code, SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,staff_appl_master P,staffmaster R WHERE p.appl_no =r.appl_no and a.App_No =p.appl_id and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                    if (deptdegcode != "")
                    {
                        //  selqry = selqry + "  and  p.dept_code in ('" + deptdegcode + "')";
                    }
                    if (sem != "")
                    {
                        //selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                    }
                    if (headervalue != "")
                    {
                        selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                    }
                    if (ledgervalue != "")
                    {
                        selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                    }
                    if (datewise == 1)
                    {
                        if (fromdate != "" && todate != "")
                        {
                            selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                        }
                    }
                    selqry = selqry + "GROUP BY p.appl_id,r.staff_code,r.staff_name,p.Dept_Code  order by p.appl_id";

                    //paymode
                    selqry = selqry + "  SELECT  PayMode,p.appl_id,SUM(Debit) as total  ,HeaderFK as HeaderandLedger FROM FT_FinDailyTransaction A,staff_appl_master P,staffmaster R  WHERE p.appl_no=r.appl_no and a.App_No=p.appl_id  and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                    if (deptdegcode != "")
                    {
                        // selqry = selqry + "  and  p.dept_code in ('" + deptdegcode + "')";
                    }
                    if (sem != "")
                    {
                        // selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                    }
                    if (headervalue != "")
                    {
                        selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                    }
                    if (ledgervalue != "")
                    {
                        selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                    }
                    if (datewise == 1)
                    {
                        if (fromdate != "" && todate != "")
                        {
                            selqry = selqry + "  AND a.TransDate between '" + fromdate + "' and '" + todate + "'";
                        }
                    }
                    selqry = selqry + "GROUP BY PayMode ,HeaderFK ,p.appl_id";

                    //excess
                    selqry = selqry + "  select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,A.LedgerFK,p.appl_id from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,staff_appl_master P,staffmaster r WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.appl_id and em.App_No = a.App_No and p.appl_no=r.appl_no and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                    if (deptdegcode != "")
                    {
                        // selqry = selqry + "  and  p.dept_code in ('" + deptdegcode + "')";
                    }
                    if (sem != "")
                    {
                        //selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                    }
                    if (headervalue != "")
                    {
                        selqry = selqry + " and Ex.HeaderFK in ('" + headervalue + "')";
                    }
                    if (ledgervalue != "")
                    {
                        selqry = selqry + " and Ex.LedgerFK in('" + ledgervalue + "')";
                    }
                    if (datewise == 1)
                    {
                        if (fromdate != "" && todate != "")
                        {
                            selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                        }
                    }
                    selqry = selqry + "GROUP BY A.HeaderFK ,A.LedgerFK,p.appl_id";
                    //dept
                    selqry = selqry + " select d.Dept_Code,(c.Course_Name +'-'+ dt.Dept_Name) as degreename from Degree d,Department dt,Course c where d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and d.college_code ='13'";
                    selqry = selqry + "select TextCode,TextVal  from TextValTable where TextCriteria ='FEECA' and college_code ='13'";
                    #endregion
                }
                else if (rbvendor.Checked == true)
                {
                    #region vendor
                    selqry = " SELECT p.VendorCode,p.VendorName, SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,CO_VendorMaster P WHERE  a.App_No =p.VendorPK and A.FinYearFK in ('" + Finyearvalue + "')";
                    if (sem != "")
                    {
                        // selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                    }
                    if (headervalue != "")
                    {
                        selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                    }
                    if (ledgervalue != "")
                    {
                        selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                    }
                    if (datewise == 1)
                    {
                        if (fromdate != "" && todate != "")
                        {
                            selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                        }
                    }
                    selqry = selqry + " and p.VendorType='1' and MemType=3 GROUP BY p.VendorCode,p.VendorName order by p.VendorCode";
                    //paymode
                    selqry = selqry + "  SELECT  PayMode,p.VendorCode,SUM(Debit) as total ,HeaderFK as HeaderandLedger FROM FT_FinDailyTransaction A,CO_VendorMaster P WHERE  a.App_No=p.VendorPK  and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and A.FinYearFK in ('" + Finyearvalue + "')";
                    if (sem != "")
                    {
                        // selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                    }
                    if (headervalue != "")
                    {
                        selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                    }
                    if (ledgervalue != "")
                    {
                        selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                    }
                    if (datewise == 1)
                    {
                        if (fromdate != "" && todate != "")
                        {
                            selqry = selqry + "  AND A.TransDate between '" + fromdate + "' and '" + todate + "'";
                        }
                    }
                    selqry = selqry + " and p.VendorType='1' and MemType=3 GROUP BY PayMode ,HeaderFK ,p.VendorCode";
                    //excess
                    selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,p.VendorCode from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,CO_VendorMaster P WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.VendorPK and em.App_No = a.App_No  and A.FinYearFK in ('" + Finyearvalue + "')";
                    if (sem != "")
                    {
                        // selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                    }
                    if (headervalue != "")
                    {
                        selqry = selqry + " and Ex.HeaderFK in ('" + headervalue + "')";
                    }
                    if (ledgervalue != "")
                    {
                        selqry = selqry + " and Ex.LedgerFK in('" + ledgervalue + "')";
                    }
                    if (datewise == 1)
                    {
                        if (fromdate != "" && todate != "")
                        {
                            selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                        }
                    }
                    selqry = selqry + " and p.VendorType='1' and a.MemType=3 GROUP BY p.VendorCode";
                    //sem
                    selqry = selqry + " select TextCode,TextVal  from TextValTable where TextCriteria ='FEECA' and college_code ='13'";
                    #endregion
                }
                else if (rbothers.Checked == true)
                {
                    #region others

                    selqry = " SELECT p.VendorCode,p.VendorName, SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,CO_VendorMaster P WHERE  a.App_No =p.VendorPK and A.FinYearFK in ('" + Finyearvalue + "')";
                    if (sem != "")
                    {
                        //selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                    }
                    if (headervalue != "")
                    {
                        selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                    }
                    if (ledgervalue != "")
                    {
                        selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                    }
                    if (datewise == 1)
                    {
                        if (fromdate != "" && todate != "")
                        {
                            selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                        }
                    }
                    selqry = selqry + " and p.VendorType='-5' GROUP BY p.VendorCode,p.VendorName order by p.VendorCode";
                    //paymode
                    selqry = selqry + "  SELECT  PayMode,p.VendorCode,SUM(Debit) as total ,HeaderFK as HeaderandLedger FROM FT_FinDailyTransaction A,CO_VendorMaster P WHERE  a.App_No=p.VendorPK  and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and A.FinYearFK in ('" + Finyearvalue + "')";
                    if (sem != "")
                    {
                        //selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                    }
                    if (headervalue != "")
                    {
                        selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                    }
                    if (ledgervalue != "")
                    {
                        selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                    }
                    if (datewise == 1)
                    {
                        if (fromdate != "" && todate != "")
                        {
                            selqry = selqry + "  AND A.TransDate between '" + fromdate + "' and '" + todate + "'";
                        }
                    }
                    selqry = selqry + " and p.VendorType='-5' and memtype=4 GROUP BY PayMode  ,HeaderFK ,p.VendorCode";
                    //excess
                    selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,p.VendorCode from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,CO_VendorMaster P WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.VendorPK and em.App_No = a.App_No  and A.FinYearFK in ('" + Finyearvalue + "')";
                    if (sem != "")
                    {
                        // selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                    }
                    if (headervalue != "")
                    {
                        selqry = selqry + " and Ex.HeaderFK in ('" + headervalue + "')";
                    }
                    if (ledgervalue != "")
                    {
                        selqry = selqry + " and Ex.LedgerFK in('" + ledgervalue + "')";
                    }
                    if (datewise == 1)
                    {
                        if (fromdate != "" && todate != "")
                        {
                            selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                        }
                    }
                    selqry = selqry + " and p.VendorType='-5' GROUP BY p.VendorCode";
                    //sem
                    selqry = selqry + " select TextCode,TextVal  from TextValTable where TextCriteria ='FEECA' and college_code ='13'";

                    #endregion
                }
            }
            #endregion

            #region Total

            if (rb_total.Checked == true)
            {
                selqry = "SELECT SUM(FeeAmount) as Allot ,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM  FT_FeeAllot A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.App_No =a.App_No and p.app_no =r.App_No  AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "') ";
                if (batch1 != "")
                {
                    selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                }
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headervalue != "")
                {
                    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                }
                if (ledgervalue != "")
                {
                    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                }
                //if (chkinclude.Checked == true)
                //{
                //    selqry = selqry + " and r.DelFlag=0 ";
                //}
                if (cc != "")
                {
                    selqry = selqry + cc;
                }
                if (debar != "")
                {
                    selqry = selqry + debar;
                }
                if (disc != "")
                {
                    selqry = selqry + disc;
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                    }
                }
                //  selqry = selqry + "GROUP BY A.HeaderFK";
                selqry = selqry + " SELECT PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.App_No =a.App_No and r.App_No = p.app_no  AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "') ";
                if (batch1 != "")
                {
                    selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                }
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headervalue != "")
                {
                    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
                }
                if (ledgervalue != "")
                {
                    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
                }
                //if (chkinclude.Checked == true)
                //{
                //    selqry = selqry + " and r.DelFlag=0 ";
                //}
                if (cc != "")
                {
                    selqry = selqry + cc;
                }
                if (debar != "")
                {
                    selqry = selqry + debar;
                }
                if (disc != "")
                {
                    selqry = selqry + disc;
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                    }
                }
                selqry = selqry + "GROUP BY PayMode";
            }

            #endregion

            allds.Clear();
            allds = d2.select_method_wo_parameter(selqry, "Text");
        }
        catch { }
        return allds;
    }
    #endregion

    #region all rb method old

    //#region headermethod
    //public void headervalues()
    //{
    //    try
    //    {
    //        if (ds.Tables.Count > 0)
    //        {
    //            if (ds.Tables[0].Rows.Count > 0)
    //            {

    //                #region design
    //                loadcolumns();
    //                DataView dv = new DataView();
    //                FpSpread1.Sheets[0].RowCount = 0;
    //                FpSpread1.Sheets[0].ColumnCount = 0;
    //                FpSpread1.CommandBar.Visible = false;
    //                FpSpread1.Sheets[0].AutoPostBack = true;
    //                FpSpread1.Sheets[0].ColumnHeader.RowCount = 2;
    //                FpSpread1.Sheets[0].RowHeader.Visible = false;
    //                FpSpread1.Sheets[0].ColumnCount = 5;
    //                FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
    //                darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
    //                darkstyle.ForeColor = Color.White;
    //                FpSpread1.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
    //                int check = 0;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;

    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Header Name";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Left;
    //                FpSpread1.Sheets[0].Columns[1].Visible = true;

    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Allot";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[2].Visible = true;
    //                if (!colord.Contains("1"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[2].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[2].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Concession";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[3].Visible = true;
    //                if (!colord.Contains("2"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[3].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[3].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Government";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[4].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[4].Visible = true;
    //                if (!colord.Contains("3"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[4].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[4].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("4"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);

    //                Hashtable newhash = new Hashtable();

    //                if (chkl_paid.Items.Count > 0)
    //                {
    //                    for (int s = 0; s < chkl_paid.Items.Count; s++)
    //                    {
    //                        if (chkl_paid.Items[s].Selected == true)
    //                        {
    //                            check++;
    //                            FpSpread1.Sheets[0].ColumnCount++;
    //                            newhash.Add(Convert.ToString(chkl_paid.Items[s].Value), FpSpread1.Sheets[0].ColumnCount - 1);
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_paid.Items[s].Text);
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Tag = Convert.ToString(chkl_paid.Items[s].Value);

    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                            if (!colord.Contains("5"))
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                            }
    //                            if (colord.Count == 0)
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                            }

    //                        }

    //                    }
    //                    if (check != 0)
    //                    {
    //                        FpSpread1.Sheets[0].ColumnCount++;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total Paid";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                        if (!colord.Contains("5"))
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                        }
    //                        if (colord.Count == 0)
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        }
    //                    }
    //                }
    //                if (check == 0)
    //                {
    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Paid";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("5"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                }
    //                else
    //                {
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 1, check + 1);
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Paid";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;
    //                    if (!colord.Contains("5"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[6].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[6].Visible = true;
    //                    }
    //                }

    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Balance";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("6"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);


    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Refund Amount";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("7"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Excess Amount";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("8"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Fine Amount";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("9"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;


    //                #endregion

    //                #region value
    //                string totalvalue = "";
    //                double bal = 0;

    //                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
    //                {
    //                    FpSpread1.Sheets[0].Rows.Count = ds.Tables[0].Rows.Count;
    //                    FpSpread1.Sheets[0].Cells[i, 0].Text = Convert.ToString(i + 1);
    //                    ds.Tables[4].DefaultView.RowFilter = "headerpk='" + Convert.ToString(ds.Tables[0].Rows[i]["HeaderFK"]) + "'";
    //                    dvhead = ds.Tables[4].DefaultView;
    //                    if (Convert.ToString(dvhead) != "" && dvhead != null)
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, 1].Text = Convert.ToString(dvhead[0]["HeaderName"]);

    //                    }

    //                    FpSpread1.Sheets[0].Cells[i, 1].Tag = Convert.ToString(ds.Tables[0].Rows[i]["HeaderFK"].ToString());
    //                    allot = Convert.ToString(ds.Tables[0].Rows[i]["Allot"]);
    //                    if (allot != "" && allot != null)
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, 2].Text = Convert.ToString(Math.Round(Convert.ToDouble(allot), 2));

    //                    }
    //                    else
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, 2].Text = "0";
    //                    }
    //                    consession = Convert.ToString(ds.Tables[0].Rows[i]["consustion"]);
    //                    if (consession != "" && consession != null)
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(consession), 2));
    //                        // drchart["consustion"] = Convert.ToString(Math.Round(Convert.ToDouble(consession), 2));
    //                    }
    //                    else
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, 3].Text = "0";
    //                    }
    //                    string val = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
    //                    string value = "";
    //                    if (val == "" || val == null)
    //                    {
    //                        value = "0";
    //                    }
    //                    else
    //                    {
    //                        value = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
    //                    }
    //                    FpSpread1.Sheets[0].Cells[i, 4].Text = value;
    //                    totalvalue = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Total"]), 2));
    //                    FpSpread1.Sheets[0].Cells[i, 5].Text = Convert.ToString(totalvalue);
    //                    string paidvalue = "";
    //                    if (check == 0)
    //                    {
    //                        DataView dsnew = new DataView();
    //                        paidvalue = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
    //                        if (ds.Tables[3].Rows.Count > 0)
    //                        {
    //                            ds.Tables[3].DefaultView.RowFilter = " HeaderFK='" + Convert.ToString(ds.Tables[0].Rows[i]["HeaderFK"]) + "'";
    //                            dsnew = ds.Tables[3].DefaultView;
    //                            if (dsnew.Count > 0)
    //                            {
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = Convert.ToString(dsnew[0]["Paid"]);
    //                            }

    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = "0";
    //                        }

    //                    }
    //                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 3].Text = Convert.ToString(ds.Tables[0].Rows[i]["RefundAmount"]);
    //                    DataView dvex = new DataView();
    //                    if (ds.Tables[2].Rows.Count > 0)
    //                    {
    //                        ds.Tables[2].DefaultView.RowFilter = "HeaderFK='" + Convert.ToString(ds.Tables[0].Rows[i]["HeaderFK"]) + "'";
    //                        dvex = ds.Tables[2].DefaultView;
    //                        if (dvex.Count > 0 && dvex.Count != null)
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = Convert.ToString(dvex[0]["ExcessAmount"]);
    //                        }
    //                    }
    //                    else
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                    }
    //                    double totamount = 0;
    //                    double fnlamount = 0;
    //                    if (ds.Tables[1].Rows.Count > 0)
    //                    {
    //                        if (chkl_paid.Items.Count > 0)
    //                        {
    //                            for (int pay = 0; pay < chkl_paid.Items.Count; pay++)
    //                            {
    //                                if (chkl_paid.Items[pay].Selected == true)
    //                                {
    //                                    ds.Tables[1].DefaultView.RowFilter = "HeaderFK='" + Convert.ToString(ds.Tables[0].Rows[i]["HeaderFK"].ToString()) + "' and PayMode='" + Convert.ToString(chkl_paid.Items[pay].Value) + "'";
    //                                    dv = ds.Tables[1].DefaultView;
    //                                    if (dv.Count == 0 || dv.Count == null)
    //                                    {
    //                                        int count = 0;
    //                                        int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                        FpSpread1.Sheets[0].Cells[i, colnew].Text = "0";
    //                                    }
    //                                    if (dv.Count > 0)
    //                                    {
    //                                        int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                        FpSpread1.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv[0]["total"]);
    //                                        totamount = Convert.ToDouble(dv[0]["total"]);
    //                                        if (totamount != 0)
    //                                        {
    //                                            fnlamount = fnlamount + totamount;
    //                                        }
    //                                    }
    //                                }
    //                            }
    //                            if (check != 0)
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = Convert.ToString(fnlamount);
    //                            if (totalvalue != "" && totalvalue != null)
    //                            {
    //                                bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(fnlamount);
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 4].Text = Convert.ToString(bal);
    //                                if (Convert.ToDouble(bal) == 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#F08080");
    //                                }
    //                                if (Convert.ToDouble(bal) != 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#90EE90");
    //                                }
    //                            }
    //                        }
    //                    }

    //                }

    //                #endregion

    //                #region grandtot
    //                FpSpread1.Sheets[0].PageSize = ds.Tables[0].Rows.Count + 1;
    //                FpSpread1.Sheets[0].Rows.Count++;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, 0].Text = "Grand Total";
    //                double hedval = 0;
    //                for (int j = 2; j < FpSpread1.Sheets[0].Columns.Count; j++)
    //                {
    //                    for (int i = 0; i < FpSpread1.Rows.Count - 1; i++)
    //                    {
    //                        string values = Convert.ToString(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                        if (values != "0" && values != "-" && values != "")
    //                        {
    //                            if (hedval == 0)
    //                            {
    //                                hedval = Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Text);
    //                            }
    //                            else
    //                            {
    //                                hedval = hedval + Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Text);
    //                            }
    //                        }
    //                    }
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, j].Text = Convert.ToString(hedval);
    //                    hedval = 0;
    //                }
    //                #endregion

    //                #region visible
    //                FpSpread1.Attributes.Add("Style", "cursor:grab;");
    //                FpSpread1.Sheets[0].SelectionBackColor = Color.Green;
    //                div1.Visible = true;
    //                FpSpread1.Visible = true;
    //                divledger.Visible = false;
    //                lbl_ledg.Visible = false;
    //                lbl_ledg.Text = "";
    //                fpledger.Visible = false;
    //                lbl_bat.Visible = false;
    //                lbl_bat.Text = "";
    //                fpbatch.Visible = false;
    //                lbl_degr.Visible = false;
    //                lbl_degr.Text = "";
    //                fpdegree.Visible = false;
    //                lbl_dep.Visible = false;
    //                lbl_dep.Text = "";
    //                fpdept.Visible = false;
    //                lbl_sem.Visible = false; ;
    //                lbl_sem.Text = "";
    //                fpsem.Visible = false;
    //                header.Visible = true;
    //                lblhed.Visible = true;
    //                rptprint.Visible = true;
    //                header.Attributes.Add("Style", "height:320px; width:950px; overflow:auto");
    //                div1.Attributes.Add("Style", "height:320px; width:950px; overflow:auto");
    //                FpSpread1.Height = 300;
    //                pheaderfilter.Visible = true;
    //                pcolumnorder.Visible = true;
    //                lblhed.Text = "Header";
    //                divstudcell.Visible = false;
    //                lbl_semcell.Text = "";
    //                divdept.Visible = false;
    //                divdegree.Visible = false;
    //                divbatch.Visible = false;
    //                ledger.Visible = false;
    //                batch.Visible = false;
    //                divdegr.Visible = false;
    //                divdep.Visible = false;
    //                divsema.Visible = false;
    //                div7.Visible = false;
    //                #endregion

    //            }
    //            else
    //            {
    //                FpSpread1.Visible = false;
    //                div1.Visible = false;
    //                rptprint.Visible = false;
    //                pheaderfilter.Visible = false;
    //                pcolumnorder.Visible = false;
    //                lblhed.Text = "";
    //                imgdiv2.Visible = true;
    //                lbl_alert.Visible = true;
    //                lbl_alert.Text = "No Record Found";
    //            }
    //        }
    //    }
    //    catch { }
    //}
    //#endregion

    //#region ledgermethod
    //public void ledgervalues()
    //{
    //    try
    //    {
    //        if (ds.Tables.Count > 0)
    //        {
    //            if (ds.Tables[0].Rows.Count > 0)
    //            {
    //                #region design
    //                loadcolumns();
    //                DataView dv = new DataView();
    //                FpSpread1.Sheets[0].RowCount = 0;
    //                FpSpread1.Sheets[0].ColumnCount = 0;
    //                FpSpread1.CommandBar.Visible = false;
    //                FpSpread1.Sheets[0].AutoPostBack = true;
    //                FpSpread1.Sheets[0].ColumnHeader.RowCount = 2;
    //                FpSpread1.Sheets[0].RowHeader.Visible = false;
    //                FpSpread1.Sheets[0].ColumnCount = 6;
    //                FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
    //                darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
    //                darkstyle.ForeColor = Color.White;
    //                FpSpread1.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
    //                int countval = 0;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Header Name";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Left;
    //                FpSpread1.Sheets[0].Columns[1].Visible = true;

    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Ledger Name";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Left;
    //                FpSpread1.Sheets[0].Columns[2].Visible = true;

    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Allot";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[3].Visible = true;
    //                if (!colord.Contains("1"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[3].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[3].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Concession";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[4].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[4].Visible = true;
    //                if (!colord.Contains("2"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[4].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[4].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Government";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[5].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[5].Visible = true;
    //                if (!colord.Contains("3"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[5].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[5].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("4"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 5, 2, 1);

    //                Hashtable newhash = new Hashtable();

    //                if (chkl_paid.Items.Count > 0)
    //                {
    //                    for (int s = 0; s < chkl_paid.Items.Count; s++)
    //                    {
    //                        if (chkl_paid.Items[s].Selected == true)
    //                        {
    //                            countval++;
    //                            FpSpread1.Sheets[0].ColumnCount++;
    //                            newhash.Add(Convert.ToString(chkl_paid.Items[s].Value), FpSpread1.Sheets[0].ColumnCount - 1);
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_paid.Items[s].Text);
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                            if (!colord.Contains("5"))
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                            }
    //                            if (colord.Count == 0)
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                            }
    //                        }
    //                    }
    //                    if (countval != 0)
    //                    {
    //                        FpSpread1.Sheets[0].ColumnCount++;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total Paid";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                        if (!colord.Contains("5"))
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                        }
    //                        //if (!colord.Contains("Paid"))
    //                        //{
    //                        //    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;

    //                        //}
    //                        if (colord.Count == 0)
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        }
    //                    }
    //                }
    //                if (countval == 0)
    //                {
    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Paid";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("5"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                }
    //                else
    //                {
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 7, 1, countval + 1);
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].Text = "Paid";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].HorizontalAlign = HorizontalAlign.Center;
    //                    if (!colord.Contains("5"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[7].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[7].Visible = true;
    //                    }
    //                }

    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Balance";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("6"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);


    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Refund Amount";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("7"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Excess Amount";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("8"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Fine Amount";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("9"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                #endregion
    //                #region value
    //                string totalvalue = "";
    //                double bal = 0;
    //                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
    //                {
    //                    FpSpread1.Sheets[0].Rows.Count = ds.Tables[0].Rows.Count;
    //                    FpSpread1.Sheets[0].Cells[i, 0].Text = Convert.ToString(i + 1);
    //                    ds.Tables[3].DefaultView.RowFilter = "  LedgerPK='" + Convert.ToString(ds.Tables[0].Rows[i]["LedgerFK"]) + "'";
    //                    dvhead = ds.Tables[3].DefaultView;
    //                    if (Convert.ToString(dvhead) != "" && dvhead != null)
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, 1].Text = Convert.ToString(dvhead[0]["HeaderName"]);
    //                        FpSpread1.Sheets[0].Cells[i, 2].Text = Convert.ToString(dvhead[0]["LedgerName"]);
    //                    }
    //                    FpSpread1.Sheets[0].Cells[i, 1].Tag = Convert.ToString(ds.Tables[0].Rows[i]["HeaderFK"].ToString());
    //                    FpSpread1.Sheets[0].Cells[i, 2].Tag = Convert.ToString(ds.Tables[0].Rows[i]["LedgerFK"].ToString());
    //                    allot = Convert.ToString(ds.Tables[0].Rows[i]["Allot"]);
    //                    if (allot != "" && allot != null)
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(allot), 2));
    //                    }
    //                    else
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, 3].Text = "0";
    //                    }
    //                    consession = Convert.ToString(ds.Tables[0].Rows[i]["consustion"]);
    //                    if (consession != "" && consession != null)
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(consession), 2));
    //                    }
    //                    else
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, 4].Text = "0";
    //                    }

    //                    string val = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
    //                    string value = "";
    //                    if (val == "" || val == null)
    //                    {
    //                        value = "0";
    //                    }
    //                    else
    //                    {
    //                        value = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
    //                    }
    //                    FpSpread1.Sheets[0].Cells[i, 5].Text = value;
    //                    totalvalue = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Total"]), 2)); FpSpread1.Sheets[0].Cells[i, 6].Text = Convert.ToString(totalvalue);
    //                    //  FpSpread1.Sheets[0].Cells[i, 6].Text = Convert.ToString(ds.Tables[0].Rows[i]["Total"].ToString());
    //                    string paidvalue = "";
    //                    if (countval == 0)
    //                    {
    //                        paidvalue = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
    //                        if (paidvalue == "" || paidvalue == null)
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = "0";
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = paidvalue;
    //                        }
    //                    }


    //                    //  FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Balance"]), 2));
    //                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["RefundAmount"]), 2));
    //                    DataView dvex = new DataView();
    //                    if (ds.Tables[2].Rows.Count > 0)
    //                    {
    //                        ds.Tables[2].DefaultView.RowFilter = "LedgerFK='" + Convert.ToString(ds.Tables[0].Rows[i]["LedgerFK"]) + "'";
    //                        dvex = ds.Tables[2].DefaultView;
    //                        if (dvex.Count > 0 && dvex.Count != null)
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = Convert.ToString(Math.Round(Convert.ToDouble(dvex[0]["ExcessAmount"]), 2));
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                        }
    //                    }
    //                    else
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                    }

    //                    double totamount = 0;
    //                    double fnlamount = 0;
    //                    if (ds.Tables[1].Rows.Count > 0)
    //                    {
    //                        if (chkl_paid.Items.Count > 0)
    //                        {
    //                            for (int pay = 0; pay < chkl_paid.Items.Count; pay++)
    //                            {
    //                                if (chkl_paid.Items[pay].Selected == true)
    //                                {
    //                                    ds.Tables[1].DefaultView.RowFilter = "LedgerFK='" + Convert.ToString(ds.Tables[0].Rows[i]["LedgerFK"].ToString()) + "' and PayMode='" + Convert.ToString(chkl_paid.Items[pay].Value) + "'";
    //                                    dv = ds.Tables[1].DefaultView;
    //                                    if (dv.Count == 0 || dv.Count == null)
    //                                    {
    //                                        int count = 0;
    //                                        int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                        FpSpread1.Sheets[0].Cells[i, colnew].Text = "0";
    //                                    }
    //                                    if (dv.Count > 0)
    //                                    {
    //                                        int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                        FpSpread1.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv[0]["total"]);
    //                                        totamount = Convert.ToDouble(dv[0]["total"]);
    //                                        if (totamount != 0)
    //                                        {
    //                                            fnlamount = fnlamount + totamount;
    //                                        }
    //                                    }
    //                                }
    //                            }
    //                            if (countval != 0)
    //                                if (fnlamount != 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = Convert.ToString(fnlamount);
    //                                }
    //                            if (totalvalue != "" && totalvalue != null)
    //                            {
    //                                bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(fnlamount);
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 4].Text = Convert.ToString(bal);
    //                                if (Convert.ToDouble(bal) == 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#F08080");
    //                                }
    //                                if (Convert.ToDouble(bal) != 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#90EE90");
    //                                }

    //                            }
    //                        }
    //                    }
    //                }
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                #endregion
    //                #region grandtot
    //                FpSpread1.Sheets[0].PageSize = ds.Tables[0].Rows.Count + 1;
    //                FpSpread1.Sheets[0].Rows.Count++;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, 0].Text = "Grand Total";
    //                double hedval = 0;
    //                for (int j = 3; j < FpSpread1.Sheets[0].Columns.Count; j++)
    //                {
    //                    for (int i = 0; i < FpSpread1.Rows.Count - 1; i++)
    //                    {
    //                        string values = Convert.ToString(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                        if (values != "0" && values != "-" && values != "")
    //                        {
    //                            if (hedval == 0)
    //                            {
    //                                hedval = Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                            }
    //                            else
    //                            {
    //                                hedval = hedval + Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                            }
    //                        }
    //                    }
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, j].Text = Convert.ToString(hedval);
    //                    hedval = 0;
    //                }
    //                #endregion
    //                #region visible
    //                FpSpread1.Attributes.Add("Style", "cursor:Default; ");
    //                FpSpread1.Sheets[0].SelectionBackColor = Color.White;
    //                header.Visible = true;
    //                div1.Visible = true;
    //                FpSpread1.Visible = true;
    //                divledger.Visible = false;
    //                lbl_ledg.Visible = false;
    //                lbl_ledg.Text = "";
    //                fpledger.Visible = false;
    //                lbl_bat.Visible = false;
    //                lbl_bat.Text = "";
    //                fpbatch.Visible = false;
    //                lbl_degr.Visible = false;
    //                lbl_degr.Text = "";
    //                fpdegree.Visible = false;
    //                lbl_dep.Visible = false;
    //                lbl_dep.Text = "";
    //                fpdept.Visible = false;
    //                lbl_sem.Visible = false; ;
    //                lbl_sem.Text = "";
    //                fpsem.Visible = false;
    //                rptprint.Visible = true;
    //                // rptprint.Attributes.Add("Style", "margin-top:-499px; margin-left:10px;");
    //                lblhed.Visible = true;
    //                lblhed.Text = "Ledgers";
    //                pheaderfilter.Visible = true;
    //                pcolumnorder.Visible = true;
    //                //pnlledgercolorder.Visible = false;
    //                //Pnlledcolorder.Visible = false;
    //                //pnl_batchcolorder.Visible = false;
    //                //pnl_batcolorder.Visible = false;
    //                //pnl_degcolorder.Visible = false;
    //                //pnl_degreecolorder.Visible = false;
    //                //pnl_deptcolord.Visible = false;
    //                //pnl_deptcolorder.Visible = false;
    //                //pnl_semcolord.Visible = false;
    //                //pnl_semcolorder.Visible = false;
    //                //btn_fpled.Visible = false;
    //                //btn_fpbat.Visible = false;
    //                //btn_fpdeg.Visible = false;
    //                //btn_fpdep.Visible = false;
    //                ////  rptprint.Visible = false;
    //                //pnl_studcolord.Visible = false;
    //                //pnl_studcolorder.Visible = false;
    //                divstudcell.Visible = false;
    //                lbl_semcell.Text = "";
    //                divdept.Visible = false;
    //                divdegree.Visible = false;
    //                divbatch.Visible = false;
    //                header.Attributes.Add("Style", "height:350px; width:950px; overflow:auto");
    //                div1.Attributes.Add("Style", "height:350px; width:950px; overflow:auto");
    //                FpSpread1.Height = 330;
    //                #endregion
    //            }
    //            else
    //            {
    //                FpSpread1.Visible = false;
    //                div1.Visible = false;
    //                rptprint.Visible = false;
    //                pheaderfilter.Visible = false;
    //                pcolumnorder.Visible = false;
    //                lblhed.Text = "";
    //                imgdiv2.Visible = true;
    //                lbl_alert.Visible = true;
    //                lbl_alert.Text = "No Record Found";
    //            }
    //        }
    //    }
    //    catch { }
    //}
    //#endregion

    //#region batchmethod
    //public void batchvalues()
    //{
    //    try
    //    {
    //        if (ds.Tables.Count > 0)
    //        {
    //            if (ds.Tables[0].Rows.Count > 0)
    //            {
    //                #region design
    //                loadcolumns();
    //                DataView dv = new DataView();
    //                FpSpread1.Sheets[0].RowCount = 0;
    //                FpSpread1.Sheets[0].ColumnCount = 0;
    //                FpSpread1.CommandBar.Visible = false;
    //                FpSpread1.Sheets[0].AutoPostBack = true;
    //                FpSpread1.Sheets[0].ColumnHeader.RowCount = 2;
    //                FpSpread1.Sheets[0].RowHeader.Visible = false;
    //                FpSpread1.Sheets[0].ColumnCount = 5;
    //                FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
    //                darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
    //                darkstyle.ForeColor = Color.White;
    //                FpSpread1.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
    //                int check = 0;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;

    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Batch Year";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Left;
    //                FpSpread1.Sheets[0].Columns[1].Visible = true;

    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Allot";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[2].Visible = true;
    //                if (!colord.Contains("1"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[2].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[2].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Concession";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[3].Visible = true;
    //                if (!colord.Contains("2"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[3].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[3].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Government";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[4].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[4].Visible = true;
    //                if (!colord.Contains("3"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[4].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[4].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("4"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
    //                Hashtable newhash = new Hashtable();
    //                if (chkl_paid.Items.Count > 0)
    //                {
    //                    for (int s = 0; s < chkl_paid.Items.Count; s++)
    //                    {
    //                        if (chkl_paid.Items[s].Selected == true)
    //                        {
    //                            check++;
    //                            FpSpread1.Sheets[0].ColumnCount++;
    //                            newhash.Add(Convert.ToString(chkl_paid.Items[s].Value), FpSpread1.Sheets[0].ColumnCount - 1);
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_paid.Items[s].Text);
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                            if (!colord.Contains("5"))
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                            }
    //                            if (colord.Count == 0)
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                            }
    //                        }
    //                    }
    //                    if (check != 0)
    //                    {
    //                        FpSpread1.Sheets[0].ColumnCount++;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total Paid";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                        if (!colord.Contains("5"))
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                        }
    //                        if (colord.Count == 0)
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        }
    //                    }
    //                }
    //                if (check == 0)
    //                {
    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Paid";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("5"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }

    //                }
    //                else
    //                {
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 1, check + 1);
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Paid";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[6].HorizontalAlign = HorizontalAlign.Right;
    //                    if (!colord.Contains("5"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[6].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[6].Visible = true;
    //                    }

    //                }
    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Balance";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("6"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Refund Amount";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("7"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Excess Amount ";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("8"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Fine Amount ";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("9"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                #endregion
    //                #region value
    //                string totalvalue = "";
    //                double bal = 0;
    //                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
    //                {
    //                    FpSpread1.Sheets[0].Rows.Count = ds.Tables[0].Rows.Count;
    //                    FpSpread1.Sheets[0].Cells[i, 0].Text = Convert.ToString(i + 1);
    //                    FpSpread1.Sheets[0].Cells[i, 1].Text = Convert.ToString(ds.Tables[0].Rows[i]["batch_year"].ToString());
    //                    FpSpread1.Sheets[0].Cells[i, 1].Tag = Convert.ToString(ds.Tables[0].Rows[i]["batch_year"].ToString());
    //                    allot = Convert.ToString(ds.Tables[0].Rows[i]["Allot"]);
    //                    if (allot != "" && allot != null)
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, 2].Text = Convert.ToString(Math.Round(Convert.ToDouble(allot), 2));
    //                    }
    //                    else
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, 2].Text = "0";
    //                    }
    //                    consession = Convert.ToString(ds.Tables[0].Rows[i]["consustion"]);
    //                    if (consession != "" && consession != null)
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(consession), 2));
    //                    }
    //                    else
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, 3].Text = "0";
    //                    }
    //                    //  FpSpread1.Sheets[0].Cells[i, 2].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Allot"]), 2));
    //                    // FpSpread1.Sheets[0].Cells[i, 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Consustion"]), 2));

    //                    string val = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
    //                    string value = "";
    //                    if (val == "" || val == null)
    //                    {
    //                        value = "0";
    //                    }
    //                    else
    //                    {
    //                        value = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
    //                    }
    //                    FpSpread1.Sheets[0].Cells[i, 4].Text = value;
    //                    totalvalue = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Total"]), 2)); FpSpread1.Sheets[0].Cells[i, 5].Text = Convert.ToString(totalvalue);
    //                    // FpSpread1.Sheets[0].Cells[i, 5].Text = Convert.ToString(ds.Tables[0].Rows[i]["Total"].ToString());
    //                    string paidvalue = "";
    //                    if (check == 0)
    //                    {
    //                        paidvalue = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
    //                        if (paidvalue == "" || paidvalue == null)
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = "0";
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = paidvalue;
    //                        }
    //                    }
    //                    if (check != 0)
    //                    {
    //                        paidvalue = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
    //                        //if (paidvalue == "" || paidvalue == null)
    //                        //{
    //                        //    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                        //}
    //                        //else
    //                        //{
    //                        //    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = paidvalue;
    //                        //}
    //                    }

    //                    // FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Balance"]), 2));

    //                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["RefundAmount"]), 2));
    //                    DataView dvex = new DataView();
    //                    if (ds.Tables[2].Rows.Count > 0)
    //                    {
    //                        ds.Tables[2].DefaultView.RowFilter = "Batch_Year='" + Convert.ToString(ds.Tables[0].Rows[i]["Batch_Year"]) + "'";
    //                        dvex = ds.Tables[2].DefaultView;
    //                        if (dvex.Count > 0 && dvex.Count != null)
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = Convert.ToString(dvex[0]["ExcessAmount"]);
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                        }
    //                    }
    //                    else
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                    }

    //                    double totamount = 0;
    //                    double fnlamount = 0;
    //                    if (ds.Tables[1].Rows.Count > 0)
    //                    {
    //                        if (chkl_paid.Items.Count > 0)
    //                        {
    //                            for (int pay = 0; pay < chkl_paid.Items.Count; pay++)
    //                            {
    //                                if (chkl_paid.Items[pay].Selected == true)
    //                                {
    //                                    ds.Tables[1].DefaultView.RowFilter = "batch_year='" + Convert.ToString(ds.Tables[0].Rows[i]["batch_year"].ToString()) + "' and PayMode='" + Convert.ToString(chkl_paid.Items[pay].Value) + "'";
    //                                    dv = ds.Tables[1].DefaultView;
    //                                    if (dv.Count == 0 || dv.Count == null)
    //                                    {
    //                                        int count = 0;
    //                                        int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                        FpSpread1.Sheets[0].Cells[i, colnew].Text = "0";
    //                                    }
    //                                    if (dv.Count > 0)
    //                                    {
    //                                        int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                        FpSpread1.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv[0]["total"]);
    //                                        totamount = Convert.ToDouble(dv[0]["total"]);
    //                                        if (totamount != 0)
    //                                        {
    //                                            fnlamount = fnlamount + totamount;
    //                                        }
    //                                    }
    //                                }
    //                            }
    //                            if (check != 0)
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = Convert.ToString(fnlamount);
    //                            if (totalvalue != "" && totalvalue != null)
    //                            {
    //                                bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(fnlamount);
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 4].Text = Convert.ToString(bal);
    //                                if (Convert.ToDouble(bal) == 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#F08080");
    //                                }
    //                                if (Convert.ToDouble(bal) != 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#90EE90");
    //                                }
    //                                //if (Convert.ToDouble(totalvalue) == Convert.ToDouble(fnlamount))
    //                                //{
    //                                //    FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#FFA500");
    //                                //}
    //                            }
    //                        }
    //                    }
    //                }
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                #endregion
    //                #region grandtot
    //                FpSpread1.Sheets[0].PageSize = ds.Tables[0].Rows.Count + 1;
    //                FpSpread1.Sheets[0].Rows.Count++;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, 0].Text = "Grand Total";
    //                double hedval = 0;
    //                for (int j = 2; j < FpSpread1.Sheets[0].Columns.Count; j++)
    //                {
    //                    for (int i = 0; i < FpSpread1.Rows.Count - 1; i++)
    //                    {
    //                        string values = Convert.ToString(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                        if (values != "0" && values != "-" && values != "")
    //                        {
    //                            if (hedval == 0)
    //                            {
    //                                hedval = Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                            }
    //                            else
    //                            {
    //                                hedval = hedval + Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                            }
    //                        }
    //                    }
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, j].Text = Convert.ToString(hedval);
    //                    hedval = 0;
    //                }
    //                #endregion
    //                #region visible
    //                FpSpread1.Attributes.Add("Style", "cursor:Default;");
    //                FpSpread1.Sheets[0].SelectionBackColor = Color.White;
    //                header.Visible = true;
    //                div1.Visible = true;
    //                FpSpread1.Visible = true;
    //                divledger.Visible = false;
    //                lbl_ledg.Visible = false;
    //                lbl_ledg.Text = "";
    //                fpledger.Visible = false;
    //                lbl_bat.Visible = false;
    //                lbl_bat.Text = "";
    //                fpbatch.Visible = false;
    //                lbl_degr.Visible = false;
    //                lbl_degr.Text = "";
    //                fpdegree.Visible = false;
    //                lbl_dep.Visible = false;
    //                lbl_dep.Text = "";
    //                fpdept.Visible = false;
    //                lbl_sem.Visible = false; ;
    //                lbl_sem.Text = "";
    //                fpsem.Visible = false;
    //                rptprint.Visible = true;
    //                // rptprint.Attributes.Add("Style", "margin-top:-499px; margin-left:10px;");
    //                lblhed.Visible = true;
    //                lblhed.Text = "Batch";
    //                pheaderfilter.Visible = true;
    //                pcolumnorder.Visible = true;
    //                //pnlledgercolorder.Visible = false;
    //                //Pnlledcolorder.Visible = false;
    //                //pnl_batchcolorder.Visible = false;
    //                //pnl_batcolorder.Visible = false;
    //                //pnl_degcolorder.Visible = false;
    //                //pnl_degreecolorder.Visible = false;
    //                //pnl_deptcolord.Visible = false;
    //                //pnl_deptcolorder.Visible = false;
    //                //pnl_semcolord.Visible = false;
    //                //pnl_semcolorder.Visible = false;
    //                //btn_fpled.Visible = false;
    //                //btn_fpbat.Visible = false;
    //                //btn_fpdeg.Visible = false;
    //                //btn_fpdep.Visible = false;
    //                //// rptprint.Visible = false;
    //                //pnl_studcolord.Visible = false;
    //                //pnl_studcolorder.Visible = false;
    //                divstudcell.Visible = false;
    //                lbl_semcell.Text = "";
    //                divdept.Visible = false;
    //                divdegree.Visible = false;
    //                divbatch.Visible = false;
    //                header.Attributes.Add("Style", "height:350px; width:950px; overflow:auto");
    //                div1.Attributes.Add("Style", "height:350px; width:950px; overflow:auto");
    //                FpSpread1.Height = 330;
    //                #endregion


    //            }
    //            else
    //            {
    //                FpSpread1.Visible = false;
    //                div1.Visible = false;
    //                rptprint.Visible = false;
    //                pheaderfilter.Visible = false;
    //                pcolumnorder.Visible = false;
    //                lblhed.Text = "";
    //                imgdiv2.Visible = true;
    //                lbl_alert.Visible = true;
    //                lbl_alert.Text = "No Record Found";
    //            }
    //        }
    //    }
    //    catch { }
    //}
    //#endregion

    //#region degreemethod
    //public void degreevalues()
    //{
    //    try
    //    {
    //        if (ds.Tables.Count > 0)
    //        {
    //            if (ds.Tables[0].Rows.Count > 0)
    //            {
    //                #region design
    //                loadcolumns();
    //                DataView dv = new DataView();
    //                FpSpread1.Sheets[0].RowCount = 0;
    //                FpSpread1.Sheets[0].ColumnCount = 0;
    //                FpSpread1.CommandBar.Visible = false;
    //                FpSpread1.Sheets[0].AutoPostBack = true;
    //                FpSpread1.Sheets[0].ColumnHeader.RowCount = 2;
    //                FpSpread1.Sheets[0].RowHeader.Visible = false;
    //                FpSpread1.Sheets[0].ColumnCount = 5;
    //                FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
    //                darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
    //                darkstyle.ForeColor = Color.White;
    //                FpSpread1.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
    //                int countval = 0;

    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;

    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Text = " Degree Name";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Left;
    //                FpSpread1.Sheets[0].Columns[1].Visible = true;

    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Allot";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[2].Visible = true;
    //                if (!colord.Contains("1"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[2].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[2].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Concession";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[3].Visible = true;
    //                if (!colord.Contains("2"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[3].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[3].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Government";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[4].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[4].Visible = true;
    //                if (!colord.Contains("3"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[4].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[4].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("4"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
    //                Hashtable newhash = new Hashtable();
    //                if (chkl_paid.Items.Count > 0)
    //                {
    //                    for (int s = 0; s < chkl_paid.Items.Count; s++)
    //                    {
    //                        if (chkl_paid.Items[s].Selected == true)
    //                        {
    //                            countval++;
    //                            FpSpread1.Sheets[0].ColumnCount++;
    //                            newhash.Add(Convert.ToString(chkl_paid.Items[s].Value), FpSpread1.Sheets[0].ColumnCount - 1);
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_paid.Items[s].Text);
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                            if (!colord.Contains("5"))
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                            }
    //                            if (colord.Count == 0)
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                            }
    //                            //  FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                        }
    //                    }
    //                    if (countval != 0)
    //                    {
    //                        FpSpread1.Sheets[0].ColumnCount++;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total Paid";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                        if (!colord.Contains("5"))
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                        }
    //                        if (colord.Count == 0)
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        }
    //                    }
    //                }
    //                if (countval == 0)
    //                {
    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Paid";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("5"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                }
    //                else
    //                {
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 1, countval + 1);
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Paid";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[6].HorizontalAlign = HorizontalAlign.Right;
    //                    if (!colord.Contains("5"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[6].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[6].Visible = true;
    //                    }
    //                }
    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Balance";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("6"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Refund Amount";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("7"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Excess Amount";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("8"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Fine Amount";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("9"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                #endregion
    //                #region value
    //                string totalvalue = "";
    //                double bal = 0;
    //                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
    //                {

    //                    FpSpread1.Sheets[0].Rows.Count = ds.Tables[0].Rows.Count;
    //                    FpSpread1.Sheets[0].Cells[i, 0].Text = Convert.ToString(i + 1);
    //                    FpSpread1.Sheets[0].Cells[i, 1].Text = Convert.ToString(ds.Tables[0].Rows[i]["DegreeName"].ToString());
    //                    FpSpread1.Sheets[0].Cells[i, 1].Tag = Convert.ToString(ds.Tables[0].Rows[i]["Course_Id"].ToString());
    //                    allot = Convert.ToString(ds.Tables[0].Rows[i]["Allot"]);
    //                    if (allot != "" && allot != null)
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, 2].Text = Convert.ToString(Math.Round(Convert.ToDouble(allot), 2));
    //                    }
    //                    else
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, 2].Text = "0";
    //                    }
    //                    consession = Convert.ToString(ds.Tables[0].Rows[i]["consustion"]);
    //                    if (consession != "" && consession != null)
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(consession), 2));
    //                    }
    //                    else
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, 3].Text = "0";
    //                    }
    //                    //  FpSpread1.Sheets[0].Cells[i, 2].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Allot"]), 2));
    //                    // FpSpread1.Sheets[0].Cells[i, 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Consustion"]), 2));
    //                    string val = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
    //                    string value = "";
    //                    if (val == "" || val == null)
    //                    {
    //                        value = "0";
    //                    }
    //                    else
    //                    {
    //                        value = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
    //                    }
    //                    FpSpread1.Sheets[0].Cells[i, 4].Text = value;

    //                    totalvalue = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Total"]), 2)); FpSpread1.Sheets[0].Cells[i, 5].Text = Convert.ToString(totalvalue);
    //                    //  FpSpread1.Sheets[0].Cells[i, 5].Text = Convert.ToString(ds.Tables[0].Rows[i]["Total"].ToString());
    //                    string paidvalue = "";
    //                    if (countval == 0)
    //                    {
    //                        paidvalue = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
    //                        if (paidvalue == "" || paidvalue == null)
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = "0";
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = paidvalue;
    //                        }
    //                    }
    //                    if (countval != 0)
    //                    {
    //                        paidvalue = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
    //                        //if (paidvalue == "" || paidvalue == null)
    //                        //{
    //                        //    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                        //}
    //                        //else
    //                        //{
    //                        //    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = paidvalue;
    //                        //}
    //                    }
    //                    //  FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Balance"]), 2));

    //                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["RefundAmount"]), 2));
    //                    DataView dvex = new DataView();
    //                    if (ds.Tables[2].Rows.Count > 0)
    //                    {
    //                        ds.Tables[2].DefaultView.RowFilter = "Course_Id='" + Convert.ToString(ds.Tables[0].Rows[i]["Course_Id"]) + "'";
    //                        dvex = ds.Tables[2].DefaultView;
    //                        if (dvex.Count > 0 && dvex.Count != null)
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = Convert.ToString(dvex[0]["ExcessAmount"]);
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                        }
    //                    }
    //                    else
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                    }
    //                    //FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["RefundAmount"]), 2));
    //                    double totamount = 0;
    //                    double fnlamount = 0;
    //                    if (ds.Tables[1].Rows.Count > 0)
    //                    {
    //                        if (chkl_paid.Items.Count > 0)
    //                        {
    //                            for (int pay = 0; pay < chkl_paid.Items.Count; pay++)
    //                            {
    //                                if (chkl_paid.Items[pay].Selected == true)
    //                                {
    //                                    ds.Tables[1].DefaultView.RowFilter = "Course_Id='" + Convert.ToString(ds.Tables[0].Rows[i]["Course_Id"].ToString()) + "' and PayMode='" + Convert.ToString(chkl_paid.Items[pay].Value) + "'";
    //                                    dv = ds.Tables[1].DefaultView;
    //                                    if (dv.Count == 0 || dv.Count == null)
    //                                    {
    //                                        int count = 0;
    //                                        int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                        FpSpread1.Sheets[0].Cells[i, colnew].Text = "0";
    //                                    }
    //                                    if (dv.Count > 0)
    //                                    {
    //                                        int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                        FpSpread1.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv[0]["total"]);
    //                                        totamount = Convert.ToDouble(dv[0]["total"]);
    //                                        if (totamount != 0)
    //                                        {
    //                                            fnlamount = fnlamount + totamount;
    //                                        }
    //                                    }
    //                                }
    //                            }
    //                            if (countval != 0)
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = Convert.ToString(fnlamount);
    //                            if (totalvalue != "" && totalvalue != null)
    //                            {
    //                                bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(fnlamount);
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 4].Text = Convert.ToString(bal);
    //                                if (Convert.ToDouble(bal) == 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#F08080");
    //                                }
    //                                if (Convert.ToDouble(bal) != 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#90EE90");
    //                                }
    //                                //if (Convert.ToDouble(totalvalue) == Convert.ToDouble(fnlamount))
    //                                //{
    //                                //    FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#FFA500");
    //                                //}
    //                            }
    //                        }
    //                    }
    //                }
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                #endregion
    //                #region grandtot
    //                FpSpread1.Sheets[0].PageSize = ds.Tables[0].Rows.Count + 1;
    //                FpSpread1.Sheets[0].Rows.Count++;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, 0].Text = "Grand Total";
    //                double hedval = 0;
    //                for (int j = 2; j < FpSpread1.Sheets[0].Columns.Count; j++)
    //                {
    //                    for (int i = 0; i < FpSpread1.Rows.Count - 1; i++)
    //                    {
    //                        string values = Convert.ToString(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                        if (values != "0" && values != "-" && values != "")
    //                        {
    //                            if (hedval == 0)
    //                            {
    //                                hedval = Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                            }
    //                            else
    //                            {
    //                                hedval = hedval + Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                            }
    //                        }
    //                    }
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, j].Text = Convert.ToString(hedval);
    //                    hedval = 0;
    //                }
    //                #endregion
    //                #region visible
    //                FpSpread1.Attributes.Add("Style", "cursor:Default;");
    //                FpSpread1.Sheets[0].SelectionBackColor = Color.White;
    //                header.Visible = true;
    //                div1.Visible = true;
    //                FpSpread1.Visible = true;
    //                divledger.Visible = false;
    //                lbl_ledg.Visible = false;
    //                lbl_ledg.Text = "";
    //                fpledger.Visible = false;
    //                lbl_bat.Visible = false;
    //                lbl_bat.Text = "";
    //                fpbatch.Visible = false;
    //                lbl_degr.Visible = false;
    //                lbl_degr.Text = "";
    //                fpdegree.Visible = false;
    //                lbl_dep.Visible = false;
    //                lbl_dep.Text = "";
    //                fpdept.Visible = false;
    //                lbl_sem.Visible = false; ;
    //                lbl_sem.Text = "";
    //                fpsem.Visible = false;
    //                rptprint.Visible = true;
    //                //  rptprint.Attributes.Add("Style", "margin-top:-499px; margin-left:10px;");
    //                lblhed.Visible = true;
    //                lblhed.Text = "Degree";
    //                pheaderfilter.Visible = true;
    //                pcolumnorder.Visible = true;
    //                //pnlledgercolorder.Visible = false;
    //                //Pnlledcolorder.Visible = false;
    //                //pnl_batchcolorder.Visible = false;
    //                //pnl_batcolorder.Visible = false;
    //                //pnl_degcolorder.Visible = false;
    //                //pnl_degreecolorder.Visible = false;
    //                //pnl_deptcolord.Visible = false;
    //                //pnl_deptcolorder.Visible = false;
    //                //pnl_semcolord.Visible = false;
    //                //pnl_semcolorder.Visible = false;
    //                //btn_fpled.Visible = false;
    //                //btn_fpbat.Visible = false;
    //                //btn_fpdeg.Visible = false;
    //                //btn_fpdep.Visible = false;
    //                ////  rptprint.Visible = false;
    //                //pnl_studcolord.Visible = false;
    //                //pnl_studcolorder.Visible = false;
    //                divstudcell.Visible = false;
    //                lbl_semcell.Text = "";
    //                divdept.Visible = false;
    //                divdegree.Visible = false;
    //                divbatch.Visible = false;
    //                header.Attributes.Add("Style", "height:350px; width:950px; overflow:auto");
    //                div1.Attributes.Add("Style", "height:350px; width:950px; overflow:auto");
    //                FpSpread1.Height = 330;
    //                #endregion


    //            }
    //            else
    //            {
    //                FpSpread1.Visible = false;
    //                div1.Visible = false;
    //                rptprint.Visible = false;
    //                pheaderfilter.Visible = false;
    //                pcolumnorder.Visible = false;
    //                lblhed.Text = "";
    //                imgdiv2.Visible = true;
    //                lbl_alert.Visible = true;
    //                lbl_alert.Text = "No Record Found";
    //            }
    //        }
    //    }
    //    catch { }
    //}
    //#endregion

    //#region deptmethod
    //public void deptvalues()
    //{
    //    try
    //    {
    //        if (ds.Tables.Count > 0)
    //        {
    //            if (ds.Tables[0].Rows.Count > 0)
    //            {
    //                #region common
    //                if (rbdeptcommon.Checked == true)
    //                {
    //                    #region design
    //                    loadcolumns();
    //                    DataView dv = new DataView();
    //                    FpSpread1.Sheets[0].RowCount = 0;
    //                    FpSpread1.Sheets[0].ColumnCount = 0;
    //                    FpSpread1.CommandBar.Visible = false;
    //                    FpSpread1.Sheets[0].AutoPostBack = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.RowCount = 2;
    //                    FpSpread1.Sheets[0].RowHeader.Visible = false;
    //                    FpSpread1.Sheets[0].ColumnCount = 6;
    //                    FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
    //                    darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
    //                    darkstyle.ForeColor = Color.White;
    //                    FpSpread1.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
    //                    int countval = 0;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;

    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Course Name";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Left;
    //                    FpSpread1.Sheets[0].Columns[1].Visible = true;

    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Department Name";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Left;
    //                    FpSpread1.Sheets[0].Columns[2].Visible = true;

    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Allot";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[3].Visible = true;
    //                    if (!colord.Contains("1"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[3].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[3].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Concession";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[4].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[4].Visible = true;
    //                    if (!colord.Contains("2"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[4].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[4].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Government";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[5].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[5].Visible = true;
    //                    if (!colord.Contains("3"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[5].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[5].Visible = true;
    //                    }

    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("4"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 5, 2, 1);
    //                    Hashtable newhash = new Hashtable();
    //                    int colo = 0;
    //                    if (chkl_paid.Items.Count > 0)
    //                    {
    //                        for (int s = 0; s < chkl_paid.Items.Count; s++)
    //                        {
    //                            if (chkl_paid.Items[s].Selected == true)
    //                            {
    //                                countval++;
    //                                FpSpread1.Sheets[0].ColumnCount++;
    //                                newhash.Add(Convert.ToString(chkl_paid.Items[s].Value), FpSpread1.Sheets[0].ColumnCount - 1);
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_paid.Items[s].Text);
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                if (!colord.Contains("5"))
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                }
    //                                if (colord.Count == 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                }
    //                                //  FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                            }
    //                        }
    //                        if (countval != 0)
    //                        {
    //                            FpSpread1.Sheets[0].ColumnCount++;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total Paid";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                            if (!colord.Contains("5"))
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                            }
    //                            //if (!colord.Contains("Paid"))
    //                            //{
    //                            //    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;

    //                            //}
    //                            if (colord.Count == 0)
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                            }
    //                        }
    //                    }
    //                    if (countval == 0)
    //                    {
    //                        FpSpread1.Sheets[0].ColumnCount++;
    //                        colo = Convert.ToInt32(FpSpread1.Sheets[0].ColumnCount);
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Paid";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        if (!colord.Contains("5"))
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                        }
    //                        if (colord.Count == 0)
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        }
    //                    }
    //                    else
    //                    {
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 7, 1, countval + 1);
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].Text = "Paid";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[7].HorizontalAlign = HorizontalAlign.Right;
    //                        if (!colord.Contains("5"))
    //                        {
    //                            FpSpread1.Sheets[0].Columns[7].Visible = false;
    //                        }
    //                        if (colord.Count == 0)
    //                        {
    //                            FpSpread1.Sheets[0].Columns[7].Visible = true;
    //                        }

    //                    }
    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Balance";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("6"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Refund Amount";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("7"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Excess Amount";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("8"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Fine Amount";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("9"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                    #endregion
    //                    #region value
    //                    string totalvalue = "";
    //                    double bal = 0;
    //                    for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
    //                    {
    //                        FpSpread1.Sheets[0].Rows.Count = ds.Tables[0].Rows.Count;
    //                        FpSpread1.Sheets[0].Cells[i, 0].Text = Convert.ToString(i + 1);
    //                        string Degrecode = Convert.ToString(ds.Tables[0].Rows[i]["Degree_code"].ToString());
    //                        DataView dnew = new DataView();
    //                        if (ds.Tables[4].Rows.Count > 0)
    //                        {
    //                            ds.Tables[4].DefaultView.RowFilter = "Degree_code='" + Convert.ToString(ds.Tables[0].Rows[i]["Degree_code"]) + "' ";
    //                            dnew = ds.Tables[4].DefaultView;
    //                            if (dnew.Count > 0)
    //                            {
    //                                FpSpread1.Sheets[0].Cells[i, 1].Text = Convert.ToString(dnew[0]["Course_Name"]);
    //                                FpSpread1.Sheets[0].Cells[i, 2].Text = Convert.ToString(dnew[0]["Dept_Name"]);
    //                                //FpSpread1.Sheets[0].Cells[i, 2].Tag = Convert.ToString(ds.Tables[0].Rows[i]["Dept_Code"].ToString());
    //                            }
    //                        }

    //                        allot = Convert.ToString(ds.Tables[0].Rows[i]["Allot"]);
    //                        if (allot != "" && allot != null)
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(allot), 2));
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, 3].Text = "0";
    //                        }
    //                        consession = Convert.ToString(ds.Tables[0].Rows[i]["consustion"]);
    //                        if (consession != "" && consession != null)
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(consession), 2));
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, 4].Text = "0";
    //                        }
    //                        //   FpSpread1.Sheets[0].Cells[i, 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Allot"]), 2));
    //                        // FpSpread1.Sheets[0].Cells[i, 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Consustion"]), 2));
    //                        // FpSpread1.Sheets[0].Cells[i, 5].Text = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
    //                        string val = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
    //                        string value = "";
    //                        if (val == "" || val == null)
    //                        {
    //                            value = "0";
    //                        }
    //                        else
    //                        {
    //                            value = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
    //                        }
    //                        FpSpread1.Sheets[0].Cells[i, 5].Text = value;
    //                        totalvalue = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Total"]), 2)); FpSpread1.Sheets[0].Cells[i, 6].Text = Convert.ToString(totalvalue);
    //                        //   FpSpread1.Sheets[0].Cells[i, 6].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Total"]), 2));
    //                        string paidvalue = "";
    //                        if (countval == 0)
    //                        {
    //                            paidvalue = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
    //                            if (paidvalue == "" || paidvalue == null)
    //                            {
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = "0";
    //                            }
    //                            else
    //                            {
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = paidvalue;
    //                            }
    //                        }
    //                        if (countval != 0)
    //                        {
    //                            paidvalue = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
    //                            //if (paidvalue == "" || paidvalue == null)
    //                            //{
    //                            //    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                            //}
    //                            //else
    //                            //{
    //                            //    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = paidvalue;
    //                            //}
    //                        }
    //                        //  FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Paid"]), 2));
    //                        //   FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Balance"]), 2));

    //                        FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["RefundAmount"]), 2));

    //                        DataView dvex = new DataView();
    //                        if (ds.Tables[3].Rows.Count > 0)
    //                        {
    //                            ds.Tables[3].DefaultView.RowFilter = "Degree_code='" + Convert.ToString(ds.Tables[0].Rows[i]["Degree_code"]) + "'";
    //                            dvex = ds.Tables[3].DefaultView;
    //                            if (dvex.Count > 0)
    //                            {
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = Convert.ToString(dvex[0]["ExcessAmount"]);
    //                            }
    //                            else
    //                            {
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                            }
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                        }
    //                        //FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["RefundAmount"]), 2));
    //                        double totamount = 0;
    //                        double fnlamount = 0;
    //                        if (ds.Tables[1].Rows.Count > 0)
    //                        {
    //                            if (chkl_paid.Items.Count > 0)
    //                            {
    //                                for (int pay = 0; pay < chkl_paid.Items.Count; pay++)
    //                                {
    //                                    if (chkl_paid.Items[pay].Selected == true)
    //                                    {
    //                                        ds.Tables[1].DefaultView.RowFilter = "Degree_code='" + Convert.ToString(ds.Tables[0].Rows[i]["Degree_code"].ToString()) + "' and PayMode='" + Convert.ToString(chkl_paid.Items[pay].Value) + "'";
    //                                        dv = ds.Tables[1].DefaultView;
    //                                        if (dv.Count == 0 || dv.Count == null)
    //                                        {
    //                                            int count = 0;
    //                                            int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                            FpSpread1.Sheets[0].Cells[i, colnew].Text = "0";
    //                                        }
    //                                        if (dv.Count > 0)
    //                                        {
    //                                            int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                            FpSpread1.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv[0]["total"]);
    //                                            totamount = Convert.ToDouble(dv[0]["total"]);
    //                                            if (totamount != 0)
    //                                            {
    //                                                fnlamount = fnlamount + totamount;
    //                                            }
    //                                        }
    //                                    }
    //                                }
    //                                if (countval != 0)
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = Convert.ToString(fnlamount);
    //                                //if (totalvalue != "" && totalvalue != null)
    //                                //{
    //                                //    bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(fnlamount);
    //                                //    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 4].Text = Convert.ToString(bal);
    //                                //    if (Convert.ToDouble(bal) == 0)
    //                                //    {
    //                                //        FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#F08080");
    //                                //    }
    //                                //    if (Convert.ToDouble(bal) != 0)
    //                                //    {
    //                                //        FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#90EE90");
    //                                //    }                                       
    //                                //}
    //                            }
    //                        }
    //                        if (totalvalue != "" && totalvalue != null)
    //                        {
    //                            bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(fnlamount);
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 4].Text = Convert.ToString(bal);
    //                            if (Convert.ToDouble(bal) == 0)
    //                            {
    //                                FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#F08080");
    //                            }
    //                            if (Convert.ToDouble(bal) != 0)
    //                            {
    //                                FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#90EE90");
    //                            }
    //                        }
    //                    }
    //                    FpSpread1.Sheets[0].AutoPostBack = true;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    #endregion
    //                    #region grandtot
    //                    FpSpread1.Sheets[0].PageSize = ds.Tables[0].Rows.Count + 1;
    //                    FpSpread1.Sheets[0].Rows.Count++;
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, 0].Text = "Grand Total";
    //                    double hedval = 0;
    //                    for (int j = 3; j < FpSpread1.Sheets[0].Columns.Count; j++)
    //                    {
    //                        for (int i = 0; i < FpSpread1.Rows.Count - 1; i++)
    //                        {
    //                            string values = Convert.ToString(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                            if (values != "0" && values != "-" && values != "")
    //                            {
    //                                if (hedval == 0)
    //                                {
    //                                    hedval = Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                                }
    //                                else
    //                                {
    //                                    hedval = hedval + Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                                }
    //                            }
    //                        }
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, j].Text = Convert.ToString(hedval);
    //                        hedval = 0;
    //                    }
    //                    #endregion
    //                    #region visible
    //                    FpSpread1.Attributes.Add("Style", "cursor:Default;");
    //                    FpSpread1.Sheets[0].SelectionBackColor = Color.White;
    //                    header.Visible = true;
    //                    div1.Visible = true;
    //                    FpSpread1.Visible = true;
    //                    divledger.Visible = false;
    //                    lbl_ledg.Visible = false;
    //                    lbl_ledg.Text = "";
    //                    fpledger.Visible = false;
    //                    lbl_bat.Visible = false;
    //                    lbl_bat.Text = "";
    //                    fpbatch.Visible = false;
    //                    lbl_degr.Visible = false;
    //                    lbl_degr.Text = "";
    //                    fpdegree.Visible = false;
    //                    lbl_dep.Visible = false;
    //                    lbl_dep.Text = "";
    //                    fpdept.Visible = false;
    //                    lbl_sem.Visible = false; ;
    //                    lbl_sem.Text = "";
    //                    fpsem.Visible = false;
    //                    rptprint.Visible = true;
    //                    //  rptprint.Attributes.Add("Style", "margin-top:-499px; margin-left:10px;");
    //                    lblhed.Visible = true;
    //                    lblhed.Text = "Department";
    //                    pheaderfilter.Visible = true;
    //                    pcolumnorder.Visible = true;
    //                    //pnlledgercolorder.Visible = false;
    //                    //Pnlledcolorder.Visible = false;
    //                    //pnl_batchcolorder.Visible = false;
    //                    //pnl_batcolorder.Visible = false;
    //                    //pnl_degcolorder.Visible = false;
    //                    //pnl_degreecolorder.Visible = false;
    //                    //pnl_deptcolord.Visible = false;
    //                    //pnl_deptcolorder.Visible = false;
    //                    //pnl_semcolord.Visible = false;
    //                    //pnl_semcolorder.Visible = false;
    //                    //btn_fpled.Visible = false;
    //                    //btn_fpbat.Visible = false;
    //                    //btn_fpdeg.Visible = false;
    //                    //btn_fpdep.Visible = false;
    //                    ////   rptprint.Visible = false;
    //                    //pnl_studcolord.Visible = false;
    //                    //pnl_studcolorder.Visible = false;
    //                    divstudcell.Visible = false;
    //                    lbl_semcell.Text = "";
    //                    divdept.Visible = false;
    //                    divdegree.Visible = false;
    //                    divbatch.Visible = false;
    //                    header.Attributes.Add("Style", "height:350px; width:950px; overflow:auto");
    //                    div1.Attributes.Add("Style", "height:350px; width:950px; overflow:auto");
    //                    FpSpread1.Height = 330;
    //                    #endregion

    //                }
    //                #endregion
    //                #region details
    //                else if (rbdeptdetail.Checked == true)
    //                {
    //                    #region year
    //                    if (rbdeptyear.Checked == true)
    //                    {
    //                        lblhed.Text = "Department-->Year";
    //                        #region design
    //                        loadcolumns();
    //                        DataView dv = new DataView();
    //                        FpSpread1.Sheets[0].RowCount = 0;
    //                        FpSpread1.Sheets[0].ColumnCount = 0;
    //                        FpSpread1.CommandBar.Visible = false;
    //                        FpSpread1.Sheets[0].AutoPostBack = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.RowCount = 2;
    //                        FpSpread1.Sheets[0].RowHeader.Visible = false;
    //                        FpSpread1.Sheets[0].ColumnCount = 7;
    //                        FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
    //                        darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
    //                        darkstyle.ForeColor = Color.White;
    //                        FpSpread1.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
    //                        int countval = 0;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;

    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Course Name";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Left;
    //                        FpSpread1.Sheets[0].Columns[1].Visible = true;

    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Department Name";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Left;
    //                        FpSpread1.Sheets[0].Columns[2].Visible = true;

    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Semester";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Left;
    //                        FpSpread1.Sheets[0].Columns[3].Visible = true;

    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Allot";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[4].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].Columns[4].Visible = true;
    //                        if (!colord.Contains("1"))
    //                        {
    //                            FpSpread1.Sheets[0].Columns[4].Visible = false;
    //                        }
    //                        if (colord.Count == 0)
    //                        {
    //                            FpSpread1.Sheets[0].Columns[4].Visible = true;
    //                        }
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Concession";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[5].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].Columns[5].Visible = true;
    //                        if (!colord.Contains("2"))
    //                        {
    //                            FpSpread1.Sheets[0].Columns[5].Visible = false;
    //                        }
    //                        if (colord.Count == 0)
    //                        {
    //                            FpSpread1.Sheets[0].Columns[5].Visible = true;
    //                        }
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Government";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[6].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].Columns[6].Visible = true;
    //                        if (!colord.Contains("3"))
    //                        {
    //                            FpSpread1.Sheets[0].Columns[6].Visible = false;
    //                        }
    //                        if (colord.Count == 0)
    //                        {
    //                            FpSpread1.Sheets[0].Columns[6].Visible = true;
    //                        }

    //                        FpSpread1.Sheets[0].ColumnCount++;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        if (!colord.Contains("4"))
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                        }
    //                        if (colord.Count == 0)
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        }
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);


    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 5, 2, 1);
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 2, 1);

    //                        Hashtable newhash = new Hashtable();

    //                        if (chkl_paid.Items.Count > 0)
    //                        {
    //                            for (int s = 0; s < chkl_paid.Items.Count; s++)
    //                            {
    //                                if (chkl_paid.Items[s].Selected == true)
    //                                {
    //                                    countval++;
    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    newhash.Add(Convert.ToString(chkl_paid.Items[s].Value), FpSpread1.Sheets[0].ColumnCount - 1);
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_paid.Items[s].Text);
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    if (!colord.Contains("5"))
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                    }
    //                                    if (colord.Count == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    }
    //                                    //  FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                                }
    //                            }
    //                            if (countval != 0)
    //                            {
    //                                FpSpread1.Sheets[0].ColumnCount++;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total Paid";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                if (!colord.Contains("5"))
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                }
    //                                //if (!colord.Contains("Paid"))
    //                                //{
    //                                //    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;

    //                                //}
    //                                if (colord.Count == 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                }
    //                            }
    //                        }
    //                        if (countval == 0)
    //                        {
    //                            FpSpread1.Sheets[0].ColumnCount++;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Paid";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                            FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                            if (!colord.Contains("5"))
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                            }
    //                            if (colord.Count == 0)
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                            }
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 8, 1, countval + 1);
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, 8].Text = "Paid";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, 8].ForeColor = ColorTranslator.FromHtml("#000000");
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, 8].Font.Bold = true;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, 8].Font.Name = "Book Antiqua";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, 8].Font.Size = FontUnit.Medium;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, 8].HorizontalAlign = HorizontalAlign.Center;
    //                            FpSpread1.Sheets[0].Columns[8].HorizontalAlign = HorizontalAlign.Right;
    //                            if (!colord.Contains("5"))
    //                            {
    //                                FpSpread1.Sheets[0].Columns[8].Visible = false;
    //                            }
    //                            if (colord.Count == 0)
    //                            {
    //                                FpSpread1.Sheets[0].Columns[8].Visible = true;
    //                            }

    //                        }
    //                        FpSpread1.Sheets[0].ColumnCount++;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Balance";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        if (!colord.Contains("6"))
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                        }
    //                        if (colord.Count == 0)
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        }
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                        FpSpread1.Sheets[0].ColumnCount++;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Refund Amount";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        if (!colord.Contains("7"))
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                        }
    //                        if (colord.Count == 0)
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        }
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                        FpSpread1.Sheets[0].ColumnCount++;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Excess Amount";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        if (!colord.Contains("8"))
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                        }
    //                        if (colord.Count == 0)
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        }
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                        FpSpread1.Sheets[0].ColumnCount++;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Fine Amount";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        if (!colord.Contains("9"))
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                        }
    //                        if (colord.Count == 0)
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        }
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                        #endregion
    //                        #region value
    //                        string totalvalue = "";
    //                        double bal = 0;
    //                        for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
    //                        {
    //                            FpSpread1.Sheets[0].Rows.Count = ds.Tables[0].Rows.Count;
    //                            FpSpread1.Sheets[0].Cells[i, 0].Text = Convert.ToString(i + 1);
    //                            string Degrecode = Convert.ToString(ds.Tables[0].Rows[i]["Degree_code"].ToString());
    //                            DataView dnew = new DataView();
    //                            if (ds.Tables[4].Rows.Count > 0)
    //                            {
    //                                ds.Tables[4].DefaultView.RowFilter = "Degree_code='" + Convert.ToString(ds.Tables[0].Rows[i]["Degree_code"]) + "' ";
    //                                dnew = ds.Tables[4].DefaultView;
    //                                if (dnew.Count > 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Cells[i, 1].Text = Convert.ToString(dnew[0]["Course_Name"]);
    //                                    FpSpread1.Sheets[0].Cells[i, 2].Text = Convert.ToString(dnew[0]["Dept_Name"]);

    //                                }
    //                            }
    //                            FpSpread1.Sheets[0].Cells[i, 3].Text = Convert.ToString(ds.Tables[0].Rows[i]["TextVal"]);
    //                            allot = Convert.ToString(ds.Tables[1].Rows[i]["Allot"]);
    //                            if (allot != "" && allot != null)
    //                            {
    //                                FpSpread1.Sheets[0].Cells[i, 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(allot), 2));
    //                            }
    //                            else
    //                            {
    //                                FpSpread1.Sheets[0].Cells[i, 4].Text = "0";
    //                            }
    //                            consession = Convert.ToString(ds.Tables[1].Rows[i]["consustion"]);
    //                            if (consession != "" && consession != null)
    //                            {
    //                                FpSpread1.Sheets[0].Cells[i, 5].Text = Convert.ToString(Math.Round(Convert.ToDouble(consession), 2));
    //                            }
    //                            else
    //                            {
    //                                FpSpread1.Sheets[0].Cells[i, 5].Text = "0";
    //                            }
    //                            //   FpSpread1.Sheets[0].Cells[i, 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Allot"]), 2));
    //                            // FpSpread1.Sheets[0].Cells[i, 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Consustion"]), 2));
    //                            // FpSpread1.Sheets[0].Cells[i, 5].Text = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
    //                            string val = Convert.ToString(ds.Tables[1].Rows[i]["Government"].ToString());
    //                            string value = "";
    //                            if (val == "" || val == null)
    //                            {
    //                                value = "0";
    //                            }
    //                            else
    //                            {
    //                                value = Convert.ToString(ds.Tables[1].Rows[i]["Government"].ToString());
    //                            }
    //                            FpSpread1.Sheets[0].Cells[i, 6].Text = value;
    //                            totalvalue = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[1].Rows[i]["Total"]), 2)); FpSpread1.Sheets[0].Cells[i, 7].Text = Convert.ToString(totalvalue);
    //                            //   FpSpread1.Sheets[0].Cells[i, 6].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Total"]), 2));
    //                            string paidvalue = "";
    //                            if (countval == 0)
    //                            {
    //                                paidvalue = Convert.ToString(ds.Tables[1].Rows[i]["paid"].ToString());
    //                                if (paidvalue == "" || paidvalue == null)
    //                                {
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = "0";
    //                                }
    //                                else
    //                                {
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = paidvalue;
    //                                }
    //                            }
    //                            if (countval != 0)
    //                            {
    //                                paidvalue = Convert.ToString(ds.Tables[1].Rows[i]["paid"].ToString());
    //                                //if (paidvalue == "" || paidvalue == null)
    //                                //{
    //                                //    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                                //}
    //                                //else
    //                                //{
    //                                //    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = paidvalue;
    //                                //}
    //                            }
    //                            //  FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Paid"]), 2));
    //                            //   FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Balance"]), 2));

    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[1].Rows[i]["RefundAmount"]), 2));

    //                            DataView dvex = new DataView();
    //                            if (ds.Tables[3].Rows.Count > 0)
    //                            {
    //                                ds.Tables[3].DefaultView.RowFilter = "Degree_code='" + Convert.ToString(ds.Tables[1].Rows[i]["Degree_code"]) + "'";
    //                                dvex = ds.Tables[3].DefaultView;
    //                                if (dvex.Count > 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = Convert.ToString(dvex[0]["ExcessAmount"]);
    //                                }
    //                                else
    //                                {
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                                }
    //                            }
    //                            else
    //                            {
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                            }
    //                            //FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["RefundAmount"]), 2));
    //                            double totamount = 0;
    //                            double fnlamount = 0;
    //                            if (ds.Tables[2].Rows.Count > 0)
    //                            {
    //                                if (chkl_paid.Items.Count > 0)
    //                                {
    //                                    for (int pay = 0; pay < chkl_paid.Items.Count; pay++)
    //                                    {
    //                                        if (chkl_paid.Items[pay].Selected == true)
    //                                        {
    //                                            ds.Tables[2].DefaultView.RowFilter = "Degree_code='" + Convert.ToString(ds.Tables[0].Rows[i]["Degree_code"].ToString()) + "' and PayMode='" + Convert.ToString(chkl_paid.Items[pay].Value) + "'";
    //                                            dv = ds.Tables[2].DefaultView;
    //                                            if (dv.Count == 0 || dv.Count == null)
    //                                            {
    //                                                int count = 0;
    //                                                int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                                FpSpread1.Sheets[0].Cells[i, colnew].Text = "0";
    //                                            }
    //                                            if (dv.Count > 0)
    //                                            {
    //                                                int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                                FpSpread1.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv[0]["total"]);
    //                                                totamount = Convert.ToDouble(dv[0]["total"]);
    //                                                if (totamount != 0)
    //                                                {
    //                                                    fnlamount = fnlamount + totamount;
    //                                                }
    //                                            }
    //                                        }
    //                                    }
    //                                    if (countval != 0)
    //                                        FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = Convert.ToString(fnlamount);
    //                                    if (totalvalue != "" && totalvalue != null)
    //                                    {
    //                                        bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(fnlamount);
    //                                        FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 4].Text = Convert.ToString(bal);
    //                                        if (Convert.ToDouble(bal) == 0)
    //                                        {
    //                                            FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#F08080");
    //                                        }
    //                                        if (Convert.ToDouble(bal) != 0)
    //                                        {
    //                                            FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#90EE90");
    //                                        }
    //                                        //if (Convert.ToDouble(totalvalue) == Convert.ToDouble(fnlamount))
    //                                        //{
    //                                        //    FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#FFA500");
    //                                        //}
    //                                    }
    //                                }
    //                            }
    //                        }
    //                        FpSpread1.Sheets[0].AutoPostBack = true;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                        #endregion
    //                        #region grandtot
    //                        FpSpread1.Sheets[0].PageSize = ds.Tables[0].Rows.Count + 1;
    //                        FpSpread1.Sheets[0].Rows.Count++;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, 0].Text = "Grand Total";
    //                        double hedval = 0;
    //                        for (int j = 4; j < FpSpread1.Sheets[0].Columns.Count; j++)
    //                        {
    //                            for (int i = 0; i < FpSpread1.Rows.Count - 1; i++)
    //                            {
    //                                string values = Convert.ToString(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                                if (values != "0" && values != "-" && values != "")
    //                                {
    //                                    if (hedval == 0)
    //                                    {
    //                                        hedval = Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                                    }
    //                                    else
    //                                    {
    //                                        hedval = hedval + Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                                    }
    //                                }
    //                            }
    //                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, j].Text = Convert.ToString(hedval);
    //                            hedval = 0;
    //                        }
    //                        #endregion
    //                    }
    //                    #endregion

    //                    #region deptheader
    //                    else if (rbdepthead.Checked == true)
    //                    {
    //                        lblhed.Text = "Department-->Header";
    //                        #region design
    //                        loadcolumns();
    //                        DataView dv = new DataView();
    //                        DataView dv1 = new DataView();
    //                        FpSpread1.Sheets[0].RowCount = 0;
    //                        FpSpread1.Sheets[0].ColumnCount = 0;
    //                        FpSpread1.CommandBar.Visible = false;
    //                        FpSpread1.Sheets[0].AutoPostBack = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.RowCount = 3;
    //                        FpSpread1.Sheets[0].RowHeader.Visible = false;
    //                        FpSpread1.Sheets[0].ColumnCount = 4;
    //                        FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
    //                        darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
    //                        darkstyle.ForeColor = Color.White;
    //                        FpSpread1.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
    //                        FarPoint.Web.Spread.TextCellType regnumhor = new FarPoint.Web.Spread.TextCellType();

    //                        FarPoint.Web.Spread.TextCellType tot = new FarPoint.Web.Spread.TextCellType();
    //                        FarPoint.Web.Spread.TextCellType pad = new FarPoint.Web.Spread.TextCellType();
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;

    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Course Name";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Left;
    //                        FpSpread1.Sheets[0].Columns[1].Visible = true;

    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Department Name";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Left;
    //                        FpSpread1.Sheets[0].Columns[2].Visible = true;

    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Semester";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Left;
    //                        FpSpread1.Sheets[0].Columns[3].Visible = true;

    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 3, 1);
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 3, 1);
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 3, 1);
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 3, 1);

    //                        int check = 0;
    //                        Hashtable newhash = new Hashtable();
    //                        Hashtable hedvalue = new Hashtable();
    //                        if (chkl_studhed.Items.Count > 0)
    //                        {
    //                            for (int s = 0; s < chkl_studhed.Items.Count; s++)
    //                            {
    //                                if (chkl_studhed.Items[s].Selected == true)
    //                                {
    //                                    // hedvalue.Add(chkl_studhed.Items[s].Value.ToString(), FpSpread1.Sheets[0].ColumnCount++);
    //                                    check++;
    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    newhash.Add(Convert.ToString(chkl_studhed.Items[s].Value), FpSpread1.Sheets[0].ColumnCount - 1);
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_studhed.Items[s].Text);
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;

    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Allot";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;

    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Concession";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    if (!colord.Contains("2"))
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                    }
    //                                    if (colord.Count == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    }

    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Government";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    if (!colord.Contains("3"))
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                    }
    //                                    if (colord.Count == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    }

    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    if (!colord.Contains("4"))
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                    }
    //                                    if (colord.Count == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    }

    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Paid";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    if (!colord.Contains("5"))
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                    }
    //                                    if (colord.Count == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    }

    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Balance";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    if (!colord.Contains("6"))
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                    }
    //                                    if (colord.Count == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    }
    //                                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(1, FpSpread1.Sheets[0].ColumnCount - 6, 1, 6);


    //                                }
    //                            }
    //                        }
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Text = "HeaderName";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
    //                        //FpSpread1.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 1, FpSpread1.Sheets[0].ColumnCount - 4);

    //                        FpSpread1.Sheets[0].ColumnCount++;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total Allot";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;

    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 3, 1);

    //                        ViewState["Newhash"] = newhash;
    //                        int checkpaid = 0;
    //                        Hashtable newhash1 = new Hashtable();

    //                        if (chkl_paid.Items.Count > 0)
    //                        {
    //                            for (int s = 0; s < chkl_paid.Items.Count; s++)
    //                            {
    //                                if (chkl_paid.Items[s].Selected == true)
    //                                {
    //                                    checkpaid++;
    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    newhash1.Add(Convert.ToString(chkl_paid.Items[s].Value), FpSpread1.Sheets[0].ColumnCount - 1);
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_paid.Items[s].Text);
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    if (!colord.Contains("5"))
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                    }
    //                                    if (colord.Count == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    }
    //                                }
    //                            }
    //                            if (checkpaid != 0)
    //                            {
    //                                FpSpread1.Sheets[0].ColumnCount++;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total Paid";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                if (!colord.Contains("5"))
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                }
    //                                if (colord.Count == 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                }

    //                            }

    //                        }
    //                        if (checkpaid == 0)
    //                        {
    //                            FpSpread1.Sheets[0].ColumnCount++;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Paid";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                            FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 3, 1);
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                            if (!colord.Contains("5"))
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                            }
    //                            if (colord.Count == 0)
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                            }

    //                        }
    //                        else
    //                        {
    //                            //  FpSpread1.Sheets[0].ColumnCount++;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Text = "Paid";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].ForeColor = ColorTranslator.FromHtml("#000000");
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Font.Bold = true;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Font.Name = "Book Antiqua";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Font.Size = FontUnit.Medium;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Right;
    //                            FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 6, 2, checkpaid + 1);
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].Visible = true;
    //                            if (!colord.Contains("5"))
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].Visible = false;
    //                            }
    //                            if (colord.Count == 0)
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].Visible = true;
    //                            }
    //                        }
    //                        FpSpread1.Sheets[0].ColumnCount++;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total No of Student";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        //if (!colord.Contains("9"))
    //                        //{
    //                        //    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                        //}
    //                        //if (colord.Count == 0)
    //                        //{
    //                        //    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        //}
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 3, 1);
    //                        #endregion

    //                        #region value
    //                        FarPoint.Web.Spread.TextCellType totallot = new FarPoint.Web.Spread.TextCellType();
    //                        string totalvalue = "";
    //                        string totpaid = "";
    //                        double bal = 0;
    //                        double allottot = 0;
    //                        DataView Dview = new DataView();
    //                        for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
    //                        {
    //                            FpSpread1.Sheets[0].Rows.Count = ds.Tables[0].Rows.Count;
    //                            FpSpread1.Sheets[0].Cells[i, 0].Text = Convert.ToString(i + 1);
    //                            string Degrecode = Convert.ToString(ds.Tables[0].Rows[i]["Degree_code"].ToString());
    //                            DataView dnew = new DataView();
    //                            if (ds.Tables[4].Rows.Count > 0)
    //                            {
    //                                ds.Tables[4].DefaultView.RowFilter = "Degree_code='" + Convert.ToString(ds.Tables[0].Rows[i]["Degree_code"]) + "' ";
    //                                dnew = ds.Tables[4].DefaultView;
    //                                if (dnew.Count > 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Cells[i, 1].Text = Convert.ToString(dnew[0]["Course_Name"]);
    //                                    FpSpread1.Sheets[0].Cells[i, 2].Text = Convert.ToString(dnew[0]["Dept_Name"]);
    //                                }
    //                            }
    //                            FpSpread1.Sheets[0].Cells[i, 3].Text = Convert.ToString(ds.Tables[0].Rows[i]["TextVal"]);
    //                            if (ds.Tables[1].Rows.Count > 0)
    //                            {
    //                                if (chkl_studhed.Items.Count > 0)
    //                                {
    //                                    for (int pay = 0; pay < chkl_studhed.Items.Count; pay++)
    //                                    {
    //                                        if (chkl_studhed.Items[pay].Selected == true)
    //                                        {
    //                                            ds.Tables[1].DefaultView.RowFilter = " headerorledger='" + Convert.ToString(chkl_studhed.Items[pay].Value) + "' and Degree_code='" + Convert.ToString(ds.Tables[0].Rows[i]["Degree_code"]) + "' and FeeCategory='" + Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"]) + "'";
    //                                            dv1 = ds.Tables[1].DefaultView;
    //                                            if (dv1.Count == 0 || dv1.Count == null)
    //                                            {
    //                                                int count = 0;
    //                                                int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_studhed.Items[pay].Value)]);
    //                                                FpSpread1.Sheets[0].Cells[i, colnew].Text = "0";
    //                                                FpSpread1.Sheets[0].Cells[i, colnew + 1].Text = "0";
    //                                                FpSpread1.Sheets[0].Cells[i, colnew + 2].Text = "0";
    //                                                FpSpread1.Sheets[0].Cells[i, colnew + 3].Text = "0";
    //                                                FpSpread1.Sheets[0].Cells[i, colnew + 4].Text = "0";
    //                                                FpSpread1.Sheets[0].Cells[i, colnew + 5].Text = "0";
    //                                            }
    //                                            if (dv1.Count > 0)
    //                                            {
    //                                                int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_studhed.Items[pay].Value)]);
    //                                                FpSpread1.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv1[0]["Allot"].ToString());
    //                                                FpSpread1.Sheets[0].Cells[i, colnew + 1].Text = Convert.ToString(dv1[0]["Consustion"].ToString());
    //                                                FpSpread1.Sheets[0].Cells[i, colnew + 2].Text = Convert.ToString(dv1[0]["Government"].ToString());
    //                                                FpSpread1.Sheets[0].Cells[i, colnew + 3].Text = Convert.ToString(dv1[0]["Total"].ToString());
    //                                                totalvalue = Convert.ToString(Math.Round(Convert.ToDouble(dv1[0]["Total"]), 2));
    //                                                allottot += Convert.ToDouble(totalvalue);
    //                                                totpaid = Convert.ToString(dv1[0]["Paid"].ToString());
    //                                                FpSpread1.Sheets[0].Cells[i, colnew + 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(totpaid), 2));

    //                                                bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(totpaid);
    //                                                FpSpread1.Sheets[0].Cells[i, colnew + 5].Text = Convert.ToString(Math.Round(Convert.ToDouble(bal), 2));

    //                                                if (Convert.ToDouble(bal) == 0)
    //                                                {
    //                                                    FpSpread1.Sheets[0].Cells[i, colnew + 5].BackColor = ColorTranslator.FromHtml("#F08080");
    //                                                }
    //                                                if (Convert.ToDouble(bal) != 0)
    //                                                {
    //                                                    FpSpread1.Sheets[0].Cells[i, colnew + 5].BackColor = ColorTranslator.FromHtml("#90EE90");
    //                                                }

    //                                            }
    //                                        }
    //                                    }
    //                                    if (checkpaid == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 3].CellType = totallot;
    //                                        FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 3].Text = Convert.ToString(allottot);
    //                                        allottot = 0;
    //                                    }
    //                                    else
    //                                        FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 8].CellType = totallot;
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 8].Text = Convert.ToString(allottot);
    //                                    allottot = 0;

    //                                }
    //                            }
    //                            string paidvalue = "";
    //                            if (checkpaid == 0)
    //                            {
    //                                paidvalue = Convert.ToString(ds.Tables[1].Rows[i]["paid"].ToString());
    //                                if (paidvalue == "" || paidvalue == null)
    //                                {
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                                }
    //                                else
    //                                {
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = paidvalue;
    //                                }
    //                            }
    //                            double totamount = 0;
    //                            double fnlamount = 0;
    //                            if (ds.Tables[2].Rows.Count > 0)
    //                            {
    //                                if (chkl_paid.Items.Count > 0)
    //                                {
    //                                    for (int pay = 0; pay < chkl_paid.Items.Count; pay++)
    //                                    {
    //                                        if (chkl_paid.Items[pay].Selected == true)
    //                                        {
    //                                            ds.Tables[2].DefaultView.RowFilter = " Degree_code='" + Convert.ToString(ds.Tables[0].Rows[i]["Degree_code"]) + "' and PayMode='" + Convert.ToString(chkl_paid.Items[pay].Value) + "' and FeeCategory='" + Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"]) + "' ";
    //                                            dv = ds.Tables[2].DefaultView;
    //                                            //for (int k = 0; k < dv.Count; k++)
    //                                            //{
    //                                            if (dv.Count == 0 || dv.Count == null)
    //                                            {
    //                                                int count = 0;
    //                                                int colnew = Convert.ToInt32(newhash1[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                                FpSpread1.Sheets[0].Cells[i, colnew].Text = "0";
    //                                            }
    //                                            if (dv.Count > 0)
    //                                            {
    //                                                int colnew = Convert.ToInt32(newhash1[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                                FpSpread1.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv[0]["total"]);

    //                                                totamount = Convert.ToDouble(dv[0]["total"]);
    //                                                if (totamount != 0)
    //                                                {
    //                                                    fnlamount = fnlamount + totamount;
    //                                                }

    //                                            }
    //                                            // }
    //                                        }
    //                                    }
    //                                    if (checkpaid != 0)
    //                                        FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = Convert.ToString(fnlamount);

    //                                }
    //                            }
    //                            if (ds.Tables[5].Rows.Count > 0)
    //                            {
    //                                DataView studcount = new DataView();
    //                                ds.Tables[5].DefaultView.RowFilter = " Degree_code='" + Convert.ToString(ds.Tables[0].Rows[i]["Degree_code"]) + "' and FeeCategory='" + Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"]) + "'";
    //                                studcount = ds.Tables[5].DefaultView;
    //                                if (studcount.Count == 0 || studcount == null)
    //                                {
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString("-");
    //                                }
    //                                else
    //                                {
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(studcount[0]["countval"]);
    //                                }

    //                            }

    //                        }
    //                        if (txt_roll.Text.Trim() != "")
    //                        {
    //                            FpSpread1.Sheets[0].SetColumnMerge(1, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                            FpSpread1.Sheets[0].SetColumnMerge(2, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                            FpSpread1.Sheets[0].SetColumnMerge(3, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                        }

    //                        #endregion

    //                        #region grandtot
    //                        FpSpread1.Sheets[0].PageSize = ds.Tables[0].Rows.Count + 1;
    //                        FpSpread1.Sheets[0].Rows.Count++;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, 0].Text = "Grand Total";
    //                        double hedval = 0;
    //                        for (int j = 4; j < FpSpread1.Sheets[0].Columns.Count; j++)
    //                        {
    //                            for (int i = 0; i < FpSpread1.Rows.Count - 1; i++)
    //                            {
    //                                string values = Convert.ToString(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                                if (values != "0" && values != "-" && values != "")
    //                                {
    //                                    if (hedval == 0)
    //                                    {
    //                                        hedval = Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                                    }
    //                                    else
    //                                    {
    //                                        hedval = hedval + Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                                    }
    //                                }
    //                            }
    //                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, j].Text = Convert.ToString(hedval);
    //                            hedval = 0;
    //                        }
    //                        #endregion

    //                    }
    //                    #endregion

    //                    #region ledger
    //                    else if (rbdeptledg.Checked == true)
    //                    {
    //                        lblhed.Text = "Department-->Ledger";
    //                        #region design
    //                        loadcolumns();
    //                        DataView dv = new DataView();
    //                        DataView dv1 = new DataView();
    //                        FpSpread1.Sheets[0].RowCount = 0;
    //                        FpSpread1.Sheets[0].ColumnCount = 0;
    //                        FpSpread1.CommandBar.Visible = false;
    //                        FpSpread1.Sheets[0].AutoPostBack = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.RowCount = 3;
    //                        FpSpread1.Sheets[0].RowHeader.Visible = false;
    //                        FpSpread1.Sheets[0].ColumnCount = 4;
    //                        FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
    //                        darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
    //                        darkstyle.ForeColor = Color.White;
    //                        FpSpread1.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
    //                        FarPoint.Web.Spread.TextCellType regnumhor = new FarPoint.Web.Spread.TextCellType();

    //                        FarPoint.Web.Spread.TextCellType tot = new FarPoint.Web.Spread.TextCellType();
    //                        FarPoint.Web.Spread.TextCellType pad = new FarPoint.Web.Spread.TextCellType();
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;

    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Course Name";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Left;
    //                        FpSpread1.Sheets[0].Columns[1].Visible = true;

    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Department Name";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Left;
    //                        FpSpread1.Sheets[0].Columns[2].Visible = true;

    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Semester";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Left;
    //                        FpSpread1.Sheets[0].Columns[3].Visible = true;

    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 3, 1);
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 3, 1);
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 3, 1);
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 3, 1);

    //                        int check = 0;
    //                        Hashtable newhash = new Hashtable();
    //                        Hashtable hedvalue = new Hashtable();
    //                        if (chkl_studled.Items.Count > 0)
    //                        {
    //                            for (int s = 0; s < chkl_studled.Items.Count; s++)
    //                            {
    //                                if (chkl_studled.Items[s].Selected == true)
    //                                {
    //                                    // hedvalue.Add(chkl_studhed.Items[s].Value.ToString(), FpSpread1.Sheets[0].ColumnCount++);
    //                                    check++;
    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    newhash.Add(Convert.ToString(chkl_studled.Items[s].Value), FpSpread1.Sheets[0].ColumnCount - 1);
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_studled.Items[s].Text);
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;

    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Allot";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;

    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Concession";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    if (!colord.Contains("2"))
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                    }
    //                                    if (colord.Count == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    }

    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Government";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    if (!colord.Contains("3"))
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                    }
    //                                    if (colord.Count == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    }

    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    if (!colord.Contains("4"))
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                    }
    //                                    if (colord.Count == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    }

    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Paid";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    if (!colord.Contains("5"))
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                    }
    //                                    if (colord.Count == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    }

    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Balance";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    if (!colord.Contains("6"))
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                    }
    //                                    if (colord.Count == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    }
    //                                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(1, FpSpread1.Sheets[0].ColumnCount - 6, 1, 6);


    //                                }
    //                            }
    //                        }
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Text = "LedgerName";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
    //                        //FpSpread1.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 1, FpSpread1.Sheets[0].ColumnCount - 4);


    //                        FpSpread1.Sheets[0].ColumnCount++;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total Allot";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;

    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 3, 1);
    //                        ViewState["Newhash"] = newhash;
    //                        int checkpaid = 0;
    //                        Hashtable newhash1 = new Hashtable();

    //                        if (chkl_paid.Items.Count > 0)
    //                        {
    //                            for (int s = 0; s < chkl_paid.Items.Count; s++)
    //                            {
    //                                if (chkl_paid.Items[s].Selected == true)
    //                                {
    //                                    checkpaid++;
    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    newhash1.Add(Convert.ToString(chkl_paid.Items[s].Value), FpSpread1.Sheets[0].ColumnCount - 1);
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_paid.Items[s].Text);
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    if (!colord.Contains("5"))
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                    }
    //                                    if (colord.Count == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    }
    //                                }
    //                            }
    //                            if (checkpaid != 0)
    //                            {
    //                                FpSpread1.Sheets[0].ColumnCount++;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total Paid";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[2, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                if (!colord.Contains("5"))
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                }
    //                                if (colord.Count == 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                }

    //                            }

    //                        }
    //                        if (checkpaid == 0)
    //                        {
    //                            FpSpread1.Sheets[0].ColumnCount++;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Paid";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                            FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 3, 1);
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                            if (!colord.Contains("5"))
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                            }
    //                            if (colord.Count == 0)
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                            }

    //                        }
    //                        else
    //                        {
    //                            //  FpSpread1.Sheets[0].ColumnCount++;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Text = "Paid";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].ForeColor = ColorTranslator.FromHtml("#000000");
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Font.Bold = true;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Font.Name = "Book Antiqua";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Font.Size = FontUnit.Medium;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Right;
    //                            FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 6, 2, checkpaid + 1);
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].Visible = true;
    //                            if (!colord.Contains("5"))
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].Visible = false;
    //                            }
    //                            if (colord.Count == 0)
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].Visible = true;
    //                            }
    //                        }
    //                        FpSpread1.Sheets[0].ColumnCount++;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total No of Student";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        //if (!colord.Contains("9"))
    //                        //{
    //                        //    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                        //}
    //                        //if (colord.Count == 0)
    //                        //{
    //                        //    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        //}
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 3, 1);
    //                        #endregion

    //                        #region value
    //                        FarPoint.Web.Spread.TextCellType totallot = new FarPoint.Web.Spread.TextCellType();
    //                        string totalvalue = "";
    //                        string totpaid = "";
    //                        double bal = 0;
    //                        double allottot = 0;
    //                        DataView Dview = new DataView();
    //                        for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
    //                        {
    //                            FpSpread1.Sheets[0].Rows.Count = ds.Tables[0].Rows.Count;
    //                            FpSpread1.Sheets[0].Cells[i, 0].Text = Convert.ToString(i + 1);
    //                            string Degrecode = Convert.ToString(ds.Tables[0].Rows[i]["Degree_code"].ToString());
    //                            DataView dnew = new DataView();
    //                            if (ds.Tables[4].Rows.Count > 0)
    //                            {
    //                                ds.Tables[4].DefaultView.RowFilter = "Degree_code='" + Convert.ToString(ds.Tables[0].Rows[i]["Degree_code"]) + "' ";
    //                                dnew = ds.Tables[4].DefaultView;
    //                                if (dnew.Count > 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Cells[i, 1].Text = Convert.ToString(dnew[0]["Course_Name"]);
    //                                    FpSpread1.Sheets[0].Cells[i, 2].Text = Convert.ToString(dnew[0]["Dept_Name"]);
    //                                }
    //                            }
    //                            FpSpread1.Sheets[0].Cells[i, 3].Text = Convert.ToString(ds.Tables[0].Rows[i]["TextVal"]);
    //                            if (ds.Tables[1].Rows.Count > 0)
    //                            {
    //                                if (chkl_studled.Items.Count > 0)
    //                                {
    //                                    for (int pay = 0; pay < chkl_studled.Items.Count; pay++)
    //                                    {
    //                                        if (chkl_studled.Items[pay].Selected == true)
    //                                        {
    //                                            ds.Tables[1].DefaultView.RowFilter = " headerorledger='" + Convert.ToString(chkl_studled.Items[pay].Value) + "' and Degree_code='" + Convert.ToString(ds.Tables[0].Rows[i]["Degree_code"]) + "' and FeeCategory='" + Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"]) + "'";
    //                                            dv1 = ds.Tables[1].DefaultView;
    //                                            if (dv1.Count == 0 || dv1.Count == null)
    //                                            {
    //                                                int count = 0;
    //                                                int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_studled.Items[pay].Value)]);
    //                                                FpSpread1.Sheets[0].Cells[i, colnew].Text = "0";
    //                                                FpSpread1.Sheets[0].Cells[i, colnew + 1].Text = "0";
    //                                                FpSpread1.Sheets[0].Cells[i, colnew + 2].Text = "0";
    //                                                FpSpread1.Sheets[0].Cells[i, colnew + 3].Text = "0";
    //                                                FpSpread1.Sheets[0].Cells[i, colnew + 4].Text = "0";
    //                                                FpSpread1.Sheets[0].Cells[i, colnew + 5].Text = "0";
    //                                            }
    //                                            if (dv1.Count > 0)
    //                                            {
    //                                                int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_studled.Items[pay].Value)]);
    //                                                FpSpread1.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv1[0]["Allot"].ToString());
    //                                                FpSpread1.Sheets[0].Cells[i, colnew + 1].Text = Convert.ToString(dv1[0]["Consustion"].ToString());
    //                                                FpSpread1.Sheets[0].Cells[i, colnew + 2].Text = Convert.ToString(dv1[0]["Government"].ToString());
    //                                                FpSpread1.Sheets[0].Cells[i, colnew + 3].Text = Convert.ToString(dv1[0]["Total"].ToString());
    //                                                totalvalue = Convert.ToString(Math.Round(Convert.ToDouble(dv1[0]["Total"]), 2));
    //                                                allottot += Convert.ToDouble(totalvalue);
    //                                                totpaid = Convert.ToString(dv1[0]["Paid"].ToString());
    //                                                FpSpread1.Sheets[0].Cells[i, colnew + 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(totpaid), 2));

    //                                                bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(totpaid);
    //                                                FpSpread1.Sheets[0].Cells[i, colnew + 5].Text = Convert.ToString(Math.Round(Convert.ToDouble(bal), 2));

    //                                                if (Convert.ToDouble(bal) == 0)
    //                                                {
    //                                                    FpSpread1.Sheets[0].Cells[i, colnew + 5].BackColor = ColorTranslator.FromHtml("#F08080");
    //                                                }
    //                                                if (Convert.ToDouble(bal) != 0)
    //                                                {
    //                                                    FpSpread1.Sheets[0].Cells[i, colnew + 5].BackColor = ColorTranslator.FromHtml("#90EE90");
    //                                                }

    //                                            }
    //                                        }
    //                                    }
    //                                    if (checkpaid == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 3].CellType = totallot;
    //                                        FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 3].Text = Convert.ToString(allottot);
    //                                        allottot = 0;
    //                                    }
    //                                    else
    //                                        FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 8].CellType = totallot;
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 8].Text = Convert.ToString(allottot);
    //                                    allottot = 0;
    //                                }
    //                            }
    //                            string paidvalue = "";
    //                            if (checkpaid == 0)
    //                            {
    //                                paidvalue = Convert.ToString(ds.Tables[1].Rows[i]["paid"].ToString());
    //                                if (paidvalue == "" || paidvalue == null)
    //                                {
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                                }
    //                                else
    //                                {
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = paidvalue;
    //                                }
    //                            }
    //                            double totamount = 0;
    //                            double fnlamount = 0;
    //                            if (ds.Tables[2].Rows.Count > 0)
    //                            {
    //                                if (chkl_paid.Items.Count > 0)
    //                                {
    //                                    for (int pay = 0; pay < chkl_paid.Items.Count; pay++)
    //                                    {
    //                                        if (chkl_paid.Items[pay].Selected == true)
    //                                        {
    //                                            ds.Tables[2].DefaultView.RowFilter = " Degree_code='" + Convert.ToString(ds.Tables[0].Rows[i]["Degree_code"]) + "' and PayMode='" + Convert.ToString(chkl_paid.Items[pay].Value) + "'";
    //                                            dv = ds.Tables[2].DefaultView;
    //                                            if (dv.Count == 0 || dv.Count == null)
    //                                            {
    //                                                int count = 0;
    //                                                int colnew = Convert.ToInt32(newhash1[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                                FpSpread1.Sheets[0].Cells[i, colnew].Text = "0";
    //                                            }
    //                                            if (dv.Count > 0)
    //                                            {
    //                                                int colnew = Convert.ToInt32(newhash1[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                                FpSpread1.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv[0]["total"]);
    //                                                totamount = Convert.ToDouble(dv[0]["total"]);
    //                                                if (totamount != 0)
    //                                                {
    //                                                    fnlamount = fnlamount + totamount;
    //                                                }

    //                                            }
    //                                        }
    //                                    }
    //                                    if (checkpaid != 0)
    //                                        FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = Convert.ToString(fnlamount);

    //                                }
    //                            }
    //                            if (ds.Tables[5].Rows.Count > 0)
    //                            {
    //                                DataView studcount = new DataView();
    //                                ds.Tables[5].DefaultView.RowFilter = " Degree_code='" + Convert.ToString(ds.Tables[0].Rows[i]["Degree_code"]) + "' and FeeCategory='" + Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"]) + "'";
    //                                studcount = ds.Tables[5].DefaultView;
    //                                if (studcount.Count == 0 || studcount == null)
    //                                {
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString("-");
    //                                }
    //                                else
    //                                {
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(studcount[0]["countval"]);
    //                                }

    //                            }

    //                        }
    //                        if (txt_roll.Text.Trim() != "")
    //                        {
    //                            FpSpread1.Sheets[0].SetColumnMerge(1, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                            FpSpread1.Sheets[0].SetColumnMerge(2, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                            FpSpread1.Sheets[0].SetColumnMerge(3, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                        }
    //                        #endregion

    //                        #region grandtot
    //                        FpSpread1.Sheets[0].PageSize = ds.Tables[0].Rows.Count + 1;
    //                        FpSpread1.Sheets[0].Rows.Count++;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, 0].Text = "Grand Total";
    //                        double hedval = 0;
    //                        for (int j = 4; j < FpSpread1.Sheets[0].Columns.Count; j++)
    //                        {
    //                            for (int i = 0; i < FpSpread1.Rows.Count - 1; i++)
    //                            {
    //                                string values = Convert.ToString(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                                if (values != "0" && values != "-" && values != "")
    //                                {
    //                                    if (hedval == 0)
    //                                    {
    //                                        hedval = Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                                    }
    //                                    else
    //                                    {
    //                                        hedval = hedval + Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                                    }
    //                                }
    //                            }
    //                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, j].Text = Convert.ToString(hedval);
    //                            hedval = 0;
    //                        }
    //                        #endregion
    //                    }
    //                    #endregion

    //                    #region detail visible
    //                    FpSpread1.Attributes.Add("Style", "cursor:Default;");
    //                    FpSpread1.Sheets[0].SelectionBackColor = Color.White;
    //                    header.Visible = true;
    //                    div1.Visible = true;
    //                    FpSpread1.Visible = true;
    //                    divledger.Visible = false;
    //                    lbl_ledg.Visible = false;
    //                    lbl_ledg.Text = "";
    //                    fpledger.Visible = false;
    //                    lbl_bat.Visible = false;
    //                    lbl_bat.Text = "";
    //                    fpbatch.Visible = false;
    //                    lbl_degr.Visible = false;
    //                    lbl_degr.Text = "";
    //                    fpdegree.Visible = false;
    //                    lbl_dep.Visible = false;
    //                    lbl_dep.Text = "";
    //                    fpdept.Visible = false;
    //                    lbl_sem.Visible = false; ;
    //                    lbl_sem.Text = "";
    //                    fpsem.Visible = false;
    //                    rptprint.Visible = true;
    //                    //  rptprint.Attributes.Add("Style", "margin-top:-499px; margin-left:10px;");
    //                    lblhed.Visible = true;
    //                    // lblhed.Text = "Department-->Ledger";
    //                    pheaderfilter.Visible = true;
    //                    pcolumnorder.Visible = true;
    //                    //pnlledgercolorder.Visible = false;
    //                    //Pnlledcolorder.Visible = false;
    //                    //pnl_batchcolorder.Visible = false;
    //                    //pnl_batcolorder.Visible = false;
    //                    //pnl_degcolorder.Visible = false;
    //                    //pnl_degreecolorder.Visible = false;
    //                    //pnl_deptcolord.Visible = false;
    //                    //pnl_deptcolorder.Visible = false;
    //                    //pnl_semcolord.Visible = false;
    //                    //pnl_semcolorder.Visible = false;
    //                    //btn_fpled.Visible = false;
    //                    //btn_fpbat.Visible = false;
    //                    //btn_fpdeg.Visible = false;
    //                    //btn_fpdep.Visible = false;
    //                    ////   rptprint.Visible = false;
    //                    //pnl_studcolord.Visible = false;
    //                    //pnl_studcolorder.Visible = false;
    //                    divstudcell.Visible = false;
    //                    lbl_semcell.Text = "";
    //                    divdept.Visible = false;
    //                    divdegree.Visible = false;
    //                    divbatch.Visible = false;
    //                    header.Attributes.Add("Style", "height:350px; width:950px; overflow:auto");
    //                    div1.Attributes.Add("Style", "height:350px; width:950px; overflow:auto");
    //                    FpSpread1.Height = 330;
    //                    #endregion

    //                }
    //                #endregion
    //            }
    //            else
    //            {
    //                FpSpread1.Visible = false;
    //                div1.Visible = false;
    //                rptprint.Visible = false;
    //                pheaderfilter.Visible = false;
    //                pcolumnorder.Visible = false;
    //                lblhed.Text = "";
    //                imgdiv2.Visible = true;
    //                lbl_alert.Visible = true;
    //                lbl_alert.Text = "No Record Found";
    //            }
    //        }
    //    }
    //    catch { }
    //}
    //#endregion

    //#region semmethod
    //public void semvalues()
    //{
    //    try
    //    {
    //        if (ds.Tables.Count > 0)
    //        {
    //            if (ds.Tables[0].Rows.Count > 0)
    //            {
    //                #region design
    //                loadcolumns();
    //                DataView dv = new DataView();
    //                FpSpread1.Sheets[0].RowCount = 0;
    //                FpSpread1.Sheets[0].ColumnCount = 0;
    //                FpSpread1.CommandBar.Visible = false;
    //                FpSpread1.Sheets[0].AutoPostBack = true;
    //                FpSpread1.Sheets[0].ColumnHeader.RowCount = 2;
    //                FpSpread1.Sheets[0].RowHeader.Visible = false;
    //                FpSpread1.Sheets[0].ColumnCount = 5;
    //                FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
    //                darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
    //                darkstyle.ForeColor = Color.White;
    //                FpSpread1.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
    //                int check = 0;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;

    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Semaster";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[1].Visible = true;

    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Allot";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[2].Visible = true;
    //                if (!colord.Contains("1"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[2].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[2].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Concession";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[3].Visible = true;
    //                if (!colord.Contains("2"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[3].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[3].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Government";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[4].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[4].Visible = true;
    //                if (!colord.Contains("3"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[4].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[4].Visible = true;
    //                }

    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("4"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
    //                Hashtable newhash = new Hashtable();
    //                if (chkl_paid.Items.Count > 0)
    //                {
    //                    for (int s = 0; s < chkl_paid.Items.Count; s++)
    //                    {
    //                        if (chkl_paid.Items[s].Selected == true)
    //                        {
    //                            check++;
    //                            FpSpread1.Sheets[0].ColumnCount++;
    //                            newhash.Add(Convert.ToString(chkl_paid.Items[s].Value), FpSpread1.Sheets[0].ColumnCount - 1);
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_paid.Items[s].Text);
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                            if (!colord.Contains("5"))
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                            }
    //                            if (colord.Count == 0)
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                            }

    //                        }
    //                    }
    //                    if (check != 0)
    //                    {
    //                        FpSpread1.Sheets[0].ColumnCount++;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total Paid";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                        if (!colord.Contains("5"))
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                        }
    //                        if (colord.Count == 0)
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        }
    //                    }

    //                }
    //                if (check == 0)
    //                {
    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Paid";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("5"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }

    //                }
    //                else
    //                {
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 1, check + 1);
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Paid";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[6].HorizontalAlign = HorizontalAlign.Right;
    //                    if (!colord.Contains("5"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[6].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[6].Visible = true;
    //                    }
    //                }
    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Balance";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("6"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Refund Amount";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("7"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);


    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Excess Amount";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("8"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                FpSpread1.Sheets[0].ColumnCount++;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Fine Amount";
    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                if (!colord.Contains("9"))
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                }
    //                if (colord.Count == 0)
    //                {
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                }
    //                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                #endregion
    //                #region value
    //                string totalvalue = "";
    //                double bal = 0;
    //                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
    //                {

    //                    FpSpread1.Sheets[0].Rows.Count = ds.Tables[0].Rows.Count;
    //                    FpSpread1.Sheets[0].Cells[i, 0].Text = Convert.ToString(i + 1);
    //                    FpSpread1.Sheets[0].Cells[i, 1].Text = Convert.ToString(ds.Tables[0].Rows[i]["TextVal"].ToString());
    //                    FpSpread1.Sheets[0].Cells[i, 1].Tag = Convert.ToString(ds.Tables[0].Rows[i]["TextVal"].ToString());
    //                    allot = Convert.ToString(ds.Tables[0].Rows[i]["Allot"]);
    //                    if (allot != "" && allot != null)
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, 2].Text = Convert.ToString(Math.Round(Convert.ToDouble(allot), 2));
    //                    }
    //                    else
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, 2].Text = "0";
    //                    }
    //                    consession = Convert.ToString(ds.Tables[0].Rows[i]["consustion"]);
    //                    if (consession != "" && consession != null)
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(consession), 2));
    //                    }
    //                    else
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, 3].Text = "0";
    //                    }
    //                    string val = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
    //                    string value = "";
    //                    if (val == "" || val == null)
    //                    {
    //                        value = "0";
    //                    }
    //                    else
    //                    {
    //                        value = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
    //                    }
    //                    FpSpread1.Sheets[0].Cells[i, 4].Text = value;
    //                    totalvalue = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Total"]), 2)); FpSpread1.Sheets[0].Cells[i, 5].Text = Convert.ToString(totalvalue);

    //                    string paidvalue = "";
    //                    if (check == 0)
    //                    {
    //                        paidvalue = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
    //                        if (paidvalue == "" || paidvalue == null)
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = "0";
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = paidvalue;
    //                        }
    //                    }
    //                    if (check != 0)
    //                    {
    //                        paidvalue = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
    //                    }

    //                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["RefundAmount"]), 2));
    //                    DataView dvex = new DataView();
    //                    if (ds.Tables[2].Rows.Count > 0)
    //                    {
    //                        ds.Tables[2].DefaultView.RowFilter = "FeeCategory='" + Convert.ToString(ds.Tables[2].Rows[i]["FeeCategory"]) + "'";
    //                        dvex = ds.Tables[2].DefaultView;
    //                        if (dvex.Count > 0 && dvex.Count != null)
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = Convert.ToString(dvex[0]["ExcessAmount"]);
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                        }
    //                    }
    //                    else
    //                    {
    //                        FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                    }
    //                    double totamount = 0;
    //                    double fnlamount = 0;
    //                    if (ds.Tables[1].Rows.Count > 0)
    //                    {
    //                        if (chkl_paid.Items.Count > 0)
    //                        {
    //                            for (int pay = 0; pay < chkl_paid.Items.Count; pay++)
    //                            {
    //                                if (chkl_paid.Items[pay].Selected == true)
    //                                {
    //                                    ds.Tables[1].DefaultView.RowFilter = "TextVal='" + Convert.ToString(ds.Tables[0].Rows[i]["TextVal"].ToString()) + "' and PayMode='" + Convert.ToString(chkl_paid.Items[pay].Value) + "'";
    //                                    dv = ds.Tables[1].DefaultView;
    //                                    if (dv.Count == 0 || dv.Count == null)
    //                                    {
    //                                        int count = 0;
    //                                        int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                        FpSpread1.Sheets[0].Cells[i, colnew].Text = "0";
    //                                    }
    //                                    if (dv.Count > 0)
    //                                    {
    //                                        int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                        FpSpread1.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv[0]["total"]);
    //                                        totamount = Convert.ToDouble(dv[0]["total"]);
    //                                        if (totamount != 0)
    //                                        {
    //                                            fnlamount = fnlamount + totamount;
    //                                        }
    //                                    }
    //                                }
    //                            }
    //                            if (check != 0)
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = Convert.ToString(fnlamount);
    //                            if (totalvalue != "" && totalvalue != null)
    //                            {
    //                                bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(fnlamount);
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 4].Text = Convert.ToString(bal);
    //                                if (Convert.ToDouble(bal) == 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#F08080");
    //                                }
    //                                if (Convert.ToDouble(bal) != 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#90EE90");
    //                                }
    //                                //if (Convert.ToDouble(totalvalue) == Convert.ToDouble(fnlamount))
    //                                //{
    //                                //    FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#FFA500");
    //                                //}
    //                            }
    //                        }
    //                    }
    //                }

    //                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                #endregion
    //                #region grandtot
    //                FpSpread1.Sheets[0].PageSize = ds.Tables[0].Rows.Count + 1;
    //                FpSpread1.Sheets[0].Rows.Count++;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, 0].Text = "Grand Total";
    //                double hedval = 0;
    //                for (int j = 2; j < FpSpread1.Sheets[0].Columns.Count; j++)
    //                {
    //                    for (int i = 0; i < FpSpread1.Rows.Count - 1; i++)
    //                    {
    //                        string values = Convert.ToString(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                        if (values != "0" && values != "-" && values != "")
    //                        {
    //                            if (hedval == 0)
    //                            {
    //                                hedval = Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                            }
    //                            else
    //                            {
    //                                hedval = hedval + Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                            }
    //                        }
    //                    }
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, j].Text = Convert.ToString(hedval);
    //                    hedval = 0;
    //                }
    //                #endregion
    //                #region visible
    //                FpSpread1.Attributes.Add("Style", "cursor:Default;");
    //                FpSpread1.Sheets[0].SelectionBackColor = Color.White;
    //                header.Visible = true;
    //                div1.Visible = true;
    //                FpSpread1.Visible = true;
    //                divledger.Visible = false;
    //                lbl_ledg.Visible = false;
    //                lbl_ledg.Text = "";
    //                fpledger.Visible = false;
    //                lbl_bat.Visible = false;
    //                lbl_bat.Text = "";
    //                fpbatch.Visible = false;
    //                lbl_degr.Visible = false;
    //                lbl_degr.Text = "";
    //                fpdegree.Visible = false;
    //                lbl_dep.Visible = false;
    //                lbl_dep.Text = "";
    //                fpdept.Visible = false;
    //                lbl_sem.Visible = false; ;
    //                lbl_sem.Text = "";
    //                fpsem.Visible = false;
    //                rptprint.Visible = true;
    //                //  rptprint.Attributes.Add("Style", "margin-top:-499px; margin-left:10px;");
    //                lblhed.Visible = true;
    //                lblhed.Text = "Semaster";
    //                pheaderfilter.Visible = true;
    //                pcolumnorder.Visible = true;
    //                //pnlledgercolorder.Visible = false;
    //                //Pnlledcolorder.Visible = false;
    //                //pnl_batchcolorder.Visible = false;
    //                //pnl_batcolorder.Visible = false;
    //                //pnl_degcolorder.Visible = false;
    //                //pnl_degreecolorder.Visible = false;
    //                //pnl_deptcolord.Visible = false;
    //                //pnl_deptcolorder.Visible = false;
    //                //pnl_semcolord.Visible = false;
    //                //pnl_semcolorder.Visible = false;
    //                //btn_fpled.Visible = false;
    //                //btn_fpbat.Visible = false;
    //                //btn_fpdeg.Visible = false;
    //                //btn_fpdep.Visible = false;
    //                //// rptprint.Visible = false;
    //                //pnl_studcolord.Visible = false;
    //                //pnl_studcolorder.Visible = false;
    //                divstudcell.Visible = false;
    //                lbl_semcell.Text = "";
    //                divdept.Visible = false;
    //                divdegree.Visible = false;
    //                divbatch.Visible = false;
    //                header.Attributes.Add("Style", "height:350px; width:950px; overflow:auto");
    //                div1.Attributes.Add("Style", "height:350px; width:950px; overflow:auto");
    //                FpSpread1.Height = 330;
    //                #endregion
    //            }
    //            else
    //            {
    //                FpSpread1.Visible = false;
    //                div1.Visible = false;
    //                rptprint.Visible = false;
    //                pheaderfilter.Visible = false;
    //                pcolumnorder.Visible = false;
    //                lblhed.Text = "";
    //                imgdiv2.Visible = true;
    //                lbl_alert.Visible = true;
    //                lbl_alert.Text = "No Record Found";
    //            }
    //        }
    //    }
    //    catch { }
    //}
    //#endregion

    //#region studmethod
    //public void studvalues()
    //{
    //    try
    //    {
    //        if (ds.Tables.Count > 0)
    //        {
    //            if (ds.Tables[0].Rows.Count > 0)
    //            {
    //                string totalvalue = "";
    //                double bal = 0;
    //                string totpaid = "";
    //                #region common

    //                #region design
    //                if (rb_common.Checked == true)
    //                {
    //                    loadcolumns();
    //                    DataView dv = new DataView();
    //                    FpSpread1.Sheets[0].RowCount = 0;
    //                    FpSpread1.Sheets[0].ColumnCount = 0;
    //                    FpSpread1.CommandBar.Visible = false;
    //                    FpSpread1.Sheets[0].AutoPostBack = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.RowCount = 2;
    //                    FpSpread1.Sheets[0].RowHeader.Visible = false;
    //                    FpSpread1.Sheets[0].ColumnCount = 8;

    //                    FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
    //                    darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
    //                    darkstyle.ForeColor = Color.White;
    //                    FpSpread1.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
    //                    int check = 0;

    //                    FarPoint.Web.Spread.TextCellType regnum = new FarPoint.Web.Spread.TextCellType();
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;

    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Student Name";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Left;
    //                    FpSpread1.Sheets[0].Columns[1].Visible = true;


    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Reg No";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[2].Visible = true;


    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Degree Name";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Left;
    //                    FpSpread1.Sheets[0].Columns[3].Visible = true;


    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Semester";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[4].HorizontalAlign = HorizontalAlign.Left;
    //                    FpSpread1.Sheets[0].Columns[4].Visible = true;


    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Allot";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[5].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[5].Visible = true;
    //                    if (!colord.Contains("1"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[5].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[5].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Concession";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[6].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[6].Visible = true;
    //                    if (!colord.Contains("2"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[6].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[6].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].Text = "Government";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[7].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[7].Visible = true;
    //                    if (!colord.Contains("3"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[7].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[7].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("4"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 5, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 7, 2, 1);

    //                    Hashtable newhash = new Hashtable();

    //                    if (chkl_paid.Items.Count > 0)
    //                    {
    //                        for (int s = 0; s < chkl_paid.Items.Count; s++)
    //                        {
    //                            if (chkl_paid.Items[s].Selected == true)
    //                            {
    //                                check++;
    //                                FpSpread1.Sheets[0].ColumnCount++;
    //                                newhash.Add(Convert.ToString(chkl_paid.Items[s].Value), FpSpread1.Sheets[0].ColumnCount - 1);
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_paid.Items[s].Text);
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                if (!colord.Contains("5"))
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                }
    //                                if (colord.Count == 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                }
    //                            }
    //                        }
    //                        if (check != 0)
    //                        {
    //                            FpSpread1.Sheets[0].ColumnCount++;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total Paid";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                            if (!colord.Contains("5"))
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                            }
    //                            if (colord.Count == 0)
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                            }
    //                        }

    //                    }
    //                    if (check == 0)
    //                    {
    //                        FpSpread1.Sheets[0].ColumnCount++;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Paid";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        if (!colord.Contains("5"))
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                        }
    //                        if (colord.Count == 0)
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        }
    //                    }
    //                    else
    //                    {
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 9, 1, check + 1);
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 9].Text = "Paid";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 9].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 9].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 9].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 9].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 9].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[9].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[9].Visible = true;
    //                        if (!colord.Contains("5"))
    //                        {
    //                            FpSpread1.Sheets[0].Columns[9].Visible = false;
    //                        }
    //                        if (colord.Count == 0)
    //                        {
    //                            FpSpread1.Sheets[0].Columns[9].Visible = true;
    //                        }
    //                    }


    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Balance";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("6"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }

    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Refund Amount";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("7"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Excess Amount";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("8"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Fine Amount";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("9"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                #endregion

    //                    #region value
    //                    DataView Dview = new DataView();
    //                    for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
    //                    {
    //                        FpSpread1.Sheets[0].Rows.Count = ds.Tables[0].Rows.Count;
    //                        FpSpread1.Sheets[0].Cells[i, 0].Text = Convert.ToString(i + 1);
    //                        FpSpread1.Sheets[0].Cells[i, 1].Text = Convert.ToString(ds.Tables[0].Rows[i]["Stud_Name"].ToString());
    //                        FpSpread1.Sheets[0].Cells[i, 2].Tag = Convert.ToString(ds.Tables[0].Rows[i]["Roll_No"].ToString());
    //                        FpSpread1.Sheets[0].Cells[i, 2].Text = Convert.ToString(ds.Tables[0].Rows[i]["Reg_No"].ToString());
    //                        FpSpread1.Sheets[0].Cells[i, 2].CellType = regnum;
    //                        string Degreename = "";
    //                        if (ds.Tables[4].Rows.Count > 0)
    //                        {
    //                            ds.Tables[4].DefaultView.RowFilter = "Degree_code='" + Convert.ToString(ds.Tables[0].Rows[i]["Degree_code"]) + "'";
    //                            Dview = ds.Tables[4].DefaultView;
    //                            if (Dview.Count > 0)
    //                            {
    //                                Degreename = Convert.ToString(Dview[0]["degreename"]);
    //                            }
    //                        }
    //                        string TextName = "";
    //                        if (ds.Tables[5].Rows.Count > 0)
    //                        {
    //                            ds.Tables[5].DefaultView.RowFilter = "TextCode='" + Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"]) + "'";
    //                            Dview = ds.Tables[5].DefaultView;
    //                            if (Dview.Count > 0)
    //                            {
    //                                TextName = Convert.ToString(Dview[0]["TextVal"]);
    //                            }
    //                        }

    //                        FpSpread1.Sheets[0].Cells[i, 3].Text = Convert.ToString(Degreename);
    //                        FpSpread1.Sheets[0].Cells[i, 4].Text = Convert.ToString(TextName);
    //                        FpSpread1.Sheets[0].Cells[i, 2].Tag = Convert.ToString(ds.Tables[0].Rows[i]["App_No"].ToString());
    //                        allot = Convert.ToString(ds.Tables[0].Rows[i]["Allot"]);
    //                        if (allot != "" && allot != null)
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, 5].Text = Convert.ToString(Math.Round(Convert.ToDouble(allot), 2));
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, 5].Text = "0";
    //                        }
    //                        consession = Convert.ToString(ds.Tables[0].Rows[i]["consustion"]);
    //                        if (consession != "" && consession != null)
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, 6].Text = Convert.ToString(Math.Round(Convert.ToDouble(consession), 2));
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, 6].Text = "0";
    //                        }
    //                        // FpSpread1.Sheets[0].Cells[i, 5].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Allot"]), 2));
    //                        // FpSpread1.Sheets[0].Cells[i, 6].Text = Convert.ToString(ds.Tables[0].Rows[i]["Consustion"]);
    //                        string val = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
    //                        string value = "";
    //                        if (val == "" || val == null)
    //                        {
    //                            value = "0";
    //                        }
    //                        else
    //                        {
    //                            value = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
    //                        }
    //                        FpSpread1.Sheets[0].Cells[i, 7].Text = value;
    //                        totalvalue = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Total"]), 2));
    //                        // FpSpread1.Sheets[0].Cells[i, 8].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Total"]), 2));
    //                        FpSpread1.Sheets[0].Cells[i, 8].Text = Convert.ToString(totalvalue);
    //                        string paidvalue = "";
    //                        if (check == 0)
    //                        {
    //                            paidvalue = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
    //                            if (paidvalue == "" || paidvalue == null)
    //                            {
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = "0";
    //                            }
    //                            else
    //                            {
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = paidvalue;
    //                            }
    //                        }

    //                        FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["RefundAmount"]), 2));
    //                        DataView dvex = new DataView();
    //                        if (ds.Tables[3].Rows.Count > 0)
    //                        {
    //                            ds.Tables[3].DefaultView.RowFilter = "App_No='" + Convert.ToString(ds.Tables[0].Rows[i]["App_No"]) + "'";
    //                            dvex = ds.Tables[3].DefaultView;
    //                            if (dvex.Count > 0 && dvex.Count != null)
    //                            {
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = Convert.ToString(dvex[0]["ExcessAmount"]);
    //                            }
    //                            else
    //                            {
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                            }
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                        }
    //                        double totamount = 0;
    //                        double fnlamount = 0;
    //                        if (ds.Tables[1].Rows.Count > 0)
    //                        {
    //                            if (chkl_paid.Items.Count > 0)
    //                            {
    //                                for (int pay = 0; pay < chkl_paid.Items.Count; pay++)
    //                                {
    //                                    if (chkl_paid.Items[pay].Selected == true)
    //                                    {
    //                                        ds.Tables[1].DefaultView.RowFilter = "App_No='" + Convert.ToString(ds.Tables[0].Rows[i]["App_No"].ToString()) + "' and PayMode='" + Convert.ToString(chkl_paid.Items[pay].Value) + "' and FeeCategory='" + Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"]) + "'";
    //                                        dv = ds.Tables[1].DefaultView;
    //                                        if (dv.Count == 0 || dv.Count == null)
    //                                        {
    //                                            int count = 0;
    //                                            int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                            FpSpread1.Sheets[0].Cells[i, colnew].Text = "0";
    //                                        }
    //                                        if (dv.Count > 0)
    //                                        {
    //                                            int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                            FpSpread1.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv[0]["total"]);
    //                                            totamount = Convert.ToDouble(dv[0]["total"]);
    //                                            if (totamount != 0)
    //                                            {
    //                                                fnlamount = fnlamount + totamount;
    //                                            }
    //                                        }
    //                                    }
    //                                }
    //                                if (check != 0)
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = Convert.ToString(fnlamount);
    //                                if (totalvalue != "" && totalvalue != null)
    //                                {
    //                                    bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(fnlamount);
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 4].Text = Convert.ToString(bal);
    //                                    if (Convert.ToDouble(bal) == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#F08080");
    //                                    }
    //                                    if (Convert.ToDouble(bal) != 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#90EE90");
    //                                    }
    //                                    //if (Convert.ToDouble(totalvalue) == Convert.ToDouble(fnlamount))
    //                                    //{
    //                                    //    FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#FFA500");
    //                                    //}
    //                                }
    //                            }
    //                        }
    //                    }
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    if (txt_roll.Text.Trim() != "")
    //                    {
    //                        FpSpread1.Sheets[0].SetColumnMerge(1, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                        FpSpread1.Sheets[0].SetColumnMerge(2, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                    }
    //                    #endregion

    //                    #region grandtot
    //                    FpSpread1.Sheets[0].PageSize = ds.Tables[0].Rows.Count + 1;
    //                    FpSpread1.Sheets[0].Rows.Count++;
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, 0].Text = "Grand Total";
    //                    double hedval = 0;
    //                    for (int j = 5; j < FpSpread1.Sheets[0].Columns.Count; j++)
    //                    {
    //                        for (int i = 0; i < FpSpread1.Rows.Count - 1; i++)
    //                        {
    //                            string values = Convert.ToString(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                            if (values != "0" && values != "-" && values != "")
    //                            {
    //                                if (hedval == 0)
    //                                {
    //                                    hedval = Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                                }
    //                                else
    //                                {
    //                                    hedval = hedval + Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                                }
    //                            }
    //                        }
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, j].Text = Convert.ToString(hedval);
    //                        hedval = 0;
    //                    }
    //                }
    //                    #endregion
    //                #endregion

    //                #region detail

    //                #region valuehead and led
    //                int headcount = 0;
    //                for (int i = 0; i < chkl_studhed.Items.Count; i++)
    //                {
    //                    if (chkl_studhed.Items[i].Selected == true)
    //                    {
    //                        if (headcount == 0)
    //                        {
    //                            headcount++;
    //                        }
    //                        else
    //                        {
    //                            headcount++;
    //                        }
    //                    }
    //                }
    //                int ledgercount = 0;
    //                for (int i = 0; i < chkl_studled.Items.Count; i++)
    //                {
    //                    if (chkl_studled.Items[i].Selected == true)
    //                    {
    //                        if (ledgercount == 0)
    //                        {
    //                            ledgercount++;
    //                        }
    //                        else
    //                        {
    //                            ledgercount++;
    //                        }
    //                    }
    //                }
    //                #endregion
    //                if (headcount != 0)
    //                {
    //                    if (rb_detail.Checked == true)
    //                    {
    //                        #region rbhorizontal
    //                        if (rb_hori.Checked == true)
    //                        {
    //                            #region header
    //                            if (rbstudhed.Checked == true)
    //                            {
    //                                #region design
    //                                loadcolumns();
    //                                DataView dv = new DataView();
    //                                DataView dv1 = new DataView();
    //                                FpSpread1.Sheets[0].RowCount = 0;
    //                                FpSpread1.Sheets[0].ColumnCount = 0;
    //                                FpSpread1.CommandBar.Visible = false;
    //                                FpSpread1.Sheets[0].AutoPostBack = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.RowCount = 2;
    //                                FpSpread1.Sheets[0].RowHeader.Visible = false;
    //                                FpSpread1.Sheets[0].ColumnCount = 4;
    //                                FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
    //                                darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
    //                                darkstyle.ForeColor = Color.White;
    //                                FpSpread1.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
    //                                FarPoint.Web.Spread.TextCellType regnumhor = new FarPoint.Web.Spread.TextCellType();

    //                                FarPoint.Web.Spread.TextCellType tot = new FarPoint.Web.Spread.TextCellType();
    //                                FarPoint.Web.Spread.TextCellType pad = new FarPoint.Web.Spread.TextCellType();
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;

    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Student Name";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Left;
    //                                FpSpread1.Sheets[0].Columns[1].Visible = true;


    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Reg No";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[2].Visible = true;


    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Degree Name";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Left;
    //                                FpSpread1.Sheets[0].Columns[3].Visible = true;

    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 3, 1);
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 3, 1);
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 3, 1);
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 3, 1);
    //                                int check = 0;
    //                                Hashtable newhash = new Hashtable();
    //                                Hashtable hedvalue = new Hashtable();
    //                                if (chkl_studhed.Items.Count > 0)
    //                                {
    //                                    for (int s = 0; s < chkl_studhed.Items.Count; s++)
    //                                    {
    //                                        if (chkl_studhed.Items[s].Selected == true)
    //                                        {
    //                                            // hedvalue.Add(chkl_studhed.Items[s].Value.ToString(), FpSpread1.Sheets[0].ColumnCount++);
    //                                            check++;
    //                                            FpSpread1.Sheets[0].ColumnCount++;
    //                                            newhash.Add(Convert.ToString(chkl_studhed.Items[s].Value), FpSpread1.Sheets[0].ColumnCount - 1);
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_studhed.Items[s].Text);
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;

    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Allot";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;

    //                                            FpSpread1.Sheets[0].ColumnCount++;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Concession";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            if (!colord.Contains("2"))
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                            }
    //                                            if (colord.Count == 0)
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            }

    //                                            FpSpread1.Sheets[0].ColumnCount++;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Government";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            if (!colord.Contains("3"))
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                            }
    //                                            if (colord.Count == 0)
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            }

    //                                            FpSpread1.Sheets[0].ColumnCount++;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            if (!colord.Contains("4"))
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                            }
    //                                            if (colord.Count == 0)
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            }

    //                                            FpSpread1.Sheets[0].ColumnCount++;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Paid";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            if (!colord.Contains("5"))
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                            }
    //                                            if (colord.Count == 0)
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            }

    //                                            FpSpread1.Sheets[0].ColumnCount++;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Balance";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            if (!colord.Contains("6"))
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                            }
    //                                            if (colord.Count == 0)
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            }
    //                                            FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 6, 1, 6);


    //                                        }
    //                                    }
    //                                }
    //                                ViewState["Newhash"] = newhash;
    //                                int checkpaid = 0;
    //                                Hashtable newhash1 = new Hashtable();

    //                                if (chkl_paid.Items.Count > 0)
    //                                {
    //                                    for (int s = 0; s < chkl_paid.Items.Count; s++)
    //                                    {
    //                                        if (chkl_paid.Items[s].Selected == true)
    //                                        {
    //                                            checkpaid++;
    //                                            FpSpread1.Sheets[0].ColumnCount++;
    //                                            newhash1.Add(Convert.ToString(chkl_paid.Items[s].Value), FpSpread1.Sheets[0].ColumnCount - 1);
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_paid.Items[s].Text);
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            if (!colord.Contains("5"))
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                            }
    //                                            if (colord.Count == 0)
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            }
    //                                        }
    //                                    }
    //                                    if (checkpaid != 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].ColumnCount++;
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total Paid";
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                        if (!colord.Contains("5"))
    //                                        {
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                        }
    //                                        if (colord.Count == 0)
    //                                        {
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                        }

    //                                    }

    //                                }
    //                                if (checkpaid == 0)
    //                                {
    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Paid";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    if (!colord.Contains("5"))
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                    }
    //                                    if (colord.Count == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    }

    //                                }
    //                                else
    //                                {
    //                                    //  FpSpread1.Sheets[0].ColumnCount++;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Text = "Paid";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 6, 1, checkpaid + 1);
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].Visible = true;
    //                                    if (!colord.Contains("5"))
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].Visible = false;
    //                                    }
    //                                    if (colord.Count == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].Visible = true;
    //                                    }
    //                                }
    //                                #endregion

    //                                #region value
    //                                DataView Dview = new DataView();
    //                                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
    //                                {
    //                                    FpSpread1.Sheets[0].Rows.Count = ds.Tables[0].Rows.Count;
    //                                    FpSpread1.Sheets[0].Cells[i, 0].Text = Convert.ToString(i + 1);
    //                                    FpSpread1.Sheets[0].Cells[i, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["app_no"].ToString());
    //                                    FpSpread1.Sheets[0].Cells[i, 0].Note = Convert.ToString(ds.Tables[0].Rows[i]["Degree_Code"].ToString());
    //                                    FpSpread1.Sheets[0].Cells[i, 1].Text = Convert.ToString(ds.Tables[0].Rows[i]["Stud_Name"].ToString());
    //                                    FpSpread1.Sheets[0].Cells[i, 1].Note = Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"].ToString());
    //                                    FpSpread1.Sheets[0].Cells[i, 2].Tag = Convert.ToString(ds.Tables[0].Rows[i]["Roll_No"].ToString());
    //                                    FpSpread1.Sheets[0].Cells[i, 2].Text = Convert.ToString(ds.Tables[0].Rows[i]["Reg_No"].ToString());
    //                                    FpSpread1.Sheets[0].Cells[i, 2].CellType = regnumhor;
    //                                    string Degreename = "";
    //                                    if (ds.Tables[4].Rows.Count > 0)
    //                                    {
    //                                        ds.Tables[4].DefaultView.RowFilter = "Degree_code='" + Convert.ToString(ds.Tables[0].Rows[i]["Degree_code"]) + "'";
    //                                        Dview = ds.Tables[4].DefaultView;
    //                                        if (Dview.Count > 0)
    //                                        {
    //                                            Degreename = Convert.ToString(Dview[0]["degreename"]);
    //                                            FpSpread1.Sheets[0].Cells[i, 3].Text = Convert.ToString(Degreename);
    //                                        }
    //                                    }
    //                                    string TextName = "";
    //                                    if (ds.Tables[5].Rows.Count > 0)
    //                                    {
    //                                        ds.Tables[5].DefaultView.RowFilter = "TextCode='" + Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"]) + "'";
    //                                        Dview = ds.Tables[5].DefaultView;
    //                                        if (Dview.Count > 0)
    //                                        {
    //                                            TextName = Convert.ToString(Dview[0]["TextVal"]);
    //                                        }
    //                                    }
    //                                    // FpSpread1.Sheets[0].Cells[i, 3].Text = Convert.ToString(ds.Tables[0].Rows[i]["Degree"].ToString());

    //                                    if (ds.Tables[2].Rows.Count > 0)
    //                                    {
    //                                        if (chkl_studhed.Items.Count > 0)
    //                                        {
    //                                            for (int pay = 0; pay < chkl_studhed.Items.Count; pay++)
    //                                            {
    //                                                if (chkl_studhed.Items[pay].Selected == true)
    //                                                {
    //                                                    ds.Tables[2].DefaultView.RowFilter = "app_no='" + Convert.ToString(ds.Tables[0].Rows[i]["app_no"].ToString()) + "' and headerorledger='" + Convert.ToString(chkl_studhed.Items[pay].Value) + "' and FeeCategory='" + Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"]) + "'";
    //                                                    dv1 = ds.Tables[2].DefaultView;
    //                                                    if (dv1.Count == 0 || dv1.Count == null)
    //                                                    {
    //                                                        int count = 0;
    //                                                        int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_studhed.Items[pay].Value)]);
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew].Text = "0";
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew + 1].Text = "0";
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew + 2].Text = "0";
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew + 3].Text = "0";
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew + 4].Text = "0";
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew + 5].Text = "0";
    //                                                    }
    //                                                    if (dv1.Count > 0)
    //                                                    {
    //                                                        int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_studhed.Items[pay].Value)]);
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv1[0]["Allot"].ToString());
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew + 1].Text = Convert.ToString(dv1[0]["Consustion"].ToString());
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew + 2].Text = Convert.ToString(dv1[0]["Government"].ToString());
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew + 3].Text = Convert.ToString(dv1[0]["Total"].ToString());
    //                                                        totalvalue = Convert.ToString(Math.Round(Convert.ToDouble(dv1[0]["Total"]), 2));
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew + 3].CellType = tot;
    //                                                        totpaid = Convert.ToString(dv1[0]["Paid"].ToString());
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew + 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(totpaid), 2));
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew + 4].CellType = pad;
    //                                                        bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(totpaid);
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew + 5].Text = Convert.ToString(Math.Round(Convert.ToDouble(bal), 2));
    //                                                        //  FpSpread1.Sheets[0].Cells[i, colnew + 5].Text = Convert.ToString(dv1[0]["Balance"].ToString());
    //                                                        if (Convert.ToDouble(bal) == 0)
    //                                                        {
    //                                                            FpSpread1.Sheets[0].Cells[i, colnew + 5].BackColor = ColorTranslator.FromHtml("#F08080");
    //                                                        }
    //                                                        if (Convert.ToDouble(bal) != 0)
    //                                                        {
    //                                                            FpSpread1.Sheets[0].Cells[i, colnew + 5].BackColor = ColorTranslator.FromHtml("#90EE90");
    //                                                        }
    //                                                    }
    //                                                }
    //                                            }
    //                                            //totalpaid
    //                                        }
    //                                    }
    //                                    string paidvalue = "";
    //                                    if (checkpaid == 0)
    //                                    {
    //                                        paidvalue = Convert.ToString(ds.Tables[2].Rows[i]["paid"].ToString());
    //                                        if (paidvalue == "" || paidvalue == null)
    //                                        {
    //                                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 1].Text = "0";
    //                                        }
    //                                        else
    //                                        {
    //                                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 1].Text = paidvalue;
    //                                        }
    //                                    }
    //                                    double totamount = 0;
    //                                    double fnlamount = 0;
    //                                    double paidamt = 0;
    //                                    if (ds.Tables[1].Rows.Count > 0)
    //                                    {
    //                                        if (chkl_paid.Items.Count > 0)
    //                                        {
    //                                            for (int pay = 0; pay < chkl_paid.Items.Count; pay++)
    //                                            {
    //                                                if (chkl_paid.Items[pay].Selected == true)
    //                                                {
    //                                                    ds.Tables[1].DefaultView.RowFilter = "App_No='" + Convert.ToString(ds.Tables[0].Rows[i]["App_No"].ToString()) + "' and PayMode='" + Convert.ToString(chkl_paid.Items[pay].Value) + "'";
    //                                                    dv = ds.Tables[1].DefaultView;
    //                                                    int colnew = Convert.ToInt32(newhash1[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                                    for (int y = 0; y < dv.Count; y++)
    //                                                    {
    //                                                        if (dv.Count == 0 || dv.Count == null)
    //                                                        {
    //                                                            FpSpread1.Sheets[0].Cells[i, colnew].Text = "0";
    //                                                        }
    //                                                        if (dv.Count > 0)
    //                                                        {
    //                                                            totamount = Convert.ToDouble(dv[y]["total"]);
    //                                                            if (totamount != 0)
    //                                                            {
    //                                                                fnlamount = fnlamount + totamount;
    //                                                                paidamt = paidamt + Convert.ToDouble(totamount);
    //                                                            }
    //                                                        }
    //                                                    }
    //                                                    FpSpread1.Sheets[0].Cells[i, colnew].Text = Convert.ToString(paidamt);
    //                                                    paidamt = 0;
    //                                                }
    //                                            }
    //                                            if (checkpaid != 0)
    //                                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(fnlamount);
    //                                        }
    //                                    }

    //                                }
    //                                if (txt_roll.Text.Trim() != "")
    //                                {
    //                                    FpSpread1.Sheets[0].SetColumnMerge(1, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                                    FpSpread1.Sheets[0].SetColumnMerge(2, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                                    FpSpread1.Sheets[0].SetColumnMerge(3, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                                }
    //                                #endregion
    //                                Button1.Visible = true;
    //                            }
    //                            #endregion

    //                            #region ledger
    //                            if (rbstudled.Checked == true)
    //                            {
    //                                #region design
    //                                loadcolumns();
    //                                DataView dv = new DataView();
    //                                DataView dv1 = new DataView();

    //                                FpSpread1.Sheets[0].RowCount = 0;
    //                                FpSpread1.Sheets[0].ColumnCount = 0;
    //                                FpSpread1.CommandBar.Visible = false;
    //                                FpSpread1.Sheets[0].AutoPostBack = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.RowCount = 2;
    //                                FpSpread1.Sheets[0].RowHeader.Visible = false;
    //                                FpSpread1.Sheets[0].ColumnCount = 4;
    //                                FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
    //                                darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
    //                                darkstyle.ForeColor = Color.White;
    //                                FpSpread1.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
    //                                FarPoint.Web.Spread.TextCellType regnumver = new FarPoint.Web.Spread.TextCellType();
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;

    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Student Name";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Left;
    //                                FpSpread1.Sheets[0].Columns[1].Visible = true;

    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Reg No";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[2].Visible = true;


    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Degree Name";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Left;
    //                                FpSpread1.Sheets[0].Columns[3].Visible = true;

    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 3, 1);
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 3, 1);
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 3, 1);
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 3, 1);
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 3, 1);
    //                                int check = 0;
    //                                Hashtable newhash = new Hashtable();
    //                                if (chkl_studled.Items.Count > 0)
    //                                {
    //                                    for (int s = 0; s < chkl_studled.Items.Count; s++)
    //                                    {
    //                                        if (chkl_studled.Items[s].Selected == true)
    //                                        {
    //                                            check++;
    //                                            FpSpread1.Sheets[0].ColumnCount++;
    //                                            newhash.Add(Convert.ToString(chkl_studled.Items[s].Value), FpSpread1.Sheets[0].ColumnCount - 1);
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_studled.Items[s].Text);
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;

    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Allot";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;

    //                                            FpSpread1.Sheets[0].ColumnCount++;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Concession";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            if (!colord.Contains("2"))
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                            }
    //                                            if (colord.Count == 0)
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            }

    //                                            FpSpread1.Sheets[0].ColumnCount++;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Government";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            if (!colord.Contains("3"))
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                            }
    //                                            if (colord.Count == 0)
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            }

    //                                            FpSpread1.Sheets[0].ColumnCount++;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            if (!colord.Contains("4"))
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                            }
    //                                            if (colord.Count == 0)
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            }

    //                                            FpSpread1.Sheets[0].ColumnCount++;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Paid";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            if (!colord.Contains("5"))
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                            }
    //                                            if (colord.Count == 0)
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            }

    //                                            FpSpread1.Sheets[0].ColumnCount++;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Balance";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            if (!colord.Contains("6"))
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                            }
    //                                            if (colord.Count == 0)
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            }
    //                                            FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 6, 1, 6);
    //                                        }
    //                                    }
    //                                }
    //                                ViewState["Newhash"] = newhash;
    //                                int checkpaid = 0;
    //                                Hashtable newhash1 = new Hashtable();

    //                                if (chkl_paid.Items.Count > 0)
    //                                {
    //                                    for (int s = 0; s < chkl_paid.Items.Count; s++)
    //                                    {
    //                                        if (chkl_paid.Items[s].Selected == true)
    //                                        {
    //                                            checkpaid++;
    //                                            FpSpread1.Sheets[0].ColumnCount++;
    //                                            newhash1.Add(Convert.ToString(chkl_paid.Items[s].Value), FpSpread1.Sheets[0].ColumnCount - 1);
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_paid.Items[s].Text);
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            if (!colord.Contains("5"))
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                            }
    //                                            if (colord.Count == 0)
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            }
    //                                        }
    //                                    }
    //                                    if (checkpaid != 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].ColumnCount++;
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total Paid";
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                        if (!colord.Contains("5"))
    //                                        {
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                        }
    //                                        if (colord.Count == 0)
    //                                        {
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                        }

    //                                    }

    //                                }
    //                                if (checkpaid == 0)
    //                                {
    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Paid";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    if (!colord.Contains("5"))
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                    }
    //                                    if (colord.Count == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    }

    //                                }
    //                                else
    //                                {
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Text = "Paid";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 6, 1, checkpaid + 1);
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].Visible = true;
    //                                    if (!colord.Contains("5"))
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].Visible = false;
    //                                    }
    //                                    if (colord.Count == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].Visible = true;
    //                                    }
    //                                }
    //                                #endregion

    //                                #region value
    //                                DataView Dview = new DataView();
    //                                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
    //                                {
    //                                    FpSpread1.Sheets[0].Rows.Count = ds.Tables[0].Rows.Count;
    //                                    FpSpread1.Sheets[0].Cells[i, 0].Text = Convert.ToString(i + 1);
    //                                    FpSpread1.Sheets[0].Cells[i, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["app_no"].ToString());
    //                                    FpSpread1.Sheets[0].Cells[i, 0].Note = Convert.ToString(ds.Tables[0].Rows[i]["Degree_Code"].ToString());
    //                                    FpSpread1.Sheets[0].Cells[i, 1].Text = Convert.ToString(ds.Tables[0].Rows[i]["Stud_Name"].ToString());
    //                                    FpSpread1.Sheets[0].Cells[i, 2].Tag = Convert.ToString(ds.Tables[0].Rows[i]["Roll_No"].ToString());
    //                                    FpSpread1.Sheets[0].Cells[i, 2].Text = Convert.ToString(ds.Tables[0].Rows[i]["Reg_No"].ToString());
    //                                    FpSpread1.Sheets[0].Cells[i, 2].CellType = regnumver;
    //                                    FpSpread1.Sheets[0].Cells[i, 1].Note = Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"].ToString());
    //                                    string Degreename = "";
    //                                    if (ds.Tables[4].Rows.Count > 0)
    //                                    {
    //                                        ds.Tables[4].DefaultView.RowFilter = "Degree_code='" + Convert.ToString(ds.Tables[0].Rows[i]["Degree_code"]) + "'";
    //                                        Dview = ds.Tables[4].DefaultView;
    //                                        if (Dview.Count > 0)
    //                                        {
    //                                            Degreename = Convert.ToString(Dview[0]["degreename"]);
    //                                            FpSpread1.Sheets[0].Cells[i, 3].Text = Convert.ToString(Degreename);
    //                                        }
    //                                    }
    //                                    string TextName = "";
    //                                    if (ds.Tables[5].Rows.Count > 0)
    //                                    {
    //                                        ds.Tables[5].DefaultView.RowFilter = "TextCode='" + Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"]) + "'";
    //                                        Dview = ds.Tables[5].DefaultView;
    //                                        if (Dview.Count > 0)
    //                                        {
    //                                            TextName = Convert.ToString(Dview[0]["TextVal"]);
    //                                        }
    //                                    }

    //                                    string paidvalue = "";
    //                                    if (checkpaid == 0)
    //                                    {
    //                                        paidvalue = Convert.ToString(ds.Tables[2].Rows[i]["paid"].ToString());
    //                                        if (paidvalue == "" || paidvalue == null)
    //                                        {
    //                                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 1].Text = "0";
    //                                        }
    //                                        else
    //                                        {
    //                                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 1].Text = paidvalue;
    //                                        }
    //                                    }
    //                                    if (ds.Tables[2].Rows.Count > 0)
    //                                    {
    //                                        if (chkl_studled.Items.Count > 0)
    //                                        {
    //                                            for (int pay = 0; pay < chkl_studled.Items.Count; pay++)
    //                                            {
    //                                                if (chkl_studled.Items[pay].Selected == true)
    //                                                {
    //                                                    ds.Tables[2].DefaultView.RowFilter = "app_no='" + Convert.ToString(ds.Tables[0].Rows[i]["app_no"].ToString()) + "' and headerorledger='" + Convert.ToString(chkl_studled.Items[pay].Value) + "' and FeeCategory='" + Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"]) + "'";
    //                                                    dv1 = ds.Tables[2].DefaultView;
    //                                                    if (dv1.Count == 0 || dv1.Count == null)
    //                                                    {
    //                                                        int count = 0;
    //                                                        int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_studled.Items[pay].Value)]);
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew].Text = "0";
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew + 1].Text = "0";
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew + 2].Text = "0";
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew + 3].Text = "0";
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew + 4].Text = "0";
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew + 5].Text = "0";
    //                                                    }
    //                                                    if (dv1.Count > 0)
    //                                                    {
    //                                                        int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_studled.Items[pay].Value)]);
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv1[0]["Allot"].ToString());
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew + 1].Text = Convert.ToString(dv1[0]["Consustion"].ToString());
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew + 2].Text = Convert.ToString(dv1[0]["Government"].ToString());
    //                                                        totalvalue = Convert.ToString(dv1[0]["Total"].ToString());
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew + 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(totalvalue), 2));
    //                                                        totpaid = Convert.ToString(dv1[0]["Paid"].ToString());
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew + 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(totpaid), 2));
    //                                                        bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(totpaid);
    //                                                        FpSpread1.Sheets[0].Cells[i, colnew + 5].Text = Convert.ToString(Math.Round(Convert.ToDouble(bal), 2));
    //                                                        if (Convert.ToDouble(bal) == 0)
    //                                                        {
    //                                                            FpSpread1.Sheets[0].Cells[i, colnew + 5].BackColor = ColorTranslator.FromHtml("#F08080");
    //                                                        }
    //                                                        if (Convert.ToDouble(bal) != 0)
    //                                                        {
    //                                                            FpSpread1.Sheets[0].Cells[i, colnew + 5].BackColor = ColorTranslator.FromHtml("#90EE90");
    //                                                        }
    //                                                    }
    //                                                }
    //                                            }
    //                                        }
    //                                    }
    //                                }
    //                                if (txt_roll.Text.Trim() != "")
    //                                {
    //                                    FpSpread1.Sheets[0].SetColumnMerge(1, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                                    FpSpread1.Sheets[0].SetColumnMerge(2, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                                    FpSpread1.Sheets[0].SetColumnMerge(3, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                                }

    //                                double totamount = 0;
    //                                double fnlamount = 0;
    //                                if (ds.Tables[1].Rows.Count > 0)
    //                                {
    //                                    if (chkl_paid.Items.Count > 0)
    //                                    {
    //                                        for (int pay = 0; pay < chkl_paid.Items.Count; pay++)
    //                                        {
    //                                            if (chkl_paid.Items[pay].Selected == true)
    //                                            {
    //                                                ds.Tables[1].DefaultView.RowFilter = "App_No='" + Convert.ToString(ds.Tables[0].Rows[i]["App_No"].ToString()) + "' and PayMode='" + Convert.ToString(chkl_paid.Items[pay].Value) + "'";
    //                                                dv = ds.Tables[1].DefaultView;
    //                                                if (dv.Count == 0 || dv.Count == null)
    //                                                {
    //                                                    int count = 0;
    //                                                    int colnew = Convert.ToInt32(newhash1[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                                    FpSpread1.Sheets[0].Cells[i, colnew].Text = "0";
    //                                                }
    //                                                if (dv.Count > 0)
    //                                                {
    //                                                    int colnew = Convert.ToInt32(newhash1[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                                    FpSpread1.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv[0]["total"]);
    //                                                    totamount = Convert.ToDouble(dv[0]["total"]);
    //                                                    if (totamount != 0)
    //                                                    {
    //                                                        fnlamount = fnlamount + totamount;
    //                                                    }

    //                                                }
    //                                            }
    //                                        }
    //                                        if (checkpaid != 0)
    //                                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(fnlamount);
    //                                    }
    //                                }
    //                                #endregion
    //                            }
    //                            #endregion
    //                        }
    //                        FpSpread1.SaveChanges();
    //                        #endregion

    //                        #region rbvertical
    //                        if (rb_vert.Checked == true)
    //                        {
    //                            #region header
    //                            if (rbstudhed.Checked == true)
    //                            {
    //                                #region design
    //                                int checkpaid = 0;
    //                                loadcolumns();
    //                                Hashtable newhash = new Hashtable();
    //                                Hashtable newhash1 = new Hashtable();
    //                                Hashtable hedvalue = new Hashtable();
    //                                DataView dv = new DataView();
    //                                DataView dv1 = new DataView();
    //                                FpSpread1.Sheets[0].RowCount = 0;
    //                                FpSpread1.Sheets[0].ColumnCount = 0;
    //                                FpSpread1.CommandBar.Visible = false;
    //                                FpSpread1.Sheets[0].AutoPostBack = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.RowCount = 2;
    //                                FpSpread1.Sheets[0].RowHeader.Visible = false;
    //                                FpSpread1.Sheets[0].ColumnCount = 4;
    //                                FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
    //                                darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
    //                                darkstyle.ForeColor = Color.White;
    //                                FpSpread1.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
    //                                FarPoint.Web.Spread.TextCellType reghed = new FarPoint.Web.Spread.TextCellType();
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;

    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Student Name";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Left;
    //                                FpSpread1.Sheets[0].Columns[1].Visible = true;

    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Reg No ";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[2].Visible = true;


    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Degree Name";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Left;
    //                                FpSpread1.Sheets[0].Columns[3].Visible = true;

    //                                FpSpread1.Sheets[0].ColumnCount++;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Header Name";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Left;
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                                int check = 0;

    //                                if (chkl_studhed.Items.Count > 0)
    //                                {
    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Allot";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Concession";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    if (!colord.Contains("2"))
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                    }
    //                                    if (colord.Count == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    }

    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Government";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    if (!colord.Contains("3"))
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                    }
    //                                    if (colord.Count == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    }

    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    if (!colord.Contains("4"))
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                    }
    //                                    if (colord.Count == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    }

    //                                    ViewState["Newhash"] = newhash;

    //                                    if (chkl_paid.Items.Count > 0)
    //                                    {
    //                                        for (int s = 0; s < chkl_paid.Items.Count; s++)
    //                                        {
    //                                            if (chkl_paid.Items[s].Selected == true)
    //                                            {
    //                                                checkpaid++;
    //                                                FpSpread1.Sheets[0].ColumnCount++;
    //                                                newhash1.Add(Convert.ToString(chkl_paid.Items[s].Value), FpSpread1.Sheets[0].ColumnCount - 1);
    //                                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_paid.Items[s].Text);
    //                                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                                if (!colord.Contains("5"))
    //                                                {
    //                                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                                }
    //                                                if (colord.Count == 0)
    //                                                {
    //                                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                                }
    //                                            }
    //                                        }
    //                                        if (checkpaid != 0)
    //                                        {
    //                                            FpSpread1.Sheets[0].ColumnCount++;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total Paid";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            if (!colord.Contains("5"))
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                            }
    //                                            if (colord.Count == 0)
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            }
    //                                        }
    //                                    }
    //                                    if (checkpaid == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].ColumnCount++;
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Paid";
    //                                        // FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 6, 2, 6);
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                        if (!colord.Contains("5"))
    //                                        {
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                        }
    //                                        if (colord.Count == 0)
    //                                        {
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                        }
    //                                    }
    //                                    else
    //                                    {
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Text = "Paid";
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Font.Bold = true;
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Font.Name = "Book Antiqua";
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Font.Size = FontUnit.Medium;
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Right;
    //                                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 6, 1, checkpaid + 1);
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].Visible = true;
    //                                        if (!colord.Contains("5"))
    //                                        {
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].Visible = false;
    //                                        }
    //                                        if (colord.Count == 0)
    //                                        {
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].Visible = true;
    //                                        }
    //                                    }
    //                                }
    //                                FpSpread1.Sheets[0].ColumnCount++;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Balance";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                if (!colord.Contains("6"))
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                }
    //                                if (colord.Count == 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                }

    //                                FpSpread1.Sheets[0].ColumnCount++;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Refund Amount";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                if (!colord.Contains("7"))
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                }
    //                                if (colord.Count == 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                }

    //                                FpSpread1.Sheets[0].ColumnCount++;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Excess Amount";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                if (!colord.Contains("8"))
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                }
    //                                if (colord.Count == 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                }

    //                                FpSpread1.Sheets[0].ColumnCount++;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Fine Amount";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                if (!colord.Contains("9"))
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                }
    //                                if (colord.Count == 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                }
    //                                #endregion

    //                                #region value

    //                                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
    //                                {
    //                                    if (ds.Tables[2].Rows.Count > 0)
    //                                    {
    //                                        if (chkl_studhed.Items.Count > 0)
    //                                        {
    //                                            for (int pay = 0; pay < chkl_studhed.Items.Count; pay++)
    //                                            {
    //                                                if (chkl_studhed.Items[pay].Selected == true)
    //                                                {
    //                                                    ds.Tables[2].DefaultView.RowFilter = "app_no='" + Convert.ToString(ds.Tables[0].Rows[i]["app_no"].ToString()) + "' and headerorledger='" + Convert.ToString(chkl_studhed.Items[pay].Value) + "' and FeeCategory='" + Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"]) + "'";
    //                                                    dv1 = ds.Tables[2].DefaultView;

    //                                                    FpSpread1.Sheets[0].Rows.Count++;
    //                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(i + 1);
    //                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["app_no"].ToString());
    //                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].Note = Convert.ToString(ds.Tables[0].Rows[i]["Degree_Code"].ToString());
    //                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 1].Text = Convert.ToString(ds.Tables[0].Rows[i]["Stud_Name"].ToString());
    //                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 1].Note = Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"].ToString());
    //                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(ds.Tables[0].Rows[i]["Roll_No"].ToString());
    //                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].Note = Convert.ToString(ds.Tables[0].Rows[i]["Roll_No"].ToString());
    //                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(ds.Tables[0].Rows[i]["Reg_No"].ToString());
    //                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].CellType = reghed;
    //                                                    DataView Dview = new DataView();
    //                                                    string Degreename = "";
    //                                                    if (ds.Tables[4].Rows.Count > 0)
    //                                                    {
    //                                                        ds.Tables[4].DefaultView.RowFilter = "Degree_code='" + Convert.ToString(ds.Tables[0].Rows[i]["Degree_code"]) + "'";
    //                                                        Dview = ds.Tables[4].DefaultView;
    //                                                        if (Dview.Count > 0)
    //                                                        {
    //                                                            Degreename = Convert.ToString(Dview[0]["degreename"]);
    //                                                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 3].Text = Convert.ToString(Degreename);
    //                                                        }
    //                                                    }
    //                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 4].Text = Convert.ToString(chkl_studhed.Items[pay].Text);

    //                                                    if (dv1.Count == 0 || dv1.Count == null)
    //                                                    {
    //                                                        int count = 0;
    //                                                        int colnew = 4;
    //                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, colnew + 1].Text = "0";
    //                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, colnew + 2].Text = "0";
    //                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, colnew + 3].Text = "0";
    //                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, colnew + 4].Text = "0";
    //                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, colnew + 5].Text = "0";
    //                                                    }
    //                                                    if (dv1.Count > 0)
    //                                                    {
    //                                                        int colnew = 4;
    //                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, colnew + 1].Text = Convert.ToString(dv1[0]["Allot"].ToString());
    //                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, colnew + 2].Text = Convert.ToString(dv1[0]["Consustion"].ToString());
    //                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, colnew + 3].Text = Convert.ToString(dv1[0]["Government"].ToString());

    //                                                        totalvalue = Convert.ToString(dv1[0]["Total"].ToString());
    //                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, colnew + 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(totalvalue), 2));

    //                                                        string paidvalue = "";
    //                                                        if (checkpaid == 0)
    //                                                        {
    //                                                            paidvalue = Convert.ToString(ds.Tables[2].Rows[i]["paid"].ToString());
    //                                                            if (paidvalue == "" || paidvalue == null)
    //                                                            {
    //                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, FpSpread1.Sheets[0].ColumnCount - 5].Text = "0";
    //                                                            }
    //                                                            else
    //                                                            {
    //                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, FpSpread1.Sheets[0].ColumnCount - 5].Text = paidvalue;
    //                                                            }
    //                                                        }
    //                                                        double totamount = 0;
    //                                                        double fnlamount = 0;
    //                                                        if (ds.Tables[1].Rows.Count > 0)
    //                                                        {
    //                                                            if (chkl_paid.Items.Count > 0)
    //                                                            {
    //                                                                for (int p = 0; p < chkl_paid.Items.Count; p++)
    //                                                                {
    //                                                                    if (chkl_paid.Items[p].Selected == true)
    //                                                                    {
    //                                                                        ds.Tables[1].DefaultView.RowFilter = "App_No='" + Convert.ToString(ds.Tables[0].Rows[i]["App_No"].ToString()) + "' and PayMode='" + Convert.ToString(chkl_paid.Items[p].Value) + "'  and HeaderandLedger='" + Convert.ToString(chkl_studhed.Items[pay].Value) + "' and FeeCategory='" + Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"]) + "'";
    //                                                                        dv = ds.Tables[1].DefaultView;
    //                                                                        if (dv.Count == 0 || dv.Count == null)
    //                                                                        {
    //                                                                            int count = 0;
    //                                                                            int colnew1 = Convert.ToInt32(newhash1[Convert.ToString(chkl_paid.Items[p].Value)]);
    //                                                                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, colnew1].Text = "0";
    //                                                                        }
    //                                                                        if (dv.Count > 0)
    //                                                                        {
    //                                                                            int colnew1 = Convert.ToInt32(newhash1[Convert.ToString(chkl_paid.Items[p].Value)]);
    //                                                                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, colnew1].Text = Convert.ToString(Math.Round(Convert.ToDouble(dv[0]["total"]), 2));
    //                                                                            totamount = Convert.ToDouble(dv[0]["total"]);
    //                                                                            if (totamount != 0)
    //                                                                            {
    //                                                                                fnlamount = fnlamount + totamount;
    //                                                                            }

    //                                                                        }
    //                                                                    }
    //                                                                }
    //                                                                if (checkpaid != 0)
    //                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, FpSpread1.Sheets[0].ColumnCount - 5].Text = Convert.ToString(fnlamount);
    //                                                                if (totalvalue != "" && totalvalue != null)
    //                                                                {
    //                                                                    bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(fnlamount);
    //                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, FpSpread1.Sheets[0].ColumnCount - 4].Text = Convert.ToString(bal);
    //                                                                    if (Convert.ToDouble(bal) == 0)
    //                                                                    {
    //                                                                        FpSpread1.Sheets[0].Rows[FpSpread1.Sheets[0].RowCount - 1].BackColor = ColorTranslator.FromHtml("#F08080");
    //                                                                    }
    //                                                                    if (Convert.ToDouble(bal) != 0)
    //                                                                    {
    //                                                                        FpSpread1.Sheets[0].Rows[FpSpread1.Sheets[0].RowCount - 1].BackColor = ColorTranslator.FromHtml("#90EE90");
    //                                                                    }
    //                                                                }

    //                                                            }
    //                                                        }
    //                                                    }
    //                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, FpSpread1.Sheets[0].ColumnCount - 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["RefundAmount"].ToString()), 2));
    //                                                    DataView dvex = new DataView();
    //                                                    if (ds.Tables[3].Rows.Count > 0)
    //                                                    {
    //                                                        ds.Tables[3].DefaultView.RowFilter = "App_No='" + Convert.ToString(ds.Tables[0].Rows[i]["App_No"]) + "' and Excessfk='" + Convert.ToString(chkl_studhed.Items[pay].Value) + "'";
    //                                                        dvex = ds.Tables[3].DefaultView;
    //                                                        if (dvex.Count > 0 && dvex.Count != null)
    //                                                        {
    //                                                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, FpSpread1.Sheets[0].ColumnCount - 2].Text = Convert.ToString(dvex[0]["ExcessAmount"]);
    //                                                        }
    //                                                        else
    //                                                        {
    //                                                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                                                        }
    //                                                    }
    //                                                    else
    //                                                    {
    //                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                                                    }
    //                                                }
    //                                            }
    //                                        }
    //                                    }
    //                                }
    //                                FpSpread1.Sheets[0].SetColumnMerge(0, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                                FpSpread1.Sheets[0].SetColumnMerge(1, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                                FpSpread1.Sheets[0].SetColumnMerge(2, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                                FpSpread1.Sheets[0].SetColumnMerge(3, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                #endregion
    //                            }
    //                            #endregion

    //                            #region ledger
    //                            else if (rbstudled.Checked == true)
    //                            {
    //                                #region design
    //                                int checkpaid = 0;
    //                                loadcolumns();
    //                                Hashtable newhash = new Hashtable();
    //                                Hashtable hedvalue = new Hashtable();
    //                                DataView dv = new DataView();
    //                                DataView dv1 = new DataView();
    //                                Hashtable newhash1 = new Hashtable();
    //                                FpSpread1.Sheets[0].RowCount = 0;
    //                                FpSpread1.Sheets[0].ColumnCount = 0;
    //                                FpSpread1.CommandBar.Visible = false;
    //                                FpSpread1.Sheets[0].AutoPostBack = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.RowCount = 2;
    //                                FpSpread1.Sheets[0].RowHeader.Visible = false;
    //                                FpSpread1.Sheets[0].ColumnCount = 4;
    //                                FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
    //                                darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
    //                                darkstyle.ForeColor = Color.White;
    //                                FpSpread1.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
    //                                FarPoint.Web.Spread.TextCellType regled = new FarPoint.Web.Spread.TextCellType();
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;

    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Student Name";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Left;
    //                                FpSpread1.Sheets[0].Columns[1].Visible = true;

    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Reg no";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[2].Visible = true;

    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Degree Name";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Left;
    //                                FpSpread1.Sheets[0].Columns[3].Visible = true;

    //                                FpSpread1.Sheets[0].ColumnCount++;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Ledger Name";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Left;
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                                int check = 0;
    //                                if (chkl_studhed.Items.Count > 0)
    //                                {
    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Allot";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Concession";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    if (!colord.Contains("2"))
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                    }
    //                                    if (colord.Count == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    }

    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Government";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    if (!colord.Contains("3"))
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                    }
    //                                    if (colord.Count == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    }
    //                                    FpSpread1.Sheets[0].ColumnCount++;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    if (!colord.Contains("4"))
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                    }
    //                                    if (colord.Count == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                    }
    //                                    ViewState["Newhash"] = newhash;

    //                                    if (chkl_paid.Items.Count > 0)
    //                                    {
    //                                        for (int s = 0; s < chkl_paid.Items.Count; s++)
    //                                        {
    //                                            if (chkl_paid.Items[s].Selected == true)
    //                                            {
    //                                                checkpaid++;
    //                                                FpSpread1.Sheets[0].ColumnCount++;
    //                                                newhash1.Add(Convert.ToString(chkl_paid.Items[s].Value), FpSpread1.Sheets[0].ColumnCount - 1);
    //                                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_paid.Items[s].Text);
    //                                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                                if (!colord.Contains("5"))
    //                                                {
    //                                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                                }
    //                                                if (colord.Count == 0)
    //                                                {
    //                                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                                }
    //                                            }
    //                                        }
    //                                        if (checkpaid != 0)
    //                                        {
    //                                            FpSpread1.Sheets[0].ColumnCount++;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total Paid";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            if (!colord.Contains("5"))
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                            }
    //                                            if (colord.Count == 0)
    //                                            {
    //                                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                            }
    //                                        }
    //                                    }
    //                                    if (checkpaid == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].ColumnCount++;
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Paid";
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 6, 2, 6);
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                        if (!colord.Contains("5"))
    //                                        {
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                        }
    //                                        if (colord.Count == 0)
    //                                        {
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                        }

    //                                    }
    //                                    else
    //                                    {
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Text = "Paid";
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Font.Bold = true;
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Font.Name = "Book Antiqua";
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].Font.Size = FontUnit.Medium;
    //                                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Right;
    //                                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 6, 1, checkpaid + 1);
    //                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].Visible = true;
    //                                        if (!colord.Contains("5"))
    //                                        {
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].Visible = false;
    //                                        }
    //                                        if (colord.Count == 0)
    //                                        {
    //                                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 6].Visible = true;
    //                                        }
    //                                    }

    //                                }
    //                                FpSpread1.Sheets[0].ColumnCount++;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Balance";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                if (!colord.Contains("6"))
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                }
    //                                if (colord.Count == 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                }

    //                                FpSpread1.Sheets[0].ColumnCount++;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Refund Amount";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                if (!colord.Contains("7"))
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                }
    //                                if (colord.Count == 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                }

    //                                FpSpread1.Sheets[0].ColumnCount++;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Excess Amount";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                if (!colord.Contains("8"))
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                }
    //                                if (colord.Count == 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                }
    //                                #endregion

    //                                #region value
    //                                double totamount = 0;
    //                                double fnlamount = 0;
    //                                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
    //                                {
    //                                    if (ds.Tables[2].Rows.Count > 0)
    //                                    {
    //                                        if (chkl_studled.Items.Count > 0)
    //                                        {
    //                                            for (int pay = 0; pay < chkl_studled.Items.Count; pay++)
    //                                            {
    //                                                if (chkl_studled.Items[pay].Selected == true)
    //                                                {
    //                                                    ds.Tables[2].DefaultView.RowFilter = "app_no='" + Convert.ToString(ds.Tables[0].Rows[i]["app_no"].ToString()) + "' and headerorledger='" + Convert.ToString(chkl_studled.Items[pay].Value) + "' and FeeCategory='" + Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"]) + "'";
    //                                                    dv1 = ds.Tables[2].DefaultView;

    //                                                    FpSpread1.Sheets[0].Rows.Count++;
    //                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(i + 1);
    //                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[i]["app_no"].ToString());
    //                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].Note = Convert.ToString(ds.Tables[0].Rows[i]["Degree_Code"].ToString());
    //                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 1].Text = Convert.ToString(ds.Tables[0].Rows[i]["Stud_Name"].ToString());
    //                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 1].Note = Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"].ToString());
    //                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 1].Tag = Convert.ToString(ds.Tables[0].Rows[i]["Roll_No"].ToString());
    //                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].Note = Convert.ToString(ds.Tables[0].Rows[i]["Roll_No"].ToString());
    //                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(ds.Tables[0].Rows[i]["Reg_No"].ToString());
    //                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].CellType = regled;

    //                                                    DataView Dview = new DataView();
    //                                                    string Degreename = "";
    //                                                    if (ds.Tables[4].Rows.Count > 0)
    //                                                    {
    //                                                        ds.Tables[4].DefaultView.RowFilter = "Degree_code='" + Convert.ToString(ds.Tables[0].Rows[i]["Degree_code"]) + "'";
    //                                                        Dview = ds.Tables[4].DefaultView;
    //                                                        if (Dview.Count > 0)
    //                                                        {
    //                                                            Degreename = Convert.ToString(Dview[0]["degreename"]);
    //                                                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 3].Text = Convert.ToString(Degreename);
    //                                                        }
    //                                                    }
    //                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 4].Text = Convert.ToString(chkl_studled.Items[pay].Text);

    //                                                    if (dv1.Count == 0 || dv1.Count == null)
    //                                                    {
    //                                                        int count = 0;
    //                                                        int colnew = 4;
    //                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, colnew + 1].Text = "0";
    //                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, colnew + 2].Text = "0";
    //                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, colnew + 3].Text = "0";
    //                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, colnew + 4].Text = "0";
    //                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, colnew + 5].Text = "0";
    //                                                    }
    //                                                    if (dv1.Count > 0)
    //                                                    {
    //                                                        int colnew = 4;
    //                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, colnew + 1].Text = Convert.ToString(dv1[0]["Allot"].ToString());
    //                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, colnew + 2].Text = Convert.ToString(dv1[0]["Consustion"].ToString());
    //                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, colnew + 3].Text = Convert.ToString(dv1[0]["Government"].ToString());
    //                                                        totalvalue = Convert.ToString(dv1[0]["Total"].ToString());
    //                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, colnew + 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(totalvalue), 2));
    //                                                        string paidvalue = "";
    //                                                        if (checkpaid == 0)
    //                                                        {
    //                                                            paidvalue = Convert.ToString(ds.Tables[2].Rows[i]["paid"].ToString());
    //                                                            if (paidvalue == "" || paidvalue == null)
    //                                                            {
    //                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, FpSpread1.Sheets[0].ColumnCount - 5].Text = "0";
    //                                                            }
    //                                                            else
    //                                                            {
    //                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, FpSpread1.Sheets[0].ColumnCount - 5].Text = paidvalue;
    //                                                            }
    //                                                        }
    //                                                        if (ds.Tables[1].Rows.Count > 0)
    //                                                        {
    //                                                            if (chkl_paid.Items.Count > 0)
    //                                                            {
    //                                                                for (int p = 0; p < chkl_paid.Items.Count; p++)
    //                                                                {
    //                                                                    if (chkl_paid.Items[p].Selected == true)
    //                                                                    {
    //                                                                        ds.Tables[1].DefaultView.RowFilter = "App_No='" + Convert.ToString(ds.Tables[0].Rows[i]["App_No"].ToString()) + "' and PayMode='" + Convert.ToString(chkl_paid.Items[p].Value) + "'  and HeaderandLedger='" + Convert.ToString(chkl_studled.Items[pay].Value) + "' and FeeCategory='" + Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"]) + "'";
    //                                                                        dv = ds.Tables[1].DefaultView;
    //                                                                        if (dv.Count == 0 || dv.Count == null)
    //                                                                        {
    //                                                                            int count = 0;
    //                                                                            int colnew1 = Convert.ToInt32(newhash1[Convert.ToString(chkl_paid.Items[p].Value)]);
    //                                                                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, colnew1].Text = "0";
    //                                                                        }
    //                                                                        if (dv.Count > 0)
    //                                                                        {
    //                                                                            int colnew1 = Convert.ToInt32(newhash1[Convert.ToString(chkl_paid.Items[p].Value)]);
    //                                                                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, colnew1].Text = Convert.ToString(dv[0]["total"]);
    //                                                                            totamount = Convert.ToDouble(dv[0]["total"]);
    //                                                                            if (totamount != 0)
    //                                                                            {
    //                                                                                fnlamount = fnlamount + totamount;
    //                                                                            }

    //                                                                        }
    //                                                                    }
    //                                                                }
    //                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, FpSpread1.Sheets[0].ColumnCount - 5].Text = Convert.ToString(fnlamount);

    //                                                                if (totalvalue != "" && totalvalue != null)
    //                                                                {
    //                                                                    bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(fnlamount);
    //                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, FpSpread1.Sheets[0].ColumnCount - 4].Text = Convert.ToString(bal);
    //                                                                    if (Convert.ToDouble(bal) == 0)
    //                                                                    {
    //                                                                        FpSpread1.Sheets[0].Rows[FpSpread1.Sheets[0].RowCount - 1].BackColor = ColorTranslator.FromHtml("#F08080");
    //                                                                    }
    //                                                                    if (Convert.ToDouble(bal) != 0)
    //                                                                    {
    //                                                                        FpSpread1.Sheets[0].Rows[FpSpread1.Sheets[0].RowCount - 1].BackColor = ColorTranslator.FromHtml("#90EE90");
    //                                                                    }
    //                                                                }
    //                                                                fnlamount = 0;
    //                                                            }
    //                                                        }
    //                                                    }
    //                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, FpSpread1.Sheets[0].ColumnCount - 3].Text = Convert.ToString(ds.Tables[0].Rows[i]["RefundAmount"].ToString());
    //                                                    DataView dvex = new DataView();
    //                                                    if (ds.Tables[3].Rows.Count > 0)
    //                                                    {
    //                                                        ds.Tables[3].DefaultView.RowFilter = "App_No='" + Convert.ToString(ds.Tables[0].Rows[i]["App_No"]) + "'";
    //                                                        dvex = ds.Tables[3].DefaultView;
    //                                                        if (dvex.Count > 0 && dvex.Count != null)
    //                                                        {
    //                                                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, FpSpread1.Sheets[0].ColumnCount - 2].Text = Convert.ToString(dvex[0]["ExcessAmount"]);
    //                                                        }
    //                                                        else
    //                                                        {
    //                                                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                                                        }
    //                                                    }
    //                                                    else
    //                                                    {
    //                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                                                    }

    //                                                }
    //                                            }
    //                                        }
    //                                    }

    //                                }
    //                                FpSpread1.Sheets[0].SetColumnMerge(0, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                                FpSpread1.Sheets[0].SetColumnMerge(1, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                                FpSpread1.Sheets[0].SetColumnMerge(2, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                                FpSpread1.Sheets[0].SetColumnMerge(3, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                                #endregion
    //                            }
    //                            #endregion
    //                        }
    //                        #endregion
    //                    }

    //                #endregion

    //                    #region visible
    //                    FpSpread1.Attributes.Add("Style", "cursor:Default;");
    //                    FpSpread1.Sheets[0].SelectionBackColor = Color.White;
    //                    FpSpread1.Sheets[0].PageSize = FpSpread1.Sheets[0].RowCount;
    //                    FpSpread1.SaveChanges();
    //                    header.Visible = true;
    //                    div1.Visible = true;
    //                    FpSpread1.Visible = true;
    //                    divledger.Visible = false;
    //                    lbl_ledg.Visible = false;
    //                    lbl_ledg.Text = "";
    //                    fpledger.Visible = false;
    //                    lbl_bat.Visible = false;
    //                    lbl_bat.Text = "";
    //                    fpbatch.Visible = false;
    //                    lbl_degr.Visible = false;
    //                    lbl_degr.Text = "";
    //                    fpdegree.Visible = false;
    //                    lbl_dep.Visible = false;
    //                    lbl_dep.Text = "";
    //                    fpdept.Visible = false;
    //                    lbl_sem.Visible = false; ;
    //                    lbl_sem.Text = "";
    //                    fpsem.Visible = false;
    //                    rptprint.Visible = true;
    //                    //  rptprint.Attributes.Add("Style", "margin-top:-499px; margin-left:10px;");
    //                    // rb_detail.Checked = true;
    //                    rb_hori.Checked = true;
    //                    rbstudhed.Checked = true;
    //                    // pagelnk.Visible = true;
    //                    // LinkButton3.Visible = true;
    //                    lblhed.Text = "Studentwise";
    //                    pheaderfilter.Visible = true;
    //                    pcolumnorder.Visible = true;
    //                    //pnlledgercolorder.Visible = false;
    //                    //Pnlledcolorder.Visible = false;
    //                    //pnl_batchcolorder.Visible = false;
    //                    //pnl_batcolorder.Visible = false;
    //                    //pnl_degcolorder.Visible = false;
    //                    //pnl_degreecolorder.Visible = false;
    //                    //pnl_deptcolord.Visible = false;
    //                    //pnl_deptcolorder.Visible = false;
    //                    //pnl_semcolord.Visible = false;
    //                    //pnl_semcolorder.Visible = false;
    //                    //btn_fpled.Visible = false;
    //                    //btn_fpbat.Visible = false;
    //                    //btn_fpdeg.Visible = false;
    //                    //btn_fpdep.Visible = false;
    //                    //pnl_studcolord.Visible = false;
    //                    //pnl_studcolorder.Visible = false;
    //                    divstudcell.Visible = false;
    //                    lbl_semcell.Text = "";
    //                    divdept.Visible = false;
    //                    divdegree.Visible = false;
    //                    divbatch.Visible = false;
    //                    FpSpread1.ShowHeaderSelection = false;
    //                    FpSpread1.Sheets[0].SelectionBackColor = Color.White;
    //                    header.Attributes.Add("Style", "height:auto; width:950px; overflow:auto;");
    //                    div1.Attributes.Add("Style", "height:auto; width:950px;overflow:auto; ");
    //                    #endregion


    //                }

    //                else
    //                {
    //                    FpSpread1.Visible = false;
    //                    div1.Visible = false;
    //                    // panelcollaps.Visible = false;
    //                    pheaderfilter.Visible = false;
    //                    imgdiv2.Visible = true;
    //                    lbl_alert.Visible = true;
    //                    lbl_alert.Text = "Please Select At Least Any One Header Or Ledger";
    //                }
    //            }
    //            else
    //            {
    //                FpSpread1.Visible = false;
    //                div1.Visible = false;
    //                rptprint.Visible = false;
    //                pheaderfilter.Visible = false;
    //                pcolumnorder.Visible = false;
    //                lblhed.Text = "";
    //                imgdiv2.Visible = true;
    //                lbl_alert.Visible = true;
    //                lbl_alert.Text = "No Record Found";
    //            }
    //        }
    //    }
    //    catch { }
    //}
    //#endregion

    //#region others method
    //public void othersvalues()
    //{
    //    try
    //    {
    //        if (ds.Tables.Count > 0)
    //        {
    //            if (ds.Tables[0].Rows.Count > 0)
    //            {
    //                string totalvalue = "";
    //                double bal = 0;
    //                DataView Dview = new DataView();
    //                if (rbstaff.Checked == true)
    //                {
    //                    #region staff
    //                    lblhed.Text = "Others-->Staff";
    //                    #region design
    //                    loadcolumns();
    //                    DataView dv = new DataView();
    //                    FpSpread1.Sheets[0].RowCount = 0;
    //                    FpSpread1.Sheets[0].ColumnCount = 0;
    //                    FpSpread1.CommandBar.Visible = false;
    //                    FpSpread1.Sheets[0].AutoPostBack = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.RowCount = 2;
    //                    FpSpread1.Sheets[0].RowHeader.Visible = false;
    //                    FpSpread1.Sheets[0].ColumnCount = 8;

    //                    FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
    //                    darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
    //                    darkstyle.ForeColor = Color.White;
    //                    FpSpread1.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
    //                    int check = 0;

    //                    FarPoint.Web.Spread.TextCellType regnum = new FarPoint.Web.Spread.TextCellType();
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;

    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Staff Code";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Left;
    //                    FpSpread1.Sheets[0].Columns[1].Visible = true;


    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Staff Name";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[2].Visible = true;


    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Semester";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Left;
    //                    FpSpread1.Sheets[0].Columns[3].Visible = false;


    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Department";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[4].HorizontalAlign = HorizontalAlign.Left;
    //                    FpSpread1.Sheets[0].Columns[4].Visible = true;


    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Allot";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[5].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[5].Visible = true;
    //                    if (!colord.Contains("1"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[5].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[5].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Concession";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[6].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[6].Visible = true;
    //                    if (!colord.Contains("2"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[6].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[6].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].Text = "Government";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 7].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[7].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[7].Visible = true;
    //                    if (!colord.Contains("3"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[7].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[7].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("4"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 5, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 7, 2, 1);

    //                    Hashtable newhash = new Hashtable();

    //                    if (chkl_paid.Items.Count > 0)
    //                    {
    //                        for (int s = 0; s < chkl_paid.Items.Count; s++)
    //                        {
    //                            if (chkl_paid.Items[s].Selected == true)
    //                            {
    //                                check++;
    //                                FpSpread1.Sheets[0].ColumnCount++;
    //                                newhash.Add(Convert.ToString(chkl_paid.Items[s].Value), FpSpread1.Sheets[0].ColumnCount - 1);
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_paid.Items[s].Text);
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                if (!colord.Contains("5"))
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                }
    //                                if (colord.Count == 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                }
    //                            }
    //                        }
    //                        if (check != 0)
    //                        {
    //                            FpSpread1.Sheets[0].ColumnCount++;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total Paid";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                            if (!colord.Contains("5"))
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                            }
    //                            if (colord.Count == 0)
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                            }
    //                        }

    //                    }
    //                    if (check == 0)
    //                    {
    //                        FpSpread1.Sheets[0].ColumnCount++;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Paid";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        if (!colord.Contains("5"))
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                        }
    //                        if (colord.Count == 0)
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        }
    //                    }
    //                    else
    //                    {
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 9, 1, check + 1);
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 9].Text = "Paid";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 9].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 9].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 9].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 9].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 9].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[9].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[9].Visible = true;
    //                        if (!colord.Contains("5"))
    //                        {
    //                            FpSpread1.Sheets[0].Columns[9].Visible = false;
    //                        }
    //                        if (colord.Count == 0)
    //                        {
    //                            FpSpread1.Sheets[0].Columns[9].Visible = true;
    //                        }
    //                    }


    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Balance";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("6"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }

    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Refund Amount";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("7"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Excess Amount";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("8"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Fine Amount";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("9"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }

    //                    #endregion

    //                    #region values
    //                    for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
    //                    {
    //                        FpSpread1.Sheets[0].Rows.Count = ds.Tables[0].Rows.Count;
    //                        FpSpread1.Sheets[0].Cells[i, 0].Text = Convert.ToString(i + 1);
    //                        FpSpread1.Sheets[0].Cells[i, 1].Text = Convert.ToString(ds.Tables[0].Rows[i]["staff_code"].ToString());

    //                        FpSpread1.Sheets[0].Cells[i, 2].Text = Convert.ToString(ds.Tables[0].Rows[i]["staff_name"].ToString());
    //                        FpSpread1.Sheets[0].Cells[i, 2].CellType = regnum;
    //                        //string TextName = "";
    //                        //if (ds.Tables[4].Rows.Count > 0)
    //                        //{
    //                        //    ds.Tables[4].DefaultView.RowFilter = "TextCode='" + Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"]) + "'";
    //                        //    Dview = ds.Tables[4].DefaultView;
    //                        //    if (Dview.Count > 0)
    //                        //    {
    //                        //        TextName = Convert.ToString(Dview[0]["TextVal"]);
    //                        //    }
    //                        //}
    //                        //FpSpread1.Sheets[0].Cells[i, 3].Text = Convert.ToString(TextName);
    //                        string Degreename = "";
    //                        if (ds.Tables[3].Rows.Count > 0)
    //                        {
    //                            ds.Tables[3].DefaultView.RowFilter = "dept_code='" + Convert.ToString(ds.Tables[0].Rows[i]["dept_code"]) + "'";
    //                            Dview = ds.Tables[3].DefaultView;
    //                            if (Dview.Count > 0)
    //                            {
    //                                Degreename = Convert.ToString(Dview[0]["degreename"]);
    //                            }
    //                        }
    //                        FpSpread1.Sheets[0].Cells[i, 4].Text = Convert.ToString(Degreename);

    //                        allot = Convert.ToString(ds.Tables[0].Rows[i]["Allot"]);
    //                        if (allot != "" && allot != null)
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, 5].Text = Convert.ToString(Math.Round(Convert.ToDouble(allot), 2));
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, 5].Text = "0";
    //                        }
    //                        consession = Convert.ToString(ds.Tables[0].Rows[i]["consustion"]);
    //                        if (consession != "" && consession != null)
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, 6].Text = Convert.ToString(Math.Round(Convert.ToDouble(consession), 2));
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, 6].Text = "0";
    //                        }
    //                        string val = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
    //                        string value = "";
    //                        if (val == "" || val == null)
    //                        {
    //                            value = "0";
    //                        }
    //                        else
    //                        {
    //                            value = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
    //                        }
    //                        FpSpread1.Sheets[0].Cells[i, 7].Text = value;
    //                        totalvalue = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Total"]), 2));
    //                        FpSpread1.Sheets[0].Cells[i, 8].Text = Convert.ToString(totalvalue);
    //                        string paidvalue = "";
    //                        if (check == 0)
    //                        {
    //                            paidvalue = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
    //                            if (paidvalue == "" || paidvalue == null)
    //                            {
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = "0";
    //                            }
    //                            else
    //                            {
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = paidvalue;
    //                            }
    //                        }
    //                        FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["RefundAmount"]), 2));
    //                        DataView dvex = new DataView();
    //                        if (ds.Tables[2].Rows.Count > 0)
    //                        {
    //                            ds.Tables[2].DefaultView.RowFilter = "appl_id='" + Convert.ToString(ds.Tables[0].Rows[i]["appl_id"]) + "'";
    //                            dvex = ds.Tables[2].DefaultView;
    //                            if (dvex.Count > 0 && dvex.Count != null)
    //                            {
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = Convert.ToString(dvex[0]["ExcessAmount"]);
    //                            }
    //                            else
    //                            {
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                            }
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                        }
    //                        double totamount = 0;
    //                        double fnlamount = 0;
    //                        if (ds.Tables[1].Rows.Count > 0)
    //                        {
    //                            if (chkl_paid.Items.Count > 0)
    //                            {
    //                                for (int pay = 0; pay < chkl_paid.Items.Count; pay++)
    //                                {
    //                                    if (chkl_paid.Items[pay].Selected == true)
    //                                    {
    //                                        ds.Tables[1].DefaultView.RowFilter = "appl_id='" + Convert.ToString(ds.Tables[0].Rows[i]["appl_id"].ToString()) + "' and PayMode='" + Convert.ToString(chkl_paid.Items[pay].Value) + "'";
    //                                        dv = ds.Tables[1].DefaultView;
    //                                        if (dv.Count == 0 || dv.Count == null)
    //                                        {
    //                                            int count = 0;
    //                                            int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                            FpSpread1.Sheets[0].Cells[i, colnew].Text = "0";
    //                                        }
    //                                        if (dv.Count > 0)
    //                                        {
    //                                            int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                            FpSpread1.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv[0]["total"]);
    //                                            totamount = Convert.ToDouble(dv[0]["total"]);
    //                                            if (totamount != 0)
    //                                            {
    //                                                fnlamount = fnlamount + totamount;
    //                                            }
    //                                        }
    //                                    }
    //                                }
    //                                if (check != 0)
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = Convert.ToString(fnlamount);
    //                                if (totalvalue != "" && totalvalue != null)
    //                                {
    //                                    bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(fnlamount);
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 4].Text = Convert.ToString(bal);
    //                                    if (Convert.ToDouble(bal) == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#F08080");
    //                                    }
    //                                    if (Convert.ToDouble(bal) != 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#90EE90");
    //                                    }
    //                                }
    //                            }
    //                        }
    //                    }
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    if (txt_roll.Text.Trim() != "")
    //                    {
    //                        FpSpread1.Sheets[0].SetColumnMerge(1, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                        FpSpread1.Sheets[0].SetColumnMerge(2, FarPoint.Web.Spread.Model.MergePolicy.Always);
    //                    }

    //                    #endregion

    //                    #region grandtot
    //                    FpSpread1.Sheets[0].PageSize = ds.Tables[0].Rows.Count + 1;
    //                    FpSpread1.Sheets[0].Rows.Count++;
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, 0].Text = "Grand Total";
    //                    double hedval = 0;
    //                    for (int j = 5; j < FpSpread1.Sheets[0].Columns.Count; j++)
    //                    {
    //                        for (int i = 0; i < FpSpread1.Rows.Count - 1; i++)
    //                        {
    //                            string values = Convert.ToString(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                            if (values != "0" && values != "-" && values != "")
    //                            {
    //                                if (hedval == 0)
    //                                {
    //                                    hedval = Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                                }
    //                                else
    //                                {
    //                                    hedval = hedval + Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                                }
    //                            }
    //                        }
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, j].Text = Convert.ToString(hedval);
    //                        hedval = 0;
    //                    }
    //                    #endregion
    //                    #endregion
    //                }
    //                else if (rbvendor.Checked == true)
    //                {
    //                    #region vendor
    //                    lblhed.Text = "Others-->Vendor";
    //                    #region design
    //                    loadcolumns();
    //                    DataView dv = new DataView();
    //                    FpSpread1.Sheets[0].RowCount = 0;
    //                    FpSpread1.Sheets[0].ColumnCount = 0;
    //                    FpSpread1.CommandBar.Visible = false;
    //                    FpSpread1.Sheets[0].AutoPostBack = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.RowCount = 2;
    //                    FpSpread1.Sheets[0].RowHeader.Visible = false;
    //                    FpSpread1.Sheets[0].ColumnCount = 7;
    //                    FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
    //                    darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
    //                    darkstyle.ForeColor = Color.White;
    //                    FpSpread1.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
    //                    int check = 0;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;

    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Vendor Code";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Left;
    //                    FpSpread1.Sheets[0].Columns[1].Visible = true;

    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Vendor Name";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Left;
    //                    FpSpread1.Sheets[0].Columns[2].Visible = true;

    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Semester";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[3].Visible = false;

    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Allot";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[4].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[4].Visible = true;
    //                    if (!colord.Contains("1"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[4].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[4].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Concession";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[5].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[5].Visible = true;
    //                    if (!colord.Contains("2"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[5].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[5].Visible = true;
    //                    }

    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Government";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[6].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[6].Visible = true;
    //                    if (!colord.Contains("3"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[6].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[6].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("4"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 5, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 2, 1);
    //                    Hashtable newhash = new Hashtable();

    //                    if (chkl_paid.Items.Count > 0)
    //                    {
    //                        for (int s = 0; s < chkl_paid.Items.Count; s++)
    //                        {
    //                            if (chkl_paid.Items[s].Selected == true)
    //                            {
    //                                check++;
    //                                FpSpread1.Sheets[0].ColumnCount++;
    //                                newhash.Add(Convert.ToString(chkl_paid.Items[s].Value), FpSpread1.Sheets[0].ColumnCount - 1);
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_paid.Items[s].Text);
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Tag = Convert.ToString(chkl_paid.Items[s].Value);
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                if (!colord.Contains("5"))
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                }
    //                                if (colord.Count == 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                }

    //                            }

    //                        }
    //                        if (check != 0)
    //                        {
    //                            FpSpread1.Sheets[0].ColumnCount++;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total Paid";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                            if (!colord.Contains("5"))
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                            }
    //                            if (colord.Count == 0)
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                            }
    //                        }
    //                    }
    //                    if (check == 0)
    //                    {
    //                        FpSpread1.Sheets[0].ColumnCount++;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Paid";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        if (!colord.Contains("5"))
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                        }
    //                        if (colord.Count == 0)
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        }
    //                    }
    //                    else
    //                    {
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 8, 1, check + 1);
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 8].Text = "Paid";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 8].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 8].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 8].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 8].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 8].HorizontalAlign = HorizontalAlign.Center;
    //                        if (!colord.Contains("5"))
    //                        {
    //                            FpSpread1.Sheets[0].Columns[8].Visible = false;
    //                        }
    //                        if (colord.Count == 0)
    //                        {
    //                            FpSpread1.Sheets[0].Columns[8].Visible = true;
    //                        }
    //                    }

    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Balance";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("6"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);


    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Refund Amount";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("7"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Excess Amount";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("8"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Fine Amount";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("9"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;


    //                    #endregion

    //                    #region value
    //                    double totamount = 0;
    //                    double fnlamount = 0;
    //                    for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
    //                    {
    //                        FpSpread1.Sheets[0].Rows.Count = ds.Tables[0].Rows.Count;
    //                        FpSpread1.Sheets[0].Cells[i, 0].Text = Convert.ToString(i + 1);

    //                        FpSpread1.Sheets[0].Cells[i, 1].Text = Convert.ToString(ds.Tables[0].Rows[i]["VendorCode"].ToString());
    //                        FpSpread1.Sheets[0].Cells[i, 2].Text = Convert.ToString(ds.Tables[0].Rows[i]["VendorName"].ToString());
    //                        string TextName = "";
    //                        if (ds.Tables[3].Rows.Count > 0)
    //                        {
    //                            ds.Tables[3].DefaultView.RowFilter = "TextCode='" + Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"]) + "'";
    //                            Dview = ds.Tables[3].DefaultView;
    //                            if (Dview.Count > 0)
    //                            {
    //                                TextName = Convert.ToString(Dview[0]["TextVal"]);
    //                            }
    //                        }
    //                        FpSpread1.Sheets[0].Cells[i, 3].Text = Convert.ToString(TextName);

    //                        allot = Convert.ToString(ds.Tables[0].Rows[i]["Allot"]);
    //                        if (allot != "" && allot != null)
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(allot), 2));
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, 4].Text = "0";
    //                        }
    //                        consession = Convert.ToString(ds.Tables[0].Rows[i]["consustion"]);
    //                        if (consession != "" && consession != null)
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, 5].Text = Convert.ToString(Math.Round(Convert.ToDouble(consession), 2));
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, 5].Text = "0";
    //                        }
    //                        string val = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
    //                        string value = "";
    //                        if (val == "" || val == null)
    //                        {
    //                            value = "0";
    //                        }
    //                        else
    //                        {
    //                            value = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
    //                        }
    //                        FpSpread1.Sheets[0].Cells[i, 6].Text = value;
    //                        totalvalue = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Total"]), 2));
    //                        FpSpread1.Sheets[0].Cells[i, 7].Text = Convert.ToString(totalvalue);
    //                        string paidvalue = "";
    //                        if (check == 0)
    //                        {
    //                            DataView dsnew = new DataView();
    //                            paidvalue = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
    //                            if (ds.Tables[0].Rows.Count > 0)
    //                            {
    //                                ds.Tables[0].DefaultView.RowFilter = " VendorCode='" + Convert.ToString(ds.Tables[0].Rows[i]["VendorCode"]) + "'";
    //                                dsnew = ds.Tables[0].DefaultView;
    //                                if (dsnew.Count > 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = Convert.ToString(dsnew[0]["Paid"]);
    //                                    fnlamount = Convert.ToDouble(paidvalue);
    //                                }

    //                            }
    //                            else
    //                            {
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = "0";
    //                            }

    //                        }
    //                        FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 3].Text = Convert.ToString(ds.Tables[0].Rows[i]["RefundAmount"]);
    //                        DataView dvex = new DataView();
    //                        if (ds.Tables[2].Rows.Count > 0)
    //                        {
    //                            ds.Tables[2].DefaultView.RowFilter = "VendorCode='" + Convert.ToString(ds.Tables[0].Rows[i]["VendorCode"]) + "'";
    //                            dvex = ds.Tables[2].DefaultView;
    //                            if (dvex.Count > 0 && dvex.Count != null)
    //                            {
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = Convert.ToString(dvex[0]["ExcessAmount"]);
    //                            }
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                        }

    //                        if (ds.Tables[1].Rows.Count > 0)
    //                        {
    //                            if (chkl_paid.Items.Count > 0)
    //                            {
    //                                for (int pay = 0; pay < chkl_paid.Items.Count; pay++)
    //                                {
    //                                    if (chkl_paid.Items[pay].Selected == true)
    //                                    {
    //                                        ds.Tables[1].DefaultView.RowFilter = "VendorCode='" + Convert.ToString(ds.Tables[0].Rows[i]["VendorCode"].ToString()) + "' and PayMode='" + Convert.ToString(chkl_paid.Items[pay].Value) + "'";
    //                                        //and FeeCategory='" + Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"]) + "'
    //                                        dv = ds.Tables[1].DefaultView;
    //                                        if (dv.Count == 0 || dv.Count == null)
    //                                        {
    //                                            int count = 0;
    //                                            int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                            FpSpread1.Sheets[0].Cells[i, colnew].Text = "0";
    //                                        }
    //                                        if (dv.Count > 0)
    //                                        {
    //                                            int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                            FpSpread1.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv[0]["total"]);
    //                                            totamount = Convert.ToDouble(dv[0]["total"]);
    //                                            if (totamount != 0)
    //                                            {
    //                                                fnlamount = fnlamount + totamount;
    //                                            }
    //                                        }
    //                                    }
    //                                }
    //                                if (check != 0)
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = Convert.ToString(fnlamount);
    //                                if (totalvalue != "" && totalvalue != null)
    //                                {
    //                                    bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(fnlamount);
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 4].Text = Convert.ToString(bal);
    //                                    if (Convert.ToDouble(bal) == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#F08080");
    //                                    }
    //                                    if (Convert.ToDouble(bal) != 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#90EE90");
    //                                    }
    //                                }
    //                            }
    //                        }
    //                    }
    //                    #endregion

    //                    #region grandtot
    //                    FpSpread1.Sheets[0].PageSize = ds.Tables[0].Rows.Count + 1;
    //                    FpSpread1.Sheets[0].Rows.Count++;
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, 0].Text = "Grand Total";
    //                    double hedval = 0;
    //                    for (int j = 4; j < FpSpread1.Sheets[0].Columns.Count; j++)
    //                    {
    //                        for (int i = 0; i < FpSpread1.Rows.Count - 1; i++)
    //                        {
    //                            string values = Convert.ToString(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                            if (values != "0" && values != "-" && values != "")
    //                            {
    //                                if (hedval == 0)
    //                                {
    //                                    hedval = Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                                }
    //                                else
    //                                {
    //                                    hedval = hedval + Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                                }
    //                            }
    //                        }
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, j].Text = Convert.ToString(hedval);
    //                        hedval = 0;
    //                    }
    //                    #endregion
    //                    #endregion
    //                }
    //                else if (rbothers.Checked == true)
    //                {
    //                    #region others
    //                    lblhed.Text = "Others-->Others";
    //                    #region design
    //                    loadcolumns();
    //                    DataView dv = new DataView();
    //                    FpSpread1.Sheets[0].RowCount = 0;
    //                    FpSpread1.Sheets[0].ColumnCount = 0;
    //                    FpSpread1.CommandBar.Visible = false;
    //                    FpSpread1.Sheets[0].AutoPostBack = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.RowCount = 2;
    //                    FpSpread1.Sheets[0].RowHeader.Visible = false;
    //                    FpSpread1.Sheets[0].ColumnCount = 7;
    //                    FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
    //                    darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
    //                    darkstyle.ForeColor = Color.White;
    //                    FpSpread1.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
    //                    int check = 0;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;

    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Vendor Code";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Left;
    //                    FpSpread1.Sheets[0].Columns[1].Visible = true;

    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Vendor Name";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Left;
    //                    FpSpread1.Sheets[0].Columns[2].Visible = true;

    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Semester";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[3].Visible = false;

    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Allot";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[4].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[4].Visible = true;
    //                    if (!colord.Contains("1"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[4].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[4].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Concession";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[5].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[5].Visible = true;
    //                    if (!colord.Contains("2"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[5].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[5].Visible = true;
    //                    }

    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Government";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[6].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[6].Visible = true;
    //                    if (!colord.Contains("3"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[6].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[6].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("4"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 5, 2, 1);
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 2, 1);
    //                    Hashtable newhash = new Hashtable();

    //                    if (chkl_paid.Items.Count > 0)
    //                    {
    //                        for (int s = 0; s < chkl_paid.Items.Count; s++)
    //                        {
    //                            if (chkl_paid.Items[s].Selected == true)
    //                            {
    //                                check++;
    //                                FpSpread1.Sheets[0].ColumnCount++;
    //                                newhash.Add(Convert.ToString(chkl_paid.Items[s].Value), FpSpread1.Sheets[0].ColumnCount - 1);
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_paid.Items[s].Text);
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Tag = Convert.ToString(chkl_paid.Items[s].Value);
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                                FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                if (!colord.Contains("5"))
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                                }
    //                                if (colord.Count == 0)
    //                                {
    //                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                                }

    //                            }

    //                        }
    //                        if (check != 0)
    //                        {
    //                            FpSpread1.Sheets[0].ColumnCount++;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Total Paid";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                            FpSpread1.Sheets[0].ColumnHeader.Cells[1, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                            if (!colord.Contains("5"))
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                            }
    //                            if (colord.Count == 0)
    //                            {
    //                                FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                            }
    //                        }
    //                    }
    //                    if (check == 0)
    //                    {
    //                        FpSpread1.Sheets[0].ColumnCount++;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Paid";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        if (!colord.Contains("5"))
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                        }
    //                        if (colord.Count == 0)
    //                        {
    //                            FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                        }
    //                    }
    //                    else
    //                    {
    //                        FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 8, 1, check + 1);
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 8].Text = "Paid";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 8].ForeColor = ColorTranslator.FromHtml("#000000");
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 8].Font.Bold = true;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 8].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 8].Font.Size = FontUnit.Medium;
    //                        FpSpread1.Sheets[0].ColumnHeader.Cells[0, 8].HorizontalAlign = HorizontalAlign.Center;
    //                        if (!colord.Contains("5"))
    //                        {
    //                            FpSpread1.Sheets[0].Columns[8].Visible = false;
    //                        }
    //                        if (colord.Count == 0)
    //                        {
    //                            FpSpread1.Sheets[0].Columns[8].Visible = true;
    //                        }
    //                    }

    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Balance";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("6"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);


    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Refund Amount";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("7"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Excess Amount";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("8"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);

    //                    FpSpread1.Sheets[0].ColumnCount++;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "Fine Amount";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
    //                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    if (!colord.Contains("9"))
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
    //                    }
    //                    if (colord.Count == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = true;
    //                    }
    //                    FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
    //                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;


    //                    #endregion

    //                    #region value

    //                    for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
    //                    {
    //                        FpSpread1.Sheets[0].Rows.Count = ds.Tables[0].Rows.Count;
    //                        FpSpread1.Sheets[0].Cells[i, 0].Text = Convert.ToString(i + 1);

    //                        FpSpread1.Sheets[0].Cells[i, 1].Text = Convert.ToString(ds.Tables[0].Rows[i]["VendorCode"].ToString());
    //                        FpSpread1.Sheets[0].Cells[i, 2].Text = Convert.ToString(ds.Tables[0].Rows[i]["VendorName"].ToString());
    //                        //string TextName = "";
    //                        //if (ds.Tables[3].Rows.Count > 0)
    //                        //{
    //                        //    ds.Tables[3].DefaultView.RowFilter = "TextCode='" + Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"]) + "'";
    //                        //    Dview = ds.Tables[3].DefaultView;
    //                        //    if (Dview.Count > 0)
    //                        //    {
    //                        //        TextName = Convert.ToString(Dview[0]["TextVal"]);
    //                        //    }
    //                        //}
    //                        //FpSpread1.Sheets[0].Cells[i, 3].Text = Convert.ToString(TextName);

    //                        allot = Convert.ToString(ds.Tables[0].Rows[i]["Allot"]);
    //                        if (allot != "" && allot != null)
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(allot), 2));
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, 4].Text = "0";
    //                        }
    //                        consession = Convert.ToString(ds.Tables[0].Rows[i]["consustion"]);
    //                        if (consession != "" && consession != null)
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, 5].Text = Convert.ToString(Math.Round(Convert.ToDouble(consession), 2));
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, 5].Text = "0";
    //                        }
    //                        string val = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
    //                        string value = "";
    //                        if (val == "" || val == null)
    //                        {
    //                            value = "0";
    //                        }
    //                        else
    //                        {
    //                            value = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
    //                        }
    //                        FpSpread1.Sheets[0].Cells[i, 6].Text = value;
    //                        totalvalue = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Total"]), 2));
    //                        FpSpread1.Sheets[0].Cells[i, 7].Text = Convert.ToString(totalvalue);
    //                        //string paidvalue = "";
    //                        //if (check == 0)
    //                        //{
    //                        //    DataView dsnew = new DataView();
    //                        //    paidvalue = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
    //                        //    if (ds.Tables[0].Rows.Count > 0)
    //                        //    {
    //                        //        ds.Tables[0].DefaultView.RowFilter = " VendorCode='" + Convert.ToString(ds.Tables[0].Rows[i]["VendorCode"]) + "'";
    //                        //        dsnew = ds.Tables[0].DefaultView;
    //                        //        if (dsnew.Count > 0)
    //                        //        {
    //                        //            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = Convert.ToString(dsnew[0]["Paid"]);
    //                        //           // fnlamount = Convert.ToDouble(paidvalue);
    //                        //        }

    //                        //    }
    //                        //    else
    //                        //    {
    //                        //        FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = "0";
    //                        //    }

    //                        //}


    //                        string paidvalue = "";
    //                        if (check == 0)
    //                        {
    //                            paidvalue = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
    //                            if (paidvalue == "" || paidvalue == null)
    //                            {
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = "0";
    //                            }
    //                            else
    //                            {
    //                                // fnlamount = Convert.ToDouble(paidvalue);
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = paidvalue;
    //                            }
    //                        }

    //                        FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 3].Text = Convert.ToString(ds.Tables[0].Rows[i]["RefundAmount"]);
    //                        DataView dvex = new DataView();
    //                        if (ds.Tables[2].Rows.Count > 0)
    //                        {
    //                            ds.Tables[2].DefaultView.RowFilter = "VendorCode='" + Convert.ToString(ds.Tables[0].Rows[i]["VendorCode"]) + "'";
    //                            dvex = ds.Tables[2].DefaultView;
    //                            if (dvex.Count > 0 && dvex.Count != null)
    //                            {
    //                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = Convert.ToString(dvex[0]["ExcessAmount"]);
    //                            }
    //                        }
    //                        else
    //                        {
    //                            FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
    //                        }

    //                        double totamount = 0;
    //                        double fnlamount = 0;
    //                        if (ds.Tables[1].Rows.Count > 0)
    //                        {
    //                            if (chkl_paid.Items.Count > 0)
    //                            {
    //                                for (int pay = 0; pay < chkl_paid.Items.Count; pay++)
    //                                {
    //                                    if (chkl_paid.Items[pay].Selected == true)
    //                                    {
    //                                        ds.Tables[1].DefaultView.RowFilter = "VendorCode='" + Convert.ToString(ds.Tables[0].Rows[i]["VendorCode"].ToString()) + "' and PayMode='" + Convert.ToString(chkl_paid.Items[pay].Value) + "' ";
    //                                        //and FeeCategory='" + Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"]) + "'
    //                                        dv = ds.Tables[1].DefaultView;
    //                                        if (dv.Count == 0 || dv.Count == null)
    //                                        {
    //                                            int count = 0;
    //                                            int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                            FpSpread1.Sheets[0].Cells[i, colnew].Text = "0";
    //                                        }
    //                                        if (dv.Count > 0)
    //                                        {
    //                                            int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
    //                                            FpSpread1.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv[0]["total"]);
    //                                            totamount = Convert.ToDouble(dv[0]["total"]);
    //                                            if (totamount != 0)
    //                                            {
    //                                                fnlamount = fnlamount + totamount;
    //                                            }
    //                                        }
    //                                    }
    //                                }
    //                                if (check != 0)
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 5].Text = Convert.ToString(fnlamount);
    //                                if (totalvalue != "" && totalvalue != null)
    //                                {
    //                                    bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(fnlamount);
    //                                    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 4].Text = Convert.ToString(bal);
    //                                    if (Convert.ToDouble(bal) == 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#F08080");
    //                                    }
    //                                    if (Convert.ToDouble(bal) != 0)
    //                                    {
    //                                        FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#90EE90");
    //                                    }
    //                                    //if (Convert.ToDouble(totalvalue) == Convert.ToDouble(fnlamount))
    //                                    //{
    //                                    //    FpSpread1.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#FFA500");
    //                                    //}
    //                                }
    //                            }
    //                        }
    //                    }
    //                    #endregion

    //                    #region grandtot
    //                    FpSpread1.Sheets[0].PageSize = ds.Tables[0].Rows.Count + 1;
    //                    FpSpread1.Sheets[0].Rows.Count++;
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, 0].Text = "Grand Total";
    //                    double hedval = 0;
    //                    for (int j = 4; j < FpSpread1.Sheets[0].Columns.Count; j++)
    //                    {
    //                        for (int i = 0; i < FpSpread1.Rows.Count - 1; i++)
    //                        {
    //                            string values = Convert.ToString(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                            if (values != "0" && values != "-" && values != "")
    //                            {
    //                                if (hedval == 0)
    //                                {
    //                                    hedval = Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                                }
    //                                else
    //                                {
    //                                    hedval = hedval + Convert.ToDouble(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
    //                                }
    //                            }
    //                        }
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, j].Text = Convert.ToString(hedval);
    //                        hedval = 0;
    //                    }
    //                    #endregion

    //                    #endregion
    //                }

    //                #region visible
    //                FpSpread1.Attributes.Add("Style", "cursor:Default;");
    //                FpSpread1.Sheets[0].SelectionBackColor = Color.White;
    //                FpSpread1.Sheets[0].PageSize = FpSpread1.Sheets[0].RowCount;
    //                FpSpread1.SaveChanges();
    //                header.Visible = true;
    //                div1.Visible = true;
    //                FpSpread1.Visible = true;
    //                divledger.Visible = false;
    //                lbl_ledg.Visible = false;
    //                lbl_ledg.Text = "";
    //                fpledger.Visible = false;
    //                lbl_bat.Visible = false;
    //                lbl_bat.Text = "";
    //                fpbatch.Visible = false;
    //                lbl_degr.Visible = false;
    //                lbl_degr.Text = "";
    //                fpdegree.Visible = false;
    //                lbl_dep.Visible = false;
    //                lbl_dep.Text = "";
    //                fpdept.Visible = false;
    //                lbl_sem.Visible = false; ;
    //                lbl_sem.Text = "";
    //                fpsem.Visible = false;
    //                rptprint.Visible = true;
    //                rb_hori.Checked = true;
    //                rbstudhed.Checked = true;
    //                // lblhed.Text = "Others-->Staff";
    //                lblhed.Visible = true;
    //                pheaderfilter.Visible = true;
    //                pcolumnorder.Visible = true;
    //                divstudcell.Visible = false;
    //                lbl_semcell.Text = "";
    //                divdept.Visible = false;
    //                divdegree.Visible = false;
    //                divbatch.Visible = false;
    //                header.Attributes.Add("Style", "height:350px; width:950px; overflow:auto;");
    //                div1.Attributes.Add("Style", "height:350px; width:950px;overflow:auto; ");
    //                #endregion


    //            }
    //            else
    //            {
    //                FpSpread1.Visible = false;
    //                div1.Visible = false;
    //                rptprint.Visible = false;
    //                pheaderfilter.Visible = false;
    //                pcolumnorder.Visible = false;
    //                lblhed.Text = "";
    //                imgdiv2.Visible = true;
    //                lbl_alert.Visible = true;
    //                lbl_alert.Text = "No Record Found";
    //            }
    //        }
    //    }
    //    catch { }
    //}
    //#endregion

    #endregion

    #region header chart
    public void headerChartValues()
    {
        try
        {
            #region chart
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                loadcolumns();
                string headername = "";
                string allot = "";
                string consession = "";
                string govt = "";
                string total = "";
                double paid = 0;
                string bal = "";
                string refund = "";
                string excess = "";
                int width = 0;
                int height = 0;
                DataTable dtchart = new DataTable();
                DataRow drchart = dtchart.NewRow();
                Hashtable htcol = new Hashtable();
                Dictionary<int, string> dct = new Dictionary<int, string>();
                dtchart.Columns.Clear();
                chart.ChartAreas[0].AxisX.Title = "Headers";
                chart.ChartAreas[0].AxisY.Title = "Amount";
                chart.ChartAreas[0].AxisX.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisY.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisX.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisY.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisX.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisY.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisX.Interval = 1;
                chart.ChartAreas[0].AxisX.MajorGrid.Enabled = false;
                chart.ChartAreas[0].AxisY.MajorGrid.Enabled = false;


                DataColumn dtcol1 = new DataColumn();
                dtchart.Columns.Add(dtcol1);
                List<string> nameli = new List<string>();
                for (int sel = 0; sel < ds.Tables[0].Rows.Count; sel++)
                {
                    ds.Tables[4].DefaultView.RowFilter = "headerpk='" + Convert.ToString(ds.Tables[0].Rows[sel]["HeaderFK"]) + "'";
                    dvhead = ds.Tables[4].DefaultView;
                    DataColumn dtcol = new DataColumn();
                    if (Convert.ToString(dvhead) != "" && dvhead != null)
                    {
                        dtcol.ColumnName = Convert.ToString(dvhead[0]["HeaderName"]);

                        htcol.Add(Convert.ToInt32(dvhead[0]["HeaderPK"]), Convert.ToString(dvhead[0]["HeaderName"]));
                        dct.Add(Convert.ToInt32(dvhead[0]["HeaderPK"]), Convert.ToString(dvhead[0]["HeaderName"]));
                        ListItem nli = new ListItem(Convert.ToString(dvhead[0]["HeaderPK"]), Convert.ToString(dvhead[0]["HeaderName"]));
                        nameli.Add(Convert.ToString(nli));
                        dtchart.Columns.Add(dtcol);
                    }
                }
                ViewState["table"] = dct;
                chart.DataSource = dtchart;
                List<string> lsrow = new List<string>();
                if (dtchart.Columns.Count > 0)
                {
                    for (int k = 0; k < colord.Count; k++)
                    {
                        drchart = dtchart.NewRow();
                        drchart[0] = ColorderValues(Convert.ToString(colord[k]));
                        ListItem lI = new ListItem(ColorderValues(Convert.ToString(colord[k])), Convert.ToString(k));
                        chart.Series.Add(ColorderValues(Convert.ToString(colord[k])));
                        lsrow.Add(Convert.ToString(lI));
                        dtchart.Rows.Add(drchart);
                    }
                }

                if (dtchart.Columns.Count > 0)
                {
                    for (int dtcol = 1; dtcol < dtchart.Columns.Count; dtcol++)
                    {
                        string hname = dtchart.Columns[dtcol].ColumnName;
                        DataTable dtHname = new DataTable();
                        dtHname = ds.Tables[4];
                        dtHname.DefaultView.RowFilter = "headername='" + hname + "'";
                        DataView dvHname = dtHname.DefaultView;
                        if (dvHname.Count > 0)
                        {
                            ds.Tables[0].DefaultView.RowFilter = "headerFk='" + Convert.ToString(dvHname[0][1]) + "'";
                            dvhead = ds.Tables[0].DefaultView;
                        }
                        if (Convert.ToString(dvhead) != "" && dvhead != null)
                        {
                            headername = Convert.ToString(dvHname[0]["HeaderName"]);
                            allot = Convert.ToString(dvhead[0]["Allot"]);
                            consession = Convert.ToString(dvhead[0]["consustion"]);
                            govt = Convert.ToString(dvhead[0]["Government"].ToString());
                            total = Convert.ToString(dvhead[0]["Total"]);
                            //  paid = Convert.ToString(dvhead[0]["paid"]);
                            if (ds.Tables[1].Rows.Count > 0)
                            {
                                ds.Tables[1].DefaultView.RowFilter = "headerFk='" + Convert.ToString(dvHname[0][1]) + "'";
                                DataView dvbal = new DataView();
                                dvbal = ds.Tables[1].DefaultView;
                                if (dvbal.Count > 0 && dvbal != null)
                                {
                                    for (int k = 0; k < dvbal.Count; k++)
                                    {
                                        paid += Convert.ToDouble(dvbal[k]["total"]);
                                    }
                                }
                            }
                            if (paid != 0)
                            {
                                bal = Convert.ToString(Convert.ToDouble(total) - Convert.ToDouble(paid));
                            }
                            else
                            {
                                bal = Convert.ToString(total);
                            }
                            refund = Convert.ToString(dvhead[0]["RefundAmount"]);
                            DataView dvex = new DataView();
                            if (ds.Tables[2].Rows.Count > 0)
                            {
                                ds.Tables[2].DefaultView.RowFilter = "HeaderFK='" + Convert.ToString(dvHname[0][1]) + "'";
                                dvex = ds.Tables[2].DefaultView;
                                if (dvex.Count > 0 && dvex.Count != null)
                                {
                                    excess = Convert.ToString(dvex[0]["ExcessAmount"]);
                                }
                            }
                            if (htcol.ContainsValue(headername))
                            {
                                if (lsrow.Contains("Allot"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Allot"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(allot);
                                }
                                if (lsrow.Contains("Concession"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Concession"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(consession);
                                }
                                if (lsrow.Contains("Government"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Government"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(govt);
                                }
                                if (lsrow.Contains("Total"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Total"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(total);
                                }
                                if (lsrow.Contains("Paid"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Paid"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(paid);
                                    paid = 0;
                                }
                                if (lsrow.Contains("Balance"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Balance"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(bal);
                                    bal = "";
                                }
                                if (lsrow.Contains("Refund Amount"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Refund Amount"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(refund);
                                }
                                if (lsrow.Contains("Excess Amount"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Excess Amount"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(excess);
                                    // width += 30;
                                }
                            }
                        }
                    }
                }
                if (dtchart.Rows.Count > 0)
                {
                    for (int col = 1; col < dtchart.Columns.Count; col++)
                    {
                        for (int row = 0; row < dtchart.Rows.Count; row++)
                        {
                            width += 100;
                            // chart.ChartAreas[0].Position.Width = 98;
                            chart.Series[row].Points.AddXY(dtchart.Columns[col].ToString(), dtchart.Rows[row][col].ToString());
                            chart.ChartAreas[0].AxisX.LineColor = System.Drawing.Color.Black;
                            chart.ChartAreas[0].AxisY.LineColor = System.Drawing.Color.Black;
                            chart.Series[row].ChartType = SeriesChartType.Column;
                            chart.Series[row].IsValueShownAsLabel = true;
                            chart.Series[row].IsXValueIndexed = true;
                            chart.ChartAreas[0].AxisX.LabelStyle.Angle = -90;
                            chart.ChartAreas[0].AxisX.LabelStyle.Interval = 1;
                        }
                    }
                    pheaderfilter.Visible = true;
                    pcolumnorder.Visible = true;
                    chart.Visible = true;
                    chart.Width = Convert.ToInt32(width);
                    chart.Height = Convert.ToInt32(400);
                    lblchart.Visible = true;
                    lblchart.Text = "Header-->Chart";
                    lbl_semcell.Text = "";
                    divdept.Visible = false;
                    divdegree.Visible = false;
                    divbatch.Visible = false;
                    ledger.Visible = false;
                    batch.Visible = false;
                    divdegr.Visible = false;
                    divdep.Visible = false;
                    divsema.Visible = false;
                    div7.Visible = false;
                    val1.Visible = false;
                    UpdatePanel1.Visible = false;
                    UpdatePanel4.Visible = false;
                    UpdatePanel5.Visible = false;
                    UpdatePanel6.Visible = false;
                }
            }
            else
            {
                lblchart.Visible = false;
                chart.Visible = false;
                pheaderfilter.Visible = false;
                pcolumnorder.Visible = false;
                lblhed.Text = "";
                imgdiv2.Visible = true;
                lbl_alert.Visible = true;
                lbl_alert.Text = "No Record Found";
            }

            #endregion
        }
        catch { }
    }
    #endregion

    #region ledger Chart
    private void ledgerChartValues()
    {
        try
        {
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                int sel = 0;
                int row = 0;
                int col = 0;
                loadcolumns();
                string ledgername = "";
                string allot = "";
                string consession = "";
                string govt = "";
                string total = "";
                double paid = 0;
                string bal = "";
                string refund = "";
                string excess = "";
                Int64 width = 0;

                chart.ChartAreas[0].AxisX.Title = "Ledgers";
                chart.ChartAreas[0].AxisY.Title = "Amount";
                chart.ChartAreas[0].AxisX.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisY.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisX.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisY.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisX.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisY.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisX.Interval = 1;
                chart.ChartAreas[0].AxisX.MajorGrid.Enabled = false;
                chart.ChartAreas[0].AxisY.MajorGrid.Enabled = false;
                DataTable dtchart = new DataTable();
                DataColumn dtcol1 = new DataColumn();
                DataRow drrow = dtchart.NewRow();
                DataView dvhead = new DataView();
                DataView dvex = new DataView();
                Hashtable htcol = new Hashtable();
                Dictionary<int, string> dct = new Dictionary<int, string>();

                dtchart.Columns.Clear();
                dtchart.Columns.Add(dtcol1);
                for (sel = 0; sel < ds.Tables[0].Rows.Count; sel++)
                {
                    ds.Tables[3].DefaultView.RowFilter = "  LedgerPK='" + Convert.ToString(ds.Tables[0].Rows[sel]["LedgerFK"]) + "'";
                    dvhead = ds.Tables[3].DefaultView;

                    DataColumn dtcol = new DataColumn();
                    if (Convert.ToString(dvhead) != "" && dvhead != null)
                    {
                        dtcol.ColumnName = Convert.ToString(dvhead[0]["LedgerName"]);
                        htcol.Add(Convert.ToString(sel), Convert.ToString(dvhead[0]["LedgerName"]));
                        dct.Add(Convert.ToInt32(dvhead[0]["LedgerPK"]), Convert.ToString(dvhead[0]["LedgerName"]));
                        dtchart.Columns.Add(dtcol);
                    }
                }
                ViewState["table"] = dct;
                List<string> lsrow = new List<string>();
                if (dtchart.Columns.Count > 0)
                {
                    for (sel = 0; sel < colord.Count; sel++)
                    {
                        drrow = dtchart.NewRow();
                        drrow[0] = ColorderValues(Convert.ToString(colord[sel]));
                        ListItem li = new ListItem(ColorderValues(Convert.ToString(colord[sel])), Convert.ToString(sel));
                        lsrow.Add(Convert.ToString(li));
                        chart.Series.Add(ColorderValues(Convert.ToString(colord[sel])));
                        dtchart.Rows.Add(drrow);
                    }
                }

                if (dtchart.Columns.Count > 0)
                {
                    for (int dtcol = 1; dtcol < dtchart.Columns.Count; dtcol++)
                    {
                        string hname = dtchart.Columns[dtcol].ColumnName;
                        DataTable dtHname = new DataTable();
                        dtHname = ds.Tables[3];
                        dtHname.DefaultView.RowFilter = "LedgerName='" + hname + "'";

                        DataView dvHname = dtHname.DefaultView;
                        if (dvHname.Count > 0)
                        {
                            ds.Tables[0].DefaultView.RowFilter = "LedgerFK='" + Convert.ToString(dvHname[0][1]) + "'";
                            dvhead = ds.Tables[0].DefaultView;
                        }
                        if (dvhead.Count > 0 && dvhead != null)
                        {
                            ledgername = Convert.ToString(dvHname[0]["LedgerName"]);
                            allot = Convert.ToString(dvhead[0]["Allot"]);
                            consession = Convert.ToString(dvhead[0]["consustion"]);
                            govt = Convert.ToString(dvhead[0]["Government"].ToString());
                            total = Convert.ToString(dvhead[0]["Total"]);
                            if (ds.Tables[1].Rows.Count > 0)
                            {
                                ds.Tables[1].DefaultView.RowFilter = "LedgerFK='" + Convert.ToString(dvHname[0][1]) + "'";
                                DataView dvbal = new DataView();
                                dvbal = ds.Tables[1].DefaultView;
                                if (dvbal.Count > 0 && dvbal != null)
                                {
                                    for (int k = 0; k < dvbal.Count; k++)
                                    {
                                        paid += Convert.ToDouble(dvbal[k]["total"]);
                                    }
                                }
                            }
                            if (paid != 0)
                            {
                                bal = Convert.ToString(Convert.ToDouble(total) - Convert.ToDouble(paid));
                            }
                            else
                            {
                                bal = Convert.ToString(total);
                            }
                            refund = Convert.ToString(dvhead[0]["RefundAmount"]);
                            if (ds.Tables[2].Rows.Count > 0)
                            {
                                ds.Tables[2].DefaultView.RowFilter = "LedgerFK='" + Convert.ToString(dvHname[0][1]) + "'";
                                dvex = ds.Tables[2].DefaultView;
                                if (dvex.Count > 0 && dvex.Count != null)
                                {
                                    excess = Convert.ToString(dvex[0]["ExcessAmount"]);
                                }
                            }

                            if (htcol.ContainsValue(ledgername))
                            {
                                if (lsrow.Contains("Allot"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Allot"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(allot);
                                }
                                if (lsrow.Contains("Concession"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Concession"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(consession);
                                }
                                if (lsrow.Contains("Government"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Government"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(govt);
                                    width += 20;
                                }
                                if (lsrow.Contains("Total"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Total"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(total);

                                }
                                if (lsrow.Contains("Paid"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Paid"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(paid);
                                    paid = 0;
                                }
                                if (lsrow.Contains("Balance"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Balance"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(bal);
                                    bal = "";
                                }
                                if (lsrow.Contains("Refund Amount"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Refund Amount"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(refund);

                                }
                                if (lsrow.Contains("Excess Amount"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Excess Amount"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(excess);
                                }
                            }

                        }
                    }
                }

                if (dtchart.Rows.Count > 0)
                {
                    int count = 0;
                    for (col = 1; col < dtchart.Columns.Count; col++)
                    {
                        count++;
                        for (row = 0; row < dtchart.Rows.Count; row++)
                        {
                            width += 100;
                            chart.Series[row].Points.AddXY(dtchart.Columns[col].ToString(), dtchart.Rows[row][col].ToString());
                            chart.ChartAreas[0].AxisX.LineColor = System.Drawing.Color.Black;
                            chart.ChartAreas[0].AxisY.LineColor = System.Drawing.Color.Black;

                            chart.Series[row].IsValueShownAsLabel = true;
                            chart.Series[row].IsXValueIndexed = true;

                            chart.ChartAreas[0].AxisX.LabelStyle.Angle = -90;
                            chart.ChartAreas[0].AxisX.LabelStyle.Interval = 1;
                        }
                    }
                    pheaderfilter.Visible = true;
                    pcolumnorder.Visible = true;
                    chart.Visible = true;
                    int widt = 0;
                    widt = (width > 32760) ? 32760 : (int)width;
                    //int i = 30000;
                    //try
                    //{
                    //    for (; i < 100000; i++)
                    //    {
                    //        chart.Width = i;
                    //    }
                    //}
                    //catch { }
                    chart.Width = widt;
                    // chart.Width = 1300;
                    chart.Height = Convert.ToInt32(500);
                    //divchart.Visible = true;
                    lblchart.Visible = true;
                    lblchart.Text = "Ledger-->Chart";
                    lbl_semcell.Text = "";
                    divdept.Visible = false;
                    divdegree.Visible = false;
                    divbatch.Visible = false;
                    ledger.Visible = false;
                    batch.Visible = false;
                    divdegr.Visible = false;
                    divdep.Visible = false;
                    divsema.Visible = false;
                    div7.Visible = false;
                    val1.Visible = false;
                    UpdatePanel1.Visible = false;
                    UpdatePanel4.Visible = false;
                    UpdatePanel5.Visible = false;
                    UpdatePanel6.Visible = false;
                }
            }
            else
            {
                lblchart.Visible = false;
                chart.Visible = false;
                pheaderfilter.Visible = false;
                pcolumnorder.Visible = false;
                lblhed.Text = "";
                imgdiv2.Visible = true;
                lbl_alert.Visible = true;
                lbl_alert.Text = "No Record Found";
            }


        }
        catch { }
    }
    #endregion

    #region batch year Chart
    private void batchChartValues()
    {
        try
        {
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                int sel = 0;
                int row = 0;
                int col = 0;
                loadcolumns();
                string ledgername = "";
                string allot = "";
                string consession = "";
                string govt = "";
                string total = "";
                double paid = 0;
                string bal = "";
                string refund = "";
                string excess = "";
                string batchyr = "";
                int width = 0;
                chart.ChartAreas[0].AxisX.Title = "Batch years";
                chart.ChartAreas[0].AxisY.Title = "Amount";
                chart.ChartAreas[0].AxisX.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisY.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisX.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisY.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisX.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisY.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisX.Interval = 1;
                chart.ChartAreas[0].AxisX.MajorGrid.Enabled = false;
                chart.ChartAreas[0].AxisY.MajorGrid.Enabled = false;
                //chart.Series.Clear();
                DataTable dtchart = new DataTable();
                DataColumn dtcol1 = new DataColumn();
                DataRow drrow = dtchart.NewRow();
                DataView dvhead = new DataView();
                DataView dvex = new DataView();
                Hashtable htcol = new Hashtable();
                Dictionary<int, string> dct = new Dictionary<int, string>();
                dtchart.Columns.Clear();
                dtchart.Columns.Add(dtcol1);
                for (sel = 0; sel < ds.Tables[0].Rows.Count; sel++)
                {
                    //ds.Tables[3].DefaultView.RowFilter = "  LedgerPK='" + Convert.ToString(ds.Tables[0].Rows[sel]["LedgerFK"]) + "'";
                    //dvhead = ds.Tables[3].DefaultView;
                    batchyr = Convert.ToString(ds.Tables[0].Rows[sel]["batch_year"].ToString());
                    DataColumn dtcol = new DataColumn();
                    if (Convert.ToString(batchyr) != "" && batchyr != null)
                    {
                        dtcol.ColumnName = Convert.ToString(batchyr);
                        htcol.Add(Convert.ToString(sel), Convert.ToString(batchyr));
                        dct.Add(Convert.ToInt32(batchyr), Convert.ToString(batchyr));
                        dtchart.Columns.Add(dtcol);
                    }
                }
                ViewState["table"] = dct;
                List<string> lsrow = new List<string>();
                if (dtchart.Columns.Count > 0)
                {
                    for (sel = 0; sel < colord.Count; sel++)
                    {
                        drrow = dtchart.NewRow();
                        drrow[0] = ColorderValues(Convert.ToString(colord[sel]));
                        ListItem li = new ListItem(ColorderValues(Convert.ToString(colord[sel])), Convert.ToString(sel));
                        lsrow.Add(Convert.ToString(li));
                        chart.Series.Add(ColorderValues(Convert.ToString(colord[sel])));
                        dtchart.Rows.Add(drrow);
                    }
                }

                if (dtchart.Columns.Count > 0)
                {
                    for (int dtcol = 1; dtcol < dtchart.Columns.Count; dtcol++)
                    {
                        string hname = dtchart.Columns[dtcol].ColumnName;
                        DataTable dtHname = new DataTable();
                        dtHname = ds.Tables[0];
                        dtHname.DefaultView.RowFilter = "batch_year='" + hname + "'";

                        DataView dvHname = dtHname.DefaultView;
                        if (dvHname.Count > 0)
                        {
                            ds.Tables[0].DefaultView.RowFilter = "Batch_Year='" + hname + "'";
                            dvhead = ds.Tables[0].DefaultView;
                        }
                        if (Convert.ToString(dvhead) != "" && dvhead != null)
                        {
                            ledgername = Convert.ToString(dvhead[0]["Batch_Year"]);
                            allot = Convert.ToString(dvhead[0]["Allot"]);
                            consession = Convert.ToString(dvhead[0]["consustion"]);
                            govt = Convert.ToString(dvhead[0]["Government"].ToString());
                            total = Convert.ToString(dvhead[0]["Total"]);
                            if (ds.Tables[1].Rows.Count > 0)
                            {
                                ds.Tables[1].DefaultView.RowFilter = "Batch_Year='" + hname + "'";
                                DataView dvbal = new DataView();
                                dvbal = ds.Tables[1].DefaultView;
                                if (dvbal.Count > 0 && dvbal != null)
                                {
                                    for (int k = 0; k < dvbal.Count; k++)
                                    {
                                        paid += Convert.ToDouble(dvbal[k]["total"]);
                                    }
                                }
                            }
                            if (paid != 0)
                            {
                                bal = Convert.ToString(Convert.ToDouble(total) - Convert.ToDouble(paid));
                            }
                            else
                            {
                                bal = Convert.ToString(total);
                            }
                            refund = Convert.ToString(dvhead[0]["RefundAmount"]);

                            if (ds.Tables[2].Rows.Count > 0)
                            {
                                ds.Tables[2].DefaultView.RowFilter = "Batch_Year='" + Convert.ToInt32(dvHname[0][1]) + "'";

                                dvex = ds.Tables[2].DefaultView;
                                if (dvex.Count > 0 && dvex != null)
                                {
                                    excess = Convert.ToString(dvex[0]["ExcessAmount"]);
                                }
                            }

                            if (htcol.ContainsValue(ledgername))
                            {
                                if (lsrow.Contains("Allot"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Allot"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(allot);
                                }
                                if (lsrow.Contains("Concession"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Concession"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(consession);
                                }
                                if (lsrow.Contains("Government"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Government"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(govt);
                                }
                                if (lsrow.Contains("Total"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Total"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(total);
                                }
                                if (lsrow.Contains("Paid"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Paid"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(paid);
                                    paid = 0;
                                }
                                if (lsrow.Contains("Balance"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Balance"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(bal);
                                    bal = "";
                                }
                                if (lsrow.Contains("Refund Amount"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Refund Amount"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(refund);
                                }
                                if (lsrow.Contains("Excess Amount"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Excess Amount"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(excess);
                                }
                            }

                        }
                    }
                }

                if (dtchart.Rows.Count > 0)
                {
                    for (col = 1; col < dtchart.Columns.Count; col++)
                    {
                        for (row = 0; row < dtchart.Rows.Count; row++)
                        {
                            width += 100;
                            chart.Series[row].Points.AddXY(dtchart.Columns[col].ToString(), dtchart.Rows[row][col].ToString());
                            chart.ChartAreas[0].AxisX.LineColor = System.Drawing.Color.Black;
                            chart.ChartAreas[0].AxisY.LineColor = System.Drawing.Color.Black;

                            chart.Series[row].IsValueShownAsLabel = true;
                            chart.Series[row].IsXValueIndexed = true;

                            chart.ChartAreas[0].AxisX.LabelStyle.Angle = -90;
                            chart.ChartAreas[0].AxisX.LabelStyle.Interval = 1;
                        }
                    }
                    pheaderfilter.Visible = true;
                    pcolumnorder.Visible = true;
                    chart.Visible = true;
                    chart.Width = Convert.ToInt32(width);
                    // chart.Width = 1300;
                    chart.Height = Convert.ToInt32(400);
                    //divchart.Visible = true;
                    lblchart.Visible = true;
                    lblchart.Text = "Batch-->Chart";
                    lbl_semcell.Text = "";
                    divdept.Visible = false;
                    divdegree.Visible = false;
                    divbatch.Visible = false;
                    ledger.Visible = false;
                    batch.Visible = false;
                    divdegr.Visible = false;
                    divdep.Visible = false;
                    divsema.Visible = false;
                    div7.Visible = false;
                    val1.Visible = false;
                    UpdatePanel1.Visible = false;
                    UpdatePanel4.Visible = false;
                    UpdatePanel5.Visible = false;
                    UpdatePanel6.Visible = false;
                }
            }
            else
            {
                lblchart.Visible = false;
                chart.Visible = false;
                pheaderfilter.Visible = false;
                pcolumnorder.Visible = false;
                lblhed.Text = "";
                imgdiv2.Visible = true;
                lbl_alert.Visible = true;
                lbl_alert.Text = "No Record Found";
            }


        }
        catch { }
    }
    #endregion

    #region degree Chart
    private void degreeChartValues()
    {
        try
        {
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                int sel = 0;
                int row = 0;
                int col = 0;
                loadcolumns();
                string ledgername = "";
                string allot = "";
                string consession = "";
                string govt = "";
                string total = "";
                double paid = 0;
                string bal = "";
                string refund = "";
                string excess = "";
                string degree = "";
                int width = 0;
                chart.ChartAreas[0].AxisX.Title = lbldeg.Text;
                chart.ChartAreas[0].AxisY.Title = "Amount";
                chart.ChartAreas[0].AxisX.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisY.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisX.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisY.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisX.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisY.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisX.Interval = 1;
                chart.ChartAreas[0].AxisX.MajorGrid.Enabled = false;
                chart.ChartAreas[0].AxisY.MajorGrid.Enabled = false;
                // chart.Series.Clear();
                DataTable dtchart = new DataTable();
                DataColumn dtcol1 = new DataColumn();
                DataRow drrow = dtchart.NewRow();
                DataView dvhead = new DataView();
                DataView dvex = new DataView();
                Hashtable htcol = new Hashtable();
                Dictionary<int, string> dct = new Dictionary<int, string>();
                dtchart.Columns.Clear();
                dtchart.Columns.Add(dtcol1);
                for (sel = 0; sel < ds.Tables[0].Rows.Count; sel++)
                {
                    degree = Convert.ToString(ds.Tables[0].Rows[sel]["DegreeName"].ToString());
                    string courseid = Convert.ToString(ds.Tables[0].Rows[sel]["Course_Id"].ToString());
                    DataColumn dtcol = new DataColumn();
                    if (Convert.ToString(degree) != "" && degree != null)
                    {
                        dtcol.ColumnName = Convert.ToString(degree);
                        htcol.Add(Convert.ToString(sel), Convert.ToString(degree));
                        dct.Add(Convert.ToInt32(courseid), Convert.ToString(degree));
                        dtchart.Columns.Add(dtcol);
                    }
                }
                ViewState["table"] = dct;
                List<string> lsrow = new List<string>();
                if (dtchart.Columns.Count > 0)
                {
                    for (sel = 0; sel < colord.Count; sel++)
                    {
                        drrow = dtchart.NewRow();
                        drrow[0] = ColorderValues(Convert.ToString(colord[sel]));
                        ListItem li = new ListItem(ColorderValues(Convert.ToString(colord[sel])), Convert.ToString(sel));
                        lsrow.Add(Convert.ToString(li));
                        chart.Series.Add(ColorderValues(Convert.ToString(colord[sel])));
                        dtchart.Rows.Add(drrow);
                    }
                }

                if (dtchart.Columns.Count > 0)
                {
                    for (int dtcol = 1; dtcol < dtchart.Columns.Count; dtcol++)
                    {
                        // Convert.ToString(ds.Tables[0].Rows[sel]["DegreeName"].ToString());
                        string hname = dtchart.Columns[dtcol].ColumnName;
                        DataTable dtHname = new DataTable();
                        dtHname = ds.Tables[0];
                        dtHname.DefaultView.RowFilter = "DegreeName='" + hname + "'";

                        DataView dvHname = dtHname.DefaultView;
                        if (dvHname.Count > 0)
                        {
                            ds.Tables[0].DefaultView.RowFilter = "DegreeName='" + degree + "'";
                            dvhead = ds.Tables[0].DefaultView;
                        }
                        if (Convert.ToString(dvhead) != "" && dvhead != null)
                        {
                            ledgername = Convert.ToString(dvHname[0]["DegreeName"]);
                            allot = Convert.ToString(dvhead[0]["Allot"]);
                            consession = Convert.ToString(dvhead[0]["consustion"]);
                            govt = Convert.ToString(dvhead[0]["Government"].ToString());
                            total = Convert.ToString(dvhead[0]["Total"]);
                            string courseid = Convert.ToString(dvhead[0]["Course_Id"]);
                            if (ds.Tables[1].Rows.Count > 0)
                            {
                                ds.Tables[1].DefaultView.RowFilter = "Course_Id='" + courseid + "'";
                                DataView dvbal = new DataView();
                                dvbal = ds.Tables[1].DefaultView;
                                if (dvbal.Count > 0 && dvbal != null)
                                {
                                    for (int k = 0; k < dvbal.Count; k++)
                                    {
                                        paid += Convert.ToDouble(dvbal[k]["total"]);
                                    }
                                }
                            }
                            if (paid != 0)
                            {
                                bal = Convert.ToString(Convert.ToDouble(total) - Convert.ToDouble(paid));
                            }
                            else
                            {
                                bal = Convert.ToString(total);
                            }
                            refund = Convert.ToString(dvhead[0]["RefundAmount"]);

                            if (ds.Tables[2].Rows.Count > 0)
                            {
                                ds.Tables[2].DefaultView.RowFilter = "Course_Id='" + Convert.ToInt32(dvHname[0][1]) + "'";

                                dvex = ds.Tables[2].DefaultView;
                                if (dvex.Count > 0 && dvex != null)
                                {
                                    excess = Convert.ToString(dvex[0]["ExcessAmount"]);
                                }
                            }

                            if (htcol.ContainsValue(ledgername))
                            {
                                if (lsrow.Contains("Allot"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Allot"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(allot);
                                }
                                if (lsrow.Contains("Concession"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Concession"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(consession);
                                }
                                if (lsrow.Contains("Government"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Government"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(govt);
                                }
                                if (lsrow.Contains("Total"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Total"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(total);

                                }
                                if (lsrow.Contains("Paid"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Paid"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(paid);
                                    paid = 0;
                                }
                                if (lsrow.Contains("Balance"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Balance"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(bal);
                                    bal = "";
                                }
                                if (lsrow.Contains("Refund Amount"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Refund Amount"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(refund);

                                }
                                if (lsrow.Contains("Excess Amount"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Excess Amount"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(excess);
                                }
                            }

                        }
                    }
                }

                if (dtchart.Rows.Count > 0)
                {
                    for (col = 1; col < dtchart.Columns.Count; col++)
                    {
                        for (row = 0; row < dtchart.Rows.Count; row++)
                        {
                            width += 100;
                            chart.Series[row].Points.AddXY(dtchart.Columns[col].ToString(), dtchart.Rows[row][col].ToString());
                            chart.ChartAreas[0].AxisX.LineColor = System.Drawing.Color.Black;
                            chart.ChartAreas[0].AxisY.LineColor = System.Drawing.Color.Black;

                            chart.Series[row].IsValueShownAsLabel = true;
                            chart.Series[row].IsXValueIndexed = true;

                            chart.ChartAreas[0].AxisX.LabelStyle.Angle = -90;
                            chart.ChartAreas[0].AxisX.LabelStyle.Interval = 1;
                        }
                    }
                    pheaderfilter.Visible = true;
                    pcolumnorder.Visible = true;
                    chart.Visible = true;
                    chart.Width = Convert.ToInt32(width);
                    //  chart.Width = 1300;
                    chart.Height = Convert.ToInt32(400);
                    //divchart.Visible = true;
                    lblchart.Visible = true;
                    lblchart.Text = "Degree-->Chart";
                    lbl_semcell.Text = "";
                    divdept.Visible = false;
                    divdegree.Visible = false;
                    divbatch.Visible = false;
                    ledger.Visible = false;
                    batch.Visible = false;
                    divdegr.Visible = false;
                    divdep.Visible = false;
                    divsema.Visible = false;
                    div7.Visible = false;
                    val1.Visible = false;
                    UpdatePanel1.Visible = false;
                    UpdatePanel4.Visible = false;
                    UpdatePanel5.Visible = false;
                    UpdatePanel6.Visible = false;

                }
            }
            else
            {
                lblchart.Visible = false;
                chart.Visible = false;
                pheaderfilter.Visible = false;
                pcolumnorder.Visible = false;
                lblhed.Text = "";
                imgdiv2.Visible = true;
                lbl_alert.Visible = true;
                lbl_alert.Text = "No Record Found";
            }


        }
        catch { }
    }
    #endregion

    #region dept Chart
    private void deptChartValues()
    {
        try
        {
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                int sel = 0;
                int row = 0;
                int col = 0;
                loadcolumns();
                string ledgername = "";
                string allot = "";
                string consession = "";
                string govt = "";
                string total = "";
                double paid = 0;
                string bal = "";
                string refund = "";
                string excess = "";
                string degree = "";
                int width = 0;
                chart.ChartAreas[0].AxisX.Title = lbldept.Text;
                chart.ChartAreas[0].AxisY.Title = "Amount";
                chart.ChartAreas[0].AxisX.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisY.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisX.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisY.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisX.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisY.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisX.Interval = 1;
                chart.ChartAreas[0].AxisX.MajorGrid.Enabled = false;
                chart.ChartAreas[0].AxisY.MajorGrid.Enabled = false;
                // chart.Series.Clear();
                DataTable dtchart = new DataTable();
                DataColumn dtcol1 = new DataColumn();
                DataRow drrow = dtchart.NewRow();
                DataView dvhead = new DataView();
                DataView dvex = new DataView();
                Hashtable htcol = new Hashtable();
                Dictionary<int, string> dct = new Dictionary<int, string>();
                dtchart.Columns.Clear();
                dtchart.Columns.Add(dtcol1);
                for (sel = 0; sel < ds.Tables[0].Rows.Count; sel++)
                {

                    ds.Tables[4].DefaultView.RowFilter = "  Degree_code='" + Convert.ToString(ds.Tables[0].Rows[sel]["Degree_code"]) + "'";
                    string deptcode = Convert.ToString(ds.Tables[0].Rows[sel]["Degree_code"]);
                    dvhead = ds.Tables[4].DefaultView;
                    DataColumn dtcol = new DataColumn();
                    if (Convert.ToString(dvhead) != "" && dvhead != null)
                    {
                        string coursename = Convert.ToString(dvhead[0]["Course_Name"]);
                        string deptname = Convert.ToString(dvhead[0]["Dept_Name"]);
                        dtcol.ColumnName = Convert.ToString(coursename + "-" + deptname);
                        htcol.Add(Convert.ToString(sel), Convert.ToString(dvhead[0]["Dept_Name"]));
                        dct.Add(Convert.ToInt32(deptcode), Convert.ToString(dvhead[0]["Dept_Name"]));
                        dtchart.Columns.Add(dtcol);
                    }
                }
                ViewState["table"] = dct;
                List<string> lsrow = new List<string>();
                if (dtchart.Columns.Count > 0)
                {
                    for (sel = 0; sel < colord.Count; sel++)
                    {
                        drrow = dtchart.NewRow();
                        drrow[0] = ColorderValues(Convert.ToString(colord[sel]));
                        ListItem li = new ListItem(ColorderValues(Convert.ToString(colord[sel])), Convert.ToString(sel));
                        lsrow.Add(Convert.ToString(li));
                        chart.Series.Add(ColorderValues(Convert.ToString(colord[sel])));
                        dtchart.Rows.Add(drrow);
                    }
                }

                if (dtchart.Columns.Count > 0)
                {
                    for (int dtcol = 1; dtcol < dtchart.Columns.Count; dtcol++)
                    {
                        string hname = dtchart.Columns[dtcol].ColumnName;
                        string[] sptname = hname.Split('-');
                        string dtphname = sptname[1].ToString();
                        DataTable dtHname = new DataTable();
                        dtHname = ds.Tables[4];
                        dtHname.DefaultView.RowFilter = "Dept_Name='" + dtphname + "'";
                        DataView dvHname = dtHname.DefaultView;
                        if (dvHname.Count > 0)
                        {
                            ds.Tables[0].DefaultView.RowFilter = "  Degree_code='" + Convert.ToInt32(dvHname[0]["Degree_code"]) + "'";
                            dvhead = ds.Tables[0].DefaultView;
                        }
                        if (Convert.ToString(dvhead) != "" && dvhead != null && dvhead.Count > 0)
                        {
                            ledgername = Convert.ToString(dvHname[0]["Dept_Name"]);
                            allot = Convert.ToString(dvhead[0]["Allot"]);
                            consession = Convert.ToString(dvhead[0]["consustion"]);
                            govt = Convert.ToString(dvhead[0]["Government"].ToString());
                            total = Convert.ToString(dvhead[0]["Total"]);
                            if (ds.Tables[1].Rows.Count > 0)
                            {
                                ds.Tables[1].DefaultView.RowFilter = "  Degree_code='" + Convert.ToInt32(dvHname[0]["Degree_code"]) + "'";
                                DataView dvbal = new DataView();
                                dvbal = ds.Tables[1].DefaultView;
                                if (dvbal.Count > 0 && dvbal != null)
                                {
                                    for (int k = 0; k < dvbal.Count; k++)
                                    {
                                        paid += Convert.ToDouble(dvbal[k]["total"]);
                                    }
                                }
                            }
                            if (paid != 0)
                            {
                                bal = Convert.ToString(Convert.ToDouble(total) - Convert.ToDouble(paid));
                            }
                            else
                            {
                                bal = Convert.ToString(total);
                            }
                            refund = Convert.ToString(dvhead[0]["RefundAmount"]);

                            if (ds.Tables[3].Rows.Count > 0)
                            {
                                ds.Tables[3].DefaultView.RowFilter = "Degree_code='" + Convert.ToInt32(dvHname[0]["Degree_code"]) + "'";
                                dvex = ds.Tables[3].DefaultView;
                                if (dvex.Count > 0 && dvex != null)
                                {
                                    excess = Convert.ToString(dvex[0]["ExcessAmount"]);
                                }
                            }

                            if (htcol.ContainsValue(ledgername))
                            {
                                if (lsrow.Contains("Allot"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Allot"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(allot);
                                }
                                if (lsrow.Contains("Concession"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Concession"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(consession);
                                }
                                if (lsrow.Contains("Government"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Government"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(govt);
                                }
                                if (lsrow.Contains("Total"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Total"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(total);

                                }
                                if (lsrow.Contains("Paid"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Paid"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(paid);
                                    paid = 0;
                                }
                                if (lsrow.Contains("Balance"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Balance"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(bal);
                                    bal = "";
                                }
                                if (lsrow.Contains("Refund Amount"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Refund Amount"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(refund);

                                }
                                if (lsrow.Contains("Excess Amount"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Excess Amount"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(excess);
                                }
                            }

                        }
                    }
                }

                if (dtchart.Rows.Count > 0)
                {
                    for (col = 1; col < dtchart.Columns.Count; col++)
                    {
                        for (row = 0; row < dtchart.Rows.Count; row++)
                        {
                            width += 100;
                            chart.Series[row].Points.AddXY(dtchart.Columns[col].ToString(), dtchart.Rows[row][col].ToString());
                            chart.ChartAreas[0].AxisX.LineColor = System.Drawing.Color.Black;
                            chart.ChartAreas[0].AxisY.LineColor = System.Drawing.Color.Black;

                            chart.Series[row].IsValueShownAsLabel = true;
                            chart.Series[row].IsXValueIndexed = true;

                            chart.ChartAreas[0].AxisX.LabelStyle.Angle = -90;
                            chart.ChartAreas[0].AxisX.LabelStyle.Interval = 1;
                        }
                    }
                    pheaderfilter.Visible = true;
                    pcolumnorder.Visible = true;
                    chart.Visible = true;
                    chart.Width = Convert.ToInt32(width);
                    chart.Height = Convert.ToInt32(400);
                    lblchart.Visible = true;
                    lblchart.Text = "Department-->Chart";
                    lbl_semcell.Text = "";
                    divdept.Visible = false;
                    divdegree.Visible = false;
                    divbatch.Visible = false;
                    ledger.Visible = false;
                    batch.Visible = false;
                    divdegr.Visible = false;
                    divdep.Visible = false;
                    divsema.Visible = false;
                    div7.Visible = false;
                    val1.Visible = false;
                    UpdatePanel1.Visible = false;
                    UpdatePanel4.Visible = false;
                    UpdatePanel5.Visible = false;
                    UpdatePanel6.Visible = false;
                }
            }
            else
            {
                lblchart.Visible = false;
                chart.Visible = false;
                pheaderfilter.Visible = false;
                pcolumnorder.Visible = false;
                lblhed.Text = "";
                imgdiv2.Visible = true;
                lbl_alert.Visible = true;
                lbl_alert.Text = "No Record Found";
            }


        }
        catch { }
    }
    #endregion

    #region sem chart
    private void semChartValues()
    {
        try
        {
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                int sel = 0;
                int row = 0;
                int col = 0;
                loadcolumns();
                string semname = "";
                string allot = "";
                string consession = "";
                string govt = "";
                string total = "";
                double paid = 0;
                string bal = "";
                string refund = "";
                string excess = "";
                string sem = "";
                int width = 0;
                chart.ChartAreas[0].AxisX.Title = lblsem.Text;
                chart.ChartAreas[0].AxisY.Title = "Amount";
                chart.ChartAreas[0].AxisX.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisY.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisX.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisY.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisX.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisY.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisX.Interval = 1;
                chart.ChartAreas[0].AxisX.MajorGrid.Enabled = false;
                chart.ChartAreas[0].AxisY.MajorGrid.Enabled = false;
                //chart.Series.Clear();
                DataTable dtchart = new DataTable();
                DataColumn dtcol1 = new DataColumn();
                DataRow drrow = dtchart.NewRow();
                DataView dvhead = new DataView();
                DataView dvex = new DataView();
                Hashtable htcol = new Hashtable();
                Dictionary<int, string> dct = new Dictionary<int, string>();
                dtchart.Columns.Clear();
                dtchart.Columns.Add(dtcol1);
                for (sel = 0; sel < ds.Tables[0].Rows.Count; sel++)
                {
                    sem = Convert.ToString(ds.Tables[0].Rows[sel]["TextVal"].ToString());
                    DataColumn dtcol = new DataColumn();
                    if (Convert.ToString(sem) != "" && sem != null)
                    {
                        dtcol.ColumnName = Convert.ToString(ds.Tables[0].Rows[sel]["TextVal"]);
                        htcol.Add(Convert.ToString(sel), Convert.ToString(ds.Tables[0].Rows[sel]["TextVal"]));
                        dct.Add(Convert.ToInt32(sel), Convert.ToString(ds.Tables[0].Rows[sel]["TextVal"]));
                        dtchart.Columns.Add(dtcol);
                    }
                }
                ViewState["table"] = dct;
                List<string> lsrow = new List<string>();
                if (dtchart.Columns.Count > 0)
                {
                    for (sel = 0; sel < colord.Count; sel++)
                    {
                        drrow = dtchart.NewRow();
                        drrow[0] = ColorderValues(Convert.ToString(colord[sel]));
                        ListItem li = new ListItem(ColorderValues(Convert.ToString(colord[sel])), Convert.ToString(sel));
                        lsrow.Add(Convert.ToString(li));
                        chart.Series.Add(ColorderValues(Convert.ToString(colord[sel])));
                        dtchart.Rows.Add(drrow);
                    }
                }

                if (dtchart.Columns.Count > 0)
                {
                    for (int dtcol = 1; dtcol < dtchart.Columns.Count; dtcol++)
                    {
                        string hname = dtchart.Columns[dtcol].ColumnName;
                        DataTable dtHname = new DataTable();
                        dtHname = ds.Tables[0];
                        dtHname.DefaultView.RowFilter = "TextVal='" + hname + "'";

                        DataView dvHname = dtHname.DefaultView;
                        if (dvHname.Count > 0)
                        {
                            ds.Tables[0].DefaultView.RowFilter = "TextVal='" + Convert.ToString(hname) + "'";
                            dvhead = ds.Tables[0].DefaultView;
                        }
                        if (dvhead != null && dvhead.Count > 0)
                        {
                            semname = Convert.ToString(dvHname[0]["TextVal"]);
                            allot = Convert.ToString(dvhead[0]["Allot"]);
                            consession = Convert.ToString(dvhead[0]["consustion"]);
                            govt = Convert.ToString(dvhead[0]["Government"].ToString());
                            total = Convert.ToString(dvhead[0]["Total"]);
                            if (ds.Tables[1].Rows.Count > 0)
                            {
                                ds.Tables[1].DefaultView.RowFilter = "TextVal='" + Convert.ToString(semname) + "'";
                                DataView dvbal = new DataView();
                                dvbal = ds.Tables[1].DefaultView;
                                if (dvbal.Count > 0 && dvbal != null)
                                {
                                    for (int k = 0; k < dvbal.Count; k++)
                                    {
                                        paid += Convert.ToDouble(dvbal[k]["total"]);
                                    }
                                }
                            }
                            if (paid != 0)
                            {
                                bal = Convert.ToString(Convert.ToDouble(total) - Convert.ToDouble(paid));
                            }
                            else
                            {
                                bal = Convert.ToString(total);
                            }
                            refund = Convert.ToString(dvhead[0]["RefundAmount"]);
                            if (ds.Tables[2].Rows.Count > 0)
                            {
                                ds.Tables[2].DefaultView.RowFilter = "FeeCategory='" + Convert.ToString(ds.Tables[2].Rows[i]["FeeCategory"]) + "'";
                                dvex = ds.Tables[2].DefaultView;
                                if (dvex.Count > 0 && dvex != null)
                                {
                                    excess = Convert.ToString(dvex[0]["ExcessAmount"]);
                                }
                            }

                            if (htcol.ContainsValue(semname))
                            {
                                if (lsrow.Contains("Allot"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Allot"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(allot);
                                }
                                if (lsrow.Contains("Concession"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Concession"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(consession);
                                }
                                if (lsrow.Contains("Government"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Government"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(govt);
                                }
                                if (lsrow.Contains("Total"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Total"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(total);
                                }
                                if (lsrow.Contains("Paid"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Paid"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(paid);
                                    paid = 0;
                                }
                                if (lsrow.Contains("Balance"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Balance"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(bal);
                                    bal = "";
                                }
                                if (lsrow.Contains("Refund Amount"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Refund Amount"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(refund);

                                }
                                if (lsrow.Contains("Excess Amount"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Excess Amount"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(excess);
                                }
                            }

                        }
                    }
                }

                if (dtchart.Rows.Count > 0)
                {
                    for (col = 1; col < dtchart.Columns.Count; col++)
                    {
                        for (row = 0; row < dtchart.Rows.Count; row++)
                        {
                            width += 100;
                            chart.Series[row].Points.AddXY(dtchart.Columns[col].ToString(), dtchart.Rows[row][col].ToString());
                            chart.ChartAreas[0].AxisX.LineColor = System.Drawing.Color.Black;
                            chart.ChartAreas[0].AxisY.LineColor = System.Drawing.Color.Black;

                            chart.Series[row].IsValueShownAsLabel = true;
                            chart.Series[row].IsXValueIndexed = true;

                            chart.ChartAreas[0].AxisX.LabelStyle.Angle = -90;
                            chart.ChartAreas[0].AxisX.LabelStyle.Interval = 1;
                        }
                    }
                    pheaderfilter.Visible = true;
                    pcolumnorder.Visible = true;
                    chart.Visible = true;
                    chart.Width = Convert.ToInt32(width);
                    chart.Height = Convert.ToInt32(400);
                    lblchart.Visible = true;
                    lblchart.Text = "Semester-->Chart";
                    lbl_semcell.Text = "";
                    divdept.Visible = false;
                    divdegree.Visible = false;
                    divbatch.Visible = false;
                    ledger.Visible = false;
                    batch.Visible = false;
                    divdegr.Visible = false;
                    divdep.Visible = false;
                    divsema.Visible = false;
                    div7.Visible = false;
                    val1.Visible = false;
                    UpdatePanel1.Visible = false;
                    UpdatePanel4.Visible = false;
                    UpdatePanel5.Visible = false;
                    UpdatePanel6.Visible = false;
                }
            }
            else
            {
                lblchart.Visible = false;
                chart.Visible = false;
                pheaderfilter.Visible = false;
                pcolumnorder.Visible = false;
                lblhed.Text = "";
                imgdiv2.Visible = true;
                lbl_alert.Visible = true;
                lbl_alert.Text = "No Record Found";
            }


        }
        catch { }
    }
    #endregion


    #region student Chart
    //stud general single stud details
    private void studChartValues()
    {
        try
        {
            if (txt_roll.Text != "")
            {
                if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                {
                    int sel = 0;
                    int row = 0;
                    int col = 0;
                    int width = 0;
                    loadcolumns();
                    string semname = "";
                    string allot = "";
                    string consession = "";
                    string govt = "";
                    string total = "";
                    double paid = 0;
                    string bal = "";
                    string refund = "";
                    string excess = "";
                    string studname = "";
                    string appno = "";
                    string rollno = "";
                    string feecat = "";
                    chart.ChartAreas[0].AxisX.Title = "Student";
                    chart.ChartAreas[0].AxisY.Title = "Amount";
                    chart.ChartAreas[0].AxisX.TitleForeColor = Color.Red;
                    chart.ChartAreas[0].AxisY.TitleForeColor = Color.Red;
                    chart.ChartAreas[0].AxisX.TitleAlignment = StringAlignment.Center;
                    chart.ChartAreas[0].AxisY.TitleAlignment = StringAlignment.Center;
                    chart.ChartAreas[0].AxisX.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                    chart.ChartAreas[0].AxisY.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                    chart.ChartAreas[0].AxisX.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                    chart.ChartAreas[0].AxisX.LabelStyle.ForeColor = Color.Blue;
                    chart.ChartAreas[0].AxisY.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                    chart.ChartAreas[0].AxisY.LabelStyle.ForeColor = Color.Blue;
                    chart.ChartAreas[0].AxisX.Interval = 1;
                    chart.ChartAreas[0].AxisX.MajorGrid.Enabled = false;
                    chart.ChartAreas[0].AxisY.MajorGrid.Enabled = false;
                    // chart.Series.Clear();
                    DataTable dtchart = new DataTable();
                    DataColumn dtcol1 = new DataColumn();
                    DataRow drrow = dtchart.NewRow();
                    DataView dvhead = new DataView();
                    DataView dvex = new DataView();
                    Hashtable htcol = new Hashtable();
                    Dictionary<int, string> dct = new Dictionary<int, string>();
                    dtchart.Columns.Clear();
                    dtchart.Columns.Add(dtcol1);
                    for (sel = 0; sel < ds.Tables[0].Rows.Count; sel++)
                    {
                        ds.Tables[5].DefaultView.RowFilter = "TextCode='" + Convert.ToString(ds.Tables[0].Rows[sel]["FeeCategory"]) + "'";
                        dvhead = ds.Tables[5].DefaultView;
                        string sem = Convert.ToString(dvhead[0]["TextVal"]);
                        DataColumn dtcol = new DataColumn();
                        if (Convert.ToString(sem) != "" && sem != null)
                        {
                            dtcol.ColumnName = Convert.ToString(sem);
                            htcol.Add(Convert.ToString(sel), Convert.ToString(sem));
                            dtchart.Columns.Add(dtcol);
                        }
                    }
                    List<string> lsrow = new List<string>();
                    if (dtchart.Columns.Count > 0)
                    {
                        for (sel = 0; sel < colord.Count; sel++)
                        {
                            drrow = dtchart.NewRow();
                            drrow[0] = ColorderValues(Convert.ToString(colord[sel]));
                            ListItem li = new ListItem(ColorderValues(Convert.ToString(colord[sel])), Convert.ToString(sel));
                            lsrow.Add(Convert.ToString(li));
                            chart.Series.Add(ColorderValues(Convert.ToString(colord[sel])));
                            dtchart.Rows.Add(drrow);
                        }
                    }

                    if (dtchart.Columns.Count > 0)
                    {
                        for (int dtcol = 1; dtcol < dtchart.Columns.Count; dtcol++)
                        {
                            string hname = dtchart.Columns[dtcol].ColumnName;
                            DataTable dtHname = new DataTable();
                            dtHname = ds.Tables[5];
                            dtHname.DefaultView.RowFilter = "TextVal='" + hname + "'";
                            DataView dvHname = dtHname.DefaultView;
                            if (dvHname.Count > 0)
                            {
                                feecat = d2.GetFunction("select TextCode from TextValTable where textval like'" + hname + "%'");

                                ds.Tables[0].DefaultView.RowFilter = "FeeCategory='" + Convert.ToString(feecat) + "'";
                                dvhead = ds.Tables[0].DefaultView;
                            }
                            if (dvhead != null && dvhead.Count > 0)
                            {
                                semname = Convert.ToString(dvHname[0]["TextVal"]);

                                allot = Convert.ToString(dvhead[0]["Allot"]);
                                consession = Convert.ToString(dvhead[0]["consustion"]);
                                govt = Convert.ToString(dvhead[0]["Government"].ToString());
                                total = Convert.ToString(dvhead[0]["Total"]);
                                if (ds.Tables[1].Rows.Count > 0)
                                {
                                    ds.Tables[1].DefaultView.RowFilter = "FeeCategory='" + Convert.ToString(feecat) + "'";
                                    DataView dvbal = new DataView();
                                    dvbal = ds.Tables[1].DefaultView;
                                    if (dvbal.Count > 0 && dvbal != null)
                                    {
                                        for (int k = 0; k < dvbal.Count; k++)
                                        {
                                            paid += Convert.ToDouble(dvbal[k]["total"]);
                                        }
                                    }
                                }
                                if (paid != 0)
                                {
                                    bal = Convert.ToString(Convert.ToDouble(total) - Convert.ToDouble(paid));
                                }
                                else
                                {
                                    bal = Convert.ToString(total);
                                }
                                refund = Convert.ToString(dvhead[0]["RefundAmount"]);
                                appno = Convert.ToString(dvhead[0]["App_no"]);
                                if (ds.Tables[3].Rows.Count > 0)
                                {
                                    ds.Tables[3].DefaultView.RowFilter = "App_No='" + Convert.ToString(appno) + "'";

                                    dvex = ds.Tables[3].DefaultView;
                                    if (dvex.Count > 0 && dvex.Count != null)
                                    {
                                        excess = Convert.ToString(dvex[0]["ExcessAmount"]);
                                    }
                                }

                                if (htcol.ContainsValue(semname))
                                {
                                    if (lsrow.Contains("Allot"))
                                    {
                                        int colvalue = Convert.ToInt32(lsrow.IndexOf("Allot"));
                                        dtchart.Rows[colvalue][dtcol] = Convert.ToString(allot);
                                    }
                                    if (lsrow.Contains("Concession"))
                                    {
                                        int colvalue = Convert.ToInt32(lsrow.IndexOf("Concession"));
                                        dtchart.Rows[colvalue][dtcol] = Convert.ToString(consession);
                                    }
                                    if (lsrow.Contains("Government"))
                                    {
                                        int colvalue = Convert.ToInt32(lsrow.IndexOf("Government"));
                                        dtchart.Rows[colvalue][dtcol] = Convert.ToString(govt);
                                    }
                                    if (lsrow.Contains("Total"))
                                    {
                                        int colvalue = Convert.ToInt32(lsrow.IndexOf("Total"));
                                        dtchart.Rows[colvalue][dtcol] = Convert.ToString(total);

                                    }
                                    if (lsrow.Contains("Paid"))
                                    {
                                        int colvalue = Convert.ToInt32(lsrow.IndexOf("Paid"));
                                        dtchart.Rows[colvalue][dtcol] = Convert.ToString(paid);
                                        paid = 0;
                                    }
                                    if (lsrow.Contains("Balance"))
                                    {
                                        int colvalue = Convert.ToInt32(lsrow.IndexOf("Balance"));
                                        dtchart.Rows[colvalue][dtcol] = Convert.ToString(bal);
                                        bal = "";

                                    }
                                    if (lsrow.Contains("Refund Amount"))
                                    {
                                        int colvalue = Convert.ToInt32(lsrow.IndexOf("Refund Amount"));
                                        dtchart.Rows[colvalue][dtcol] = Convert.ToString(refund);
                                    }
                                    if (lsrow.Contains("Excess Amount"))
                                    {
                                        int colvalue = Convert.ToInt32(lsrow.IndexOf("Excess Amount"));
                                        dtchart.Rows[colvalue][dtcol] = Convert.ToString(excess);
                                    }
                                }

                            }
                        }
                        ViewState["table"] = dct;
                    }

                    if (dtchart.Rows.Count > 0)
                    {
                        for (col = 1; col < dtchart.Columns.Count; col++)
                        {
                            for (row = 0; row < dtchart.Rows.Count; row++)
                            {
                                width += 100;
                                chart.Series[row].Points.AddXY(dtchart.Columns[col].ToString(), dtchart.Rows[row][col].ToString());
                                chart.ChartAreas[0].AxisX.LineColor = System.Drawing.Color.Black;
                                chart.ChartAreas[0].AxisY.LineColor = System.Drawing.Color.Black;

                                chart.Series[row].IsValueShownAsLabel = true;
                                chart.Series[row].IsXValueIndexed = true;

                                chart.ChartAreas[0].AxisX.LabelStyle.Angle = -90;
                                chart.ChartAreas[0].AxisX.LabelStyle.Interval = 1;
                            }
                        }
                        pheaderfilter.Visible = true;
                        pcolumnorder.Visible = true;
                        chart.Visible = true;
                        chart.Width = Convert.ToInt32(width);
                        chart.Height = Convert.ToInt32(400);
                        lblchart.Visible = true;
                        lblchart.Text = "Student-->Chart";
                        lbl_semcell.Text = "";
                        divdept.Visible = false;
                        divdegree.Visible = false;
                        divbatch.Visible = false;
                        ledger.Visible = false;
                        batch.Visible = false;
                        divdegr.Visible = false;
                        divdep.Visible = false;
                        divsema.Visible = false;
                        div7.Visible = false;
                        val1.Visible = false;
                        UpdatePanel1.Visible = false;
                        UpdatePanel4.Visible = false;
                        UpdatePanel5.Visible = false;
                        UpdatePanel6.Visible = false;
                    }
                }
                else
                {
                    lblchart.Visible = false;
                    chart.Visible = false;
                    pheaderfilter.Visible = false;
                    pcolumnorder.Visible = false;
                    lblhed.Text = "";
                    imgdiv2.Visible = true;
                    lbl_alert.Visible = true;
                    lbl_alert.Text = "No Record Found";
                }
            }
            else
            {
                lblchart.Visible = false;
                chart.Visible = false;
                pheaderfilter.Visible = false;
                pcolumnorder.Visible = false;
                lblhed.Text = "";
                imgdiv2.Visible = true;
                lbl_alert.Visible = true;
                lbl_alert.Text = "Please Enter Roll No Only";
            }


        }
        catch { }
    }

    //stud paid detail and yet to be paid
    private void studPaidChartValues()
    {
        try
        {
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                int sel = 0;
                int row = 0;
                int col = 0;
                Int64 width = 0;
                loadcolumns();
                string semname = "";
                string allot = "";
                string consession = "";
                string govt = "";
                string total = "";
                double paid = 0;
                string bal = "";
                string refund = "";
                string excess = "";
                string studname = "";
                string appno = "";
                string rollno = "";

                chart.ChartAreas[0].AxisX.Title = "Student";
                chart.ChartAreas[0].AxisY.Title = "Amount";
                chart.ChartAreas[0].AxisX.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisY.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisX.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisY.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisX.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisY.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisX.Interval = 1;
                chart.ChartAreas[0].AxisX.MajorGrid.Enabled = false;
                chart.ChartAreas[0].AxisY.MajorGrid.Enabled = false;
                // chart.Series.Clear();
                DataTable dtchart = new DataTable();
                DataColumn dtcol1 = new DataColumn();
                DataRow drrow = dtchart.NewRow();
                DataView dvhead = new DataView();
                DataView dvex = new DataView();
                Hashtable htcol = new Hashtable();
                Dictionary<int, string> dct = new Dictionary<int, string>();
                dtchart.Columns.Clear();
                dtchart.Columns.Add(dtcol1);
                for (sel = 0; sel < ds.Tables[0].Rows.Count; sel++)
                {
                    studname = Convert.ToString(ds.Tables[0].Rows[sel]["Stud_Name"]);
                    rollno = Convert.ToString(ds.Tables[0].Rows[sel]["Roll_No"]);
                    DataColumn dtcol = new DataColumn();
                    if (Convert.ToString(studname) != "" && studname != null)
                    {
                        dtcol.ColumnName = Convert.ToString(studname);
                        htcol.Add(Convert.ToString(sel), Convert.ToString(studname));
                        dct.Add(Convert.ToInt32(sel), Convert.ToString(studname));
                        dtchart.Columns.Add(dtcol);
                    }
                }
                List<string> lsrow = new List<string>();
                if (dtchart.Columns.Count > 0)
                {
                    for (sel = 0; sel < colord.Count; sel++)
                    {
                        drrow = dtchart.NewRow();
                        drrow[0] = ColorderValues(Convert.ToString(colord[sel]));
                        ListItem li = new ListItem(ColorderValues(Convert.ToString(colord[sel])), Convert.ToString(sel));
                        lsrow.Add(Convert.ToString(li));
                        chart.Series.Add(ColorderValues(Convert.ToString(colord[sel])));
                        dtchart.Rows.Add(drrow);
                    }
                }
                if (dtchart.Columns.Count > 0)
                {
                    for (int dtcol = 1; dtcol < dtchart.Columns.Count; dtcol++)
                    {
                        string hname = dtchart.Columns[dtcol].ColumnName;
                        ds.Tables[0].DefaultView.RowFilter = "  Stud_Name='" + Convert.ToString(hname) + "'";
                        dvhead = ds.Tables[0].DefaultView;
                        studname = Convert.ToString(dvhead[0]["Stud_Name"]);
                        if (dvhead != null && dvhead.Count > 0)
                        {
                            semname = Convert.ToString(dvhead[0]["Stud_Name"]);
                            allot = Convert.ToString(dvhead[0]["Allot"]);
                            consession = Convert.ToString(dvhead[0]["consustion"]);
                            govt = Convert.ToString(dvhead[0]["Government"].ToString());
                            total = Convert.ToString(dvhead[0]["Total"]);
                            appno = Convert.ToString(dvhead[0]["App_no"]);
                            if (ds.Tables[1].Rows.Count > 0)
                            {
                                ds.Tables[1].DefaultView.RowFilter = "App_No='" + Convert.ToString(appno) + "'";
                                DataView dvbal = new DataView();
                                dvbal = ds.Tables[1].DefaultView;
                                if (dvbal.Count > 0 && dvbal != null)
                                {
                                    for (int k = 0; k < dvbal.Count; k++)
                                    {
                                        paid += Convert.ToDouble(dvbal[k]["total"]);
                                    }
                                }
                            }
                            if (paid != 0)
                            {
                                bal = Convert.ToString(Convert.ToDouble(total) - Convert.ToDouble(paid));
                            }
                            else
                            {
                                bal = Convert.ToString(total);
                            }
                            refund = Convert.ToString(dvhead[0]["RefundAmount"]);
                            if (ds.Tables[3].Rows.Count > 0)
                            {
                                ds.Tables[3].DefaultView.RowFilter = "App_No='" + Convert.ToString(appno) + "'";

                                dvex = ds.Tables[3].DefaultView;
                                if (dvex.Count > 0 && dvex.Count != null)
                                {
                                    excess = Convert.ToString(dvex[0]["ExcessAmount"]);
                                }
                            }

                            if (htcol.ContainsValue(semname))
                            {
                                if (lsrow.Contains("Allot"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Allot"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(allot);
                                }
                                if (lsrow.Contains("Concession"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Concession"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(consession);
                                }
                                if (lsrow.Contains("Government"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Government"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(govt);
                                }
                                if (lsrow.Contains("Total"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Total"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(total);

                                }
                                if (lsrow.Contains("Paid"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Paid"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(paid);
                                    paid = 0;
                                }
                                if (lsrow.Contains("Balance"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Balance"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(bal);
                                    bal = "";
                                }
                                if (lsrow.Contains("Refund Amount"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Refund Amount"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(refund);

                                }
                                if (lsrow.Contains("Excess Amount"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Excess Amount"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(excess);
                                }
                            }

                        }
                    }
                    ViewState["table"] = dct;
                }
                if (dtchart.Rows.Count > 0)
                {
                    for (col = 1; col < dtchart.Columns.Count; col++)
                    {
                        for (row = 0; row < dtchart.Rows.Count; row++)
                        {
                            width += 100;
                            chart.Series[row].Points.AddXY(dtchart.Columns[col].ToString(), dtchart.Rows[row][col].ToString());
                            chart.ChartAreas[0].AxisX.LineColor = System.Drawing.Color.Black;
                            chart.ChartAreas[0].AxisY.LineColor = System.Drawing.Color.Black;

                            chart.Series[row].IsValueShownAsLabel = true;
                            chart.Series[row].IsXValueIndexed = true;

                            chart.ChartAreas[0].AxisX.LabelStyle.Angle = -90;
                            chart.ChartAreas[0].AxisX.LabelStyle.Interval = 1;
                        }
                    }
                    pheaderfilter.Visible = true;
                    pcolumnorder.Visible = true;
                    chart.Visible = true;
                    int widt = 0;
                    widt = (width > 32760) ? 32760 : (int)width;
                    chart.Width = widt;
                    chart.Height = 400;
                    //divchart.Visible = true;
                    lblchart.Visible = true;
                    lblchart.Text = "Student-->Paid Chart";
                    lbl_semcell.Text = "";
                    divdept.Visible = false;
                    divdegree.Visible = false;
                    divbatch.Visible = false;
                    ledger.Visible = false;
                    batch.Visible = false;
                    divdegr.Visible = false;
                    divdep.Visible = false;
                    divsema.Visible = false;
                    div7.Visible = false;
                    val1.Visible = false;
                    UpdatePanel1.Visible = false;
                    UpdatePanel4.Visible = false;
                    UpdatePanel5.Visible = false;
                    UpdatePanel6.Visible = false;
                }
            }
            else
            {
                lblchart.Visible = false;
                chart.Visible = false;
                pheaderfilter.Visible = false;
                pcolumnorder.Visible = false;
                lblhed.Text = "";
                imgdiv2.Visible = true;
                lbl_alert.Visible = true;
                lbl_alert.Text = "No Record Found";
            }


        }
        catch { }
    }

    //daily detail txt!=""
    private void studDailystudChartValues()
    {
        try
        {
            if (ds.Tables.Count > 0 && ds.Tables[1].Rows.Count > 0)
            {
                if (txt_roll.Text != "")
                {
                    int sel = 0;
                    int row = 0;
                    int col = 0;
                    int width = 0;
                    loadcolumns();
                    string semname = "";
                    string allot = "";
                    string consession = "";
                    string govt = "";
                    string total = "";
                    double paid = 0;
                    string bal = "";
                    string refund = "";
                    string excess = "";
                    string studname = "";
                    string appno = "";
                    string rollno = "";
                    string fromdate = "";
                    string todates = "";
                    string feecat = "";
                    DateTime dt = new DateTime();
                    DateTime dt1 = new DateTime();
                    fromdate = Convert.ToString(txt_fromdate.Text);
                    todates = Convert.ToString(txt_todate.Text);

                    string[] frdate = fromdate.Split('/');
                    if (frdate.Length == 3)
                    {
                        fromdate = frdate[1].ToString() + "/" + frdate[0].ToString() + "/" + frdate[2].ToString();
                        dt = Convert.ToDateTime(fromdate);
                    }
                    string[] tdate = todates.Split('/');
                    if (tdate.Length == 3)
                    {
                        todates = tdate[1].ToString() + "/" + tdate[0].ToString() + "/" + tdate[2].ToString();
                        dt1 = Convert.ToDateTime(todates);
                    }
                    chart.ChartAreas[0].AxisX.Title = "Student";
                    chart.ChartAreas[0].AxisY.Title = "Amount";
                    chart.ChartAreas[0].AxisX.TitleForeColor = Color.Red;
                    chart.ChartAreas[0].AxisY.TitleForeColor = Color.Red;
                    chart.ChartAreas[0].AxisX.TitleAlignment = StringAlignment.Center;
                    chart.ChartAreas[0].AxisY.TitleAlignment = StringAlignment.Center;
                    chart.ChartAreas[0].AxisX.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                    chart.ChartAreas[0].AxisY.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                    chart.ChartAreas[0].AxisX.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                    chart.ChartAreas[0].AxisX.LabelStyle.ForeColor = Color.Blue;
                    chart.ChartAreas[0].AxisY.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                    chart.ChartAreas[0].AxisY.LabelStyle.ForeColor = Color.Blue;
                    chart.ChartAreas[0].AxisX.Interval = 1;
                    chart.ChartAreas[0].AxisX.MajorGrid.Enabled = false;
                    chart.ChartAreas[0].AxisY.MajorGrid.Enabled = false;
                    // chart.Series.Clear();
                    DataTable dtchart = new DataTable();
                    DataColumn dtcol1 = new DataColumn();
                    DataRow drrow = dtchart.NewRow();
                    DataView dvhead = new DataView();
                    DataView dvex = new DataView();
                    Hashtable htcol = new Hashtable();
                    Dictionary<int, string> dct = new Dictionary<int, string>();
                    dtchart.Columns.Clear();
                    dtchart.Columns.Add(dtcol1);
                    for (sel = 0; sel < ds.Tables[0].Rows.Count; sel++)
                    {
                        ds.Tables[4].DefaultView.RowFilter = "TextCode='" + Convert.ToString(ds.Tables[0].Rows[sel]["FeeCategory"]) + "'";
                        dvhead = ds.Tables[4].DefaultView;
                        string sem = Convert.ToString(dvhead[0]["TextVal"]);
                        DataColumn dtcol = new DataColumn();
                        if (Convert.ToString(sem) != "" && sem != null)
                        {
                            dtcol.ColumnName = Convert.ToString(sem);
                            htcol.Add(Convert.ToString(sel), Convert.ToString(sem));
                            dtchart.Columns.Add(dtcol);
                        }
                    }
                    List<string> lsrow = new List<string>();
                    if (dtchart.Columns.Count > 0)
                    {
                        for (sel = 0; sel < colord.Count; sel++)
                        {
                            drrow = dtchart.NewRow();
                            drrow[0] = ColorderValues(Convert.ToString(colord[sel]));
                            ListItem li = new ListItem(ColorderValues(Convert.ToString(colord[sel])), Convert.ToString(sel));
                            lsrow.Add(Convert.ToString(li));
                            chart.Series.Add(ColorderValues(Convert.ToString(colord[sel])));
                            dtchart.Rows.Add(drrow);
                        }
                    }

                    if (dtchart.Columns.Count > 0)
                    {
                        for (int dtcol = 1; dtcol < dtchart.Columns.Count; dtcol++)
                        {
                            string hname = dtchart.Columns[dtcol].ColumnName;
                            DataTable dtHname = new DataTable();
                            dtHname = ds.Tables[4];
                            dtHname.DefaultView.RowFilter = "TextVal='" + hname + "'";
                            DataView dvHname = dtHname.DefaultView;
                            if (dvHname.Count > 0)
                            {
                                feecat = d2.GetFunction("select TextCode from TextValTable where textval like'" + hname + "%'");

                                ds.Tables[0].DefaultView.RowFilter = "FeeCategory='" + Convert.ToString(feecat) + "'";
                                dvhead = ds.Tables[0].DefaultView;
                            }
                            if (dvhead != null && dvhead.Count > 0)
                            {
                                semname = Convert.ToString(dvHname[0]["TextVal"]);
                                allot = Convert.ToString(dvhead[0]["Allot"]);
                                consession = Convert.ToString(dvhead[0]["consustion"]);
                                govt = Convert.ToString(dvhead[0]["Government"].ToString());
                                total = Convert.ToString(dvhead[0]["Total"]);
                                if (ds.Tables[1].Rows.Count > 0)
                                {
                                    ds.Tables[1].DefaultView.RowFilter = "FeeCategory='" + Convert.ToString(feecat) + "'";
                                    DataView dvbal = new DataView();
                                    dvbal = ds.Tables[1].DefaultView;
                                    if (dvbal.Count > 0 && dvbal != null)
                                    {
                                        for (int k = 0; k < dvbal.Count; k++)
                                        {
                                            paid += Convert.ToDouble(dvbal[k]["debit"]);
                                        }
                                    }
                                }
                                if (paid != 0)
                                {
                                    bal = Convert.ToString(Convert.ToDouble(total) - Convert.ToDouble(paid));
                                }
                                else
                                {
                                    bal = Convert.ToString(total);
                                }
                                refund = Convert.ToString(dvhead[0]["RefundAmount"]);
                                appno = Convert.ToString(dvhead[0]["App_no"]);
                                if (htcol.ContainsValue(semname))
                                {
                                    if (lsrow.Contains("Allot"))
                                    {
                                        int colvalue = Convert.ToInt32(lsrow.IndexOf("Allot"));
                                        dtchart.Rows[colvalue][dtcol] = Convert.ToString(allot);
                                    }
                                    if (lsrow.Contains("Concession"))
                                    {
                                        int colvalue = Convert.ToInt32(lsrow.IndexOf("Concession"));
                                        dtchart.Rows[colvalue][dtcol] = Convert.ToString(consession);
                                    }
                                    if (lsrow.Contains("Government"))
                                    {
                                        int colvalue = Convert.ToInt32(lsrow.IndexOf("Government"));
                                        dtchart.Rows[colvalue][dtcol] = Convert.ToString(govt);
                                    }
                                    if (lsrow.Contains("Total"))
                                    {
                                        int colvalue = Convert.ToInt32(lsrow.IndexOf("Total"));
                                        dtchart.Rows[colvalue][dtcol] = Convert.ToString(total);

                                    }
                                    if (lsrow.Contains("Paid"))
                                    {
                                        int colvalue = Convert.ToInt32(lsrow.IndexOf("Paid"));
                                        dtchart.Rows[colvalue][dtcol] = Convert.ToString(paid);
                                        paid = 0;
                                    }
                                    if (lsrow.Contains("Balance"))
                                    {
                                        int colvalue = Convert.ToInt32(lsrow.IndexOf("Balance"));
                                        dtchart.Rows[colvalue][dtcol] = Convert.ToString(bal);
                                        bal = "";
                                    }
                                    if (lsrow.Contains("Refund Amount"))
                                    {
                                        int colvalue = Convert.ToInt32(lsrow.IndexOf("Refund Amount"));
                                        dtchart.Rows[colvalue][dtcol] = Convert.ToString(refund);
                                    }
                                    if (lsrow.Contains("Excess Amount"))
                                    {
                                        int colvalue = Convert.ToInt32(lsrow.IndexOf("Excess Amount"));
                                        dtchart.Rows[colvalue][dtcol] = Convert.ToString(excess);
                                    }
                                }

                            }
                        }
                        ViewState["table"] = dct;
                    }

                    if (dtchart.Rows.Count > 0)
                    {
                        for (col = 1; col < dtchart.Columns.Count; col++)
                        {
                            for (row = 0; row < dtchart.Rows.Count; row++)
                            {
                                width += 100;
                                chart.Series[row].Points.AddXY(dtchart.Columns[col].ToString(), dtchart.Rows[row][col].ToString());
                                chart.ChartAreas[0].AxisX.LineColor = System.Drawing.Color.Black;
                                chart.ChartAreas[0].AxisY.LineColor = System.Drawing.Color.Black;

                                chart.Series[row].IsValueShownAsLabel = true;
                                chart.Series[row].IsXValueIndexed = true;

                                chart.ChartAreas[0].AxisX.LabelStyle.Angle = -90;
                                chart.ChartAreas[0].AxisX.LabelStyle.Interval = 1;
                            }
                        }
                        pheaderfilter.Visible = true;
                        pcolumnorder.Visible = true;
                        chart.Visible = true;
                        chart.Width = Convert.ToInt32(width);
                        chart.Height = Convert.ToInt32(450);
                        lblchart.Visible = true;
                        lblchart.Text = "Student-->Chart";
                        lbl_semcell.Text = "";
                        divdept.Visible = false;
                        divdegree.Visible = false;
                        divbatch.Visible = false;
                        ledger.Visible = false;
                        batch.Visible = false;
                        divdegr.Visible = false;
                        divdep.Visible = false;
                        divsema.Visible = false;
                        div7.Visible = false;
                        val1.Visible = false;
                        UpdatePanel1.Visible = false;
                        UpdatePanel4.Visible = false;
                        UpdatePanel5.Visible = false;
                        UpdatePanel6.Visible = false;
                    }
                }
                else
                {
                    lblchart.Visible = false;
                    chart.Visible = false;
                    pheaderfilter.Visible = false;
                    pcolumnorder.Visible = false;
                    lblhed.Text = "";
                    imgdiv2.Visible = true;
                    lbl_alert.Visible = true;
                    lbl_alert.Text = "Please Enter Roll No Only";
                }
            }
            else
            {
                lblchart.Visible = false;
                chart.Visible = false;
                pheaderfilter.Visible = false;
                pcolumnorder.Visible = false;
                lblhed.Text = "";
                imgdiv2.Visible = true;
                lbl_alert.Visible = true;
                lbl_alert.Text = "No Record Found";
            }


        }
        catch { }
    }


    private void studDailyDetailChart()
    {
        try
        {
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                int col = 0;
                int width = 0;
                string fromdate = "";
                string todates = "";
                string cash = "";
                string cheque = "";
                string challan = "";
                string dd = "";
                string online = "";
                string Linkvalue = "";
                string sem = "";
                double regularamt = 0;
                double arreramt = 0;
                DateTime dt = new DateTime();
                DateTime dt1 = new DateTime();
                DataView dv = new DataView();
                DataView dvhead = new DataView();
                DataTable dtchart = new DataTable();
                DataColumn dtcol = new DataColumn();
                DataColumn dtcol1 = new DataColumn();
                Hashtable htvalue = new Hashtable();
                List<string> list = new List<string>();
                List<string> listrow = new List<string>();
                fromdate = Convert.ToString(txt_fromdate.Text);
                todates = Convert.ToString(txt_todate.Text);

                string[] frdate = fromdate.Split('/');
                if (frdate.Length == 3)
                {
                    fromdate = frdate[1].ToString() + "/" + frdate[0].ToString() + "/" + frdate[2].ToString();
                    dt = Convert.ToDateTime(fromdate);
                }
                string[] tdate = todates.Split('/');
                if (tdate.Length == 3)
                {
                    todates = tdate[1].ToString() + "/" + tdate[0].ToString() + "/" + tdate[2].ToString();
                    dt1 = Convert.ToDateTime(todates);
                }
                dtchart.Columns.Clear();
                chart.ChartAreas[0].AxisX.Title = "Daily Detail";
                chart.ChartAreas[0].AxisY.Title = "Amount";
                chart.ChartAreas[0].AxisX.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisY.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisX.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisY.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisX.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisY.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisX.Interval = 1;
                chart.ChartAreas[0].AxisX.MajorGrid.Enabled = false;
                chart.ChartAreas[0].AxisY.MajorGrid.Enabled = false;


                dtchart.Columns.Add(dtcol1);
                int count = 0;
                while (dt <= dt1)
                {
                    dtchart.Columns.Add(dt.ToString("dd/MM/yyyy"));
                    ListItem newli = new ListItem(Convert.ToString(count), Convert.ToString(dt));
                    list.Add(Convert.ToString(newli));
                    dt = dt.AddDays(1);
                }
                if (dtchart.Columns.Count > 0)
                {
                    for (row = 0; row < ds.Tables[4].Rows.Count; row++)
                    {
                        string paymode = Convert.ToString(ds.Tables[4].Rows[row]["Paymode"]);
                        DataRow dtrow = dtchart.NewRow();
                        dtrow[0] = Convert.ToString(paymode);
                        dtchart.Rows.Add(dtrow);
                        ListItem rowli = new ListItem(Convert.ToString(paymode), Convert.ToString(row));
                        listrow.Add(Convert.ToString(rowli));
                        chart.Series.Add(Convert.ToString(paymode));

                    }
                    DataRow rowreg = dtchart.NewRow();
                    rowreg[0] = Convert.ToString("Regular");
                    dtchart.Rows.Add(rowreg);
                    ListItem rowli1 = new ListItem(Convert.ToString("Regular"), Convert.ToString(row));
                    listrow.Add(Convert.ToString(rowli1));
                    chart.Series.Add(Convert.ToString("Regular"));

                    DataRow rowarr = dtchart.NewRow();
                    rowarr[0] = Convert.ToString("Arrear");
                    dtchart.Rows.Add(rowarr);
                    ListItem rowli2 = new ListItem(Convert.ToString("Arrear"), Convert.ToString(row));
                    listrow.Add(Convert.ToString(rowli2));
                    chart.Series.Add(Convert.ToString("Arrear"));
                }

                if (dtchart.Columns.Count > 0)
                {
                    for (row = 1; row < dtchart.Columns.Count; row++)
                    {
                        string coldate = dtchart.Columns[row].ColumnName;
                        ds.Tables[1].DefaultView.RowFilter = "TransDate='" + Convert.ToString(coldate) + "'";
                        dv = ds.Tables[1].DefaultView;
                        if (dv.Count > 0 && dv != null)
                        {
                            for (int dvcol = 0; dvcol < dv.Count; dvcol++)
                            {
                                string paymode = Convert.ToString(dv[dvcol]["paymode"]);
                                if (paymode == "Cash")
                                {
                                    int rowval = Convert.ToInt32(listrow.IndexOf(paymode));
                                    dtchart.Rows[rowval][row] = Convert.ToDouble(dv[dvcol]["debit"]);
                                }
                                if (paymode == "Cheque")
                                {
                                    int rowval = Convert.ToInt32(listrow.IndexOf(paymode));
                                    dtchart.Rows[rowval][row] = Convert.ToDouble(dv[dvcol]["debit"]);
                                }
                                if (paymode == "DD")
                                {
                                    int rowval = Convert.ToInt32(listrow.IndexOf(paymode));
                                    dtchart.Rows[rowval][row] = Convert.ToDouble(dv[dvcol]["debit"]);
                                }
                                if (paymode == "Challan")
                                {
                                    int rowval = Convert.ToInt32(listrow.IndexOf(paymode));
                                    dtchart.Rows[rowval][row] = Convert.ToDouble(dv[dvcol]["debit"]);
                                }
                                if (paymode == "Online Pay")
                                {
                                    int rowval = Convert.ToInt32(listrow.IndexOf(paymode));
                                    dtchart.Rows[rowval][row] = Convert.ToDouble(dv[dvcol]["debit"]);
                                }
                            }
                            if (ds.Tables[2].Rows.Count > 0)
                            {
                                ds.Tables[2].DefaultView.RowFilter = "TransDate='" + Convert.ToString(coldate) + "'";
                                dvhead = ds.Tables[2].DefaultView;
                                if (dvhead.Count > 0 && dvhead != null)
                                {
                                    for (int k = 0; k < dvhead.Count; k++)
                                    {
                                        string feecat = Convert.ToString(dvhead[k]["FeeCategory"]);
                                        string currentsem = Convert.ToString(dvhead[k]["Current_Semester"]);

                                        if (group_user.Contains(";"))
                                        {
                                            string[] group_semi = group_user.Split(';');
                                            group_user = group_semi[0].ToString();

                                            Linkvalue = da.GetFunction("select LinkValue from New_InsSettings where linkname = 'Fee Yearwise' and user_code ='" + group_user + "' and college_code ='" + Session["collegecode"].ToString() + "'");
                                        }
                                        else
                                        {
                                            Linkvalue = da.GetFunction("select LinkValue from New_InsSettings where linkname = 'Fee Yearwise' and user_code ='" + usercode + "' and college_code ='" + Session["collegecode"].ToString() + "'");
                                        }

                                        if (Linkvalue == "0")
                                        {
                                            sem = d2.GetFunction("select TextCode  from TextValTable where TextCriteria ='FEECA' and TextVal ='" + currentsem + " Semeter'");

                                        }
                                        else
                                        {
                                            string valuenew = returnYearforSem(currentsem);
                                            sem = d2.GetFunction("select TextCode  from TextValTable where TextCriteria ='FEECA' and TextVal ='" + valuenew + " Year'");
                                        }
                                        if (sem == feecat)
                                        {
                                            regularamt += Convert.ToDouble(dvhead[k]["debit"]);
                                        }
                                        else
                                        {
                                            arreramt += Convert.ToDouble(dvhead[k]["debit"]);
                                        }
                                    }
                                    int rowval = Convert.ToInt32(listrow.IndexOf("Regular"));
                                    dtchart.Rows[rowval][row] = Convert.ToDouble(regularamt);

                                    int rowval1 = Convert.ToInt32(listrow.IndexOf("Arrear"));
                                    dtchart.Rows[rowval1][row] = Convert.ToDouble(arreramt);

                                }
                            }
                        }

                    }
                }

                if (dtchart.Rows.Count > 0)
                {
                    for (row = 0; row < dtchart.Rows.Count; row++)
                    {
                        for (col = 1; col < dtchart.Columns.Count; col++)
                        {
                            width += 100;
                            chart.Series[row].Points.AddXY(dtchart.Columns[col].ToString(), dtchart.Rows[row][col].ToString());
                            chart.ChartAreas[0].AxisX.LineColor = System.Drawing.Color.Black;
                            chart.ChartAreas[0].AxisY.LineColor = System.Drawing.Color.Black;
                            chart.Series[row].ChartType = SeriesChartType.Column;
                            chart.Series[row].IsValueShownAsLabel = true;
                            chart.Series[row].IsXValueIndexed = true;
                            chart.ChartAreas[0].AxisX.LabelStyle.Angle = -90;
                            chart.ChartAreas[0].AxisX.LabelStyle.Interval = 1;

                        }
                    }
                    chart.Visible = true;
                    lblchart.Visible = true;
                    lblchart.Text = "Student-->Daily Details";
                    chart.Width = Convert.ToInt32(width);
                    chart.Height = 400;
                }
            }
            else
            {
                lblchart.Visible = false;
                chart.Visible = false;
                pheaderfilter.Visible = false;
                pcolumnorder.Visible = false;
                lblhed.Text = "";
                imgdiv2.Visible = true;
                lbl_alert.Visible = true;
                lbl_alert.Text = "No Record Found";
            }
        }
        catch
        { }
    }

    #region old
    //daily detail txt=="" and without datewise
    //private void studDailywithoutDateDetailChart()
    //{
    //    try
    //    {
    //        if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
    //        {
    //            int col = 0;
    //            string fromdate = "";
    //            string todates = "";
    //            string cash = "";
    //            string cheque = "";
    //            string challan = "";
    //            string dd = "";
    //            string online = "";
    //            string Linkvalue = "";
    //            string sem = "";
    //            double regularamt = 0;
    //            double arreramt = 0;
    //            int width = 0;
    //            string paymode = "";
    //            DateTime dt = new DateTime();
    //            DateTime dt1 = new DateTime();
    //            DataView dv = new DataView();
    //            DataTable dtchart = new DataTable();
    //            DataColumn dtcol = new DataColumn();
    //            DataColumn dtcol1 = new DataColumn();
    //            Hashtable htvalue = new Hashtable();
    //            List<string> list = new List<string>();
    //            fromdate = Convert.ToString(txt_fromdate.Text);
    //            todates = Convert.ToString(txt_todate.Text);

    //            string[] frdate = fromdate.Split('/');
    //            if (frdate.Length == 3)
    //            {
    //                fromdate = frdate[1].ToString() + "/" + frdate[0].ToString() + "/" + frdate[2].ToString();
    //                dt = Convert.ToDateTime(fromdate);
    //            }
    //            string[] tdate = todates.Split('/');
    //            if (tdate.Length == 3)
    //            {
    //                todates = tdate[1].ToString() + "/" + tdate[0].ToString() + "/" + tdate[2].ToString();
    //                dt1 = Convert.ToDateTime(todates);
    //            }
    //            dtchart.Columns.Clear();
    //            chart.ChartAreas[0].AxisX.Title = "Daily Detail";
    //            chart.ChartAreas[0].AxisY.Title = "Amount";
    //            chart.ChartAreas[0].AxisX.TitleForeColor = Color.Red;
    //            chart.ChartAreas[0].AxisY.TitleForeColor = Color.Red;
    //            chart.ChartAreas[0].AxisX.TitleAlignment = StringAlignment.Center;
    //            chart.ChartAreas[0].AxisY.TitleAlignment = StringAlignment.Center;
    //            chart.ChartAreas[0].AxisX.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
    //            chart.ChartAreas[0].AxisY.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
    //            chart.ChartAreas[0].AxisX.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
    //            chart.ChartAreas[0].AxisX.LabelStyle.ForeColor = Color.Blue;
    //            chart.ChartAreas[0].AxisY.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
    //            chart.ChartAreas[0].AxisY.LabelStyle.ForeColor = Color.Blue;
    //            chart.ChartAreas[0].AxisX.Interval = 1;
    //            chart.ChartAreas[0].AxisX.MajorGrid.Enabled = false;
    //            chart.ChartAreas[0].AxisY.MajorGrid.Enabled = false;
    //            //if (ds.Tables[4].Rows.Count > 0)
    //            //{
    //            //    for (int i = 0; i < ds.Tables[4].Rows.Count; i++)
    //            //    {
    //            //        paymode = Convert.ToString(ds.Tables[4].Rows[i]["Paymode"]);
    //            //        dtchart.Columns.Add(Convert.ToString(paymode));
    //            //        ListItem li = new ListItem(Convert.ToString(paymode), Convert.ToString(i));
    //            //        list.Add(Convert.ToString(li));
    //            //    }
    //            //    chart.Series.Add(Convert.ToString("overall"));
    //            //}
    //            dtchart.Columns.Add(dtcol);
    //            dtchart.Columns.Add("Overall Daily Details");

    //            DataRow drrow = dtchart.NewRow();
    //            drrow[0] = Convert.ToString("Cash");
    //            dtchart.Rows.Add(drrow);
    //            DataRow drrow1 = dtchart.NewRow();
    //            drrow1[0] = Convert.ToString("Cheque");
    //            dtchart.Rows.Add(drrow1);
    //            DataRow drrow2 = dtchart.NewRow();
    //            drrow2[0] = Convert.ToString("DD");
    //            dtchart.Rows.Add(drrow2);
    //            DataRow drrow3 = dtchart.NewRow();
    //            drrow3[0] = Convert.ToString("Challan");
    //            dtchart.Rows.Add(drrow3);
    //            DataRow drrow4 = dtchart.NewRow();
    //            drrow4[0] = Convert.ToString("Online");
    //            dtchart.Rows.Add(drrow4);

    //            chart.Series.Add("Cash");
    //            chart.Series.Add("Cheque");
    //            chart.Series.Add("DD");
    //            chart.Series.Add("Challan");
    //            chart.Series.Add("Online");

    //            #region old
    //            //// dtchart.Columns.Add(dtcol1);
    //            //dtchart.Columns.Add("Cash");
    //            //dtchart.Columns.Add("Cheque");
    //            //dtchart.Columns.Add("DD");
    //            //dtchart.Columns.Add("Challan");
    //            //dtchart.Columns.Add("Online Pay");
    //            //dtchart.Columns.Add("Regular");
    //            //dtchart.Columns.Add("Arrear");
    //            //if (chk_datewise.Checked == true)
    //            //{
    //            //    chart.Series.Add(dt.ToString("dd/MM/yyyy"));
    //            //    chart.Series.Add(dt1.ToString("dd/MM/yyyy"));
    //            //}
    //            //else
    //            //{
    //            //    chart.Series.Add("Cash");
    //            //    chart.Series.Add("Cheque");
    //            //    chart.Series.Add("DD");
    //            //    chart.Series.Add("Challan");
    //            //    chart.Series.Add("Online Pay");
    //            //    chart.Series.Add("Regular");
    //            //    chart.Series.Add("Arrear");
    //            //}

    //            DataRow dtrow;
    //            dtrow = dtchart.NewRow();
    //            //if (dtchart.Columns.Count > 0)
    //            //{
    //            //    for (i = 0; i < ds.Tables[3].Rows.Count; i++)
    //            //    {
    //            //        if (i == 0)
    //            //        {
    //            //            cash = Convert.ToString(ds.Tables[3].Rows[i]["debit"]);
    //            //            if (cash != "")
    //            //                dtrow["Cash"] = cash;
    //            //            else
    //            //                dtrow["Cash"] = "0";
    //            //        }
    //            //        if (i == 1)
    //            //        {
    //            //            cheque = Convert.ToString(ds.Tables[3].Rows[i]["debit"]);
    //            //            if (cheque != "")
    //            //                dtrow["Cheque"] = cheque;
    //            //            else
    //            //                dtrow["Cheque"] = "0";
    //            //        }
    //            //        if (i == 2)
    //            //        {
    //            //            dd = Convert.ToString(ds.Tables[3].Rows[i]["debit"]);
    //            //            if (dd != "")
    //            //                dtrow["DD"] = dd;
    //            //            else
    //            //                dtrow["DD"] = "0";
    //            //        }
    //            //        if (i == 3)
    //            //        {
    //            //            challan = Convert.ToString(ds.Tables[3].Rows[i]["debit"]);
    //            //            if (challan != "")
    //            //                dtrow["Challan"] = challan;
    //            //            else
    //            //                dtrow["Challan"] = "0";
    //            //        }
    //            //        if (i == 4)
    //            //        {
    //            //            online = Convert.ToString(ds.Tables[3].Rows[i]["debit"]);
    //            //            if (online != "")
    //            //                dtrow["Online Pay"] = online;
    //            //            else
    //            //                dtrow["Online Pay"] = "0";
    //            //        }

    //            //        if (ds.Tables[2].Rows.Count > 0)
    //            //        {
    //            //            string feecat = Convert.ToString(ds.Tables[2].Rows[i]["FeeCategory"]);
    //            //            string currentsem = Convert.ToString(ds.Tables[2].Rows[i]["Current_Semester"]);

    //            //            if (group_user.Contains(";"))
    //            //            {
    //            //                string[] group_semi = group_user.Split(';');
    //            //                group_user = group_semi[0].ToString();

    //            //                Linkvalue = da.GetFunction("select LinkValue from New_InsSettings where linkname = 'Fee Yearwise' and user_code ='" + group_user + "' and college_code ='" + Session["collegecode"].ToString() + "'");
    //            //            }
    //            //            else
    //            //            {
    //            //                Linkvalue = da.GetFunction("select LinkValue from New_InsSettings where linkname = 'Fee Yearwise' and user_code ='" + usercode + "' and college_code ='" + Session["collegecode"].ToString() + "'");
    //            //            }

    //            //            if (Linkvalue == "0")
    //            //            {
    //            //                sem = d2.GetFunction("select TextCode  from TextValTable where TextCriteria ='FEECA' and TextVal ='" + currentsem + " Semeter'");

    //            //            }
    //            //            else
    //            //            {
    //            //                string valuenew = returnYearforSem(currentsem);
    //            //                sem = d2.GetFunction("select TextCode  from TextValTable where TextCriteria ='FEECA' and TextVal ='" + valuenew + " Year'");
    //            //            }
    //            //            if (sem == feecat)
    //            //            {
    //            //                regularamt += Convert.ToDouble(ds.Tables[2].Rows[i]["debit"]);
    //            //            }
    //            //            else
    //            //            {
    //            //                arreramt += Convert.ToDouble(ds.Tables[2].Rows[i]["debit"]);
    //            //            }
    //            //        }
    //            //        // dtchart.Rows.Add(dtrow);
    //            //    }
    //            //    if (Convert.ToString(regularamt) != "")
    //            //       dtrow["Regular"] = regularamt; 
    //            //    else
    //            //        dtrow["Regular"] = "0";
    //            //    if (Convert.ToString(arreramt) != "")
    //            //        dtrow["Arrear"] = arreramt;
    //            //    else
    //            //        dtrow["Arrear"] = "0";
    //            //    dtchart.Rows.Add(dtrow);
    //            //}

    //            #endregion
    //            if (dtchart.Columns.Count > 0)
    //            {
    //                for (int sel = 0; sel < dtchart.Columns.Count; sel++)
    //                {
    //                    paymode = dtchart.Columns[sel].ColumnName;
    //                    ds.Tables[3].DefaultView.RowFilter = "Paymode='" + Convert.ToString(paymode) + "'";
    //                    dv = ds.Tables[3].DefaultView;
    //                    if (dv.Count > 0 && dv != null)
    //                    {
    //                        width += 350;
    //                        string amount = Convert.ToString(dv[0]["debit"]);
    //                        if (paymode == "Cash")
    //                        {
    //                           // dtrow["Cash"] = amount;
    //                            dtchart.Rows[0]["Cash"] = amount;
    //                        }
    //                        if (paymode == "Cheque")
    //                        {
    //                           // dtrow["Cheque"] = amount;
    //                            dtchart.Rows[1]["Cheque"] = amount;
    //                        }
    //                        if (paymode == "DD")
    //                        {
    //                           // dtrow["DD"] = amount;
    //                            dtchart.Rows[2]["DD"] = amount;
    //                        }
    //                        if (paymode == "Challan")
    //                        {
    //                           // dtrow["Challan"] = amount;
    //                            dtchart.Rows[3]["Challan"] = amount;
    //                        }
    //                        if (paymode == "Online")
    //                        {
    //                           // dtrow["Online"] = amount;
    //                            dtchart.Rows[4]["Online"] = amount;
    //                        }

    //                    }
    //                    if (ds.Tables[2].Rows.Count > 0)
    //                    {
    //                        ds.Tables[2].DefaultView.RowFilter = "Paymode='" + Convert.ToString(paymode) + "'";
    //                        dvhead = ds.Tables[2].DefaultView;
    //                        if (dvhead.Count > 0 && dvhead != null)
    //                        {
    //                            for (int k = 0; k < dvhead.Count; k++)
    //                            {
    //                                string feecat = Convert.ToString(dvhead[k]["FeeCategory"]);
    //                                string currentsem = Convert.ToString(dvhead[k]["Current_Semester"]);

    //                                if (group_user.Contains(";"))
    //                                {
    //                                    string[] group_semi = group_user.Split(';');
    //                                    group_user = group_semi[0].ToString();

    //                                    Linkvalue = da.GetFunction("select LinkValue from New_InsSettings where linkname = 'Fee Yearwise' and user_code ='" + group_user + "' and college_code ='" + Session["collegecode"].ToString() + "'");
    //                                }
    //                                else
    //                                {
    //                                    Linkvalue = da.GetFunction("select LinkValue from New_InsSettings where linkname = 'Fee Yearwise' and user_code ='" + usercode + "' and college_code ='" + Session["collegecode"].ToString() + "'");
    //                                }

    //                                if (Linkvalue == "0")
    //                                {
    //                                    sem = d2.GetFunction("select TextCode  from TextValTable where TextCriteria ='FEECA' and TextVal ='" + currentsem + " Semeter'");

    //                                }
    //                                else
    //                                {
    //                                    string valuenew = returnYearforSem(currentsem);
    //                                    sem = d2.GetFunction("select TextCode  from TextValTable where TextCriteria ='FEECA' and TextVal ='" + valuenew + " Year'");
    //                                }
    //                                if (sem == feecat)
    //                                {
    //                                    regularamt += Convert.ToDouble(dvhead[k]["debit"]);
    //                                }
    //                                else
    //                                {
    //                                    arreramt += Convert.ToDouble(dvhead[k]["debit"]);
    //                                }
    //                            }
    //                        }
    //                    }
    //                }
    //                //dtchart.Columns.Add(Convert.ToString("Regular"));
    //                //dtrow["Regular"] = Convert.ToDouble(regularamt);
    //                //dtchart.Columns.Add(Convert.ToString("Arrear"));
    //                //dtrow["Arrear"] = Convert.ToDouble(arreramt);
    //                //dtchart.Rows.Add(dtrow);
    //                DataRow drrow5 = dtchart.NewRow();
    //                drrow5[0] = Convert.ToString("Regular");
    //                dtchart.Rows.Add(drrow5);
    //                DataRow drrow6 = dtchart.NewRow();
    //                drrow6[0] = Convert.ToString("Arrear");
    //                dtchart.Rows.Add(drrow6);
    //                chart.Series.Add("Regular");
    //                chart.Series.Add("Arrear");
    //                dtchart.Rows[4]["Regular"] = Convert.ToDouble(regularamt);
    //                dtchart.Rows[4]["Arrear"] = Convert.ToDouble(arreramt);
    //            }
    //            if (dtchart.Rows.Count > 0)
    //            {
    //                for (row = 0; row < dtchart.Rows.Count; row++)
    //                {
    //                    for (col = 0; col < dtchart.Columns.Count; col++)
    //                    {
    //                        width += 100;
    //                        chart.Series[row].Points.AddXY(dtchart.Columns[col].ToString(), dtchart.Rows[row][col].ToString());
    //                        chart.ChartAreas[0].AxisX.LineColor = System.Drawing.Color.Black;
    //                        chart.ChartAreas[0].AxisY.LineColor = System.Drawing.Color.Black;
    //                        chart.Series[row].IsValueShownAsLabel = true;
    //                        chart.Series[row].IsXValueIndexed = true;
    //                        chart.ChartAreas[0].AxisX.LabelStyle.Angle = -90;
    //                        chart.ChartAreas[0].AxisX.LabelStyle.Interval = 1;
    //                    }
    //                }
    //                chart.Visible = true;
    //                lblchart.Visible = true;
    //                lblchart.Text = "Student-->Daily Details";
    //                chart.Width = Convert.ToInt32(width);
    //                chart.Height = 400;
    //            }
    //        }
    //        else
    //        {
    //            lblchart.Visible = false;
    //            chart.Visible = false;
    //            pheaderfilter.Visible = false;
    //            pcolumnorder.Visible = false;
    //            lblhed.Text = "";
    //            imgdiv2.Visible = true;
    //            lbl_alert.Visible = true;
    //            lbl_alert.Text = "No Record Found";
    //        }
    //    }
    //    catch
    //    { }
    //}
    #endregion

    //stud dailydetail txt==" and without datewise

    private void studDailywithoutDateDetailChart()
    {
        try
        {
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                int col = 0;
                string fromdate = "";
                string todates = "";
                string cash = "";
                string cheque = "";
                string challan = "";
                string dd = "";
                string online = "";
                string Linkvalue = "";
                string sem = "";
                double regularamt = 0;
                double arreramt = 0;
                int width = 0;
                string paymode = "";
                DateTime dt = new DateTime();
                DateTime dt1 = new DateTime();
                DataView dv = new DataView();
                DataTable dtchart = new DataTable();
                DataColumn dtcol = new DataColumn();
                DataColumn dtcol1 = new DataColumn();
                Hashtable htvalue = new Hashtable();
                List<string> list = new List<string>();
                fromdate = Convert.ToString(txt_fromdate.Text);
                todates = Convert.ToString(txt_todate.Text);

                string[] frdate = fromdate.Split('/');
                if (frdate.Length == 3)
                {
                    fromdate = frdate[1].ToString() + "/" + frdate[0].ToString() + "/" + frdate[2].ToString();
                    dt = Convert.ToDateTime(fromdate);
                }
                string[] tdate = todates.Split('/');
                if (tdate.Length == 3)
                {
                    todates = tdate[1].ToString() + "/" + tdate[0].ToString() + "/" + tdate[2].ToString();
                    dt1 = Convert.ToDateTime(todates);
                }
                dtchart.Columns.Clear();
                chart.ChartAreas[0].AxisX.Title = "Daily Detail";
                chart.ChartAreas[0].AxisY.Title = "Amount";
                chart.ChartAreas[0].AxisX.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisY.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisX.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisY.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisX.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisY.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisX.Interval = 1;
                chart.ChartAreas[0].AxisX.MajorGrid.Enabled = false;
                chart.ChartAreas[0].AxisY.MajorGrid.Enabled = false;

                //  dtchart.Columns.Add("Overall");
                if (ds.Tables[4].Rows.Count > 0)
                {
                    for (int i = 0; i < ds.Tables[4].Rows.Count; i++)
                    {
                        paymode = Convert.ToString(ds.Tables[4].Rows[i]["Paymode"]);
                        // dtchart.Columns.Add(Convert.ToString(paymode));
                        dtchart.Columns.Add(Convert.ToString(paymode));
                        ListItem li = new ListItem(Convert.ToString(paymode), Convert.ToString(i));
                        list.Add(Convert.ToString(li));
                        //chart.Series.Add(Convert.ToString(paymode));
                    }
                    chart.Series.Add(Convert.ToString("overall"));
                }

                #region old
                //// dtchart.Columns.Add(dtcol1);
                //dtchart.Columns.Add("Cash");
                //dtchart.Columns.Add("Cheque");
                //dtchart.Columns.Add("DD");
                //dtchart.Columns.Add("Challan");
                //dtchart.Columns.Add("Online Pay");
                //dtchart.Columns.Add("Regular");
                //dtchart.Columns.Add("Arrear");
                //if (chk_datewise.Checked == true)
                //{
                //    chart.Series.Add(dt.ToString("dd/MM/yyyy"));
                //    chart.Series.Add(dt1.ToString("dd/MM/yyyy"));
                //}
                //else
                //{
                //    chart.Series.Add("Cash");
                //    chart.Series.Add("Cheque");
                //    chart.Series.Add("DD");
                //    chart.Series.Add("Challan");
                //    chart.Series.Add("Online Pay");
                //    chart.Series.Add("Regular");
                //    chart.Series.Add("Arrear");
                //}

                DataRow dtrow;
                dtrow = dtchart.NewRow();
                //if (dtchart.Columns.Count > 0)
                //{
                //    for (i = 0; i < ds.Tables[3].Rows.Count; i++)
                //    {
                //        if (i == 0)
                //        {
                //            cash = Convert.ToString(ds.Tables[3].Rows[i]["debit"]);
                //            if (cash != "")
                //                dtrow["Cash"] = cash;
                //            else
                //                dtrow["Cash"] = "0";
                //        }
                //        if (i == 1)
                //        {
                //            cheque = Convert.ToString(ds.Tables[3].Rows[i]["debit"]);
                //            if (cheque != "")
                //                dtrow["Cheque"] = cheque;
                //            else
                //                dtrow["Cheque"] = "0";
                //        }
                //        if (i == 2)
                //        {
                //            dd = Convert.ToString(ds.Tables[3].Rows[i]["debit"]);
                //            if (dd != "")
                //                dtrow["DD"] = dd;
                //            else
                //                dtrow["DD"] = "0";
                //        }
                //        if (i == 3)
                //        {
                //            challan = Convert.ToString(ds.Tables[3].Rows[i]["debit"]);
                //            if (challan != "")
                //                dtrow["Challan"] = challan;
                //            else
                //                dtrow["Challan"] = "0";
                //        }
                //        if (i == 4)
                //        {
                //            online = Convert.ToString(ds.Tables[3].Rows[i]["debit"]);
                //            if (online != "")
                //                dtrow["Online Pay"] = online;
                //            else
                //                dtrow["Online Pay"] = "0";
                //        }

                //        if (ds.Tables[2].Rows.Count > 0)
                //        {
                //            string feecat = Convert.ToString(ds.Tables[2].Rows[i]["FeeCategory"]);
                //            string currentsem = Convert.ToString(ds.Tables[2].Rows[i]["Current_Semester"]);

                //            if (group_user.Contains(";"))
                //            {
                //                string[] group_semi = group_user.Split(';');
                //                group_user = group_semi[0].ToString();

                //                Linkvalue = da.GetFunction("select LinkValue from New_InsSettings where linkname = 'Fee Yearwise' and user_code ='" + group_user + "' and college_code ='" + Session["collegecode"].ToString() + "'");
                //            }
                //            else
                //            {
                //                Linkvalue = da.GetFunction("select LinkValue from New_InsSettings where linkname = 'Fee Yearwise' and user_code ='" + usercode + "' and college_code ='" + Session["collegecode"].ToString() + "'");
                //            }

                //            if (Linkvalue == "0")
                //            {
                //                sem = d2.GetFunction("select TextCode  from TextValTable where TextCriteria ='FEECA' and TextVal ='" + currentsem + " Semeter'");

                //            }
                //            else
                //            {
                //                string valuenew = returnYearforSem(currentsem);
                //                sem = d2.GetFunction("select TextCode  from TextValTable where TextCriteria ='FEECA' and TextVal ='" + valuenew + " Year'");
                //            }
                //            if (sem == feecat)
                //            {
                //                regularamt += Convert.ToDouble(ds.Tables[2].Rows[i]["debit"]);
                //            }
                //            else
                //            {
                //                arreramt += Convert.ToDouble(ds.Tables[2].Rows[i]["debit"]);
                //            }
                //        }
                //        // dtchart.Rows.Add(dtrow);
                //    }
                //    if (Convert.ToString(regularamt) != "")
                //       dtrow["Regular"] = regularamt; 
                //    else
                //        dtrow["Regular"] = "0";
                //    if (Convert.ToString(arreramt) != "")
                //        dtrow["Arrear"] = arreramt;
                //    else
                //        dtrow["Arrear"] = "0";
                //    dtchart.Rows.Add(dtrow);
                //}

                #endregion
                if (dtchart.Columns.Count > 0)
                {
                    for (int sel = 0; sel < dtchart.Columns.Count; sel++)
                    {
                        paymode = dtchart.Columns[sel].ColumnName;
                        ds.Tables[3].DefaultView.RowFilter = "Paymode='" + Convert.ToString(paymode) + "'";
                        dv = ds.Tables[3].DefaultView;
                        if (dv.Count > 0 && dv != null)
                        {
                            width += 350;
                            string amount = Convert.ToString(dv[0]["debit"]);
                            if (paymode == "Cash")
                            {
                                // int roval = Convert.ToInt32(list.IndexOf(paymode));
                                dtrow["Cash"] = amount;
                            }
                            if (paymode == "Cheque")
                            {
                                // int roval = Convert.ToInt32(list.IndexOf(paymode));
                                dtrow["Cheque"] = amount;
                            }
                            if (paymode == "DD")
                            {
                                //int roval = Convert.ToInt32(list.IndexOf(paymode));
                                dtrow["DD"] = amount;
                            }
                            if (paymode == "Challan")
                            {
                                // int roval = Convert.ToInt32(list.IndexOf(paymode));
                                dtrow["Challan"] = amount;
                            }
                            if (paymode == "Online")
                            {
                                // int roval = Convert.ToInt32(list.IndexOf(paymode));
                                dtrow["Online"] = amount;
                            }
                            //if (list.Contains(paymode))
                            //{
                            //    int roval = Convert.ToInt32(list.IndexOf(paymode));
                            //    dtrow["Cash"] = amount; 
                            //}
                        }
                        if (ds.Tables[2].Rows.Count > 0)
                        {
                            ds.Tables[2].DefaultView.RowFilter = "Paymode='" + Convert.ToString(paymode) + "'";
                            dvhead = ds.Tables[2].DefaultView;
                            if (dvhead.Count > 0 && dvhead != null)
                            {
                                for (int k = 0; k < dvhead.Count; k++)
                                {
                                    string feecat = Convert.ToString(dvhead[k]["FeeCategory"]);
                                    string currentsem = Convert.ToString(dvhead[k]["Current_Semester"]);

                                    if (group_user.Contains(";"))
                                    {
                                        string[] group_semi = group_user.Split(';');
                                        group_user = group_semi[0].ToString();

                                        Linkvalue = da.GetFunction("select LinkValue from New_InsSettings where linkname = 'Fee Yearwise' and user_code ='" + group_user + "' and college_code ='" + Session["collegecode"].ToString() + "'");
                                    }
                                    else
                                    {
                                        Linkvalue = da.GetFunction("select LinkValue from New_InsSettings where linkname = 'Fee Yearwise' and user_code ='" + usercode + "' and college_code ='" + Session["collegecode"].ToString() + "'");
                                    }

                                    if (Linkvalue == "0")
                                    {
                                        sem = d2.GetFunction("select TextCode  from TextValTable where TextCriteria ='FEECA' and TextVal ='" + currentsem + " Semeter'");

                                    }
                                    else
                                    {
                                        string valuenew = returnYearforSem(currentsem);
                                        sem = d2.GetFunction("select TextCode  from TextValTable where TextCriteria ='FEECA' and TextVal ='" + valuenew + " Year'");
                                    }
                                    if (sem == feecat)
                                    {
                                        regularamt += Convert.ToDouble(dvhead[k]["debit"]);
                                    }
                                    else
                                    {
                                        arreramt += Convert.ToDouble(dvhead[k]["debit"]);
                                    }
                                }

                                //   dtchart.Columns.Add(Convert.ToString("Regular"));
                                // ListItem li2 = new ListItem(Convert.ToString(paymode), Convert.ToString(i));
                                //list.Add(Convert.ToString(li2));

                                //  int rowval = Convert.ToInt32(list.IndexOf("Regular"));
                                //  dtrow["Regular"]  = Convert.ToDouble(regularamt);

                                //   dtchart.Columns.Add(Convert.ToString("Arrear"));
                                //  ListItem li3 = new ListItem(Convert.ToString(paymode), Convert.ToString(i));
                                //  list.Add(Convert.ToString(li3));

                                //  int rowval1 = Convert.ToInt32(list.IndexOf("Arrear"));
                                //  dtrow["Arrear"] = Convert.ToDouble(arreramt);

                            }
                            width += 250;
                        }

                    }
                    dtchart.Columns.Add(Convert.ToString("Regular"));
                    //  chart.Series.Add(Convert.ToString("Regular"));
                    dtrow["Regular"] = Convert.ToDouble(regularamt);
                    dtchart.Columns.Add(Convert.ToString("Arrear"));
                    //  chart.Series.Add(Convert.ToString("Arrear"));
                    dtrow["Arrear"] = Convert.ToDouble(arreramt);
                    dtchart.Rows.Add(dtrow);
                }
                if (dtchart.Rows.Count > 0)
                {
                    for (row = 0; row < dtchart.Rows.Count; row++)
                    {
                        for (col = 0; col < dtchart.Columns.Count; col++)
                        {
                            chart.Series[row].Points.AddXY(dtchart.Columns[col].ToString(), dtchart.Rows[row][col].ToString());
                            chart.ChartAreas[0].AxisX.LineColor = System.Drawing.Color.Black;
                            chart.ChartAreas[0].AxisY.LineColor = System.Drawing.Color.Black;

                            chart.Series[row].IsValueShownAsLabel = true;
                            chart.Series[row].IsXValueIndexed = true;

                            chart.ChartAreas[0].AxisX.LabelStyle.Angle = -90;
                            chart.ChartAreas[0].AxisX.LabelStyle.Interval = 1;
                        }
                    }
                    chart.Visible = true;
                    lblchart.Visible = true;
                    lblchart.Text = "Student-->Daily Details";
                    chart.Width = 900;
                    chart.Height = 400;
                }
            }
            else
            {
                lblchart.Visible = false;
                chart.Visible = false;
                pheaderfilter.Visible = false;
                pcolumnorder.Visible = false;
                lblhed.Text = "";
                imgdiv2.Visible = true;
                lbl_alert.Visible = true;
                lbl_alert.Text = "No Record Found";
            }
        }
        catch
        { }
    }
    #endregion

    #region others staff
    private void staffChartValues()
    {
        try
        {
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                int sel = 0;
                int row = 0;
                int col = 0;
                loadcolumns();
                int width = 0;
                string semname = "";
                string allot = "";
                string consession = "";
                string govt = "";
                string total = "";
                double paid = 0;
                string bal = "";
                string refund = "";
                string excess = "";
                string staffname = "";
                string appno = "";
                chart.ChartAreas[0].AxisX.Title = "Staff";
                chart.ChartAreas[0].AxisY.Title = "Amount";
                chart.ChartAreas[0].AxisX.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisY.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisX.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisY.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisX.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisY.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisX.Interval = 1;
                chart.ChartAreas[0].AxisX.MajorGrid.Enabled = false;
                chart.ChartAreas[0].AxisY.MajorGrid.Enabled = false;
                // chart.Series.Clear();
                DataTable dtchart = new DataTable();
                DataColumn dtcol1 = new DataColumn();
                DataRow drrow = dtchart.NewRow();
                DataView dvhead = new DataView();
                DataView dvex = new DataView();
                Hashtable htcol = new Hashtable();
                Dictionary<int, string> dct = new Dictionary<int, string>();
                dtchart.Columns.Clear();
                dtchart.Columns.Add(dtcol1);
                for (sel = 0; sel < ds.Tables[0].Rows.Count; sel++)
                {
                    staffname = Convert.ToString(ds.Tables[0].Rows[sel]["staff_name"].ToString());
                    DataColumn dtcol = new DataColumn();
                    if (Convert.ToString(staffname) != "" && staffname != null)
                    {
                        dtcol.ColumnName = Convert.ToString(staffname);
                        htcol.Add(Convert.ToString(sel), Convert.ToString(staffname));
                        dtchart.Columns.Add(dtcol);
                    }
                }
                List<string> lsrow = new List<string>();
                if (dtchart.Columns.Count > 0)
                {
                    for (sel = 0; sel < colord.Count; sel++)
                    {
                        drrow = dtchart.NewRow();
                        drrow[0] = ColorderValues(Convert.ToString(colord[sel]));
                        ListItem li = new ListItem(ColorderValues(Convert.ToString(colord[sel])), Convert.ToString(sel));
                        lsrow.Add(Convert.ToString(li));
                        chart.Series.Add(ColorderValues(Convert.ToString(colord[sel])));
                        dtchart.Rows.Add(drrow);
                    }
                }

                if (dtchart.Columns.Count > 0)
                {
                    for (int dtcol = 1; dtcol < dtchart.Columns.Count; dtcol++)
                    {
                        string hname = dtchart.Columns[dtcol].ColumnName;
                        DataTable dtHname = new DataTable();
                        dtHname = ds.Tables[0];
                        dtHname.DefaultView.RowFilter = "staff_name='" + hname + "'";

                        DataView dvHname = dtHname.DefaultView;
                        if (dvHname.Count > 0)
                        {
                            ds.Tables[0].DefaultView.RowFilter = "staff_name='" + Convert.ToString(dvHname[0]["staff_name"]) + "'";
                            dvhead = ds.Tables[0].DefaultView;
                        }
                        if (Convert.ToString(dvhead) != "" && dvhead != null)
                        {
                            semname = Convert.ToString(dvHname[0]["staff_name"]);
                            allot = Convert.ToString(dvhead[0]["Allot"]);
                            consession = Convert.ToString(dvhead[0]["consustion"]);
                            govt = Convert.ToString(dvhead[0]["Government"].ToString());
                            total = Convert.ToString(dvhead[0]["Total"]);
                            appno = Convert.ToString(dvhead[0]["appl_id"]);
                            if (ds.Tables[1].Rows.Count > 0)
                            {
                                ds.Tables[1].DefaultView.RowFilter = "appl_id='" + Convert.ToString(appno) + "'";
                                DataView dvbal = new DataView();
                                dvbal = ds.Tables[1].DefaultView;
                                if (dvbal.Count > 0 && dvbal != null)
                                {
                                    for (int k = 0; k < dvbal.Count; k++)
                                    {
                                        paid += Convert.ToDouble(dvbal[k]["total"]);
                                    }
                                }
                            }
                            if (paid != 0)
                            {
                                bal = Convert.ToString(Convert.ToDouble(total) - Convert.ToDouble(paid));
                            }
                            else
                            {
                                bal = Convert.ToString(total);
                            }
                            refund = Convert.ToString(dvhead[0]["RefundAmount"]);
                            dct.Add(Convert.ToInt32(appno), Convert.ToString(semname));
                            if (ds.Tables[2].Rows.Count > 0)
                            {
                                ds.Tables[2].DefaultView.RowFilter = "appl_id='" + Convert.ToString(appno) + "'";

                                dvex = ds.Tables[2].DefaultView;
                                if (dvex.Count > 0 && dvex.Count != null)
                                {
                                    excess = Convert.ToString(dvex[0]["ExcessAmount"]);
                                }
                            }

                            if (htcol.ContainsValue(semname))
                            {
                                if (lsrow.Contains("Allot"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Allot"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(allot);
                                }
                                if (lsrow.Contains("Concession"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Concession"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(consession);
                                }
                                if (lsrow.Contains("Government"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Government"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(govt);
                                }
                                if (lsrow.Contains("Total"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Total"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(total);
                                }
                                if (lsrow.Contains("Paid"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Paid"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(paid);
                                    paid = 0;
                                }
                                if (lsrow.Contains("Balance"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Balance"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(bal);
                                    bal = "";
                                }
                                if (lsrow.Contains("Refund Amount"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Refund Amount"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(refund);
                                }
                                if (lsrow.Contains("Excess Amount"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Excess Amount"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(excess);
                                }
                            }

                        }
                    }
                    ViewState["table"] = dct;
                }

                if (dtchart.Rows.Count > 0)
                {
                    for (col = 1; col < dtchart.Columns.Count; col++)
                    {
                        for (row = 0; row < dtchart.Rows.Count; row++)
                        {
                            width += 100;
                            chart.Series[row].Points.AddXY(dtchart.Columns[col].ToString(), dtchart.Rows[row][col].ToString());
                            chart.ChartAreas[0].AxisX.LineColor = System.Drawing.Color.Black;
                            chart.ChartAreas[0].AxisY.LineColor = System.Drawing.Color.Black;
                            chart.Series[row].IsValueShownAsLabel = true;
                            chart.Series[row].IsXValueIndexed = true;
                            chart.ChartAreas[0].AxisX.LabelStyle.Angle = -90;
                            chart.ChartAreas[0].AxisX.LabelStyle.Interval = 1;
                        }
                    }
                    pheaderfilter.Visible = true;
                    pcolumnorder.Visible = true;
                    chart.Visible = true;
                    chart.Width = Convert.ToInt32(width);
                    chart.Height = Convert.ToInt32(450);
                    lblchart.Visible = true;
                    lblchart.Text = "Staff-->Chart";
                    lbl_semcell.Text = "";
                    divdept.Visible = false;
                    divdegree.Visible = false;
                    divbatch.Visible = false;
                    ledger.Visible = false;
                    batch.Visible = false;
                    divdegr.Visible = false;
                    divdep.Visible = false;
                    divsema.Visible = false;
                    div7.Visible = false;
                    val1.Visible = false;
                    UpdatePanel1.Visible = false;
                    UpdatePanel4.Visible = false;
                    UpdatePanel5.Visible = false;
                    UpdatePanel6.Visible = false;
                }
            }
            else
            {
                lblchart.Visible = false;
                chart.Visible = false;
                pheaderfilter.Visible = false;
                pcolumnorder.Visible = false;
                lblhed.Text = "";
                imgdiv2.Visible = true;
                lbl_alert.Visible = true;
                lbl_alert.Text = "No Record Found";
            }


        }
        catch { }
    }
    #endregion

    #region others vendor
    private void vendorChartValues(object sender, EventArgs e)
    {
        try
        {
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                int sel = 0;
                int row = 0;
                int col = 0;
                loadcolumns();
                int width = 0;
                string semname = "";
                string allot = "";
                string consession = "";
                string govt = "";
                string total = "";
                double paid = 0;
                string bal = "";
                string refund = "";
                string excess = "";
                string staffname = "";
                string appno = "";
                if (rbothers.Checked == true)
                    chart.ChartAreas[0].AxisX.Title = "Others";
                else
                    chart.ChartAreas[0].AxisX.Title = "Vendor";

                chart.ChartAreas[0].AxisY.Title = "Amount";
                chart.ChartAreas[0].AxisX.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisY.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisX.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisY.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisX.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisY.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisX.Interval = 1;
                chart.ChartAreas[0].AxisX.MajorGrid.Enabled = false;
                chart.ChartAreas[0].AxisY.MajorGrid.Enabled = false;
                //  chart.Series.Clear();
                DataTable dtchart = new DataTable();
                DataColumn dtcol1 = new DataColumn();
                DataRow drrow = dtchart.NewRow();
                DataView dvhead = new DataView();
                DataView dvex = new DataView();
                Hashtable htcol = new Hashtable();
                Dictionary<int, string> dct = new Dictionary<int, string>();
                dtchart.Columns.Clear();
                dtchart.Columns.Add(dtcol1);
                for (sel = 0; sel < ds.Tables[0].Rows.Count; sel++)
                {
                    staffname = Convert.ToString(ds.Tables[0].Rows[sel]["VendorCode"].ToString());
                    DataColumn dtcol = new DataColumn();
                    if (Convert.ToString(staffname) != "" && staffname != null)
                    {
                        dtcol.ColumnName = Convert.ToString(staffname);
                        htcol.Add(Convert.ToString(sel), Convert.ToString(staffname));
                        dct.Add(Convert.ToInt32(sel), Convert.ToString(staffname));
                        dtchart.Columns.Add(dtcol);
                    }
                }
                ViewState["table"] = dct;
                List<string> lsrow = new List<string>();
                if (dtchart.Columns.Count > 0)
                {
                    for (sel = 0; sel < colord.Count; sel++)
                    {
                        drrow = dtchart.NewRow();
                        drrow[0] = ColorderValues(Convert.ToString(colord[sel]));
                        ListItem li = new ListItem(ColorderValues(Convert.ToString(colord[sel])), Convert.ToString(sel));
                        lsrow.Add(Convert.ToString(li));
                        chart.Series.Add(ColorderValues(Convert.ToString(colord[sel])));
                        dtchart.Rows.Add(drrow);
                    }
                }

                if (dtchart.Columns.Count > 0)
                {
                    for (int dtcol = 1; dtcol < dtchart.Columns.Count; dtcol++)
                    {
                        string hname = dtchart.Columns[dtcol].ColumnName;
                        DataTable dtHname = new DataTable();
                        dtHname = ds.Tables[0];
                        dtHname.DefaultView.RowFilter = "VendorCode='" + hname + "'";
                        DataView dvHname = dtHname.DefaultView;
                        if (dvHname.Count > 0)
                        {
                            ds.Tables[0].DefaultView.RowFilter = "VendorCode='" + Convert.ToString(dvHname[0]["VendorCode"]) + "'";
                            dvhead = ds.Tables[0].DefaultView;
                        }
                        if (Convert.ToString(dvhead) != "" && dvhead != null)
                        {
                            semname = Convert.ToString(dvHname[0]["VendorCode"]);
                            allot = Convert.ToString(dvhead[0]["Allot"]);
                            consession = Convert.ToString(dvhead[0]["consustion"]);
                            govt = Convert.ToString(dvhead[0]["Government"].ToString());
                            total = Convert.ToString(dvhead[0]["Total"]);
                            appno = Convert.ToString(dvhead[0]["VendorCode"]);
                            if (ds.Tables[1].Rows.Count > 0)
                            {
                                ds.Tables[1].DefaultView.RowFilter = "VendorCode='" + Convert.ToString(appno) + "'";
                                DataView dvbal = new DataView();
                                dvbal = ds.Tables[1].DefaultView;
                                if (dvbal.Count > 0 && dvbal != null)
                                {
                                    for (int k = 0; k < dvbal.Count; k++)
                                    {
                                        paid += Convert.ToDouble(dvbal[k]["total"]);
                                    }
                                }
                            }
                            if (paid != 0)
                            {
                                bal = Convert.ToString(Convert.ToDouble(total) - Convert.ToDouble(paid));
                            }
                            else
                            {
                                bal = Convert.ToString(total);
                            }
                            refund = Convert.ToString(dvhead[0]["RefundAmount"]);
                            if (ds.Tables[2].Rows.Count > 0)
                            {
                                ds.Tables[2].DefaultView.RowFilter = "VendorCode='" + Convert.ToString(appno) + "'";

                                dvex = ds.Tables[2].DefaultView;
                                if (dvex.Count > 0 && dvex.Count != null)
                                {
                                    excess = Convert.ToString(dvex[0]["ExcessAmount"]);
                                }
                            }

                            if (htcol.ContainsValue(semname))
                            {
                                if (lsrow.Contains("Allot"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Allot"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(allot);
                                }
                                if (lsrow.Contains("Concession"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Concession"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(consession);
                                }
                                if (lsrow.Contains("Government"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Government"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(govt);
                                }
                                if (lsrow.Contains("Total"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Total"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(total);
                                }
                                if (lsrow.Contains("Paid"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Paid"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(paid);
                                    paid = 0;
                                }
                                if (lsrow.Contains("Balance"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Balance"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(bal);
                                    bal = "";
                                }
                                if (lsrow.Contains("Refund Amount"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Refund Amount"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(refund);
                                }
                                if (lsrow.Contains("Excess Amount"))
                                {
                                    int colvalue = Convert.ToInt32(lsrow.IndexOf("Excess Amount"));
                                    dtchart.Rows[colvalue][dtcol] = Convert.ToString(excess);
                                }
                            }

                        }
                    }

                }

                if (dtchart.Rows.Count > 0)
                {
                    for (col = 1; col < dtchart.Columns.Count; col++)
                    {
                        for (row = 0; row < dtchart.Rows.Count; row++)
                        {
                            width += 100;
                            chart.Series[row].Points.AddXY(dtchart.Columns[col].ToString(), dtchart.Rows[row][col].ToString());
                            chart.ChartAreas[0].AxisX.LineColor = System.Drawing.Color.Black;
                            chart.ChartAreas[0].AxisY.LineColor = System.Drawing.Color.Black;

                            chart.Series[row].IsValueShownAsLabel = true;
                            chart.Series[row].IsXValueIndexed = true;

                            chart.ChartAreas[0].AxisX.LabelStyle.Angle = -90;
                            chart.ChartAreas[0].AxisX.LabelStyle.Interval = 1;
                        }
                    }
                    pheaderfilter.Visible = true;
                    pcolumnorder.Visible = true;
                    chart.Visible = true;
                    chart.Width = Convert.ToInt32(width);
                    chart.Height = Convert.ToInt32(400);
                    lblchart.Visible = true;
                    if (rbothers.Checked == true)
                        lblchart.Text = "Others-->Chart";
                    else
                        lblchart.Text = "Vendors-->Chart";
                    lbl_semcell.Text = "";
                    divdept.Visible = false;
                    divdegree.Visible = false;
                    divbatch.Visible = false;
                    ledger.Visible = false;
                    batch.Visible = false;
                    divdegr.Visible = false;
                    divdep.Visible = false;
                    divsema.Visible = false;
                    div7.Visible = false;
                    val1.Visible = false;
                    UpdatePanel1.Visible = false;
                    UpdatePanel4.Visible = false;
                    UpdatePanel5.Visible = false;
                    UpdatePanel6.Visible = false;
                }
            }
            else
            {
                lblchart.Visible = false;
                chart.Visible = false;
                pheaderfilter.Visible = false;
                pcolumnorder.Visible = false;
                lblhed.Text = "";
                imgdiv2.Visible = true;
                lbl_alert.Visible = true;
                lbl_alert.Text = "No Record Found";
            }


        }
        catch { }
    }
    #endregion

    #region Total Chart

    public void totalChartValues()
    {
        try
        {
            #region chart
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                loadcolumns();
                string headername = "";
                string allot = "";
                string consession = "";
                string govt = "";
                string total = "";
                string paid = "";
                string bal = "";
                string refund = "";
                string excess = "";
                int width = 0;
                DataTable dtchart = new DataTable();
                Hashtable htcol = new Hashtable();
                DataColumn dtcol1 = new DataColumn();
                Dictionary<int, string> dct = new Dictionary<int, string>();
                dtchart.Columns.Clear();
                chart.ChartAreas[0].AxisX.Title = "Total";
                chart.ChartAreas[0].AxisY.Title = "Amount";
                chart.ChartAreas[0].AxisX.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisY.TitleForeColor = Color.Red;
                chart.ChartAreas[0].AxisX.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisY.TitleAlignment = StringAlignment.Center;
                chart.ChartAreas[0].AxisX.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.TitleFont = new System.Drawing.Font("Book Antiqua", 10, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisX.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisY.LabelStyle.Font = new Font("Book Antiqua", 15, FontStyle.Bold);
                chart.ChartAreas[0].AxisY.LabelStyle.ForeColor = Color.Blue;
                chart.ChartAreas[0].AxisX.Interval = 1;
                chart.ChartAreas[0].AxisX.MajorGrid.Enabled = false;
                chart.ChartAreas[0].AxisY.MajorGrid.Enabled = false;

                dtchart.Columns.Clear();
                dtchart.Columns.Add(dtcol1);
                dtchart.Columns.Add("Total Values");
                //dtchart.Columns.Add("Allot");
                //dtchart.Columns.Add("Consession");
                //dtchart.Columns.Add("Scholarship");
                //dtchart.Columns.Add("Total");
                //dtchart.Columns.Add("Paid");
                //dtchart.Columns.Add("balance");
                //chart.Series.Add("Overall");
                //DataRow rowarr = dtchart.NewRow();
                //rowarr[0] = Convert.ToString("Arrear");
                //dtchart.Rows.Add(rowarr);
                DataRow drrow = dtchart.NewRow();
                drrow[0] = Convert.ToString("Allot");
                dtchart.Rows.Add(drrow);
                DataRow drrow1 = dtchart.NewRow();
                drrow1[0] = Convert.ToString("Consession");
                dtchart.Rows.Add(drrow1);
                DataRow drrow2 = dtchart.NewRow();
                drrow2[0] = Convert.ToString("Scholarship");
                dtchart.Rows.Add(drrow2);
                DataRow drrow3 = dtchart.NewRow();
                drrow3[0] = Convert.ToString("Total");
                dtchart.Rows.Add(drrow3);
                DataRow drrow4 = dtchart.NewRow();
                drrow4[0] = Convert.ToString("Paid");
                dtchart.Rows.Add(drrow4);
                DataRow drrow5 = dtchart.NewRow();
                drrow5[0] = Convert.ToString("balance");
                dtchart.Rows.Add(drrow5);

                chart.Series.Add("Allot");
                chart.Series.Add("Consession");
                chart.Series.Add("Scholarship");
                chart.Series.Add("Total");
                chart.Series.Add("Paid");
                chart.Series.Add("balance");

                if (dtchart.Columns.Count > 0)
                {
                    for (int dtcol = 0; dtcol < ds.Tables[0].Rows.Count; dtcol++)
                    {
                        allot = Convert.ToString(ds.Tables[0].Rows[dtcol]["Allot"]);
                        consession = Convert.ToString(ds.Tables[0].Rows[dtcol]["Consustion"]);
                        govt = Convert.ToString(ds.Tables[0].Rows[dtcol]["Government"]);
                        total = Convert.ToString(ds.Tables[0].Rows[dtcol]["Total"]);
                        paid = Convert.ToString(ds.Tables[0].Rows[dtcol]["Paid"]);
                        bal = Convert.ToString(ds.Tables[0].Rows[dtcol]["Balance"]);
                        dtchart.Rows[0]["Total Values"] = allot;
                        dtchart.Rows[1]["Total Values"] = consession;
                        dtchart.Rows[2]["Total Values"] = govt;
                        dtchart.Rows[3]["Total Values"] = total;
                        dtchart.Rows[4]["Total Values"] = paid;
                        dtchart.Rows[5]["Total Values"] = bal;

                    }
                }
                if (dtchart.Rows.Count > 0)
                {
                    for (int col = 1; col < dtchart.Columns.Count; col++)
                    {
                        for (int row = 0; row < dtchart.Rows.Count; row++)
                        {
                            width += 180;
                            chart.Series[row].Points.AddXY(dtchart.Columns[col].ToString(), dtchart.Rows[row][col].ToString());
                            chart.ChartAreas[0].AxisX.LineColor = System.Drawing.Color.Black;
                            chart.ChartAreas[0].AxisY.LineColor = System.Drawing.Color.Black;
                            chart.Series[row].ChartType = SeriesChartType.Column;
                            chart.Series[row].IsValueShownAsLabel = true;
                            chart.Series[row].IsXValueIndexed = true;
                            chart.ChartAreas[0].AxisX.LabelStyle.Angle = -90;
                            chart.ChartAreas[0].AxisX.LabelStyle.Interval = 1;
                        }
                    }
                    pheaderfilter.Visible = true;
                    pcolumnorder.Visible = true;
                    chart.Visible = true;
                    chart.Width = Convert.ToInt32(width);
                    // chart.Width = 1000;
                    chart.Height = Convert.ToInt32(500);
                    lblchart.Visible = true;
                    lblchart.Text = "Header-->Chart";
                    lbl_semcell.Text = "";
                    divdept.Visible = false;
                    divdegree.Visible = false;
                    divbatch.Visible = false;
                    ledger.Visible = false;
                    batch.Visible = false;
                    divdegr.Visible = false;
                    divdep.Visible = false;
                    divsema.Visible = false;
                    div7.Visible = false;
                    val1.Visible = false;
                    UpdatePanel1.Visible = false;
                    UpdatePanel4.Visible = false;
                    UpdatePanel5.Visible = false;
                    UpdatePanel6.Visible = false;
                }
            }
            else
            {
                lblchart.Visible = false;
                chart.Visible = false;
                pheaderfilter.Visible = false;
                pcolumnorder.Visible = false;
                lblhed.Text = "";
                imgdiv2.Visible = true;
                lbl_alert.Visible = true;
                lbl_alert.Text = "No Record Found";
            }

            #endregion
        }
        catch { }
    }

    #endregion

    #region chart cell click

    //#region Chart Cell click
    //protected void chart_OnClick(object sender, ImageMapEventArgs e)
    //{
    //    string commonid = "";
    //    try
    //    {
    //        string value = e.PostBackValue;
    //        Dictionary<int, string> newdct = new Dictionary<int, string>();
    //        if (ViewState["table"] != null)
    //        {
    //            newdct = (Dictionary<int, string>)ViewState["table"];
    //            foreach (KeyValuePair<int, string> pair in newdct)
    //            {
    //                if (pair.Value == value)
    //                {
    //                    if (rb_sem.Checked == true)
    //                    {
    //                        commonid = d2.GetFunction("select TextCode from TextValTable where textval like'" + value + "%'");
    //                    }
    //                    else if (rb_others.Checked == true)
    //                    {
    //                        // if (rbstaff.Checked == true)
    //                        //{
    //                        //                             string staffappno = d2.GetFunction("select sa.appl_id  from staffmaster s,staff_appl_master sa where s.appl_no =sa.appl_no and s.staff_code ='" + applno + "'");
    //                        //}
    //                        if (rbvendor.Checked == true)
    //                        {
    //                            commonid = d2.GetFunction(" select VendorContactPK from CO_VendorMaster v,IM_VendorContactMaster vc where v.VendorPK=vc.VendorFK and v.VendorType='1' and VendorName='" + value + "' ");
    //                        }
    //                        else if (rbothers.Checked == true)
    //                        {
    //                            commonid = d2.GetFunction("select VendorPK from CO_VendorMaster where VendorName='" + value + "' and VendorType='-5'");
    //                        }
    //                    }
    //                    else
    //                    {
    //                        commonid = Convert.ToString(pair.Key.ToString());
    //                        continue;
    //                    }
    //                }
    //            }
    //        }

    //        if (rb_header.Checked == true)
    //        {
    //            headerChartCellClickValue(commonid);
    //        }
    //        else if (rb_ledger.Checked == true)
    //        {
    //            ledgerChartCellClickvalue(commonid);
    //        }
    //        else if (rb_batch.Checked == true)
    //        {
    //            batchChartCellClickvalue(commonid);
    //        }
    //        else if (rb_degree.Checked == true)
    //        {
    //            degreeChartCellClickvalue(commonid);
    //        }
    //        else if (rb_dept.Checked == true)
    //        {
    //            deptChartCellClickvalue(commonid);
    //        }
    //        else if (rb_sem.Checked == true)
    //        {
    //            semChartCellClickvalue(commonid);
    //        }
    //        else if (rb_studentwise.Checked == true)
    //        {
    //            studChartCellClickValue(commonid);
    //        }
    //        else if (rb_others.Checked == true)
    //        {
    //            othersChartCellClickValue(commonid);

    //        }
    //    }


    //    catch { }


    //}
    //#endregion

    //#region  Chart all Cellclick value
    //private void headerChartCellClickValue(string id)
    //{
    //    try
    //    {
    //        int headerid = Convert.ToInt32(id);
    //        string selqry = "";
    //        if (headerid != 0)
    //        {
    //            selqry = "SELECT A.HeaderFK,SUM(FeeAmount) as Allot ,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM  FT_FeeAllot A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.App_No =a.App_No and p.app_no =r.App_No  AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' ";
    //            if (headerid != 0)
    //            {
    //                selqry = selqry + " and HeaderFK in ('" + headerid + "')";
    //            }
    //            selqry = selqry + "GROUP BY A.HeaderFK";
    //            selqry = selqry + " SELECT A.HeaderFK,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.App_No =a.App_No and r.App_No = p.app_no  AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and r.college_code ='" + collegecode1 + "' ";
    //            if (headerid != 0)
    //            {
    //                selqry = selqry + " and HeaderFK in ('" + headerid + "')";
    //            }
    //            selqry = selqry + "GROUP BY A.HeaderFK,PayMode";
    //            selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Registration r WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no and r.App_No =a.App_No and r.App_No =p.app_no and em.App_No = a.App_No   AND P.IsConfirm = 1  AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "'";
    //            if (headerid != 0)
    //            {
    //                selqry = selqry + " and Ex.HeaderFK in('" + headerid + "')";
    //            }
    //            selqry = selqry + "GROUP BY A.HeaderFK";
    //            selqry = selqry + "  select headerfk,SUM(debit)as Paid from FT_FinDailyTransaction d,Registration r where d.App_No = r.App_No and r.college_code ='" + collegecode1 + "'  and HeaderFK in ('" + headerid + "')   group by HeaderFK ";

    //            selqry = selqry + "  select HeaderName,headerpk from FM_HeaderMaster where CollegeCode='" + collegecode1 + "'";
    //            ds.Clear();
    //            ds = d2.select_method_wo_parameter(selqry, "Text");
    //            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
    //            {

    //            }
    //        }
    //        headervalues();
    //    }
    //    catch { }
    //}

    //private void ledgerChartCellClickvalue(string id)
    //{
    //    try
    //    {
    //        string selqry = "";
    //        int ledgerid = Convert.ToInt32(id);
    //        if (ledgerid != 0)
    //        {
    //            selqry = "  SELECT A.HeaderFK,LedgerFK, SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.App_No=p.app_no AND P.IsConfirm = 1 AND Admission_Status = 1   and P.college_code ='" + collegecode1 + "'";

    //            //if (headervalue != "")
    //            //{
    //            //    selqry = selqry + " and a.HeaderFK in ('" + headervalue + "')";
    //            //}
    //            if (ledgerid != 0)
    //            {
    //                selqry = selqry + " and LedgerFK in('" + ledgerid + "')";
    //            }


    //            selqry = selqry + "GROUP BY A.HeaderFK,LedgerFK";
    //            selqry = selqry + "  SELECT PayMode,LedgerFK,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.app_no=p.app_no  AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and r.college_code ='" + collegecode1 + "'";

    //            //if (headervalue != "")
    //            //{
    //            //    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
    //            //}
    //            if (ledgerid != 0)
    //            {
    //                selqry = selqry + " and LedgerFK in('" + ledgerid + "')";
    //            }

    //            selqry = selqry + "GROUP BY A.HeaderFK,PayMode,LedgerFK";
    //            selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,A.LedgerFK from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no and em.App_No = a.App_No   AND P.IsConfirm = 1  AND Admission_Status = 1 and P.college_code ='" + collegecode1 + "'";

    //            //if (headervalue != "")
    //            //{
    //            //    selqry = selqry + " and Ex.HeaderFK in('" + headervalue + "')";
    //            //}
    //            if (ledgerid != 0)
    //            {
    //                selqry = selqry + "  and Ex.LedgerFK in('" + ledgerid + "')";
    //            }

    //            selqry = selqry + "GROUP BY A.HeaderFK ,a.LedgerFK";
    //            selqry = selqry + "  select HeaderFK,LedgerPK,HeaderName,LedgerName from FM_HeaderMaster h,FM_LedgerMaster l where l.HeaderFK =h.HeaderPK and h.CollegeCode ='" + collegecode1 + "'";

    //            ds.Clear();
    //            ds = d2.select_method_wo_parameter(selqry, "Text");
    //        }
    //        ledgervalues();
    //    }
    //    catch { }

    //}

    //private void batchChartCellClickvalue(string id)
    //{
    //    try
    //    {
    //        string selqry = "";
    //        string batchyr = id;
    //        if (batchyr != "")
    //        {
    //            selqry = selqry + " SELECT p.batch_year,SUM(FeeAmount)as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.App_No=P.App_No AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "'";
    //            if (batchyr != "")
    //            {
    //                selqry = selqry + " and p.Batch_Year in ('" + batchyr + "')";
    //            }

    //            //if (headervalue != "")
    //            //{
    //            //    selqry = selqry + " and a.HeaderFK in ('" + headervalue + "')";
    //            //}
    //            //if (ledgervalue != "")
    //            //{
    //            //    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
    //            //}

    //            selqry = selqry + "GROUP BY p.batch_year ";
    //            selqry = selqry + "SELECT p.batch_year ,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.App_No=p.app_no  AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and r.college_code ='" + collegecode1 + "'";
    //            if (batchyr != "")
    //            {
    //                selqry = selqry + " and p.Batch_Year in ('" + batchyr + "')";
    //            }

    //            //if (headervalue != "")
    //            //{
    //            //    selqry = selqry + " and HeaderFK in ('" + headervalue + "')";
    //            //}
    //            //if (ledgervalue != "")
    //            //{
    //            //    selqry = selqry + " and LedgerFK in('" + ledgervalue + "')";
    //            //}

    //            selqry = selqry + "GROUP BY p.batch_year,PayMode";
    //            selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,p.Batch_Year from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Registration r WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no and em.App_No = a.App_No and r.App_No=p.app_no AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "'";
    //            if (batchyr != "")
    //            {
    //                selqry = selqry + " and p.Batch_Year in ('" + batchyr + "')";
    //            }

    //            //if (headervalue != "")
    //            //{
    //            //    selqry = selqry + " and Ex.HeaderFK in('" + headervalue + "')";
    //            //}
    //            //if (ledgervalue != "")
    //            //{
    //            //    selqry = selqry + "  and Ex.LedgerFK in('" + ledgervalue + "')";
    //            //}               
    //            selqry = selqry + "GROUP BY A.HeaderFK ,p.Batch_Year";
    //            ds.Clear();
    //            ds = d2.select_method_wo_parameter(selqry, "Text");
    //        }
    //        batchvalues();
    //    }
    //    catch { }
    //}

    //private void degreeChartCellClickvalue(string id)
    //{
    //    try
    //    {
    //        string selqry = "";
    //        string courseid = id;
    //        if (courseid != "")
    //        {
    //            selqry = selqry + "  SELECT Course_Name DegreeName,G.Course_Id,SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Degree G,Course C WHERE A.App_No = P.app_no  and g.Course_Id = c.Course_Id and g.college_code = c.college_code  and p.degree_code = g.degree_code  AND P.IsConfirm = 1 AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "'";
    //            if (courseid != "")
    //            {
    //                selqry = selqry + " and c.Course_Id in ('" + courseid + "')";
    //            }
    //            //if (deptdegcode != "")
    //            //{
    //            //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
    //            //}


    //            selqry = selqry + "GROUP BY G.Course_Id,Course_Name  ";
    //            selqry = selqry + "  SELECT Course_Name,G.Course_Id,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code  AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and g.college_code ='" + collegecode1 + "'";
    //            if (courseid != "")
    //            {
    //                selqry = selqry + " and c.Course_Id in ('" + courseid + "')";
    //            }
    //            //if (deptdegcode != "")
    //            //{
    //            //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
    //            //}


    //            selqry = selqry + "GROUP BY G.Course_Id,Course_Name,PayMode ";

    //            selqry = selqry + "  select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,a.LedgerFK,p.Batch_Year,C.Course_Id from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Degree G,Course C WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no  and g.Course_Id = c.Course_Id and g.college_code = c.college_code  and em.App_No = a.App_No   AND P.IsConfirm = 1  AND Admission_Status = 1 AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "'";

    //            if (courseid != "")
    //            {
    //                selqry = selqry + "  and  g.Degree_Code in ('" + courseid + "')";
    //            }

    //            selqry = selqry + "GROUP BY A.HeaderFK ,A.LedgerFK,p.Batch_Year ,C.Course_Id";
    //            ds.Clear();
    //            ds = d2.select_method_wo_parameter(selqry, "Text");
    //        }
    //        degreevalues();
    //    }
    //    catch { }
    //}

    //private void deptChartCellClickvalue(string id)
    //{
    //    try
    //    {
    //        string selqry = "";
    //        string deptcode = id;
    //        if (deptcode != "")
    //        {
    //            selqry = selqry + "    SELECT r.degree_code , SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Registration r,Degree d,Course C,TextValTable T WHERE A.App_No = P.app_no and r.App_No=a.App_No and d.Degree_Code =r.degree_code and d.Course_Id =c.Course_Id and r.App_No =p.app_no and a.FeeCategory=t.TextCode   AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "'";

    //            if (deptcode != "")
    //            {
    //                selqry = selqry + "  and  r.Degree_Code in ('" + deptcode + "')";
    //            }

    //            selqry = selqry + "GROUP BY r.degree_code ";
    //            selqry = selqry + " SELECT r.degree_code,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Registration r,Degree d,Course C ,TextValTable T WHERE A.App_No = P.app_no and r.App_No=p.app_no and r.App_No=a.App_No and d.Degree_Code =r.degree_code and d.Course_Id =c.Course_Id  and a.FeeCategory=t.TextCode  AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and r.college_code ='" + collegecode1 + "' ";
    //            if (deptcode != "")
    //            {
    //                selqry = selqry + "  and  r.Degree_Code in ('" + deptcode + "')";
    //            }

    //            selqry = selqry + "GROUP BY PayMode,r.degree_code ";

    //            selqry = selqry + " SELECT  r.degree_code,SUM(FeeAmount) as Allot ,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance FROM FT_FeeAllot A,applyn  r,Registration P where  a.App_No = r.App_No and p.App_No =r.app_no and p.App_No = a.App_No  and isconfirm ='1' and admission_status ='1' ";
    //            if (deptcode != "")
    //            {
    //                selqry = selqry + "  and  P.Degree_Code in ('" + deptcode + "')";
    //            }

    //            if (rbdepthead.Checked == true)
    //            {
    //                selqry = selqry + " GROUP BY  r.degree_code ";
    //            }
    //            else
    //            {
    //                selqry = selqry + " GROUP BY r.degree_code ";
    //            }

    //            selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,TextVal,A.HeaderFK,A.LedgerfK,r.Degree_Code from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Registration r,Degree d,Course C ,TextValTable T WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no and em.App_No = a.App_No and d.Degree_Code =r.degree_code and c.Course_Id =d.Course_Id and a.FeeCategory=t.TextCode   AND P.IsConfirm = 1  AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' ";
    //            if (deptcode != "")
    //            {
    //                selqry = selqry + "  and  r.Degree_Code in ('" + deptcode + "')";
    //            }

    //            selqry = selqry + " GROUP BY A.HeaderFK,A.LedgerfK,r.Degree_Code,TextVal";
    //            selqry = selqry + " select d.Degree_Code,c.Course_Name,dt.Dept_Name from Degree d,Department dt,Course c where d.Dept_Code =dt.Dept_Code and d.Course_Id =c.Course_Id";
    //            if (ddlstream.Enabled == true)
    //            {
    //                selqry = selqry + " and c.type ='" + ddlstream.SelectedItem.Text + "'";
    //            }
    //            ds.Clear();
    //            ds = d2.select_method_wo_parameter(selqry, "Text");
    //        }
    //        deptvalues();
    //    }
    //    catch { }

    //}

    //private void semChartCellClickvalue(string id)
    //{
    //    try
    //    {
    //        string selqry = "";
    //        string sem = id;
    //        if (sem != "")
    //        {
    //            selqry = selqry + " SELECT TextVal,SUM(FeeAmount) as allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,TextValTable T WHERE A.App_No = P.app_no  AND P.IsConfirm = 1 AND Admission_Status = 1 AND A.FeeCategory = T.TextCode and P.college_code ='" + collegecode1 + "'";
    //            if (sem != "")
    //            {
    //                selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
    //            }
    //            selqry = selqry + " GROUP BY TextVal ";
    //            selqry = selqry + " SELECT TextVal,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Registration R,TextValTable T WHERE A.App_No = P.app_no and r.App_No=A.App_No and r.App_No=p.app_no  AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' AND A.FeeCategory = T.TextCode and r.college_code ='" + collegecode1 + "'";
    //            if (sem != "")
    //            {
    //                selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
    //            }
    //            selqry = selqry + "GROUP BY TextVal,PayMode";
    //            selqry = selqry + "  select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,A.LedgerFK,p.Batch_Year,A.FeeCategory from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Registration r WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no and r.App_No=p.app_no and r.App_No=A.App_No and em.App_No = a.App_No   AND P.IsConfirm = 1   AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "'";
    //            if (sem != "")
    //            {
    //                selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
    //            }
    //            selqry = selqry + " GROUP BY A.HeaderFK ,A.LedgerfK,p.Batch_Year ,A.FeeCategory";
    //            ds.Clear();
    //            ds = d2.select_method_wo_parameter(selqry, "Text");
    //        }
    //        semvalues();

    //    }
    //    catch { }
    //}

    //private void studChartCellClickValue(string id)
    //{
    //    try
    //    {
    //        string selqry = "";
    //        string appno = id;
    //        if (appno != "")
    //        {
    //            selqry = selqry + " SELECT R.app_no,A.FeeCategory,Roll_No,Reg_No,Roll_Admit,R.Stud_Name,r.Degree_Code, SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Registration R WHERE A.App_No = P.app_no AND P.app_no = R.App_No  AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "'";
    //            if (appno != "")
    //            {
    //                selqry = selqry + " and r.App_No ='" + appno + "'";
    //            }


    //            selqry = selqry + "GROUP BY R.app_no,Roll_No,Reg_No,Roll_Admit,R.Stud_Name,r.Degree_Code,A.FeeCategory";
    //            if (rb_paid.Checked == true)
    //            {
    //                selqry = selqry + " having SUM(BalAmount)=0";
    //            }
    //            if (tobepaid.Checked == true)
    //            {
    //                selqry = selqry + " having SUM(BalAmount    )>0";
    //            }
    //            selqry = selqry + " order by Reg_No";
    //            selqry = selqry + " SELECT  PayMode,A.App_No,SUM(Debit) as total,A.FeeCategory FROM FT_FinDailyTransaction A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.App_No =p.app_no and A.App_No =r.App_No  AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and r.college_code ='" + collegecode1 + "' ";
    //            if (appno != "")
    //            {
    //                selqry = selqry + " and r.App_No ='" + appno + "'";
    //            }

    //            selqry = selqry + "GROUP BY A.App_No,PayMode,A.FeeCategory ";
    //            string headerorledger = "";
    //            if (rbstudhed.Checked == true)
    //            {
    //                selqry = selqry + " ,P.app_no";
    //                headerorledger = "HeaderFK";
    //            }
    //            else
    //            {
    //                selqry = selqry + " , P.app_no";
    //                headerorledger = "LedgerFK";
    //            }
    //            selqry = selqry + " SELECT a.App_No, " + headerorledger + " as headerorledger,FeeCategory,SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance FROM FT_FeeAllot A,applyn  r,Registration P where  a.App_No = r.App_No and p.App_No =r.app_no and p.App_No = a.App_No  and isconfirm ='1' and admission_status ='1'  ";
    //            if (appno != "")
    //            {
    //                selqry = selqry + " and P.App_No ='" + appno + "'";
    //            }
    //            if (rbstudhed.Checked == true)
    //            {
    //                selqry = selqry + " GROUP BY a.app_no,HeaderFK,FeeCategory";
    //            }
    //            else
    //            {
    //                selqry = selqry + " GROUP BY a.app_no,LedgerFK,FeeCategory";
    //            }

    //            selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,p.Batch_Year,A.FeeCategory,p.App_No from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Registration r WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no and em.App_No = a.App_No and r.App_No =P.app_no and r.App_No =A.App_No and r.App_No =em.App_No  AND P.IsConfirm = 1  AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "'";
    //            if (appno != "")
    //            {
    //                selqry = selqry + " and r.App_No ='" + appno + "'";
    //            }
    //            selqry = selqry + " GROUP BY p.Batch_Year ,A.FeeCategory ,p.App_No";

    //            selqry = selqry + " select d.Degree_Code,(c.Course_Name +'-'+ dt.Dept_Name) as degreename from Degree d,Department dt,Course c where d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and d.college_code ='" + collegecode1 + "'";
    //            selqry = selqry + " select TextCode,TextVal  from TextValTable where TextCriteria ='FEECA' and college_code ='" + collegecode1 + "'";
    //            ds.Clear();
    //            ds = d2.select_method_wo_parameter(selqry, "Text");
    //        }
    //        studvalues();
    //    }
    //    catch { }
    //}

    //private void othersChartCellClickValue(string id)
    //{
    //    try
    //    {
    //        string selqry = "";
    //        string commonid = id;
    //        if (commonid != "")
    //        {
    //            if (rbstaff.Checked == true)
    //            {
    //                selqry = " SELECT p.appl_id,r.staff_code,r.staff_name,p.Dept_Code, SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,staff_appl_master P,staffmaster R WHERE p.appl_no =r.appl_no and a.App_No =p.appl_id and r.college_code ='" + collegecode1 + "'";
    //                if (commonid != "")
    //                {
    //                    selqry = selqry + "  and  p.appl_id in ('" + commonid + "')";
    //                }
    //                selqry = selqry + "GROUP BY p.appl_id,r.staff_code,r.staff_name,p.Dept_Code  order by p.appl_id";
    //                //paymode
    //                selqry = selqry + "  SELECT  PayMode,p.appl_id,SUM(Debit) as total  ,HeaderFK as HeaderandLedger FROM FT_FinDailyTransaction A,staff_appl_master P,staffmaster R  WHERE p.appl_no=r.appl_no and a.App_No=p.appl_id  and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and r.college_code ='" + collegecode1 + "'";
    //                if (commonid != "")
    //                {
    //                    selqry = selqry + "  and  p.appl_id in ('" + commonid + "')";
    //                }
    //                selqry = selqry + "GROUP BY PayMode,HeaderFK ,p.appl_id";

    //                //excess
    //                selqry = selqry + "  select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,A.LedgerFK,p.appl_id from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,staff_appl_master P,staffmaster r WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.appl_id and em.App_No = a.App_No and p.appl_no=r.appl_no and r.college_code ='" + collegecode1 + "'";
    //                if (commonid != "")
    //                {
    //                    selqry = selqry + "  and  p.appl_id in ('" + commonid + "')";
    //                }

    //                selqry = selqry + "GROUP BY A.HeaderFK ,A.LedgerFK ,p.appl_id";
    //                //dept
    //                selqry = selqry + " select d.Dept_Code,(c.Course_Name +'-'+ dt.Dept_Name) as degreename from Degree d,Department dt,Course c where d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and d.college_code ='13'";
    //                selqry = selqry + "select TextCode,TextVal  from TextValTable where TextCriteria ='FEECA' and college_code ='13'";
    //            }
    //            else if (rbvendor.Checked == true)
    //            {
    //                selqry = " SELECT p.VendorCode,p.VendorName, SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,CO_VendorMaster P WHERE  a.App_No =p.VendorPK ";
    //                if (commonid != "")
    //                {
    //                    selqry = selqry + " and  p.VendorPK in ('" + commonid + "')";
    //                }
    //                //VendorContactPK

    //                selqry = selqry + " and p.VendorType='1' and MemType=3 GROUP BY p.VendorCode,p.VendorName order by p.VendorCode";
    //                //paymode
    //                selqry = selqry + "  SELECT  PayMode,p.VendorCode,SUM(Debit) as total ,HeaderFK as HeaderandLedger FROM FT_FinDailyTransaction A,CO_VendorMaster P WHERE  a.App_No=p.VendorPK  and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' ";
    //                if (commonid != "")
    //                {
    //                    selqry = selqry + " and  p.VendorPK in ('" + commonid + "')";
    //                }

    //                selqry = selqry + " and p.VendorType='1' and MemType=3 GROUP BY PayMode ,HeaderFK ,p.VendorCode";
    //                //excess
    //                selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,p.VendorCode from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,CO_VendorMaster P WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.VendorPK and em.App_No = a.App_No";
    //                if (commonid != "")
    //                {
    //                    selqry = selqry + " and  p.VendorPK in ('" + commonid + "')";
    //                }

    //                selqry = selqry + " and p.VendorType='1' and a.MemType=3 GROUP BY p.VendorCode";

    //            }
    //            else if (rbothers.Checked == true)
    //            {
    //                selqry = " SELECT p.VendorCode,p.VendorName, SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,CO_VendorMaster P WHERE  a.App_No =p.VendorPK ";
    //                if (commonid != "")
    //                {
    //                    selqry = selqry + " and  p.VendorPK in ('" + commonid + "')";
    //                }
    //                selqry = selqry + " and p.VendorType='-5' GROUP BY p.VendorCode,p.VendorName order by p.VendorCode";
    //                //paymode
    //                selqry = selqry + "  SELECT  PayMode,p.VendorCode,SUM(Debit) as total ,HeaderFK as HeaderandLedger FROM FT_FinDailyTransaction A,CO_VendorMaster P WHERE  a.App_No=p.VendorPK  and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' ";
    //                if (commonid != "")
    //                {
    //                    selqry = selqry + " and  p.VendorPK in ('" + commonid + "')";
    //                }
    //                selqry = selqry + " and p.VendorType='-5' and memtype=4 GROUP BY PayMode  ,HeaderFK ,p.VendorCode";
    //                //excess
    //                selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,p.VendorCode from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,CO_VendorMaster P WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.VendorPK and em.App_No = a.App_No  ";
    //                if (commonid != "")
    //                {
    //                    selqry = selqry + " and  p.VendorPK in ('" + commonid + "')";
    //                }
    //                selqry = selqry + " and p.VendorType='-5' GROUP BY p.VendorCode";
    //                //sem
    //                selqry = selqry + " select TextCode,TextVal  from TextValTable where TextCriteria ='FEECA' and college_code ='13'";
    //            }
    //            ds.Clear();
    //            ds = d2.select_method_wo_parameter(selqry, "Text");
    //        }
    //        othersvalues();
    //    }
    //    catch { }
    //}
    //#endregion

    #endregion

    private void columnord()
    {
        if (colord.Count == 0)
        {
            for (int sel = 0; sel < cblcolumnorder.Items.Count; sel++)
            {
                cblcolumnorder.Items[sel].Selected = true;
            }
        }
    }


    #endregion

    #region allcellclicks

    #region values
    protected void FpSpread1_OnCellClick(object sender, EventArgs e)
    {
        try
        { ledgercellclik = true; }
        catch
        { }
    }
    protected void FpSpread1_Selectedindexchanged(object sender, EventArgs e)
    {
        try
        {
            if (rb_header.Checked == true)
            { headercellclick(sender, e); }
        }
        catch { }

    }
    protected void fpledger_OnCellClick(object sender, EventArgs e)
    {
        try
        { batchcellclick = true; }
        catch
        { }
    }
    protected void fpledger_Selectedindexchanged(object sender, EventArgs e)
    {
        try
        { ledgercellclick(sender, e); }
        catch
        { }
    }
    protected void fpbatch_OnCellClick(object sender, EventArgs e)
    {
        try
        { degreecellclick = true; }
        catch
        { }
    }
    protected void fpbatch_Selectedindexchanged(object sender, EventArgs e)
    {
        try
        { batchcellclicks(sender, e); }
        catch
        { }
    }
    protected void fpdegree_OnCellClick(object sender, EventArgs e)
    {
        try
        { deptcellclick = true; }
        catch
        { }
    }
    protected void fpdegree_Selectedindexchanged(object sender, EventArgs e)
    {
        try
        { degreecellclicks(sender, e); }
        catch { }
    }
    protected void fpdept_OnCellClick(object sender, EventArgs e)
    {
        try
        { semcellclick = true; }
        catch
        { }
    }
    protected void fpdept_Selectedindexchanged(object sender, EventArgs e)
    {
        try
        { deptcellclicks(sender, e); }
        catch { }
    }
    protected void fpsem_OnCellClick(object sender, EventArgs e)
    {
        try
        { studcellclick = true; }
        catch
        { }

    }
    protected void fpsem_Selectedindexchanged(object sender, EventArgs e)
    {
        try
        { semcellclicks(sender, e); }
        catch
        { }
    }
    #endregion

    #region cellclickmethods

    #region header
    public void headercellclick(object sender, EventArgs e)
    {
        try
        {
            if (ledgercellclik == true)
            {
                #region getvalue
                string batch1 = "";
                string degcourseid = "";
                string deptdegcode = "";
                string sem = "";
                string sec = "";
                string stud = "";
                string seatype = "";
                string studtype = "";
                string paid = "";
                string ledgercode = "";
                string allot = "";
                string consession = "";
                string Finyearvalue = "";
                DataView dvhead = new DataView();
                batch.Visible = false;
                divdegr.Visible = false;
                divdep.Visible = false;
                divsema.Visible = false;
                div7.Visible = false;

                batch1 = Convert.ToString(getCblSelectedValue(cbl_batch));
                degcourseid = Convert.ToString(getCblSelectedValue(cbl_degree));
                deptdegcode = Convert.ToString(getCblSelectedValue(cbl_dept));
                sem = Convert.ToString(getCblSelectedValue(cbl_sem));
                sec = Convert.ToString(getCblSelectedValue(cbl_sect));
                stud = Convert.ToString(getCblSelectedValue(cbl_stud));
                seatype = Convert.ToString(getCblSelectedValue(cbl_seat));
                studtype = Convert.ToString(getCblSelectedValue(cbl_studtype));
                paid = Convert.ToString(getCblSelectedValue(chkl_paid));
                // headervalue = Convert.ToString(getCblSelectedValue(chkl_studhed));
                ledgercode = Convert.ToString(getCblSelectedValue(chkl_studled));
                Finyearvalue = Convert.ToString(getCblSelectedValue(chklsfyear));


                string fromdate = "";
                string todate = "";
                int datewise = 0;
                if (chk_datewise.Checked == true)
                {
                    datewise = 1;
                    if (datewise == 1)
                    {
                        fromdate = txt_fromdate.Text;
                        todate = txt_todate.Text;
                        if (fromdate != "" && todate != "")
                        {
                            string[] frdate = fromdate.Split('/');
                            if (frdate.Length == 3)
                            {
                                fromdate = frdate[1].ToString() + "/" + frdate[0].ToString() + "/" + frdate[2].ToString();
                            }
                            string[] tdate = todate.Split('/');
                            if (tdate.Length == 3)
                            {
                                todate = tdate[1].ToString() + "/" + tdate[0].ToString() + "/" + tdate[2].ToString();
                            }
                        }
                    }
                }

                lbl_bat.Visible = false;
                lbl_bat.Text = "";
                lbl_degr.Visible = false;
                lbl_degr.Text = "";
                lbl_dep.Visible = false;
                lbl_dep.Text = "";
                divbatch.Visible = false;
                fpbatch.Visible = false;
                divdegree.Visible = false;
                divdept.Visible = false;
                lbl_sem.Visible = false; ;
                lbl_sem.Text = "";
                divsem.Visible = false;
                //pnl_batchcolorder.Visible = false;
                //pnl_batcolorder.Visible = false;
                //pnl_degcolorder.Visible = false;
                //pnl_degreecolorder.Visible = false;
                //pnl_deptcolord.Visible = false;
                //pnl_deptcolorder.Visible = false;
                //pnl_semcolord.Visible = false;
                //pnl_semcolorder.Visible = false;
                //pnl_studcolord.Visible = false;
                //pnl_studcolorder.Visible = false;
                divstudcell.Visible = false;
                fpstudcell.Visible = false;
                lbl_semcell.Text = "";
                lbl_semcell.Visible = false;

                string selqry = "";
                string activerow = FpSpread1.ActiveSheetView.ActiveRow.ToString();
                string activecol = FpSpread1.ActiveSheetView.ActiveColumn.ToString();
                string hedcount = "";
                int actnew = 0;
                int actbal = 0;
                int actpaidtotal = 0;
                int refundamt = 0;
                int excessamt = 0;
                int fineamt = 0;
                if (activecol.Trim() != "")
                {
                    actnew = Convert.ToInt32(activecol);
                    actpaidtotal = Convert.ToInt32(FpSpread1.Sheets[0].ColumnCount - 5);
                    actbal = Convert.ToInt32(FpSpread1.Sheets[0].ColumnCount - 4);
                    refundamt = Convert.ToInt32(FpSpread1.Sheets[0].ColumnCount - 3);
                    excessamt = Convert.ToInt32(FpSpread1.Sheets[0].ColumnCount - 2);
                    fineamt = Convert.ToInt32(FpSpread1.Sheets[0].ColumnCount - 1);
                }
                string gettagvalue = "";
                if (actnew > 5)
                {
                    gettagvalue = Convert.ToString(FpSpread1.Sheets[0].ColumnHeader.Cells[1, actnew].Tag);

                }


                int act = Convert.ToInt32(activerow);
                if (act == FpSpread1.Sheets[0].Rows.Count - 1)
                {

                    for (int i = 0; i < FpSpread1.Sheets[0].Rows.Count - 1; i++)
                    {
                        if (hedcount == "")
                        {
                            hedcount = Convert.ToString(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), 1].Tag);
                        }
                        else
                        {
                            hedcount = hedcount + "','" + "" + Convert.ToString(FpSpread1.Sheets[0].Cells[Convert.ToInt32(i), 1].Tag) + "";
                        }
                    }

                }




                string headercode = "";
                headercode = Convert.ToString(FpSpread1.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Tag);

                if (hedcount.Trim() != "")
                {
                    headercode = hedcount;
                }

                int actcol = Convert.ToInt32(activecol);
                int actrow = Convert.ToInt32(activerow);

                if (FpSpread1.Sheets[0].Rows.Count > 0)
                {
                    colhedername = Convert.ToString(FpSpread1.Sheets[0].ColumnHeader.Cells[0, Convert.ToInt32(activecol)].Text);
                    cellclicktext = "-->Header(" + colhedername + ")";
                    if (colhedername.Trim() == "")
                    {
                        colhedername = Convert.ToString(FpSpread1.Sheets[0].ColumnHeader.Cells[1, Convert.ToInt32(activecol)].Text);
                        cellclicktext = "-->Header(" + colhedername + ")";
                    }
                    colhedername1 = Convert.ToString(FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1, Convert.ToInt32(activecol)].Text);
                    //if (colhedername1.Trim() != "")
                    //{
                    //    colhedername1 = Convert.ToString(FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].Rows.Count - 1,0].Text);
                    //}
                }
                #endregion

                #region old query
                Boolean flag = false;
                ////selqry = "SELECT A.HeaderFK,HeaderName,LedgerName,LedgerFK, SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount  FROM FT_FeeAllot A,Applyn P,Degree G,Course C,Department D,FM_HeaderMaster H,FM_LedgerMaster L WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code and A.HeaderFK = H.HeaderPK AND A.LedgerFK = L.LedgerPK AND H.HeaderPK = L.HeaderFK AND P.IsConfirm = 1 AND Admission_Status = 0  and G.college_code ='" + collegecode1 + "'";
                ////if (batch1 != "")
                ////{
                ////    selqry = selqry + "and p.Batch_Year in ('" + batch1 + "')";
                ////}

                ////if (deptdegcode != "")
                ////{
                ////    selqry = selqry + " and g.Degree_Code in ('" + deptdegcode + "')";
                ////}

                ////if (sem != "")
                ////{
                ////    selqry = selqry + "and A.FeeCategory in ('" + sem + "')";
                ////}
                ////if (stud != "")
                ////{
                ////    selqry = selqry + "and p.mode in ('" + stud + "')";
                ////}
                ////if (seatype != "")
                ////{
                ////    selqry = selqry + "and p.seattype in ('" + seatype + "')";
                ////}
                ////if (studtype != "")
                ////{
                ////    selqry = selqry + " and p.Stud_Type in ('" + studtype + "')";
                ////}
                ////if (headercode != "")
                ////{
                ////    selqry = selqry + "and A.HeaderFK in ('" + headercode + "')";
                ////}
                ////if (ledgercode != "")
                ////{
                ////    selqry = selqry + " and LedgerFK in('" + ledgercode + "')";
                ////}
                ////if (datewise == 1)
                ////{
                ////    if (fromdate != "" && todate != "")
                ////    {
                ////        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                ////    }
                ////}
                ////selqry = selqry + " GROUP BY A.HeaderFK,HeaderName,LedgerFK,LedgerName ";
                ////if (activecol.Trim() == "3")
                ////{
                ////    selqry = selqry + " having SUM(DeductAmout) > 0 ";
                ////}
                ////if (activecol.Trim() == "4")
                ////{
                ////    selqry = selqry + " having SUM(FromGovtAmt) > 0";
                ////}
                ////if (activecol.Trim() == Convert.ToString(actbal))
                ////{
                ////    selqry = selqry + " having SUM(BalAmount) > 0";
                ////}
                ////if (activecol.Trim() == Convert.ToString(actpaidtotal))
                ////{
                ////    selqry = selqry + " having sum(BalAmount) = 0";
                ////}
                ////if (activecol.Trim() == Convert.ToString(refundamt))
                ////{
                ////    selqry = selqry + "  having SUM(RefundAmount) > 0";
                ////}
                //////if (activecol.Trim() == Convert.ToString(excessamt))
                //////{
                //////    selqry = selqry + "having SUM(RefundAmount)>0";
                //////}
                //selqry = selqry + "  SELECT A.HeaderFK,HeaderName,LedgerName,LedgerFK, SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount  FROM FT_FeeAllot A,Applyn P,Degree G,Course C,Department D,FM_HeaderMaster H,FM_LedgerMaster L WHERE A.App_No = P.app_no  and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and p.degree_code = g.degree_code and g.college_code = d.college_code and A.HeaderFK = H.HeaderPK AND A.LedgerFK = L.LedgerPK AND H.HeaderPK = L.HeaderFK AND P.IsConfirm = 1 AND Admission_Status = 1   and G.college_code ='" + collegecode1 + "'";
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    // selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    // selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    // selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headercode != "")
                //{
                //    selqry = selqry + "and A.HeaderFK in ('" + headercode + "')";
                //}
                //if (ledgercode != "")
                //{
                //    selqry = selqry + " and LedgerFK in('" + ledgercode + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY A.HeaderFK,HeaderName,LedgerFK,LedgerName";
                //if (activecol.Trim() == "3")
                //{
                //    selqry = selqry + " having SUM(DeductAmout) > 0 ";
                //}
                //if (activecol.Trim() == "4")
                //{
                //    selqry = selqry + " having SUM(FromGovtAmt) > 0";
                //}
                //if (activecol.Trim() == Convert.ToString(actbal))
                //{
                //    selqry = selqry + " having SUM(BalAmount) > 0";
                //}
                //if (activecol.Trim() == Convert.ToString(actpaidtotal))
                //{
                //    selqry = selqry + " having sum(BalAmount) = 0";
                //}
                ////if (activecol.Trim() == Convert.ToString(excessamt))
                ////{
                ////    selqry = selqry + "having SUM(RefundAmount)>0";
                ////}
                ////selqry = selqry + " SELECT HeaderName,PayMode,LedgerFK,HeaderFK,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C,Department D,FM_HeaderMaster H WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code and A.HeaderFK = H.HeaderPK AND P.IsConfirm = 1 AND Admission_Status = 0  and G.college_code ='" + collegecode1 + "'";
                ////if (batch1 != "")
                ////{
                ////    selqry = selqry + "and p.Batch_Year in ('" + batch1 + "')";
                ////}
                ////if (deptdegcode != "")
                ////{
                ////    selqry = selqry + " and g.Degree_Code in ('" + deptdegcode + "')";
                ////}
                ////if (sem != "")
                ////{
                ////    selqry = selqry + "and A.FeeCategory in ('" + sem + "')";
                ////}
                ////if (stud != "")
                ////{
                ////    selqry = selqry + "and p.mode in ('" + stud + "')";
                ////}
                ////if (seatype != "")
                ////{
                ////    selqry = selqry + "and p.seattype in ('" + seatype + "')";
                ////}
                ////if (studtype != "")
                ////{
                ////    selqry = selqry + " and p.Stud_Type in ('" + studtype + "')";
                ////}
                ////if (headercode != "")
                ////{
                ////    selqry = selqry + "and HeaderFK in ('" + headercode + "')";
                ////}
                ////if (ledgercode != "")
                ////{
                ////    selqry = selqry + " and LedgerFK in('" + ledgercode + "')";
                ////}
                ////if (gettagvalue.Trim() != "" && gettagvalue.Trim() != "0")
                ////{
                ////    selqry = selqry + " and PayMode in ('" + gettagvalue + "')";
                ////}
                ////if (datewise == 1)
                ////{
                ////    if (fromdate != "" && todate != "")
                ////    {
                ////        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                ////    }
                ////}
                ////selqry = selqry + "GROUP BY A.HeaderFK,HeaderName,PayMode,LedgerFK,HeaderFK";
                //selqry = selqry + " SELECT PayMode,LedgerFK,HeaderFK,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C,Department D WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code  AND P.IsConfirm = 1 AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "'";
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    // selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    //  selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    //selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    //selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headercode != "")
                //{
                //    selqry = selqry + "and HeaderFK in ('" + headercode + "')";
                //}
                //if (ledgercode != "")
                //{
                //    selqry = selqry + " and LedgerFK in('" + ledgercode + "')";
                //}
                //if (gettagvalue.Trim() != "" && gettagvalue.Trim() != "0")
                //{
                //    selqry = selqry + " and PayMode in ('" + gettagvalue + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY A.HeaderFK,PayMode,LedgerFK,HeaderFK";


                //selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,h.LedgerPK from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Degree G,Course C,Department D,FM_LedgerMaster H,FM_HeaderMaster fh WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no  and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code  and h.LedgerPK =ex.LedgerFK and ex.HeaderFK=h.HeaderFK and h.HeaderFK=fh.HeaderPK and em.App_No = a.App_No   AND P.IsConfirm = 1  and a.LedgerFK=h.LedgerPK   AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "' ";
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    // selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headercode != "")
                //{
                //    selqry = selqry + " and Ex.HeaderFK in('" + headercode + "')";
                //}
                //if (ledgercode != "")
                //{
                //    selqry = selqry + "  and Ex.LedgerFK in('" + ledgercode + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY A.HeaderFK ,h.LedgerPK";
                //if (activecol.Trim() == Convert.ToString(excessamt))
                //{
                //    selqry = selqry + " having SUM(Ex.Excessamt)>0 ";
                //    flag = true;
                //}
                #endregion

                #region newquery
                //detail
                selqry = "  SELECT A.HeaderFK,LedgerFK, SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.App_No=p.app_no AND P.IsConfirm = 1 AND Admission_Status = 1  and A.FinYearFK in ('" + Finyearvalue + "')  and P.college_code ='" + collegecode1 + "'";
                if (batch1 != "")
                {
                    selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                }
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headercode != "")
                {
                    selqry = selqry + " and a.HeaderFK in ('" + headercode + "')";
                }
                if (ledgercode != "")
                {
                    selqry = selqry + " and LedgerFK in('" + ledgercode + "')";
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                    }
                }

                selqry = selqry + "GROUP BY A.HeaderFK,LedgerFK";
                if (activecol.Trim() == "3")
                {
                    selqry = selqry + " having SUM(DeductAmout) > 0 ";
                }
                if (activecol.Trim() == "4")
                {
                    selqry = selqry + " having SUM(FromGovtAmt) > 0";
                }
                if (activecol.Trim() == Convert.ToString(actbal))
                {
                    selqry = selqry + " having SUM(BalAmount) > 0";
                }
                if (activecol.Trim() == Convert.ToString(actpaidtotal))
                {
                    selqry = selqry + " having sum(BalAmount) = 0";
                }
                //paymode
                selqry = selqry + "  SELECT PayMode,HeaderFK,LedgerFK,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.app_no=p.app_no  AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                if (batch1 != "")
                {
                    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                }
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headercode != "")
                {
                    selqry = selqry + " and HeaderFK in ('" + headercode + "')";
                }
                if (ledgercode != "")
                {
                    selqry = selqry + " and LedgerFK in('" + ledgercode + "')";
                }
                if (gettagvalue.Trim() != "" && gettagvalue.Trim() != "0")
                {
                    selqry = selqry + " and PayMode in ('" + gettagvalue + "')";
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                    }
                }
                selqry = selqry + "GROUP BY A.HeaderFK,PayMode,LedgerFK";

                //excess amount
                selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,A.LedgerFK from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no and em.App_No = a.App_No   AND P.IsConfirm = 1  AND Admission_Status = 1 and P.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                if (batch1 != "")
                {
                    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                }
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  p.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headercode != "")
                {
                    selqry = selqry + " and Ex.HeaderFK in('" + headercode + "')";
                }
                if (ledgercode != "")
                {
                    selqry = selqry + "  and Ex.LedgerFK in('" + ledgercode + "')";
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                    }
                }
                selqry = selqry + "GROUP BY A.HeaderFK ,a.LedgerFK";
                if (activecol.Trim() == Convert.ToString(excessamt))
                {
                    selqry = selqry + " having SUM(Ex.Excessamt)>0 ";
                    flag = true;
                }
                selqry = selqry + "  select HeaderFK,LedgerPK,HeaderName,LedgerName from FM_HeaderMaster h,FM_LedgerMaster l where l.HeaderFK =h.HeaderPK and h.CollegeCode ='" + collegecode1 + "' order by isnull(l.priority,1000),l.ledgerName asc";
                #endregion

                #region design
                bool paymodecheck = false;
                DataView dv = new DataView();
                ds = d2.select_method_wo_parameter(selqry, "Text");
                if (gettagvalue.Trim() != "")
                {
                    if (ds.Tables[1].Rows.Count > 0)
                    {
                        paymodecheck = true;
                    }
                }
                else
                {
                    paymodecheck = true;
                }
                Boolean flag1 = false;
                if (flag == true)
                {
                    if (ds.Tables[0].Rows.Count > 0 && paymodecheck == true && ds.Tables[2].Rows.Count > 0)
                    {
                        flag1 = true;
                    }
                }
                else
                {
                    if (ds.Tables[0].Rows.Count > 0 && paymodecheck == true)
                    {
                        flag1 = true;
                    }
                }

                if (flag1 == true)
                {
                    loadledgercolumns(sender, e);
                    fpledger.Sheets[0].RowCount = 0;
                    fpledger.Sheets[0].ColumnCount = 0;
                    fpledger.CommandBar.Visible = false;
                    fpledger.Sheets[0].AutoPostBack = true;
                    fpledger.Sheets[0].ColumnHeader.RowCount = 2;
                    fpledger.Sheets[0].RowHeader.Visible = false;
                    fpledger.Sheets[0].ColumnCount = 6;
                    FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
                    darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
                    darkstyle.ForeColor = Color.White;
                    fpledger.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
                    int check = 0;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 0].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                    fpledger.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;

                    fpledger.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Header Name";
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                    fpledger.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Left;
                    fpledger.Sheets[0].Columns[1].Visible = true;

                    fpledger.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Ledger Name";
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 2].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                    fpledger.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Left;
                    fpledger.Sheets[0].Columns[2].Visible = true;

                    fpledger.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Allot";
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 3].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                    fpledger.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Right;
                    fpledger.Sheets[0].Columns[3].Visible = true;
                    if (!colord.Contains("1"))
                    {
                        fpledger.Sheets[0].Columns[3].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpledger.Sheets[0].Columns[3].Visible = true;
                    }
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Consustion";
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 4].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
                    fpledger.Sheets[0].Columns[4].HorizontalAlign = HorizontalAlign.Right;
                    fpledger.Sheets[0].Columns[4].Visible = true;
                    if (!colord.Contains("2"))
                    {
                        fpledger.Sheets[0].Columns[4].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpledger.Sheets[0].Columns[4].Visible = true;
                    }
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Goverment";
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 5].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 5].Font.Bold = true;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 5].Font.Name = "Book Antiqua";
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 5].Font.Size = FontUnit.Medium;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;
                    fpledger.Sheets[0].Columns[5].HorizontalAlign = HorizontalAlign.Right;
                    fpledger.Sheets[0].Columns[5].Visible = true;
                    if (!colord.Contains("3"))
                    {
                        fpledger.Sheets[0].Columns[5].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpledger.Sheets[0].Columns[5].Visible = true;
                    }
                    fpledger.Sheets[0].ColumnCount++;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Text = "Total";
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("4"))
                    {
                        fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpledger.Sheets[0].ColumnHeaderSpanModel.Add(0, fpledger.Sheets[0].ColumnCount - 1, 2, 1);
                    fpledger.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
                    fpledger.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
                    fpledger.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
                    fpledger.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
                    fpledger.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
                    fpledger.Sheets[0].ColumnHeaderSpanModel.Add(0, 5, 2, 1);

                    Hashtable newhash = new Hashtable();

                    if (chkl_paid.Items.Count > 0)
                    {
                        for (int s = 0; s < chkl_paid.Items.Count; s++)
                        {
                            if (chkl_paid.Items[s].Selected == true)
                            {
                                check++;
                                fpledger.Sheets[0].ColumnCount++;
                                newhash.Add(Convert.ToString(chkl_paid.Items[s].Value), fpledger.Sheets[0].ColumnCount - 1);
                                fpledger.Sheets[0].ColumnHeader.Cells[1, fpledger.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_paid.Items[s].Text);
                                fpledger.Sheets[0].ColumnHeader.Cells[1, fpledger.Sheets[0].ColumnCount - 1].Tag = Convert.ToString(chkl_paid.Items[s].Value);
                                fpledger.Sheets[0].ColumnHeader.Cells[1, fpledger.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                                fpledger.Sheets[0].ColumnHeader.Cells[1, fpledger.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                fpledger.Sheets[0].ColumnHeader.Cells[1, fpledger.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                fpledger.Sheets[0].ColumnHeader.Cells[1, fpledger.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                fpledger.Sheets[0].ColumnHeader.Cells[1, fpledger.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                                fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                                fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = true;
                                if (!colord.Contains("5"))
                                {
                                    fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                                if (colord.Count == 0)
                                {
                                    fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = true;
                                }
                            }

                        }
                        if (check != 0)
                        {
                            fpledger.Sheets[0].ColumnCount++;
                            fpledger.Sheets[0].ColumnHeader.Cells[1, fpledger.Sheets[0].ColumnCount - 1].Text = "Total Paid";
                            fpledger.Sheets[0].ColumnHeader.Cells[1, fpledger.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                            fpledger.Sheets[0].ColumnHeader.Cells[1, fpledger.Sheets[0].ColumnCount - 1].Font.Bold = true;
                            fpledger.Sheets[0].ColumnHeader.Cells[1, fpledger.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                            fpledger.Sheets[0].ColumnHeader.Cells[1, fpledger.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                            fpledger.Sheets[0].ColumnHeader.Cells[1, fpledger.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                            fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                            if (!colord.Contains("5"))
                            {
                                fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = false;
                            }
                            if (colord.Count == 0)
                            {
                                fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = true;
                            }
                        }
                    }
                    if (check == 0)
                    {
                        fpledger.Sheets[0].ColumnCount++;
                        fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Text = "Paid";
                        fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                        fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Font.Bold = true;
                        fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                        fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                        fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                        fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                        fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                        fpledger.Sheets[0].ColumnHeaderSpanModel.Add(0, fpledger.Sheets[0].ColumnCount - 1, 2, 1);
                        fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = true;
                        if (!colord.Contains("5"))
                        {
                            fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = false;
                        }
                        if (colord.Count == 0)
                        {
                            fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = true;
                        }
                    }
                    else
                    {
                        fpledger.Sheets[0].ColumnHeaderSpanModel.Add(0, 7, 1, check + 1);
                        fpledger.Sheets[0].ColumnHeader.Cells[0, 7].Text = "Paid";
                        fpledger.Sheets[0].ColumnHeader.Cells[0, 7].ForeColor = ColorTranslator.FromHtml("#000000");
                        fpledger.Sheets[0].ColumnHeader.Cells[0, 7].Font.Bold = true;
                        fpledger.Sheets[0].ColumnHeader.Cells[0, 7].Font.Name = "Book Antiqua";
                        fpledger.Sheets[0].ColumnHeader.Cells[0, 7].Font.Size = FontUnit.Medium;
                        fpledger.Sheets[0].ColumnHeader.Cells[0, 7].HorizontalAlign = HorizontalAlign.Center;
                        fpledger.Sheets[0].Columns[7].HorizontalAlign = HorizontalAlign.Center;
                        if (!colord.Contains("5"))
                        {
                            fpledger.Sheets[0].Columns[7].Visible = false;
                        }
                        if (colord.Count == 0)
                        {
                            fpledger.Sheets[0].Columns[7].Visible = true;
                        }
                    }

                    fpledger.Sheets[0].ColumnCount++;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Text = "Balance";
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("6"))
                    {
                        fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpledger.Sheets[0].ColumnHeaderSpanModel.Add(0, fpledger.Sheets[0].ColumnCount - 1, 2, 1);

                    fpledger.Sheets[0].ColumnCount++;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Text = "Refund Amount";
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("7"))
                    {
                        fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpledger.Sheets[0].ColumnHeaderSpanModel.Add(0, fpledger.Sheets[0].ColumnCount - 1, 2, 1);

                    fpledger.Sheets[0].ColumnCount++;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Text = "Excess Amount";
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("8"))
                    {
                        fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpledger.Sheets[0].ColumnHeaderSpanModel.Add(0, fpledger.Sheets[0].ColumnCount - 1, 2, 1);

                    fpledger.Sheets[0].ColumnCount++;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Text = "Fine Amount";
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpledger.Sheets[0].ColumnHeader.Cells[0, fpledger.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("9"))
                    {
                        fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpledger.Sheets[0].ColumnHeaderSpanModel.Add(0, fpledger.Sheets[0].ColumnCount - 1, 2, 1);
                #endregion

                    #region value
                    string totalvalue = "";
                    double bal = 0;
                    for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                    {
                        fpledger.Sheets[0].Rows.Count = ds.Tables[0].Rows.Count;
                        fpledger.Sheets[0].Cells[i, 0].Text = Convert.ToString(i + 1);
                        ds.Tables[3].DefaultView.RowFilter = "LedgerPK='" + Convert.ToString(ds.Tables[0].Rows[i]["LedgerFK"]) + "'";
                        dvhead = ds.Tables[3].DefaultView;
                        if (Convert.ToString(dvhead) != "" && dvhead != null)
                        {
                            fpledger.Sheets[0].Cells[i, 1].Text = Convert.ToString(dvhead[0]["HeaderName"]);
                            fpledger.Sheets[0].Cells[i, 1].Tag = Convert.ToString(dvhead[0]["HeaderFK"]);
                            fpledger.Sheets[0].Cells[i, 2].Text = Convert.ToString(dvhead[0]["LedgerName"]);
                            fpledger.Sheets[0].Cells[i, 2].Tag = Convert.ToString(dvhead[0]["LedgerPK"]);
                        }
                        allot = Convert.ToString(ds.Tables[0].Rows[i]["Allot"]);
                        if (allot != "" && allot != null)
                        {
                            fpledger.Sheets[0].Cells[i, 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(allot), 2));
                        }
                        else
                        {
                            fpledger.Sheets[0].Cells[i, 3].Text = "0";
                        }
                        consession = Convert.ToString(ds.Tables[0].Rows[i]["consustion"]);
                        if (consession != "" && consession != null)
                        {
                            fpledger.Sheets[0].Cells[i, 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(consession), 2));
                        }
                        else
                        {
                            fpledger.Sheets[0].Cells[i, 4].Text = "0";
                        }
                        // fpledger.Sheets[0].Cells[i, 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Allot"]), 2));
                        // fpledger.Sheets[0].Cells[i, 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["consustion"]), 2));
                        string val = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());

                        string value = "";
                        if (val == "" || val == null)
                        {
                            value = "0";
                        }
                        else
                        {
                            value = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
                        }
                        fpledger.Sheets[0].Cells[i, 5].Text = value;
                        // fpledger.Sheets[0].Cells[i, 6].Text = Convert.ToString(ds.Tables[0].Rows[i]["total"].ToString());
                        totalvalue = Convert.ToString(ds.Tables[0].Rows[i]["Total"]);
                        fpledger.Sheets[0].Cells[i, 6].Text = Convert.ToString(Math.Round(Convert.ToDouble(totalvalue), 2));
                        string paidamt = "";
                        paidamt = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
                        if (check == 0)
                        {
                            if (paidamt == "" || paidamt == null)
                            {
                                fpledger.Sheets[0].Cells[i, fpledger.Sheets[0].ColumnCount - 5].Text = "0";
                            }
                            else
                            {
                                fpledger.Sheets[0].Cells[i, fpledger.Sheets[0].ColumnCount - 5].Text = paidamt;
                            }
                        }
                        if (check != 0)
                        {
                            //if (paidamt == "" || paidamt == null)
                            //{
                            //    fpledger.Sheets[0].Cells[i, fpledger.Sheets[0].ColumnCount - 2].Text = "0";
                            //}
                            //else
                            //{
                            //    fpledger.Sheets[0].Cells[i, fpledger.Sheets[0].ColumnCount - 2].Text = paidamt;
                            //}
                            // fpledger.Sheets[0].Cells[i, fpledger.Sheets[0].ColumnCount - 2].Text = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
                        }

                        // fpledger.Sheets[0].Cells[i, fpledger.Sheets[0].ColumnCount - 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Balance"]), 2));
                        string reund = Convert.ToString(ds.Tables[0].Rows[i]["RefundAmount"]);
                        if (reund.Trim() != "")
                        {
                            fpledger.Sheets[0].Cells[i, fpledger.Sheets[0].ColumnCount - 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(reund), 2));
                        }
                        else
                        {
                            fpledger.Sheets[0].Cells[i, fpledger.Sheets[0].ColumnCount - 3].Text = "0";
                        }
                        DataView dvex = new DataView();
                        if (ds.Tables[2].Rows.Count > 0)
                        {
                            ds.Tables[2].DefaultView.RowFilter = "LedgerFK='" + Convert.ToString(ds.Tables[0].Rows[i]["LedgerFK"]) + "'";
                            dvex = ds.Tables[2].DefaultView;
                            if (dvex.Count > 0 && dvex.Count != null)
                            {
                                fpledger.Sheets[0].Cells[i, fpledger.Sheets[0].ColumnCount - 2].Text = Convert.ToString(dvex[0]["ExcessAmount"]);
                            }
                        }
                        else
                        {
                            fpledger.Sheets[0].Cells[i, fpledger.Sheets[0].ColumnCount - 2].Text = "0";
                        }
                        //fpledger.Sheets[0].Cells[i, fpledger.Sheets[0].ColumnCount - 1].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["RefundAmount"]), 2));
                        double totamount = 0;
                        double fnlamount = 0;
                        if (ds.Tables[1].Rows.Count > 0)
                        {
                            if (chkl_paid.Items.Count > 0)
                            {
                                for (int pay = 0; pay < chkl_paid.Items.Count; pay++)
                                {
                                    if (chkl_paid.Items[pay].Selected == true)
                                    {
                                        ds.Tables[1].DefaultView.RowFilter = "HeaderFK='" + Convert.ToString(ds.Tables[0].Rows[i]["HeaderFK"].ToString()) + "' and PayMode='" + Convert.ToString(chkl_paid.Items[pay].Value) + "' and LedgerFK='" + Convert.ToString(ds.Tables[0].Rows[i]["LedgerFK"]) + "'";
                                        dv = ds.Tables[1].DefaultView;
                                        if (dv.Count == 0 || dv.Count == null)
                                        {
                                            int count = 0;
                                            int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
                                            fpledger.Sheets[0].Cells[i, colnew].Text = "0";
                                        }
                                        if (dv.Count > 0)
                                        {
                                            int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
                                            fpledger.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv[0]["total"]);
                                            totamount = Convert.ToDouble(dv[0]["total"]);
                                            if (totamount != 0)
                                            {
                                                fnlamount = fnlamount + totamount;
                                            }

                                        }
                                    }
                                }
                                if (check != 0)
                                    fpledger.Sheets[0].Cells[i, fpledger.Sheets[0].ColumnCount - 5].Text = Convert.ToString(fnlamount);
                                if (totalvalue != "" && totalvalue != null)
                                {
                                    bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(fnlamount);
                                    fpledger.Sheets[0].Cells[i, fpledger.Sheets[0].ColumnCount - 4].Text = Convert.ToString(bal);
                                    if (Convert.ToDouble(bal) == 0)
                                    {
                                        fpledger.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#F08080");
                                    }
                                    if (Convert.ToDouble(bal) != 0)
                                    {
                                        fpledger.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#90EE90");
                                    }
                                }
                            }
                        }
                    }
                    fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = false;
                    #endregion

                    #region grandtot
                    fpledger.Sheets[0].PageSize = ds.Tables[0].Rows.Count + 1;
                    fpledger.Sheets[0].Rows.Count++;
                    fpledger.Sheets[0].Cells[fpledger.Sheets[0].Rows.Count - 1, 0].Text = "Grand Total";
                    double hedval = 0;
                    for (int j = 3; j < fpledger.Sheets[0].Columns.Count; j++)
                    {
                        for (int i = 0; i < fpledger.Rows.Count - 1; i++)
                        {
                            string values = Convert.ToString(fpledger.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
                            if (values != "0" && values != "-" && values != "")
                            {
                                if (hedval == 0)
                                {
                                    hedval = Convert.ToDouble(fpledger.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
                                }
                                else
                                {
                                    hedval = hedval + Convert.ToDouble(fpledger.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
                                }
                            }
                        }
                        fpledger.Sheets[0].Cells[fpledger.Sheets[0].Rows.Count - 1, j].Text = Convert.ToString(hedval);
                        hedval = 0;
                    }
                    #endregion

                    #region visible
                    fpledger.SaveChanges();
                    ledger.Visible = true;
                    divledger.Visible = true;
                    fpledger.Visible = true;
                    lbl_ledg.Visible = true;
                    //  btn_fpled.Visible = true;
                    //  btn_fpbat.Visible = false;
                    lbl_ledg.Text = "->Header(" + colhedername + ")->Ledger";
                    //  lbl_ledg.Text = cellclicktext;
                    // rptprint.Visible = true;
                    rptprint.Attributes.Add("Style", "margin-top:-460px; margin-left:10px;");
                    // pnlledgercolorder.Visible = true;
                    // Pnlledcolorder.Visible = true;
                    // loadledgercoloreder();
                    ViewState["ledger"] = 1;
                    // string fpledname = "Ledger";
                    rptprint.Visible = false;
                    #endregion

                }
                else
                {
                    fpledger.Visible = false;
                    divledger.Visible = false;
                    lbl_ledg.Visible = false;
                    /// pnlledgercolorder.Visible = false;
                    imgdiv2.Visible = true;
                    lbl_alert.Visible = true;
                    lbl_alert.Text = "No Record Found";
                }
            }
        }
        catch { }
    }
    #endregion

    #region ledger
    public void ledgercellclick(object sender, EventArgs e)
    {
        try
        {
            if (batchcellclick == true)
            {
                #region getvalue
                string batch1 = "";
                string degcourseid = "";
                string deptdegcode = "";
                string sem = "";
                string sec = "";
                string stud = "";
                string seatype = "";
                string studtype = "";
                string paid = "";
                string allot = "";
                string consession = "";
                string Finyearvalue = "";

                batch1 = Convert.ToString(getCblSelectedValue(cbl_batch));
                degcourseid = Convert.ToString(getCblSelectedValue(cbl_degree));
                deptdegcode = Convert.ToString(getCblSelectedValue(cbl_dept));
                sem = Convert.ToString(getCblSelectedValue(cbl_sem));
                sec = Convert.ToString(getCblSelectedValue(cbl_sect));
                stud = Convert.ToString(getCblSelectedValue(cbl_stud));
                seatype = Convert.ToString(getCblSelectedValue(cbl_seat));
                studtype = Convert.ToString(getCblSelectedValue(cbl_studtype));
                paid = Convert.ToString(getCblSelectedValue(chkl_paid));
                // headervalue = Convert.ToString(getCblSelectedValue(chkl_studhed));
                //ledgercode = Convert.ToString(getCblSelectedValue(chkl_studled));
                Finyearvalue = Convert.ToString(getCblSelectedValue(chklsfyear));

                //  btn_fpdeg.Visible = false;
                //  btn_fpdep.Visible = false;
                divdegr.Visible = false;
                divdep.Visible = false;
                divsema.Visible = false;
                div7.Visible = false;

                string fromdate = "";
                string todate = "";
                int datewise = 0;
                if (chk_datewise.Checked == true)
                {
                    datewise = 1;
                    if (datewise == 1)
                    {
                        fromdate = txt_fromdate.Text;
                        todate = txt_todate.Text;
                        if (fromdate != "" && todate != "")
                        {
                            string[] frdate = fromdate.Split('/');
                            if (frdate.Length == 3)
                            {
                                fromdate = frdate[1].ToString() + "/" + frdate[0].ToString() + "/" + frdate[2].ToString();
                            }
                            string[] tdate = todate.Split('/');
                            if (tdate.Length == 3)
                            {
                                todate = tdate[1].ToString() + "/" + tdate[0].ToString() + "/" + tdate[2].ToString();
                            }
                        }
                    }
                }
                // divbatch.Visible = false;               
                lbl_degr.Visible = false;
                lbl_degr.Text = "";
                lbl_dep.Visible = false;
                lbl_dep.Text = "";
                divdegree.Visible = false;
                divdept.Visible = false;
                lbl_sem.Visible = false; ;
                lbl_sem.Text = "";
                divsem.Visible = false;
                //pnl_degcolorder.Visible = false;
                //pnl_degreecolorder.Visible = false;
                //pnl_deptcolord.Visible = false;
                //pnl_deptcolorder.Visible = false;
                //pnl_semcolord.Visible = false;
                //pnl_semcolorder.Visible = false;
                //pnl_studcolord.Visible = false;
                //pnl_studcolorder.Visible = false;
                divstudcell.Visible = false;
                fpstudcell.Visible = false;
                lbl_semcell.Text = "";
                lbl_semcell.Visible = false;
                string hedcount = "";
                string ledcount = "";
                string selqry = "";
                string activerow = fpledger.ActiveSheetView.ActiveRow.ToString();
                string activecol = fpledger.ActiveSheetView.ActiveColumn.ToString();

                int actnew = 0;
                int actbal = 0;
                int actpaidtotal = 0;
                int refundamt = 0;
                int excessamt = 0;
                int fineamt = 0;
                if (activecol.Trim() != "")
                {
                    actnew = Convert.ToInt32(activecol);
                    actpaidtotal = Convert.ToInt32(fpledger.Sheets[0].ColumnCount - 5);
                    actbal = Convert.ToInt32(fpledger.Sheets[0].ColumnCount - 4);
                    refundamt = Convert.ToInt32(fpledger.Sheets[0].ColumnCount - 3);
                    excessamt = Convert.ToInt32(fpledger.Sheets[0].ColumnCount - 2);
                    fineamt = Convert.ToInt32(fpledger.Sheets[0].ColumnCount - 1);
                }

                string gettagvalue = "";
                if (actnew > 6)
                {
                    gettagvalue = Convert.ToString(fpledger.Sheets[0].ColumnHeader.Cells[1, actnew].Tag);
                }

                int act = Convert.ToInt32(activerow);
                if (act == fpledger.Sheets[0].Rows.Count - 1)
                {

                    for (int i = 0; i < fpledger.Sheets[0].Rows.Count - 1; i++)
                    {
                        if ((hedcount == "") && (ledcount == ""))
                        {
                            hedcount = Convert.ToString(fpledger.Sheets[0].Cells[Convert.ToInt32(i), 1].Tag);
                            ledcount = Convert.ToString(fpledger.Sheets[0].Cells[Convert.ToInt32(i), 2].Tag);
                        }
                        else
                        {
                            hedcount = hedcount + "','" + "" + Convert.ToString(fpledger.Sheets[0].Cells[Convert.ToInt32(i), 1].Tag) + "";
                            ledcount = ledcount + "','" + "" + Convert.ToString(fpledger.Sheets[0].Cells[Convert.ToInt32(i), 2].Tag) + "";
                        }
                    }

                }

                string headercode = "";
                string ledgercode = "";
                headercode = Convert.ToString(fpledger.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Tag);
                ledgercode = Convert.ToString(fpledger.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Tag);

                if ((hedcount.Trim() != "") && (ledcount != ""))
                {
                    headercode = hedcount;
                    ledgercode = ledcount;
                }
                // string colledname = "";
                if (fpledger.Sheets[0].Rows.Count > 0)
                {
                    colledname = Convert.ToString(fpledger.Sheets[0].ColumnHeader.Cells[0, Convert.ToInt32(activecol)].Text);
                    if (colledname.Trim() == "")
                    {
                        colledname = Convert.ToString(fpledger.Sheets[0].ColumnHeader.Cells[1, Convert.ToInt32(activecol)].Text);
                    }
                }
                Boolean flag = false;
                Boolean flag1 = false;
                #endregion
                #region query

                ////selqry = "SELECT A.HeaderFK ,HeaderName,LedgerFK,LedgerName,batch_year ,SUM(FeeAmount)as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,FM_HeaderMaster H,FM_LedgerMaster L,Applyn P,Degree G,Course C,Department D WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code  and a.HeaderFK = h.HeaderPK and a.LedgerFK = l.LedgerPK and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 0  and G.college_code ='" + collegecode1 + "'";
                ////if (batch1 != "")
                ////{
                ////    selqry = selqry + "and p.Batch_Year in ('" + batch1 + "')";
                ////}

                ////if (deptdegcode != "")
                ////{
                ////    selqry = selqry + " and g.Degree_Code in ('" + deptdegcode + "')";
                ////}

                ////if (sem != "")
                ////{
                ////    selqry = selqry + "and A.FeeCategory in ('" + sem + "')";
                ////}
                ////if (stud != "")
                ////{
                ////    selqry = selqry + "and p.mode in ('" + stud + "')";
                ////}
                ////if (seatype != "")
                ////{
                ////    selqry = selqry + "and p.seattype in ('" + seatype + "')";
                ////}
                ////if (studtype != "")
                ////{
                ////    selqry = selqry + " and p.Stud_Type in ('" + studtype + "')";
                ////}
                ////if (headercode != "")
                ////{
                ////    selqry = selqry + "and A.HeaderFK in('" + headercode + "')";
                ////}
                ////if (ledgercode != "")
                ////{
                ////    selqry = selqry + " and LedgerFK in('" + ledgercode + "')";
                ////}
                ////if (datewise == 1)
                ////{
                ////    if (fromdate != "" && todate != "")
                ////    {
                ////        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                ////    }
                ////}

                ////selqry = selqry + "GROUP BY A.HeaderFK ,HeaderName,LedgerFK,LedgerName,batch_year ";
                ////if (activecol.Trim() == "4")
                ////{
                ////    selqry = selqry + " having SUM(DeductAmout) > 0 ";
                ////}
                ////if (activecol.Trim() == "5")
                ////{
                ////    selqry = selqry + " having SUM(FromGovtAmt) > 0";
                ////}
                ////if (activecol.Trim() == Convert.ToString(actbal))
                ////{
                ////    selqry = selqry + " having SUM(BalAmount) > 0";
                ////}
                ////if (activecol.Trim() == Convert.ToString(actpaidtotal))
                ////{
                ////    selqry = selqry + " having sum(BalAmount) = 0";
                ////}
                ////if (activecol.Trim() == Convert.ToString(refundamt))
                ////{
                ////    selqry = selqry + "having SUM(RefundAmount)>0";
                ////}
                //////if (activecol.Trim() == Convert.ToString(excessamt))
                //////{
                //////    selqry = selqry + "having SUM(RefundAmount)>0";
                //////}


                //selqry = selqry + " SELECT A.HeaderFK ,HeaderName,LedgerFK,LedgerName,p.batch_year,SUM(FeeAmount)as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,FM_HeaderMaster H,FM_LedgerMaster L,Applyn P,Degree G,Course C,Department D WHERE A.App_No = P.app_no  and g.Course_Id = c.Course_Id and g.college_code = c.college_code  and a.HeaderFK = h.HeaderPK and a.LedgerFK = l.LedgerPK and g.Dept_Code = d.Dept_Code and p.degree_code = g.degree_code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "'";
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    // selqry = selqry + " and   ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    //  selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    // selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headercode != "")
                //{
                //    selqry = selqry + "and A.HeaderFK in('" + headercode + "')";
                //}
                //if (ledgercode != "")
                //{
                //    selqry = selqry + " and LedgerFK in('" + ledgercode + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                //    }
                //}

                //selqry = selqry + "GROUP BY A.HeaderFK ,HeaderName,LedgerFK,LedgerName,p.batch_year ";
                //if (activecol.Trim() == "4")
                //{
                //    selqry = selqry + " having SUM(DeductAmout) > 0 ";
                //}
                //if (activecol.Trim() == "5")
                //{
                //    selqry = selqry + " having SUM(FromGovtAmt) > 0";
                //}
                //if (activecol.Trim() == Convert.ToString(actbal))
                //{
                //    selqry = selqry + " having SUM(BalAmount) > 0";
                //}
                //if (activecol.Trim() == Convert.ToString(actpaidtotal))
                //{
                //    selqry = selqry + " having sum(BalAmount) = 0";
                //}
                //if (activecol.Trim() == Convert.ToString(refundamt))
                //{
                //    selqry = selqry + "having SUM(RefundAmount)>0";
                //}
                ////if (activecol.Trim() == Convert.ToString(excessamt))
                ////{
                ////    selqry = selqry + "having SUM(RefundAmount)>0";
                ////}
                ////selqry = selqry + " SELECT batch_year,PayMode,HeaderFK,LedgerFK,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C,Department D WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 0 and G.college_code ='" + collegecode1 + "'";
                ////if (batch1 != "")
                ////{
                ////    selqry = selqry + "and p.Batch_Year in ('" + batch1 + "')";
                ////}
                ////if (deptdegcode != "")
                ////{
                ////    selqry = selqry + " and g.Degree_Code in ('" + deptdegcode + "')";
                ////}
                ////if (sem != "")
                ////{
                ////    selqry = selqry + "and A.FeeCategory in ('" + sem + "')";
                ////}
                ////if (stud != "")
                ////{
                ////    selqry = selqry + "and p.mode in ('" + stud + "')";
                ////}
                ////if (seatype != "")
                ////{
                ////    selqry = selqry + "and p.seattype in ('" + seatype + "')";
                ////}
                ////if (studtype != "")
                ////{
                ////    selqry = selqry + " and p.Stud_Type in ('" + studtype + "')";
                ////}
                ////if (headercode != "")
                ////{
                ////    selqry = selqry + "and HeaderFK in('" + headercode + "')";
                ////}
                ////if (ledgercode != "")
                ////{
                ////    selqry = selqry + " and LedgerFK in ('" + ledgercode + "')";
                ////}
                ////if (gettagvalue.Trim() != "" && gettagvalue.Trim() != "0")
                ////{
                ////    selqry = selqry + " and PayMode in ('" + gettagvalue + "')";
                ////}
                ////if (datewise == 1)
                ////{
                ////    if (fromdate != "" && todate != "")
                ////    {
                ////        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                ////    }
                ////}
                ////selqry = selqry + " GROUP BY PayMode,batch_year,HeaderFK,LedgerFK";
                //selqry = selqry + " SELECT p.batch_year ,PayMode,HeaderFK,LedgerFK,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C,Department D WHERE A.App_No = P.app_no  AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "'";
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    // selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    // selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    //selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headercode != "")
                //{
                //    selqry = selqry + "and HeaderFK in ('" + headercode + "')";
                //}
                //if (ledgercode != "")
                //{
                //    selqry = selqry + " and LedgerFK in ('" + ledgercode + "')";
                //}
                //if (gettagvalue.Trim() != "" && gettagvalue.Trim() != "0")
                //{
                //    selqry = selqry + " and PayMode in ('" + gettagvalue + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY p.batch_year,PayMode,HeaderFK,LedgerFK";

                //selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,h.LedgerPK,p.Batch_Year from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Degree G,Course C,Department D,FM_LedgerMaster H,FM_HeaderMaster fh WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no  and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code  and h.LedgerPK =ex.LedgerFK and ex.HeaderFK=h.HeaderFK and h.HeaderFK=fh.HeaderPK and em.App_No = a.App_No   AND P.IsConfirm = 1  and a.LedgerFK=h.LedgerPK   AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "' ";
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    // selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    // selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    //  selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headercode != "")
                //{
                //    selqry = selqry + " and Ex.HeaderFK in('" + headercode + "')";
                //}
                //if (ledgercode != "")
                //{
                //    selqry = selqry + "  and Ex.LedgerFK in('" + ledgercode + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY A.HeaderFK ,h.LedgerPK,p.Batch_Year";
                //if (activecol.Trim() == Convert.ToString(excessamt))
                //{
                //    selqry = selqry + " having SUM(Ex.Excessamt)>0 ";
                //    flag = true;
                //}
                #endregion
                #region newquery
                //detail
                selqry = selqry + " SELECT A.HeaderFK,LedgerFK, p.batch_year,SUM(FeeAmount)as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.App_No=P.App_No AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                if (batch1 != "")
                {
                    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                }
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headercode != "")
                {
                    selqry = selqry + " and a.HeaderFK in ('" + headercode + "')";
                }
                if (ledgercode != "")
                {
                    selqry = selqry + " and LedgerFK in('" + ledgercode + "')";
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                    }
                }
                selqry = selqry + "GROUP BY A.HeaderFK,LedgerFK,p.batch_year ";
                if (activecol.Trim() == "4")
                {
                    selqry = selqry + " having SUM(DeductAmout) > 0 ";
                }
                if (activecol.Trim() == "5")
                {
                    selqry = selqry + " having SUM(FromGovtAmt) > 0";
                }
                if (activecol.Trim() == Convert.ToString(actbal))
                {
                    selqry = selqry + " having SUM(BalAmount) > 0";
                }
                if (activecol.Trim() == Convert.ToString(actpaidtotal))
                {
                    selqry = selqry + " having sum(BalAmount) = 0";
                }
                if (activecol.Trim() == Convert.ToString(refundamt))
                {
                    selqry = selqry + "having SUM(RefundAmount)>0";
                }
                //paymode
                selqry = selqry + "SELECT p.batch_year ,PayMode,SUM(Debit) as total,HeaderFK,LedgerFK FROM FT_FinDailyTransaction A,Applyn P,Registration r WHERE A.App_No = P.app_no and r.App_No=p.app_no  AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                if (batch1 != "")
                {
                    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                }
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headercode != "")
                {
                    selqry = selqry + " and HeaderFK in ('" + headercode + "')";
                }
                if (ledgercode != "")
                {
                    selqry = selqry + " and LedgerFK in('" + ledgercode + "')";
                }
                if (gettagvalue.Trim() != "" && gettagvalue.Trim() != "0")
                {
                    selqry = selqry + " and PayMode in ('" + gettagvalue + "')";
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                    }
                }
                selqry = selqry + "GROUP BY p.batch_year,PayMode,HeaderFK,LedgerFK";

                //excess
                selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,p.Batch_Year from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Registration r WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no and em.App_No = a.App_No and r.App_No=p.app_no AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                if (batch1 != "")
                {
                    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                }
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headercode != "")
                {
                    selqry = selqry + " and Ex.HeaderFK in('" + headercode + "')";
                }
                if (ledgercode != "")
                {
                    selqry = selqry + "  and Ex.LedgerFK in('" + ledgercode + "')";
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                    }
                }
                selqry = selqry + "GROUP BY A.HeaderFK ,p.Batch_Year";
                if (activecol.Trim() == Convert.ToString(excessamt))
                {
                    selqry = selqry + " having SUM(Ex.Excessamt)>0 ";
                    flag = true;
                }
                selqry = selqry + "  select HeaderFK,LedgerPK,HeaderName,LedgerName from FM_HeaderMaster h,FM_LedgerMaster l where l.HeaderFK =h.HeaderPK and h.CollegeCode ='" + collegecode1 + "' order by isnull(l.priority,1000),l.ledgerName asc";

                #endregion
                #region fpbatch
                bool paymodecheck = false;
                ds = d2.select_method_wo_parameter(selqry, "Text");
                if (gettagvalue.Trim() != "")
                {
                    if (ds.Tables[1].Rows.Count > 0)
                    {
                        paymodecheck = true;
                    }
                }
                else
                {
                    paymodecheck = true;
                }

                if (flag == true)
                {
                    if (ds.Tables[0].Rows.Count > 0 && paymodecheck == true && ds.Tables[2].Rows.Count > 0)
                    {
                        flag1 = true;
                    }
                }
                else
                {
                    if (ds.Tables[0].Rows.Count > 0 && paymodecheck == true)
                    {
                        flag1 = true;
                    }
                }
                if (flag1 == true)
                {
                    loadbatchcolumns(sender, e);

                    DataView dv = new DataView();
                    fpbatch.Sheets[0].RowCount = 0;
                    fpbatch.Sheets[0].ColumnCount = 0;
                    fpbatch.CommandBar.Visible = false;
                    fpbatch.Sheets[0].AutoPostBack = true;
                    fpbatch.Sheets[0].ColumnHeader.RowCount = 2;
                    fpbatch.Sheets[0].RowHeader.Visible = false;
                    fpbatch.Sheets[0].ColumnCount = 7;
                    FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
                    darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
                    darkstyle.ForeColor = Color.White;
                    fpbatch.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
                    int check = 0;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 0].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                    fpbatch.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;

                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Header Name";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                    fpbatch.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Left;
                    fpbatch.Sheets[0].Columns[1].Visible = true;

                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Ledger Name";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 2].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                    fpbatch.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Left;
                    fpbatch.Sheets[0].Columns[2].Visible = true;

                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Batch Year";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 3].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                    fpbatch.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Center;
                    fpbatch.Sheets[0].Columns[3].Visible = true;

                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Allot";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 4].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
                    fpbatch.Sheets[0].Columns[4].HorizontalAlign = HorizontalAlign.Right;
                    fpbatch.Sheets[0].Columns[4].Visible = true;
                    if (!colord.Contains("1"))
                    {
                        fpbatch.Sheets[0].Columns[4].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpbatch.Sheets[0].Columns[4].Visible = true;
                    }
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Concession";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 5].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 5].Font.Bold = true;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 5].Font.Name = "Book Antiqua";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 5].Font.Size = FontUnit.Medium;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;
                    fpbatch.Sheets[0].Columns[5].HorizontalAlign = HorizontalAlign.Right;
                    fpbatch.Sheets[0].Columns[5].Visible = true;
                    if (!colord.Contains("2"))
                    {
                        fpbatch.Sheets[0].Columns[5].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpbatch.Sheets[0].Columns[5].Visible = true;
                    }
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Government";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 6].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 6].Font.Bold = true;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 6].Font.Name = "Book Antiqua";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 6].Font.Size = FontUnit.Medium;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;
                    fpbatch.Sheets[0].Columns[6].HorizontalAlign = HorizontalAlign.Right;
                    fpbatch.Sheets[0].Columns[6].Visible = true;
                    if (!colord.Contains("3"))
                    {
                        fpbatch.Sheets[0].Columns[6].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpbatch.Sheets[0].Columns[6].Visible = true;
                    }
                    fpbatch.Sheets[0].ColumnCount++;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Text = "Total";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("4"))
                    {
                        fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpbatch.Sheets[0].ColumnHeaderSpanModel.Add(0, fpbatch.Sheets[0].ColumnCount - 1, 2, 1);
                    fpbatch.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
                    fpbatch.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
                    fpbatch.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
                    fpbatch.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
                    fpbatch.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
                    fpbatch.Sheets[0].ColumnHeaderSpanModel.Add(0, 5, 2, 1);
                    fpbatch.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 2, 1);
                    Hashtable newhash = new Hashtable();
                    if (chkl_paid.Items.Count > 0)
                    {
                        for (int s = 0; s < chkl_paid.Items.Count; s++)
                        {
                            if (chkl_paid.Items[s].Selected == true)
                            {
                                check++;
                                fpbatch.Sheets[0].ColumnCount++;
                                newhash.Add(Convert.ToString(chkl_paid.Items[s].Value), fpbatch.Sheets[0].ColumnCount - 1);
                                fpbatch.Sheets[0].ColumnHeader.Cells[1, fpbatch.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_paid.Items[s].Text);
                                fpbatch.Sheets[0].ColumnHeader.Cells[1, fpbatch.Sheets[0].ColumnCount - 1].Tag = Convert.ToString(chkl_paid.Items[s].Value);
                                fpbatch.Sheets[0].ColumnHeader.Cells[1, fpbatch.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                                fpbatch.Sheets[0].ColumnHeader.Cells[1, fpbatch.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                fpbatch.Sheets[0].ColumnHeader.Cells[1, fpbatch.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                fpbatch.Sheets[0].ColumnHeader.Cells[1, fpbatch.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                fpbatch.Sheets[0].ColumnHeader.Cells[1, fpbatch.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                                fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                                fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = true;
                                if (!colord.Contains("5"))
                                {
                                    fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                                if (colord.Count == 0)
                                {
                                    fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = true;
                                }
                                FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
                            }
                        }
                        if (check != 0)
                        {
                            fpbatch.Sheets[0].ColumnCount++;
                            fpbatch.Sheets[0].ColumnHeader.Cells[1, fpbatch.Sheets[0].ColumnCount - 1].Text = "Total Paid";
                            fpbatch.Sheets[0].ColumnHeader.Cells[1, fpbatch.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                            fpbatch.Sheets[0].ColumnHeader.Cells[1, fpbatch.Sheets[0].ColumnCount - 1].Font.Bold = true;
                            fpbatch.Sheets[0].ColumnHeader.Cells[1, fpbatch.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                            fpbatch.Sheets[0].ColumnHeader.Cells[1, fpbatch.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                            fpbatch.Sheets[0].ColumnHeader.Cells[1, fpbatch.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                            fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                            if (!colord.Contains("5"))
                            {
                                fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = false;
                            }
                            if (colord.Count == 0)
                            {
                                fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = true;
                            }
                        }
                    }
                    if (check == 0)
                    {
                        fpbatch.Sheets[0].ColumnCount++;
                        fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Text = "Paid";
                        fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                        fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Font.Bold = true;
                        fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                        fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                        fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                        fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                        fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = true;
                        if (!colord.Contains("5"))
                        {
                            fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = false;
                        }
                        if (colord.Count == 0)
                        {
                            fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = true;
                        }
                        fpbatch.Sheets[0].ColumnHeaderSpanModel.Add(0, fpbatch.Sheets[0].ColumnCount - 1, 2, 1);
                    }
                    else
                    {
                        fpbatch.Sheets[0].ColumnHeaderSpanModel.Add(0, 8, 1, check + 1);
                        fpbatch.Sheets[0].ColumnHeader.Cells[0, 8].Text = "Paid";
                        fpbatch.Sheets[0].ColumnHeader.Cells[0, 8].ForeColor = ColorTranslator.FromHtml("#000000");
                        fpbatch.Sheets[0].ColumnHeader.Cells[0, 8].Font.Bold = true;
                        fpbatch.Sheets[0].ColumnHeader.Cells[0, 8].Font.Name = "Book Antiqua";
                        fpbatch.Sheets[0].ColumnHeader.Cells[0, 8].Font.Size = FontUnit.Medium;
                        fpbatch.Sheets[0].ColumnHeader.Cells[0, 8].HorizontalAlign = HorizontalAlign.Center;
                        fpbatch.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;
                        if (!colord.Contains("5"))
                        {
                            fpbatch.Sheets[0].Columns[6].Visible = false;
                        }
                        if (colord.Count == 0)
                        {
                            fpbatch.Sheets[0].Columns[6].Visible = true;
                        }
                    }
                    fpbatch.Sheets[0].ColumnCount++;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Text = "Balance";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("6"))
                    {
                        fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpbatch.Sheets[0].ColumnHeaderSpanModel.Add(0, fpbatch.Sheets[0].ColumnCount - 1, 2, 1);


                    fpbatch.Sheets[0].ColumnCount++;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Text = "Refund Amount";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("7"))
                    {
                        fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpbatch.Sheets[0].ColumnHeaderSpanModel.Add(0, fpbatch.Sheets[0].ColumnCount - 1, 2, 1);

                    fpbatch.Sheets[0].ColumnCount++;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Text = "Excess Amount";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("8"))
                    {
                        fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpbatch.Sheets[0].ColumnHeaderSpanModel.Add(0, fpbatch.Sheets[0].ColumnCount - 1, 2, 1);

                    fpbatch.Sheets[0].ColumnCount++;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Text = "Fine Amount";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpbatch.Sheets[0].ColumnHeader.Cells[0, fpbatch.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("9"))
                    {
                        fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpbatch.Sheets[0].ColumnHeaderSpanModel.Add(0, fpbatch.Sheets[0].ColumnCount - 1, 2, 1);
                #endregion
                    #region fpbatch value
                    string totalvalue = "";
                    double bal = 0;
                    for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                    {
                        fpbatch.Sheets[0].Rows.Count = ds.Tables[0].Rows.Count;
                        fpbatch.Sheets[0].Cells[i, 0].Text = Convert.ToString(i + 1);
                        ds.Tables[3].DefaultView.RowFilter = "LedgerPK='" + Convert.ToString(ds.Tables[0].Rows[i]["LedgerFK"]) + "'";
                        dvhead = ds.Tables[3].DefaultView;
                        if (Convert.ToString(dvhead) != "" && dvhead != null)
                        {
                            fpbatch.Sheets[0].Cells[i, 1].Text = Convert.ToString(dvhead[0]["Headername"]);
                            fpbatch.Sheets[0].Cells[i, 1].Tag = Convert.ToString(dvhead[0]["HeaderFK"]);
                            fpbatch.Sheets[0].Cells[i, 2].Text = Convert.ToString(dvhead[0]["Ledgername"]);
                            fpbatch.Sheets[0].Cells[i, 2].Tag = Convert.ToString(dvhead[0]["LedgerPK"]);
                        }
                        fpbatch.Sheets[0].Cells[i, 3].Text = Convert.ToString(ds.Tables[0].Rows[i]["batch_year"].ToString());
                        fpbatch.Sheets[0].Cells[i, 3].Tag = Convert.ToString(ds.Tables[0].Rows[i]["batch_year"].ToString());
                        allot = Convert.ToString(ds.Tables[0].Rows[i]["Allot"]);
                        if (allot != "" && allot != null)
                        {
                            fpbatch.Sheets[0].Cells[i, 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(allot), 2));
                        }
                        else
                        {
                            fpbatch.Sheets[0].Cells[i, 4].Text = "0";
                        }
                        consession = Convert.ToString(ds.Tables[0].Rows[i]["consustion"]);
                        if (consession != "" && consession != null)
                        {
                            fpbatch.Sheets[0].Cells[i, 5].Text = Convert.ToString(Math.Round(Convert.ToDouble(consession), 2));
                        }
                        else
                        {
                            fpbatch.Sheets[0].Cells[i, 5].Text = "0";
                        }
                        // fpbatch.Sheets[0].Cells[i, 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Allot"]), 2));
                        //  fpbatch.Sheets[0].Cells[i, 5].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Consustion"]), 2));
                        //  FpSpread1.Sheets[0].Cells[i, 4].Text = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
                        string val = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
                        string value = "";
                        if (val == "" || val == null)
                        {
                            value = "0";
                        }
                        else
                        {
                            value = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
                        }
                        fpbatch.Sheets[0].Cells[i, 6].Text = value;
                        totalvalue = Convert.ToString(ds.Tables[0].Rows[i]["Total"]);
                        fpbatch.Sheets[0].Cells[i, 7].Text = Convert.ToString(Math.Round(Convert.ToDouble(totalvalue), 2));
                        // fpbatch.Sheets[0].Cells[i, 7].Text = Convert.ToString(ds.Tables[0].Rows[i]["Total"].ToString());
                        string paidamt = "";
                        paidamt = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
                        if (check == 0)
                        {
                            if (paidamt == "" || paidamt == null)
                            {
                                fpbatch.Sheets[0].Cells[i, fpbatch.Sheets[0].ColumnCount - 5].Text = "0";
                            }
                            else
                            {
                                fpbatch.Sheets[0].Cells[i, fpbatch.Sheets[0].ColumnCount - 5].Text = paidamt;
                            }
                        }
                        if (check != 0)
                        {
                            //if (paidamt == "" || paidamt == null)
                            //{
                            //    fpbatch.Sheets[0].Cells[i, fpbatch.Sheets[0].ColumnCount - 2].Text = "0";
                            //}
                            //else
                            //{
                            //    fpbatch.Sheets[0].Cells[i, fpbatch.Sheets[0].ColumnCount - 2].Text = paidamt;
                            //}
                            // fpledger.Sheets[0].Cells[i, fpledger.Sheets[0].ColumnCount - 2].Text = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
                        }


                        //  FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Paid"]), 2));
                        //fpbatch.Sheets[0].Cells[i, fpbatch.Sheets[0].ColumnCount - 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Balance"]), 2));

                        fpbatch.Sheets[0].Cells[i, fpbatch.Sheets[0].ColumnCount - 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["RefundAmount"]), 2));
                        DataView dvex = new DataView();
                        if (ds.Tables[2].Rows.Count > 0)
                        {
                            ds.Tables[2].DefaultView.RowFilter = "Batch_Year='" + Convert.ToString(ds.Tables[0].Rows[i]["Batch_Year"]) + "'";
                            dvex = ds.Tables[2].DefaultView;
                            if (dvex.Count > 0 && dvex.Count != null)
                            {
                                fpbatch.Sheets[0].Cells[i, fpbatch.Sheets[0].ColumnCount - 2].Text = Convert.ToString(dvex[0]["ExcessAmount"]);
                            }
                        }
                        else
                        {
                            fpbatch.Sheets[0].Cells[i, fpbatch.Sheets[0].ColumnCount - 2].Text = "0";
                        }
                        //fpbatch.Sheets[0].Cells[i, fpbatch.Sheets[0].ColumnCount - 1].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["RefundAmount"]), 2));

                        double totamount = 0;
                        double fnlamount = 0;
                        if (ds.Tables[1].Rows.Count > 0)
                        {
                            if (chkl_paid.Items.Count > 0)
                            {
                                for (int pay = 0; pay < chkl_paid.Items.Count; pay++)
                                {
                                    if (chkl_paid.Items[pay].Selected == true)
                                    {
                                        ds.Tables[1].DefaultView.RowFilter = "batch_year='" + Convert.ToString(ds.Tables[0].Rows[i]["batch_year"].ToString()) + "' and PayMode='" + Convert.ToString(chkl_paid.Items[pay].Value) + "' and HeaderFK ='" + Convert.ToString(ds.Tables[0].Rows[i]["HeaderFK"]) + "' and LedgerFK ='" + Convert.ToString(ds.Tables[0].Rows[i]["LedgerFK"]) + "'";
                                        dv = ds.Tables[1].DefaultView;
                                        if (dv.Count == 0 || dv.Count == null)
                                        {
                                            int count = 0;
                                            int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
                                            fpbatch.Sheets[0].Cells[i, colnew].Text = "0";
                                        }
                                        if (dv.Count > 0)
                                        {
                                            int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
                                            fpbatch.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv[0]["total"]);
                                            totamount = Convert.ToDouble(dv[0]["total"]);
                                            if (totamount != 0)
                                            {
                                                fnlamount = fnlamount + totamount;
                                            }
                                        }
                                    }
                                }
                                if (check != 0)
                                    fpbatch.Sheets[0].Cells[i, fpbatch.Sheets[0].ColumnCount - 5].Text = Convert.ToString(fnlamount);
                                if (totalvalue != "" && totalvalue != null)
                                {
                                    bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(fnlamount);
                                    fpbatch.Sheets[0].Cells[i, fpbatch.Sheets[0].ColumnCount - 4].Text = Convert.ToString(bal);
                                    if (Convert.ToDouble(bal) == 0)
                                    {
                                        fpbatch.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#F08080");
                                    }
                                    if (Convert.ToDouble(bal) != 0)
                                    {
                                        fpbatch.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#90EE90");
                                    }
                                }
                            }
                        }

                    }
                    fpbatch.Sheets[0].PageSize = ds.Tables[0].Rows.Count + 1;
                    fpbatch.Sheets[0].Rows.Count++;
                    fpbatch.Sheets[0].Cells[fpbatch.Sheets[0].Rows.Count - 1, 0].Text = "Grand Total";
                    double hedval = 0;
                    for (int j = 4; j < fpbatch.Sheets[0].Columns.Count; j++)
                    {
                        for (int i = 0; i < fpbatch.Rows.Count - 1; i++)
                        {
                            string values = Convert.ToString(fpbatch.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
                            if (values != "0" && values != "-" && values != "")
                            {
                                if (hedval == 0)
                                {
                                    hedval = Convert.ToDouble(fpbatch.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
                                }
                                else
                                {
                                    hedval = hedval + Convert.ToDouble(fpbatch.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
                                }
                            }
                        }
                        fpbatch.Sheets[0].Cells[fpbatch.Sheets[0].Rows.Count - 1, j].Text = Convert.ToString(hedval);
                        hedval = 0;
                    }
                    fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = false;
                    #endregion
                    #region visible
                    batch.Visible = true;
                    divbatch.Visible = true;
                    fpbatch.Visible = true;
                    // btn_fpbat.Visible = true;
                    lbl_bat.Visible = true;
                    lbl_bat.Text = "->Header(" + colhedername + ")->Ledger(" + colledname + ")->Batch";
                    rptprint.Visible = true;
                    rptprint.Attributes.Add("Style", "margin-top:-360px; margin-left:10px;");
                    // pnl_batchcolorder.Visible = true;
                    // pnl_batcolorder.Visible = true;
                    // loadbatchcolorder();
                    ViewState["batch"] = 2;
                    fpbatch.SaveChanges();
                    rptprint.Visible = false;
                    #endregion
                }
                else
                {
                    fpbatch.Visible = false;
                    divbatch.Visible = false;
                    lbl_bat.Visible = false;
                    //pnl_batchcolorder.Visible = false;
                    imgdiv2.Visible = true;
                    lbl_alert.Visible = true;
                    lbl_alert.Text = "No Record Found";
                }
            }
        }
        catch { }
    }
    #endregion

    #region batch
    public void batchcellclicks(object sender, EventArgs e)
    {
        try
        {
            if (degreecellclick == true)
            {
                #region getvalue
                //  btn_fpdeg.Visible = true;
                string batch1 = "";
                string degcourseid = "";
                string deptdegcode = "";
                string sem = "";
                string sec = "";
                string stud = "";
                string seatype = "";
                string studtype = "";
                string paid = "";
                string hedcount = "";
                string ledcount = "";
                string batcount = "";
                string allot = "";
                string consession = "";
                string Finyearvalue = "";
                divdep.Visible = false;
                divsema.Visible = false;
                div7.Visible = false;
                // batch1 = Convert.ToString(getCblSelectedValue(cbl_batch));
                degcourseid = Convert.ToString(getCblSelectedValue(cbl_degree));
                deptdegcode = Convert.ToString(getCblSelectedValue(cbl_dept));
                sem = Convert.ToString(getCblSelectedValue(cbl_sem));
                sec = Convert.ToString(getCblSelectedValue(cbl_sect));
                stud = Convert.ToString(getCblSelectedValue(cbl_stud));
                seatype = Convert.ToString(getCblSelectedValue(cbl_seat));
                studtype = Convert.ToString(getCblSelectedValue(cbl_studtype));
                paid = Convert.ToString(getCblSelectedValue(chkl_paid));
                // headervalue = Convert.ToString(getCblSelectedValue(chkl_studhed));
                //ledgercode = Convert.ToString(getCblSelectedValue(chkl_studled));
                Finyearvalue = Convert.ToString(getCblSelectedValue(chklsfyear));


                string fromdate = "";
                string todate = "";
                int datewise = 0;
                if (chk_datewise.Checked == true)
                {
                    datewise = 1;
                    if (datewise == 1)
                    {
                        fromdate = txt_fromdate.Text;
                        todate = txt_todate.Text;
                        if (fromdate != "" && todate != "")
                        {
                            string[] frdate = fromdate.Split('/');
                            if (frdate.Length == 3)
                            {
                                fromdate = frdate[1].ToString() + "/" + frdate[0].ToString() + "/" + frdate[2].ToString();
                            }
                            string[] tdate = todate.Split('/');
                            if (tdate.Length == 3)
                            {
                                todate = tdate[1].ToString() + "/" + tdate[0].ToString() + "/" + tdate[2].ToString();
                            }
                        }
                    }
                }
                //divbatch.Visible = false;
                //divdegree.Visible = false;              
                lbl_dep.Visible = false;
                lbl_dep.Text = "";
                divdept.Visible = false;
                lbl_sem.Visible = false; ;
                lbl_sem.Text = "";
                divsem.Visible = false;
                //pnl_deptcolord.Visible = false;
                //pnl_deptcolorder.Visible = false;
                //pnl_semcolord.Visible = false;
                //pnl_semcolorder.Visible = false;
                //pnl_studcolord.Visible = false;
                //pnl_studcolorder.Visible = false;
                divstudcell.Visible = false;
                fpstudcell.Visible = false;
                lbl_semcell.Text = "";
                lbl_semcell.Visible = false;

                ArrayList ar = new ArrayList();
                string selqry = "";
                string activerow = fpbatch.ActiveSheetView.ActiveRow.ToString();
                string activecol = fpbatch.ActiveSheetView.ActiveColumn.ToString();

                int actnew = 0;
                int actbal = 0;
                int actpaidtotal = 0;
                int refundamt = 0;
                int excessamt = 0;
                int fineamt = 0;
                if (activecol.Trim() != "")
                {
                    actnew = Convert.ToInt32(activecol);
                    actpaidtotal = Convert.ToInt32(fpbatch.Sheets[0].ColumnCount - 5);
                    actbal = Convert.ToInt32(fpbatch.Sheets[0].ColumnCount - 4);
                    refundamt = Convert.ToInt32(fpbatch.Sheets[0].ColumnCount - 3);
                    excessamt = Convert.ToInt32(fpbatch.Sheets[0].ColumnCount - 2);
                    fineamt = Convert.ToInt32(fpbatch.Sheets[0].ColumnCount - 1);
                }

                string gettagvalue = "";
                if (actnew > 7)
                {
                    gettagvalue = Convert.ToString(fpbatch.Sheets[0].ColumnHeader.Cells[1, actnew].Tag);
                }

                int act = Convert.ToInt32(activerow);
                if (act == fpbatch.Sheets[0].Rows.Count - 1)
                {
                    for (int i = 0; i < fpbatch.Sheets[0].Rows.Count - 1; i++)
                    {
                        if ((hedcount == "") && (ledcount == "") && (batcount == ""))
                        {
                            hedcount = Convert.ToString(fpbatch.Sheets[0].Cells[Convert.ToInt32(i), 1].Tag);
                            ledcount = Convert.ToString(fpbatch.Sheets[0].Cells[Convert.ToInt32(i), 2].Tag);
                            ar.Add(Convert.ToString(fpbatch.Sheets[0].Cells[Convert.ToInt32(i), 3].Tag));
                            batcount = Convert.ToString(fpbatch.Sheets[0].Cells[Convert.ToInt32(i), 3].Tag);


                        }
                        else
                        {
                            hedcount = hedcount + "','" + "" + Convert.ToString(fpbatch.Sheets[0].Cells[Convert.ToInt32(i), 1].Tag) + "";
                            ledcount = ledcount + "','" + "" + Convert.ToString(fpbatch.Sheets[0].Cells[Convert.ToInt32(i), 2].Tag) + "";
                            batcount = batcount + "','" + "" + Convert.ToString(fpbatch.Sheets[0].Cells[Convert.ToInt32(i), 3].Tag) + "";
                            if (!ar.Contains(batcount))
                            {
                                ar.Add(Convert.ToString(fpbatch.Sheets[0].Cells[Convert.ToInt32(i), 3].Tag));
                                batcount = batcount + "','" + "" + Convert.ToString(fpbatch.Sheets[0].Cells[Convert.ToInt32(i), 3].Tag) + "";
                            }

                        }


                    }
                    ar.Clear();
                }

                string headercode = Convert.ToString(fpbatch.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Tag);
                string ledgercode = Convert.ToString(fpbatch.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Tag);
                string batchyr = Convert.ToString(fpbatch.Sheets[0].Cells[Convert.ToInt32(activerow), 3].Tag);
                if ((hedcount != "") && (ledcount != "") && (batcount != ""))
                {
                    headercode = hedcount;
                    ledgercode = ledcount;
                    batchyr = batcount;
                }

                if (fpbatch.Sheets[0].Rows.Count > 0)
                {
                    colbatname = Convert.ToString(fpbatch.Sheets[0].ColumnHeader.Cells[0, Convert.ToInt32(activecol)].Text);
                    if (colbatname.Trim() == "")
                    {
                        colbatname = Convert.ToString(fpbatch.Sheets[0].ColumnHeader.Cells[1, Convert.ToInt32(activecol)].Text);
                    }
                }
                #endregion
                #region query
                Boolean flag = false;
                Boolean flag1 = false;
                ////selqry = "SELECT a.HeaderFK,HeaderName,LedgerName,LedgerFK,batch_year,Course_Name DegreeName,G.Course_Id,SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,FM_HeaderMaster H,FM_LedgerMaster L,Applyn P,Degree G,Course C,Department D WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and a.HeaderFK = h.HeaderPK and a.LedgerFK = l.LedgerPK and h.HeaderPK = l.LedgerPK  and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 0  and G.college_code ='" + collegecode1 + "'";
                ////if (degcourseid != "")
                ////{
                ////    selqry = selqry + " and c.Course_Id in ('" + degcourseid + "')";
                ////}
                ////if (batch1 != "")
                ////{
                ////    selqry = selqry + "and p.Batch_Year in ('" + batch1 + "')";
                ////}

                ////if (deptdegcode != "")
                ////{
                ////    selqry = selqry + " and g.Degree_Code in ('" + deptdegcode + "')";
                ////}

                ////if (sem != "")
                ////{
                ////    selqry = selqry + "and A.FeeCategory in ('" + sem + "')";
                ////}
                ////if (stud != "")
                ////{
                ////    selqry = selqry + "and p.mode in ('" + stud + "')";
                ////}
                ////if (seatype != "")
                ////{
                ////    selqry = selqry + "and p.seattype in ('" + seatype + "')";
                ////}
                ////if (studtype != "")
                ////{
                ////    selqry = selqry + " and p.Stud_Type in ('" + studtype + "')";
                ////}
                ////if (headercode != "")
                ////{
                ////    selqry = selqry + "and A.HeaderFK in ('" + headercode + "')";
                ////}
                ////if (ledgercode != "")
                ////{
                ////    selqry = selqry + " and LedgerFK in ('" + ledgercode + "')";
                ////}
                ////if (batchyr != "")
                ////{
                ////    selqry = selqry + " and batch_year in('" + batchyr + "')";
                ////}
                ////if (datewise == 1)
                ////{
                ////    if (fromdate != "" && todate != "")
                ////    {
                ////        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                ////    }
                ////}

                ////selqry = selqry + "GROUP BY a.HeaderFK,HeaderName,LedgerName,LedgerFK,batch_year, G.Course_Id,Course_Name";
                ////if (activecol.Trim() == "5")
                ////{
                ////    selqry = selqry + " having SUM(DeductAmout) > 0 ";
                ////}
                ////if (activecol.Trim() == "6")
                ////{
                ////    selqry = selqry + " having SUM(FromGovtAmt) > 0";
                ////}
                ////if (activecol.Trim() == Convert.ToString(actbal))
                ////{
                ////    selqry = selqry + " having SUM(BalAmount) > 0";
                ////}
                ////if (activecol.Trim() == Convert.ToString(actpaidtotal))
                ////{
                ////    selqry = selqry + " having sum(BalAmount) = 0";
                ////}
                ////if (activecol.Trim() == Convert.ToString(refundamt))
                ////{
                ////    selqry = selqry + "having SUM(RefundAmount)>0";
                ////}
                //////if (activecol.Trim() == Convert.ToString(excessamt))
                //////{
                //////    selqry = selqry + "having SUM(RefundAmount)>0";
                ////}
                //selqry = selqry + " SELECT a.HeaderFK,HeaderName,LedgerName,LedgerFK,p.batch_year,Course_Name as DegreeName,G.Course_Id,SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,FM_HeaderMaster H,FM_LedgerMaster L,Applyn P,Degree G,Course C,Department D WHERE A.App_No = P.app_no and g.Course_Id = c.Course_Id and g.college_code = c.college_code  and a.HeaderFK = h.HeaderPK and a.LedgerFK = l.LedgerPK and h.HeaderPK = l.Headerfk   and g.Dept_Code = d.Dept_Code and p.degree_code = g.degree_code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "'";
                //if (degcourseid != "")
                //{
                //    selqry = selqry + " and c.Course_Id in ('" + degcourseid + "')";
                //}
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    //selqry = selqry + " and   ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    //selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    //selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headercode != "")
                //{
                //    selqry = selqry + "and A.HeaderFK in ('" + headercode + "')";
                //}
                //if (ledgercode != "")
                //{
                //    selqry = selqry + " and LedgerFK in ('" + ledgercode + "')";
                //}
                //if (batchyr != "")
                //{
                //    selqry = selqry + " and p.batch_year in('" + batchyr + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                //    }
                //}

                //selqry = selqry + "GROUP BY a.HeaderFK,HeaderName,LedgerName,LedgerFK,p.batch_year,G.Course_Id,Course_Name  ";
                //if (activecol.Trim() == "5")
                //{
                //    selqry = selqry + " having SUM(DeductAmout) > 0 ";
                //}
                //if (activecol.Trim() == "6")
                //{
                //    selqry = selqry + " having SUM(FromGovtAmt) > 0";
                //}
                //if (activecol.Trim() == Convert.ToString(actbal))
                //{
                //    selqry = selqry + " having SUM(BalAmount) > 0";
                //}
                //if (activecol.Trim() == Convert.ToString(actpaidtotal))
                //{
                //    selqry = selqry + " having sum(BalAmount) = 0";
                //}
                //if (activecol.Trim() == Convert.ToString(refundamt))
                //{
                //    selqry = selqry + "having SUM(RefundAmount)>0";
                //}
                ////if (activecol.Trim() == Convert.ToString(excessamt))
                ////{
                ////    selqry = selqry + "having SUM(RefundAmount)>0";
                ////}
                ////selqry = selqry + " SELECT a.HeaderFK,LedgerFK,batch_year,Course_Name,G.Course_Id,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C,Department D WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 0 and G.college_code ='" + collegecode1 + "'";
                ////if (degcourseid != "")
                ////{
                ////    selqry = selqry + " and c.Course_Id in ('" + degcourseid + "')";
                ////}
                ////if (batch1 != "")
                ////{
                ////    selqry = selqry + "and p.Batch_Year in ('" + batch1 + "')";
                ////}
                ////if (deptdegcode != "")
                ////{
                ////    selqry = selqry + " and g.Degree_Code in ('" + deptdegcode + "')";
                ////}
                ////if (sem != "")
                ////{
                ////    selqry = selqry + "and A.FeeCategory in ('" + sem + "')";
                ////}
                ////if (stud != "")
                ////{
                ////    selqry = selqry + "and p.mode in ('" + stud + "')";
                ////}
                ////if (seatype != "")
                ////{
                ////    selqry = selqry + "and p.seattype in ('" + seatype + "')";
                ////}
                ////if (studtype != "")
                ////{
                ////    selqry = selqry + " and p.Stud_Type in ('" + studtype + "')";
                ////}
                ////if (headercode != "")
                ////{
                ////    selqry = selqry + "and A.HeaderFK in ('" + headercode + "')";
                ////}
                ////if (ledgercode != "")
                ////{
                ////    selqry = selqry + " and LedgerFK in ('" + ledgercode + "')";
                ////}
                ////if (batchyr != "")
                ////{
                ////    selqry = selqry + " and batch_year in('" + batchyr + "')";
                ////}
                ////if (gettagvalue.Trim() != "" && gettagvalue.Trim() != "0")
                ////{
                ////    selqry = selqry + " and PayMode in ('" + gettagvalue + "')";
                ////}
                ////if (datewise == 1)
                ////{
                ////    if (fromdate != "" && todate != "")
                ////    {
                ////        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                ////    }
                ////}
                ////selqry = selqry + " GROUP BY a.HeaderFK,LedgerFK,batch_year, G.Course_Id,Course_Name,PayMode";
                //selqry = selqry + " SELECT a.HeaderFK,LedgerFK,p.batch_year, Course_Name,G.Course_Id,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C,Department D WHERE A.App_No = P.app_no  AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "'";
                //if (degcourseid != "")
                //{
                //    selqry = selqry + " and c.Course_Id in ('" + degcourseid + "')";
                //}

                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    // selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    //  selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    //  selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    //selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headercode != "")
                //{
                //    selqry = selqry + "and HeaderFK in ('" + headercode + "')";
                //}
                //if (ledgercode != "")
                //{
                //    selqry = selqry + " and LedgerFK in ('" + ledgercode + "')";
                //}
                //if (batchyr != "")
                //{
                //    selqry = selqry + " and p.batch_year in('" + batchyr + "')";
                //}
                //if (gettagvalue.Trim() != "" && gettagvalue.Trim() != "0")
                //{
                //    selqry = selqry + " and PayMode in ('" + gettagvalue + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY a.HeaderFK,LedgerFK,p.batch_year, G.Course_Id,Course_Name,PayMode ";

                //selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,h.LedgerPK,p.Batch_Year,C.Course_Id from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Degree G,Course C,Department D,FM_LedgerMaster H,FM_HeaderMaster fh WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no  and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code  and h.LedgerPK =ex.LedgerFK and ex.HeaderFK=h.HeaderFK and h.HeaderFK=fh.HeaderPK and em.App_No = a.App_No   AND P.IsConfirm = 1  and a.LedgerFK=h.LedgerPK   AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "' ";
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    // selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    //selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    //selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    //selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headercode != "")
                //{
                //    selqry = selqry + " and Ex.HeaderFK in('" + headercode + "')";
                //}
                //if (ledgercode != "")
                //{
                //    selqry = selqry + "  and Ex.LedgerFK in('" + ledgercode + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                //    }
                //}
                //selqry = selqry + " GROUP BY A.HeaderFK ,h.LedgerPK,p.Batch_Year ,C.Course_Id";
                //if (activecol.Trim() == Convert.ToString(excessamt))
                //{
                //    selqry = selqry + " having SUM(Ex.Excessamt)>0 ";
                //    flag = true;
                //}
                #endregion

                #region query
                selqry = selqry + "  SELECT A.HeaderFK,LedgerFK,Course_Name DegreeName,G.Course_Id,p.batch_year,SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Degree G,Course C WHERE A.App_No = P.app_no  and g.Course_Id = c.Course_Id and g.college_code = c.college_code  and p.degree_code = g.degree_code  AND P.IsConfirm = 1 AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                if (degcourseid != "")
                {
                    selqry = selqry + " and c.Course_Id in ('" + degcourseid + "')";
                }
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headercode != "")
                {
                    selqry = selqry + " and a.HeaderFK in ('" + headercode + "')";
                }
                if (ledgercode != "")
                {
                    selqry = selqry + " and LedgerFK in('" + ledgercode + "')";
                }
                if (batchyr != "")
                {
                    selqry = selqry + " and p.batch_year in('" + batchyr + "')";
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                    }
                }
                selqry = selqry + "GROUP BY A.HeaderFK,LedgerFK,G.Course_Id,Course_Name,p.batch_year  ";
                if (activecol.Trim() == "5")
                {
                    selqry = selqry + " having SUM(DeductAmout) > 0 ";
                }
                if (activecol.Trim() == "6")
                {
                    selqry = selqry + " having SUM(FromGovtAmt) > 0";
                }
                if (activecol.Trim() == Convert.ToString(actbal))
                {
                    selqry = selqry + " having SUM(BalAmount) > 0";
                }
                if (activecol.Trim() == Convert.ToString(actpaidtotal))
                {
                    selqry = selqry + " having sum(BalAmount) = 0";
                }
                if (activecol.Trim() == Convert.ToString(refundamt))
                {
                    selqry = selqry + "having SUM(RefundAmount)>0";
                }
                //paymode
                selqry = selqry + "  SELECT A.HeaderFK,LedgerFK,p.batch_year, Course_Name,G.Course_Id,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code  AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and g.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                if (degcourseid != "")
                {
                    selqry = selqry + " and c.Course_Id in ('" + degcourseid + "')";
                }
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headercode != "")
                {
                    selqry = selqry + " and HeaderFK in ('" + headercode + "')";
                }
                if (ledgercode != "")
                {
                    selqry = selqry + " and LedgerFK in('" + ledgercode + "')";
                }
                if (batchyr != "")
                {
                    selqry = selqry + " and p.batch_year in('" + batchyr + "')";
                }
                if (gettagvalue.Trim() != "" && gettagvalue.Trim() != "0")
                {
                    selqry = selqry + " and PayMode in ('" + gettagvalue + "')";
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                    }
                }
                selqry = selqry + "GROUP BY A.HeaderFK,LedgerFK,p.batch_year,G.Course_Id,Course_Name,PayMode ";
                //excess
                selqry = selqry + "  select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,a.LedgerFK,p.Batch_Year,C.Course_Id from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Degree G,Course C WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no  and g.Course_Id = c.Course_Id and g.college_code = c.college_code  and em.App_No = a.App_No   AND P.IsConfirm = 1  AND Admission_Status = 1 AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headercode != "")
                {
                    selqry = selqry + " and Ex.HeaderFK in('" + headercode + "')";
                }
                if (ledgercode != "")
                {
                    selqry = selqry + "  and Ex.LedgerFK in('" + ledgercode + "')";
                }
                if (batchyr != "")
                {
                    selqry = selqry + " and p.batch_year in('" + batchyr + "')";
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                    }
                }
                selqry = selqry + "GROUP BY A.HeaderFK ,A.LedgerFK,p.Batch_Year ,C.Course_Id";
                if (activecol.Trim() == Convert.ToString(excessamt))
                {
                    selqry = selqry + " having SUM(Ex.Excessamt)>0 ";
                    flag = true;
                }
                selqry = selqry + "  select HeaderFK,LedgerPK,HeaderName,LedgerName from FM_HeaderMaster h,FM_LedgerMaster l where l.HeaderFK =h.HeaderPK and h.CollegeCode ='" + collegecode1 + "' order by isnull(l.priority,1000),l.ledgerName asc";
                #endregion
                #region  design
                bool paymodecheck = false;
                ds = d2.select_method_wo_parameter(selqry, "Text");
                if (gettagvalue.Trim() != "")
                {
                    if (ds.Tables[1].Rows.Count > 0)
                    {
                        paymodecheck = true;
                    }
                }
                else
                {
                    paymodecheck = true;
                }

                string excessvalue = "";
                if (flag == true)
                {
                    if (ds.Tables[0].Rows.Count > 0 && paymodecheck == true && ds.Tables[2].Rows.Count > 0)
                    {
                        flag1 = true;
                    }
                }
                else
                {
                    if (ds.Tables[0].Rows.Count > 0 && paymodecheck == true)
                    {
                        flag1 = true;
                    }
                }
                if (flag1 == true)
                {
                    loaddegreecolumns(sender, e);
                    DataView dv = new DataView();
                    fpdegree.Sheets[0].RowCount = 0;
                    fpdegree.Sheets[0].ColumnCount = 0;
                    fpdegree.CommandBar.Visible = false;
                    fpdegree.Sheets[0].AutoPostBack = true;
                    fpdegree.Sheets[0].ColumnHeader.RowCount = 2;
                    fpdegree.Sheets[0].RowHeader.Visible = false;
                    fpdegree.Sheets[0].ColumnCount = 8;
                    FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
                    darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
                    darkstyle.ForeColor = Color.White;
                    fpdegree.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
                    int countval = 0;

                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 0].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                    fpdegree.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;

                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Header Name";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                    fpdegree.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Left;
                    fpdegree.Sheets[0].Columns[1].Visible = true;

                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Ledger Name";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 2].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                    fpdegree.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Left;
                    fpdegree.Sheets[0].Columns[2].Visible = true;

                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Batch Year";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 3].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                    fpdegree.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Center;
                    fpdegree.Sheets[0].Columns[3].Visible = true;

                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 4].Text = " Degree Name";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 4].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
                    fpdegree.Sheets[0].Columns[4].HorizontalAlign = HorizontalAlign.Left;
                    fpdegree.Sheets[0].Columns[4].Visible = true;

                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Allot";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 5].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 5].Font.Bold = true;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 5].Font.Name = "Book Antiqua";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 5].Font.Size = FontUnit.Medium;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;
                    fpdegree.Sheets[0].Columns[5].HorizontalAlign = HorizontalAlign.Right;

                    fpdegree.Sheets[0].Columns[5].Visible = true;
                    if (!colord.Contains("1"))
                    {
                        fpdegree.Sheets[0].Columns[5].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpdegree.Sheets[0].Columns[5].Visible = true;
                    }
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Consustion";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 6].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 6].Font.Bold = true;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 6].Font.Name = "Book Antiqua";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 6].Font.Size = FontUnit.Medium;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;
                    fpdegree.Sheets[0].Columns[6].HorizontalAlign = HorizontalAlign.Right;
                    fpdegree.Sheets[0].Columns[6].Visible = true;
                    if (!colord.Contains("2"))
                    {
                        fpdegree.Sheets[0].Columns[6].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpdegree.Sheets[0].Columns[6].Visible = true;
                    }
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 7].Text = "Government";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 7].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 7].Font.Bold = true;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 7].Font.Name = "Book Antiqua";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 7].Font.Size = FontUnit.Medium;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, 7].HorizontalAlign = HorizontalAlign.Center;
                    fpdegree.Sheets[0].Columns[7].HorizontalAlign = HorizontalAlign.Right;
                    fpdegree.Sheets[0].Columns[7].Visible = true;
                    if (!colord.Contains("3"))
                    {
                        fpdegree.Sheets[0].Columns[7].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpdegree.Sheets[0].Columns[7].Visible = true;
                    }


                    fpdegree.Sheets[0].ColumnCount++;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Text = "Total";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = true;
                    fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("4"))
                    {
                        fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpdegree.Sheets[0].ColumnHeaderSpanModel.Add(0, fpdegree.Sheets[0].ColumnCount - 1, 2, 1);

                    fpdegree.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
                    fpdegree.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
                    fpdegree.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
                    fpdegree.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
                    fpdegree.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
                    fpdegree.Sheets[0].ColumnHeaderSpanModel.Add(0, 5, 2, 1);
                    fpdegree.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 2, 1);
                    fpdegree.Sheets[0].ColumnHeaderSpanModel.Add(0, 7, 2, 1);
                    Hashtable newhash = new Hashtable();
                    if (chkl_paid.Items.Count > 0)
                    {
                        for (int s = 0; s < chkl_paid.Items.Count; s++)
                        {
                            if (chkl_paid.Items[s].Selected == true)
                            {
                                countval++;
                                fpdegree.Sheets[0].ColumnCount++;
                                newhash.Add(Convert.ToString(chkl_paid.Items[s].Value), fpdegree.Sheets[0].ColumnCount - 1);
                                fpdegree.Sheets[0].ColumnHeader.Cells[1, fpdegree.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_paid.Items[s].Text);
                                fpdegree.Sheets[0].ColumnHeader.Cells[1, fpdegree.Sheets[0].ColumnCount - 1].Tag = Convert.ToString(chkl_paid.Items[s].Value);
                                fpdegree.Sheets[0].ColumnHeader.Cells[1, fpdegree.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                                fpdegree.Sheets[0].ColumnHeader.Cells[1, fpdegree.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                fpdegree.Sheets[0].ColumnHeader.Cells[1, fpdegree.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                fpdegree.Sheets[0].ColumnHeader.Cells[1, fpdegree.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                fpdegree.Sheets[0].ColumnHeader.Cells[1, fpdegree.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                                fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                                fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = true;
                                if (!colord.Contains("5"))
                                {
                                    fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                                if (colord.Count == 0)
                                {
                                    fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = true;
                                }

                            }
                        }
                        if (countval != 0)
                        {
                            fpdegree.Sheets[0].ColumnCount++;
                            fpdegree.Sheets[0].ColumnHeader.Cells[1, fpdegree.Sheets[0].ColumnCount - 1].Text = "Total Paid";
                            fpdegree.Sheets[0].ColumnHeader.Cells[1, fpdegree.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                            fpdegree.Sheets[0].ColumnHeader.Cells[1, fpdegree.Sheets[0].ColumnCount - 1].Font.Bold = true;
                            fpdegree.Sheets[0].ColumnHeader.Cells[1, fpdegree.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                            fpdegree.Sheets[0].ColumnHeader.Cells[1, fpdegree.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                            fpdegree.Sheets[0].ColumnHeader.Cells[1, fpdegree.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                            fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                            if (!colord.Contains("5"))
                            {
                                fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = false;
                            }
                            if (colord.Count == 0)
                            {
                                fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = true;
                            }
                        }
                    }
                    if (countval == 0)
                    {
                        fpdegree.Sheets[0].ColumnCount++;
                        fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Text = "Paid";
                        fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                        fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Font.Bold = true;
                        fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                        fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                        fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                        fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                        fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = true;
                        if (!colord.Contains("5"))
                        {
                            fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = false;
                        }
                        if (colord.Count == 0)
                        {
                            fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = true;
                        }
                        fpdegree.Sheets[0].ColumnHeaderSpanModel.Add(0, fpdegree.Sheets[0].ColumnCount - 1, 2, 1);

                    }
                    else
                    {
                        fpdegree.Sheets[0].ColumnHeaderSpanModel.Add(0, 9, 1, countval + 1);
                        fpdegree.Sheets[0].ColumnHeader.Cells[0, 9].Text = "Paid";
                        fpdegree.Sheets[0].ColumnHeader.Cells[0, 9].ForeColor = ColorTranslator.FromHtml("#000000");
                        fpdegree.Sheets[0].ColumnHeader.Cells[0, 9].Font.Bold = true;
                        fpdegree.Sheets[0].ColumnHeader.Cells[0, 9].Font.Name = "Book Antiqua";
                        fpdegree.Sheets[0].ColumnHeader.Cells[0, 9].Font.Size = FontUnit.Medium;
                        fpdegree.Sheets[0].ColumnHeader.Cells[0, 9].HorizontalAlign = HorizontalAlign.Center;
                        fpdegree.Sheets[0].Columns[9].HorizontalAlign = HorizontalAlign.Right;
                        if (!colord.Contains("5"))
                        {
                            fpdegree.Sheets[0].Columns[6].Visible = false;
                        }
                        if (colord.Count == 0)
                        {
                            fpdegree.Sheets[0].Columns[6].Visible = true;
                        }
                    }
                    fpdegree.Sheets[0].ColumnCount++;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Text = "Balance";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("6"))
                    {
                        fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpdegree.Sheets[0].ColumnHeaderSpanModel.Add(0, fpdegree.Sheets[0].ColumnCount - 1, 2, 1);

                    fpdegree.Sheets[0].ColumnCount++;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Text = "Refund Amount";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("7"))
                    {
                        fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpdegree.Sheets[0].ColumnHeaderSpanModel.Add(0, fpdegree.Sheets[0].ColumnCount - 1, 2, 1);

                    fpdegree.Sheets[0].ColumnCount++;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Text = "Excess Amount";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("8"))
                    {
                        fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpdegree.Sheets[0].ColumnHeaderSpanModel.Add(0, fpdegree.Sheets[0].ColumnCount - 1, 2, 1);


                    fpdegree.Sheets[0].ColumnCount++;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Text = "Fine Amount";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpdegree.Sheets[0].ColumnHeader.Cells[0, fpdegree.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("9"))
                    {
                        fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpdegree.Sheets[0].ColumnHeaderSpanModel.Add(0, fpdegree.Sheets[0].ColumnCount - 1, 2, 1);
                #endregion
                    #region fpdegree value
                    string totalvalue = "";
                    double bal = 0;
                    for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                    {

                        fpdegree.Sheets[0].Rows.Count = ds.Tables[0].Rows.Count;
                        fpdegree.Sheets[0].Cells[i, 0].Text = Convert.ToString(i + 1);
                        ds.Tables[3].DefaultView.RowFilter = "LedgerPK='" + Convert.ToString(ds.Tables[0].Rows[i]["LedgerFK"]) + "'";
                        dvhead = ds.Tables[3].DefaultView;
                        if (Convert.ToString(dvhead) != "" && dvhead != null)
                        {
                            fpdegree.Sheets[0].Cells[i, 1].Text = Convert.ToString(dvhead[0]["Headername"]);
                            fpdegree.Sheets[0].Cells[i, 1].Tag = Convert.ToString(dvhead[0]["HeaderFK"]);
                            fpdegree.Sheets[0].Cells[i, 2].Text = Convert.ToString(dvhead[0]["LedgerName"]);
                            fpdegree.Sheets[0].Cells[i, 2].Tag = Convert.ToString(dvhead[0]["LedgerPK"]);
                        }
                        fpdegree.Sheets[0].Cells[i, 3].Text = Convert.ToString(ds.Tables[0].Rows[i]["batch_year"].ToString());
                        fpdegree.Sheets[0].Cells[i, 3].Tag = Convert.ToString(ds.Tables[0].Rows[i]["batch_year"].ToString());
                        fpdegree.Sheets[0].Cells[i, 4].Text = Convert.ToString(ds.Tables[0].Rows[i]["DegreeName"].ToString());
                        fpdegree.Sheets[0].Cells[i, 4].Tag = Convert.ToString(ds.Tables[0].Rows[i]["Course_Id"].ToString());
                        allot = Convert.ToString(ds.Tables[0].Rows[i]["Allot"]);
                        if (allot != "" && allot != null)
                        {
                            fpdegree.Sheets[0].Cells[i, 5].Text = Convert.ToString(Math.Round(Convert.ToDouble(allot), 2));
                        }
                        else
                        {
                            fpdegree.Sheets[0].Cells[i, 5].Text = "0";
                        }
                        consession = Convert.ToString(ds.Tables[0].Rows[i]["consustion"]);
                        if (consession != "" && consession != null)
                        {
                            fpdegree.Sheets[0].Cells[i, 6].Text = Convert.ToString(Math.Round(Convert.ToDouble(consession), 2));
                        }
                        else
                        {
                            fpdegree.Sheets[0].Cells[i, 6].Text = "0";
                        }
                        //  fpdegree.Sheets[0].Cells[i, 5].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Allot"]), 2));
                        //  fpdegree.Sheets[0].Cells[i, 6].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Consustion"]), 2));
                        string val = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
                        string value = "";
                        if (val == "" || val == null)
                        {
                            value = "0";
                        }
                        else
                        {
                            value = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
                        }
                        fpdegree.Sheets[0].Cells[i, 7].Text = value;
                        // fpdegree.Sheets[0].Cells[i, 8].Text = Convert.ToString(ds.Tables[0].Rows[i]["Total"].ToString());
                        totalvalue = Convert.ToString(ds.Tables[0].Rows[i]["Total"]);
                        fpdegree.Sheets[0].Cells[i, 8].Text = Convert.ToString(Math.Round(Convert.ToDouble(totalvalue), 2));
                        string paidamt = "";
                        paidamt = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
                        if (countval == 0)
                        {
                            if (paidamt == "" || paidamt == null)
                            {
                                fpdegree.Sheets[0].Cells[i, fpdegree.Sheets[0].ColumnCount - 5].Text = "0";
                            }
                            else
                            {
                                fpdegree.Sheets[0].Cells[i, fpdegree.Sheets[0].ColumnCount - 5].Text = paidamt;
                            }
                        }
                        if (countval != 0)
                        {
                            //if (paidamt == "" || paidamt == null)
                            //{
                            //    fpdegree.Sheets[0].Cells[i, fpdegree.Sheets[0].ColumnCount - 2].Text = "0";
                            //}
                            //else
                            //{
                            //    fpdegree.Sheets[0].Cells[i, fpdegree.Sheets[0].ColumnCount - 2].Text = paidamt;
                            //}
                            // fpledger.Sheets[0].Cells[i, fpledger.Sheets[0].ColumnCount - 2].Text = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
                        }
                        //  FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 1].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Paid"]), 2));
                        //fpdegree.Sheets[0].Cells[i, fpdegree.Sheets[0].ColumnCount - 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Balance"]), 2));

                        fpdegree.Sheets[0].Cells[i, fpdegree.Sheets[0].ColumnCount - 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["RefundAmount"]), 2));
                        DataView dvex = new DataView();
                        if (ds.Tables[2].Rows.Count > 0)
                        {
                            ds.Tables[2].DefaultView.RowFilter = "Course_Id='" + Convert.ToString(ds.Tables[0].Rows[i]["Course_Id"]) + "'";
                            dvex = ds.Tables[2].DefaultView;
                            if (dvex.Count > 0 && dvex.Count != null)
                            {
                                fpdegree.Sheets[0].Cells[i, fpdegree.Sheets[0].ColumnCount - 2].Text = Convert.ToString(dvex[0]["ExcessAmount"]);
                            }
                        }
                        else
                        {
                            fpdegree.Sheets[0].Cells[i, fpdegree.Sheets[0].ColumnCount - 2].Text = "0";
                        }
                        //fpdegree.Sheets[0].Cells[i, fpdegree.Sheets[0].ColumnCount - 1].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["RefundAmount"]), 2));
                        double totamount = 0;
                        double fnlamount = 0;
                        if (ds.Tables[1].Rows.Count > 0)
                        {
                            if (chkl_paid.Items.Count > 0)
                            {
                                for (int pay = 0; pay < chkl_paid.Items.Count; pay++)
                                {
                                    if (chkl_paid.Items[pay].Selected == true)
                                    {
                                        ds.Tables[1].DefaultView.RowFilter = "Course_Id='" + Convert.ToString(ds.Tables[0].Rows[i]["Course_Id"].ToString()) + "' and PayMode='" + Convert.ToString(chkl_paid.Items[pay].Value) + "'  and HeaderFK='" + Convert.ToString(ds.Tables[0].Rows[i]["HeaderFK"]) + "' and  LedgerFK='" + Convert.ToString(ds.Tables[0].Rows[i]["LedgerFK"]) + "' and  batch_year='" + Convert.ToString(ds.Tables[0].Rows[i]["batch_year"]) + "'";
                                        dv = ds.Tables[1].DefaultView;
                                        if (dv.Count == 0 || dv.Count == null)
                                        {
                                            int count = 0;
                                            int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
                                            fpdegree.Sheets[0].Cells[i, colnew].Text = "0";
                                        }
                                        if (dv.Count > 0)
                                        {
                                            int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
                                            fpdegree.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv[0]["total"]);
                                            totamount = Convert.ToDouble(dv[0]["total"]);
                                            if (totamount != 0)
                                            {
                                                fnlamount = fnlamount + totamount;
                                            }
                                        }
                                    }
                                }
                                if (countval != 0)
                                    fpdegree.Sheets[0].Cells[i, fpdegree.Sheets[0].ColumnCount - 5].Text = Convert.ToString(fnlamount);
                                if (totalvalue != "" && totalvalue != null)
                                {
                                    bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(fnlamount);
                                    fpdegree.Sheets[0].Cells[i, fpdegree.Sheets[0].ColumnCount - 4].Text = Convert.ToString(bal);
                                    if (Convert.ToDouble(bal) == 0)
                                    {
                                        fpdegree.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#F08080");
                                    }
                                    if (Convert.ToDouble(bal) != 0)
                                    {
                                        fpdegree.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#90EE90");
                                    }
                                }

                            }
                        }
                    }
                    fpdegree.Sheets[0].PageSize = ds.Tables[0].Rows.Count + 1;
                    fpdegree.Sheets[0].Rows.Count++;
                    fpdegree.Sheets[0].Cells[fpdegree.Sheets[0].Rows.Count - 1, 0].Text = "Grand Total";
                    double hedval = 0;
                    for (int j = 5; j < fpdegree.Sheets[0].Columns.Count; j++)
                    {
                        for (int i = 0; i < fpdegree.Rows.Count - 1; i++)
                        {
                            string values = Convert.ToString(fpdegree.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
                            if (values != "0" && values != "-" && values != "")
                            {
                                if (hedval == 0)
                                {
                                    hedval = Convert.ToDouble(fpdegree.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
                                }
                                else
                                {
                                    hedval = hedval + Convert.ToDouble(fpdegree.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
                                }
                            }
                        }
                        fpdegree.Sheets[0].Cells[fpdegree.Sheets[0].Rows.Count - 1, j].Text = Convert.ToString(hedval);
                        hedval = 0;
                    }
                    fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = false;
                    #endregion
                    #region visible

                    divdegr.Visible = true;
                    divdegree.Visible = true;
                    fpdegree.Visible = true;
                    lbl_degr.Visible = true;
                    // btn_fpdeg.Visible = true;
                    lbl_degr.Text = "->Header(" + colhedername + ")->Ledger(" + colledname + ")->Batch(" + colbatname + ")->Degree";
                    rptprint.Visible = true;
                    rptprint.Attributes.Add("Style", "margin-top:-260px; margin-left:10px;");
                    // pnl_degcolorder.Visible = true;
                    // pnl_degreecolorder.Visible = true;
                    // loaddegreecolorder();
                    ViewState["degree"] = 3;
                    rptprint.Visible = false;
                    fpdegree.SaveChanges();
                    #endregion

                }
                else
                {
                    fpdegree.Visible = false;
                    divdegree.Visible = false;
                    lbl_degr.Visible = false;
                    //  pnl_degcolorder.Visible = false;
                    imgdiv2.Visible = true;
                    lbl_alert.Visible = true;
                    lbl_alert.Text = "No Record Found";
                }
            }
        }
        catch { }
    }
    #endregion

    #region degree
    public void degreecellclicks(object sender, EventArgs e)
    {
        try
        {
            if (deptcellclick == true)
            {
                #region getvalue
                string deptdegcode = "";
                string sem = "";
                string sec = "";
                string stud = "";
                string seatype = "";
                string studtype = "";
                string paid = "";
                string allot = "";
                string consession = "";
                lbl_sem.Visible = false; ;
                lbl_sem.Text = "";
                divsem.Visible = false;
                //pnl_semcolord.Visible = false;
                //pnl_semcolorder.Visible = false;
                //pnl_studcolord.Visible = false;
                //pnl_studcolorder.Visible = false;
                divstudcell.Visible = false;
                fpstudcell.Visible = false;
                lbl_semcell.Text = "";
                lbl_semcell.Visible = false;
                string hedcount = "";
                string ledcount = "";
                string batcount = "";
                string coursecode = "";
                string selqry = "";
                string Finyearvalue = "";
                divsema.Visible = false;
                div7.Visible = false;

                deptdegcode = Convert.ToString(getCblSelectedValue(cbl_dept));
                sem = Convert.ToString(getCblSelectedValue(cbl_sem));
                sec = Convert.ToString(getCblSelectedValue(cbl_sect));
                stud = Convert.ToString(getCblSelectedValue(cbl_stud));
                seatype = Convert.ToString(getCblSelectedValue(cbl_seat));
                studtype = Convert.ToString(getCblSelectedValue(cbl_studtype));
                paid = Convert.ToString(getCblSelectedValue(chkl_paid));
                Finyearvalue = Convert.ToString(getCblSelectedValue(chklsfyear));

                string fromdate = "";
                string todate = "";
                int datewise = 0;
                if (chk_datewise.Checked == true)
                {
                    datewise = 1;
                    if (datewise == 1)
                    {
                        fromdate = txt_fromdate.Text;
                        todate = txt_todate.Text;
                        if (fromdate != "" && todate != "")
                        {
                            string[] frdate = fromdate.Split('/');
                            if (frdate.Length == 3)
                            {
                                fromdate = frdate[1].ToString() + "/" + frdate[0].ToString() + "/" + frdate[2].ToString();
                            }
                            string[] tdate = todate.Split('/');
                            if (tdate.Length == 3)
                            {
                                todate = tdate[1].ToString() + "/" + tdate[0].ToString() + "/" + tdate[2].ToString();
                            }
                        }
                    }
                }


                string activerow = fpdegree.ActiveSheetView.ActiveRow.ToString();
                string activecol = fpdegree.ActiveSheetView.ActiveColumn.ToString();
                ArrayList ar = new ArrayList();
                ArrayList ardept = new ArrayList();

                int actnew = 0;
                int actbal = 0;
                int actpaidtotal = 0;
                int refundamt = 0;
                int excessamt = 0;
                int fineamt = 0;
                if (activecol.Trim() != "")
                {
                    actnew = Convert.ToInt32(activecol);
                    actpaidtotal = Convert.ToInt32(fpdegree.Sheets[0].ColumnCount - 5);
                    actbal = Convert.ToInt32(fpdegree.Sheets[0].ColumnCount - 4);
                    refundamt = Convert.ToInt32(fpdegree.Sheets[0].ColumnCount - 3);
                    excessamt = Convert.ToInt32(fpdegree.Sheets[0].ColumnCount - 2);
                    fineamt = Convert.ToInt32(fpdegree.Sheets[0].ColumnCount - 1);
                }
                string gettagvalue = "";
                if (actnew > 8)
                {
                    gettagvalue = Convert.ToString(fpdegree.Sheets[0].ColumnHeader.Cells[1, actnew].Tag);
                }


                int act = Convert.ToInt32(activerow);
                if (act == fpdegree.Sheets[0].Rows.Count - 1)
                {
                    for (int i = 0; i < fpdegree.Sheets[0].Rows.Count - 1; i++)
                    {
                        if ((hedcount == "") && (ledcount == "") && (batcount == "") && (coursecode == ""))
                        {
                            hedcount = Convert.ToString(fpdegree.Sheets[0].Cells[Convert.ToInt32(i), 1].Tag);
                            ledcount = Convert.ToString(fpdegree.Sheets[0].Cells[Convert.ToInt32(i), 2].Tag);
                            ar.Add(Convert.ToString(fpdegree.Sheets[0].Cells[Convert.ToInt32(i), 3].Tag));
                            batcount = Convert.ToString(fpdegree.Sheets[0].Cells[Convert.ToInt32(i), 3].Tag);
                            ardept.Add(Convert.ToString(fpdegree.Sheets[0].Cells[Convert.ToInt32(i), 4].Tag));
                            coursecode = Convert.ToString(fpdegree.Sheets[0].Cells[Convert.ToInt32(i), 4].Tag);

                        }
                        else
                        {
                            hedcount = hedcount + "','" + "" + Convert.ToString(fpdegree.Sheets[0].Cells[Convert.ToInt32(i), 1].Tag) + "";
                            ledcount = ledcount + "','" + "" + Convert.ToString(fpdegree.Sheets[0].Cells[Convert.ToInt32(i), 2].Tag) + "";
                            batcount = batcount + "','" + "" + Convert.ToString(fpdegree.Sheets[0].Cells[Convert.ToInt32(i), 3].Tag) + "";
                            coursecode = coursecode + "','" + "" + Convert.ToString(fpdegree.Sheets[0].Cells[Convert.ToInt32(i), 4].Tag) + "";
                            if (!ar.Contains(batcount))
                            {
                                ar.Add(Convert.ToString(fpdegree.Sheets[0].Cells[Convert.ToInt32(i), 3].Tag));
                                batcount = batcount + "','" + "" + Convert.ToString(fpdegree.Sheets[0].Cells[Convert.ToInt32(i), 3].Tag) + "";
                            }
                            if (!ardept.Contains(coursecode))
                            {
                                ardept.Add(Convert.ToString(fpdegree.Sheets[0].Cells[Convert.ToInt32(i), 4].Tag));
                                coursecode = coursecode + "','" + "" + Convert.ToString(fpdegree.Sheets[0].Cells[Convert.ToInt32(i), 4].Tag) + "";
                            }
                        }


                    }
                    ar.Clear();
                    ardept.Clear();
                }
                string headercode = Convert.ToString(fpdegree.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Tag);
                string ledgercode = Convert.ToString(fpdegree.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Tag);
                string batchyr = Convert.ToString(fpdegree.Sheets[0].Cells[Convert.ToInt32(activerow), 3].Tag);
                string courseid = Convert.ToString(fpdegree.Sheets[0].Cells[Convert.ToInt32(activerow), 4].Tag);


                if ((hedcount != "") && (ledcount != "") && (batcount != "") && (coursecode != ""))
                {
                    headercode = hedcount;
                    ledgercode = ledcount;
                    batchyr = batcount;
                    courseid = coursecode;
                }

                if (fpdegree.Sheets[0].Rows.Count > 0)
                {
                    coldegname = Convert.ToString(fpdegree.Sheets[0].ColumnHeader.Cells[0, Convert.ToInt32(activecol)].Text);
                    if (coldegname.Trim() == "")
                    {
                        coldegname = Convert.ToString(fpdegree.Sheets[0].ColumnHeader.Cells[1, Convert.ToInt32(activecol)].Text);
                    }
                }
                #endregion
                Boolean flag = false;
                Boolean flag1 = false;
                #region query

                ////selqry = "SELECT a.HeaderFK,HeaderName,LedgerName,LedgerFK,batch_year,G.Course_Id,Course_Name,Dept_Name,G.Dept_Code, SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,FM_HeaderMaster H,FM_LedgerMaster L,Applyn P,Degree G,Course C,Department D WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code and a.HeaderFK = h.HeaderPK and a.LedgerFK = l.LedgerPK and h.HeaderPK = l.LedgerPK AND P.IsConfirm = 1 AND Admission_Status = 0   and G.college_code ='" + collegecode1 + "'";

                ////if (batch1 != "")
                ////{
                ////    selqry = selqry + "and p.Batch_Year in ('" + batch1 + "')";
                ////}

                ////if (deptdegcode != "")
                ////{
                ////    selqry = selqry + " and g.Degree_Code in ('" + deptdegcode + "')";
                ////}

                ////if (sem != "")
                ////{
                ////    selqry = selqry + "and A.FeeCategory in ('" + sem + "')";
                ////}
                ////if (stud != "")
                ////{
                ////    selqry = selqry + "and p.mode in ('" + stud + "')";
                ////}
                ////if (seatype != "")
                ////{
                ////    selqry = selqry + "and p.seattype in ('" + seatype + "')";
                ////}
                ////if (studtype != "")
                ////{
                ////    selqry = selqry + " and p.Stud_Type in ('" + studtype + "')";
                ////}
                ////if (headercode != "")
                ////{
                ////    selqry = selqry + "and A.HeaderFK in ('" + headercode + "')";
                ////}
                ////if (ledgercode != "")
                ////{
                ////    selqry = selqry + " and LedgerFK in ('" + ledgercode + "')";
                ////}
                ////if (batchyr != "")
                ////{
                ////    selqry = selqry + " and batch_year in('" + batchyr + "')";
                ////}
                ////if (courseid != "")
                ////{
                ////    selqry = selqry + " and G.Course_Id in('" + courseid + "')";

                ////}
                ////if (datewise == 1)
                ////{
                ////    if (fromdate != "" && todate != "")
                ////    {
                ////        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                ////    }
                ////}
                ////selqry = selqry + "GROUP BY a.HeaderFK,HeaderName,LedgerName,LedgerFK,batch_year, G.Course_Id,Course_Name,G.Dept_Code,Dept_Name ";

                ////if (activecol.Trim() == "6")
                ////{
                ////    selqry = selqry + " having SUM(DeductAmout) > 0 ";
                ////}
                ////if (activecol.Trim() == "7")
                ////{
                ////    selqry = selqry + " having SUM(FromGovtAmt) > 0";
                ////}
                ////if (activecol.Trim() == Convert.ToString(actbal))
                ////{
                ////    selqry = selqry + " having SUM(BalAmount) > 0";
                ////}
                ////if (activecol.Trim() == Convert.ToString(actpaidtotal))
                ////{
                ////    selqry = selqry + " having sum(BalAmount) = 0";
                ////}
                ////if (activecol.Trim() == Convert.ToString(refundamt))
                ////{
                ////    selqry = selqry + "having SUM(RefundAmount)>0";
                ////}
                //////if (activecol.Trim() == Convert.ToString(excessamt))
                //////{
                //////    selqry = selqry + "having SUM(RefundAmount)>0";
                //////}
                //selqry = selqry + "  SELECT a.HeaderFK,HeaderName,LedgerName,LedgerFK,p.batch_year,G.Course_Id,Course_Name,Dept_Name,G.Dept_Code,SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,FM_HeaderMaster H,FM_LedgerMaster L,Applyn P,Degree G,Course C,Department D WHERE A.App_No = P.app_no  and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and p.degree_code = g.degree_code and g.college_code = d.college_code and a.HeaderFK = h.HeaderPK and a.LedgerFK = l.LedgerPK and h.HeaderPK = l.Headerfk AND P.IsConfirm = 1 AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";

                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    // selqry = selqry + " and   ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    //selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    // selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headercode != "")
                //{
                //    selqry = selqry + "and A.HeaderFK in ('" + headercode + "')";
                //}
                //if (ledgercode != "")
                //{
                //    selqry = selqry + " and LedgerFK in ('" + ledgercode + "')";
                //}
                //if (batchyr != "")
                //{
                //    selqry = selqry + " and p.batch_year in('" + batchyr + "')";
                //}
                //if (courseid != "")
                //{
                //    selqry = selqry + " and G.Course_Id in('" + courseid + "')";

                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY a.HeaderFK,HeaderName,LedgerName,LedgerFK,p.batch_year,G.Course_Id,Course_Name,G.Dept_Code,Dept_Name ";

                //if (activecol.Trim() == "6")
                //{
                //    selqry = selqry + " having SUM(DeductAmout) > 0 ";
                //}
                //if (activecol.Trim() == "7")
                //{
                //    selqry = selqry + " having SUM(FromGovtAmt) > 0";
                //}
                //if (activecol.Trim() == Convert.ToString(actbal))
                //{
                //    selqry = selqry + " having SUM(BalAmount) > 0";
                //}
                //if (activecol.Trim() == Convert.ToString(actpaidtotal))
                //{
                //    selqry = selqry + " having sum(BalAmount) = 0";
                //}
                //if (activecol.Trim() == Convert.ToString(refundamt))
                //{
                //    selqry = selqry + "having SUM(RefundAmount)>0";
                //}
                ////if (activecol.Trim() == Convert.ToString(excessamt))
                ////{
                ////    selqry = selqry + "having SUM(RefundAmount)>0";
                ////}
                ////selqry = selqry + " SELECT a.HeaderFK,LedgerFK,batch_year,G.Course_Id, Course_Name,Dept_Name,G.Dept_Code,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C,Department D WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 0  and G.college_code ='" + collegecode1 + "'";

                ////if (batch1 != "")
                ////{
                ////    selqry = selqry + "and p.Batch_Year in ('" + batch1 + "')";
                ////}
                ////if (deptdegcode != "")
                ////{
                ////    selqry = selqry + " and g.Degree_Code in ('" + deptdegcode + "')";
                ////}
                ////if (sem != "")
                ////{
                ////    selqry = selqry + "and A.FeeCategory in ('" + sem + "')";
                ////}
                ////if (stud != "")
                ////{
                ////    selqry = selqry + "and p.mode in ('" + stud + "')";
                ////}
                ////if (seatype != "")
                ////{
                ////    selqry = selqry + "and p.seattype in ('" + seatype + "')";
                ////}
                ////if (studtype != "")
                ////{
                ////    selqry = selqry + " and p.Stud_Type in ('" + studtype + "')";
                ////}
                ////if (headercode != "")
                ////{
                ////    selqry = selqry + "and A.HeaderFK in ('" + headercode + "')";
                ////}
                ////if (ledgercode != "")
                ////{
                ////    selqry = selqry + " and LedgerFK in ('" + ledgercode + "')";
                ////}
                ////if (batchyr != "")
                ////{
                ////    selqry = selqry + " and batch_year in('" + batchyr + "')";
                ////}
                ////if (courseid != "")
                ////{
                ////    selqry = selqry + " and G.Course_Id in('" + courseid + "')";
                ////}

                ////if (gettagvalue.Trim() != "" && gettagvalue.Trim() != "0")
                ////{
                ////    selqry = selqry + " and PayMode in ('" + gettagvalue + "')";
                ////}
                ////if (datewise == 1)
                ////{
                ////    if (fromdate != "" && todate != "")
                ////    {
                ////        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                ////    }
                ////}
                ////selqry = selqry + "  GROUP BY a.HeaderFK,LedgerFK,batch_year,G.Course_Id,Course_Name,G.Dept_Code,Dept_Name,PayMode";
                //selqry = selqry + " SELECT a.HeaderFK,LedgerFK,p.batch_year,G.Course_Id,Course_Name,Dept_Name,G.Dept_Code,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C,Department D WHERE A.App_No = P.app_no  AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";

                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    // selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    // selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    // selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headercode != "")
                //{
                //    selqry = selqry + "and A.HeaderFK in ('" + headercode + "')";
                //}
                //if (ledgercode != "")
                //{
                //    selqry = selqry + " and LedgerFK in ('" + ledgercode + "')";
                //}
                //if (batchyr != "")
                //{
                //    selqry = selqry + " and p.batch_year in('" + batchyr + "')";
                //}
                //if (courseid != "")
                //{
                //    selqry = selqry + " and G.Course_Id in('" + courseid + "')";
                //}

                //if (gettagvalue.Trim() != "" && gettagvalue.Trim() != "0")
                //{
                //    selqry = selqry + " and PayMode in ('" + gettagvalue + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY a.HeaderFK,LedgerFK,p.batch_year,G.Course_Id,Course_Name,G.Dept_Code,Dept_Name,PayMode ";

                //selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,h.LedgerPK,p.Batch_Year,C.Course_Id,d.Dept_Code from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Degree G,Course C,Department D,FM_LedgerMaster H,FM_HeaderMaster fh WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no  and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code  and h.LedgerPK =ex.LedgerFK and ex.HeaderFK=h.HeaderFK and h.HeaderFK=fh.HeaderPK and em.App_No = a.App_No   AND P.IsConfirm = 1  and a.LedgerFK=h.LedgerPK   AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "') ";
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    //  selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    // selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    //selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    // selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headercode != "")
                //{
                //    selqry = selqry + " and Ex.HeaderFK in('" + headercode + "')";
                //}
                //if (ledgercode != "")
                //{
                //    selqry = selqry + "  and Ex.LedgerFK in('" + ledgercode + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                //    }
                //}
                //selqry = selqry + " GROUP BY A.HeaderFK ,h.LedgerPK,p.Batch_Year ,C.Course_Id,d.Dept_Code";
                //if (activecol.Trim() == Convert.ToString(excessamt))
                //{
                //    selqry = selqry + " having SUM(Ex.Excessamt)>0 ";
                //    flag = true;
                //}
                #endregion

                #region newqry
                selqry = selqry + "    SELECT A.HeaderFK,LedgerFK,r.batch_year,r.degree_code, SUM(FeeAmount) as Allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Registration r,Degree d,Course C WHERE A.App_No = P.app_no and r.App_No=a.App_No and d.Degree_Code =r.degree_code and d.Course_Id =c.Course_Id and r.App_No =p.app_no  AND P.IsConfirm = 1 AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  d.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headercode != "")
                {
                    selqry = selqry + " and HeaderFK in ('" + headercode + "')";
                }
                if (ledgercode != "")
                {
                    selqry = selqry + " and LedgerFK in('" + ledgercode + "')";
                }
                if (batchyr != "")
                {
                    selqry = selqry + " and p.batch_year in('" + batchyr + "')";
                }
                if (courseid != "")
                {
                    selqry = selqry + " and c.Course_Id in('" + courseid + "')";

                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                    }
                }
                selqry = selqry + "GROUP BY a.HeaderFK,LedgerFK,r.batch_year,r.degree_code ";
                if (activecol.Trim() == "6")
                {
                    selqry = selqry + " having SUM(DeductAmout) > 0 ";
                }
                if (activecol.Trim() == "7")
                {
                    selqry = selqry + " having SUM(FromGovtAmt) > 0";
                }
                if (activecol.Trim() == Convert.ToString(actbal))
                {
                    selqry = selqry + " having SUM(BalAmount) > 0";
                }
                if (activecol.Trim() == Convert.ToString(actpaidtotal))
                {
                    selqry = selqry + " having sum(BalAmount) = 0";
                }
                if (activecol.Trim() == Convert.ToString(refundamt))
                {
                    selqry = selqry + "having SUM(RefundAmount)>0";
                }
                //paymode
                selqry = selqry + " SELECT A.HeaderFK,LedgerFK,r.batch_year,r.degree_code,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Registration r,Degree d,Course C WHERE A.App_No = P.app_no and r.App_No=p.app_no and r.App_No=a.App_No and d.Degree_Code =r.degree_code and d.Course_Id =c.Course_Id  AND P.IsConfirm = 1 AND Admission_Status = 1  and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  d.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headercode != "")
                {
                    selqry = selqry + " and HeaderFK in ('" + headercode + "')";
                }
                if (ledgercode != "")
                {
                    selqry = selqry + " and LedgerFK in('" + ledgercode + "')";
                }
                if (batchyr != "")
                {
                    selqry = selqry + " and p.batch_year in('" + batchyr + "')";
                }
                if (courseid != "")
                {
                    selqry = selqry + " and c.course_id in('" + courseid + "')";

                }
                if (gettagvalue.Trim() != "" && gettagvalue.Trim() != "0")
                {
                    selqry = selqry + " and PayMode in ('" + gettagvalue + "')";
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                    }
                }
                selqry = selqry + "GROUP BY A.HeaderFK,LedgerFK,r.batch_year,PayMode,r.degree_code ";
                //excess
                selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,A.LedgerfK,r.batch_year,r.Degree_Code from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Registration r,Degree d,Course C WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no and em.App_No = a.App_No and d.Degree_Code =r.degree_code and c.Course_Id =d.Course_Id  AND P.IsConfirm = 1  AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                if (deptdegcode != "")
                {
                    selqry = selqry + "  and  d.Degree_Code in ('" + deptdegcode + "')";
                }
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headercode != "")
                {
                    selqry = selqry + " and Ex.HeaderFK in('" + headercode + "')";
                }
                if (ledgercode != "")
                {
                    selqry = selqry + "  and Ex.LedgerFK in('" + ledgercode + "')";
                }
                if (batchyr != "")
                {
                    selqry = selqry + " and p.batch_year in('" + batchyr + "')";
                }
                if (courseid != "")
                {
                    selqry = selqry + " and c.Course_Id in('" + courseid + "')";
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                    }
                }
                selqry = selqry + " GROUP BY A.HeaderFK,A.LedgerfK,r.batch_year,r.Degree_Code";
                if (activecol.Trim() == Convert.ToString(excessamt))
                {
                    selqry = selqry + " having SUM(Ex.Excessamt)>0 ";
                    flag = true;
                }
                selqry = selqry + "  select HeaderFK,LedgerPK,HeaderName,LedgerName from FM_HeaderMaster h,FM_LedgerMaster l where l.HeaderFK =h.HeaderPK and h.CollegeCode ='" + collegecode1 + "' order by isnull(l.priority,1000),l.ledgerName asc";
                selqry = selqry + " select d.Degree_Code,c.Course_Id,c.Course_Name,dt.Dept_Name,dt.Dept_Code from Degree d,Department dt,Course c where d.Dept_Code =dt.Dept_Code and d.Course_Id =c.Course_Id";
                if (ddlstream.Items.Count > 0)
                {
                    selqry = selqry + "   and c.type ='" + ddlstream.SelectedItem.Text + "'";
                }


                #endregion

                #region fpdept design
                bool paymodecheck = false;
                ds = d2.select_method_wo_parameter(selqry, "Text");
                if (gettagvalue.Trim() != "")
                {
                    if (ds.Tables[1].Rows.Count > 0)
                    {
                        paymodecheck = true;
                    }
                }
                else
                {
                    paymodecheck = true;
                }
                if (flag == true)
                {
                    if (ds.Tables[0].Rows.Count > 0 && paymodecheck == true && ds.Tables[2].Rows.Count > 0)
                    {
                        flag1 = true;
                    }
                }
                else
                {
                    if (ds.Tables[0].Rows.Count > 0 && paymodecheck == true)
                    {
                        flag1 = true;
                    }
                }
                if (flag1 == true)
                {
                    loaddeptcolumns(sender, e);
                    DataView dv = new DataView();
                    fpdept.Sheets[0].RowCount = 0;
                    fpdept.Sheets[0].ColumnCount = 0;
                    fpdept.CommandBar.Visible = false;
                    fpdept.Sheets[0].AutoPostBack = true;
                    fpdept.Sheets[0].ColumnHeader.RowCount = 2;
                    fpdept.Sheets[0].RowHeader.Visible = false;
                    fpdept.Sheets[0].ColumnCount = 9;
                    FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
                    darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
                    darkstyle.ForeColor = Color.White;
                    fpdept.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
                    int countval = 0;

                    fpdept.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 0].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                    fpdept.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;


                    fpdept.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Header Name";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                    fpdept.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Left;
                    fpdept.Sheets[0].Columns[1].Visible = true;

                    fpdept.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Ledger Name";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 2].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                    fpdept.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Left;
                    fpdept.Sheets[0].Columns[2].Visible = true;

                    fpdept.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Batch Year";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 3].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                    fpdept.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Center;
                    fpdept.Sheets[0].Columns[3].Visible = true;

                    fpdept.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Course Name";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 4].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
                    fpdept.Sheets[0].Columns[4].HorizontalAlign = HorizontalAlign.Left;
                    fpdept.Sheets[0].Columns[4].Visible = true;

                    fpdept.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Department Name";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 5].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 5].Font.Bold = true;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 5].Font.Name = "Book Antiqua";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 5].Font.Size = FontUnit.Medium;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;
                    fpdept.Sheets[0].Columns[5].HorizontalAlign = HorizontalAlign.Left;
                    fpdept.Sheets[0].Columns[5].Visible = true;

                    fpdept.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Allot";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 6].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 6].Font.Bold = true;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 6].Font.Name = "Book Antiqua";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 6].Font.Size = FontUnit.Medium;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;
                    fpdept.Sheets[0].Columns[6].HorizontalAlign = HorizontalAlign.Right;
                    fpdept.Sheets[0].Columns[6].Visible = true;
                    if (!colord.Contains("1"))
                    {
                        fpdept.Sheets[0].Columns[6].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpdept.Sheets[0].Columns[6].Visible = true;
                    }
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 7].Text = "Consustion";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 7].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 7].Font.Bold = true;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 7].Font.Name = "Book Antiqua";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 7].Font.Size = FontUnit.Medium;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 7].HorizontalAlign = HorizontalAlign.Center;
                    fpdept.Sheets[0].Columns[7].HorizontalAlign = HorizontalAlign.Right;
                    fpdept.Sheets[0].Columns[7].Visible = true;
                    if (!colord.Contains("2"))
                    {
                        fpdept.Sheets[0].Columns[7].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpdept.Sheets[0].Columns[7].Visible = true;
                    }
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 8].Text = "Goverment";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 8].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 8].Font.Bold = true;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 8].Font.Name = "Book Antiqua";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 8].Font.Size = FontUnit.Medium;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, 8].HorizontalAlign = HorizontalAlign.Center;
                    fpdept.Sheets[0].Columns[8].HorizontalAlign = HorizontalAlign.Right;
                    if (!colord.Contains("3"))
                    {
                        fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    if (colord.Count == 0)
                    {
                        fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = true;
                    }

                    fpdept.Sheets[0].ColumnCount++;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Text = "Total";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("4"))
                    {
                        fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpdept.Sheets[0].ColumnHeaderSpanModel.Add(0, fpdept.Sheets[0].ColumnCount - 1, 2, 1);

                    fpdept.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
                    fpdept.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
                    fpdept.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
                    fpdept.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
                    fpdept.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
                    fpdept.Sheets[0].ColumnHeaderSpanModel.Add(0, 5, 2, 1);
                    fpdept.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 2, 1);
                    fpdept.Sheets[0].ColumnHeaderSpanModel.Add(0, 7, 2, 1);
                    fpdept.Sheets[0].ColumnHeaderSpanModel.Add(0, 8, 2, 1);
                    fpdept.Sheets[0].ColumnHeaderSpanModel.Add(0, 9, 2, 1);
                    Hashtable newhash = new Hashtable();

                    if (chkl_paid.Items.Count > 0)
                    {
                        for (int s = 0; s < chkl_paid.Items.Count; s++)
                        {
                            if (chkl_paid.Items[s].Selected == true)
                            {
                                countval++;
                                fpdept.Sheets[0].ColumnCount++;
                                newhash.Add(Convert.ToString(chkl_paid.Items[s].Value), fpdept.Sheets[0].ColumnCount - 1);
                                fpdept.Sheets[0].ColumnHeader.Cells[1, fpdept.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_paid.Items[s].Text);
                                fpdept.Sheets[0].ColumnHeader.Cells[1, fpdept.Sheets[0].ColumnCount - 1].Tag = Convert.ToString(chkl_paid.Items[s].Value);
                                fpdept.Sheets[0].ColumnHeader.Cells[1, fpdept.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                                fpdept.Sheets[0].ColumnHeader.Cells[1, fpdept.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                fpdept.Sheets[0].ColumnHeader.Cells[1, fpdept.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                fpdept.Sheets[0].ColumnHeader.Cells[1, fpdept.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                fpdept.Sheets[0].ColumnHeader.Cells[1, fpdept.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                                fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                                fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = true;
                                if (!colord.Contains("5"))
                                {
                                    fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                                if (colord.Count == 0)
                                {
                                    fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = true;
                                }
                                //  FpSpread1.Sheets[0].ColumnHeaderSpanModel.Add(0, FpSpread1.Sheets[0].ColumnCount - 1, 2, 1);
                            }
                        }
                        if (countval != 0)
                        {
                            fpdept.Sheets[0].ColumnCount++;
                            fpdept.Sheets[0].ColumnHeader.Cells[1, fpdept.Sheets[0].ColumnCount - 1].Text = "Total Paid";
                            fpdept.Sheets[0].ColumnHeader.Cells[1, fpdept.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                            fpdept.Sheets[0].ColumnHeader.Cells[1, fpdept.Sheets[0].ColumnCount - 1].Font.Bold = true;
                            fpdept.Sheets[0].ColumnHeader.Cells[1, fpdept.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                            fpdept.Sheets[0].ColumnHeader.Cells[1, fpdept.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                            fpdept.Sheets[0].ColumnHeader.Cells[1, fpdept.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                            fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                            if (!colord.Contains("5"))
                            {
                                fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = false;
                            }
                            if (colord.Count == 0)
                            {
                                fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = true;
                            }
                        }
                    }
                    if (countval == 0)
                    {
                        fpdept.Sheets[0].ColumnCount++;
                        fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Text = "Paid";
                        fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                        fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Font.Bold = true;
                        fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                        fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                        fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                        fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                        fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = true;
                        if (!colord.Contains("5"))
                        {
                            fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = false;
                        }
                        if (colord.Count == 0)
                        {
                            fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = true;
                        }
                        fpdept.Sheets[0].ColumnHeaderSpanModel.Add(0, fpdept.Sheets[0].ColumnCount - 1, 2, 1);
                    }
                    else
                    {
                        fpdept.Sheets[0].ColumnHeaderSpanModel.Add(0, 10, 1, countval + 1);
                        fpdept.Sheets[0].ColumnHeader.Cells[0, 10].Text = "Paid";
                        fpdept.Sheets[0].ColumnHeader.Cells[0, 10].ForeColor = ColorTranslator.FromHtml("#000000");
                        fpdept.Sheets[0].ColumnHeader.Cells[0, 10].Font.Bold = true;
                        fpdept.Sheets[0].ColumnHeader.Cells[0, 10].Font.Name = "Book Antiqua";
                        fpdept.Sheets[0].ColumnHeader.Cells[0, 10].Font.Size = FontUnit.Medium;
                        fpdept.Sheets[0].ColumnHeader.Cells[0, 10].HorizontalAlign = HorizontalAlign.Center;
                        fpdept.Sheets[0].Columns[10].HorizontalAlign = HorizontalAlign.Right;
                        if (!colord.Contains("5"))
                        {
                            fpdept.Sheets[0].Columns[6].Visible = false;
                        }
                        if (colord.Count == 0)
                        {
                            fpdept.Sheets[0].Columns[6].Visible = true;
                        }
                    }
                    fpdept.Sheets[0].ColumnCount++;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Text = "Balance";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("6"))
                    {
                        fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpdept.Sheets[0].ColumnHeaderSpanModel.Add(0, fpdept.Sheets[0].ColumnCount - 1, 2, 1);

                    fpdept.Sheets[0].ColumnCount++;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Text = "Refund dAmount";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("7"))
                    {
                        fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpdept.Sheets[0].ColumnHeaderSpanModel.Add(0, fpdept.Sheets[0].ColumnCount - 1, 2, 1);

                    fpdept.Sheets[0].ColumnCount++;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Text = "Excess dAmount";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("8"))
                    {
                        fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpdept.Sheets[0].ColumnHeaderSpanModel.Add(0, fpdept.Sheets[0].ColumnCount - 1, 2, 1);

                    fpdept.Sheets[0].ColumnCount++;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Text = "Fine dAmount";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpdept.Sheets[0].ColumnHeader.Cells[0, fpdept.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("9"))
                    {
                        fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpdept.Sheets[0].ColumnHeaderSpanModel.Add(0, fpdept.Sheets[0].ColumnCount - 1, 2, 1);
                #endregion
                    #region fpdept value
                    string totalvalue = "";
                    double bal = 0;
                    for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                    {
                        fpdept.Sheets[0].Rows.Count = ds.Tables[0].Rows.Count;
                        fpdept.Sheets[0].Cells[i, 0].Text = Convert.ToString(i + 1);
                        if (ds.Tables[3].Rows.Count > 0)
                        {
                            ds.Tables[3].DefaultView.RowFilter = "LedgerPK='" + Convert.ToString(ds.Tables[0].Rows[i]["LedgerFK"]) + "'";
                            dvhead = ds.Tables[3].DefaultView;
                            if (dvhead.Count > 0)
                            {
                                fpdept.Sheets[0].Cells[i, 1].Text = Convert.ToString(dvhead[0]["Headername"]);
                                fpdept.Sheets[0].Cells[i, 1].Tag = Convert.ToString(dvhead[0]["HeaderFK"]);
                                fpdept.Sheets[0].Cells[i, 2].Text = Convert.ToString(dvhead[0]["Ledgername"]);
                                fpdept.Sheets[0].Cells[i, 2].Tag = Convert.ToString(dvhead[0]["LedgerPK"]);
                            }
                        }
                        fpdept.Sheets[0].Cells[i, 3].Text = Convert.ToString(ds.Tables[0].Rows[i]["batch_year"].ToString());
                        fpdept.Sheets[0].Cells[i, 3].Tag = Convert.ToString(ds.Tables[0].Rows[i]["batch_year"].ToString());
                        DataView dnew = new DataView();
                        if (ds.Tables[4].Rows.Count > 0)
                        {
                            ds.Tables[4].DefaultView.RowFilter = "Degree_code='" + Convert.ToString(ds.Tables[0].Rows[i]["Degree_code"]) + "' ";
                            dnew = ds.Tables[4].DefaultView;
                            if (dnew.Count > 0)
                            {
                                fpdept.Sheets[0].Cells[i, 4].Text = Convert.ToString(dnew[0]["Course_Name"]);
                                fpdept.Sheets[0].Cells[i, 4].Tag = Convert.ToString(dnew[0]["Course_Id"]);
                                fpdept.Sheets[0].Cells[i, 5].Text = Convert.ToString(dnew[0]["Dept_Name"]);
                                fpdept.Sheets[0].Cells[i, 5].Tag = Convert.ToString(dnew[0]["Dept_Code"]);
                            }
                        }
                        allot = Convert.ToString(ds.Tables[0].Rows[i]["Allot"]);
                        if (allot != "" && allot != null)
                        {
                            fpdept.Sheets[0].Cells[i, 6].Text = Convert.ToString(Math.Round(Convert.ToDouble(allot), 2));
                        }
                        else
                        {
                            fpdept.Sheets[0].Cells[i, 6].Text = "0";
                        }
                        consession = Convert.ToString(ds.Tables[0].Rows[i]["consustion"]);
                        if (consession != "" && consession != null)
                        {
                            fpdept.Sheets[0].Cells[i, 7].Text = Convert.ToString(Math.Round(Convert.ToDouble(consession), 2));
                        }
                        else
                        {
                            fpdept.Sheets[0].Cells[i, 7].Text = "0";
                        }
                        // fpdept.Sheets[0].Cells[i, 6].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Allot"]), 2));
                        // fpdept.Sheets[0].Cells[i, 7].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Consustion"]), 2));
                        // FpSpread1.Sheets[0].Cells[i, 5].Text = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
                        string val = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
                        string value = "";
                        if (val == "" || val == null)
                        {
                            value = "0";
                        }
                        else
                        {
                            value = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
                        }
                        fpdept.Sheets[0].Cells[i, 8].Text = value;
                        //fpdept.Sheets[0].Cells[i, 9].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Total"]), 2));

                        totalvalue = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Total"]), 2));
                        fpdept.Sheets[0].Cells[i, 9].Text = Convert.ToString(totalvalue);
                        string paidamt = "";
                        paidamt = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
                        if (countval == 0)
                        {
                            if (paidamt == "" || paidamt == null)
                            {
                                fpdept.Sheets[0].Cells[i, fpdept.Sheets[0].ColumnCount - 5].Text = "0";
                            }
                            else
                            {
                                fpdept.Sheets[0].Cells[i, fpdept.Sheets[0].ColumnCount - 5].Text = paidamt;
                            }
                        }
                        if (countval != 0)
                        {
                            //if (paidamt == "" || paidamt == null)
                            //{
                            //    fpdept.Sheets[0].Cells[i, fpdept.Sheets[0].ColumnCount - 2].Text = "0";
                            //}
                            //else
                            //{
                            //    fpdept.Sheets[0].Cells[i, fpdept.Sheets[0].ColumnCount - 2].Text = paidamt;
                            //}
                        }
                        //fpdept.Sheets[0].Cells[i, fpdept.Sheets[0].ColumnCount - 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Balance"]), 2));

                        fpdept.Sheets[0].Cells[i, fpdept.Sheets[0].ColumnCount - 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["RefundAmount"]), 2));
                        DataView dvex = new DataView();
                        if (ds.Tables[2].Rows.Count > 0)
                        {
                            ds.Tables[2].DefaultView.RowFilter = "degree_code='" + Convert.ToString(ds.Tables[0].Rows[i]["degree_code"]) + "'";
                            dvex = ds.Tables[2].DefaultView;
                            if (dvex.Count > 0 && dvex.Count != null)
                            {
                                fpdept.Sheets[0].Cells[i, fpdept.Sheets[0].ColumnCount - 2].Text = Convert.ToString(dvex[0]["ExcessAmount"]);
                            }
                        }
                        else
                        {
                            fpdept.Sheets[0].Cells[i, fpdept.Sheets[0].ColumnCount - 2].Text = "0";
                        }
                        double totamount = 0;
                        double fnlamount = 0;
                        if (ds.Tables[1].Rows.Count > 0)
                        {
                            if (chkl_paid.Items.Count > 0)
                            {
                                for (int pay = 0; pay < chkl_paid.Items.Count; pay++)
                                {
                                    if (chkl_paid.Items[pay].Selected == true)
                                    {
                                        ds.Tables[1].DefaultView.RowFilter = "degree_code='" + Convert.ToString(ds.Tables[0].Rows[i]["degree_code"].ToString()) + "' and PayMode='" + Convert.ToString(chkl_paid.Items[pay].Value) + "'";
                                        dv = ds.Tables[1].DefaultView;
                                        if (dv.Count == 0 || dv.Count == null)
                                        {
                                            int count = 0;
                                            int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
                                            fpdept.Sheets[0].Cells[i, colnew].Text = "0";
                                        }
                                        if (dv.Count > 0)
                                        {
                                            int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
                                            fpdept.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv[0]["total"]);
                                            totamount = Convert.ToDouble(dv[0]["total"]);
                                            if (totamount != 0)
                                            {
                                                fnlamount = fnlamount + totamount;
                                            }
                                        }
                                    }
                                }
                                if (countval != 0)
                                    fpdept.Sheets[0].Cells[i, fpdept.Sheets[0].ColumnCount - 5].Text = Convert.ToString(fnlamount);
                                if (totalvalue != "" && totalvalue != null)
                                {
                                    bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(fnlamount);
                                    fpdept.Sheets[0].Cells[i, fpdept.Sheets[0].ColumnCount - 4].Text = Convert.ToString(bal);
                                    if (Convert.ToDouble(bal) == 0)
                                    {
                                        fpdept.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#F08080");
                                    }
                                    if (Convert.ToDouble(bal) != 0)
                                    {
                                        fpdept.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#90EE90");
                                    }
                                }
                            }
                        }
                    }
                    fpdept.Sheets[0].PageSize = ds.Tables[0].Rows.Count + 1;
                    fpdept.Sheets[0].Rows.Count++;
                    fpdept.Sheets[0].Cells[fpdept.Sheets[0].Rows.Count - 1, 0].Text = "Grand Total";
                    double hedval = 0;
                    for (int j = 6; j < fpdept.Sheets[0].Columns.Count; j++)
                    {
                        for (int i = 0; i < fpdept.Rows.Count - 1; i++)
                        {
                            string values = Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
                            if (values != "0" && values != "-" && values != "")
                            {
                                if (hedval == 0)
                                {
                                    hedval = Convert.ToDouble(fpdept.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
                                }
                                else
                                {
                                    hedval = hedval + Convert.ToDouble(fpdept.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
                                }
                            }
                        }
                        fpdept.Sheets[0].Cells[fpdept.Sheets[0].Rows.Count - 1, j].Text = Convert.ToString(hedval);
                        hedval = 0;
                    }
                    fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = false;
                    #endregion
                    #region visible
                    fpdept.SaveChanges();
                    divdep.Visible = true;
                    divdept.Visible = true;
                    fpdept.Visible = true;
                    lbl_dep.Visible = true;
                    lbl_dep.Visible = true;
                    //btn_fpdep.Visible = true;
                    lbl_dep.Text = "->Header(" + colhedername + ")->Ledger(" + colledname + ")->Batch(" + colbatname + ")->Degree(" + coldegname + ")->Department";
                    rptprint.Visible = true;
                    rptprint.Attributes.Add("Style", "margin-top:-160px; margin-left:10px;");
                    // pnl_deptcolord.Visible = true;
                    // pnl_deptcolorder.Visible = true;
                    // loaddeptcolorder();
                    ViewState["dept"] = 4;
                    rptprint.Visible = false;
                    #endregion
                }
                else
                {
                    fpdept.Visible = false;
                    divdept.Visible = false;
                    lbl_dep.Visible = false;
                    //  pnl_deptcolord.Visible = false;
                    imgdiv2.Visible = true;
                    lbl_alert.Visible = true;
                    lbl_alert.Text = "No Record Found";
                }
            }
        }
        catch { }
    }
    #endregion

    #region dept
    public void deptcellclicks(object sender, EventArgs e)
    {
        try
        {
            if (semcellclick == true)
            {
                #region getvalue
                string sem = "";
                string sec = "";
                string stud = "";
                string seatype = "";
                string studtype = "";
                string paid = "";
                string allot = "";
                string consession = "";
                string Finyearvalue = "";
                div7.Visible = false;


                sem = Convert.ToString(getCblSelectedValue(cbl_sem));
                sec = Convert.ToString(getCblSelectedValue(cbl_sect));
                stud = Convert.ToString(getCblSelectedValue(cbl_stud));
                seatype = Convert.ToString(getCblSelectedValue(cbl_seat));
                studtype = Convert.ToString(getCblSelectedValue(cbl_studtype));
                paid = Convert.ToString(getCblSelectedValue(chkl_paid));
                Finyearvalue = Convert.ToString(getCblSelectedValue(chklsfyear));

                string fromdate = "";
                string todate = "";
                int datewise = 0;
                if (chk_datewise.Checked == true)
                {
                    datewise = 1;
                    if (datewise == 1)
                    {
                        fromdate = txt_fromdate.Text;
                        todate = txt_todate.Text;
                        if (fromdate != "" && todate != "")
                        {
                            string[] frdate = fromdate.Split('/');
                            if (frdate.Length == 3)
                            {
                                fromdate = frdate[1].ToString() + "/" + frdate[0].ToString() + "/" + frdate[2].ToString();
                            }
                            string[] tdate = todate.Split('/');
                            if (tdate.Length == 3)
                            {
                                todate = tdate[1].ToString() + "/" + tdate[0].ToString() + "/" + tdate[2].ToString();
                            }
                        }
                    }
                }
                lbl_semcell.Text = "";
                lbl_semcell.Visible = false;

                string activerow = fpdept.ActiveSheetView.ActiveRow.ToString();
                string activecol = fpdept.ActiveSheetView.ActiveColumn.ToString();

                string hedcount = "";
                string ledcount = "";
                string batcount = "";
                string coursecode = "";
                string deptcodefp = "";
                ArrayList ar = new ArrayList();
                ArrayList ardept = new ArrayList();
                ArrayList ardeptcode = new ArrayList();

                int actnew = 0;
                int actbal = 0;
                int actpaidtotal = 0;
                int refundamt = 0;
                int excessamt = 0;
                int fineamt = 0;
                if (activecol.Trim() != "")
                {
                    actnew = Convert.ToInt32(activecol);
                    actpaidtotal = Convert.ToInt32(fpdept.Sheets[0].ColumnCount - 5);
                    actbal = Convert.ToInt32(fpdept.Sheets[0].ColumnCount - 4);
                    refundamt = Convert.ToInt32(fpdept.Sheets[0].ColumnCount - 3);
                    excessamt = Convert.ToInt32(fpdept.Sheets[0].ColumnCount - 2);
                    fineamt = Convert.ToInt32(fpdept.Sheets[0].ColumnCount - 1);
                }
                string gettagvalue = "";
                if (actnew > 9)
                {
                    gettagvalue = Convert.ToString(fpdept.Sheets[0].ColumnHeader.Cells[1, actnew].Tag);
                }


                int act = Convert.ToInt32(activerow);
                if (act == fpdegree.Sheets[0].Rows.Count - 1)
                {
                    for (int i = 0; i < fpdept.Sheets[0].Rows.Count - 1; i++)
                    {
                        if ((hedcount == "") && (ledcount == "") && (batcount == "") && (coursecode == "") && (deptcodefp == ""))
                        {
                            hedcount = Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(i), 1].Tag);
                            ledcount = Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(i), 2].Tag);
                            ar.Add(Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(i), 3].Tag));
                            batcount = Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(i), 3].Tag);
                            ardept.Add(Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(i), 4].Tag));
                            coursecode = Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(i), 4].Tag);
                            ardeptcode.Add(Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(i), 5].Tag));
                            deptcodefp = Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(i), 5].Tag);

                        }
                        else
                        {
                            hedcount = hedcount + "','" + "" + Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(i), 1].Tag) + "";
                            ledcount = ledcount + "','" + "" + Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(i), 2].Tag) + "";
                            batcount = batcount + "','" + "" + Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(i), 3].Tag) + "";
                            coursecode = coursecode + "','" + "" + Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(i), 4].Tag) + "";
                            deptcodefp = deptcodefp + "','" + "" + Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(i), 5].Tag) + "";
                            if (!ar.Contains(batcount))
                            {
                                ar.Add(Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(i), 3].Tag));
                                batcount = batcount + "','" + "" + Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(i), 3].Tag) + "";
                            }
                            if (!ardept.Contains(coursecode))
                            {
                                ardept.Add(Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(i), 4].Tag));
                                coursecode = coursecode + "','" + "" + Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(i), 4].Tag) + "";
                            }
                            if (!ardeptcode.Contains(deptcodefp))
                            {
                                ardeptcode.Add(Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(i), 5].Tag));
                                deptcodefp = deptcodefp + "','" + "" + Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(i), 5].Tag) + "";
                            }
                        }


                    }
                    ar.Clear();
                    ardept.Clear();
                    ardeptcode.Clear();
                }
                string headercode = Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Tag);
                string ledgercode = Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Tag);
                string batchyr = Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(activerow), 3].Tag);
                string courseid = Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(activerow), 4].Tag);
                string deptcode = Convert.ToString(fpdept.Sheets[0].Cells[Convert.ToInt32(activerow), 5].Tag);


                if ((hedcount != "") && (ledcount != "") && (batcount != "") && (coursecode != "") && (deptcodefp != ""))
                {
                    headercode = hedcount;
                    ledgercode = ledcount;
                    batchyr = batcount;
                    courseid = coursecode;
                    deptcode = deptcodefp;
                }


                if (fpdept.Sheets[0].Rows.Count > 0)
                {
                    coldeptname = Convert.ToString(fpdept.Sheets[0].ColumnHeader.Cells[0, Convert.ToInt32(activecol)].Text);
                    if (coldeptname.Trim() == "")
                    {
                        coldeptname = Convert.ToString(fpdept.Sheets[0].ColumnHeader.Cells[1, Convert.ToInt32(activecol)].Text);
                    }
                }
                #endregion
                #region query
                Boolean flag = false;
                Boolean flag1 = false;
                string selqry = "";
                ////selqry = "SELECT a.HeaderFK,HeaderName,LedgerName,LedgerFK,batch_year,G.Course_Id,Course_Name,G.Dept_Code,Dept_Name,TextVal,A.FeeCategory,SUM(FeeAmount) as allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A, FM_HeaderMaster H,FM_LedgerMaster L,Applyn P,Degree G,Course C,Department D,TextValTable T WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code AND A.FeeCategory = T.TextCode and a.HeaderFK = h.HeaderPK and a.LedgerFK = l.LedgerPK and h.HeaderPK = l.LedgerPK AND P.IsConfirm = 1 AND Admission_Status = 0  and G.college_code ='" + collegecode1 + "'";

                ////if (batch1 != "")
                ////{
                ////    selqry = selqry + "and p.Batch_Year in ('" + batch1 + "')";
                ////}

                ////if (deptdegcode != "")
                ////{
                ////    selqry = selqry + " and g.Degree_Code in ('" + deptdegcode + "')";
                ////}

                ////if (sem != "")
                ////{
                ////    selqry = selqry + "and A.FeeCategory in ('" + sem + "')";
                ////}
                ////if (stud != "")
                ////{
                ////    selqry = selqry + "and p.mode in ('" + stud + "')";
                ////}
                ////if (seatype != "")
                ////{
                ////    selqry = selqry + "and p.seattype in ('" + seatype + "')";
                ////}
                ////if (studtype != "")
                ////{
                ////    selqry = selqry + " and p.Stud_Type in ('" + studtype + "')";
                ////}
                ////if (headercode != "")
                ////{
                ////    selqry = selqry + "and A.HeaderFK in ('" + headercode + "')";
                ////}
                ////if (ledgercode != "")
                ////{
                ////    selqry = selqry + " and LedgerFK in ('" + ledgercode + "')";
                ////}
                ////if (batchyr != "")
                ////{
                ////    selqry = selqry + " and batch_year in('" + batchyr + "')";
                ////}
                ////if (courseid != "")
                ////{
                ////    selqry = selqry + " and G.Course_Id in('" + courseid + "')";

                ////}
                ////if (deptcode != "")
                ////{
                ////    selqry = selqry + " and G.Dept_Code in ('" + deptcode + "') ";
                ////}
                ////if (datewise == 1)
                ////{
                ////    if (fromdate != "" && todate != "")
                ////    {
                ////        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                ////    }
                ////}

                ////selqry = selqry + "GROUP BY a.HeaderFK,HeaderName,LedgerName,LedgerFK,batch_year,G.Course_Id,Course_Name,G.Dept_Code,Dept_Name,TextVal,A.FeeCategory ";
                ////if (activecol.Trim() == "7")
                ////{
                ////    selqry = selqry + " having SUM(DeductAmout) > 0 ";
                ////}
                ////if (activecol.Trim() == "8")
                ////{
                ////    selqry = selqry + " having SUM(FromGovtAmt) > 0";
                ////}
                ////if (activecol.Trim() == Convert.ToString(actbal))
                ////{
                ////    selqry = selqry + " having SUM(BalAmount) > 0";
                ////}
                ////if (activecol.Trim() == Convert.ToString(actpaidtotal))
                ////{
                ////    selqry = selqry + " having sum(BalAmount) = 0";
                ////}
                ////if (activecol.Trim() == Convert.ToString(refundamt))
                ////{
                ////    selqry = selqry + "having SUM(RefundAmount)>0";
                ////}
                //////if (activecol.Trim() == Convert.ToString(excessamt))
                //////{
                //////    selqry = selqry + "having SUM(RefundAmount)>0";
                //////}
                //selqry = selqry + " SELECT a.HeaderFK,HeaderName,LedgerName,LedgerFK,p.batch_year,G.Course_Id,Course_Name,G.Dept_Code,Dept_Name,TextVal,A.FeeCategory,SUM(FeeAmount) as allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A, FM_HeaderMaster H,FM_LedgerMaster L,Applyn P,Degree G,Course C,Department D,TextValTable T WHERE A.App_No = P.app_no and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and p.degree_code = g.degree_code and g.college_code = d.college_code and a.HeaderFK = h.HeaderPK and a.LedgerFK = l.LedgerPK and h.HeaderPK = l.Headerfk AND P.IsConfirm = 1 AND Admission_Status = 1 AND A.FeeCategory = T.TextCode and g.college_code ='" + collegecode1 + "'";

                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    // selqry = selqry + " and   ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    //selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    // selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headercode != "")
                //{
                //    selqry = selqry + "and A.HeaderFK in ('" + headercode + "')";
                //}
                //if (ledgercode != "")
                //{
                //    selqry = selqry + " and LedgerFK in ('" + ledgercode + "')";
                //}
                //if (batchyr != "")
                //{
                //    selqry = selqry + " and p.batch_year in('" + batchyr + "')";
                //}
                //if (courseid != "")
                //{
                //    selqry = selqry + " and G.Course_Id in('" + courseid + "')";

                //}
                //if (deptcode != "")
                //{
                //    selqry = selqry + " and G.Dept_Code in ('" + deptcode + "') ";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY a.HeaderFK,HeaderName,LedgerName,LedgerFK,p.batch_year,G.Course_Id,Course_Name,G.Dept_Code,Dept_Name,TextVal,A.FeeCategory";
                //if (activecol.Trim() == "7")
                //{
                //    selqry = selqry + " having SUM(DeductAmout) > 0 ";
                //}
                //if (activecol.Trim() == "8")
                //{
                //    selqry = selqry + " having SUM(FromGovtAmt) > 0";
                //}
                //if (activecol.Trim() == Convert.ToString(actbal))
                //{
                //    selqry = selqry + " having SUM(BalAmount) > 0";
                //}
                //if (activecol.Trim() == Convert.ToString(actpaidtotal))
                //{
                //    selqry = selqry + " having sum(BalAmount) = 0";
                //}
                //if (activecol.Trim() == Convert.ToString(refundamt))
                //{
                //    selqry = selqry + "having SUM(RefundAmount)>0";
                //}
                ////if (activecol.Trim() == Convert.ToString(excessamt))
                ////{
                ////    selqry = selqry + "having SUM(RefundAmount)>0";
                ////}
                ////selqry = selqry + " SELECT a.HeaderFK,LedgerFK,batch_year,G.Course_Id,Course_Name,G.Dept_Code,Dept_Name,TextVal,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C,Department D,TextValTable T WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 0 AND A.FeeCategory = T.TextCode and G.college_code ='" + collegecode1 + "'";

                ////if (batch1 != "")
                ////{
                ////    selqry = selqry + "and p.Batch_Year in ('" + batch1 + "')";
                ////}
                ////if (deptdegcode != "")
                ////{
                ////    selqry = selqry + " and g.Degree_Code in ('" + deptdegcode + "')";
                ////}
                ////if (sem != "")
                ////{
                ////    selqry = selqry + "and A.FeeCategory in ('" + sem + "')";
                ////}
                ////if (stud != "")
                ////{
                ////    selqry = selqry + "and p.mode in ('" + stud + "')";
                ////}
                ////if (seatype != "")
                ////{
                ////    selqry = selqry + "and p.seattype in ('" + seatype + "')";
                ////}
                ////if (studtype != "")
                ////{
                ////    selqry = selqry + " and p.Stud_Type in ('" + studtype + "')";
                ////}
                ////if (headercode != "")
                ////{
                ////    selqry = selqry + "and A.HeaderFK in ('" + headercode + "')";
                ////}
                ////if (ledgercode != "")
                ////{
                ////    selqry = selqry + " and LedgerFK in ('" + ledgercode + "')";
                ////}
                ////if (batchyr != "")
                ////{
                ////    selqry = selqry + " and batch_year in('" + batchyr + "')";
                ////}
                ////if (courseid != "")
                ////{
                ////    selqry = selqry + " and G.Course_Id in('" + courseid + "')";

                ////}
                ////if (deptcode != "")
                ////{
                ////    selqry = selqry + " and G.Dept_Code in ('" + deptcode + "') ";
                ////}
                ////if (gettagvalue.Trim() != "" && gettagvalue.Trim() != "0")
                ////{
                ////    selqry = selqry + " and PayMode in ('" + gettagvalue + "')";
                ////}
                ////if (datewise == 1)
                ////{
                ////    if (fromdate != "" && todate != "")
                ////    {
                ////        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                ////    }
                ////}
                ////selqry = selqry + "  GROUP BY a.HeaderFK,LedgerFK,batch_year,G.Course_Id,Course_Name,G.Dept_Code,Dept_Name,TextVal, PayMode";
                //selqry = selqry + " SELECT a.HeaderFK,LedgerFK,p.batch_year,G.Course_Id,Course_Name,G.Dept_Code,Dept_Name,TextVal,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C,Department D,TextValTable T WHERE A.App_No = P.app_no  AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 1 AND A.FeeCategory = T.TextCode and g.college_code ='" + collegecode1 + "'";
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    // selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    //  selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    //selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    // selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headercode != "")
                //{
                //    selqry = selqry + "and A.HeaderFK in ('" + headercode + "')";
                //}
                //if (ledgercode != "")
                //{
                //    selqry = selqry + " and LedgerFK in ('" + ledgercode + "')";
                //}
                //if (batchyr != "")
                //{
                //    selqry = selqry + " and p.batch_year in('" + batchyr + "')";
                //}
                //if (courseid != "")
                //{
                //    selqry = selqry + " and G.Course_Id in('" + courseid + "')";

                //}
                //if (deptcode != "")
                //{
                //    selqry = selqry + " and G.Dept_Code in ('" + deptcode + "') ";
                //}
                //if (gettagvalue.Trim() != "" && gettagvalue.Trim() != "0")
                //{
                //    selqry = selqry + " and PayMode in ('" + gettagvalue + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY a.HeaderFK,LedgerFK,p.batch_year,G.Course_Id,Course_Name,G.Dept_Code,Dept_Name,TextVal,PayMode";


                //selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,h.LedgerPK,p.Batch_Year,C.Course_Id,d.Dept_Code,A.FeeCategory from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Degree G,Course C,Department D,FM_LedgerMaster H,FM_HeaderMaster fh WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no  and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code  and h.LedgerPK =ex.LedgerFK and ex.HeaderFK=h.HeaderFK and h.HeaderFK=fh.HeaderPK and em.App_No = a.App_No   AND P.IsConfirm = 1  and a.LedgerFK=h.LedgerPK   AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "' ";
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    // selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    // selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    // selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headercode != "")
                //{
                //    selqry = selqry + " and Ex.HeaderFK in('" + headercode + "')";
                //}
                //if (ledgercode != "")
                //{
                //    selqry = selqry + "  and Ex.LedgerFK in('" + ledgercode + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                //    }
                //}
                //selqry = selqry + " GROUP BY A.HeaderFK ,h.LedgerPK,p.Batch_Year ,C.Course_Id,d.Dept_Code,A.FeeCategory";
                //if (activecol.Trim() == Convert.ToString(excessamt))
                //{
                //    selqry = selqry + " having SUM(Ex.Excessamt)>0 ";
                //    flag = true;
                //}
                #endregion

                #region new query
                selqry = selqry + " SELECT TextVal,FeeCategory,A.HeaderFK,LedgerFK, Course_Name ,p.batch_year,G.Course_Id,g.degree_Code,d.Dept_name,d.Dept_Code,SUM(FeeAmount) as allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A,Applyn P,Degree G,Course C,Department D,TextValTable T WHERE  A.App_No = P.app_no  and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and p.degree_code = g.degree_code and g.college_code = d.college_code  AND P.IsConfirm = 1 AND Admission_Status = 1 AND A.FeeCategory = T.TextCode and P.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headercode != "")
                {
                    selqry = selqry + " and HeaderFK in ('" + headercode + "')";
                }
                if (ledgercode != "")
                {
                    selqry = selqry + " and LedgerFK in('" + ledgercode + "')";
                }
                if (batchyr != "")
                {
                    selqry = selqry + " and p.batch_year in('" + batchyr + "')";
                }
                if (courseid != "")
                {
                    selqry = selqry + " and C.Course_Id in('" + courseid + "')";

                }
                if (deptcode != "")
                {
                    selqry = selqry + " and G.Dept_Code in ('" + deptcode + "') ";
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                    }
                }
                selqry = selqry + " GROUP BY TextVal,A.HeaderFK,LedgerFK, c.Course_Name ,p.batch_year,G.Course_Id,g.degree_Code,d.Dept_name,d.Dept_Code,FeeCategory ";
                if (activecol.Trim() == "7")
                {
                    selqry = selqry + " having SUM(DeductAmout) > 0 ";
                }
                if (activecol.Trim() == "8")
                {
                    selqry = selqry + " having SUM(FromGovtAmt) > 0";
                }
                if (activecol.Trim() == Convert.ToString(actbal))
                {
                    selqry = selqry + " having SUM(BalAmount) > 0";
                }
                if (activecol.Trim() == Convert.ToString(actpaidtotal))
                {
                    selqry = selqry + " having sum(BalAmount) = 0";
                }
                if (activecol.Trim() == Convert.ToString(refundamt))
                {
                    selqry = selqry + "having SUM(RefundAmount)>0";
                }

                //paymode
                selqry = selqry + " SELECT TextVal,PayMode,SUM(Debit) as total,A.HeaderFK,LedgerFK,r.degree_Code,FeeCategory,r.batch_year  FROM FT_FinDailyTransaction A,Applyn P,Registration R,TextValTable T,Degree d,Course C  WHERE A.App_No = P.app_no and r.App_No=A.App_No and r.App_No=p.app_no and d.Degree_Code =r.degree_code and c.Course_Id =d.Course_Id   AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' AND A.FeeCategory = T.TextCode and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headercode != "")
                {
                    selqry = selqry + " and HeaderFK in ('" + headercode + "')";
                }
                if (ledgercode != "")
                {
                    selqry = selqry + " and LedgerFK in('" + ledgercode + "')";
                }
                if (batchyr != "")
                {
                    selqry = selqry + " and p.batch_year in('" + batchyr + "')";
                }
                if (courseid != "")
                {
                    selqry = selqry + " and C.Course_Id in('" + courseid + "')";

                }
                if (deptcode != "")
                {
                    selqry = selqry + " and d.Dept_Code in ('" + deptcode + "') ";
                }
                if (gettagvalue.Trim() != "" && gettagvalue.Trim() != "0")
                {
                    selqry = selqry + " and PayMode in ('" + gettagvalue + "')";
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                    }
                }
                selqry = selqry + "GROUP BY TextVal,PayMode,A.HeaderFK,LedgerFK,r.degree_Code,FeeCategory,r.batch_year ";
                //excess
                selqry = selqry + "  select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,A.LedgerFK,p.Batch_Year,A.FeeCategory from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Registration r,Degree d,Course C  WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no and r.App_No=p.app_no and r.App_No=A.App_No and d.Degree_Code =r.degree_code and c.Course_Id =d.Course_Id  and em.App_No = a.App_No   AND P.IsConfirm = 1   AND Admission_Status = 1 and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                if (sem != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                }
                if (headercode != "")
                {
                    selqry = selqry + " and Ex.HeaderFK in('" + headercode + "')";
                }
                if (ledgercode != "")
                {
                    selqry = selqry + "  and Ex.LedgerFK in('" + ledgercode + "')";
                }
                if (batchyr != "")
                {
                    selqry = selqry + " and p.batch_year in('" + batchyr + "')";
                }
                if (courseid != "")
                {
                    selqry = selqry + " and C.Course_Id in('" + courseid + "')";

                }
                if (deptcode != "")
                {
                    selqry = selqry + " and d.Dept_Code in ('" + deptcode + "') ";
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                    }
                }
                selqry = selqry + " GROUP BY A.HeaderFK ,A.LedgerfK,p.Batch_Year ,A.FeeCategory";
                if (activecol.Trim() == Convert.ToString(excessamt))
                {
                    selqry = selqry + " having SUM(Ex.Excessamt)>0 ";
                    flag = true;
                }
                selqry = selqry + "  select HeaderFK,LedgerPK,HeaderName,LedgerName from FM_HeaderMaster h,FM_LedgerMaster l where l.HeaderFK =h.HeaderPK and h.CollegeCode ='" + collegecode1 + "' order by isnull(l.priority,1000),l.ledgerName asc";
                #endregion
                #region  design
                bool paymodecheck = false;
                ds = d2.select_method_wo_parameter(selqry, "Text");
                if (gettagvalue.Trim() != "")
                {
                    if (ds.Tables[1].Rows.Count > 0)
                    {
                        paymodecheck = true;
                    }
                }
                else
                {
                    paymodecheck = true;
                }

                if (flag == true)
                {
                    if (ds.Tables[0].Rows.Count > 0 && paymodecheck == true && ds.Tables[2].Rows.Count > 0)
                    {
                        flag1 = true;
                    }
                }
                else
                {
                    if (ds.Tables[0].Rows.Count > 0 && paymodecheck == true)
                    {
                        flag1 = true;
                    }
                }

                if (flag1 == true)
                {
                    loadsemcolumns(sender, e);
                    DataView dv = new DataView();
                    fpsem.Sheets[0].RowCount = 0;
                    fpsem.Sheets[0].ColumnCount = 0;
                    fpsem.CommandBar.Visible = false;
                    fpsem.Sheets[0].AutoPostBack = true;
                    fpsem.Sheets[0].ColumnHeader.RowCount = 2;
                    fpsem.Sheets[0].RowHeader.Visible = false;
                    fpsem.Sheets[0].ColumnCount = 10;
                    FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
                    darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
                    darkstyle.ForeColor = Color.White;
                    fpsem.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
                    int check = 0;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 0].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                    fpsem.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;

                    fpsem.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Header Name";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Left;
                    fpsem.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Center;
                    fpsem.Sheets[0].Columns[1].Visible = true;

                    fpsem.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Ledger Name";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 2].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                    fpsem.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Left;
                    fpsem.Sheets[0].Columns[2].Visible = true;

                    fpsem.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Batch Year";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 3].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                    fpsem.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Center;
                    fpsem.Sheets[0].Columns[3].Visible = true;

                    fpsem.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Course Name";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 4].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
                    fpsem.Sheets[0].Columns[4].HorizontalAlign = HorizontalAlign.Left;
                    fpsem.Sheets[0].Columns[4].Visible = true;

                    fpsem.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Department Name";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 5].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 5].Font.Bold = true;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 5].Font.Name = "Book Antiqua";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 5].Font.Size = FontUnit.Medium;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;
                    fpsem.Sheets[0].Columns[5].HorizontalAlign = HorizontalAlign.Left;
                    fpsem.Sheets[0].Columns[5].Visible = true;

                    fpsem.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Semester";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 6].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 6].Font.Bold = true;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 6].Font.Name = "Book Antiqua";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 6].Font.Size = FontUnit.Medium;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;
                    fpsem.Sheets[0].Columns[6].HorizontalAlign = HorizontalAlign.Left;
                    fpsem.Sheets[0].Columns[6].Visible = true;

                    fpsem.Sheets[0].ColumnHeader.Cells[0, 7].Text = "Allot";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 7].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 7].Font.Bold = true;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 7].Font.Name = "Book Antiqua";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 7].Font.Size = FontUnit.Medium;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 7].HorizontalAlign = HorizontalAlign.Center;
                    fpsem.Sheets[0].Columns[7].HorizontalAlign = HorizontalAlign.Right;
                    fpsem.Sheets[0].Columns[7].Visible = true;
                    if (!colord.Contains("1"))
                    {
                        fpsem.Sheets[0].Columns[7].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpsem.Sheets[0].Columns[7].Visible = true;
                    }
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 8].Text = "Consustion";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 8].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 8].Font.Bold = true;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 8].Font.Name = "Book Antiqua";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 8].Font.Size = FontUnit.Medium;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 8].HorizontalAlign = HorizontalAlign.Center;
                    fpsem.Sheets[0].Columns[8].HorizontalAlign = HorizontalAlign.Right;
                    fpsem.Sheets[0].Columns[8].Visible = true;
                    if (!colord.Contains("2"))
                    {
                        fpsem.Sheets[0].Columns[8].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpsem.Sheets[0].Columns[8].Visible = true;
                    }
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 9].Text = "Government";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 9].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 9].Font.Bold = true;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 9].Font.Name = "Book Antiqua";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 9].Font.Size = FontUnit.Medium;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, 9].HorizontalAlign = HorizontalAlign.Center;
                    fpsem.Sheets[0].Columns[9].HorizontalAlign = HorizontalAlign.Right;
                    fpsem.Sheets[0].Columns[9].Visible = true;
                    if (!colord.Contains("3"))
                    {
                        fpsem.Sheets[0].Columns[9].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpsem.Sheets[0].Columns[9].Visible = true;
                    }
                    fpsem.Sheets[0].ColumnCount++;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Text = "Total";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("4"))
                    {
                        fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpsem.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsem.Sheets[0].ColumnCount - 1, 2, 1);

                    fpsem.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
                    fpsem.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
                    fpsem.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
                    fpsem.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
                    fpsem.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
                    fpsem.Sheets[0].ColumnHeaderSpanModel.Add(0, 5, 2, 1);
                    fpsem.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 2, 1);
                    fpsem.Sheets[0].ColumnHeaderSpanModel.Add(0, 7, 2, 1);
                    fpsem.Sheets[0].ColumnHeaderSpanModel.Add(0, 8, 2, 1);
                    fpsem.Sheets[0].ColumnHeaderSpanModel.Add(0, 9, 2, 1);
                    Hashtable newhash = new Hashtable();
                    if (chkl_paid.Items.Count > 0)
                    {
                        for (int s = 0; s < chkl_paid.Items.Count; s++)
                        {
                            if (chkl_paid.Items[s].Selected == true)
                            {
                                check++;
                                fpsem.Sheets[0].ColumnCount++;
                                newhash.Add(Convert.ToString(chkl_paid.Items[s].Value), fpsem.Sheets[0].ColumnCount - 1);
                                fpsem.Sheets[0].ColumnHeader.Cells[1, fpsem.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_paid.Items[s].Text);
                                fpsem.Sheets[0].ColumnHeader.Cells[1, fpsem.Sheets[0].ColumnCount - 1].Tag = Convert.ToString(chkl_paid.Items[s].Value);
                                fpsem.Sheets[0].ColumnHeader.Cells[1, fpsem.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                                fpsem.Sheets[0].ColumnHeader.Cells[1, fpsem.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                fpsem.Sheets[0].ColumnHeader.Cells[1, fpsem.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                fpsem.Sheets[0].ColumnHeader.Cells[1, fpsem.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                fpsem.Sheets[0].ColumnHeader.Cells[1, fpsem.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                                fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                                fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = true;
                                if (!colord.Contains("5"))
                                {
                                    fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                                if (colord.Count == 0)
                                {
                                    fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = true;
                                }

                            }
                        }
                        if (check != 0)
                        {
                            fpsem.Sheets[0].ColumnCount++;
                            fpsem.Sheets[0].ColumnHeader.Cells[1, fpsem.Sheets[0].ColumnCount - 1].Text = "Total Paid";
                            fpsem.Sheets[0].ColumnHeader.Cells[1, fpsem.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                            fpsem.Sheets[0].ColumnHeader.Cells[1, fpsem.Sheets[0].ColumnCount - 1].Font.Bold = true;
                            fpsem.Sheets[0].ColumnHeader.Cells[1, fpsem.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                            fpsem.Sheets[0].ColumnHeader.Cells[1, fpsem.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                            fpsem.Sheets[0].ColumnHeader.Cells[1, fpsem.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                            fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                            if (!colord.Contains("5"))
                            {
                                fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = false;
                            }
                            if (colord.Count == 0)
                            {
                                fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = true;
                            }
                        }

                    }
                    if (check == 0)
                    {
                        fpsem.Sheets[0].ColumnCount++;
                        fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Text = "Paid";
                        fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                        fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Font.Bold = true;
                        fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                        fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                        fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                        fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                        fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = true;
                        if (!colord.Contains("5"))
                        {
                            fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = false;
                        }
                        if (colord.Count == 0)
                        {
                            fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = true;
                        }
                        fpsem.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsem.Sheets[0].ColumnCount - 1, 2, 1);
                    }
                    else
                    {
                        fpsem.Sheets[0].ColumnHeaderSpanModel.Add(0, 11, 1, check + 1);
                        fpsem.Sheets[0].ColumnHeader.Cells[0, 11].Text = "Paid";
                        fpsem.Sheets[0].ColumnHeader.Cells[0, 11].ForeColor = ColorTranslator.FromHtml("#000000");
                        fpsem.Sheets[0].ColumnHeader.Cells[0, 11].Font.Bold = true;
                        fpsem.Sheets[0].ColumnHeader.Cells[0, 11].Font.Name = "Book Antiqua";
                        fpsem.Sheets[0].ColumnHeader.Cells[0, 11].Font.Size = FontUnit.Medium;
                        fpsem.Sheets[0].ColumnHeader.Cells[0, 11].HorizontalAlign = HorizontalAlign.Center;
                        fpsem.Sheets[0].Columns[11].HorizontalAlign = HorizontalAlign.Right;
                        if (!colord.Contains("5"))
                        {
                            fpsem.Sheets[0].Columns[6].Visible = false;
                        }
                        if (colord.Count == 0)
                        {
                            fpsem.Sheets[0].Columns[6].Visible = true;
                        }
                    }


                    fpsem.Sheets[0].ColumnCount++;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Text = "Balance";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("6"))
                    {
                        fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpsem.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsem.Sheets[0].ColumnCount - 1, 2, 1);


                    fpsem.Sheets[0].ColumnCount++;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Text = "Refund Amount";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("7"))
                    {
                        fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpsem.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsem.Sheets[0].ColumnCount - 1, 2, 1);

                    fpsem.Sheets[0].ColumnCount++;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Text = "Excess Amount";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("8"))
                    {
                        fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpsem.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsem.Sheets[0].ColumnCount - 1, 2, 1);

                    fpsem.Sheets[0].ColumnCount++;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Text = "Fine Amount";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpsem.Sheets[0].ColumnHeader.Cells[0, fpsem.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("9"))
                    {
                        fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpsem.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsem.Sheets[0].ColumnCount - 1, 2, 1);
                #endregion
                    #region fpsem value
                    string totalvalue = "";
                    double bal = 0;
                    for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                    {
                        fpsem.Sheets[0].Rows.Count = ds.Tables[0].Rows.Count;
                        fpsem.Sheets[0].Cells[i, 0].Text = Convert.ToString(i + 1);
                        ds.Tables[3].DefaultView.RowFilter = "LedgerPK='" + Convert.ToString(ds.Tables[0].Rows[i]["LedgerFK"]) + "'";
                        dvhead = ds.Tables[3].DefaultView;
                        if (Convert.ToString(dvhead) != "" && dvhead != null)
                        {
                            fpsem.Sheets[0].Cells[i, 1].Text = Convert.ToString(dvhead[0]["Headername"]);
                            fpsem.Sheets[0].Cells[i, 1].Tag = Convert.ToString(dvhead[0]["HeaderFK"]);
                            fpsem.Sheets[0].Cells[i, 2].Text = Convert.ToString(dvhead[0]["Ledgername"]);
                            fpsem.Sheets[0].Cells[i, 2].Tag = Convert.ToString(dvhead[0]["LedgerPK"]);
                        }
                        fpsem.Sheets[0].Cells[i, 3].Text = Convert.ToString(ds.Tables[0].Rows[i]["batch_year"].ToString());
                        fpsem.Sheets[0].Cells[i, 3].Tag = Convert.ToString(ds.Tables[0].Rows[i]["batch_year"].ToString());
                        fpsem.Sheets[0].Cells[i, 4].Text = Convert.ToString(ds.Tables[0].Rows[i]["Course_Name"].ToString());
                        fpsem.Sheets[0].Cells[i, 4].Tag = Convert.ToString(ds.Tables[0].Rows[i]["Course_Id"].ToString());
                        fpsem.Sheets[0].Cells[i, 5].Text = Convert.ToString(ds.Tables[0].Rows[i]["Dept_Name"].ToString());
                        fpsem.Sheets[0].Cells[i, 5].Tag = Convert.ToString(ds.Tables[0].Rows[i]["Dept_Code"].ToString());
                        fpsem.Sheets[0].Cells[i, 6].Text = Convert.ToString(ds.Tables[0].Rows[i]["TextVal"].ToString());
                        fpsem.Sheets[0].Cells[i, 6].Tag = Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"].ToString());
                        allot = Convert.ToString(ds.Tables[0].Rows[i]["Allot"]);
                        if (allot != "" && allot != null)
                        {
                            fpsem.Sheets[0].Cells[i, 7].Text = Convert.ToString(Math.Round(Convert.ToDouble(allot), 2));
                        }
                        else
                        {
                            fpsem.Sheets[0].Cells[i, 7].Text = "0";
                        }
                        consession = Convert.ToString(ds.Tables[0].Rows[i]["consustion"]);
                        if (consession != "" && consession != null)
                        {
                            fpsem.Sheets[0].Cells[i, 8].Text = Convert.ToString(Math.Round(Convert.ToDouble(consession), 2));
                        }
                        else
                        {
                            fpsem.Sheets[0].Cells[i, 8].Text = "0";
                        }
                        // fpsem.Sheets[0].Cells[i, 7].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["allot"]), 2));
                        // fpsem.Sheets[0].Cells[i, 8].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Consustion"]), 2));
                        string val = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
                        string value = "";
                        if (val == "" || val == null)
                        {
                            value = "0";
                        }
                        else
                        {
                            value = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
                        }
                        fpsem.Sheets[0].Cells[i, 9].Text = value;
                        //  fpsem.Sheets[0].Cells[i, 10].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Total"]), 2));

                        totalvalue = Convert.ToString(ds.Tables[0].Rows[i]["Total"]);
                        fpsem.Sheets[0].Cells[i, 10].Text = Convert.ToString(Math.Round(Convert.ToDouble(totalvalue), 2));
                        string paidamt = "";
                        paidamt = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
                        if (check == 0)
                        {
                            if (paidamt == "" || paidamt == null)
                            {
                                fpsem.Sheets[0].Cells[i, fpsem.Sheets[0].ColumnCount - 5].Text = "0";
                            }
                            else
                            {
                                fpsem.Sheets[0].Cells[i, fpsem.Sheets[0].ColumnCount - 5].Text = paidamt;
                            }
                        }
                        if (check != 0)
                        {
                            //if (paidamt == "" || paidamt == null)
                            //{
                            //    fpsem.Sheets[0].Cells[i, fpsem.Sheets[0].ColumnCount - 2].Text = "0";
                            //}
                            //else
                            //{
                            //    fpsem.Sheets[0].Cells[i, fpsem.Sheets[0].ColumnCount - 2].Text = paidamt;
                            //}
                            // fpledger.Sheets[0].Cells[i, fpledger.Sheets[0].ColumnCount - 2].Text = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
                        }

                        // fpsem.Sheets[0].Cells[i, fpsem.Sheets[0].ColumnCount - 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Balance"]), 2));

                        fpsem.Sheets[0].Cells[i, fpsem.Sheets[0].ColumnCount - 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["RefundAmount"]), 2));
                        DataView dvex = new DataView();
                        if (ds.Tables[2].Rows.Count > 0)
                        {
                            ds.Tables[2].DefaultView.RowFilter = "FeeCategory='" + Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"]) + "'";
                            dvex = ds.Tables[2].DefaultView;
                            if (dvex.Count > 0 && dvex.Count != null)
                            {
                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = Convert.ToString(dvex[0]["ExcessAmount"]);
                            }
                        }
                        //fpsem.Sheets[0].Cells[i, fpsem.Sheets[0].ColumnCount - 1].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["RefundAmount"]), 2));
                        double totamount = 0;
                        double fnlamount = 0;
                        if (ds.Tables[1].Rows.Count > 0)
                        {
                            if (chkl_paid.Items.Count > 0)
                            {
                                for (int pay = 0; pay < chkl_paid.Items.Count; pay++)
                                {
                                    if (chkl_paid.Items[pay].Selected == true)
                                    {
                                        ds.Tables[1].DefaultView.RowFilter = "PayMode='" + Convert.ToString(chkl_paid.Items[pay].Value) + "' and HeaderFK='" + Convert.ToString(ds.Tables[0].Rows[i]["HeaderFK"]) + "' and LedgerFK='" + Convert.ToString(ds.Tables[0].Rows[i]["LedgerFK"]) + "' and degree_Code='" + Convert.ToString(ds.Tables[0].Rows[i]["degree_Code"]) + "' and FeeCategory='" + Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"]) + "' and batch_year='" + Convert.ToString(ds.Tables[0].Rows[i]["batch_year"]) + "'";
                                        dv = ds.Tables[1].DefaultView;
                                        if (dv.Count == 0 || dv.Count == null)
                                        {
                                            int count = 0;
                                            int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
                                            fpsem.Sheets[0].Cells[i, colnew].Text = "0";
                                        }
                                        if (dv.Count > 0)
                                        {
                                            int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
                                            fpsem.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv[0]["total"]);
                                            totamount = Convert.ToDouble(dv[0]["total"]);
                                            if (totamount != 0)
                                            {
                                                fnlamount = fnlamount + totamount;
                                            }
                                        }
                                    }
                                }
                                if (check != 0)
                                    fpsem.Sheets[0].Cells[i, fpsem.Sheets[0].ColumnCount - 5].Text = Convert.ToString(fnlamount);
                                if (totalvalue != "" && totalvalue != null)
                                {
                                    bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(fnlamount);
                                    fpsem.Sheets[0].Cells[i, fpsem.Sheets[0].ColumnCount - 4].Text = Convert.ToString(bal);
                                    if (Convert.ToDouble(bal) == 0)
                                    {
                                        fpsem.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#F08080");
                                    }
                                    if (Convert.ToDouble(bal) != 0)
                                    {
                                        fpsem.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#90EE90");
                                    }
                                }
                            }
                        }
                    }
                    fpsem.Sheets[0].PageSize = ds.Tables[0].Rows.Count + 1;
                    fpsem.Sheets[0].Rows.Count++;
                    fpsem.Sheets[0].Cells[fpsem.Sheets[0].Rows.Count - 1, 0].Text = "Grand Total";
                    double hedval = 0;
                    for (int j = 7; j < fpsem.Sheets[0].Columns.Count; j++)
                    {
                        for (int i = 0; i < fpsem.Rows.Count - 1; i++)
                        {
                            string values = Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
                            if (values != "0" && values != "-" && values != "")
                            {
                                if (hedval == 0)
                                {
                                    hedval = Convert.ToDouble(fpsem.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
                                }
                                else
                                {
                                    hedval = hedval + Convert.ToDouble(fpsem.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
                                }
                            }
                        }
                        fpsem.Sheets[0].Cells[fpsem.Sheets[0].Rows.Count - 1, j].Text = Convert.ToString(hedval);
                        hedval = 0;
                    }
                    fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = false;
                    #endregion
                    #region visible

                    lbl_sem.Visible = true;
                    lbl_sem.Text = "->Header(" + colhedername + ")->Ledger(" + colledname + ")->Batch(" + colbatname + ")->Degree(" + coldegname + ")->Department(" + coldeptname + ")->Semaster";
                    divsema.Visible = true;
                    divsem.Visible = true;
                    fpsem.Visible = true;
                    // btn_fpsema.Visible = true;
                    rptprint.Visible = true;
                    rptprint.Attributes.Add("Style", "margin-top:-60px; margin-left:10px;");
                    // pnl_semcolord.Visible = true;
                    // pnl_semcolorder.Visible = true;
                    // loadsemcolorder();
                    ViewState["sem"] = 5;
                    rptprint.Visible = false;
                    fpsem.SaveChanges();
                    #endregion
                }
                else
                {
                    fpsem.Visible = false;
                    divsem.Visible = false;
                    lbl_sem.Visible = false;
                    //  pnl_semcolord.Visible = false;
                    imgdiv2.Visible = true;
                    lbl_alert.Visible = true;
                    lbl_alert.Text = "No Record Found";
                }
            }
        }
        catch { }
    }
    #endregion

    #region sem
    public void semcellclicks(object sender, EventArgs e)
    {
        try
        {
            if (studcellclick == true)
            {
                #region getvalue
                string sec = "";
                string stud = "";
                string seatype = "";
                string studtype = "";
                string paid = "";
                string semacode = "";
                string allot = "";
                string consession = "";
                string Finyearvalue = "";

                sec = Convert.ToString(getCblSelectedValue(cbl_sect));
                stud = Convert.ToString(getCblSelectedValue(cbl_stud));
                seatype = Convert.ToString(getCblSelectedValue(cbl_seat));
                studtype = Convert.ToString(getCblSelectedValue(cbl_studtype));
                paid = Convert.ToString(getCblSelectedValue(chkl_paid));
                Finyearvalue = Convert.ToString(getCblSelectedValue(chklsfyear));

                string fromdate = "";
                string todate = "";
                int datewise = 0;
                if (chk_datewise.Checked == true)
                {
                    datewise = 1;
                    if (datewise == 1)
                    {
                        fromdate = txt_fromdate.Text;
                        todate = txt_todate.Text;
                        if (fromdate != "" && todate != "")
                        {
                            string[] frdate = fromdate.Split('/');
                            if (frdate.Length == 3)
                            {
                                fromdate = frdate[1].ToString() + "/" + frdate[0].ToString() + "/" + frdate[2].ToString();
                            }
                            string[] tdate = todate.Split('/');
                            if (tdate.Length == 3)
                            {
                                todate = tdate[1].ToString() + "/" + tdate[0].ToString() + "/" + tdate[2].ToString();
                            }
                        }
                    }
                }

                string activerow = fpsem.ActiveSheetView.ActiveRow.ToString();
                string activecol = fpsem.ActiveSheetView.ActiveColumn.ToString();

                string hedcount = "";
                string ledcount = "";
                string batcount = "";
                string coursecode = "";
                string deptcodefp = "";
                string semcodefp = "";
                ArrayList ar = new ArrayList();
                ArrayList ardept = new ArrayList();
                ArrayList ardeptcode = new ArrayList();
                ArrayList arsem = new ArrayList();

                int actnew = 0;
                int actbal = 0;
                int actpaidtotal = 0;
                int refundamt = 0;
                int excessamt = 0;
                int fineamt = 0;
                if (activecol.Trim() != "")
                {
                    actnew = Convert.ToInt32(activecol);
                    actpaidtotal = Convert.ToInt32(fpsem.Sheets[0].ColumnCount - 5);
                    actbal = Convert.ToInt32(fpsem.Sheets[0].ColumnCount - 4);
                    refundamt = Convert.ToInt32(fpsem.Sheets[0].ColumnCount - 3);
                    excessamt = Convert.ToInt32(fpsem.Sheets[0].ColumnCount - 2);
                    fineamt = Convert.ToInt32(fpsem.Sheets[0].ColumnCount - 1);
                }
                string gettagvalue = "";
                if (actnew > 10)
                {
                    gettagvalue = Convert.ToString(fpsem.Sheets[0].ColumnHeader.Cells[1, actnew].Tag);
                }


                int act = Convert.ToInt32(activerow);
                if (act == fpdept.Sheets[0].Rows.Count - 1)
                {
                    for (int i = 0; i < fpsem.Sheets[0].Rows.Count - 1; i++)
                    {
                        if ((hedcount == "") && (ledcount == "") && (batcount == "") && (coursecode == "") && (deptcodefp == ""))
                        {
                            hedcount = Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(i), 1].Tag);
                            ledcount = Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(i), 2].Tag);
                            ar.Add(Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(i), 3].Tag));
                            batcount = Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(i), 3].Tag);
                            ardept.Add(Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(i), 4].Tag));
                            coursecode = Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(i), 4].Tag);
                            ardeptcode.Add(Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(i), 5].Tag));
                            deptcodefp = Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(i), 5].Tag);
                            arsem.Add(Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(i), 6].Tag));
                            semcodefp = Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(i), 6].Tag);
                        }
                        else
                        {
                            hedcount = hedcount + "','" + "" + Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(i), 1].Tag) + "";
                            ledcount = ledcount + "','" + "" + Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(i), 2].Tag) + "";
                            if (!ar.Contains(batcount))
                            {
                                ar.Add(Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(i), 3].Tag));
                                batcount = batcount + "','" + "" + Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(i), 3].Tag) + "";
                            }
                            if (!ardept.Contains(coursecode))
                            {
                                ardept.Add(Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(i), 4].Tag));
                                coursecode = coursecode + "','" + "" + Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(i), 4].Tag) + "";
                            }
                            if (!ardeptcode.Contains(deptcodefp))
                            {
                                ardeptcode.Add(Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(i), 5].Tag));
                                deptcodefp = deptcodefp + "','" + "" + Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(i), 5].Tag) + "";
                            }
                            if (!semcodefp.Contains(semcodefp))
                            {
                                arsem.Add(Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(i), 6].Tag));
                                semcodefp = semcodefp + "','" + "" + Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(i), 6].Tag) + "";
                            }
                        }


                    }
                    ar.Clear();
                    ardept.Clear();
                    ardeptcode.Clear();
                }
                string headercode = Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Tag);
                string ledgercode = Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Tag);
                string batchyr = Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(activerow), 3].Tag);
                string courseid = Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(activerow), 4].Tag);
                string deptcode = Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(activerow), 5].Tag);
                string semcode = Convert.ToString(fpsem.Sheets[0].Cells[Convert.ToInt32(activerow), 6].Tag);


                if ((hedcount != "") && (ledcount != "") && (batcount != "") && (coursecode != "") && (deptcodefp != ""))
                {
                    headercode = hedcount;
                    ledgercode = ledcount;
                    batchyr = batcount;
                    courseid = coursecode;
                    deptcode = deptcodefp;
                    semcode = semcodefp;
                }

                if (fpsem.Sheets[0].Rows.Count > 0)
                {
                    colsemname = Convert.ToString(fpsem.Sheets[0].ColumnHeader.Cells[0, Convert.ToInt32(activecol)].Text);
                    if (colsemname.Trim() == "")
                    {
                        colsemname = Convert.ToString(fpsem.Sheets[0].ColumnHeader.Cells[1, Convert.ToInt32(activecol)].Text);
                    }
                }
                #endregion
                Boolean flag = false;
                Boolean flag1 = false;
                #region query

                string selqry = "";
                ////selqry = "SELECT a.HeaderFK,HeaderName,LedgerName,LedgerFK,batch_year,G.Course_Id,Course_Name,G.Dept_Code,Dept_Name,TextVal,P.app_no,g.Degree_Code,A.FeeCategory,App_FormNo Roll_No,'' Reg_No,'' Roll_Admit,Stud_Name,Course_Name+'-'+Dept_Name Degree,SUM(FeeAmount) as allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A, FM_HeaderMaster H,FM_LedgerMaster L,Applyn P,Degree G,Course C,Department D,TextValTable T WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code AND A.FeeCategory = T.TextCode and a.HeaderFK = h.HeaderPK and a.LedgerFK = l.LedgerPK and h.HeaderPK = l.LedgerPK AND P.IsConfirm = 1 AND Admission_Status = 0  and G.college_code ='" + collegecode1 + "'";

                ////if (batch1 != "")
                ////{
                ////    selqry = selqry + "and p.Batch_Year in ('" + batch1 + "')";
                ////}

                ////if (deptdegcode != "")
                ////{
                ////    selqry = selqry + " and g.Degree_Code in ('" + deptdegcode + "')";
                ////}

                ////if (sem != "")
                ////{
                ////    selqry = selqry + "and A.FeeCategory in ('" + semcode + "')";
                ////}
                ////if (stud != "")
                ////{
                ////    selqry = selqry + "and p.mode in ('" + stud + "')";
                ////}
                ////if (seatype != "")
                ////{
                ////    selqry = selqry + "and p.seattype in ('" + seatype + "')";
                ////}
                ////if (studtype != "")
                ////{
                ////    selqry = selqry + " and p.Stud_Type in ('" + studtype + "')";
                ////}
                ////if (headercode != "")
                ////{
                ////    selqry = selqry + "and A.HeaderFK in ('" + headercode + "')";
                ////}
                ////if (ledgercode != "")
                ////{
                ////    selqry = selqry + " and LedgerFK in ('" + ledgercode + "')";
                ////}
                ////if (batchyr != "")
                ////{
                ////    selqry = selqry + " and batch_year in('" + batchyr + "')";
                ////}
                ////if (courseid != "")
                ////{
                ////    selqry = selqry + " and G.Course_Id in('" + courseid + "')";

                ////}
                ////if (deptcode != "")
                ////{
                ////    selqry = selqry + " and G.Dept_Code in ('" + deptcode + "') ";
                ////}
                ////if (datewise == 1)
                ////{
                ////    if (fromdate != "" && todate != "")
                ////    {
                ////        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                ////    }
                ////}
                ////selqry = selqry + "GROUP BY a.HeaderFK,HeaderName,LedgerName,LedgerFK,batch_year,G.Course_Id,Course_Name,G.Dept_Code,Dept_Name,TextVal,P.app_no,App_FormNo,stud_name,Course_Name,Dept_Name,g.Degree_Code,A.FeeCategory  ";
                ////if (activecol.Trim() == "8")
                ////{
                ////    selqry = selqry + " having SUM(DeductAmout) > 0 ";
                ////}
                ////if (activecol.Trim() == "9")
                ////{
                ////    selqry = selqry + " having SUM(FromGovtAmt) > 0";
                ////}
                ////if (activecol.Trim() == Convert.ToString(actbal))
                ////{
                ////    selqry = selqry + " having SUM(BalAmount) > 0";
                ////}
                ////if (activecol.Trim() == Convert.ToString(actpaidtotal))
                ////{
                ////    selqry = selqry + " having sum(BalAmount) = 0";
                ////}
                ////if (activecol.Trim() == Convert.ToString(refundamt))
                ////{
                ////    selqry = selqry + "having SUM(RefundAmount)>0";
                ////}

                //////if (activecol.Trim() == Convert.ToString(excessamt))
                //////{
                //////    selqry = selqry + "having SUM(RefundAmount)>0";
                //////}
                //selqry = selqry + "  SELECT a.HeaderFK,HeaderName,LedgerName,LedgerFK,r.batch_year,G.Course_Id,Course_Name,G.Dept_Code,Dept_Name,TextVal,P.app_no,g.Degree_Code,A.FeeCategory,App_FormNo Roll_No,'' Reg_No,'' Roll_Admit,R.Stud_Name,Course_Name+'-'+Dept_Name Degree,SUM(FeeAmount) as allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount FROM FT_FeeAllot A, FM_HeaderMaster H,FM_LedgerMaster L,Applyn P,Registration R,Degree G,Course C,Department D,TextValTable T WHERE A.App_No = P.app_no AND P.app_no = R.App_No AND R.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code  and g.college_code = d.college_code and a.HeaderFK = h.HeaderPK and a.LedgerFK = l.LedgerPK and h.HeaderPK = l.Headerfk AND P.IsConfirm = 1 AND Admission_Status = 1 AND A.FeeCategory = T.TextCode and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";

                //if (batch1 != "")
                //{
                //    selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + semcode + "')";
                //}
                //if (sec != "")
                //{
                //    //selqry = selqry + " and   ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    // selqry = selqry + "and r.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    //selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    //  selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headercode != "")
                //{
                //    selqry = selqry + "and A.HeaderFK in ('" + headercode + "')";
                //}
                //if (ledgercode != "")
                //{
                //    selqry = selqry + " and LedgerFK in ('" + ledgercode + "')";
                //}
                //if (batchyr != "")
                //{
                //    selqry = selqry + " and r.batch_year in('" + batchyr + "')";
                //}
                //if (courseid != "")
                //{
                //    selqry = selqry + " and G.Course_Id in('" + courseid + "')";

                //}
                //if (deptcode != "")
                //{
                //    selqry = selqry + " and G.Dept_Code in ('" + deptcode + "') ";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY a.HeaderFK,HeaderName,LedgerName,LedgerFK,r.batch_year,G.Course_Id,Course_Name,G.Dept_Code,Dept_Name,TextVal,P.app_no,App_FormNo,r.stud_name,Course_Name,Dept_Name,g.Degree_Code,A.FeeCategory ";
                //if (activecol.Trim() == "8")
                //{
                //    selqry = selqry + " having SUM(DeductAmout) > 0 ";
                //}
                //if (activecol.Trim() == "9")
                //{
                //    selqry = selqry + " having SUM(FromGovtAmt) > 0";
                //}
                //if (activecol.Trim() == Convert.ToString(actbal))
                //{
                //    selqry = selqry + " having SUM(BalAmount) > 0";
                //}
                //if (activecol.Trim() == Convert.ToString(actpaidtotal))
                //{
                //    selqry = selqry + " having sum(BalAmount) = 0";
                //}
                //if (activecol.Trim() == Convert.ToString(refundamt))
                //{
                //    selqry = selqry + "having SUM(RefundAmount)>0";
                //}

                ////if (activecol.Trim() == Convert.ToString(excessamt))
                ////{
                ////    selqry = selqry + "having SUM(RefundAmount)>0";
                ////}
                ////selqry = selqry + " SELECT a.HeaderFK,LedgerFK,batch_year,G.Course_Id,Course_Name,G.Dept_Code,Dept_Name,TextVal,PayMode,SUM(Debit) as total FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C,Department D,TextValTable T WHERE A.App_No = P.app_no AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 0 AND A.FeeCategory = T.TextCode and G.college_code ='" + collegecode1 + "'";

                ////if (batch1 != "")
                ////{
                ////    selqry = selqry + "and p.Batch_Year in ('" + batch1 + "')";
                ////}
                ////if (deptdegcode != "")
                ////{
                ////    selqry = selqry + " and g.Degree_Code in ('" + deptdegcode + "')";
                ////}
                ////if (sem != "")
                ////{
                ////    selqry = selqry + "and A.FeeCategory in ('" + semcode + "')";
                ////}
                ////if (stud != "")
                ////{
                ////    selqry = selqry + "and p.mode in ('" + stud + "')";
                ////}
                ////if (seatype != "")
                ////{
                ////    selqry = selqry + "and p.seattype in ('" + seatype + "')";
                ////}
                ////if (studtype != "")
                ////{
                ////    selqry = selqry + " and p.Stud_Type in ('" + studtype + "')";
                ////}
                ////if (headercode != "")
                ////{
                ////    selqry = selqry + "and A.HeaderFK in ('" + headercode + "')";
                ////}
                ////if (ledgercode != "")
                ////{
                ////    selqry = selqry + " and LedgerFK in ('" + ledgercode + "')";
                ////}
                ////if (batchyr != "")
                ////{
                ////    selqry = selqry + " and batch_year in('" + batchyr + "')";
                ////}
                ////if (courseid != "")
                ////{
                ////    selqry = selqry + " and G.Course_Id in('" + courseid + "')";

                ////}
                ////if (deptcode != "")
                ////{
                ////    selqry = selqry + " and G.Dept_Code in ('" + deptcode + "') ";
                ////}

                ////if (gettagvalue.Trim() != "" && gettagvalue.Trim() != "0")
                ////{
                ////    selqry = selqry + " and PayMode in ('" + gettagvalue + "')";
                ////}
                ////if (datewise == 1)
                ////{
                ////    if (fromdate != "" && todate != "")
                ////    {
                ////        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                ////    }
                ////}
                ////selqry = selqry + "  GROUP BY a.HeaderFK,LedgerFK,batch_year,G.Course_Id,Course_Name,G.Dept_Code,Dept_Name,TextVal, PayMode";
                //selqry = selqry + " SELECT a.HeaderFK,LedgerFK,p.batch_year,G.Course_Id,Course_Name,G.Degree_Code,Dept_Name,TextVal,PayMode,SUM(Debit) as total,A.app_no,A.FeeCategory FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C,Department D,TextValTable T WHERE A.App_No = P.app_no  AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 1 AND A.FeeCategory = T.TextCode and g.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";

                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + semcode + "')";
                //}
                ////if (sec != "")
                ////{
                ////    selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                ////}
                //if (stud != "")
                //{
                //    //selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    //  selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    // selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headercode != "")
                //{
                //    selqry = selqry + "and A.HeaderFK in ('" + headercode + "')";
                //}
                //if (ledgercode != "")
                //{
                //    selqry = selqry + " and LedgerFK in ('" + ledgercode + "')";
                //}
                //if (batchyr != "")
                //{
                //    selqry = selqry + " and p.batch_year in('" + batchyr + "')";
                //}
                //if (courseid != "")
                //{
                //    selqry = selqry + " and G.Course_Id in('" + courseid + "')";

                //}
                //if (deptcode != "")
                //{
                //    selqry = selqry + " and G.Dept_Code in ('" + deptcode + "') ";
                //}

                //if (gettagvalue.Trim() != "" && gettagvalue.Trim() != "0")
                //{
                //    selqry = selqry + " and PayMode in ('" + gettagvalue + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                //    }
                //}
                //selqry = selqry + "GROUP BY a.HeaderFK,LedgerFK,p.batch_year,G.Course_Id,Course_Name,G.Degree_Code,Dept_Name,TextVal,PayMode,A.app_no,A.FeeCategory";

                //selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,h.LedgerPK,p.Batch_Year,C.Course_Id,d.Dept_Code,A.FeeCategory,p.App_No from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Degree G,Course C,Department D,FM_LedgerMaster H,FM_HeaderMaster fh WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code  and h.LedgerPK =ex.LedgerFK and ex.HeaderFK=h.HeaderFK and h.HeaderFK=fh.HeaderPK and em.App_No = a.App_No   AND P.IsConfirm = 1  and a.LedgerFK=h.LedgerPK   AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                //if (batch1 != "")
                //{
                //    selqry = selqry + " and p.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  g.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + sem + "')";
                //}
                //if (sec != "")
                //{
                //    // selqry = selqry + " and ISNULL( r.Sections,'') in ('" + sec + "','')";
                //}
                //if (stud != "")
                //{
                //    //selqry = selqry + "and p.mode in ('" + stud + "')";
                //}
                //if (seatype != "")
                //{
                //    // selqry = selqry + "and  p.seattype in ('" + seatype + "')";
                //}
                //if (studtype != "")
                //{
                //    // selqry = selqry + "  and p.Stud_Type in ('" + studtype + "')";
                //}
                //if (headercode != "")
                //{
                //    selqry = selqry + " and Ex.HeaderFK in('" + headercode + "')";
                //}
                //if (ledgercode != "")
                //{
                //    selqry = selqry + "  and Ex.LedgerFK in('" + ledgercode + "')";
                //}
                //if (datewise == 1)
                //{
                //    if (fromdate != "" && todate != "")
                //    {
                //        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                //    }
                //}
                //selqry = selqry + " GROUP BY A.HeaderFK ,h.LedgerPK,p.Batch_Year ,C.Course_Id,d.Dept_Code,A.FeeCategory ,p.App_No";
                //if (activecol.Trim() == Convert.ToString(excessamt))
                //{
                //    selqry = selqry + " having SUM(Ex.Excessamt)>0 ";
                //    flag = true;
                //}
                #endregion
                #region newquery
                selqry = selqry + "  SELECT a.HeaderFK,HeaderName,LedgerName,LedgerFK,r.batch_year,G.Course_Id,Course_Name,G.Dept_Code,Dept_Name,TextVal,P.app_no,g.Degree_Code,A.FeeCategory,App_FormNo Roll_No,'' Reg_No,'' Roll_Admit,R.Stud_Name,Course_Name+'-'+Dept_Name Degree,SUM(FeeAmount) as allot,SUM(DeductAmout) as Consustion,SUM(FromGovtAmt) as Government,SUM(TotalAmount) as Total,SUM(PaidAmount) as Paid,SUM(BalAmount) as Balance,SUM(RefundAmount ) as RefundAmount,l.priority FROM FT_FeeAllot A, FM_HeaderMaster H,FM_LedgerMaster L,Applyn P,Registration R,Degree G,Course C,Department D,TextValTable T WHERE A.App_No = P.app_no AND P.app_no = R.App_No AND R.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code  and g.college_code = d.college_code and a.HeaderFK = h.HeaderPK and a.LedgerFK = l.LedgerPK and h.HeaderPK = l.Headerfk AND P.IsConfirm = 1 AND Admission_Status = 1 AND A.FeeCategory = T.TextCode and r.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";

                //if (batch1 != "")
                //{
                //    selqry = selqry + " and r.Batch_Year in ('" + batch1 + "')";
                //}
                //if (deptdegcode != "")
                //{
                //    selqry = selqry + "  and  r.Degree_Code in ('" + deptdegcode + "')";
                //}
                //if (sem != "")
                //{
                //    selqry = selqry + " and A.FeeCategory in ('" + semcode + "')";
                //}

                if (headercode != "")
                {
                    selqry = selqry + "and A.HeaderFK in ('" + headercode + "')";
                }
                if (ledgercode != "")
                {
                    selqry = selqry + " and LedgerFK in ('" + ledgercode + "')";
                }
                if (batchyr != "")
                {
                    selqry = selqry + " and r.batch_year in('" + batchyr + "')";
                }
                if (courseid != "")
                {
                    selqry = selqry + " and G.Course_Id in('" + courseid + "')";
                }
                if (deptcode != "")
                {
                    selqry = selqry + " and G.Dept_Code in ('" + deptcode + "') ";
                }
                if (semcode != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + semcode + "')";
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                    }
                }
                selqry = selqry + "GROUP BY a.HeaderFK,HeaderName,LedgerName,LedgerFK,r.batch_year,G.Course_Id,Course_Name,G.Dept_Code,Dept_Name,TextVal,P.app_no,App_FormNo,r.stud_name,Course_Name,Dept_Name,g.Degree_Code,A.FeeCategory,l.priority ";
                if (activecol.Trim() == "8")
                {
                    selqry = selqry + " having SUM(DeductAmout) > 0 ";
                }
                if (activecol.Trim() == "9")
                {
                    selqry = selqry + " having SUM(FromGovtAmt) > 0";
                }
                if (activecol.Trim() == Convert.ToString(actbal))
                {
                    selqry = selqry + " having SUM(BalAmount) > 0";
                }
                if (activecol.Trim() == Convert.ToString(actpaidtotal))
                {
                    selqry = selqry + " having sum(BalAmount) = 0";
                }
                if (activecol.Trim() == Convert.ToString(refundamt))
                {
                    selqry = selqry + "having SUM(RefundAmount)>0";
                }
                selqry += " order by isnull(l.priority,1000),l.ledgerName asc";
                selqry = selqry + " SELECT a.HeaderFK,LedgerFK,p.batch_year,G.Course_Id,Course_Name,G.Degree_Code,Dept_Name,TextVal,PayMode,SUM(Debit) as total,A.app_no,A.FeeCategory FROM FT_FinDailyTransaction A,Applyn P,Degree G,Course C,Department D,TextValTable T WHERE A.App_No = P.app_no  AND P.degree_code = G.Degree_Code and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code AND P.IsConfirm = 1 AND Admission_Status = 1 and isnull(IsCanceled,'0')='0' and  ISNULL(IsCollected,0)='1' AND A.FeeCategory = T.TextCode and g.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";

                if (headercode != "")
                {
                    selqry = selqry + "and A.HeaderFK in ('" + headercode + "')";
                }
                if (ledgercode != "")
                {
                    selqry = selqry + " and LedgerFK in ('" + ledgercode + "')";
                }
                if (batchyr != "")
                {
                    selqry = selqry + " and p.batch_year in('" + batchyr + "')";
                }
                if (courseid != "")
                {
                    selqry = selqry + " and G.Course_Id in('" + courseid + "')";

                }
                if (deptcode != "")
                {
                    selqry = selqry + " and G.Dept_Code in ('" + deptcode + "') ";
                }
                if (semcode != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + semcode + "')";
                }
                if (gettagvalue.Trim() != "" && gettagvalue.Trim() != "0")
                {
                    selqry = selqry + " and PayMode in ('" + gettagvalue + "')";
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND  a.TransDate between '" + fromdate + "' and '" + todate + "'";
                    }
                }
                selqry = selqry + "GROUP BY a.HeaderFK,LedgerFK,p.batch_year,G.Course_Id,Course_Name,G.Degree_Code,Dept_Name,TextVal,PayMode,A.app_no,A.FeeCategory";

                selqry = selqry + " select SUM(Ex.Excessamt) as ExcessAmount,A.HeaderFK,h.LedgerPK,p.Batch_Year,C.Course_Id,d.Dept_Code,A.FeeCategory,p.App_No,h.priority,h.ledgerName from FT_ExcessDet EM,FT_ExcessLedgerDet Ex ,FT_FeeAllot A,Applyn P,Degree G,Course C,Department D,FM_LedgerMaster H,FM_HeaderMaster fh WHERE EM.ExcessDetPK = Ex.ExcessDetfk and em.App_No = p.app_no and g.Course_Id = c.Course_Id and g.college_code = c.college_code and g.Dept_Code = d.Dept_Code and g.college_code = d.college_code  and h.LedgerPK =ex.LedgerFK and ex.HeaderFK=h.HeaderFK and h.HeaderFK=fh.HeaderPK and em.App_No = a.App_No   AND P.IsConfirm = 1  and a.LedgerFK=h.LedgerPK   AND Admission_Status = 1 and g.college_code ='" + collegecode1 + "' and A.FinYearFK in ('" + Finyearvalue + "')";
                if (headercode != "")
                {
                    selqry = selqry + " and Ex.HeaderFK in('" + headercode + "')";
                }
                if (ledgercode != "")
                {
                    selqry = selqry + "  and Ex.LedgerFK in('" + ledgercode + "')";
                }
                if (batchyr != "")
                {
                    selqry = selqry + " and p.batch_year in('" + batchyr + "')";
                }
                if (courseid != "")
                {
                    selqry = selqry + " and G.Course_Id in('" + courseid + "')";

                }
                if (deptcode != "")
                {
                    selqry = selqry + " and G.Dept_Code in ('" + deptcode + "') ";
                }
                if (semcode != "")
                {
                    selqry = selqry + " and A.FeeCategory in ('" + semcode + "')";
                }
                if (datewise == 1)
                {
                    if (fromdate != "" && todate != "")
                    {
                        selqry = selqry + "  AND PayStartDate <='" + fromdate + "'";
                    }
                }
                selqry = selqry + " GROUP BY A.HeaderFK ,h.LedgerPK,p.Batch_Year ,C.Course_Id,d.Dept_Code,A.FeeCategory ,p.App_No,h.priority,h.ledgerName";
                if (activecol.Trim() == Convert.ToString(excessamt))
                {
                    selqry = selqry + " having SUM(Ex.Excessamt)>0 ";
                    flag = true;
                }
                selqry += " order by isnull(h.priority,1000),h.ledgerName asc";
                #endregion
                #region fpsem design
                bool paymodecheck = false;
                ds = d2.select_method_wo_parameter(selqry, "Text");
                if (gettagvalue.Trim() != "")
                {
                    if (ds.Tables[1].Rows.Count > 0)
                    {
                        paymodecheck = true;
                    }
                }
                else
                {
                    paymodecheck = true;
                }


                if (flag == true)
                {
                    if (ds.Tables[0].Rows.Count > 0 && paymodecheck == true && ds.Tables[2].Rows.Count > 0)
                    {
                        flag1 = true;
                    }
                }
                else
                {
                    if (ds.Tables[0].Rows.Count > 0 && paymodecheck == true)
                    {
                        flag1 = true;
                    }
                }
                if (flag1 == true)
                {
                    loadstudcolumns(sender, e);
                    DataView dv = new DataView();
                    fpstudcell.Sheets[0].RowCount = 0;
                    fpstudcell.Sheets[0].ColumnCount = 0;
                    fpstudcell.CommandBar.Visible = false;
                    fpstudcell.Sheets[0].AutoPostBack = true;
                    fpstudcell.Sheets[0].ColumnHeader.RowCount = 2;
                    fpstudcell.Sheets[0].RowHeader.Visible = false;
                    fpstudcell.Sheets[0].ColumnCount = 11;
                    FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
                    darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
                    darkstyle.ForeColor = Color.White;
                    fpstudcell.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
                    int check = 0;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 0].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                    fpstudcell.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;

                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Header Name";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                    fpstudcell.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Left;
                    fpstudcell.Sheets[0].Columns[1].Visible = true;

                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Ledger Name";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 2].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                    fpstudcell.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Left;
                    fpstudcell.Sheets[0].Columns[2].Visible = true;

                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Batch Year";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 3].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                    fpstudcell.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Center;
                    fpstudcell.Sheets[0].Columns[3].Visible = true;

                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Course Name";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 4].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
                    fpstudcell.Sheets[0].Columns[4].HorizontalAlign = HorizontalAlign.Left;
                    fpstudcell.Sheets[0].Columns[4].Visible = true;

                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Department Name";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 5].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 5].Font.Bold = true;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 5].Font.Name = "Book Antiqua";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 5].Font.Size = FontUnit.Medium;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;
                    fpstudcell.Sheets[0].Columns[5].HorizontalAlign = HorizontalAlign.Left;
                    fpstudcell.Sheets[0].Columns[5].Visible = true;

                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Semaster";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 6].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 6].Font.Bold = true;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 6].Font.Name = "Book Antiqua";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 6].Font.Size = FontUnit.Medium;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;
                    fpstudcell.Sheets[0].Columns[6].HorizontalAlign = HorizontalAlign.Left;
                    fpstudcell.Sheets[0].Columns[6].Visible = true;

                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 7].Text = "Student Name";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 7].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 7].Font.Bold = true;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 7].Font.Name = "Book Antiqua";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 7].Font.Size = FontUnit.Medium;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 7].HorizontalAlign = HorizontalAlign.Center;
                    fpstudcell.Sheets[0].Columns[7].HorizontalAlign = HorizontalAlign.Left;
                    fpstudcell.Sheets[0].Columns[7].Visible = true;

                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 8].Text = "Allot";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 8].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 8].Font.Bold = true;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 8].Font.Name = "Book Antiqua";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 8].Font.Size = FontUnit.Medium;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 8].HorizontalAlign = HorizontalAlign.Center;
                    fpstudcell.Sheets[0].Columns[8].HorizontalAlign = HorizontalAlign.Right;
                    fpstudcell.Sheets[0].Columns[8].Visible = true;
                    if (!colord.Contains("1"))
                    {
                        fpstudcell.Sheets[0].Columns[8].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpstudcell.Sheets[0].Columns[8].Visible = true;
                    }
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 9].Text = "Consustion";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 9].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 9].Font.Bold = true;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 9].Font.Name = "Book Antiqua";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 9].Font.Size = FontUnit.Medium;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 9].HorizontalAlign = HorizontalAlign.Center;
                    fpstudcell.Sheets[0].Columns[9].HorizontalAlign = HorizontalAlign.Right;
                    fpstudcell.Sheets[0].Columns[9].Visible = true;
                    if (!colord.Contains("2"))
                    {
                        fpstudcell.Sheets[0].Columns[9].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpstudcell.Sheets[0].Columns[9].Visible = true;
                    }
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 10].Text = "Government";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 10].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 10].Font.Bold = true;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 10].Font.Name = "Book Antiqua";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 10].Font.Size = FontUnit.Medium;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, 10].HorizontalAlign = HorizontalAlign.Center;
                    fpstudcell.Sheets[0].Columns[10].HorizontalAlign = HorizontalAlign.Right;
                    fpstudcell.Sheets[0].Columns[10].Visible = true;
                    if (!colord.Contains("3"))
                    {
                        fpstudcell.Sheets[0].Columns[10].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpstudcell.Sheets[0].Columns[10].Visible = true;
                    }
                    fpstudcell.Sheets[0].ColumnCount++;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Text = "Total";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("4"))
                    {
                        fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpstudcell.Sheets[0].ColumnHeaderSpanModel.Add(0, fpstudcell.Sheets[0].ColumnCount - 1, 2, 1);

                    fpstudcell.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
                    fpstudcell.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
                    fpstudcell.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
                    fpstudcell.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
                    fpstudcell.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
                    fpstudcell.Sheets[0].ColumnHeaderSpanModel.Add(0, 5, 2, 1);
                    fpstudcell.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 2, 1);
                    fpstudcell.Sheets[0].ColumnHeaderSpanModel.Add(0, 7, 2, 1);
                    fpstudcell.Sheets[0].ColumnHeaderSpanModel.Add(0, 8, 2, 1);
                    fpstudcell.Sheets[0].ColumnHeaderSpanModel.Add(0, 9, 2, 1);
                    fpstudcell.Sheets[0].ColumnHeaderSpanModel.Add(0, 10, 2, 1);
                    fpstudcell.Sheets[0].FrozenRowCount = 1;
                    Hashtable newhash = new Hashtable();
                    if (chkl_paid.Items.Count > 0)
                    {
                        for (int s = 0; s < chkl_paid.Items.Count; s++)
                        {
                            if (chkl_paid.Items[s].Selected == true)
                            {
                                check++;
                                fpstudcell.Sheets[0].ColumnCount++;
                                newhash.Add(Convert.ToString(chkl_paid.Items[s].Value), fpstudcell.Sheets[0].ColumnCount - 1);
                                fpstudcell.Sheets[0].ColumnHeader.Cells[1, fpstudcell.Sheets[0].ColumnCount - 1].Text = Convert.ToString(chkl_paid.Items[s].Text);
                                fpstudcell.Sheets[0].ColumnHeader.Cells[1, fpstudcell.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                                fpstudcell.Sheets[0].ColumnHeader.Cells[1, fpstudcell.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                fpstudcell.Sheets[0].ColumnHeader.Cells[1, fpstudcell.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                fpstudcell.Sheets[0].ColumnHeader.Cells[1, fpstudcell.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                fpstudcell.Sheets[0].ColumnHeader.Cells[1, fpstudcell.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                                fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                                fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = true;
                                if (!colord.Contains("5"))
                                {
                                    fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                                if (colord.Count == 0)
                                {
                                    fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = true;
                                }

                            }
                        }
                        if (check != 0)
                        {
                            fpstudcell.Sheets[0].ColumnCount++;
                            fpstudcell.Sheets[0].ColumnHeader.Cells[1, fpstudcell.Sheets[0].ColumnCount - 1].Text = "Total Paid";
                            fpstudcell.Sheets[0].ColumnHeader.Cells[1, fpstudcell.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                            fpstudcell.Sheets[0].ColumnHeader.Cells[1, fpstudcell.Sheets[0].ColumnCount - 1].Font.Bold = true;
                            fpstudcell.Sheets[0].ColumnHeader.Cells[1, fpstudcell.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                            fpstudcell.Sheets[0].ColumnHeader.Cells[1, fpstudcell.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                            fpstudcell.Sheets[0].ColumnHeader.Cells[1, fpstudcell.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                            fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                            if (!colord.Contains("5"))
                            {
                                fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = false;
                            }
                            if (colord.Count == 0)
                            {
                                fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = true;
                            }
                        }

                    }
                    if (check == 0)
                    {
                        fpstudcell.Sheets[0].ColumnCount++;
                        fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Text = "Paid";
                        fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                        fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Font.Bold = true;
                        fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                        fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                        fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                        fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                        fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = true;
                        if (!colord.Contains("5"))
                        {
                            fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = false;
                        }
                        if (colord.Count == 0)
                        {
                            fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = true;
                        }
                        fpstudcell.Sheets[0].ColumnHeaderSpanModel.Add(0, fpstudcell.Sheets[0].ColumnCount - 1, 2, 1);
                    }
                    else
                    {
                        fpstudcell.Sheets[0].ColumnHeaderSpanModel.Add(0, 12, 1, check + 1);
                        fpstudcell.Sheets[0].ColumnHeader.Cells[0, 12].Text = "Paid";
                        fpstudcell.Sheets[0].ColumnHeader.Cells[0, 12].ForeColor = ColorTranslator.FromHtml("#000000");
                        fpstudcell.Sheets[0].ColumnHeader.Cells[0, 12].Font.Bold = true;
                        fpstudcell.Sheets[0].ColumnHeader.Cells[0, 12].Font.Name = "Book Antiqua";
                        fpstudcell.Sheets[0].ColumnHeader.Cells[0, 12].Font.Size = FontUnit.Medium;
                        fpstudcell.Sheets[0].ColumnHeader.Cells[0, 12].HorizontalAlign = HorizontalAlign.Center;
                        fpstudcell.Sheets[0].Columns[12].HorizontalAlign = HorizontalAlign.Right;
                        if (!colord.Contains("5"))
                        {
                            fpsem.Sheets[0].Columns[6].Visible = false;
                        }
                        if (colord.Count == 0)
                        {
                            fpsem.Sheets[0].Columns[6].Visible = true;
                        }
                    }


                    fpstudcell.Sheets[0].ColumnCount++;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Text = "Balance";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("6"))
                    {
                        fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpstudcell.Sheets[0].ColumnHeaderSpanModel.Add(0, fpstudcell.Sheets[0].ColumnCount - 1, 2, 1);

                    fpstudcell.Sheets[0].ColumnCount++;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Text = "Refund Amount";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("7"))
                    {
                        fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpstudcell.Sheets[0].ColumnHeaderSpanModel.Add(0, fpstudcell.Sheets[0].ColumnCount - 1, 2, 1);

                    fpstudcell.Sheets[0].ColumnCount++;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Text = "Excess Amount";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("8"))
                    {
                        fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpstudcell.Sheets[0].ColumnHeaderSpanModel.Add(0, fpstudcell.Sheets[0].ColumnCount - 1, 2, 1);


                    fpstudcell.Sheets[0].ColumnCount++;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Text = "Fine Amount";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].ForeColor = ColorTranslator.FromHtml("#000000");
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpstudcell.Sheets[0].ColumnHeader.Cells[0, fpstudcell.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("9"))
                    {
                        fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                    fpstudcell.Sheets[0].ColumnHeaderSpanModel.Add(0, fpstudcell.Sheets[0].ColumnCount - 1, 2, 1);
                #endregion
                    #region fpsem value
                    string totalvalue = "";
                    double bal = 0;
                    for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                    {

                        fpstudcell.Sheets[0].Rows.Count = ds.Tables[0].Rows.Count;
                        fpstudcell.Sheets[0].Cells[i, 0].Text = Convert.ToString(i + 1);
                        fpstudcell.Sheets[0].Cells[i, 1].Text = Convert.ToString(ds.Tables[0].Rows[i]["HeaderName"].ToString());
                        fpstudcell.Sheets[0].Cells[i, 1].Tag = Convert.ToString(ds.Tables[0].Rows[i]["HeaderFK"].ToString());
                        fpstudcell.Sheets[0].Cells[i, 2].Text = Convert.ToString(ds.Tables[0].Rows[i]["LedgerName"].ToString());
                        fpstudcell.Sheets[0].Cells[i, 2].Tag = Convert.ToString(ds.Tables[0].Rows[i]["LedgerFK"].ToString());
                        fpstudcell.Sheets[0].Cells[i, 3].Text = Convert.ToString(ds.Tables[0].Rows[i]["batch_year"].ToString());
                        fpstudcell.Sheets[0].Cells[i, 3].Tag = Convert.ToString(ds.Tables[0].Rows[i]["batch_year"].ToString());
                        fpstudcell.Sheets[0].Cells[i, 4].Text = Convert.ToString(ds.Tables[0].Rows[i]["Course_Name"].ToString());
                        fpstudcell.Sheets[0].Cells[i, 4].Tag = Convert.ToString(ds.Tables[0].Rows[i]["Course_Id"].ToString());
                        fpstudcell.Sheets[0].Cells[i, 5].Text = Convert.ToString(ds.Tables[0].Rows[i]["Dept_Name"].ToString());
                        fpstudcell.Sheets[0].Cells[i, 5].Tag = Convert.ToString(ds.Tables[0].Rows[i]["Dept_Code"].ToString());
                        fpstudcell.Sheets[0].Cells[i, 6].Text = Convert.ToString(ds.Tables[0].Rows[i]["TextVal"].ToString());
                        fpstudcell.Sheets[0].Cells[i, 6].Tag = Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"].ToString());
                        fpstudcell.Sheets[0].Cells[i, 7].Text = Convert.ToString(ds.Tables[0].Rows[i]["Stud_Name"].ToString());
                        allot = Convert.ToString(ds.Tables[0].Rows[i]["Allot"]);
                        if (allot != "" && allot != null)
                        {
                            fpstudcell.Sheets[0].Cells[i, 8].Text = Convert.ToString(Math.Round(Convert.ToDouble(allot), 2));
                        }
                        else
                        {
                            fpstudcell.Sheets[0].Cells[i, 8].Text = "0";
                        }
                        consession = Convert.ToString(ds.Tables[0].Rows[i]["consustion"]);
                        if (consession != "" && consession != null)
                        {
                            fpstudcell.Sheets[0].Cells[i, 9].Text = Convert.ToString(Math.Round(Convert.ToDouble(consession), 2));
                        }
                        else
                        {
                            fpstudcell.Sheets[0].Cells[i, 9].Text = "0";
                        }
                        // fpstudcell.Sheets[0].Cells[i, 8].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["allot"]), 2));
                        // fpstudcell.Sheets[0].Cells[i, 9].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Consustion"]), 2));
                        string val = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
                        string value = "";
                        if (val == "" || val == null)
                        {
                            value = "0";
                        }
                        else
                        {
                            value = Convert.ToString(ds.Tables[0].Rows[i]["Government"].ToString());
                        }
                        fpstudcell.Sheets[0].Cells[i, 10].Text = value;
                        //  fpstudcell.Sheets[0].Cells[i, 11].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Total"]), 2));


                        totalvalue = Convert.ToString(ds.Tables[0].Rows[i]["Total"]);
                        fpstudcell.Sheets[0].Cells[i, 11].Text = Convert.ToString(Math.Round(Convert.ToDouble(totalvalue), 2));
                        string paidamt = "";
                        paidamt = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
                        if (check == 0)
                        {
                            if (paidamt == "" || paidamt == null)
                            {
                                fpstudcell.Sheets[0].Cells[i, fpstudcell.Sheets[0].ColumnCount - 5].Text = "0";
                            }
                            else
                            {
                                fpstudcell.Sheets[0].Cells[i, fpstudcell.Sheets[0].ColumnCount - 5].Text = paidamt;
                            }
                        }
                        if (check != 0)
                        {
                            //if (paidamt == "" || paidamt == null)
                            //{
                            //    fpstudcell.Sheets[0].Cells[i, fpstudcell.Sheets[0].ColumnCount - 2].Text = "0";
                            //}
                            //else
                            //{
                            //    fpstudcell.Sheets[0].Cells[i, fpstudcell.Sheets[0].ColumnCount - 2].Text = paidamt;
                            //}
                            // fpledger.Sheets[0].Cells[i, fpledger.Sheets[0].ColumnCount - 2].Text = Convert.ToString(ds.Tables[0].Rows[i]["paid"].ToString());
                        }

                        // fpstudcell.Sheets[0].Cells[i, fpstudcell.Sheets[0].ColumnCount - 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["Balance"]), 2));

                        fpstudcell.Sheets[0].Cells[i, fpstudcell.Sheets[0].ColumnCount - 3].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["RefundAmount"]), 2));
                        DataView dvex = new DataView();
                        if (ds.Tables[2].Rows.Count > 0)
                        {
                            ds.Tables[2].DefaultView.RowFilter = "App_No='" + Convert.ToString(ds.Tables[0].Rows[i]["App_No"]) + "'";
                            dvex = ds.Tables[2].DefaultView;
                            if (dvex.Count > 0 && dvex.Count != null)
                            {
                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = Convert.ToString(dvex[0]["ExcessAmount"]);
                            }
                            else
                            {
                                FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
                            }
                        }
                        //else
                        //{
                        //    FpSpread1.Sheets[0].Cells[i, FpSpread1.Sheets[0].ColumnCount - 2].Text = "0";
                        //}
                        //fpstudcell.Sheets[0].Cells[i, fpstudcell.Sheets[0].ColumnCount - 1].Text = Convert.ToString(Math.Round(Convert.ToDouble(ds.Tables[0].Rows[i]["RefundAmount"]), 2));
                        double totamount = 0;
                        double fnlamount = 0;

                        if (ds.Tables[1].Rows.Count > 0)
                        {
                            if (chkl_paid.Items.Count > 0)
                            {
                                for (int pay = 0; pay < chkl_paid.Items.Count; pay++)
                                {
                                    if (chkl_paid.Items[pay].Selected == true)
                                    {
                                        ds.Tables[1].DefaultView.RowFilter = "PayMode='" + Convert.ToString(chkl_paid.Items[pay].Value) + "' and HeaderFK='" + Convert.ToString(ds.Tables[0].Rows[i]["HeaderFK"]) + "' and LedgerFK='" + Convert.ToString(ds.Tables[0].Rows[i]["LedgerFK"]) + "' and batch_year='" + Convert.ToString(ds.Tables[0].Rows[i]["batch_year"]) + "' and Degree_Code='" + Convert.ToString(ds.Tables[0].Rows[i]["Degree_Code"]) + "' and FeeCategory='" + Convert.ToString(ds.Tables[0].Rows[i]["FeeCategory"]) + "' and app_no='" + Convert.ToString(ds.Tables[0].Rows[i]["App_No"]) + "'";
                                        dv = ds.Tables[1].DefaultView;
                                        if (dv.Count == 0 || dv.Count == null)
                                        {
                                            int count = 0;
                                            int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
                                            fpstudcell.Sheets[0].Cells[i, colnew].Text = "0";
                                        }
                                        if (dv.Count > 0)
                                        {
                                            int colnew = Convert.ToInt32(newhash[Convert.ToString(chkl_paid.Items[pay].Value)]);
                                            fpstudcell.Sheets[0].Cells[i, colnew].Text = Convert.ToString(dv[0]["total"]);
                                            totamount = Convert.ToDouble(dv[0]["total"]);
                                            if (totamount != 0)
                                            {
                                                fnlamount = fnlamount + totamount;
                                            }
                                        }
                                    }
                                }
                                if (check != 0)
                                    fpstudcell.Sheets[0].Cells[i, fpstudcell.Sheets[0].ColumnCount - 5].Text = Convert.ToString(fnlamount);
                                if (totalvalue != "" && totalvalue != null)
                                {
                                    bal = Convert.ToDouble(totalvalue) - Convert.ToDouble(fnlamount);
                                    fpstudcell.Sheets[0].Cells[i, fpstudcell.Sheets[0].ColumnCount - 4].Text = Convert.ToString(bal);
                                    if (Convert.ToDouble(bal) == 0)
                                    {
                                        fpstudcell.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#F08080");
                                    }
                                    if (Convert.ToDouble(bal) != 0)
                                    {
                                        fpstudcell.Sheets[0].Rows[i].BackColor = ColorTranslator.FromHtml("#90EE90");
                                    }
                                }
                            }
                        }
                    }
                    fpstudcell.Sheets[0].PageSize = ds.Tables[0].Rows.Count + 1;
                    fpstudcell.Sheets[0].Rows.Count++;
                    fpstudcell.Sheets[0].Cells[fpstudcell.Sheets[0].Rows.Count - 1, 0].Text = "Grand Total";
                    double hedval = 0;
                    for (int j = 8; j < fpstudcell.Sheets[0].Columns.Count; j++)
                    {
                        for (int i = 0; i < fpstudcell.Rows.Count - 1; i++)
                        {
                            string values = Convert.ToString(fpstudcell.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
                            if (values != "0" && values != "-" && values != "")
                            {
                                if (hedval == 0)
                                {
                                    hedval = Convert.ToDouble(fpstudcell.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
                                }
                                else
                                {
                                    hedval = hedval + Convert.ToDouble(fpstudcell.Sheets[0].Cells[Convert.ToInt32(i), j].Value);
                                }
                            }
                        }
                        fpstudcell.Sheets[0].Cells[fpstudcell.Sheets[0].Rows.Count - 1, j].Text = Convert.ToString(hedval);
                        hedval = 0;
                    }
                    fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = false;
                    #endregion
                    #region visible

                    // fpstudcell.Width = 1728;
                    fpstudcell.Sheets[0].FrozenRowCount = 1;
                    fpstudcell.SaveChanges();
                    // pnl_studcolord.Visible = true;
                    //  pnl_studcolorder.Visible = true;
                    div7.Visible = true;
                    divstudcell.Visible = true;
                    fpstudcell.Visible = true;
                    lbl_semcell.Visible = true;
                    lbl_semcell.Text = "->Header(" + colhedername + ")->Ledger(" + colledname + ")->Batch(" + colbatname + ")->Degree(" + coldegname + ")->Department(" + coldeptname + ")->Semaster(" + colsemname + ")->Student detail";
                    // loadstudcolorder();
                    rptprint.Visible = true;
                    rptprint.Attributes.Add("Style", "margin-top:22px; margin-left:10px;");
                    ViewState["stud"] = 6;
                    rptprint.Visible = false;
                    #endregion
                }
                else
                {
                    lbl_semcell.Visible = false;
                    //  pnl_studcolord.Visible = false;
                    divstudcell.Visible = false;
                    fpstudcell.Visible = false;
                    imgdiv2.Visible = true;
                    pnl2.Visible = true;
                    lbl_alert.Visible = true;
                    lbl_alert.Text = "No Record Found";
                }
            }
        }
        catch { }
    }
    #endregion

    #endregion

    #endregion

    #region stud
    protected void cb_stud_OnCheckedChanged(object sender, EventArgs e)
    {
        string type = "";
        if (cb_stud.Checked == true)
        {
            for (int i = 0; i < cbl_stud.Items.Count; i++)
            {
                cbl_stud.Items[i].Selected = true;
                type = Convert.ToString(cbl_stud.Items[i].Text);
            }
            if (cbl_stud.Items.Count == 1)
            {
                txt_stud.Text = "" + type + "";
            }
            else
            {
                txt_stud.Text = "Type (" + (cbl_stud.Items.Count) + ")";
            }

        }
        else
        {
            for (int i = 0; i < cbl_stud.Items.Count; i++)
            {
                cbl_stud.Items[i].Selected = false;
            }
            txt_stud.Text = "--Select--";
        }
    }
    protected void cbl_stud_OnSelectedIndexChanged(object sender, EventArgs e)
    {
        string type = "";
        txt_stud.Text = "--Select--";
        cb_stud.Checked = false;
        int commcount = 0;
        for (int i = 0; i < cbl_stud.Items.Count; i++)
        {
            if (cbl_stud.Items[i].Selected == true)
            {
                commcount = commcount + 1;
                type = Convert.ToString(cbl_stud.Items[i].Text);
            }
        }
        if (commcount > 0)
        {

            if (commcount == cbl_stud.Items.Count)
            {
                cb_stud.Checked = true;
            }
            if (commcount == 1)
            {
                txt_stud.Text = "" + type + "";
            }
            else
            {
                txt_stud.Text = "Type(" + commcount.ToString() + ")";
            }
        }
    }
    public void loadtype()
    {

        try
        {
            string clgvalue = ddl_collegename.SelectedItem.Value.ToString();
            cbl_stud.Items.Clear();
            string deptquery = "select distinct mode,case when mode =1 then 'Regular' when mode=2 then 'Lateral' when mode=3 then 'Transfer' end as Modename from Registration where mode <>0 and college_code in('" + clgvalue + "')";
            ds.Clear();
            ds = d2.select_method_wo_parameter(deptquery, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                cbl_stud.DataSource = ds;
                cbl_stud.DataTextField = "Modename";
                cbl_stud.DataValueField = "mode";
                cbl_stud.DataBind();

                if (cbl_stud.Items.Count > 0)
                {
                    for (int i = 0; i < cbl_stud.Items.Count; i++)
                    {
                        cbl_stud.Items[i].Selected = true;
                    }
                    txt_stud.Text = "Type(" + cbl_stud.Items.Count + ")";
                    cb_stud.Checked = true;
                }
            }
            else
            {
                txt_stud.Text = "--Select--";

            }
        }
        catch
        {
        }
    }
    #endregion

    #region seat
    protected void cb_seat_OnCheckedChanged(object sender, EventArgs e)
    {
        string seat = "";
        if (cb_seat.Checked == true)
        {
            for (int i = 0; i < cbl_seat.Items.Count; i++)
            {
                cbl_seat.Items[i].Selected = true;
                seat = Convert.ToString(cbl_seat.Items[i].Text);
            }
            if (cbl_seat.Items.Count == 1)
            {
                txt_seat.Text = "" + seat + "";
            }
            else
            {
                txt_seat.Text = "Seat (" + (cbl_seat.Items.Count) + ")";
            }

        }
        else
        {
            for (int i = 0; i < cbl_seat.Items.Count; i++)
            {
                cbl_seat.Items[i].Selected = false;
            }
            txt_seat.Text = "--Select--";
        }
    }
    protected void cbl_seat_OnSelectedIndexChanged(object sender, EventArgs e)
    {
        txt_seat.Text = "--Select--";
        cb_seat.Checked = false;
        int commcount = 0;
        string seat = "";
        for (int i = 0; i < cbl_seat.Items.Count; i++)
        {
            if (cbl_seat.Items[i].Selected == true)
            {
                commcount = commcount + 1;
                seat = Convert.ToString(cbl_seat.Items[i].Text);
            }
        }
        if (commcount > 0)
        {

            if (commcount == cbl_seat.Items.Count)
            {
                cb_seat.Checked = true;
            }
            if (commcount == 1)
            {
                txt_seat.Text = "" + seat + "";
            }
            else
            {
                txt_seat.Text = "Seat(" + commcount.ToString() + ")";
            }
        }

    }
    public void loadseat()
    {

        try
        {
            cbl_seat.Items.Clear();
            string deptquery = "select Distinct t.TextCode,T.TextVal  from applyn a,Registration r,TextValTable t where a.app_no =r.App_No and t.TextCode =a.seattype and a.college_code='" + ddl_collegename.SelectedItem.Value + "'";
            ds.Clear();
            ds = d2.select_method_wo_parameter(deptquery, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                cbl_seat.DataSource = ds;
                cbl_seat.DataTextField = "TextVal";
                cbl_seat.DataValueField = "TextCode";
                cbl_seat.DataBind();

                if (cbl_seat.Items.Count > 0)
                {
                    for (int i = 0; i < cbl_seat.Items.Count; i++)
                    {
                        cbl_seat.Items[i].Selected = true;
                    }
                    txt_seat.Text = "Seat(" + cbl_seat.Items.Count + ")";
                    cb_seat.Checked = true;
                }
            }
            else
            {
                txt_seat.Text = "--Select--";

            }
        }
        catch
        {
        }

    }
    #endregion

    #region studtype
    public void loadstutype()
    {

        try
        {
            string clgvalue = ddl_collegename.SelectedItem.Value.ToString();
            cbl_studtype.Items.Clear();
            string deptquery = "select distinct Stud_Type from Registration where college_code in('" + clgvalue + "')";
            ds.Clear();
            ds = d2.select_method_wo_parameter(deptquery, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                cbl_studtype.DataSource = ds;
                cbl_studtype.DataTextField = "Stud_Type";
                // cbl_stutype.DataValueField = "mode";
                cbl_studtype.DataBind();

                if (cbl_studtype.Items.Count > 0)
                {
                    for (int i = 0; i < cbl_studtype.Items.Count; i++)
                    {
                        cbl_studtype.Items[i].Selected = true;
                    }
                    txt_studtype.Text = "Student Type(" + cbl_studtype.Items.Count + ")";
                    cb_studtype.Checked = true;
                }
            }
            else
            {
                txt_studtype.Text = "--Select--";

            }
        }
        catch
        {
        }

    }
    protected void cb_studtype_OnCheckedChanged(object sender, EventArgs e)
    {
        string studtype = "";
        if (cb_studtype.Checked == true)
        {
            for (int i = 0; i < cbl_studtype.Items.Count; i++)
            {
                cbl_studtype.Items[i].Selected = true;
                studtype = Convert.ToString(cbl_studtype.Items[i].Text);
            }
            if (cbl_studtype.Items.Count == 1)
            {
                txt_studtype.Text = "" + studtype + "";
            }
            else
            {
                txt_studtype.Text = "Student Type (" + (cbl_studtype.Items.Count) + ")";
            }

        }
        else
        {
            for (int i = 0; i < cbl_studtype.Items.Count; i++)
            {
                cbl_studtype.Items[i].Selected = false;
            }
            txt_studtype.Text = "--Select--";
        }
    }
    protected void cbl_studtype_OnSelectedIndexChanged(object sender, EventArgs e)
    {
        txt_studtype.Text = "--Select--";
        cb_studtype.Checked = false;
        int commcount = 0;
        string studtype = "";
        for (int i = 0; i < cbl_studtype.Items.Count; i++)
        {
            if (cbl_studtype.Items[i].Selected == true)
            {
                studtype = Convert.ToString(cbl_studtype.Items[i].Text);
                commcount = commcount + 1;
            }
        }
        if (commcount > 0)
        {

            if (commcount == cbl_studtype.Items.Count)
            {

                cb_studtype.Checked = true;

            }
            if (commcount == 1)
            {
                txt_studtype.Text = "" + studtype + "";
            }
            else
            {
                txt_studtype.Text = "Student Type(" + commcount.ToString() + ")";
            }
        }
    }

    #endregion

    [System.Web.Services.WebMethod]
    [System.Web.Script.Services.ScriptMethod()]
    public static List<string> Getrno(string prefixText)
    {
        List<string> name = new List<string>();
        try
        {
            string query = "";
            WebService ws = new WebService();
            if (personmode == 0)
            {
                //student query
                if (chosedmode == 0)
                {
                    query = "select top 100 Roll_No from Registration where CC=0 and DelFlag =0 and Exam_Flag <>'DEBAR' and Roll_No like '" + prefixText + "%' order by Roll_No asc";
                }
                else if (chosedmode == 1)
                {
                    query = "select  top 100 Reg_No from Registration where CC=0 and DelFlag =0 and Exam_Flag <>'DEBAR' and Reg_No like '" + prefixText + "%' order by Reg_No asc";
                }
                else if (chosedmode == 2)
                {
                    query = "select  top 100 Roll_admit from Registration where CC=0 and DelFlag =0 and Exam_Flag <>'DEBAR' and Roll_admit like '" + prefixText + "%' order by Roll_admit asc";
                }
                else
                {
                    query = "  select  top 100 app_formno from applyn where admission_status =0 and isconfirm ='1' and app_formno like '" + prefixText + "%' order by app_formno asc";
                }
            }

            name = ws.Getname(query);
            return name;
        }
        catch { return name; }
    }

    public void btn_errorclose_Click(object sender, EventArgs e)
    {
        imgdiv2.Visible = false;
        txt_pgtxt.Text = "";

        bindsem1();
        loadstream();
        loadcourse();
        loadheader();
        loadfield();
        lb_hdr.Items.Clear();

    }
    #region paymentmode
    public void loadpaid()
    {
        try
        {
            chkl_paid.Items.Clear();
            //chkl_paid.Items.Add(new ListItem("Cash", "1"));
            //chkl_paid.Items.Add(new ListItem("Cheque", "2"));
            //chkl_paid.Items.Add(new ListItem("DD", "3"));
            //chkl_paid.Items.Add(new ListItem("Challan", "4"));
            //chkl_paid.Items.Add(new ListItem("Online", "5"));
            //  chkl_paid.Items.Add(new ListItem("Total Paid", "6"));
            d2.BindPaymodeToCheckboxList(chkl_paid, usercode, ddl_collegename.SelectedItem.Value);
            if (chkl_paid.Items.Count > 0)
            {
                for (int i = 0; i < chkl_paid.Items.Count; i++)
                {
                    chkl_paid.Items[i].Selected = true;
                }
                txt_paid.Text = "Paid(" + chkl_paid.Items.Count + ")";
                chk_paid.Checked = true;
            }
        }
        catch
        {

        }

    }
    public void chk_paid_OnCheckedChanged(object sender, EventArgs e)
    {
        try
        {
            CallCheckboxChange(chk_paid, chkl_paid, txt_paid, "Paid", "--Select--");
        }
        catch
        { }
    }
    public void chkl_paid_OnSelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            CallCheckboxListChange(chk_paid, chkl_paid, txt_paid, "Paid", "--Select--");
        }
        catch
        { }
    }
    #endregion


    #region printdetail
    public void btnprintmaster_Click(object sender, EventArgs e)
    {
        try
        { printmethod(); }
        catch { }
    }
    public void printmethod()
    {
        try
        {
            string degreedetails;
            string pagename;
            string degreedetails1;
            string pagename1;
            if (rb_header.Checked == true)
            {
                degreedetails = "Header Report";
                pagename = "StudentfeeAllotReport.aspx";
                Printcontrolhed.loadspreaddetails(FpSpread1, pagename, degreedetails);
                Printcontrolhed.Visible = true;
                if (Convert.ToString(ViewState["ledger"]) == "1")
                {
                    degreedetails1 = "Header/Ledger Report";
                    pagename1 = "StudentfeeAllotReport.aspx";
                    Printcontrolhed.loadspreaddetails(fpledger, pagename1, degreedetails1);
                    Printcontrolhed.Visible = true;
                }
                else if (Convert.ToString(ViewState["batch"]) == "2")
                {
                    degreedetails = "Header/Ledger/Batch Report";
                    pagename = "StudentfeeAllotReport.aspx";
                    Printcontrolhed.loadspreaddetails(fpbatch, pagename, degreedetails);
                    Printcontrolhed.Visible = true;
                }
                else if (Convert.ToString(ViewState["degree"]) == "3")
                {
                    degreedetails = "Header/Ledger/Batch/Degree Report";
                    pagename = "StudentfeeAllotReport.aspx";
                    Printcontrolhed.loadspreaddetails(fpdegree, pagename, degreedetails);
                    Printcontrolhed.Visible = true;
                }
                else if (Convert.ToString(ViewState["dept"]) == "4")
                {
                    degreedetails = "Header/Ledger/Batch/Degree/Department Report";
                    pagename = "StudentfeeAllotReport.aspx";
                    Printcontrolhed.loadspreaddetails(fpdept, pagename, degreedetails);
                    Printcontrolhed.Visible = true;
                }
                else if (Convert.ToString(ViewState["sem"]) == "5")
                {
                    degreedetails = "Header/Ledger/Batch/Degree/Department/Semaster Report";
                    pagename = "StudentfeeAllotReport.aspx";
                    Printcontrolhed.loadspreaddetails(fpsem, pagename, degreedetails);
                    Printcontrolhed.Visible = true;
                }
                else if (Convert.ToString(ViewState["stud"]) == "6")
                {
                    degreedetails = "Header/Ledger/Batch/Degree/Department/Semaster/Student Report";
                    pagename = "StudentfeeAllotReport.aspx";
                    Printcontrolhed.loadspreaddetails(fpstudcell, pagename, degreedetails);
                    Printcontrolhed.Visible = true;
                }

            }
            if (rb_ledger.Checked == true)
            {
                degreedetails = "Ledger Report";
                pagename = "StudentfeeAllotReport.aspx";
                Printcontrolhed.loadspreaddetails(FpSpread1, pagename, degreedetails);
                Printcontrolhed.Visible = true;
            }
            if (rb_batch.Checked == true)
            {
                degreedetails = "Batch Report";
                pagename = "StudentfeeAllotReport.aspx";
                Printcontrolhed.loadspreaddetails(FpSpread1, pagename, degreedetails);
                Printcontrolhed.Visible = true;
            }
            if (rb_degree.Checked == true)
            {
                degreedetails = "Degree Report";
                pagename = "StudentfeeAllotReport.aspx";
                Printcontrolhed.loadspreaddetails(FpSpread1, pagename, degreedetails);
                Printcontrolhed.Visible = true;
            }
            if (rb_dept.Checked == true)
            {
                degreedetails = "Department Report";
                pagename = "StudentfeeAllotReport.aspx";
                Printcontrolhed.loadspreaddetails(FpSpread1, pagename, degreedetails);
                Printcontrolhed.Visible = true;
            }
            if (rb_sem.Checked == true)
            {
                degreedetails = "Semaster Report";
                pagename = "StudentfeeAllotReport.aspx";
                Printcontrolhed.loadspreaddetails(FpSpread1, pagename, degreedetails);
                Printcontrolhed.Visible = true;
            }
            if (rb_studentwise.Checked == true)
            {
                if (rb_common.Checked == true)
                {
                    degreedetails = "Studentwise - Common- Report";
                    pagename = "StudentfeeAllotReport.aspx";
                    Printcontrolhed.loadspreaddetails(FpSpread1, pagename, degreedetails);
                    Printcontrolhed.Visible = true;
                }


                if (rb_detail.Checked == true)
                {
                    if (rb_hori.Checked == true)
                    {
                        if (rbstudhed.Checked == true)
                        {
                            degreedetails = "Studentwise-Horizontal-Header Report";
                            pagename = "StudentfeeAllotReport.aspx";
                            Printcontrolhed.loadspreaddetails(FpSpread1, pagename, degreedetails);
                            Printcontrolhed.Visible = true;
                        }
                        else if (rbstudled.Checked == true)
                        {
                            degreedetails = "Studentwise-Horizontal-Ledger Report";
                            pagename = "StudentfeeAllotReport.aspx";
                            Printcontrolhed.loadspreaddetails(FpSpread1, pagename, degreedetails);
                            Printcontrolhed.Visible = true;
                        }
                    }

                    else if (rb_vert.Checked == true)
                    {
                        if (rbstudhed.Checked == true)
                        {
                            degreedetails = "Studentwise-Vertical-Header Report";
                            pagename = "StudentfeeAllotReport.aspx";
                            Printcontrolhed.loadspreaddetails(FpSpread1, pagename, degreedetails);
                            Printcontrolhed.Visible = true;
                        }
                        else if (rbstudled.Checked == true)
                        {
                            degreedetails = "Studentwise-Vertical-Ledger Report";
                            pagename = "StudentfeeAllotReport.aspx";
                            Printcontrolhed.loadspreaddetails(FpSpread1, pagename, degreedetails);
                            Printcontrolhed.Visible = true;
                        }
                    }

                }
            }
        }
        catch
        { }
    }
    public void btnprintmasterButton1_Click(object sender, EventArgs e)
    {
        if (rb_detail.Checked == true)
        {
            if (rb_hori.Checked == true)
            {
                if (rbstudhed.Checked == true)
                {
                    string appvalue = "";
                    string studdegcode = "";
                    string feecatagory = "";
                    string settingtype = "0";
                    string rollno = "";
                    string istotalwise = "";
                    string selqry = "select PageCode,DegreeCode,FeeCategory,ChlGroupHeader,Field,TextValue,SettingType,IsTotalwise,CollegeCode,IsTotalwise from FM_ChlBankPrintSettings a where SettingType ='" + settingtype + "'";

                    ds = d2.select_method_wo_parameter(selqry, "Text");
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        istotalwise = Convert.ToString(ds.Tables[0].Rows[0]["IsTotalwise"]);
                        string appPath = HttpContext.Current.Server.MapPath("~/BankStatement");
                        string szPath = "/BankStatement" + DateTime.Now.ToString("ddMMyyyy") + DateTime.Now.ToString("HHMMss") + ".txt";
                        string szPathnew = appPath + szPath;

                        FileStream fs = null;
                        if (!File.Exists(szPathnew))
                        {
                            using (fs = File.Create(szPathnew))
                            {

                            }
                        }
                        string strtext = "";
                        for (int i = 0; i < FpSpread1.Sheets[0].Rows.Count; i++)
                        {
                            appvalue = Convert.ToString(FpSpread1.Sheets[0].Cells[i, 0].Tag);
                            studdegcode = Convert.ToString(FpSpread1.Sheets[0].Cells[i, 0].Note);
                            feecatagory = Convert.ToString(FpSpread1.Sheets[0].Cells[i, 1].Note);
                            rollno = Convert.ToString(FpSpread1.Sheets[0].Cells[i, 1].Tag);
                            DataView dvprint = new DataView();

                            ds.Tables[0].DefaultView.RowFilter = "DegreeCode='" + Convert.ToString(FpSpread1.Sheets[0].Cells[i, 0].Note) + "' and FeeCategory='" + Convert.ToString(FpSpread1.Sheets[0].Cells[i, 1].Note) + "'";
                            // and Roll_No='"+Convert.ToString(FpSpread1.Sheets[0].Cells[i,1].Tag)+"'
                            dvprint = ds.Tables[0].DefaultView;

                            if (dvprint.Count > 0)
                            {

                                string field = "";
                                string fieldname = "";
                                field = Convert.ToString(dvprint[0]["Field"].ToString());
                                string[] splitfield = field.Split(',');
                                if (splitfield.Length > 0)
                                {
                                    string seleqry = " select r.Roll_No,r.Reg_No,r.Roll_Admit,dt.Dept_Name,c.Course_Name,r.Batch_Year,r.Current_Semester,r.Stud_Name from Registration r ,applyn a,Degree d,Department dt,Course c where a.app_no=r.App_No and d.Degree_Code =r.degree_code and d.Dept_Code =dt.Dept_Code and d.Course_Id =c.Course_Id and r.App_No ='" + appvalue + "'";
                                    dsprint = d2.select_method_wo_parameter(seleqry, "Text");
                                    for (int j = 0; j < splitfield.Length; j++)
                                    {
                                        fieldname = splitfield[j].ToString();
                                        if (fieldname.Trim() == "Text")
                                        {
                                            if (strtext == "")
                                            {
                                                strtext = Convert.ToString(dvprint[0]["TextValue"]);
                                            }
                                            else
                                            {
                                                strtext = strtext + Convert.ToString(dvprint[0]["TextValue"]);
                                            }
                                        }
                                        else if (fieldname.Trim() == "App No")
                                        {
                                            if (strtext == "")
                                            {
                                                strtext = Convert.ToString(appvalue);
                                            }
                                            else
                                            {
                                                strtext = strtext + "|" + Convert.ToString(appvalue);
                                            }
                                        }
                                        else if (fieldname.Trim() == "Roll No")
                                        {
                                            if (strtext == "")
                                            {
                                                strtext = Convert.ToString(dsprint.Tables[0].Rows[0]["Roll_No"]);
                                            }
                                            else
                                            {
                                                strtext = strtext + "|" + Convert.ToString(dsprint.Tables[0].Rows[0]["Roll_No"]);
                                            }
                                        }
                                        else if (fieldname.Trim() == "Admission No")
                                        {
                                            if (strtext == "")
                                            {
                                                strtext = Convert.ToString(dsprint.Tables[0].Rows[0]["Roll_Admit"]);
                                            }
                                            else
                                            {
                                                strtext = strtext + "|" + Convert.ToString(dsprint.Tables[0].Rows[0]["Roll_Admit"]);
                                            }
                                        }
                                        else if (fieldname.Trim() == "Register")
                                        {
                                            if (strtext == "")
                                            {
                                                strtext = Convert.ToString(dsprint.Tables[0].Rows[0]["Reg_No"]);
                                            }
                                            else
                                            {
                                                strtext = strtext + "|" + Convert.ToString(dsprint.Tables[0].Rows[0]["Reg_No"]);
                                            }
                                        }
                                        else if (fieldname.Trim() == "Student Name")
                                        {
                                            if (strtext == "")
                                            {
                                                strtext = Convert.ToString(dsprint.Tables[0].Rows[0]["Stud_Name"]);
                                            }
                                            else
                                            {
                                                strtext = strtext + "|" + Convert.ToString(dsprint.Tables[0].Rows[0]["Stud_Name"]);
                                            }
                                        }
                                        else if (fieldname.Trim() == "Course")
                                        {
                                            if (strtext == "")
                                            {
                                                strtext = Convert.ToString(dsprint.Tables[0].Rows[0]["Course_Name"]);
                                            }
                                            else
                                            {
                                                strtext = strtext + "|" + Convert.ToString(dsprint.Tables[0].Rows[0]["Course_Name"]);
                                            }
                                        }
                                        else if (fieldname.Trim() == "Branch")
                                        {
                                            if (strtext == "")
                                            {
                                                strtext = Convert.ToString(dsprint.Tables[0].Rows[0]["Dept_Name"]);
                                            }
                                            else
                                            {
                                                strtext = strtext + "|" + Convert.ToString(dsprint.Tables[0].Rows[0]["Dept_Name"]);
                                            }
                                        }
                                        else if (fieldname.Trim() == "Batch")
                                        {
                                            if (strtext == "")
                                            {
                                                strtext = Convert.ToString(dsprint.Tables[0].Rows[0]["Batch_Year"]);
                                            }
                                            else
                                            {
                                                strtext = strtext + "|" + Convert.ToString(dsprint.Tables[0].Rows[0]["Batch_Year"]);
                                            }
                                        }
                                        else if (fieldname.Trim() == "Semaster")
                                        {
                                            if (strtext == "")
                                            {
                                                strtext = Convert.ToString(dvprint[0]["TextValue"]);
                                            }
                                            else
                                            {
                                                strtext = strtext + "|" + Convert.ToString(dsprint.Tables[0].Rows[0]["Current_Semester"]);
                                            }
                                        }
                                        //else if (fieldname.Trim() == "Bank A/C No")
                                        //{
                                        //    if (strtext == "")
                                        //    {
                                        //        strtext = Convert.ToString(dvprint[0]["TextValue"]);
                                        //    }
                                        //    else
                                        //    {
                                        //        strtext = strtext + "|" + Convert.ToString(dsprint.Tables[0].Rows[0]["Current_Semester"]);
                                        //    }
                                        //}

                                    }
                                }
                                string heavalue = "";
                                string strhedervalue = "";
                                Hashtable checkhash = (Hashtable)ViewState["Newhash"];
                                strhedervalue = Convert.ToString(dvprint[0]["ChlGroupHeader"].ToString());
                                string[] strhedvalue = strhedervalue.Split(',');
                                if (istotalwise.Trim() == "0")
                                {
                                    if (strhedvalue.Length > 0)
                                    {
                                        for (int k = 0; k < strhedvalue.Length; k++)
                                        {
                                            heavalue = strhedvalue[k].ToString();
                                            string balvalue = "";
                                            string selectqueryvalue = "select distinct HeaderFK  from FS_ChlGroupHeaderSettings  where ChlGroupHeader ='" + heavalue + "'";
                                            DataSet dvalue = d2.select_method_wo_parameter(selectqueryvalue, "Text");
                                            if (dvalue.Tables[0].Rows.Count > 0)
                                            {
                                                int bal = 0;
                                                for (int row = 0; row < dvalue.Tables[0].Rows.Count; row++)
                                                {
                                                    int columnvalue = Convert.ToInt32(checkhash[Convert.ToString(dvalue.Tables[0].Rows[row][0])]);
                                                    string balvaluenew = Convert.ToString(FpSpread1.Sheets[0].Cells[i, (columnvalue + 5)].Text);
                                                    if (balvaluenew.Trim() != "")
                                                    {
                                                        bal = bal + Convert.ToInt32(balvaluenew);
                                                    }
                                                }
                                                balvalue = Convert.ToString(bal);
                                            }
                                            if (strtext == "")
                                            {
                                                strtext = Convert.ToString(Math.Round(Convert.ToDouble(balvalue), 2) + ".00");
                                            }
                                            else
                                            {
                                                strtext = strtext + "|" + Convert.ToString(Math.Round(Convert.ToDouble(balvalue), 2) + ".00");
                                            }

                                        }
                                    }
                                }
                                else
                                {
                                    string totalamount = "";
                                    string balvalue = "";
                                    if (strhedvalue.Length > 0)
                                    {
                                        for (int k = 0; k < strhedvalue.Length; k++)
                                        {
                                            heavalue = strhedvalue[k].ToString();

                                            string selectqueryvalue = "select distinct HeaderFK  from FS_ChlGroupHeaderSettings  where ChlGroupHeader ='" + heavalue + "'";
                                            DataSet dvalue = d2.select_method_wo_parameter(selectqueryvalue, "Text");
                                            if (dvalue.Tables[0].Rows.Count > 0)
                                            {
                                                int bal = 0;
                                                for (int row = 0; row < dvalue.Tables[0].Rows.Count; row++)
                                                {
                                                    int columnvalue = Convert.ToInt32(checkhash[Convert.ToString(dvalue.Tables[0].Rows[row][0])]);
                                                    string balvaluenew = Convert.ToString(FpSpread1.Sheets[0].Cells[i, (columnvalue + 5)].Text);
                                                    if (balvaluenew.Trim() != "")
                                                    {
                                                        bal = bal + Convert.ToInt32(balvaluenew);
                                                    }
                                                }
                                                balvalue = Convert.ToString(bal);
                                            }

                                            if (totalamount == "")
                                            {
                                                totalamount = Convert.ToString(balvalue);
                                            }
                                            else
                                            {
                                                totalamount = totalamount + Convert.ToString(balvalue);
                                            }
                                            //if (strtext == "")
                                            //{
                                            //    strtext = Convert.ToString(Math.Round(Convert.ToDouble(balvalue), 2) + ".00");
                                            //}
                                            //else
                                            //{
                                            //    strtext = strtext + "|" + Convert.ToString(Math.Round(Convert.ToDouble(balvalue), 2) + ".00");
                                            //}

                                        }
                                        strtext = strtext + "|" + Convert.ToString(Math.Round(Convert.ToDouble(totalamount), 2) + ".00");

                                    }
                                }




                                if (strtext.Trim() != "")
                                {
                                    strtext = strtext + "|0.00";
                                    strtext = strtext + "\r\n";
                                }

                            }
                        }
                        if (strtext.Trim() != "")
                        {
                            if (File.Exists(szPathnew))
                            {
                                using (StreamWriter sw = new StreamWriter(szPathnew))
                                {
                                    sw.Write("" + strtext + "");
                                }
                            }
                        }
                        Response.ClearHeaders();
                        Response.AddHeader("Content-Disposition", "attachment; filename=" + appPath);
                        Response.ContentType = "application/txt";
                        Response.WriteFile(appPath + szPath);
                        Response.End();
                    }
                }
            }
        }
    }
    #endregion

    public void imagebtnpopsscode_Click(object sender, EventArgs e)
    {
        pageset.Visible = false;
    }
    public void btn_pageset_Click(object sender, EventArgs e)
    {
        pageset.Visible = true;
        btn_plus.Enabled = false;
        ddl_group.Enabled = false;
        btn_minus.Enabled = false;
        txt_pgtxt.Text = "";
        bindsem1();
        loadstream();
        loadcourse();
        loadheader();
        loadfield();
    }
    public void ddl_selpagttl_SelectedIndexChanged(object sender, EventArgs e)
    {
    }
    #region btnsave
    public void btn_save_Click(object sender, EventArgs e)
    {
        string strtxt = txt_pgtxt.Text.ToString();

        string degrcode = "";

        string headvalue = "";
        for (int i = 0; i < lb_hdr.Items.Count; i++)
        {

            if (headvalue == "")
            {
                headvalue = lb_hdr.Items[i].Text.ToString();
            }
            else
            {
                headvalue = headvalue + "," + "" + lb_hdr.Items[i].Text.ToString() + "";
            }

        }

        string selfield = "";
        for (int i = 0; i < chkl_field.Items.Count; i++)
        {
            if (chkl_field.Items[i].Selected == true)
            {
                if (selfield == "")
                {
                    selfield = chkl_field.Items[i].Text.ToString();
                }
                else
                {
                    selfield = selfield + "," + "" + chkl_field.Items[i].Text.ToString() + "";
                }
            }
        }
        int totwise = 0;
        if (chk_total.Checked == true)
        {
            totwise = 1;
        }

        int pagecode = 0;
        int settype = 0;

        string strsem = "";
        int save = 0;

        for (int ikj = 0; ikj < chkl_course.Items.Count; ikj++)
        {
            if (chkl_course.Items[ikj].Selected == true)
            {
                degrcode = chkl_course.Items[ikj].Value.ToString();

                for (int i = 0; i < chkl_sema.Items.Count; i++)
                {
                    if (chkl_sema.Items[i].Selected == true)
                    {
                        if (strsem == "")
                        {
                            strsem = chkl_sema.Items[i].Value.ToString();
                            //string insqry = "insert into FM_ChlBankPrintSettings(PageCode,DegreeCode,Semester,ChlGroupHeader,Field,TextValue,SettingType,Totalwise,CollegeCode)values('" + pagecode + "','" + degrcode + "','" + strsem + "','" + headvalue + "','" + selfield + "','" + strtxt.ToUpper() + "','" + settype + "','" + totwise + "','" + collegecode1 + "')";
                            string insqry = " if exists (select * from FM_ChlBankPrintSettings where DegreeCode ='" + degrcode + "' and SettingType ='" + settype + "' and CollegeCode='" + collegecode1 + "' and FeeCategory='" + strsem + "') update FM_ChlBankPrintSettings set PageCode='" + pagecode + "',ChlGroupHeader='" + headvalue + "',Field='" + selfield + "',TextValue='" + strtxt.ToUpper() + "',IsTotalwise='" + totwise + "' where DegreeCode ='" + degrcode + "' and SettingType ='" + settype + "' and CollegeCode='" + collegecode1 + "' and FeeCategory='" + strsem + "' else insert into FM_ChlBankPrintSettings(PageCode,DegreeCode,FeeCategory,ChlGroupHeader,Field,TextValue,SettingType,IsTotalwise,CollegeCode)values('" + pagecode + "','" + degrcode + "','" + strsem + "','" + headvalue + "','" + selfield + "','" + strtxt.ToUpper() + "','" + settype + "','" + totwise + "','" + collegecode1 + "')";
                            int ins = d2.update_method_wo_parameter(insqry, "Text");
                            save++;
                        }
                        strsem = "";
                    }
                }
            }
        }

        if (save > 0)
        {
            imgdiv2.Visible = true;
            lbl_alert.Visible = true;
            lbl_alert.Text = "Saved Successfully";
            // pageset.Visible = false;

        }

    }
    #endregion
    public void btn_del_Click(object sender, EventArgs e)
    {

    }
    public void btn_exit_Click(object sender, EventArgs e)
    {
        pageset.Visible = false;
    }
    public void btnminus_Click(object sender, EventArgs e)
    {
    }
    public void btnplus_Click(object sender, EventArgs e)
    {
    }

    public void cb_column_CheckedChanged(object sender, EventArgs e)
    {
        if (cb_column.Checked == true)
        {
            for (int i = 0; i < cblcolumnorder.Items.Count; i++)
            {
                cblcolumnorder.Items[i].Selected = true;
            }
        }
        else
        {
            for (int i = 0; i < cblcolumnorder.Items.Count; i++)
            {
                cblcolumnorder.Items[i].Selected = false;
            }
        }
    }
    public void lb_Click(object sender, EventArgs e)
    {
    }
    public void cbl_columnorder_SelectedIndexChanged(object sender, EventArgs e)
    {
    }
    protected void btnExcel_Click(object sender, EventArgs e)
    {
        try
        {
            string reportname = txtexcelname.Text;
            if (reportname.ToString().Trim() != "")
            {
                d2.printexcelreport(FpSpread1, reportname);
                lblvalidation1.Visible = false;
            }
            else
            {
                if (rb_header.Checked == true)
                {
                    lblvalidation1.Text = "Please Enter Your Header Report Name";
                    lblvalidation1.Visible = true;
                    txtexcelname.Focus();
                }
                else if (rb_ledger.Checked == true)
                {
                    lblvalidation1.Text = "Please Enter Your Ledger Report Name";
                    lblvalidation1.Visible = true;
                    txtexcelname.Focus();
                }
                else if (rb_batch.Checked == true)
                {
                    lblvalidation1.Text = "Please Enter Your Batch Year Report Name";
                    lblvalidation1.Visible = true;
                    txtexcelname.Focus();
                }
                else if (rb_degree.Checked == true)
                {
                    lblvalidation1.Text = "Please Enter Your Degree Report Name";
                    lblvalidation1.Visible = true;
                    txtexcelname.Focus();
                }
                else if (rb_dept.Checked == true)
                {
                    lblvalidation1.Text = "Please Enter Your Department Report Name";
                    lblvalidation1.Visible = true;
                    txtexcelname.Focus();
                }
                else if (rb_sem.Checked == true)
                {
                    lblvalidation1.Text = "Please Enter Your Semester Report Name";
                    lblvalidation1.Visible = true;
                    txtexcelname.Focus();
                }
                else if (rb_studentwise.Checked == true)
                {
                    if (rb_common.Checked == true)
                    {
                        lblvalidation1.Text = "Please Enter Your Common Report Name";
                        lblvalidation1.Visible = true;
                        txtexcelname.Focus();
                    }
                    else if (rb_detail.Checked == true)
                    {
                        if (rb_hori.Checked == true)
                        {
                            if (rbstudhed.Checked == true)
                            {
                                lblvalidation1.Text = "Please Enter Your Detailwise-Horizontal-Header Report Name";
                                lblvalidation1.Visible = true;
                                txtexcelname.Focus();
                            }
                            else
                            {
                                lblvalidation1.Text = "Please Enter Your Detailwise-Horizontal-Ledger Report Name";
                                lblvalidation1.Visible = true;
                                txtexcelname.Focus();
                            }
                        }
                        else if (rb_vert.Checked == true)
                        {
                            if (rbstudhed.Checked == true)
                            {
                                if (rbstudhed.Checked == true)
                                {
                                    lblvalidation1.Text = "Please Enter Your Detailwise-Vertical-Header Report Name";
                                    lblvalidation1.Visible = true;
                                    txtexcelname.Focus();
                                }
                                else
                                {
                                    lblvalidation1.Text = "Please Enter Your Detailwise-Vertical-Ledger Report Name";
                                    lblvalidation1.Visible = true;
                                    txtexcelname.Focus();
                                }
                            }
                            else
                            {
                            }
                        }
                    }
                }

            }

        }
        catch
        {

        }

    }

    public void chkl_ledgercolorder_SelectedIndexChanged(object sender, EventArgs e)
    {
    }
    public void lnk_ledgercol_Click(object sender, EventArgs e)
    {
    }
    public void btn_ledgercolor_Click(object sender, EventArgs e)
    {
    }
    public void btn_batcolorder_Click(object sender, EventArgs e)
    {
    }

    public void lnk_batcolorder_Click(object sender, EventArgs e)
    {
    }
    public void chkl_batchcolorder_SelectedIndexChanged(object sender, EventArgs e)
    {
    }

    public void lnk_degcolorder_Click(object sender, EventArgs e)
    {
    }
    public void chkl_degcolorder_SelectedIndexChanged(object sender, EventArgs e)
    {
    }
    public void btn_degcolorder_Click(object sender, EventArgs e)
    {
    }

    public void lnk_deptcolorderr_Click(object sender, EventArgs e)
    {
    }
    public void chkl_deptcolorder_SelectedIndexChanged(object sender, EventArgs e)
    {
    }
    public void btn_semcolorder_Click(object sender, EventArgs e)
    {
    }

    public void lnk_semcolorder_Click(object sender, EventArgs e)
    {
    }
    public void chkl_semcolorder_SelectedIndexChanged(object sender, EventArgs e)
    {
    }
    public void btn_ledcellclick_Clcik(object sender, EventArgs e)
    {
        try
        {
            if (fpledger.Sheets[0].Rows.Count > 0)
            {
                ArrayList colord = new ArrayList();
                colord.Clear();
                //if (chkl_ledgercolorder.Items.Count > 0)
                //{
                //    for (int i = 0; i < chkl_ledgercolorder.Items.Count; i++)
                //    {
                //        if (chkl_ledgercolorder.Items[i].Selected == true)
                //        {
                //            colord.Add(chkl_ledgercolorder.Items[i].Text.ToString());
                //        }
                //    }
                //}
                fpledger.Sheets[0].Columns[1].Visible = true;
                if (!colord.Contains("Header Name"))
                {
                    fpledger.Sheets[0].Columns[1].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpledger.Sheets[0].Columns[1].Visible = true;
                }
                fpledger.Sheets[0].Columns[2].Visible = true;
                if (!colord.Contains("Ledger Name"))
                {
                    fpledger.Sheets[0].Columns[2].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpledger.Sheets[0].Columns[2].Visible = true;
                }
                fpledger.Sheets[0].Columns[3].Visible = true;
                if (!colord.Contains("Allot"))
                {
                    fpledger.Sheets[0].Columns[3].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpledger.Sheets[0].Columns[3].Visible = true;
                }
                fpledger.Sheets[0].Columns[4].Visible = true;
                if (!colord.Contains("consustion"))
                {
                    fpledger.Sheets[0].Columns[4].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpledger.Sheets[0].Columns[4].Visible = true;
                }
                fpledger.Sheets[0].Columns[5].Visible = true;
                if (!colord.Contains("Government"))
                {
                    fpledger.Sheets[0].Columns[5].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpledger.Sheets[0].Columns[5].Visible = true;
                }
                fpledger.Sheets[0].Columns[6].Visible = true;
                if (!colord.Contains("Total"))
                {
                    fpledger.Sheets[0].Columns[6].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpledger.Sheets[0].Columns[6].Visible = true;
                }
                int check = 6;
                Hashtable newhash = new Hashtable();

                if (chkl_paid.Items.Count > 0)
                {
                    for (int s = 0; s < chkl_paid.Items.Count; s++)
                    {
                        if (chkl_paid.Items[s].Selected == true)
                        {
                            check++;
                            if (!colord.Contains("Paid"))
                            {
                                fpledger.Sheets[0].Columns[check].Visible = false;
                            }
                            if (colord.Count == 0)
                            {
                                fpledger.Sheets[0].Columns[check].Visible = true;
                            }
                        }

                    }
                    if (check != 0)
                    {
                        if (!colord.Contains("Paid"))
                        {
                            fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 2].Visible = false;
                        }
                        if (colord.Count == 0)
                        {
                            fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 2].Visible = true;
                        }
                    }
                }
                if (check == 0)
                {
                    if (!colord.Contains("Paid"))
                    {
                        fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                }
                else
                {
                    if (!colord.Contains("Paid"))
                    {
                        fpledger.Sheets[0].Columns[7].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpledger.Sheets[0].Columns[7].Visible = true;
                    }
                }

                fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = true;
                if (!colord.Contains("Balance"))
                {
                    fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = false;
                }
                else
                {
                    fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = true;
                }
                if (colord.Count == 0)
                {
                    fpledger.Sheets[0].Columns[fpledger.Sheets[0].ColumnCount - 1].Visible = true;
                }

            }

        }
        catch
        {
        }
    }
    public void btn_batchcellclick_Clcik(object sender, EventArgs e)
    {
        try
        {
            if (fpbatch.Sheets[0].Rows.Count > 0)
            {
                ArrayList colord = new ArrayList();
                colord.Clear();
                //if (chkl_batchcolorder.Items.Count > 0)
                //{
                //    for (int i = 0; i < chkl_batchcolorder.Items.Count; i++)
                //    {
                //        if (chkl_batchcolorder.Items[i].Selected == true)
                //        {
                //            colord.Add(chkl_batchcolorder.Items[i].Text.ToString());
                //        }
                //    }
                //}
                fpbatch.Sheets[0].Columns[1].Visible = true;
                if (!colord.Contains("Header Name"))
                {
                    fpbatch.Sheets[0].Columns[1].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpbatch.Sheets[0].Columns[1].Visible = true;
                }
                fpbatch.Sheets[0].Columns[2].Visible = true;
                if (!colord.Contains("Ledger Name"))
                {
                    fpbatch.Sheets[0].Columns[2].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpbatch.Sheets[0].Columns[2].Visible = true;
                }
                fpbatch.Sheets[0].Columns[3].Visible = true;
                if (!colord.Contains("Batch Year"))
                {
                    fpbatch.Sheets[0].Columns[3].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpbatch.Sheets[0].Columns[3].Visible = true;
                }
                fpbatch.Sheets[0].Columns[4].Visible = true;
                if (!colord.Contains("Allot"))
                {
                    fpbatch.Sheets[0].Columns[4].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpbatch.Sheets[0].Columns[4].Visible = true;
                }
                fpbatch.Sheets[0].Columns[5].Visible = true;
                if (!colord.Contains("consustion"))
                {
                    fpbatch.Sheets[0].Columns[5].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpbatch.Sheets[0].Columns[5].Visible = true;
                }
                fpbatch.Sheets[0].Columns[6].Visible = true;
                if (!colord.Contains("Government"))
                {
                    fpbatch.Sheets[0].Columns[6].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpbatch.Sheets[0].Columns[6].Visible = true;
                }
                fpbatch.Sheets[0].Columns[7].Visible = true;
                if (!colord.Contains("Total"))
                {
                    fpbatch.Sheets[0].Columns[7].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpbatch.Sheets[0].Columns[7].Visible = true;
                }
                int check = 7;
                Hashtable newhash = new Hashtable();

                if (chkl_paid.Items.Count > 0)
                {
                    for (int s = 0; s < chkl_paid.Items.Count; s++)
                    {
                        if (chkl_paid.Items[s].Selected == true)
                        {
                            check++;
                            fpbatch.Sheets[0].Columns[check].Visible = true;
                            if (!colord.Contains("Paid"))
                            {
                                fpbatch.Sheets[0].Columns[check].Visible = false;
                            }
                            if (colord.Count == 0)
                            {
                                fpbatch.Sheets[0].Columns[check].Visible = true;
                            }
                        }

                    }
                    if (check != 0)
                    {
                        if (!colord.Contains("Paid"))
                        {
                            fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 2].Visible = false;
                        }
                        if (colord.Count == 0)
                        {
                            fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 2].Visible = true;
                        }
                    }
                }
                if (check == 0)
                {
                    fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("Paid"))
                    {
                        fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                }
                else
                {
                    if (!colord.Contains("Paid"))
                    {
                        fpbatch.Sheets[0].Columns[8].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpbatch.Sheets[0].Columns[8].Visible = true;
                    }
                }

                fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = true;
                if (!colord.Contains("Balance"))
                {
                    fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = false;
                }
                else
                {
                    fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = true;
                }
                if (colord.Count == 0)
                {
                    fpbatch.Sheets[0].Columns[fpbatch.Sheets[0].ColumnCount - 1].Visible = true;
                }

            }

        }
        catch
        {
        }
    }
    public void btn_degreecellclick_Clcik(object sender, EventArgs e)
    {
        try
        {
            if (fpdegree.Sheets[0].Rows.Count > 0)
            {
                ArrayList colord = new ArrayList();
                colord.Clear();
                //if (chkl_degcolorder.Items.Count > 0)
                //{
                //    for (int i = 0; i < chkl_degcolorder.Items.Count; i++)
                //    {
                //        if (chkl_degcolorder.Items[i].Selected == true)
                //        {
                //            colord.Add(chkl_degcolorder.Items[i].Text.ToString());
                //        }
                //    }
                //}
                fpdegree.Sheets[0].Columns[1].Visible = true;
                if (!colord.Contains("Header Name"))
                {
                    fpdegree.Sheets[0].Columns[1].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpdegree.Sheets[0].Columns[1].Visible = true;
                }

                fpdegree.Sheets[0].Columns[2].Visible = true;
                if (!colord.Contains("Ledger Name"))
                {
                    fpdegree.Sheets[0].Columns[2].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpdegree.Sheets[0].Columns[2].Visible = true;
                }

                fpdegree.Sheets[0].Columns[3].Visible = true;
                if (!colord.Contains("Batch Year"))
                {
                    fpdegree.Sheets[0].Columns[3].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpdegree.Sheets[0].Columns[3].Visible = true;
                }

                fpdegree.Sheets[0].Columns[4].Visible = true;
                if (!colord.Contains("Degree Name"))
                {
                    fpdegree.Sheets[0].Columns[4].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpdegree.Sheets[0].Columns[4].Visible = true;
                }

                fpdegree.Sheets[0].Columns[5].Visible = true;
                if (!colord.Contains("Allot"))
                {
                    fpdegree.Sheets[0].Columns[5].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpdegree.Sheets[0].Columns[5].Visible = true;
                }

                fpdegree.Sheets[0].Columns[6].Visible = true;
                if (!colord.Contains("consustion"))
                {
                    fpdegree.Sheets[0].Columns[6].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpdegree.Sheets[0].Columns[6].Visible = true;
                }

                fpdegree.Sheets[0].Columns[7].Visible = true;
                if (!colord.Contains("Government"))
                {
                    fpdegree.Sheets[0].Columns[7].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpdegree.Sheets[0].Columns[7].Visible = true;
                }

                fpdegree.Sheets[0].Columns[8].Visible = true;
                if (!colord.Contains("Total"))
                {
                    fpdegree.Sheets[0].Columns[8].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpdegree.Sheets[0].Columns[8].Visible = true;
                }
                int check = 8;
                Hashtable newhash = new Hashtable();

                if (chkl_paid.Items.Count > 0)
                {
                    for (int s = 0; s < chkl_paid.Items.Count; s++)
                    {
                        if (chkl_paid.Items[s].Selected == true)
                        {
                            check++;
                            fpdegree.Sheets[0].Columns[check].Visible = true;
                            if (!colord.Contains("Paid"))
                            {
                                fpdegree.Sheets[0].Columns[check].Visible = false;
                            }
                            if (colord.Count == 0)
                            {
                                fpdegree.Sheets[0].Columns[check].Visible = true;
                            }
                        }

                    }
                    if (check != 0)
                    {
                        if (!colord.Contains("Paid"))
                        {
                            fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 2].Visible = false;
                        }
                        if (colord.Count == 0)
                        {
                            fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 2].Visible = true;
                        }
                    }
                }
                if (check == 0)
                {
                    fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("Paid"))
                    {
                        fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                }
                else
                {
                    if (!colord.Contains("Paid"))
                    {
                        fpdegree.Sheets[0].Columns[9].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpdegree.Sheets[0].Columns[9].Visible = true;
                    }
                }

                fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = true;
                if (!colord.Contains("Balance"))
                {
                    fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = false;
                }
                else
                {
                    fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = true;
                }
                if (colord.Count == 0)
                {
                    fpdegree.Sheets[0].Columns[fpdegree.Sheets[0].ColumnCount - 1].Visible = true;
                }

            }

        }
        catch
        {
        }
    }
    public void btn_deptcellclick_Clcik(object sender, EventArgs e)
    {
        try
        {
            if (fpdept.Sheets[0].Rows.Count > 0)
            {
                ArrayList colord = new ArrayList();
                colord.Clear();
                //if (chkl_deptcolorder.Items.Count > 0)
                //{
                //    for (int i = 0; i < chkl_deptcolorder.Items.Count; i++)
                //    {
                //        if (chkl_deptcolorder.Items[i].Selected == true)
                //        {
                //            colord.Add(chkl_deptcolorder.Items[i].Text.ToString());
                //        }
                //    }
                //}
                fpdept.Sheets[0].Columns[1].Visible = true;
                if (!colord.Contains("Header Name"))
                {
                    fpdept.Sheets[0].Columns[1].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpdept.Sheets[0].Columns[1].Visible = true;
                }

                fpdept.Sheets[0].Columns[2].Visible = true;
                if (!colord.Contains("Ledger Name"))
                {
                    fpdept.Sheets[0].Columns[2].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpdept.Sheets[0].Columns[2].Visible = true;
                }

                fpdept.Sheets[0].Columns[3].Visible = true;
                if (!colord.Contains("Batch Year"))
                {
                    fpdept.Sheets[0].Columns[3].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpdept.Sheets[0].Columns[3].Visible = true;
                }

                fpdept.Sheets[0].Columns[4].Visible = true;
                if (!colord.Contains("Course Name"))
                {
                    fpdept.Sheets[0].Columns[4].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpdept.Sheets[0].Columns[4].Visible = true;
                }

                fpdept.Sheets[0].Columns[5].Visible = true;
                if (!colord.Contains("Department Name"))
                {
                    fpdept.Sheets[0].Columns[5].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpdept.Sheets[0].Columns[5].Visible = true;
                }

                fpdept.Sheets[0].Columns[6].Visible = true;
                if (!colord.Contains("Allot"))
                {
                    fpdept.Sheets[0].Columns[6].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpdept.Sheets[0].Columns[6].Visible = true;
                }

                fpdept.Sheets[0].Columns[7].Visible = true;
                if (!colord.Contains("consustion"))
                {
                    fpdept.Sheets[0].Columns[7].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpdept.Sheets[0].Columns[7].Visible = true;
                }

                fpdept.Sheets[0].Columns[8].Visible = true;
                if (!colord.Contains("Government"))
                {
                    fpdept.Sheets[0].Columns[8].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpdept.Sheets[0].Columns[8].Visible = true;
                }

                fpdept.Sheets[0].Columns[9].Visible = true;
                if (!colord.Contains("Total"))
                {
                    fpdept.Sheets[0].Columns[9].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpdept.Sheets[0].Columns[9].Visible = true;
                }
                int check = 9;
                Hashtable newhash = new Hashtable();

                if (chkl_paid.Items.Count > 0)
                {
                    for (int s = 0; s < chkl_paid.Items.Count; s++)
                    {
                        if (chkl_paid.Items[s].Selected == true)
                        {
                            check++;
                            fpdept.Sheets[0].Columns[check].Visible = true;
                            if (!colord.Contains("Paid"))
                            {
                                fpdept.Sheets[0].Columns[check].Visible = false;
                            }
                            if (colord.Count == 0)
                            {
                                fpdept.Sheets[0].Columns[check].Visible = true;
                            }
                        }

                    }
                    if (check != 0)
                    {
                        if (!colord.Contains("Paid"))
                        {
                            fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 2].Visible = false;
                        }
                        if (colord.Count == 0)
                        {
                            fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 2].Visible = true;
                        }
                    }
                }
                if (check == 0)
                {

                    fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("Paid"))
                    {
                        fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                }
                else
                {
                    if (!colord.Contains("Paid"))
                    {
                        fpdept.Sheets[0].Columns[10].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpdept.Sheets[0].Columns[10].Visible = true;
                    }
                }

                fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = true;
                if (!colord.Contains("Balance"))
                {
                    fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = false;
                }
                else
                {
                    fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = true;
                }
                if (colord.Count == 0)
                {
                    fpdept.Sheets[0].Columns[fpdept.Sheets[0].ColumnCount - 1].Visible = true;
                }

            }

        }
        catch
        {
        }
    }
    public void btn_semcellclick_Clcik(object sender, EventArgs e)
    {
        try
        {
            if (fpsem.Sheets[0].Rows.Count > 0)
            {
                ArrayList colord = new ArrayList();
                colord.Clear();
                //if (chkl_semcolorder.Items.Count > 0)
                //{
                //    for (int i = 0; i < chkl_semcolorder.Items.Count; i++)
                //    {
                //        if (chkl_semcolorder.Items[i].Selected == true)
                //        {
                //            colord.Add(chkl_semcolorder.Items[i].Text.ToString());
                //        }
                //    }
                //}

                fpsem.Sheets[0].Columns[1].Visible = true;
                if (!colord.Contains("Header Name"))
                {
                    fpsem.Sheets[0].Columns[1].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpsem.Sheets[0].Columns[1].Visible = true;
                }

                fpsem.Sheets[0].Columns[2].Visible = true;
                if (!colord.Contains("Ledger Name"))
                {
                    fpsem.Sheets[0].Columns[2].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpsem.Sheets[0].Columns[2].Visible = true;
                }

                fpsem.Sheets[0].Columns[3].Visible = true;
                if (!colord.Contains("Batch Year"))
                {
                    fpsem.Sheets[0].Columns[3].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpsem.Sheets[0].Columns[3].Visible = true;
                }

                fpsem.Sheets[0].Columns[4].Visible = true;
                if (!colord.Contains("Course Name"))
                {
                    fpsem.Sheets[0].Columns[4].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpsem.Sheets[0].Columns[4].Visible = true;
                }

                fpsem.Sheets[0].Columns[5].Visible = true;
                if (!colord.Contains("Department Name"))
                {
                    fpsem.Sheets[0].Columns[5].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpsem.Sheets[0].Columns[5].Visible = true;
                }

                fpsem.Sheets[0].Columns[6].Visible = true;
                if (!colord.Contains("Semaster"))
                {
                    fpsem.Sheets[0].Columns[6].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpsem.Sheets[0].Columns[6].Visible = true;
                }

                fpsem.Sheets[0].Columns[7].Visible = true;
                if (!colord.Contains("Allot"))
                {
                    fpsem.Sheets[0].Columns[7].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpsem.Sheets[0].Columns[7].Visible = true;
                }

                fpsem.Sheets[0].Columns[8].Visible = true;
                if (!colord.Contains("consustion"))
                {
                    fpsem.Sheets[0].Columns[8].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpsem.Sheets[0].Columns[8].Visible = true;
                }

                fpsem.Sheets[0].Columns[9].Visible = true;
                if (!colord.Contains("Government"))
                {
                    fpsem.Sheets[0].Columns[9].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpsem.Sheets[0].Columns[9].Visible = true;
                }

                fpsem.Sheets[0].Columns[10].Visible = true;
                if (!colord.Contains("Total"))
                {
                    fpsem.Sheets[0].Columns[10].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpsem.Sheets[0].Columns[10].Visible = true;
                }
                int check = 10;
                Hashtable newhash = new Hashtable();

                if (chkl_paid.Items.Count > 0)
                {
                    for (int s = 0; s < chkl_paid.Items.Count; s++)
                    {
                        if (chkl_paid.Items[s].Selected == true)
                        {
                            check++;
                            fpsem.Sheets[0].Columns[check].Visible = true;
                            if (!colord.Contains("Paid"))
                            {
                                fpsem.Sheets[0].Columns[check].Visible = false;
                            }
                            if (colord.Count == 0)
                            {
                                fpsem.Sheets[0].Columns[check].Visible = true;
                            }
                        }

                    }
                    if (check != 0)
                    {
                        if (!colord.Contains("Paid"))
                        {
                            fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 2].Visible = false;
                        }
                        if (colord.Count == 0)
                        {
                            fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 2].Visible = true;
                        }
                    }
                }
                if (check == 0)
                {
                    fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("Paid"))
                    {
                        fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                }
                else
                {
                    if (!colord.Contains("Paid"))
                    {
                        fpsem.Sheets[0].Columns[11].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpsem.Sheets[0].Columns[11].Visible = true;
                    }
                }

                fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = true;
                if (!colord.Contains("Balance"))
                {
                    fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = false;
                }
                else
                {
                    fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = true;
                }
                if (colord.Count == 0)
                {
                    fpsem.Sheets[0].Columns[fpsem.Sheets[0].ColumnCount - 1].Visible = true;
                }

            }

        }
        catch
        {
        }
    }
    public void chk_studcolorder_CheckedChanged(object sender, EventArgs e)
    {
    }
    public void lnk_studcolorder_Click(object sender, EventArgs e)
    {
    }
    public void chkl_studcolorder_SelectedIndexChanged(object sender, EventArgs e)
    {
    }
    public void btn_studcolorder_Clcik(object sender, EventArgs e)
    {
        try
        {
            if (fpsem.Sheets[0].Rows.Count > 0)
            {
                ArrayList colord = new ArrayList();
                colord.Clear();
                //if (chkl_studcolorder.Items.Count > 0)
                //{
                //    for (int i = 0; i < chkl_studcolorder.Items.Count; i++)
                //    {
                //        if (chkl_studcolorder.Items[i].Selected == true)
                //        {
                //            colord.Add(chkl_studcolorder.Items[i].Text.ToString());
                //        }
                //    }
                //}

                fpstudcell.Sheets[0].Columns[1].Visible = true;
                if (!colord.Contains("Header Name"))
                {
                    fpstudcell.Sheets[0].Columns[1].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpstudcell.Sheets[0].Columns[1].Visible = true;
                }

                fpstudcell.Sheets[0].Columns[2].Visible = true;
                if (!colord.Contains("Ledger Name"))
                {
                    fpstudcell.Sheets[0].Columns[2].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpstudcell.Sheets[0].Columns[2].Visible = true;
                }

                fpstudcell.Sheets[0].Columns[3].Visible = true;
                if (!colord.Contains("Batch Year"))
                {
                    fpstudcell.Sheets[0].Columns[3].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpstudcell.Sheets[0].Columns[3].Visible = true;
                }

                fpstudcell.Sheets[0].Columns[4].Visible = true;
                if (!colord.Contains("Course Name"))
                {
                    fpstudcell.Sheets[0].Columns[4].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpstudcell.Sheets[0].Columns[4].Visible = true;
                }

                fpstudcell.Sheets[0].Columns[5].Visible = true;
                if (!colord.Contains("Department Name"))
                {
                    fpstudcell.Sheets[0].Columns[5].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpstudcell.Sheets[0].Columns[5].Visible = true;
                }

                fpstudcell.Sheets[0].Columns[6].Visible = true;
                if (!colord.Contains("Semaster"))
                {
                    fpstudcell.Sheets[0].Columns[6].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpstudcell.Sheets[0].Columns[6].Visible = true;
                }

                fpstudcell.Sheets[0].Columns[7].Visible = true;
                if (!colord.Contains("Student Name"))
                {
                    fpstudcell.Sheets[0].Columns[7].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpstudcell.Sheets[0].Columns[7].Visible = true;
                }

                fpstudcell.Sheets[0].Columns[8].Visible = true;
                if (!colord.Contains("Allot"))
                {
                    fpstudcell.Sheets[0].Columns[8].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpstudcell.Sheets[0].Columns[8].Visible = true;
                }

                fpstudcell.Sheets[0].Columns[9].Visible = true;
                if (!colord.Contains("consustion"))
                {
                    fpstudcell.Sheets[0].Columns[9].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpstudcell.Sheets[0].Columns[9].Visible = true;
                }

                fpstudcell.Sheets[0].Columns[10].Visible = true;
                if (!colord.Contains("Government"))
                {
                    fpstudcell.Sheets[0].Columns[10].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpstudcell.Sheets[0].Columns[10].Visible = true;
                }

                fpstudcell.Sheets[0].Columns[11].Visible = true;
                if (!colord.Contains("Total"))
                {
                    fpstudcell.Sheets[0].Columns[11].Visible = false;
                }
                if (colord.Count == 0)
                {
                    fpstudcell.Sheets[0].Columns[11].Visible = true;
                }
                int check = 11;
                Hashtable newhash = new Hashtable();

                if (chkl_paid.Items.Count > 0)
                {
                    for (int s = 0; s < chkl_paid.Items.Count; s++)
                    {
                        if (chkl_paid.Items[s].Selected == true)
                        {
                            check++;
                            fpstudcell.Sheets[0].Columns[check].Visible = true;
                            if (!colord.Contains("Paid"))
                            {
                                fpstudcell.Sheets[0].Columns[check].Visible = false;
                            }
                            if (colord.Count == 0)
                            {
                                fpstudcell.Sheets[0].Columns[check].Visible = true;
                            }
                        }

                    }
                    if (check != 0)
                    {
                        if (!colord.Contains("Paid"))
                        {
                            fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 2].Visible = false;
                        }
                        if (colord.Count == 0)
                        {
                            fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 2].Visible = true;
                        }
                    }
                }
                if (check == 0)
                {
                    fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = true;
                    if (!colord.Contains("Paid"))
                    {
                        fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = true;
                    }
                }
                else
                {
                    if (!colord.Contains("Paid"))
                    {
                        fpstudcell.Sheets[0].Columns[12].Visible = false;
                    }
                    if (colord.Count == 0)
                    {
                        fpstudcell.Sheets[0].Columns[12].Visible = true;
                    }
                }

                fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = true;
                if (!colord.Contains("Balance"))
                {
                    fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = false;
                }
                else
                {
                    fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = true;
                }
                if (colord.Count == 0)
                {
                    fpstudcell.Sheets[0].Columns[fpstudcell.Sheets[0].ColumnCount - 1].Visible = true;
                }

            }

        }
        catch
        {

        }
    }
    public void fpstudcell_OnCellClick(object sender, EventArgs e)
    {
    }
    public void fpstudcell_Selectedindexchanged(object sender, EventArgs e)
    {

    }
    public void btn_fpled_Click(object sender, EventArgs e)
    {
        string degreedetails = "";
        string pagename = "";
        degreedetails = "Header/Ledger Report";
        pagename = "StudentfeeAllotReport.aspx";
        Printcontrolhed.loadspreaddetails(fpledger, pagename, degreedetails);
        Printcontrolhed.Visible = true;
    }
    public void btn_fpbat_Click(object sender, EventArgs e)
    {
        string degreedetails = "";
        string pagename = "";
        degreedetails = "Header/Ledger/Batch Report";
        pagename = "StudentfeeAllotReport.aspx";
        Printcontrolhed.loadspreaddetails(fpbatch, pagename, degreedetails);
        Printcontrolhed.Visible = true;
    }
    public void btn_fpdeg_Click(object sender, EventArgs e)
    {
        string degreedetails = "";
        string pagename = "";
        degreedetails = "Header/Ledger/Batch/Degree Report";
        pagename = "StudentfeeAllotReport.aspx";
        Printcontrolhed.loadspreaddetails(fpdegree, pagename, degreedetails);
        Printcontrolhed.Visible = true;
    }
    public void btn_fpdep_Click(object sender, EventArgs e)
    {
        string degreedetails = "";
        string pagename = "";
        degreedetails = "Header/Ledger/Batch/Degree/Department Report";
        pagename = "StudentfeeAllotReport.aspx";
        Printcontrolhed.loadspreaddetails(fpdept, pagename, degreedetails);
        Printcontrolhed.Visible = true;
    }
    public void btn_fpsema_Click(object sender, EventArgs e)
    {
        string degreedetails = "";
        string pagename = "";
        degreedetails = "Header/Ledger/Batch/Degree/Department/Semaster Report";
        pagename = "StudentfeeAllotReport.aspx";
        Printcontrolhed.loadspreaddetails(fpsem, pagename, degreedetails);
        Printcontrolhed.Visible = true;
    }
    public void btn_fpstud_Click(object sender, EventArgs e)
    {
        string degreedetails = "";
        string pagename = "";
        degreedetails = "Header/Ledger/Batch/Degree/Department/Semaster/Student Report";
        pagename = "StudentfeeAllotReport.aspx";
        Printcontrolhed.loadspreaddetails(fpstudcell, pagename, degreedetails);
        Printcontrolhed.Visible = true;
    }
    protected void txt_fromdate_Textchanged(object sender, EventArgs e)
    {
        try
        {
            lbl_error1.Visible = false;
            string fromdate = "";
            string todate = "";
            fromdate = txt_fromdate.Text;
            todate = txt_todate.Text;
            if (fromdate != "" && fromdate != null && todate != "" && todate != null)
            {
                string[] spiltfrom = fromdate.Split('/');
                string[] spitto = todate.Split('/');
                DateTime from = Convert.ToDateTime(spiltfrom[1] + '/' + spiltfrom[0] + '/' + spiltfrom[2]);
                DateTime to = Convert.ToDateTime(spitto[1] + '/' + spitto[0] + '/' + spitto[2]);
                if (from > to)
                {
                    lbl_error1.Visible = true;
                    lbl_error1.Text = "Please Enter To Date Greater Than From Date";
                    FpSpread1.Visible = false;
                    rptprint.Visible = false;
                }
            }
        }
        catch (Exception ex)
        {
            //lbl_error1.Visible = true;
            //lbl_error1.Text = ex.ToString();
        }
    }
    protected void txt_todate_Textchanged(object sender, EventArgs e)
    {
        try
        {
            lbl_error1.Visible = false;
            string fromdate = "";
            string todate = "";
            fromdate = txt_fromdate.Text;
            todate = txt_todate.Text;
            if (fromdate != "" && fromdate != null && todate != "" && todate != null)
            {
                string[] spiltfrom = fromdate.Split('/');
                string[] spitto = todate.Split('/');
                DateTime from = Convert.ToDateTime(spiltfrom[1] + '/' + spiltfrom[0] + '/' + spiltfrom[2]);
                DateTime to = Convert.ToDateTime(spitto[1] + '/' + spitto[0] + '/' + spitto[2]);

                string todate1 = DateTime.Now.ToString("dd/MM/yyyy");
                string[] todate2 = todate1.Split('/');
                DateTime todate3 = Convert.ToDateTime(todate2[1] + '/' + todate2[0] + '/' + todate2[2]);


                if (from > to)// && to <= todate3
                {
                    lbl_error1.Visible = true;
                    lbl_error1.Text = "Please Enter To Date Grater Than From Date";
                    FpSpread1.Visible = false;
                    //dat.Visible = false;                    
                    //dat.Visible = false;
                    rptprint.Visible = false;
                }

                if (to > todate3)
                {
                    lbl_error1.Visible = true;
                    ////lbl_errorsearch1.Visible = false;
                    lbl_error1.Text = "Don't Enter Future Date";
                    FpSpread1.Visible = false;
                    rptprint.Visible = false;
                }

            }
        }
        catch (Exception ex)
        {
            //lbl_error.Visible = true;
            //lbl_error.Text = ex.ToString();
        }
    }
    protected void chk_total_OnCheckedChanged(object sender, EventArgs e)
    {
    }
    protected void chkpaid_OnCheckedChanged(object sender, EventArgs e)
    {
        if (chkpaid.Checked == true)
        {
            rb_paid.Enabled = true;
            tobepaid.Enabled = true;
            //ddl stud paid chart
            tdddlbatch.Visible = true;
            tdddldegree.Visible = true;
            tdddldept.Visible = true;
            ddlBindBatch();
            ddlBindDegree();
            ddlBindDept();
            //
            tdcblbatch.Visible = false;
            tdcbldegree.Visible = false;
            tdcbldept.Visible = false;
            chkdailydetail.Enabled = false;
        }
        else
        {
            rb_paid.Enabled = false;
            tobepaid.Enabled = false;

            //ddl stud paid chart
            tdddlbatch.Visible = false;
            tdddldegree.Visible = false;
            tdddldept.Visible = false;
            //
            tdcblbatch.Visible = true;
            tdcbldegree.Visible = true;
            tdcbldept.Visible = true;
            chkdailydetail.Enabled = true;
        }
    }
    protected void rb_paid_OnCheckedChanged(object sender, EventArgs e)
    {
    }
    protected void tobepaid_OnCheckedChanged(object sender, EventArgs e)
    {
    }
    protected void chk_datewise_OnCheckedChanged(object sender, EventArgs e)
    {
        if (chk_datewise.Checked == true)
        {
            txt_fromdate.Enabled = true;
            txt_todate.Enabled = true;
        }
        else
        {
            txt_fromdate.Enabled = false;
            txt_todate.Enabled = false;
        }
    }
    public void loadsetting()
    {
        try
        {
            ListItem list1 = new ListItem("Roll No", "0");
            ListItem list2 = new ListItem("Reg No", "1");
            ListItem list3 = new ListItem("Admission No", "2");
            ListItem list4 = new ListItem("App No", "3");

            rbl_rollno.Items.Clear();
            string insqry1 = "select LinkValue from New_InsSettings where LinkName='ChallanReceiptRollNo' and user_code ='" + usercode + "' and college_code ='" + collegecode1 + "'";

            int save1 = Convert.ToInt32(d2.GetFunction(insqry1));

            if (save1 == 1)
            {
                rbl_rollno.Items.Add(list1);
            }


            insqry1 = "select LinkValue from New_InsSettings where LinkName='ChallanReceiptRegNo' and user_code ='" + usercode + "' and college_code ='" + collegecode1 + "'";
            save1 = Convert.ToInt32(d2.GetFunction(insqry1));
            if (save1 == 1)
            {
                rbl_rollno.Items.Add(list2);
            }

            insqry1 = "select LinkValue from New_InsSettings where LinkName='ChallanReceiptRollAdmit' and user_code ='" + usercode + "' and college_code ='" + collegecode1 + "'";
            save1 = Convert.ToInt32(d2.GetFunction(insqry1));
            if (save1 == 1)
            {
                rbl_rollno.Items.Add(list3);
            }

            insqry1 = "select LinkValue from New_InsSettings where LinkName='ChallanReceiptAppFormNo' and user_code ='" + usercode + "' and college_code ='" + collegecode1 + "' ";
            save1 = Convert.ToInt32(d2.GetFunction(insqry1));

            if (save1 == 1)
            {
                rbl_rollno.Items.Add(list4);
            }
            if (rbl_rollno.Items.Count == 0)
            {
                rbl_rollno.Items.Add(list1);
            }
            switch (Convert.ToUInt32(rbl_rollno.SelectedItem.Value))
            {
                case 0:
                    txt_roll.Attributes.Add("placeholder", "Roll No");
                    chosedmode = 0;
                    break;
                case 1:
                    txt_roll.Attributes.Add("placeholder", "Reg No");
                    chosedmode = 1;
                    break;
                case 2:
                    txt_roll.Attributes.Add("placeholder", "Admin No");
                    chosedmode = 2;
                    break;
                case 3:
                    txt_roll.Attributes.Add("placeholder", "App No");
                    chosedmode = 3;
                    break;
            }



        }
        catch { }
    }
    protected void rbl_rollno_OnSelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            txt_roll.Text = "";
            switch (Convert.ToUInt32(rbl_rollno.SelectedItem.Value))
            {
                case 0:
                    txt_roll.Attributes.Add("Placeholder", "Roll No");
                    chosedmode = 0;
                    break;
                case 1:
                    txt_roll.Attributes.Add("Placeholder", "Reg No");
                    chosedmode = 1;
                    break;
                case 2:
                    txt_roll.Attributes.Add("Placeholder", "Admin No");
                    chosedmode = 2;
                    break;
                case 3:
                    txt_roll.Attributes.Add("Placeholder", "App No");
                    chosedmode = 2;
                    break;
            }
        }
        catch { }
    }

    #region Common checkbox and checkboxlist Event

    private string getCblSelectedValue(CheckBoxList cblSelected)
    {
        System.Text.StringBuilder selectedvalue = new System.Text.StringBuilder();
        try
        {
            for (int sel = 0; sel < cblSelected.Items.Count; sel++)
            {
                if (cblSelected.Items[sel].Selected == true)
                {
                    if (selectedvalue.Length == 0)
                    {
                        selectedvalue.Append(Convert.ToString(cblSelected.Items[sel].Value));
                    }
                    else
                    {
                        selectedvalue.Append("','" + Convert.ToString(cblSelected.Items[sel].Value));
                    }
                }
            }
        }
        catch { cblSelected.Items.Clear(); }
        return selectedvalue.ToString();
    }
    private string getCblSelectedText(CheckBoxList cblSelected)
    {
        System.Text.StringBuilder selectedText = new System.Text.StringBuilder();
        try
        {
            for (int sel = 0; sel < cblSelected.Items.Count; sel++)
            {
                if (cblSelected.Items[sel].Selected == true)
                {
                    if (selectedText.Length == 0)
                    {
                        selectedText.Append(Convert.ToString(cblSelected.Items[sel].Text));
                    }
                    else
                    {
                        selectedText.Append("','" + Convert.ToString(cblSelected.Items[sel].Text));
                    }
                }
            }
        }
        catch { cblSelected.Items.Clear(); }
        return selectedText.ToString();
    }
    private void CallCheckboxChange(CheckBox cb, CheckBoxList cbl, TextBox txt, string dispst, string deft)
    {
        try
        {
            int sel = 0;
            string name = "";
            txt.Text = deft;
            if (cb.Checked == true)
            {
                for (sel = 0; sel < cbl.Items.Count; sel++)
                {
                    cbl.Items[sel].Selected = true;
                    name = Convert.ToString(cbl.Items[sel].Text);
                }
                if (cbl.Items.Count == 1)
                {
                    txt.Text = "" + name + "";
                }
                else
                {
                    txt.Text = dispst + "(" + cbl.Items.Count + ")";
                }
            }
            else
            {
                for (sel = 0; sel < cbl.Items.Count; sel++)
                {
                    cbl.Items[sel].Selected = false;
                }
                txt.Text = deft;
            }
        }
        catch { }
    }
    private void CallCheckboxListChange(CheckBox cb, CheckBoxList cbl, TextBox txt, string dipst, string deft)
    {
        try
        {
            int sel = 0;
            int count = 0;
            string name = "";
            cb.Checked = false;
            for (sel = 0; sel < cbl.Items.Count; sel++)
            {
                if (cbl.Items[sel].Selected == true)
                {
                    count++;
                    name = Convert.ToString(cbl.Items[sel].Text);
                }
            }
            if (count > 0)
            {
                if (count == 1)
                {
                    txt.Text = "" + name + "";
                }
                else
                {
                    txt.Text = dipst + "(" + count + ")";
                }
                if (cbl.Items.Count == count)
                {
                    cb.Checked = true;
                }
            }
        }
        catch { }
    }

    #endregion

    private void loadChart()
    {
        try
        {
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                //  for(int row=0;row<)
            }
        }
        catch { }
    }

    private string ColorderValues(string number)
    {
        string name = Convert.ToString(number);
        try
        {
            switch (name)
            {
                case "1":
                    name = "Allot";
                    break;
                case "2":
                    name = "Concession";
                    break;
                case "3":
                    name = "Government";
                    break;
                case "4":
                    name = "Total";
                    break;
                case "5":
                    name = "Paid";
                    break;
                case "6":
                    name = "Balance";
                    break;
                case "7":
                    name = "Refund Amount";
                    break;
                case "8":
                    name = "Excess Amount";
                    break;
            }
        }
        catch { }
        return name;
    }

    protected void chkdailydetail_chkdailydetail(object sender, EventArgs e)
    {
        try
        {
            if (chkdailydetail.Checked == true)
            {
                chkpaid.Enabled = false;
                rb_paid.Enabled = false;
                tobepaid.Enabled = false;
                //ddl stud paid chart
                tdddlbatch.Visible = false;
                tdddldegree.Visible = false;
                tdddldept.Visible = false;
                //
                tdcblbatch.Visible = true;
                tdcbldegree.Visible = true;
                tdcbldept.Visible = true;
                chkpaid.Checked = false;
            }
            else
            {
                chkpaid.Enabled = true;
                rb_paid.Enabled = true;
                tobepaid.Enabled = true;
            }
        }
        catch { }
    }

    #region stud paid and yettobepaid ddl filters

    protected void ddlBindBatch()
    {
        try
        {
            ddlbatch.Items.Clear();
            ds = d2.BindBatch();
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                ddlbatch.DataSource = ds;
                ddlbatch.DataTextField = "batch_year";
                ddlbatch.DataValueField = "batch_year";
                ddlbatch.DataBind();
                //ddlbatch.Items.Insert(0, "--Select--");

            }
        }
        catch { }
    }

    protected void ddlBindDegree()
    {
        try
        {
            string stream = "";
            if (ddlstream.Items.Count > 0)
            {
                if (ddlstream.SelectedItem.Text != "")
                {
                    stream = ddlstream.SelectedItem.Text.ToString();
                }
            }
            string clgvalue = ddl_collegename.SelectedItem.Value.ToString();
            string selqry = "select distinct  c.Course_Name,c.Course_Id  from Degree d,Department dt,Course c where d.Dept_Code =dt.Dept_Code and d.Course_Id =c.Course_Id  and d.college_code='" + clgvalue + "'";
            if (stream != "")
            {
                selqry = selqry + " and type  in('" + stream + "')";
            }
            ds.Clear();
            ds = d2.select_method_wo_parameter(selqry, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                ddldegree.DataSource = ds;
                ddldegree.DataTextField = "course_name";
                ddldegree.DataValueField = "course_id";
                ddldegree.DataBind();
                // ddldegree.Items.Insert(0, "--Select--");

            }
        }
        catch { }
    }

    protected void ddlBindDept()
    {
        try
        {
            batch2 = "";
            if (ddlbatch.Items.Count > 0)
            {
                batch2 = ddlbatch.SelectedItem.Value.ToString();
            }

            degree = "";
            if (ddlbatch.Items.Count > 0)
            {
                degree = ddldegree.SelectedItem.Value.ToString();
            }
            string collegecode = ddl_collegename.SelectedItem.Value.ToString();
            if (batch2 != "" && degree != "")
            {
                ds.Clear();
                ds = d2.BindBranchMultiple(singleuser, group_user, degree, collegecode, usercode);
                if (ds.Tables[0].Rows.Count > 0)
                {
                    ddldept.DataSource = ds;
                    ddldept.DataTextField = "dept_name";
                    ddldept.DataValueField = "degree_code";
                    ddldept.DataBind();
                    //  ddldept.Items.Insert(0, "--Select--");
                }
            }
        }
        catch { }
    }

    protected void ddlbatch_OnSelectedIndexChanged(object sender, EventArgs e)
    {
        ddlBindDegree();
        ddlBindDept();
    }
    protected void ddldegree_OnSelectedIndexChanged(object sender, EventArgs e)
    {
        ddlBindDept();
    }
    protected void ddldept_OnSelectedIndexChanged(object sender, EventArgs e)
    {
        bindsec();
        bindsem();
    }

    #endregion

    public string returnYearforSem(string cursem)
    {
        switch (cursem)
        {
            case "1":
            case "2":
                cursem = "1";
                break;
            case "3":
            case "4":
                cursem = "2";
                break;
            case "5":
            case "6":
                cursem = "3";
                break;
            case "7":
            case "8":
                cursem = "4";
                break;
            case "9":
            case "10":
                cursem = "5";
                break;
        }
        return cursem;
    }

    protected void chkinclude_OnCheckedChanged(object sender, EventArgs e)
    {
        if (chkinclude.Checked == true)
        {
            txtinclude.Enabled = true;
            LoadIncludeSetting();
        }
        else
        {
            txtinclude.Enabled = false;
            cblinclude.Items.Clear();
        }
    }

    private void setLabelText()
    {
        string grouporusercode = string.Empty;
        if (Session["group_code"] != null && (Convert.ToString(Session["group_code"]).Trim() != "") && (Convert.ToString(Session["group_code"]).Trim() != "0") && (Convert.ToString(Session["group_code"]).Trim() != "-1"))
        {
            grouporusercode = " group_code=" + Convert.ToString(Session["group_code"]).Trim() + "";
        }
        else if (Session["usercode"] != null)
        {
            grouporusercode = " usercode=" + Convert.ToString(Session["usercode"]).Trim() + "";
        }
        List<Label> lbl = new List<Label>();
        List<byte> fields = new List<byte>();

        lbl.Add(lbl_collegename);
        lbl.Add(lbl_str1);
        lbl.Add(lbldeg);
        lbl.Add(lbldept);
        lbl.Add(lblsem);

        fields.Add(0);
        fields.Add(1);
        fields.Add(2);
        fields.Add(3);
        fields.Add(4);
        new HeaderLabelText().setLabels(grouporusercode, ref lbl, fields);

    }

    // last modified 04-10-2016 sudhagar

}