using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data.SqlClient;
using System.Data;
using System.Configuration;
using System.Drawing;
using System.Data;
using FarPoint.Web.Spread;

//----Modified By Jeyaprakash Query Changes on load_btnClick() InOnly,OutOnly and InOut Region on Jan 4th,2017
public partial class BioMatric_new : System.Web.UI.Page
{

    SqlConnection con = new SqlConnection(ConfigurationManager.AppSettings["DSN"].ToString());
    SqlConnection con1 = new SqlConnection(ConfigurationManager.AppSettings["DSN"].ToString());
    SqlConnection mycon = new SqlConnection(ConfigurationManager.AppSettings["DSN"].ToString());
    SqlConnection mycon1 = new SqlConnection(ConfigurationManager.AppSettings["DSN"].ToString());
    SqlDataAdapter da = new SqlDataAdapter();

    [Serializable()]
    public class MyImg : ImageCellType
    {

        //public override Control paintcell(string id, System.Web.UI.WebControls.TableCell parent, FarPoint.Web.Spread.Appearance style, FarPoint.Web.Spread.Inset margin, object value, Boolean upperLevel)
        public override Control PaintCell(String id, TableCell parent, FarPoint.Web.Spread.Appearance style, FarPoint.Web.Spread.Inset margin, object val, bool ul)
        {
            System.Web.UI.WebControls.Image img = new System.Web.UI.WebControls.Image();
            img.ImageUrl = this.ImageUrl; //base.ImageUrl;  
            img.Width = Unit.Percentage(40);
            return img;


        }
    }

    DataSet ds = new DataSet();
    DataSet dsbind = new DataSet();
    DataSet dset = new DataSet();

    DataSet dbio = new DataSet();
    Hashtable hastab = new Hashtable();

    DataSet d1 = new DataSet();
    DAccess2 dacces2 = new DAccess2();
    DAccess2 d2 = new DAccess2();

    static ArrayList ItemList = new ArrayList();
    static ArrayList Itemindex = new ArrayList();

    string lbl_leave_msg_1 = string.Empty;
    string College_code = string.Empty;

    string Str;
    string Str_1;
    string sql;
    string strdate;
    string strTime;

    double IntMTotal = 0;
    double IntMTemp = 0;
    static int batchcnt = 0;
    double c = 0;
    int countpereng = 0;
    double totpresent = 0;
    int h = 0;
    string date1;
    bool gracetimeflag = false;
    bool ontimeflag = false;
    bool Generalflag = true;
    string datefrom;
    string dateto;

    string date2;


    string strdept = "";
    string strcategory = "";
    int checkseat = 0;
    int checkblood = 0;

    int j = 0;
    int countood = 0;

    static int bloodcnt = 0;
    static int seatcnt = 0;

    int countcolumn;
    double d = 0;
    int countintime = 0;
    int countgracetime = 0;
    int countlatetime = 0;
    string sql1;
    string sql2;

    int countpermission = 0;
    int countpermission2 = 0;
    int countevetotalabsent = 0;
    int countmortotalabsent = 0;
    int countpresent = 0;
    int counttotalmorpresent = 0;
    int counttotalevepresent = 0;
    double counttotalpresent = 0;
    double counttotalabsent = 0;
    double f = 0;
    double g = 0;
    int eveningpermission = 0;
    static int counteveningpresent = 0;
    double totalperesent = 0;
    double totalabsent = 0;

    double day3 = 0;
    double percentage = 0;
    static int countmorningabsent = 0;
    static int counteveningabsent = 0;
    static int countmorninglate = 0;
    static int counteveninglate = 0;
    static int countmorningpermission = 0;
    static int counteveningpermission = 0;

    int counteveper = 0;
    string order = "";

    int countmorlate = 0;
    double totallate = 0;
    double totalpermission = 0;
    int i = 0;
    string[] bloodvalue = new string[55];
    string[] bloodcode = new string[55];

    string[] seatvalue = new string[55];
    string[] seatcode = new string[55];
    int[] seatindex = new int[44];
    int[] bloodindex = new int[44];

    double totabsent = 0;


    //Added By Srinath 1/4/2013
    string collegecode = "";
    string usercode = "";
    string singleuser = "";
    string group_user = "";

    protected void Page_Load(object sender, EventArgs e)
    {
        if (Session["collegecode"] == null)
        {
            Response.Redirect("~/Default.aspx");
        }
        College_code = Session["Collegecode"].ToString();
        lblnorec.Visible = false;
        if (IsPostBack)
        {
        }
        if (!IsPostBack)
        {
            //=======Added by Manikandan on 27/10/2013=================            
            SqlCommand cmd_college = new SqlCommand("select cp.college_code,cf.collname from collegeprivilages cp,collinfo cf where user_code=" + Session["usercode"] + " and cp.college_code=cf.college_code", con);// modified by Sangeetha on 5/05/2014
            SqlDataAdapter da_college = new SqlDataAdapter(cmd_college);
            DataTable dt_college = new DataTable();
            da_college.Fill(dt_college);

            if (dt_college.Rows.Count > 0)
            {
                ddlcollege.DataSource = dt_college;
                ddlcollege.DataTextField = "collname";
                ddlcollege.DataValueField = "College_code";
                ddlcollege.DataBind();
            }
            //===========================End===========================

            gracetimeflag = false;
            ontimeflag = false;
            Generalflag = true;
            bind_designation();
            string today = System.DateTime.Now.ToString();
            string today1;
            if (Session["datefrom"] != "" && Session["dateto"] != "" && Session["datefrom"] != null)
            {
                Txtentryfrom.Text = Session["datefrom"].ToString();
                Txtentryto.Text = Session["dateto"].ToString();
            }
            else
            {
                string[] split13 = today.Split(new char[] { ' ' });
                string[] split14 = split13[0].Split(new Char[] { '/' });
                today1 = split14[1].ToString() + "/" + split14[0].ToString() + "/" + split14[2].ToString();
                Txtentryfrom.Text = today1;
                string today2 = System.DateTime.Now.ToString();
                string today3;
                string[] split15 = today.Split(new char[] { ' ' });
                string[] split16 = split13[0].Split(new Char[] { '/' });
                today3 = split16[1].ToString() + "/" + split16[0].ToString() + "/" + split16[2].ToString();
                Txtentryto.Text = today3;
            }
            fpbiomatric.Visible = false;
            btnprintmaster.Visible = false;
            rdomorning.Enabled = false;
            rdoevening.Enabled = false;

            Txtentryfrom.Attributes.Add("readonly", "readonly");
            Txtentryto.Attributes.Add("readonly", "readonly");

            bindleave();
            load_staffname();
            load_staffcode();
            load_dept();
            load_category();
            lbldate.Visible = false;
            // CheckBoxselect.Checked = true;

            cblsearch.Items[1].Selected = true;
            cblsearch.Items[2].Selected = true;

            cblsearch.Items[3].Selected = true;
            cblsearch.Items[4].Selected = true;

            //cblsearch.Items[7].Selected = true;
            cblsearch.Items[9].Selected = true;
            cblsearch.Items[10].Selected = true;
            cblsearch.Items[11].Selected = true;
            cblsearch.Items[13].Selected = true;
            cblsearch.Items[14].Selected = true;
            // load_btnclick();
        }
        fpbiomatric.Sheets[0].AllowTableCorner = false;
        fpbiomatric.Sheets[0].RowHeader.Visible = false;
    }

    public void bindleave()
    {
        //SqlDataAdapter dr = new SqlDataAdapter("select distinct shortname from leave_category where college_code = '" + Session["collegecode"].ToString() + "'", con);
        SqlDataAdapter dr = new SqlDataAdapter("select distinct shortname from leave_category where college_code = '" + ddlcollege.SelectedValue.ToString() + "'", con);
        DataTable dt = new DataTable();
        dr.Fill(dt);
        if (dt.Rows.Count > 0)
        {
            for (int i = 0; i < dt.Rows.Count; i++)
            {
                string per = dt.Rows[i]["shortname"].ToString();
                if (per != "PER")
                {
                    cbo_att.Items.Add(dt.Rows[i]["shortname"].ToString());
                }
                //cbo_att.Items[i + 4].Selected = true;
            }
            //cbo_att.DataBind();
        }
    }

    void load_staffname()
    {
        cbostaffname.Items.Clear();
        ds.Clear();
        // ListItem lsitem = new ListItem();
        con.Close();
        con.Open();
        //string sqlstaffname = "Select distinct staffmaster.Staff_code,staff_name from staffmaster,hrdept_master,stafftrans where staffmaster.college_code='" + Session["collegecode"] + "' ";
        string sqlstaffname = "Select distinct staffmaster.Staff_code,staff_name from staffmaster,hrdept_master,stafftrans where staffmaster.college_code='" + ddlcollege.SelectedValue.ToString() + "' ";
        sqlstaffname = sqlstaffname + " and stafftrans.staff_code=staffmaster.staff_code  and resign=0 and settled=0 and stafftrans.dept_code=hrdept_master.dept_code";

        strdept = "";
        if (tbseattype.Text != "---Select---")
        {
            int itemcount = 0;
            for (itemcount = 0; itemcount < cbldepttype.Items.Count; itemcount++)
            {
                if (cbldepttype.Items[itemcount].Selected == true)
                {
                    if (strdept == "")
                        strdept = "'" + cbldepttype.Items[itemcount].Value.ToString() + "'";
                    else
                        strdept = strdept + "," + "'" + cbldepttype.Items[itemcount].Value.ToString() + "'";
                }
            }
            if (strdept != "")
            {
                strdept = " in(" + strdept + ")";
            }
            sqlstaffname = sqlstaffname + " and hrdept_master.dept_code " + strdept + "";
        }
        if (tbblood.Text != "---Select---")
        {
            int itemcount1 = 0;
            for (itemcount1 = 0; itemcount1 < cblcategory.Items.Count; itemcount1++)
            {
                if (cblcategory.Items[itemcount1].Selected == true)
                {
                    if (strcategory == "")
                        strcategory = "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                    else
                        strcategory = strcategory + "," + "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                }
            }
            if (strcategory != "")
            {
                strcategory = " in (" + strcategory + ")";
            }
            sqlstaffname = sqlstaffname + "  and stafftrans.category_code" + strcategory + "";
        }
        SqlCommand cmdstaff = new SqlCommand(sqlstaffname, con);
        da.SelectCommand = cmdstaff;
        da.Fill(ds);
        cbostaffname.DataSource = ds.Tables[0];
        cbostaffname.DataTextField = "Staff_name";
        cbostaffname.DataValueField = "Staff_code";
        cbostaffname.DataBind();
        cbostaffname.Items.Insert(0, "All");
        con.Close();
    }

    void load_staffcode()
    {
        cbostaffcode.Items.Clear();
        ds.Clear();
        strcategory = "";
        con.Open();

        //modified by srinath 31/1/2013
        // SqlCommand cmdstaffcode = new SqlCommand("Select distinct Staff_code from staffmaster where college_code='"+Session["collegecode"]+"' ", con);
        //string sqlstaffname = "Select distinct staffmaster.Staff_code,staff_name from staffmaster,hrdept_master,stafftrans where staffmaster.college_code='" + Session["collegecode"] + "' ";
        string sqlstaffname = "Select distinct staffmaster.Staff_code,staff_name from staffmaster,hrdept_master,stafftrans where staffmaster.college_code='" + ddlcollege.SelectedValue.ToString() + "' ";
        sqlstaffname = sqlstaffname + " and stafftrans.staff_code=staffmaster.staff_code  and resign=0 and settled=0 and stafftrans.dept_code=hrdept_master.dept_code";

        strdept = "";
        if (tbseattype.Text != "---Select---")
        {
            int itemcount = 0;
            for (itemcount = 0; itemcount < cbldepttype.Items.Count; itemcount++)
            {
                if (cbldepttype.Items[itemcount].Selected == true)
                {
                    if (strdept == "")
                        strdept = "'" + cbldepttype.Items[itemcount].Value.ToString() + "'";
                    else
                        strdept = strdept + "," + "'" + cbldepttype.Items[itemcount].Value.ToString() + "'";
                }
            }
            if (strdept != "")
            {
                strdept = " in(" + strdept + ")";
            }
            sqlstaffname = sqlstaffname + " and hrdept_master.dept_code " + strdept + "";
        }
        if (tbblood.Text != "---Select---")
        {
            int itemcount1 = 0;
            for (itemcount1 = 0; itemcount1 < cblcategory.Items.Count; itemcount1++)
            {
                if (cblcategory.Items[itemcount1].Selected == true)
                {
                    if (strcategory == "")
                        strcategory = "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                    else
                        strcategory = strcategory + "," + "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                }
            }
            if (strcategory != "")
            {
                strcategory = " in (" + strcategory + ")";
            }
            sqlstaffname = sqlstaffname + "  and stafftrans.category_code" + strcategory + "";
        }
        SqlCommand cmdstaffcode = new SqlCommand(sqlstaffname, con);
        da.SelectCommand = cmdstaffcode;
        da.Fill(ds);
        cbostaffcode.DataSource = ds.Tables[0];
        cbostaffcode.DataTextField = "Staff_code";
        cbostaffcode.DataValueField = "Staff_code";
        cbostaffcode.DataBind();
        //lsitem.Text = "All";
        cbostaffcode.Items.Insert(0, "All");
        con.Close();
    }

    void load_dept()
    {
        cbldepttype.Visible = true;
        cbldepttype.Items.Clear();
        ds.Clear();
        // ListItem lsitem = new ListItem();
        //Modified BY Srinath 1/4/2013
        // con.Open();
        //SqlCommand cmd = new SqlCommand("select distinct dept_code,dept_name from hrdept_master ", con);
        //da.SelectCommand = cmd;
        // da.Fill(ds);
        string deptquery = "";
        string singleuser = Session["single_user"].ToString();
        if (singleuser == "True")
        {
            //deptquery = "SELECT DISTINCT hp.dept_code,dept_name from hr_privilege hp,hrdept_master hr  where user_code=" + Session["usercode"] + " and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master where college_code='" + Session["collegecode"] + "') ";
            deptquery = "SELECT DISTINCT hp.dept_code,dept_name from hr_privilege hp,hrdept_master hr  where user_code=" + Session["usercode"] + " and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master where college_code='" + ddlcollege.SelectedValue.ToString() + "') order by dept_name";
        }

        else
        {

            group_user = Session["group_code"].ToString();
            if (group_user.Contains(';'))
            {
                string[] group_semi = group_user.Split(';');
                group_user = group_semi[0].ToString();
            }
            //deptquery = "SELECT DISTINCT hp.dept_code,dept_name from hr_privilege hp,hrdept_master hr  where group_code='" + group_user + "' and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master where college_code='" + Session["collegecode"] + "') ";
            deptquery = "SELECT DISTINCT hp.dept_code,dept_name from hr_privilege hp,hrdept_master hr  where group_code='" + group_user + "' and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master where college_code='" + ddlcollege.SelectedValue.ToString() + "') order by dept_name";
        }
        if (deptquery != "")
        {

            ds = dacces2.select_method(deptquery, hastab, "Text");
            cbldepttype.DataSource = ds;
            cbldepttype.DataTextField = "dept_name";
            cbldepttype.DataValueField = "dept_code";
            cbldepttype.DataBind();
            // con.Close();
        }
    }

    void load_category()
    {
        cblcategory.Visible = true;
        cblcategory.Items.Clear();
        ds.Clear();
        // ListItem lsitem = new ListItem();
        con.Open();
        //SqlCommand cmd = new SqlCommand("select distinct category_code,category_name from staffcategorizer ", con);
        SqlCommand cmd = new SqlCommand("select distinct category_code,category_name from staffcategorizer where college_code='" + ddlcollege.SelectedValue.ToString() + "'", con);
        da.SelectCommand = cmd;
        da.Fill(ds);
        cblcategory.DataSource = ds.Tables[0];
        cblcategory.DataTextField = "category_name";
        cblcategory.DataValueField = "category_code";
        cblcategory.DataBind();
        for (int i = 0; i < cblcategory.Items.Count; i++)
        {
            cblcategory.Items[i].Selected = true;
        }
        con.Close();
    }

    protected override void Render(System.Web.UI.HtmlTextWriter writer)
    {
        Control cntUpdateBtn = fpbiomatric.FindControl("Update");
        Control cntCancelBtn = fpbiomatric.FindControl("Cancel");
        Control cntCopyBtn = fpbiomatric.FindControl("Copy");
        Control cntCutBtn = fpbiomatric.FindControl("Clear");
        Control cntPasteBtn = fpbiomatric.FindControl("Paste");
        Control cntPageNextBtn = fpbiomatric.FindControl("Next");
        Control cntPagePreviousBtn = fpbiomatric.FindControl("Prev");
        Control cntPagePrintBtn = fpbiomatric.FindControl("Print");
        if ((cntUpdateBtn != null))
        {
            TableCell tc = (TableCell)cntUpdateBtn.Parent;
            TableRow tr = (TableRow)tc.Parent;
            tr.Cells.Remove(tc);
            tc = (TableCell)cntCancelBtn.Parent;
            tr.Cells.Remove(tc);
            tc = (TableCell)cntCopyBtn.Parent;
            tr.Cells.Remove(tc);

            tc = (TableCell)cntCutBtn.Parent;
            tr.Cells.Remove(tc);

            tc = (TableCell)cntPasteBtn.Parent;
            tr.Cells.Remove(tc);

            //tc = (TableCell)cntPageNextBtn.Parent;
            //tr.Cells.Remove(tc);

            //tc = (TableCell)cntPagePreviousBtn.Parent;
            //tr.Cells.Remove(tc);

            //tc = (TableCell)cntPagePrintBtn.Parent;
            //tr.Cells.Remove(tc);
        }
        base.Render(writer);
    }

    protected void cbo_searchby_SelectedIndexChanged(object sender, EventArgs e)
    {
        load_searchby();

    }

    void load_searchby()
    {

    }

    //protected void cbo_att_SelectedIndexChanged(object sender, EventArgs e)
    //{
    //    rdoall.Checked = true;
    //    rdomorning.Checked = false;
    //    rdoevening.Checked = false;
    //    rdoboth.Checked = false;
    //    if (cbo_att.SelectedItem.Value.ToString() == "All")
    //    {

    //        rdoall.Enabled = false;
    //        rdoevening.Enabled = false;
    //        rdoboth.Enabled = false;
    //        rdomorning.Enabled = false;
    //    }
    //    else if (cbo_att.SelectedItem.Value.ToString() == "Present(P)")
    //    {
    //        rdoall.Enabled = true;
    //        rdoboth.Enabled = true;
    //        rdomorning.Enabled = true;
    //        rdoevening.Enabled = true;
    //    }
    //    else if (cbo_att.SelectedItem.Value.ToString() == "Absent(A)")
    //    {
    //        rdoall.Enabled = true;
    //        rdoboth.Enabled = true;
    //        rdomorning.Enabled = true;
    //        rdoevening.Enabled = true;
    //    }
    //    else if (cbo_att.SelectedItem.Value.ToString() == "Permission(PER)")
    //    {
    //        rdoall.Enabled = true;
    //        rdoboth.Enabled = true;
    //        rdomorning.Enabled = true;
    //        rdoevening.Enabled = true;
    //    }
    //    else if (cbo_att.SelectedItem.Value.ToString() == "Late(LA)")
    //    {
    //        rdoall.Enabled = true;
    //        rdoboth.Enabled = true;
    //        rdomorning.Enabled = true;
    //        rdoevening.Enabled = true;
    //    }
    //    else if (cbo_att.SelectedItem.Value.ToString() == "Official OD(OOD)")
    //    {
    //        rdoall.Enabled = true;
    //        rdoboth.Enabled = true;
    //        rdomorning.Enabled = true;
    //        rdoevening.Enabled = true;
    //    }
    //    else if (cbo_att.SelectedItem.Value.ToString() == "Maternity Leave Without(ML)")
    //    {
    //        rdoall.Visible = true;
    //        rdoboth.Visible = true;
    //        rdomorning.Visible = true;
    //        rdoevening.Visible = true;
    //    }
    //    else if (cbo_att.SelectedItem.Value.ToString() == "Leave On Loss Of Pay(LOP)")
    //    {
    //        rdoall.Visible = true;
    //        rdoboth.Visible = true;
    //        rdomorning.Visible = true;
    //        rdoevening.Visible = true;

    //    }
    //    else if (cbo_att.SelectedItem.Value.ToString() == "Winter Vacation Leave(WVL)")
    //    {
    //        rdoall.Visible = true;
    //        rdoboth.Visible = true;
    //        rdomorning.Visible = true;
    //        rdoevening.Visible = true;
    //    }
    //    else if (cbo_att.SelectedItem.Value.ToString() == "Leave On Loss Of Pay(LOP)")
    //    {
    //        rdoall.Visible = true;
    //        rdoboth.Visible = true;
    //        rdomorning.Visible = true;
    //        rdoevening.Visible = true;
    //    }
    //    else if (cbo_att.SelectedItem.Value.ToString() == "Weekly Off(WO)")
    //    {
    //        rdoall.Visible = true;
    //        rdoboth.Visible = true;
    //        rdomorning.Visible = true;
    //        rdoevening.Visible = true;
    //    }
    //    else if (cbo_att.SelectedItem.Value.ToString() == "Summer Vacation Leave(SVL)")
    //    {
    //        rdoall.Visible = true;
    //        rdoboth.Visible = true;
    //        rdomorning.Visible = true;
    //        rdoevening.Visible = true;
    //    }
    //    else if (cbo_att.SelectedItem.Value.ToString() == "Special Leave(SL)")
    //    {
    //        rdoall.Visible = true;
    //        rdoboth.Visible = true;
    //        rdomorning.Visible = true;
    //        rdoevening.Visible = true;
    //    }
    //    else if (cbo_att.SelectedItem.Value.ToString() == "On Duty(OD)")
    //    {
    //        rdoall.Visible = true;
    //        rdoboth.Visible = true;
    //        rdomorning.Visible = true;
    //        rdoevening.Visible = true;
    //    }
    //    else if (cbo_att.SelectedItem.Value.ToString() == "Maternity Leave With Pay(MLP)")
    //    {
    //        rdoall.Visible = true;
    //        rdoboth.Visible = true;
    //        rdomorning.Visible = true;
    //        rdoevening.Visible = true;
    //    }
    //    else if (cbo_att.SelectedItem.Value.ToString() == "Medical Leave(MDL)")
    //    {
    //        rdoall.Visible = true;
    //        rdoboth.Visible = true;
    //        rdomorning.Visible = true;
    //        rdoevening.Visible = true;
    //    }
    //    else if (cbo_att.SelectedItem.Value.ToString() == "Causal Leave(CL)")
    //    {
    //        rdoall.Visible = true;
    //        rdoboth.Visible = true;
    //        rdomorning.Visible = true;
    //        rdoevening.Visible = true;
    //    }
    //    else if (cbo_att.SelectedItem.Value.ToString() == "Late(LA)")
    //    {
    //        rdoall.Visible = true;
    //        rdoboth.Visible = true;
    //        rdomorning.Visible = true;
    //        rdoevening.Visible = true;
    //    }
    //    else if (cbo_att.SelectedItem.Value.ToString() == "Official On Duty(OOD)")
    //    {
    //        rdoall.Visible = true;
    //        rdoboth.Visible = true;
    //        rdomorning.Visible = true;
    //        rdoevening.Visible = true;
    //    }
    //}

    protected void Button1_Click(object sender, EventArgs e)
    {
        //fpbiomatric.CommandBar.Visible = false;
        // Image8.Visible = false;
        lblne.Visible = false;
        fpbiomatric.Sheets[0].PageSize = 11;
        fpbiomatric.Pager.Position = FarPoint.Web.Spread.PagerPosition.Bottom;
        fpbiomatric.Pager.Mode = FarPoint.Web.Spread.PagerMode.Both;
        fpbiomatric.Pager.Align = HorizontalAlign.Right;
        //fpbiomatric.Sheets[0].SheetCorner.Cells[0, 0].Text = "S.No";
        //fpbiomatric.Sheets[0].SheetCorner.Cells[0,0]
        fpbiomatric.Pager.Font.Bold = true;
        fpbiomatric.Pager.Font.Name = "Arial";
        fpbiomatric.Pager.ForeColor = Color.DarkGreen;
        fpbiomatric.Pager.BackColor = ColorTranslator.FromHtml("#0CA6CA");
        fpbiomatric.Pager.PageCount = 5;
        FarPoint.Web.Spread.StyleInfo darkstyle = new StyleInfo();
        darkstyle.HorizontalAlign = HorizontalAlign.Center;
        darkstyle.Font.Name = "Book Antiqua";
        darkstyle.Font.Bold = true;
        darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
        fpbiomatric.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
        fpbiomatric.Sheets[0].RowHeader.Visible = false;
        fpbiomatric.Sheets[0].SetColumnWidth(0, 50);
        fpbiomatric.Sheets[0].SetColumnWidth(1, 150);
        fpbiomatric.Sheets[0].SetColumnWidth(2, 100);
        fpbiomatric.Sheets[0].SetColumnWidth(3, 100);
        fpbiomatric.Sheets[0].SetColumnWidth(4, 100);
        fpbiomatric.Sheets[0].SetColumnWidth(5, 100);
        fpbiomatric.Sheets[0].SetColumnWidth(6, 100);

        cblsearch.Visible = true;
        //  CheckBoxselect.Visible = true;
        Panel1.Visible = true;
        Panel2.Visible = true;
        cblsearch.Visible = true;
        //  CheckBoxselect.Visible = true;
        //Imgselectall.Visible = true;
        //Image8.Visible = true;


        Buttontotal.Visible = false;
        DropDownListpage.Visible = false;
        TextBoxpage.Visible = false;
        lblrecord.Visible = false;
        lblrecord.Visible = false;
        lblpage.Visible = false;
        Imgeveper.Visible = true;
        //btpresent.Visible = false;
        // btnabsent.Visible = false;
        // lbltotalabsent.Visible = false;
        Lblgracetime.Visible = true;
        btnontime.Visible = true;
        //btngrace.Visible = true;
        lblontime.Visible = true;
        //btngrace.Visible = true;
        //lbltotalabsent.visi
        // lbltottalpresent.Visible = false; ;
        Imgmorper.Visible = true;
        Imglate.Visible = true;
        late.Visible = true;
        Imgood.Visible = true;
        //  btpresent.Visible = false; ;

        lbldate.Visible = true;
        lblevngpermission.Visible = true;
        lblood.Visible = true;
        lblpermission.Visible = true;
        btngracetime.Visible = true;


        btnmorabsent.Visible = true;
        btneveabsent.Visible = true;
        btnevepresent.Visible = true;
        btnmorabsent.Visible = true;
        lblmorpresent.Visible = true;
        lblevepresent.Visible = true;
        lblevepresent.Visible = true;
        lbleveabsent.Visible = true;
        lblmorabsent.Visible = true;
        btnmorpresent.Visible = true;
        btnmorpresent.Visible = true;
        load_btnclick();
        CalculateTotalPages();
        fpbiomatric.Sheets[0].RowHeader.Visible = false;
        fpbiomatric.Sheets[0].AllowTableCorner = false;
    }

    void load_btnclick()
    {
        try
        {
            int overallmorpresnet = 0;
            int overallevepresnet = 0;
            int overallmorabsent = 0;
            int overalleveabsent = 0;
            int overallmorlate = 0;
            int overallmorper = 0;
            int overalleveper = 0;
            int overallood = 0;
            int overallgracetime = 0;
            int overallontime = 0;
            int newserialno = 0;
            string desig = string.Empty;
            string desig_query = string.Empty;
            int sno = 0;
            for (int cnt_desig = 0; cnt_desig < chklst_desig.Items.Count; cnt_desig++)
            {
                if (chklst_desig.Items[cnt_desig].Selected == true)
                {
                    if (desig == "")
                    {
                        desig = "'" + chklst_desig.Items[cnt_desig].Value + "'";
                    }
                    else
                    {
                        desig = desig + ",'" + chklst_desig.Items[cnt_desig].Value + "'";
                    }
                }
            }
            if (desig != "")
            {
                desig_query = " and desig_master.desig_code in(" + desig + " ) ";
            }
            else
            {
                desig = "";
            }
            fpbiomatric.Visible = true;
            btnprintmaster.Visible = true;

            //Start 05july2013-----------------------------------------------------------------------------------------
            string lbl_leave_msg = string.Empty;
            string lbl_leave_msg_1 = string.Empty;
            Boolean flagall = false;
            string strtempdept = "";//Added By srinath 26/4/2014

            if (cbo_att.Items[0].Selected == true)
            {
                lbl_leave_msg = "Present Report";
                flagall = true;
            }
            else
            {
                flagall = false;
            }

            if (cbo_att.Items[1].Selected == true)
            {
                lbl_leave_msg = "Absent Report";
                flagall = true;
            }
            else
            {
                flagall = false;
            }
            if (cbo_att.Items[3].Selected == true)
            {
                lbl_leave_msg = "Permission Report";
                flagall = true;
            }
            else
            {
                flagall = false;
            }

            if (cbo_att.Items[2].Selected == true)
            {
                lbl_leave_msg = "Late Report";
                flagall = true;
            }
            else
            {
                flagall = false;
            }

            if (flagall == true)
            {
                lbl_leave_msg = "Daily Attendance Report";
            }
            if (rdomorning.Checked == true)
            {
                lbl_leave_msg_1 = "Morning " + lbl_leave_msg;
            }
            else if (rdoevening.Checked == true)
            {
                lbl_leave_msg_1 = "Evening " + lbl_leave_msg;
            }
            else if (rdoboth.Checked == true)
            {
                lbl_leave_msg_1 = "Morning & Evening " + lbl_leave_msg;
            }
            else if (rdoall.Checked == true)
            {
                lbl_leave_msg_1 = lbl_leave_msg;
            }
            if (flagall == true)
            {
                lbl_leave_msg_1 = "Daily Attendance Report";
            }
            string attmark_P = "";
            string attmark_A = "";
            string attmark_PER = "";
            string attmark_LA = "";
            string attmark_CL = "";
            string datemark_Time = "";
            string attmark_EL = "";
            string attmark_ML = "";
            string attmark_OD = "";
            string attmark_LOP = "";
            string attmark_MAT = "";
            string attmark_CH = "";
            string attmark_POD = "";
            string attmark_OOD = "";
            string attmark_VEL = "";
            string attmark_VL = "";
            string attmark_SOD = "";
            string attmark_R = "";

            #region CommentedLine
            //if (cbo_att.Items[0].Selected == true)
            //{
            //    if (rdomorning.Checked == true)
            //    {
            //        attmark_P = "  left(att,2)='P-'";
            //    }
            //    else if (rdoevening.Checked == true)
            //    {
            //        attmark_P = "  right(att,2)='-P'";
            //    }
            //    else if (rdoall.Checked == true)
            //    {
            //        attmark_P = "  att like '%P%'";
            //    }
            //    else if (rdoboth.Checked == true)
            //    {
            //        attmark_P = "  att='P-P'";
            //    }
            //}
            //if (cbo_att.Items[1].Selected == true)
            //{
            //    if (rdomorning.Checked == true)
            //    {
            //        attmark_A = "  left(att,2)='A-'";
            //    }
            //    else if (rdoevening.Checked == true)
            //    {
            //        attmark_A = "  right(att,2)='-A'";
            //    }
            //    else if (rdoall.Checked == true)
            //    {
            //        attmark_A = "  att like '%A%'";
            //    }
            //    else if (rdoboth.Checked == true)
            //    {
            //        attmark_A = "  att='A-A'";
            //    }
            //}

            //if (cbo_att.Items[2].Selected == true)
            //{
            //    if (rdomorning.Checked == true)
            //    {
            //        attmark_LA = "  left(att,3)='LA-'";
            //    }
            //    else if (rdoevening.Checked == true)
            //    {
            //        attmark_LA = "  right(att,3)='-LA'";
            //    }

            //    else if (rdoall.Checked == true)
            //    {
            //        attmark_LA = "  att like '%LA%'";
            //    }

            //    else if (rdoboth.Checked == true)
            //    {
            //        attmark_LA = "  att='LA-LA'";
            //    }

            //}

            //if (cbo_att.Items[3].Selected == true)
            //{
            //    if (rdomorning.Checked == true)
            //    {
            //        attmark_PER = "  left(att,4)='PER-'";
            //    }

            //    else if (rdoevening.Checked == true)
            //    {
            //        attmark_PER = "  right(att,4)='-PER'";
            //    }

            //    else if (rdoall.Checked == true)
            //    {
            //        attmark_PER = "  att like '%PER%'";
            //    }

            //    else if (rdoboth.Checked == true)
            //    {
            //        attmark_PER = "  att='PER-PER'";
            //    }

            //}
            ////SANKAR ADDED JULY'11........................
            ////Start........................

            //if (cbo_att.Items.Count != null)
            //{
            //    int itemcount = 0;
            //    for (itemcount = 0; itemcount < cbo_att.Items.Count; itemcount++)
            //    {
            //        if (cbo_att.Items[itemcount].Selected == true)
            //        {
            //            if (rdomorning.Checked == true)
            //            {
            //                if (attmark_CL == "")
            //                {
            //                    if (rdoboth1.Checked == true)
            //                    {
            //                        attmark_CL = "att like '" + cbo_att.Items[itemcount].Text.Trim().ToString() + "-" + "%'";
            //                    }
            //                    else
            //                    {
            //                        attmark_CL = "left(att,2) = '" + cbo_att.Items[itemcount].Text.Trim().ToString() + "-" + "'" + " or " + "left(att,3) = '" + cbo_att.Items[itemcount].Text.Trim().ToString() + "-" + "'" + " or " + "left(att,4) = '" + cbo_att.Items[itemcount].Text.Trim().ToString() + "-" + "'";
            //                    }
            //                }

            //                else
            //                {
            //                    if (rdoboth1.Checked == true)
            //                    {
            //                        attmark_CL = attmark_CL + " or " + "att like '" + cbo_att.Items[itemcount].Text.Trim().ToString() + "-" + "%'";
            //                    }
            //                    else
            //                    {
            //                        attmark_CL = attmark_CL + " or " + "left(att,2) = '" + cbo_att.Items[itemcount].Text.Trim().ToString() + "-" + "'" + " or " + "left(att,3) = '" + cbo_att.Items[itemcount].Text.Trim().ToString() + "-" + "'" + " or " + "left(att,4) = '" + cbo_att.Items[itemcount].Text.Trim().ToString() + "-" + "'"; ;
            //                    }
            //                }

            //            }
            //            else if (rdoevening.Checked == true)
            //            {
            //                if (attmark_CL == "")
            //                {
            //                    if (rdoboth1.Checked == true)
            //                    {
            //                        attmark_CL = " att like '" + "%-" + cbo_att.Items[itemcount].Text.Trim().ToString() + "%'";
            //                    }
            //                    else
            //                    {
            //                        attmark_CL = "  right(att,2)= '" + "%-" + cbo_att.Items[itemcount].Text.Trim().ToString() + "'" + " or " + "  right(att,3)= '" + "%-" + cbo_att.Items[itemcount].Text.Trim().ToString() + "'" + " or " + "  right(att,4)= '" + "%-" + cbo_att.Items[itemcount].Text.Trim().ToString() + "'";
            //                    }
            //                }
            //                else
            //                {
            //                    if (rdoboth1.Checked == true)
            //                    {
            //                        attmark_CL = attmark_CL + "or " + " att like '%" + "-" + cbo_att.Items[itemcount].Text.Trim().ToString() + "'";
            //                    }
            //                    else
            //                    {
            //                        attmark_CL = attmark_CL + "or " + "  right(att,2)= '" + "%-" + cbo_att.Items[itemcount].Text.Trim().ToString() + "'" + " or " + "  right(att,3)= '" + "%-" + cbo_att.Items[itemcount].Text.Trim().ToString() + "'" + " or " + "  right(att,4)= '" + "%-" + cbo_att.Items[itemcount].Text.Trim().ToString() + "'";
            //                    }
            //                }
            //            }
            //            else if (rdoall.Checked == true)
            //            {
            //                if (attmark_CL == "")
            //                {
            //                    //attmark_CL = "  att like '%CL%'";
            //                    attmark_CL = " att like '%" + cbo_att.Items[itemcount].Text.Trim().ToString() + "%'";
            //                }
            //                else
            //                {
            //                    attmark_CL = attmark_CL + "or " + " att like '%" + cbo_att.Items[itemcount].Text.Trim().ToString() + "%'";
            //                }
            //            }
            //            else if (rdoboth.Checked == true)
            //            {
            //                if (attmark_CL == "")
            //                {
            //                    attmark_CL = " att = '" + cbo_att.Items[itemcount].Text.Trim().ToString() + "-" + cbo_att.Items[itemcount].Text.Trim().ToString() + "'";
            //                }
            //                else
            //                {
            //                    attmark_CL = attmark_CL + "or " + " att = '" + cbo_att.Items[itemcount].Text.Trim().ToString() + "-" + cbo_att.Items[itemcount].Text.Trim().ToString() + "'";
            //                }
            //            }
            //        }
            //    }
            //}



            //if (cbo_att.Items[4].Selected == true)
            //{
            //    if (rdomorning.Checked == true)
            //    {
            //        //attmark_CL = "left(att,3)='CL-'";
            //        attmark_CL = "left(att,3) = '" + cbo_att.SelectedItem.Text + "'";
            //    }
            //    else if (rdoevening.Checked == true)
            //    {
            //        attmark_CL = "  right(att,3)='-CL'";
            //    }
            //    else if (rdoall.Checked == true)
            //    {
            //        attmark_CL = "  att like '%CL%'";
            //    }
            //    else if (rdoboth.Checked == true)
            //    {
            //        //attmark_CL = "  att='CL-CL'";
            //        attmark_CL = " att = '" + cbo_att.SelectedItem.Text + "-" + cbo_att.SelectedItem.Text + "'";
            //    }
            //}

            //if (cbo_att.Items[5].Selected == true)
            //{
            //    if (rdomorning.Checked == true)
            //    {
            //        attmark_EL = "left(att,4)='EL-'";
            //    }
            //    else if (rdoevening.Checked == true)
            //    {
            //        attmark_EL = "  right(att,4)='-EL'";
            //    }
            //    else if (rdoall.Checked == true)
            //    {
            //        attmark_EL = "  att like '%EL%'";
            //    }
            //    else if (rdoboth.Checked == true)
            //    {
            //        attmark_EL = "  att='" + cbo_att.SelectedItem.Text + "-" + cbo_att.SelectedItem.Text + "'";
            //    }
            //}
            //if (cbo_att.Items[6].Selected == true)
            //{
            //    if (rdomorning.Checked == true)
            //    {
            //        attmark_ML = "left(att,4)='ML-'";
            //    }
            //    else if (rdoevening.Checked == true)
            //    {
            //        attmark_ML = "  right(att,4)='-ML'";
            //    }
            //    else if (rdoall.Checked == true)
            //    {
            //        attmark_ML = "  att like '%ML%'";
            //    }
            //    else if (rdoboth.Checked == true)
            //    {
            //        attmark_ML = "  att='" + cbo_att.SelectedItem.Text + "-" + cbo_att.SelectedItem.Text + "'";
            //    }
            //}
            //if (cbo_att.Items[7].Selected == true)
            //{
            //    if (rdomorning.Checked == true)
            //    {
            //        attmark_OD = "left(att,4)='OD-'";
            //    }
            //    else if (rdoevening.Checked == true)
            //    {
            //        attmark_OD = "  right(att,4)='-OD'";
            //    }
            //    else if (rdoall.Checked == true)
            //    {
            //        attmark_OD = "  att like '%OD%'";
            //    }
            //    else if (rdoboth.Checked == true)
            //    {
            //        attmark_OD = "  att='OD-OD'";
            //    }
            //}
            //if (cbo_att.Items[8].Selected == true)
            //{
            //    if (rdomorning.Checked == true)
            //    {
            //        attmark_LOP = "left(att,4)='LOP-'";
            //    }
            //    else if (rdoevening.Checked == true)
            //    {
            //        attmark_LOP = "  right(att,4)='-LOP'";
            //    }
            //    else if (rdoall.Checked == true)
            //    {
            //        attmark_LOP = "  att like '%LOP%'";
            //    }
            //    else if (rdoboth.Checked == true)
            //    {
            //        attmark_LOP = "  att='LOP-LOP'";
            //    }
            //}
            //if (cbo_att.Items[9].Selected == true)
            //{
            //    if (rdomorning.Checked == true)
            //    {
            //        attmark_MAT = "left(att,4)='MAT-'";
            //    }
            //    else if (rdoevening.Checked == true)
            //    {
            //        attmark_MAT = "  right(att,4)='-MAT'";
            //    }
            //    else if (rdoall.Checked == true)
            //    {
            //        attmark_MAT = "  att like '%MAT%'";
            //    }
            //    else if (rdoboth.Checked == true)
            //    {
            //        attmark_MAT = "  att='MAT-MAT'";
            //    }
            //}
            //if (cbo_att.Items[10].Selected == true)
            //{
            //    if (rdomorning.Checked == true)
            //    {
            //        attmark_CH = "left(att,4)='CH-'";
            //    }
            //    else if (rdoevening.Checked == true)
            //    {
            //        attmark_CH = "  right(att,4)='-CH'";
            //    }
            //    else if (rdoall.Checked == true)
            //    {
            //        attmark_CH = "  att like '%CH%'";
            //    }
            //    else if (rdoboth.Checked == true)
            //    {
            //        attmark_CH = "  att='CH-CH'";
            //    }
            //}
            //if (cbo_att.Items[11].Selected == true)
            //{
            //    if (rdomorning.Checked == true)
            //    {
            //        attmark_POD = "left(att,4)='POD-'";
            //    }
            //    else if (rdoevening.Checked == true)
            //    {
            //        attmark_POD = "  right(att,4)='-POD'";
            //    }
            //    else if (rdoall.Checked == true)
            //    {
            //        attmark_POD = "  att like '%POD%'";
            //    }
            //    else if (rdoboth.Checked == true)
            //    {
            //        attmark_POD = "  att='POD-POD'";
            //    }
            //}
            //if (cbo_att.Items[12].Selected == true)
            //{
            //    if (rdomorning.Checked == true)
            //    {
            //        attmark_OOD = "left(att,4)='OOD-'";
            //    }
            //    else if (rdoevening.Checked == true)
            //    {
            //        attmark_OOD = "  right(att,4)='-OOD'";
            //    }
            //    else if (rdoall.Checked == true)
            //    {
            //        attmark_OOD = "  att like '%OOD%'";
            //    }
            //    else if (rdoboth.Checked == true)
            //    {
            //        attmark_OOD = "  att='OOD-OOD'";
            //    }
            //}
            //if (cbo_att.Items[15].Selected == true)
            //{
            //    if (rdomorning.Checked == true)
            //    {
            //        attmark_VEL = "left(att,4)='VEL-'";
            //    }
            //    else if (rdoevening.Checked == true)
            //    {
            //        attmark_VEL = "  right(att,4)='-VEL'";
            //    }
            //    else if (rdoall.Checked == true)
            //    {
            //        attmark_VEL = "  att like '%VEL%'";
            //    }
            //    else if (rdoboth.Checked == true)
            //    {
            //        attmark_VEL = "  att='VEL-VEL'";
            //    }
            //}
            //if (cbo_att.Items[13].Selected == true)
            //{
            //    if (rdomorning.Checked == true)
            //    {
            //        attmark_VL = "left(att,4)='VL-'";
            //    }
            //    else if (rdoevening.Checked == true)
            //    {
            //        attmark_VL = "  right(att,4)='-VL'";
            //    }
            //    else if (rdoall.Checked == true)
            //    {
            //        attmark_VL = "  att like '%VL%'";
            //    }
            //    else if (rdoboth.Checked == true)
            //    {
            //        attmark_VL = "  att='VL-VL'";
            //    }
            //}
            //if (cbo_att.Items[14].Selected == true)
            //{
            //    if (rdomorning.Checked == true)
            //    {
            //        attmark_SOD = "left(att,4)='SOD-'";
            //    }
            //    else if (rdoevening.Checked == true)
            //    {
            //        attmark_SOD = "  right(att,4)='-SOD'";
            //    }
            //    else if (rdoall.Checked == true)
            //    {
            //        attmark_SOD = "  att like '%SOD%'";
            //    }
            //    else if (rdoboth.Checked == true)
            //    {
            //        attmark_SOD = "  att='SOD-SOD'";
            //    }
            //}
            //if (cbo_att.Items[16].Selected == true)
            //{
            //    if (rdomorning.Checked == true)
            //    {
            //        attmark_R = "left(att,4)='R-'";
            //    }
            //    else if (rdoevening.Checked == true)
            //    {
            //        attmark_R = "  right(att,4)='-R'";
            //    }
            //    else if (rdoall.Checked == true)
            //    {
            //        attmark_R = "  att like '%R%'";
            //    }
            //    else if (rdoboth.Checked == true)
            //    {
            //        attmark_R = "  att='R-R'";
            //    }
            //}


            //End-----------------------------------
            Str = "";
            //if (attmark_P.Trim().ToString() != "")
            //{
            //    Str = Str  + attmark_P;
            //}
            //if (attmark_A.Trim().ToString() != "")
            //{
            //    if (Str.Trim().ToString() != "")
            //    {
            //        Str = Str + " or " + attmark_A;
            //    }
            //    else
            //    {
            //        Str = Str + attmark_A;
            //    }
            //}
            //if (attmark_LA.Trim().ToString() != "")
            //{
            //    if (Str.Trim().ToString() != "")
            //    {
            //        Str = Str + " or " + attmark_LA;
            //    }
            //    else
            //    {
            //        Str = Str + attmark_LA;
            //    }
            //}
            //if (attmark_PER.Trim().ToString() != "")
            //{
            //    if (Str.Trim().ToString() != "")
            //    {
            //        Str = Str + " or " + attmark_PER;
            //    }
            //    else
            //    {
            //        Str = Str + attmark_PER;
            //    }
            //}
            //if (attmark_CL.Trim().ToString() != "")
            //{
            //    if (Str.Trim().ToString() != "")
            //    {
            //        Str = Str + "or" + attmark_CL;
            //    }
            //    else
            //    {
            //        Str = Str + attmark_CL;
            //    }
            //}
            //if (attmark_EL.Trim().ToString() != "")
            //{
            //    if (Str.Trim().ToString() != "")
            //    {
            //        Str = Str + "or" + attmark_EL;
            //    }
            //    else
            //    {
            //        Str = Str + attmark_EL;
            //    }
            //}
            //if (attmark_ML.Trim().ToString() != "")
            //{
            //    if (Str.Trim().ToString() != "")
            //    {
            //        Str = Str + "or" + attmark_ML;
            //    }
            //    else
            //    {
            //        Str = Str + attmark_ML;
            //    }
            //}
            //if (attmark_OD.Trim().ToString() != "")
            //{
            //    if (Str.Trim().ToString() != "")
            //    {
            //        Str = Str + "or" + attmark_OD;
            //    }
            //    else
            //    {
            //        Str = Str + attmark_OD;
            //    }
            //}
            //if (attmark_LOP.Trim().ToString() != "")
            //{
            //    if (Str.Trim().ToString() != "")
            //    {
            //        Str = Str + "or" + attmark_LOP;
            //    }
            //    else
            //    {
            //        Str = Str + attmark_LOP;
            //    }
            //}
            //if (attmark_MAT.Trim().ToString() != "")
            //{
            //    if (Str.Trim().ToString() != "")
            //    {
            //        Str = Str + "or" + attmark_MAT;
            //    }
            //    else
            //    {
            //        Str = Str + attmark_MAT;
            //    }
            //}
            //if (attmark_CH.Trim().ToString() != "")
            //{
            //    if (Str.Trim().ToString() != "")
            //    {
            //        Str = Str + "or" + attmark_CH;
            //    }
            //    else
            //    {
            //        Str = Str + attmark_CH;
            //    }
            //}
            //if (attmark_POD.Trim().ToString() != "")
            //{
            //    if (Str.Trim().ToString() != "")
            //    {
            //        Str = Str + "or" + attmark_POD;
            //    }
            //    else
            //    {
            //        Str = Str + attmark_POD;
            //    }
            //}
            //if (attmark_OOD.Trim().ToString() != "")
            //{
            //    if (Str.Trim().ToString() != "")
            //    {
            //        Str = Str + "or" + attmark_OOD;
            //    }
            //    else
            //    {
            //        Str = Str + attmark_OOD;
            //    }
            //}
            //if (attmark_VEL.Trim().ToString() != "")
            //{
            //    if (Str.Trim().ToString() != "")
            //    {
            //        Str = Str + "or" + attmark_VEL;
            //    }
            //    else
            //    {
            //        Str = Str + attmark_VEL;
            //    }
            //}
            //if (attmark_VL.Trim().ToString() != "")
            //{
            //    if (Str.Trim().ToString() != "")
            //    {
            //        Str = Str + "or" + attmark_VL;
            //    }
            //    else
            //    {
            //        Str = Str + attmark_VL;
            //    }
            //}
            //if (attmark_SOD.Trim().ToString() != "")
            //{
            //    if (Str.Trim().ToString() != "")
            //    {
            //        Str = Str + "or" + attmark_SOD;
            //    }
            //    else
            //    {
            //        Str = Str + attmark_SOD;
            //    }
            //}
            //if (attmark_R.Trim().ToString() != "")
            //{
            //    if (Str.Trim().ToString() != "")
            //    {
            //        Str = Str + "or" + attmark_R;
            //    }
            //    else
            //    {
            //        Str = Str + attmark_R;
            //    }
            //}

            #endregion

            if (cbo_att.Items.Count != null)
            {
                int itemcount = 0;
                for (itemcount = 0; itemcount < cbo_att.Items.Count; itemcount++)
                {
                    if (cbo_att.Items[itemcount].Selected == true)
                    {
                        if (rdoinonly.Checked == true && rdomorning.Checked == true)
                        {
                            if (attmark_CL.Trim() == "")
                                attmark_CL = " att like '" + cbo_att.Items[itemcount].Text.Trim().ToString() + "-%'";
                            else
                                attmark_CL = attmark_CL + " or att like '" + cbo_att.Items[itemcount].Text.Trim().ToString() + "-%'";
                        }
                        else if (rdooutonly.Checked == true && rdoevening.Checked == true)
                        {
                            if (attmark_CL.Trim() == "")
                                attmark_CL = " att like '%-" + cbo_att.Items[itemcount].Text.Trim().ToString() + "'";
                            else
                                attmark_CL = attmark_CL + " or att like '%-" + cbo_att.Items[itemcount].Text.Trim().ToString() + "'";
                        }
                        else if (rdoinout.Checked == true)
                        {
                            if (attmark_CL.Trim() == "")
                                attmark_CL = " (att like '" + cbo_att.Items[itemcount].Text.Trim().ToString() + "-" + cbo_att.Items[itemcount].Text.Trim().ToString() + "')";
                            else
                                attmark_CL = attmark_CL + " or (att like '" + cbo_att.Items[itemcount].Text.Trim().ToString() + "-" + cbo_att.Items[itemcount].Text.Trim().ToString() + "')";
                        }
                    }
                }
            }

            if (attmark_CL.TrimEnd().ToString() != "")
            {
                Str = " and (" + attmark_CL + ")";
            }
            //End 05july2013-----------------------------------------------------------------------------------------
            #region RBINOUT
            if (rdoinout.Checked == true) //inout
            {
                cblsearch.Visible = true;
                string[] search = new string[50];

                if (cblsearch.Items[0].Selected == true)
                {
                    search[0] = "staffmaster.staff_code";
                }
                if (cblsearch.Items[1].Selected == true)
                {
                    search[1] = "staffmaster.staff_name";
                }
                if (cblsearch.Items[2].Selected == true)
                {
                    search[2] = "hrdept_master.dept_name";
                }
                if (cblsearch.Items[3].Selected == true)
                {
                    search[3] = "dept_acronym";
                }
                if (cblsearch.Items[4].Selected == true)
                {
                    search[4] = "desig_master.desig_name";
                }
                if (cblsearch.Items[5].Selected == true)
                {
                    search[5] = " desig_master.desig_acronym";
                }
                if (cblsearch.Items[6].Selected == true)
                {
                    search[6] = "CONVERT(VARCHAR(10),staffmaster.join_date,103)";
                }
                if (cblsearch.Items[7].Selected == true)
                {
                    search[7] = "in_out_time.category_name";
                }
                if (cblsearch.Items[8].Selected == true)
                {
                    search[8] = "  CASE WHEN time_in = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_in ,100),7) END  as time_in";
                }
                int count = 0;

                FarPoint.Web.Spread.TextCellType textcell = new FarPoint.Web.Spread.TextCellType();
                fpbiomatric.Sheets[0].ColumnCount = 0;
                fpbiomatric.Sheets[0].ColumnCount = 16;
                fpbiomatric.Sheets[0].SheetCorner.RowCount = 2;
                fpbiomatric.Sheets[0].ColumnHeader.RowCount = 2;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Staff Code";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Staff Name";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Department";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Dept Acronym";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;


                fpbiomatric.ActiveSheetView.Columns[0].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[1].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[2].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[3].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[4].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[5].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[6].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[7].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[8].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[9].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[10].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[11].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[12].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[13].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[14].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[15].Font.Name = "Book Antiqua";

                fpbiomatric.ActiveSheetView.Columns[0].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[1].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[2].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[3].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[4].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[5].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[6].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[7].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[8].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[9].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[10].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[11].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[12].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[13].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[14].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[15].Font.Size = FontUnit.Medium;

                fpbiomatric.Sheets[0].FrozenColumnCount = 3;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Designation";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Desig Acronym";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 7].Text = "Date Of Joinng";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 7].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 8].Text = "Category";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 8].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 9].Text = "Finger ID";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 9].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 10].Text = "Working Days";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 10].HorizontalAlign = HorizontalAlign.Center;

                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 15].Text = "Att  %";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 15].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].SetColumnWidth(8, 70);
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 11].Text = "P";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 11].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].SetColumnWidth(11, 30);
                fpbiomatric.Sheets[0].SetColumnWidth(0, 50);
                fpbiomatric.Sheets[0].SetColumnWidth(1, 150);
                fpbiomatric.Sheets[0].SetColumnWidth(2, 100);
                fpbiomatric.Sheets[0].SetColumnWidth(3, 100);
                fpbiomatric.Sheets[0].SetColumnWidth(4, 100);
                fpbiomatric.Sheets[0].SetColumnWidth(5, 100);
                fpbiomatric.Sheets[0].SetColumnWidth(6, 100);

                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 12].Text = "A";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 12].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].SetColumnWidth(11, 30);
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 13].Text = "LA";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 13].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].SetColumnWidth(12, 30);
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 14].Text = "PER";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 14].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].SetColumnWidth(13, 30);

                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 5, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 7, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 7, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 8, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 9, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 10, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 11, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 12, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 13, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 14, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 15, 2, 1);
                fpbiomatric.Sheets[0].FrozenColumnCount = 8;
                Panel1.Visible = true;
                string tempstaffcode = "";
                fpbiomatric.Sheets[0].RowCount = 0;
                fpbiomatric.Sheets[0].ColumnCount = 16;
                date1 = Txtentryfrom.Text.ToString();
                string[] split = date1.Split(new Char[] { '/' });
                datefrom = split[1].ToString() + "/" + Convert.ToInt16(split[0].ToString()) + "/" + split[2].ToString();
                date2 = Txtentryto.Text.ToString();
                string[] split1 = date2.Split(new Char[] { '/' });
                dateto = split1[1].ToString() + "/" + split1[0].ToString() + "/" + split1[2].ToString();
                DateTime dt1 = Convert.ToDateTime(datefrom.ToString());
                DateTime dt2 = Convert.ToDateTime(dateto.ToString());
                TimeSpan t = dt2.Subtract(dt1);
                long days = t.Days;
                day3 = Convert.ToInt32(days);
                day3 = day3 + 1;

                if ((datefrom != null) && (dateto != null))
                {
                    strdate = " and bio_attendance.access_date between '" + datefrom + "' and '" + dateto + "'";
                    if (days >= 0)
                    {
                        string[] differdays = new string[days];
                        lbldate.Visible = false;
                        fpbiomatric.Sheets[0].ColumnCount = fpbiomatric.Sheets[0].ColumnCount + 6;
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].Text = Txtentryfrom.Text.ToString();
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, fpbiomatric.Sheets[0].ColumnCount - 6, 1, 6);

                        fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].Tag = datefrom.ToString();
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 1].Text = "Permission Type";
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 1, 33);
                        fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;

                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 3].Text = "Mor";
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 3].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 3, 33);
                        fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 3].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 2].Text = "Eve";
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 2, 33);

                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 6].Text = "In";
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 6, 33);
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 5].Text = "Out";
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 5].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 6, 33);

                        for (int date_loop = 1; date_loop <= days; date_loop++) //Next Next Date
                        {
                            differdays[date_loop - 1] = dt1.AddDays(date_loop).ToString();
                            string[] split11 = differdays[date_loop - 1].Split(new char[] { ' ' });
                            string[] split12 = split11[0].Split(new Char[] { '/' });
                            string datevar = "";
                            datevar = split12[1].ToString() + "/" + split12[0].ToString() + "/" + split12[2].ToString();
                            //modified by srinath 28/4/2014
                            DateTime dthead = Convert.ToDateTime(split12[0].ToString() + "/" + split12[1].ToString() + "/" + split12[2].ToString());
                            fpbiomatric.Sheets[0].ColumnCount = fpbiomatric.Sheets[0].ColumnCount + 6;
                            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, fpbiomatric.Sheets[0].ColumnCount - 6, 1, 6);
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].Text = dthead.ToString("dd/MM/yyyy");
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].Tag = split12[0].ToString() + "/" + split12[1].ToString() + "/" + split12[2].ToString();

                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 1].Text = "Permission Type";
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 1, 33);



                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 3].Text = "Mor";
                            fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 3].HorizontalAlign = HorizontalAlign.Center;

                            fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 3, 33);
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 2].Text = "Eve";
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 2, 33);

                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 6].Text = "In";
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 6, 33);
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 5].Text = "Out";
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 5].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 6, 33);
                        }
                    }
                    else
                    {
                        lbldate.Visible = true;
                        lbldate.Text = "Date Must Be Greater Than From Date";
                    }
                    fpbiomatric.Sheets[0].ColumnCount = fpbiomatric.Sheets[0].ColumnCount + 1;
                    int percount = fpbiomatric.Sheets[0].ColumnCount;
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, percount - 1].Text = "Total Permission Count";
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, percount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, percount - 1, 2, 1);
                    string sqlname;
                    FarPoint.Web.Spread.StyleInfo style = new FarPoint.Web.Spread.StyleInfo();
                    style.Font.Size = 10;
                    style.Font.Bold = true;
                    fpbiomatric.Sheets[0].SheetCornerStyle = new FarPoint.Web.Spread.StyleInfo(style);
                    fpbiomatric.Sheets[0].ColumnHeader.DefaultStyle = new FarPoint.Web.Spread.StyleInfo(style);
                    fpbiomatric.Sheets[0].AllowTableCorner = false;
                    //fpbiomatric.Sheets[0].SheetCorner.Cells[0, 0].Text = "  ";


                    //fpbiomatric.Sheets[0].SheetCorner.Cells[0, 0].Text = "S.No";
                    //Fpspread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 7, 1);
                    //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, fpbiomatric.Sheets[0].ColumnCount - 1, 6, 1);
                    //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 9, 1);
                    //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 7, 1);
                    // fpbiomatric.Sheets[0].ColumnHeader.Rows[6].BackColor = Color.FromArgb(214, 235, 255);
                    //fpbiomatric.Sheets[0].SheetCornerSpanModel.Add(0, 0, 6, 1);
                    //fpbiomatric.Sheets[0].SheetCorner.Cells[0, 0].Text = "S.No";
                    //fpbiomatric.Sheets[0].SheetCorner.Cells[0, 0].BackColor = Color.AliceBlue;
                    //fpbiomatric.Sheets[0].SheetCorner.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                    //fpbiomatric.Sheets[0].SheetCorner.Cells[0, 0].Border.BorderColorRight = Color.White;
                    //fpbiomatric.Sheets[0].SheetCornerSpanModel.Add(0, 0, 3, 1);

                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 8].Border.BorderColor = Color.White;

                    fpbiomatric.Sheets[0].ColumnHeader.Cells[1, 8].Border.BorderColor = Color.White;

                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 3].Border.BorderColor = Color.White;

                    string str = "select isnull(collname, ' ') as collname,isnull(address1, ' ') as address1,isnull(address2,' ') as address2,isnull(address3, ' ') as address3,isnull(pincode,' ') as pincode from collinfo where college_code='" + ddlcollege.SelectedValue.ToString() + "'";
                    con.Close();
                    con.Open();
                    SqlCommand comm = new SqlCommand(str, con);
                    SqlDataReader drr = comm.ExecuteReader();
                    drr.Read();
                    string coll_name = Convert.ToString(drr["collname"]);
                    string coll_address1 = Convert.ToString(drr["address1"]);
                    string coll_address2 = Convert.ToString(drr["address2"]);
                    string coll_address3 = Convert.ToString(drr["address3"]);
                    string pin_code = Convert.ToString(drr["pincode"]);
                    int count5 = 0;
                    int dacount = 2;
                    int coun6 = 0;
                    for (int l = 2; l <= cblsearch.Items.Count - 1; l++)
                    {
                        if (cblsearch.Items[l].Selected == true)
                        {
                            count5 = 3 + count5;
                            dacount = dacount + 2;
                            fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 1, 100);
                            fpbiomatric.Sheets[0].SetColumnWidth(0, 100);
                            fpbiomatric.Sheets[0].ColumnHeader.Rows[0].Font.Bold = true;
                            fpbiomatric.Sheets[0].ColumnHeader.Rows[0].Font.Size = FontUnit.Medium;
                            string categry4 = "";
                            for (int g = 0; g < cblcategory.Items.Count; g++)
                            {
                                if (cblcategory.Items[g].Selected == true)
                                {
                                    categry4 = categry4 + cblcategory.Items[g].Text + ",";
                                }
                            }
                            if (categry4 != "")
                            {
                                categry4 = categry4.Substring(0, categry4.Length - 1);
                            }

                            fpbiomatric.Sheets[0].ColumnHeader.Rows[0].BackColor = Color.FromArgb(214, 235, 255);
                            fpbiomatric.Sheets[0].ColumnHeader.Rows[1].BackColor = Color.FromArgb(214, 235, 255);
                            goto l10;
                        }
                        else
                        {
                            count5++;
                            if (count5 == 1)
                            {
                                dacount = dacount + 4;
                            }
                        }

                    }
                l10:
                    string catgorycode = "";
                    string deptcode = "";

                    //if (cbostaffname.SelectedItem.Text != "All")
                    //{
                    //    hastab.Clear();
                    //    hastab.Add("@fromdate", datefrom.ToString());
                    //    hastab.Add("@todate", dateto.ToString());
                    //    hastab.Add("@staffcode", cbostaffname.SelectedItem.Value.ToString());
                    //    dbio = dacces2.select_method("select_staff_code_in_bio", hastab, "sp");
                    //}
                    ////
                    string sqlstaffcode = "select distinct staffmaster.staff_code,len(staffmaster.staff_code),staffmaster.staff_name,hrdept_master.dept_name,stafftrans.category_code,desig_master.priority,hrdept_master.priority ,hrdept_master.dept_name,stafftrans.stftype ,desig_master.priority,staffmaster.join_date,hrdept_master.dept_code from staffmaster,stafftrans,hrdept_master,desig_master ";
                    sqlstaffcode = sqlstaffcode + " where (staffmaster.Fingerprint1 Is  Null or staffmaster.Fingerprint1 Is Not Null)";
                    sqlstaffcode = sqlstaffcode + " and staffmaster.staff_code=stafftrans.staff_code and staffmaster.settled <>1 and staffmaster.resign <>1 and  stafftrans.latestrec<>0 and ((staffmaster.settled =0 and staffmaster.resign=0) or (resign=1 and settled=1 and relieve_date >='' and relieve_date <=''))";
                    sqlstaffcode = sqlstaffcode + " and hrdept_master.dept_code=stafftrans.dept_code and stafftrans.desig_code=desig_master.desig_code and staffmaster.college_code = hrdept_master.college_code and desig_master.collegeCode =staffmaster.college_code and staffmaster.college_code ='" + ddlcollege.SelectedValue.ToString() + "'";
                    ///
                    sql = "SELECT distinct staffmaster.staff_code,len(staffmaster.staff_code) , desig_master.desig_acronym, hrdept_master.dept_acronym,CONVERT(VARCHAR(10),staffmaster.join_date,103) as join_date,in_out_time.category_name,staffmaster.staff_name ,desig_name ,hrdept_master.dept_acronym as 'Dept Acronym',hrdept_master.dept_name ,desig_acronym,access_date as access_date,CASE WHEN time_in = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_in ,100),7) END as time_in , CASE WHEN time_out = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_out ,100),7) END as time_out,convert(char(8),(cast(time_out as datetime) - cast(time_in as datetime)),108) as TotalHours, att, right(CONVERT(nvarchar(100),in_out_time.intime ,100),7) as ontime,right(CONVERT(nvarchar(100),gracetime ,100),7) as gracetime,  right(CONVERT(nvarchar(100),in_out_time.extend_gracetime ,100),7) as extendgracetime,hrdept_master.priority,desig_master.priority,desig_master.print_pri ,hrdept_master.dept_name,stafftrans.stftype ,desig_master.priority,isnull(per_type,'0') per_type,CAST(Fingerprint1 as nvarchar) as Fingerprint1  FROM staffmaster,stafftrans,hrdept_master, desig_master,bio_attendance,In_Out_Time,staff_attnd where  (staffmaster.Fingerprint1 Is  Null or staffmaster.Fingerprint1 Is Not Null) and hrdept_master.college_code=staffmaster.college_code and hrdept_master.dept_code=stafftrans.dept_code and staffmaster.staff_code=stafftrans.staff_code and staffmaster.settled <>1 and staffmaster.resign <>1 and  stafftrans.latestrec<>0 and   staffmaster.staff_code=bio_attendance.roll_no and is_staff=1 and hrdept_master.dept_code=stafftrans.dept_code and desig_master.desig_code=stafftrans.desig_code and staffmaster.settled = 0 And staffmaster.resign = 0  And (in_out_time.category_code=stafftrans.category_code or in_out_time.stftype=stafftrans.stftype) And staffmaster.staff_code = stafftrans.staff_code And stafftrans.latestrec = 1 and staffmaster.college_code=hrdept_master.college_code and staffmaster.college_code=desig_master.collegecode  and staffmaster.college_code=" + ddlcollege.SelectedValue.ToString() + "  " + strdate + " ";//modified by srinath 11/1/13
                    sql = sql + " and (in_out_time.category_code=stafftrans.category_code or in_out_time.stftype=stafftrans.stftype)";


                    //sql= "hrdept_master.college_code and staffmaster.college_code=desig_master.collegecode and att<>'' and staffmaster.college_code=" + Session["collegecode"] + "  " + strdate + " ";

                    if (tbseattype.Text != "---Select---")
                    {
                        int itemcount = 0;
                        for (itemcount = 0; itemcount < cbldepttype.Items.Count; itemcount++)
                        {
                            if (cbldepttype.Items[itemcount].Selected == true)
                            {
                                if (strdept == "")
                                {
                                    strdept = "'" + cbldepttype.Items[itemcount].Value.ToString() + "'";
                                    deptcode = cbldepttype.Items[itemcount].Value.ToString();
                                }
                                else
                                {
                                    deptcode = deptcode + "," + cbldepttype.Items[itemcount].Value.ToString();

                                    strdept = strdept + "," + cbldepttype.Items[itemcount].Value.ToString();
                                }
                            }
                        }
                        if (strdept != "")
                        {                        //deptcode = strdept;
                            strdept = " in(" + strdept + ")";
                        }
                        sql = sql + " and hrdept_master.dept_code " + strdept + "";

                        sqlstaffcode = sqlstaffcode + "  and hrdept_master.dept_code " + strdept + "";
                    }
                    if (tbblood.Text != "---Select---")
                    {
                        int itemcount1 = 0;

                        for (itemcount1 = 0; itemcount1 < cblcategory.Items.Count; itemcount1++)
                        {
                            if (cblcategory.Items[itemcount1].Selected == true)
                            {
                                if (strcategory == "")
                                    strcategory = "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                                else
                                    strcategory = strcategory + "," + "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                            }
                        }
                        if (strcategory != "")
                        {
                            catgorycode = strcategory;
                            strcategory = " in (" + strcategory + ")";
                        }
                        sql = sql + "  and stafftrans.category_code" + strcategory + "";
                        sqlstaffcode = sqlstaffcode + "  and stafftrans.category_code" + strcategory + "";
                    }

                    if (cbostaffname.SelectedItem.Value.ToString() != "All")
                    {
                        //sql = sql + " and staffmaster.staff_code like '%" + cbostaffname.Text + "%' ";
                        //Modiifed By Srinath 22/10/2013
                        sql = sql + " and staffmaster.staff_name ='" + cbostaffname.SelectedItem.ToString() + "' ";
                        sqlstaffcode = sqlstaffcode + " and staffmaster.staff_name ='" + cbostaffname.SelectedItem.ToString() + "' ";//Added by saranya on 7/9/2018
                    }

                    if (cbostaffcode.SelectedItem.Value.ToString() != "All")
                    {
                        // sql = sql + " and staffmaster.staff_code like '%" + cbostaffcode.Text + "%' ";
                        sql = sql + " and staffmaster.staff_code ='" + cbostaffcode.Text + "' ";
                        sqlstaffcode = sqlstaffcode + " and staffmaster.staff_code ='" + cbostaffcode.Text + "' ";//Added by saranya on 7/9/2018
                    }

                    if (Chktimein.Checked == true)
                    {
                        strTime = "";
                        strTime = " and  Right(CONVERT(nvarchar(100),time_in ,100),7)  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "'";

                    }

                    else if (Chktimeout.Checked == true)
                    {
                        strTime = "";
                        strTime = " AND Right(CONVERT(nvarchar(100),time_Out ,100),7) between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";

                        // sql = sql + " " + strTime + "";
                    }

                    if ((Chktimein.Checked == true) && (Chktimeout.Checked == true))
                    {
                        strTime = "";
                        strTime = " and  Right(CONVERT(nvarchar(100),time_in ,100),7)  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "' AND Right(CONVERT(nvarchar(100),time_Out ,100),7) between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";

                        //  sql = sql + " " + strTime + "";
                    }
                    if (strTime != null)
                    {
                        sql = sql + " " + strTime + "";
                    }
                    // Str = "";

                    sql = sql + " and bio_attendance.latestrec=1 and in_out_time.shift = stafftrans.shift " + desig_query + "";
                    //modified by srinath 5/04/2014
                    // sql = sql + Str + " and in_out_time.college_code = staffmaster.college_code " + " order by  hrdept_master.dept_name";//Modified By Srinath 04/4/2014
                    if (ddlorder.SelectedItem.Text.ToString() == "Priority")
                    {
                        // sql = sql + Str + " and in_out_time.college_code = staffmaster.college_code " + " order by desig_master.print_pri,desig_master.priority,hrdept_master.dept_name,stafftrans.stftype ";
                        sql = sql + Str + " and in_out_time.college_code = staffmaster.college_code " + " order by hrdept_master.priority,desig_master.priority,hrdept_master.dept_name,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code ";
                    }
                    else
                    {
                        sql = sql + Str + " and in_out_time.college_code = staffmaster.college_code " + " order by  hrdept_master.dept_name,len(staffmaster.staff_code),staffmaster.staff_code";
                    }

                    sql = sql.Replace('"', ' ');
                    sql.Remove(2);
                    sql.Remove(' ');

                    //modified by srinath 5/04/2014
                    //sqlstaffcode = sqlstaffcode + " order by hrdept_master.dept_name";

                    if (ddlorder.SelectedItem.Text.ToString() == "Priority")
                    {
                        sqlstaffcode = sqlstaffcode + " order by hrdept_master.priority,desig_master.priority,hrdept_master.dept_name,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code ";//Modified By Srinath 28/3/2014
                    }
                    else
                    {
                        sqlstaffcode = sqlstaffcode + " order by hrdept_master.dept_name,len(staffmaster.staff_code),staffmaster.staff_code";//Modified By Srinath 28/3/2014
                    }
                    //     if ((tbseattype.Text != "---Select---") || (tbblood.Text != "---Select---"))
                    //{
                    //   // string collegecode1 = Session["collegecode"].ToString();

                    //   // deptcode = deptcode.Replace('"', ' ');
                    //    hastab.Clear();
                    //    hastab.Add("@college_code", Session["collegecode"].ToString());
                    //    hastab.Add("@fromdate", datefrom.ToString());
                    //    hastab.Add("@todate", dateto.ToString());
                    //    hastab.Add("@deptcode", deptcode.ToString());
                    //   // hastab.Add("@categorycode", catgorycode);
                    //    dbio = dacces2.select_method("bio_time_staff_details", hastab, "sp");
                    //}
                    string strqueryattenadnce = "select staffmaster.staff_code,staff_attnd.* from staffmaster ,stafftrans ,staff_attnd,hrdept_master   where staffmaster.staff_code=stafftrans.staff_code and stafftrans.dept_code=hrdept_master.dept_code and hrdept_master.college_code=staffmaster.college_code and staffmaster.staff_code=staff_attnd.staff_code";
                    DataSet dsAtt = new DataSet();
                    dsAtt = dacces2.select_method_wo_parameter(strqueryattenadnce, "text");

                    SqlDataAdapter dastaffcode = new SqlDataAdapter(sqlstaffcode, mycon);
                    mycon.Close();
                    mycon.Open();
                    DataSet dsstaffcode = new DataSet();
                    dastaffcode.Fill(dsstaffcode);


                    SqlDataAdapter dabio = new SqlDataAdapter(sql, con1);
                    con1.Open();
                    dabio.Fill(d1);
                    //  d1 = dacces2.select_method("biostaffattendance", hastab, "sp");
                    string str2 = getfunction3(sql);
                    int colcount = 13;
                    //int h = 0;
                    string staffcode1 = "";
                    int hcount = d1.Tables[0].Rows.Count - 1;
                    int hhcount = dsstaffcode.Tables[0].Rows.Count - 1;

                    #region NewStafAtt

                    //                if (d1.Tables[0].Rows.Count > 0)
                    //                {
                    //                    int access = 0;
                    //                    sno = 0;
                    //                    bool stsflag = false;
                    //                    counttotalmorpresent = 0;
                    //                    counttotalevepresent = 0;
                    //                    countmortotalabsent = 0;
                    //                    countevetotalabsent = 0;
                    //                    ArrayList staffsno = new ArrayList();
                    //                    DataTable dtDub = d1.Tables[0];
                    //                    DataView dv1;
                    //                    //string strallcount = getfunction3(strqueryattenadnce);
                    //                    for (int h1 = 0; h1 <= hhcount; h1++)
                    //                    {
                    //                        //DataTable dt = d1.Tables[0];
                    //                        //dt.DefaultView.RowFilter = " access_date= ";
                    //                        //DataView dv1 = dt.DefaultView;

                    //                        sql = "";
                    //                        // Str = "";
                    //                        stsflag = false;
                    //                        string category8 = "";
                    //                        string timein8 = "";
                    //                        string staffcode3 = staffcode1;

                    //                        string categorycode = "";

                    //                        //if ((staffcode3 != d1.Tables[0].Rows[h1]["staff_code"].ToString()) || (staffcode3 == ""))
                    //                        //{
                    //                        staffcode1 = dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString();
                    //                        categorycode = dsstaffcode.Tables[0].Rows[h1]["category_code"].ToString();

                    //                        string wrkingday = "select isnull(SUM((CAST(morning as int)+CAST(evening as int))),0) as holiday from holidaystaff ";
                    //                        wrkingday = wrkingday + " where category_code='" + categorycode + "'";
                    //                        wrkingday = wrkingday + " AND Holiday_Date Between '" + datefrom + "' and '" + dateto + "'";

                    //                        double totholiday = 0;
                    //                        double holiday = 0;
                    //                        string works = getfunction(wrkingday);
                    //                        if (works != "")
                    //                        {
                    //                            totholiday = Convert.ToDouble(works);
                    //                            if (totholiday != 0)
                    //                            {
                    //                                holiday = totholiday / 2;
                    //                            }
                    //                            else
                    //                            {
                    //                                holiday = 0;
                    //                            }
                    //                        }
                    //                        else
                    //                        {
                    //                            holiday = 0;
                    //                            totholiday = 0;
                    //                        }

                    //                        countpresent = 0;
                    //                        counteveningpresent = 0;
                    //                        countmorningabsent = 0;
                    //                        counteveningabsent = 0;
                    //                        countmorninglate = 0;
                    //                        countmorningpermission = 0;
                    //                        counteveninglate = 0;
                    //                        counteveningpermission = 0;
                    //                        countcolumn = fpbiomatric.Sheets[0].ColumnCount;

                    //                        d1.Tables[0].DefaultView.RowFilter = "staff_code='" + dsstaffcode.Tables[0].Rows[h]["access_date"].ToString(); ;
                    //                        //dt.DefaultView.RowFilter = " access_date= ";
                    //                        dv1 = d1.Tables[0].DefaultView;
                    //                        dtDub = dv1.ToTable();
                    //                        colcount = 15;
                    //                        int cnt = 15;
                    //                        string entrydate = "";
                    //                        for (int stf = 0; stf < dtDub.Rows.Count; stf++)
                    //                        {
                    //                            if (access <= stf)
                    //                            {
                    //                                entrydate = dtDub.Rows[h]["access_date"].ToString();
                    //                            }
                    //                            string[] splitentry = entrydate.Split(' ');
                    //                            string enrt1 = Convert.ToString(splitentry[0].ToString());
                    //                            string[] splitentry1 = enrt1.Split('/');
                    //                            string entrydate1 = Convert.ToInt16(splitentry1[1].ToString()) + "/" + Convert.ToInt32(splitentry1[0].ToString()) + "/" + splitentry1[2].ToString();

                    //                        }
                    //                        //for (h = 0; h <= hcount; h++)
                    //                        //{
                    //                        //    if (access <= hcount)
                    //                        //    {
                    //                        //        entrydate = d1.Tables[0].Rows[h]["access_date"].ToString();
                    //                        //    }
                    //                        //    string[] splitentry = entrydate.Split(' ');//modified by srinath 11/1/13
                    //                        //    string enrt1 = Convert.ToString(splitentry[0].ToString());
                    //                        //    string[] splitentry1 = enrt1.Split('/');

                    //                        //    string entrydate1 = Convert.ToInt16(splitentry1[1].ToString()) + "/" + Convert.ToInt32(splitentry1[0].ToString()) + "/" + splitentry1[2].ToString();




                    //                        //    for (colcount = colcount; colcount <= countcolumn - 1; colcount = colcount + 5)
                    //                        //    {

                    //                        //    }
                    //                        //    //if (entrydate1 == accessdate)
                    //                        //    //{

                    //                        //    //}
                    //                        //}

                    //                        #region Hidden1
                    ////                        for (colcount = colcount; colcount <= countcolumn - 1; colcount = colcount + 5)
                    ////                        {
                    ////                            string datetagvalue;
                    ////                            datetagvalue = fpbiomatric.Sheets[0].ColumnHeader.Cells[0, colcount].Tag.ToString();
                    ////                            string[] splitdate = datetagvalue.Split('/');
                    ////                            string accessdate = splitdate[1] + "/" + Convert.ToInt16(splitdate[0].ToString()) + "/" + splitdate[2];
                    ////                            string entrydate = "";
                    ////                            int attcnt = 0;
                    ////                            stsflag = false;


                    ////                            #region Hidden
                    ////                            //for (h = 0; h <= hcount; h++)
                    ////                            //{
                    ////                            //    if (access <= hcount)
                    ////                            //    {
                    ////                            //        entrydate = d1.Tables[0].Rows[h]["access_date"].ToString();
                    ////                            //    }
                    ////                            //    string[] splitentry = entrydate.Split(' ');//modified by srinath 11/1/13
                    ////                            //    string enrt1 = Convert.ToString(splitentry[0].ToString());
                    ////                            //    string[] splitentry1 = enrt1.Split('/');

                    ////                            //    string entrydate1 = Convert.ToInt16(splitentry1[1].ToString()) + "/" + Convert.ToInt32(splitentry1[0].ToString()) + "/" + splitentry1[2].ToString();
                    ////                            //    //stsflag = false;
                    ////                            //    //if (entrydate1 == accessdate)
                    ////                            //    //{
                    ////                            //    if (dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString() == d1.Tables[0].Rows[h]["staff_code"].ToString())
                    ////                            //    {
                    ////                            //        attcnt++;
                    ////                            //        string timein3 = "";
                    ////                            //        string gracetime3 = "";
                    ////                            //        string extendgracetime = "";
                    ////                            //        if (entrydate1 == accessdate)
                    ////                            //        {
                    ////                            //            category8 = d1.Tables[0].Rows[h]["category_name"].ToString();
                    ////                            //            timein8 = d1.Tables[0].Rows[h]["time_in"].ToString();
                    ////                            //            timein3 = d1.Tables[0].Rows[h]["ontime"].ToString();
                    ////                            //            gracetime3 = d1.Tables[0].Rows[h]["gracetime"].ToString();
                    ////                            //            extendgracetime = d1.Tables[0].Rows[h]["extendgracetime"].ToString();
                    ////                            //            //}
                    ////                            //            //else
                    ////                            //            //{
                    ////                            //            //    
                    ////                            //            //}
                    ////                            //            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount, 1, 5);
                    ////                            //            fpbiomatric.ActiveSheetView.Columns[colcount].Font.Size = FontUnit.Medium;
                    ////                            //            fpbiomatric.ActiveSheetView.Columns[colcount].Font.Name = "Book Antiqua";
                    ////                            //            fpbiomatric.ActiveSheetView.Columns[colcount + 1].Font.Size = FontUnit.Medium;
                    ////                            //            fpbiomatric.ActiveSheetView.Columns[colcount + 1].Font.Name = "Book Antiqua";
                    ////                            //            fpbiomatric.ActiveSheetView.Columns[colcount + 2].Font.Size = FontUnit.Medium;
                    ////                            //            fpbiomatric.ActiveSheetView.Columns[colcount + 2].Font.Name = "Book Antiqua";

                    ////                            //            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount].Text = "In";
                    ////                            //            fpbiomatric.Sheets[0].SetColumnWidth(colcount, 60);
                    ////                            //            fpbiomatric.Sheets[0].Columns[colcount].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount + 1].Text = "Out";
                    ////                            //            fpbiomatric.Sheets[0].SetColumnWidth(colcount + 1, 60);
                    ////                            //            fpbiomatric.Sheets[0].Columns[colcount + 1].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount + 2].Text = "Tot";
                    ////                            //            fpbiomatric.Sheets[0].SetColumnWidth(colcount + 2, 60);
                    ////                            //            fpbiomatric.Sheets[0].Columns[colcount + 2].HorizontalAlign = HorizontalAlign.Center;

                    ////                            //            fpbiomatric.ActiveSheetView.Columns[colcount + 3].Font.Size = FontUnit.Medium;
                    ////                            //            fpbiomatric.ActiveSheetView.Columns[colcount + 3].Font.Name = "Book Antiqua";
                    ////                            //            fpbiomatric.ActiveSheetView.Columns[colcount + 4].Font.Size = FontUnit.Medium;
                    ////                            //            fpbiomatric.ActiveSheetView.Columns[colcount + 4].Font.Name = "Book Antiqua";

                    ////                            //            fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //            fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;

                    ////                            //            strdate = " and bio_attendance.access_date='" + datetagvalue + "'";

                    ////                            //            //Start 05july2013------------------------------------------------------------------------------------

                    ////                            //            if (cbo_att.Items[0].Selected == true)
                    ////                            //            {
                    ////                            //                if (rdomorning.Checked == true)
                    ////                            //                {
                    ////                            //                    //Str = " and left(att,2)='P-'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;
                    ////                            //                }
                    ////                            //                else if (rdoevening.Checked == true)
                    ////                            //                {
                    ////                            //                    //Str = " and right(att,2)='-P'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                    ////                            //                }
                    ////                            //                else if (rdoall.Checked == true)
                    ////                            //                {
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[9].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[10].Visible = true;
                    ////                            //                    //Str = " and att like '%P%'";
                    ////                            //                }
                    ////                            //                else if (rdoboth.Checked == true)
                    ////                            //                {
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[9].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[10].Visible = true;
                    ////                            //                    //Str = " and att='P-P'";
                    ////                            //                }
                    ////                            //            }

                    ////                            //            if (cbo_att.Items[1].Selected == true)
                    ////                            //            {
                    ////                            //                if (rdomorning.Checked == true)
                    ////                            //                {
                    ////                            //                    // Str = " and left(att,2)='A-'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;
                    ////                            //                }
                    ////                            //                else if (rdoevening.Checked == true)
                    ////                            //                {
                    ////                            //                    //Str = " and right(att,2)='-A'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                    ////                            //                }
                    ////                            //                else if (rdoall.Checked == true)
                    ////                            //                {
                    ////                            //                    // Str = " and att like '%A%'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //                }
                    ////                            //                else if (rdoboth.Checked == true)
                    ////                            //                {
                    ////                            //                    // Str = " and att='A-A'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //                }
                    ////                            //            }

                    ////                            //            if (cbo_att.Items[2].Selected == true)
                    ////                            //            {
                    ////                            //                if (rdomorning.Checked == true)
                    ////                            //                {
                    ////                            //                    //Str = " and left(att,3)='LA-'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //                }
                    ////                            //                else if (rdoevening.Checked == true)
                    ////                            //                {
                    ////                            //                    //Str = " and right(att,3)='-LA'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //                }
                    ////                            //                else if (rdoall.Checked == true)
                    ////                            //                {
                    ////                            //                    //Str = " and att like '%LA%'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //                }
                    ////                            //                else if (rdoboth.Checked == true)
                    ////                            //                {
                    ////                            //                    //Str = " and att='LA-LA'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //                }
                    ////                            //            }

                    ////                            //            if (cbo_att.Items[3].Selected == true)
                    ////                            //            {
                    ////                            //                if (rdomorning.Checked == true)
                    ////                            //                {
                    ////                            //                    //Str = " and left(att,4)='PER-'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //                }
                    ////                            //                else if (rdoevening.Checked == true)
                    ////                            //                {
                    ////                            //                    // Str = " and right(att,4)='-PER'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //                }
                    ////                            //                else if (rdoall.Checked == true)
                    ////                            //                {
                    ////                            //                    //Str = " and att like '%PER%'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //                }
                    ////                            //                else if (rdoboth.Checked == true)
                    ////                            //                {
                    ////                            //                    // Str = " and att='PER-PER'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //                }
                    ////                            //            }

                    ////                            //            //End 05july2013----------------------------------------------------------------------------------
                    ////                            //            if (d1.Tables[0].Rows.Count != 0)
                    ////                            //            {
                    ////                            //            }
                    ////                            //            if (Chktimein.Checked == true)
                    ////                            //            {
                    ////                            //                strTime = "";
                    ////                            //                strTime = " and  Right(CONVERT(nvarchar(100),time_in ,100),7)  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "'";
                    ////                            //            }
                    ////                            //            else if (Chktimeout.Checked == true)
                    ////                            //            {
                    ////                            //                strTime = "";
                    ////                            //                strTime = " AND Right(CONVERT(nvarchar(100),time_Out ,100),7) between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";
                    ////                            //            }

                    ////                            //            if ((Chktimein.Checked == true) && (Chktimeout.Checked == true))
                    ////                            //            {
                    ////                            //                strTime = "";
                    ////                            //                strTime = " and  Right(CONVERT(nvarchar(100),time_in ,100),7)  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "' AND Right(CONVERT(nvarchar(100),time_Out ,100),7) between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";

                    ////                            //            }
                    ////                            //            if (strTime != null)
                    ////                            //            {
                    ////                            //                sql = sql + " " + strTime + "";
                    ////                            //            }
                    ////                            //            // sql = sql + " order by hrdept_master.dept_name";
                    ////                            //            sql = sql + " order by hrdept_master.dept_name,len(staffmaster.staff_code),staffmaster.staff_code"; //Modified By Srinath 28/3/2014 ";


                    ////                            //            con.Close();
                    ////                            //            con.Open();
                    ////                            //            fpbiomatric.Width = 1000;
                    ////                            //            lblnorec.Visible = false;

                    ////                            //            int datval = 0;
                    ////                            //            int rowcnt = 0;
                    ////                            //            int rowstr = 0;

                    ////                            //            int countlateforstaff = 0;

                    ////                            //            //   drcount14 = cmd7.ExecuteReader();
                    ////                            //            // drcount14.Read();
                    ////                            //            // lbl2:
                    ////                            //            //while (drcount14.Read())
                    ////                            //            //  for (int i = 0; i < d1.Tables[0].Rows.Count;i++)
                    ////                            //            //{

                    ////                            //            if (d1.Tables[0].Rows.Count != 0)
                    ////                            //            {
                    ////                            //                string category = "";
                    ////                            //                string timein = "";
                    ////                            //                string gracetime = "";

                    ////                            //                if (gracetimeflag == true)
                    ////                            //                {
                    ////                            //                    if ((Convert.ToDateTime(timein8) <= Convert.ToDateTime(gracetime3)) && (Convert.ToDateTime(timein8) > Convert.ToDateTime(timein3)))
                    ////                            //                    {
                    ////                            //                        goto lbl1;
                    ////                            //                    }
                    ////                            //                    else
                    ////                            //                    {
                    ////                            //                        goto lbl2;
                    ////                            //                    }
                    ////                            //                }
                    ////                            //                else if (ontimeflag == true)
                    ////                            //                {
                    ////                            //                    if (Convert.ToDateTime(timein8) <= Convert.ToDateTime(timein3))
                    ////                            //                    {
                    ////                            //                        goto lbl1;
                    ////                            //                    }
                    ////                            //                    else
                    ////                            //                    {
                    ////                            //                        goto lbl2;
                    ////                            //                    }
                    ////                            //                }
                    ////                            //                else if (Generalflag == false)
                    ////                            //                {
                    ////                            //                    goto lbl1;
                    ////                            //                }
                    ////                            //                else
                    ////                            //                {
                    ////                            //                    goto lbl1;
                    ////                            //                }

                    ////                            //            lbl1:
                    ////                            //                if (tempstaffcode == "")
                    ////                            //                {
                    ////                            //                    countpresent = 0;
                    ////                            //                    counteveningpresent = 0;
                    ////                            //                    countmorningabsent = 0;
                    ////                            //                    countmorningpermission = 0;
                    ////                            //                    counteveninglate = 0;
                    ////                            //                    counteveningpermission = 0;
                    ////                            //                    counteveningabsent = 0;
                    ////                            //                    countmorninglate = 0;
                    ////                            //                    countpermission = 0;
                    ////                            //                    category = d1.Tables[0].Rows[h]["category_name"].ToString();
                    ////                            //                    //Added By SRinath 26/4/2014=========Start====
                    ////                            //                    if (strtempdept != d1.Tables[0].Rows[h]["dept_name"].ToString())
                    ////                            //                    {
                    ////                            //                        strtempdept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                    ////                            //                        fpbiomatric.Sheets[0].RowCount += 1;
                    ////                            //                        int col = 0;
                    ////                            //                        if (cblsearch.Items[0].Selected == false)
                    ////                            //                        {
                    ////                            //                            col = 0;
                    ////                            //                        }
                    ////                            //                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Text = strtempdept;
                    ////                            //                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Font.Bold = true;
                    ////                            //                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].VerticalAlign = VerticalAlign.Middle;
                    ////                            //                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].BackColor = Color.LightYellow;
                    ////                            //                        fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, col, 1, fpbiomatric.Sheets[0].ColumnCount);
                    ////                            //                    }
                    ////                            //                    //=======================End===================
                    ////                            //                    fpbiomatric.Sheets[0].RowCount += 1;
                    ////                            //                    tempstaffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                    ////                            //                }
                    ////                            //                else if ((tempstaffcode != "") && (tempstaffcode != d1.Tables[0].Rows[h]["staff_code"].ToString()))
                    ////                            //                {
                    ////                            //                    countpresent = 0;
                    ////                            //                    counteveningpresent = 0;
                    ////                            //                    countmorningabsent = 0;
                    ////                            //                    countpermission = 0;
                    ////                            //                    countmorningpermission = 0;
                    ////                            //                    counteveninglate = 0;
                    ////                            //                    counteveningpermission = 0;
                    ////                            //                    counteveningabsent = 0;
                    ////                            //                    countmorninglate = 0;
                    ////                            //                    c = 0;
                    ////                            //                    d = 0;
                    ////                            //                    g = 0;
                    ////                            //                    f = 0;
                    ////                            //                    percentage = 0;
                    ////                            //                    countmorningabsent = 0;
                    ////                            //                    countlateforstaff = 0;
                    ////                            //                    counteveningabsent = 0;
                    ////                            //                    countmorninglate = 0;
                    ////                            //                    counteveninglate = 0;
                    ////                            //                    countmorningpermission = 0;
                    ////                            //                    counteveningpermission = 0;

                    ////                            //                    //Added By SRinath 26/4/2014=========Start====
                    ////                            //                    if (strtempdept != d1.Tables[0].Rows[h]["dept_name"].ToString())
                    ////                            //                    {
                    ////                            //                        strtempdept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                    ////                            //                        fpbiomatric.Sheets[0].RowCount += 1;
                    ////                            //                        int col = 0;
                    ////                            //                        if (cblsearch.Items[0].Selected == false)
                    ////                            //                        {
                    ////                            //                            col = 0;
                    ////                            //                        }
                    ////                            //                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Text = strtempdept;
                    ////                            //                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Font.Bold = true;
                    ////                            //                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].VerticalAlign = VerticalAlign.Middle;
                    ////                            //                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].BackColor = Color.LightYellow;
                    ////                            //                        fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, col, 1, fpbiomatric.Sheets[0].ColumnCount);
                    ////                            //                    }
                    ////                            //                    //=======================End===================
                    ////                            //                    fpbiomatric.Sheets[0].RowCount += 1;
                    ////                            //                    tempstaffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                    ////                            //                }
                    ////                            //                Buttontotal.Visible = false;
                    ////                            //                DropDownListpage.Visible = false;
                    ////                            //                TextBoxpage.Visible = false;
                    ////                            //                lblrecord.Visible = false;
                    ////                            //                lblrecord.Visible = false;
                    ////                            //                lblpage.Visible = false;
                    ////                            //                Imgeveper.Visible = true;
                    ////                            //                Lblgracetime.Visible = true;
                    ////                            //                btnontime.Visible = true;
                    ////                            //                lblontime.Visible = true;
                    ////                            //                Imgmorper.Visible = true;
                    ////                            //                Imglate.Visible = true;
                    ////                            //                late.Visible = true;
                    ////                            //                Imgood.Visible = true;
                    ////                            //                btnmorabsent.Visible = true;
                    ////                            //                btneveabsent.Visible = true;
                    ////                            //                btnevepresent.Visible = true;
                    ////                            //                btnmorabsent.Visible = true;
                    ////                            //                lblmorpresent.Visible = true;
                    ////                            //                lblevepresent.Visible = true;
                    ////                            //                lblevepresent.Visible = true;
                    ////                            //                lbleveabsent.Visible = true;
                    ////                            //                lblmorabsent.Visible = true;
                    ////                            //                btnmorpresent.Visible = true;
                    ////                            //                lbldate.Visible = true; //Modified by Manikandan 09/05/2013
                    ////                            //                lblevngpermission.Visible = true;
                    ////                            //                lblood.Visible = true;
                    ////                            //                lblpermission.Visible = true;
                    ////                            //                btngracetime.Visible = true;
                    ////                            //                rowstr = Convert.ToInt32(fpbiomatric.Sheets[0].RowCount);
                    ////                            //                fpbiomatric.Visible = true;
                    ////                            //                btnprintmaster.Visible = true;
                    ////                            //                string staffcode = "";
                    ////                            //                string staffname = "";
                    ////                            //                string dept = "";
                    ////                            //                string design = "";
                    ////                            //                string dept_acronym = "";
                    ////                            //                string desig_acronym = "";

                    ////                            //                string doj = "";
                    ////                            //                string intime = "";
                    ////                            //                string outtime = "";
                    ////                            //                string Totalhours = "";

                    ////                            //                fpbiomatric.Sheets[0].SetColumnWidth(3, 250);

                    ////                            //                staffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                    ////                            //                staffname = d1.Tables[0].Rows[h]["staff_name"].ToString();
                    ////                            //                DataSet sds = new DataSet();
                    ////                            //                DAccess2 sda = new DAccess2();
                    ////                            //                sds.Clear();
                    ////                            //                string ssql = "select title from staff_appl_master,staffmaster  where staff_appl_master.appl_no=staffmaster.appl_no  and staffmaster.staff_code='" + staffcode + "'";
                    ////                            //                sds = sda.select_method_wo_parameter(ssql, "Text");
                    ////                            //                if (sds.Tables[0].Rows.Count > 0)
                    ////                            //                {
                    ////                            //                    if (sds.Tables[0].Rows[0][0].ToString() != "")
                    ////                            //                    {
                    ////                            //                        staffname = sds.Tables[0].Rows[0][0].ToString() + d1.Tables[0].Rows[h]["staff_name"].ToString();
                    ////                            //                    }
                    ////                            //                }

                    ////                            //                dept_acronym = d1.Tables[0].Rows[h]["dept_acronym"].ToString();
                    ////                            //                desig_acronym = d1.Tables[0].Rows[h]["desig_acronym"].ToString();
                    ////                            //                dept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                    ////                            //                design = d1.Tables[0].Rows[h]["desig_name"].ToString();

                    ////                            //                doj = d1.Tables[0].Rows[h]["join_date"].ToString();
                    ////                            //                fpbiomatric.Sheets[0].FrozenColumnCount = 4;

                    ////                            //                string tmp_course = "";
                    ////                            //                int getprevrow_cnt = 0;
                    ////                            //                int initor_cnt = 0;
                    ////                            //                //if (cnt == 0 || stsflag == false)
                    ////                            //                //{
                    ////                            //                //    sno++;                                                
                    ////                            //                //}
                    ////                            //                //if (colcount==cnt)
                    ////                            //                //{
                    ////                            //                //    newserialno++;
                    ////                            //                if (!staffsno.Contains(staffcode))
                    ////                            //                {
                    ////                            //                    newserialno++;
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text = Convert.ToString(newserialno);
                    ////                            //                    staffsno.Add(staffcode);
                    ////                            //                }

                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 1].Text = staffcode;
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 2].Text = staffname;
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 3].Text = dept;
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 4].Text = dept_acronym;
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 5].Text = design;
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 6].Text = desig_acronym;
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 7].Text = doj;
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 8].Text = category;
                    ////                            //                //}
                    ////                            //                //else
                    ////                            //                //{
                    ////                            //                //    if (fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text.Trim() == "")
                    ////                            //                //    {
                    ////                            //                //        newserialno++;
                    ////                            //                //    }
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text = Convert.ToString(newserialno);
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 1].Text = staffcode;
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 2].Text = staffname;
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 3].Text = dept;
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 4].Text = dept_acronym;
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 5].Text = design;
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 6].Text = desig_acronym;
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 7].Text = doj;
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 8].Text = category;
                    ////                            //                //}
                    ////                            //                //fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text = sno.ToString();
                    ////                            //                //fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;

                    ////                            //                //if (sts == false)
                    ////                            //                //{
                    ////                            //                //    sno++;
                    ////                            //                //}
                    ////                            //                string mrng = "";
                    ////                            //                string evng = "";
                    ////                            //                //d1.Tables[0].Rows[h]["att"].ToString();
                    ////                            //                string att = "";
                    ////                            //                dsAtt.Tables[0].DefaultView.RowFilter = "staff_code='" + staffcode + "' and mon_year='" + splitdate[0] + '/' + splitdate[2] + "'";
                    ////                            //                DataView dvatt = dsAtt.Tables[0].DefaultView;
                    ////                            //                if (dvatt.Count > 0)
                    ////                            //                {
                    ////                            //                    if (d1.Tables[0].Rows[h]["att"].ToString() == dvatt[0][splitdate[1]].ToString())
                    ////                            //                    {
                    ////                            //                        att = d1.Tables[0].Rows[h]["att"].ToString();
                    ////                            //                        stsflag = false;
                    ////                            //                    }
                    ////                            //                    else
                    ////                            //                    {
                    ////                            //                        stsflag = true;
                    ////                            //                        att = dvatt[0][splitdate[1]].ToString();
                    ////                            //                    }
                    ////                            //                }
                    ////                            //                if (att != "")
                    ////                            //                {
                    ////                            //                    string[] tmpdate = att.Split(new char[] { '-' });
                    ////                            //                    mrng = tmpdate[0].ToString();
                    ////                            //                    evng = tmpdate[1].ToString();
                    ////                            //                }
                    ////                            //                //if (accessdate == entrydate1)
                    ////                            //                //{
                    ////                            //                intime = d1.Tables[0].Rows[h]["time_in"].ToString();
                    ////                            //                outtime = d1.Tables[0].Rows[h]["time_out"].ToString();
                    ////                            //                Totalhours = d1.Tables[0].Rows[h]["TotalHours"].ToString();
                    ////                            //                if (Convert.ToDateTime(intime) <= Convert.ToDateTime(timein3))
                    ////                            //                {
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                }
                    ////                            //                if ((Convert.ToDateTime(intime) <= Convert.ToDateTime(gracetime3)) && (Convert.ToDateTime(intime) > Convert.ToDateTime(timein3)))
                    ////                            //                {
                    ////                            //                    //  countgracetime = countgracetime + 1;
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.Pink;
                    ////                            //                }

                    ////                            //                if ((Convert.ToDateTime(intime) > Convert.ToDateTime(gracetime3)))
                    ////                            //                {
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                }
                    ////                            //                else if ((Convert.ToDateTime(intime) <= Convert.ToDateTime(extendgracetime)) && (Convert.ToDateTime(intime) > Convert.ToDateTime(gracetime3)))
                    ////                            //                {
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                }
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;

                    ////                            //                //else
                    ////                            //                //{
                    ////                            //                //    if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                    ////                            //                //    {
                    ////                            //                //        if (stsflag)
                    ////                            //                //            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                //    }
                    ////                            //                //    if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                    ////                            //                //    {
                    ////                            //                //        if (stsflag)
                    ////                            //                //            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                    ////                            //                //    }
                    ////                            //                //}

                    ////                            //                if (Totalhours != "")
                    ////                            //                {
                    ////                            //                    string totalhours4;
                    ////                            //                    string[] split28 = Totalhours.Split(new Char[] { ':' });
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 2].Text = Convert.ToString(split28[0]) + ":" + split28[1].ToString();
                    ////                            //                }
                    ////                            //                else
                    ////                            //                {
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 2].Text = Totalhours;
                    ////                            //                }

                    ////                            //                int setcount = 0;
                    ////                            //                setcount = colcount;

                    ////                            //                if (mrng == "P")
                    ////                            //                {
                    ////                            //                    //25nov2013 countpresent++;     
                    ////                            //                    //added by srinath 12/3/2014 
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Green;
                    ////                            //                    //if (stsflag == false && attcnt == 1)
                    ////                            //                    //{
                    ////                            //                    counttotalmorpresent++;
                    ////                            //                    countpresent++;
                    ////                            //                    //}
                    ////                            //                    //else
                    ////                            //                    //{
                    ////                            //                    //    if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                    ////                            //                    //    {
                    ////                            //                    //        counttotalmorpresent++;
                    ////                            //                    //        countpresent++;
                    ////                            //                    //    }
                    ////                            //                    //}
                    ////                            //                }
                    ////                            //                if (evng == "P")
                    ////                            //                {
                    ////                            //                    //25nov2013counteveningpresent++;
                    ////                            //                    //added by srinath 12/3/2014 
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Green;
                    ////                            //                    //if (stsflag == false && attcnt == 1)
                    ////                            //                    //{
                    ////                            //                    counttotalevepresent++;
                    ////                            //                    counteveningpresent++;
                    ////                            //                    //}
                    ////                            //                    //else
                    ////                            //                    //{
                    ////                            //                    //    if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                    ////                            //                    //    {
                    ////                            //                    //        counttotalevepresent++;
                    ////                            //                    //        counteveningpresent++;
                    ////                            //                    //    }
                    ////                            //                    //}
                    ////                            //                }


                    ////                            //                //25nov2013 totalperesent = countpresent + counteveningpresent;
                    ////                            //                //25nov2013 totalperesent = totalperesent / 2;

                    ////                            //                //added by srinath 12/3/2014 
                    ////                            //                totalperesent = countpresent + counteveningpresent;
                    ////                            //                totalperesent = totalperesent / 2;

                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].Text = Convert.ToDouble(totalperesent).ToString();
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //                g = Convert.ToDouble(fpbiomatric.Sheets[0].GetText(rowstr - 1, 10).ToString());

                    ////                            //                totpresent = totpresent + Convert.ToDouble(fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].Text);

                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].HorizontalAlign = HorizontalAlign.Center;

                    ////                            //                c = g * 100;

                    ////                            //                d = Convert.ToDouble(day3) - holiday;
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].Text = d.ToString();
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //                if ((c != 0) && (d != 0))
                    ////                            //                {
                    ////                            //                    percentage = Convert.ToDouble(c) / Convert.ToDouble(d);
                    ////                            //                    percentage = Math.Round(percentage, 2);
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].Text = percentage.ToString();
                    ////                            //                }

                    ////                            //                if (mrng == "A")
                    ////                            //                {
                    ////                            //                    //25nov2013 countmorningabsent = countmorningabsent + 1;   
                    ////                            //                    //added by srinath 12/3/2014 
                    ////                            //                    //if (stsflag == false && attcnt == 1)
                    ////                            //                    //{
                    ////                            //                    countmorningabsent = countmorningabsent + 1;
                    ////                            //                    countmortotalabsent += 1;
                    ////                            //                    //}
                    ////                            //                    //else
                    ////                            //                    //{
                    ////                            //                    //    if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                    ////                            //                    //    {
                    ////                            //                    //        countmorningabsent = countmorningabsent + 1;
                    ////                            //                    //        countmortotalabsent += 1;
                    ////                            //                    //    }
                    ////                            //                    //}
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Red;

                    ////                            //                }
                    ////                            //                if (evng == "A")
                    ////                            //                {
                    ////                            //                    //25nov2013 counteveningabsent = counteveningabsent + 1;  
                    ////                            //                    //added by srinath 12/3/2014 
                    ////                            //                    //if (stsflag == false && attcnt == 1)
                    ////                            //                    //{
                    ////                            //                    countevetotalabsent += 1;
                    ////                            //                    counteveningabsent = counteveningabsent + 1;
                    ////                            //                    //}
                    ////                            //                    //else
                    ////                            //                    //{
                    ////                            //                    //    if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                    ////                            //                    //    {
                    ////                            //                    //        countevetotalabsent += 1;
                    ////                            //                    //        counteveningabsent = counteveningabsent + 1;
                    ////                            //                    //    }
                    ////                            //                    //}
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Red;

                    ////                            //                }
                    ////                            //                //25nov2013 totalabsent = counteveningabsent + countmorningabsent;
                    ////                            //                //25nov2013 totalabsent = totalabsent / 2;

                    ////                            //                //added by srinath 12/3/2014 
                    ////                            //                totalabsent = counteveningabsent + countmorningabsent;
                    ////                            //                totalabsent = totalabsent / 2;
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text = Convert.ToDouble(totalabsent).ToString();
                    ////                            //                totabsent = totabsent + Convert.ToDouble(fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text);
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //                if (mrng == "LA")
                    ////                            //                {
                    ////                            //                    //25nov2013 countmorninglate++;
                    ////                            //                    //added by srinath 12/3/2014    

                    ////                            //                    //if (accessdate == entrydate1)
                    ////                            //                    //{
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkRed;
                    ////                            //                    //}
                    ////                            //                    //if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                    ////                            //                    //{
                    ////                            //                    //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                    //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.White;
                    ////                            //                    //}
                    ////                            //                    //else
                    ////                            //                    //fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.DarkRed;
                    ////                            //                    //if (stsflag == false && attcnt == 1)
                    ////                            //                    //{
                    ////                            //                    countmorninglate++;
                    ////                            //                    //}
                    ////                            //                    //else
                    ////                            //                    //{
                    ////                            //                    //    if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                    ////                            //                    //    {
                    ////                            //                    //        countmorninglate++;
                    ////                            //                    //    }
                    ////                            //                    //}

                    ////                            //                }
                    ////                            //                if (evng == "LA")
                    ////                            //                {
                    ////                            //                    //if (stsflag == false && attcnt == 1)
                    ////                            //                    //{
                    ////                            //                    counteveninglate = counteveninglate + 1;
                    ////                            //                    //}
                    ////                            //                    //else
                    ////                            //                    //{
                    ////                            //                    //    if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                    ////                            //                    //    {
                    ////                            //                    //        counteveninglate = counteveninglate + 1;
                    ////                            //                    //    }
                    ////                            //                    //}
                    ////                            //                }
                    ////                            //                //25nov2013 totallate = countmorninglate + counteveninglate;
                    ////                            //                //25nov2013 totallate = totallate / 2;
                    ////                            //                //added by srinath 12/3/2014 
                    ////                            //                totallate = countmorninglate + counteveninglate;
                    ////                            //                totallate = totallate / 2;

                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].Text = Convert.ToDouble(totallate).ToString();
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].HorizontalAlign = HorizontalAlign.Center;

                    ////                            //                if (mrng == "PER")
                    ////                            //                {
                    ////                            //                    // countpereng++;
                    ////                            //                    //25nov2013 countpermission = countpermission + 1;
                    ////                            //                    //added by srinath 12/3/2014 

                    ////                            //                    //if (accessdate == entrydate1)
                    ////                            //                    //{
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.BurlyWood;
                    ////                            //                    //}

                    ////                            //                    if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                    ////                            //                    {
                    ////                            //                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.White;
                    ////                            //                    }
                    ////                            //                    else
                    ////                            //                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.BurlyWood;
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.BurlyWood;

                    ////                            //                    //25nov2013  countmorningpermission = countmorningpermission + 1;
                    ////                            //                    //added by srinath 12/3/2014 
                    ////                            //                    //if (stsflag == false && attcnt == 1)
                    ////                            //                    //{
                    ////                            //                    countpermission = countpermission + 1;
                    ////                            //                    countmorningpermission = countmorningpermission + 1;
                    ////                            //                    //}
                    ////                            //                    //else
                    ////                            //                    //{
                    ////                            //                    //    if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                    ////                            //                    //    {
                    ////                            //                    //        countpermission = countpermission + 1;
                    ////                            //                    //        countmorningpermission = countmorningpermission + 1;
                    ////                            //                    //    }
                    ////                            //                    //}

                    ////                            //                }
                    ////                            //                if (evng == "PER")
                    ////                            //                {

                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.BurlyWood;
                    ////                            //                    //if (accessdate == entrydate1)
                    ////                            //                    //{
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].BackColor = Color.Chocolate;
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                    ////                            //                    //}
                    ////                            //                    if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                    ////                            //                    {
                    ////                            //                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                    ////                            //                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].BackColor = Color.White;
                    ////                            //                    }
                    ////                            //                    else
                    ////                            //                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].BackColor = Color.Chocolate;
                    ////                            //                    //25nov2013 countpermission2 = countpermission2 + 1;
                    ////                            //                    //25nov2013 counteveningpermission++;

                    ////                            //                    //added by srinath 12/3/2014 
                    ////                            //                    //if (stsflag == false && attcnt == 1)
                    ////                            //                    //{
                    ////                            //                    eveningpermission++;
                    ////                            //                    countpermission2 = countpermission2 + 1;
                    ////                            //                    counteveningpermission++;
                    ////                            //                    //}
                    ////                            //                    //else
                    ////                            //                    //{
                    ////                            //                    //    if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                    ////                            //                    //    {
                    ////                            //                    //        eveningpermission++;
                    ////                            //                    //        countpermission2 = countpermission2 + 1;
                    ////                            //                    //        counteveningpermission++;
                    ////                            //                    //    }
                    ////                            //                    //}

                    ////                            //                }
                    ////                            //                //25nov2013 totalpermission = countmorningpermission + counteveningpermission;
                    ////                            //                //  totalpermission = totalpermission / 2; //modified by srinath

                    ////                            //                //added by srinath 12/3/2014 
                    ////                            //                totalpermission = countmorningpermission + counteveningpermission;
                    ////                            //                totalpermission = totalpermission / 2;

                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 13].Text = Convert.ToDouble(totalpermission).ToString();
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 13].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //                if (mrng == "OOD")
                    ////                            //                {
                    ////                            //                    //if (accessdate == entrydate1)
                    ////                            //                    //{
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.DarkSeaGreen;
                    ////                            //                    //}
                    ////                            //                    if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                    ////                            //                    {
                    ////                            //                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.White;
                    ////                            //                    }
                    ////                            //                    else
                    ////                            //                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.DarkSeaGreen;
                    ////                            //                }
                    ////                            //                fpbiomatric.Sheets[0].Columns[4].Visible = false;
                    ////                            //                fpbiomatric.Sheets[0].Columns[6].Visible = false;
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].Text = mrng.ToString();
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].Text = evng.ToString();
                    ////                            //                Panel2.Visible = true;
                    ////                            //            }
                    ////                            //            Session.Remove("datefrom");
                    ////                            //            Session.Remove("dateto");
                    ////                            //            continue;
                    ////                            //        }
                    ////                            //        else
                    ////                            //        {
                    ////                            //            category8 = d1.Tables[0].Rows[h]["category_name"].ToString();
                    ////                            //            timein8 = "";
                    ////                            //            timein3 = "";
                    ////                            //            gracetime3 = d1.Tables[0].Rows[h]["gracetime"].ToString();
                    ////                            //            extendgracetime = d1.Tables[0].Rows[h]["extendgracetime"].ToString();
                    ////                            //            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount, 1, 5);
                    ////                            //            fpbiomatric.ActiveSheetView.Columns[colcount].Font.Size = FontUnit.Medium;
                    ////                            //            fpbiomatric.ActiveSheetView.Columns[colcount].Font.Name = "Book Antiqua";
                    ////                            //            fpbiomatric.ActiveSheetView.Columns[colcount + 1].Font.Size = FontUnit.Medium;
                    ////                            //            fpbiomatric.ActiveSheetView.Columns[colcount + 1].Font.Name = "Book Antiqua";
                    ////                            //            fpbiomatric.ActiveSheetView.Columns[colcount + 2].Font.Size = FontUnit.Medium;
                    ////                            //            fpbiomatric.ActiveSheetView.Columns[colcount + 2].Font.Name = "Book Antiqua";

                    ////                            //            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount].Text = "In";
                    ////                            //            fpbiomatric.Sheets[0].SetColumnWidth(colcount, 60);
                    ////                            //            fpbiomatric.Sheets[0].Columns[colcount].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount + 1].Text = "Out";
                    ////                            //            fpbiomatric.Sheets[0].SetColumnWidth(colcount + 1, 60);
                    ////                            //            fpbiomatric.Sheets[0].Columns[colcount + 1].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount + 2].Text = "Tot";
                    ////                            //            fpbiomatric.Sheets[0].SetColumnWidth(colcount + 2, 60);
                    ////                            //            fpbiomatric.Sheets[0].Columns[colcount + 2].HorizontalAlign = HorizontalAlign.Center;

                    ////                            //            fpbiomatric.ActiveSheetView.Columns[colcount + 3].Font.Size = FontUnit.Medium;
                    ////                            //            fpbiomatric.ActiveSheetView.Columns[colcount + 3].Font.Name = "Book Antiqua";
                    ////                            //            fpbiomatric.ActiveSheetView.Columns[colcount + 4].Font.Size = FontUnit.Medium;
                    ////                            //            fpbiomatric.ActiveSheetView.Columns[colcount + 4].Font.Name = "Book Antiqua";

                    ////                            //            fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //            fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;

                    ////                            //            strdate = " and bio_attendance.access_date='" + datetagvalue + "'";

                    ////                            //            if (cbo_att.Items[0].Selected == true)
                    ////                            //            {
                    ////                            //                if (rdomorning.Checked == true)
                    ////                            //                {
                    ////                            //                    //Str = " and left(att,2)='P-'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;
                    ////                            //                }
                    ////                            //                else if (rdoevening.Checked == true)
                    ////                            //                {
                    ////                            //                    //Str = " and right(att,2)='-P'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                    ////                            //                }
                    ////                            //                else if (rdoall.Checked == true)
                    ////                            //                {
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[9].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[10].Visible = true;
                    ////                            //                    //Str = " and att like '%P%'";
                    ////                            //                }
                    ////                            //                else if (rdoboth.Checked == true)
                    ////                            //                {
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[9].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[10].Visible = true;
                    ////                            //                    //Str = " and att='P-P'";
                    ////                            //                }
                    ////                            //            }

                    ////                            //            if (cbo_att.Items[1].Selected == true)
                    ////                            //            {
                    ////                            //                if (rdomorning.Checked == true)
                    ////                            //                {
                    ////                            //                    // Str = " and left(att,2)='A-'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;
                    ////                            //                }
                    ////                            //                else if (rdoevening.Checked == true)
                    ////                            //                {
                    ////                            //                    //Str = " and right(att,2)='-A'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                    ////                            //                }
                    ////                            //                else if (rdoall.Checked == true)
                    ////                            //                {
                    ////                            //                    // Str = " and att like '%A%'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //                }
                    ////                            //                else if (rdoboth.Checked == true)
                    ////                            //                {
                    ////                            //                    // Str = " and att='A-A'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //                }
                    ////                            //            }

                    ////                            //            if (cbo_att.Items[2].Selected == true)
                    ////                            //            {
                    ////                            //                if (rdomorning.Checked == true)
                    ////                            //                {
                    ////                            //                    //Str = " and left(att,3)='LA-'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //                }
                    ////                            //                else if (rdoevening.Checked == true)
                    ////                            //                {
                    ////                            //                    //Str = " and right(att,3)='-LA'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //                }
                    ////                            //                else if (rdoall.Checked == true)
                    ////                            //                {
                    ////                            //                    //Str = " and att like '%LA%'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //                }
                    ////                            //                else if (rdoboth.Checked == true)
                    ////                            //                {
                    ////                            //                    //Str = " and att='LA-LA'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //                }
                    ////                            //            }

                    ////                            //            if (cbo_att.Items[3].Selected == true)
                    ////                            //            {
                    ////                            //                if (rdomorning.Checked == true)
                    ////                            //                {
                    ////                            //                    //Str = " and left(att,4)='PER-'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //                }
                    ////                            //                else if (rdoevening.Checked == true)
                    ////                            //                {
                    ////                            //                    // Str = " and right(att,4)='-PER'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //                }
                    ////                            //                else if (rdoall.Checked == true)
                    ////                            //                {
                    ////                            //                    //Str = " and att like '%PER%'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //                }
                    ////                            //                else if (rdoboth.Checked == true)
                    ////                            //                {
                    ////                            //                    // Str = " and att='PER-PER'";
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //                }
                    ////                            //            }

                    ////                            //            //End 05july2013----------------------------------------------------------------------------------
                    ////                            //            if (d1.Tables[0].Rows.Count != 0)
                    ////                            //            {
                    ////                            //            }
                    ////                            //            if (Chktimein.Checked == true)
                    ////                            //            {
                    ////                            //                strTime = "";
                    ////                            //                strTime = " and  Right(CONVERT(nvarchar(100),time_in ,100),7)  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "'";
                    ////                            //            }
                    ////                            //            else if (Chktimeout.Checked == true)
                    ////                            //            {
                    ////                            //                strTime = "";
                    ////                            //                strTime = " AND Right(CONVERT(nvarchar(100),time_Out ,100),7) between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";
                    ////                            //            }

                    ////                            //            if ((Chktimein.Checked == true) && (Chktimeout.Checked == true))
                    ////                            //            {
                    ////                            //                strTime = "";
                    ////                            //                strTime = " and  Right(CONVERT(nvarchar(100),time_in ,100),7)  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "' AND Right(CONVERT(nvarchar(100),time_Out ,100),7) between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";

                    ////                            //            }
                    ////                            //            if (strTime != null)
                    ////                            //            {
                    ////                            //                sql = sql + " " + strTime + "";
                    ////                            //            }
                    ////                            //            // sql = sql + " order by hrdept_master.dept_name";
                    ////                            //            sql = sql + " order by hrdept_master.dept_name,len(staffmaster.staff_code),staffmaster.staff_code"; //Modified By Srinath 28/3/2014 ";


                    ////                            //            con.Close();
                    ////                            //            con.Open();
                    ////                            //            fpbiomatric.Width = 1000;
                    ////                            //            lblnorec.Visible = false;

                    ////                            //            int datval = 0;
                    ////                            //            int rowcnt = 0;
                    ////                            //            int rowstr = 0;

                    ////                            //            int countlateforstaff = 0;

                    ////                            //            if (d1.Tables[0].Rows.Count != 0)
                    ////                            //            {
                    ////                            //                string category = "";
                    ////                            //                string timein = "";
                    ////                            //                string gracetime = "";

                    ////                            //                if (gracetimeflag == true)
                    ////                            //                {
                    ////                            //                    if ((Convert.ToDateTime(timein8) <= Convert.ToDateTime(gracetime3)) && (Convert.ToDateTime(timein8) > Convert.ToDateTime(timein3)))
                    ////                            //                    {
                    ////                            //                        goto lbl1;
                    ////                            //                    }
                    ////                            //                    else
                    ////                            //                    {
                    ////                            //                        goto lbl2;
                    ////                            //                    }
                    ////                            //                }
                    ////                            //                else if (ontimeflag == true)
                    ////                            //                {
                    ////                            //                    if (Convert.ToDateTime(timein8) <= Convert.ToDateTime(timein3))
                    ////                            //                    {
                    ////                            //                        goto lbl1;
                    ////                            //                    }
                    ////                            //                    else
                    ////                            //                    {
                    ////                            //                        goto lbl2;
                    ////                            //                    }
                    ////                            //                }
                    ////                            //                else if (Generalflag == false)
                    ////                            //                {
                    ////                            //                    goto lbl1;
                    ////                            //                }
                    ////                            //                else
                    ////                            //                {
                    ////                            //                    goto lbl1;
                    ////                            //                }

                    ////                            //            lbl1:
                    ////                            //                if (tempstaffcode == "")
                    ////                            //                {
                    ////                            //                    countpresent = 0;
                    ////                            //                    counteveningpresent = 0;
                    ////                            //                    countmorningabsent = 0;
                    ////                            //                    countmorningpermission = 0;
                    ////                            //                    counteveninglate = 0;
                    ////                            //                    counteveningpermission = 0;
                    ////                            //                    counteveningabsent = 0;
                    ////                            //                    countmorninglate = 0;
                    ////                            //                    countpermission = 0;
                    ////                            //                    category = d1.Tables[0].Rows[h]["category_name"].ToString();
                    ////                            //                    //Added By SRinath 26/4/2014=========Start====
                    ////                            //                    if (strtempdept != d1.Tables[0].Rows[h]["dept_name"].ToString())
                    ////                            //                    {
                    ////                            //                        strtempdept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                    ////                            //                        fpbiomatric.Sheets[0].RowCount += 1;
                    ////                            //                        int col = 0;
                    ////                            //                        if (cblsearch.Items[0].Selected == false)
                    ////                            //                        {
                    ////                            //                            col = 0;
                    ////                            //                        }
                    ////                            //                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Text = strtempdept;
                    ////                            //                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Font.Bold = true;
                    ////                            //                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].VerticalAlign = VerticalAlign.Middle;
                    ////                            //                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].BackColor = Color.LightYellow;
                    ////                            //                        fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, col, 1, fpbiomatric.Sheets[0].ColumnCount);
                    ////                            //                    }
                    ////                            //                    //=======================End===================
                    ////                            //                    fpbiomatric.Sheets[0].RowCount += 1;
                    ////                            //                    tempstaffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                    ////                            //                }
                    ////                            //                else if ((tempstaffcode != "") && (tempstaffcode != d1.Tables[0].Rows[h]["staff_code"].ToString()))
                    ////                            //                {
                    ////                            //                    countpresent = 0;
                    ////                            //                    counteveningpresent = 0;
                    ////                            //                    countmorningabsent = 0;
                    ////                            //                    countpermission = 0;
                    ////                            //                    countmorningpermission = 0;
                    ////                            //                    counteveninglate = 0;
                    ////                            //                    counteveningpermission = 0;
                    ////                            //                    counteveningabsent = 0;
                    ////                            //                    countmorninglate = 0;
                    ////                            //                    c = 0;
                    ////                            //                    d = 0;
                    ////                            //                    g = 0;
                    ////                            //                    f = 0;
                    ////                            //                    percentage = 0;
                    ////                            //                    countmorningabsent = 0;
                    ////                            //                    countlateforstaff = 0;
                    ////                            //                    counteveningabsent = 0;
                    ////                            //                    countmorninglate = 0;
                    ////                            //                    counteveninglate = 0;
                    ////                            //                    countmorningpermission = 0;
                    ////                            //                    counteveningpermission = 0;

                    ////                            //                    //Added By SRinath 26/4/2014=========Start====
                    ////                            //                    if (strtempdept != d1.Tables[0].Rows[h]["dept_name"].ToString())
                    ////                            //                    {
                    ////                            //                        strtempdept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                    ////                            //                        fpbiomatric.Sheets[0].RowCount += 1;
                    ////                            //                        int col = 0;
                    ////                            //                        if (cblsearch.Items[0].Selected == false)
                    ////                            //                        {
                    ////                            //                            col = 0;
                    ////                            //                        }
                    ////                            //                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Text = strtempdept;
                    ////                            //                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Font.Bold = true;
                    ////                            //                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].VerticalAlign = VerticalAlign.Middle;
                    ////                            //                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].BackColor = Color.LightYellow;
                    ////                            //                        fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, col, 1, fpbiomatric.Sheets[0].ColumnCount);
                    ////                            //                    }
                    ////                            //                    //=======================End===================
                    ////                            //                    fpbiomatric.Sheets[0].RowCount += 1;
                    ////                            //                    tempstaffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                    ////                            //                }
                    ////                            //                Buttontotal.Visible = false;
                    ////                            //                DropDownListpage.Visible = false;
                    ////                            //                TextBoxpage.Visible = false;
                    ////                            //                lblrecord.Visible = false;
                    ////                            //                lblrecord.Visible = false;
                    ////                            //                lblpage.Visible = false;
                    ////                            //                Imgeveper.Visible = true;
                    ////                            //                Lblgracetime.Visible = true;
                    ////                            //                btnontime.Visible = true;
                    ////                            //                lblontime.Visible = true;
                    ////                            //                Imgmorper.Visible = true;
                    ////                            //                Imglate.Visible = true;
                    ////                            //                late.Visible = true;
                    ////                            //                Imgood.Visible = true;
                    ////                            //                btnmorabsent.Visible = true;
                    ////                            //                btneveabsent.Visible = true;
                    ////                            //                btnevepresent.Visible = true;
                    ////                            //                btnmorabsent.Visible = true;
                    ////                            //                lblmorpresent.Visible = true;
                    ////                            //                lblevepresent.Visible = true;
                    ////                            //                lblevepresent.Visible = true;
                    ////                            //                lbleveabsent.Visible = true;
                    ////                            //                lblmorabsent.Visible = true;
                    ////                            //                btnmorpresent.Visible = true;
                    ////                            //                lbldate.Visible = true; //Modified by Manikandan 09/05/2013
                    ////                            //                lblevngpermission.Visible = true;
                    ////                            //                lblood.Visible = true;
                    ////                            //                lblpermission.Visible = true;
                    ////                            //                btngracetime.Visible = true;
                    ////                            //                rowstr = Convert.ToInt32(fpbiomatric.Sheets[0].RowCount);
                    ////                            //                fpbiomatric.Visible = true;
                    ////                            //                btnprintmaster.Visible = true;
                    ////                            //                string staffcode = "";
                    ////                            //                string staffname = "";
                    ////                            //                string dept = "";
                    ////                            //                string design = "";
                    ////                            //                string dept_acronym = "";
                    ////                            //                string desig_acronym = "";

                    ////                            //                string doj = "";
                    ////                            //                string intime = "";
                    ////                            //                string outtime = "";
                    ////                            //                string Totalhours = "";

                    ////                            //                fpbiomatric.Sheets[0].SetColumnWidth(3, 250);

                    ////                            //                staffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                    ////                            //                staffname = d1.Tables[0].Rows[h]["staff_name"].ToString();
                    ////                            //                DataSet sds = new DataSet();
                    ////                            //                DAccess2 sda = new DAccess2();
                    ////                            //                sds.Clear();
                    ////                            //                string ssql = "select title from staff_appl_master,staffmaster  where staff_appl_master.appl_no=staffmaster.appl_no  and staffmaster.staff_code='" + staffcode + "'";
                    ////                            //                sds = sda.select_method_wo_parameter(ssql, "Text");
                    ////                            //                if (sds.Tables[0].Rows.Count > 0)
                    ////                            //                {
                    ////                            //                    if (sds.Tables[0].Rows[0][0].ToString() != "")
                    ////                            //                    {
                    ////                            //                        staffname = sds.Tables[0].Rows[0][0].ToString() + d1.Tables[0].Rows[h]["staff_name"].ToString();
                    ////                            //                    }
                    ////                            //                }

                    ////                            //                dept_acronym = d1.Tables[0].Rows[h]["dept_acronym"].ToString();
                    ////                            //                desig_acronym = d1.Tables[0].Rows[h]["desig_acronym"].ToString();
                    ////                            //                dept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                    ////                            //                design = d1.Tables[0].Rows[h]["desig_name"].ToString();

                    ////                            //                doj = d1.Tables[0].Rows[h]["join_date"].ToString();
                    ////                            //                fpbiomatric.Sheets[0].FrozenColumnCount = 4;

                    ////                            //                string tmp_course = "";
                    ////                            //                int getprevrow_cnt = 0;
                    ////                            //                int initor_cnt = 0;
                    ////                            //                //if (cnt == 0 || stsflag == false)
                    ////                            //                //{
                    ////                            //                //    sno++;                                                
                    ////                            //                //}
                    ////                            //                //if (colcount==cnt)
                    ////                            //                //{
                    ////                            //                //    newserialno++;
                    ////                            //                if (!staffsno.Contains(staffcode))
                    ////                            //                {
                    ////                            //                    newserialno++;
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text = Convert.ToString(newserialno);
                    ////                            //                    staffsno.Add(staffcode);
                    ////                            //                }

                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 1].Text = staffcode;
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 2].Text = staffname;
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 3].Text = dept;
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 4].Text = dept_acronym;
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 5].Text = design;
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 6].Text = desig_acronym;
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 7].Text = doj;
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 8].Text = category;
                    ////                            //                //}
                    ////                            //                //else
                    ////                            //                //{
                    ////                            //                //    if (fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text.Trim() == "")
                    ////                            //                //    {
                    ////                            //                //        newserialno++;
                    ////                            //                //    }
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text = Convert.ToString(newserialno);
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 1].Text = staffcode;
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 2].Text = staffname;
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 3].Text = dept;
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 4].Text = dept_acronym;
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 5].Text = design;
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 6].Text = desig_acronym;
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 7].Text = doj;
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 8].Text = category;
                    ////                            //                //}
                    ////                            //                //fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text = sno.ToString();
                    ////                            //                //fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;

                    ////                            //                //if (sts == false)
                    ////                            //                //{
                    ////                            //                //    sno++;
                    ////                            //                //}
                    ////                            //                string mrng = "";
                    ////                            //                string evng = "";
                    ////                            //                //d1.Tables[0].Rows[h]["att"].ToString();
                    ////                            //                string att = "";
                    ////                            //                dsAtt.Tables[0].DefaultView.RowFilter = "staff_code='" + staffcode + "' and mon_year='" + splitdate[0] + '/' + splitdate[2] + "'";
                    ////                            //                DataView dvatt = dsAtt.Tables[0].DefaultView;
                    ////                            //                if (dvatt.Count > 0)
                    ////                            //                {
                    ////                            //                    if (d1.Tables[0].Rows[h]["att"].ToString() == dvatt[0][splitdate[1]].ToString())
                    ////                            //                    {
                    ////                            //                        att = d1.Tables[0].Rows[h]["att"].ToString();
                    ////                            //                        stsflag = false;
                    ////                            //                    }
                    ////                            //                    else
                    ////                            //                    {
                    ////                            //                        stsflag = true;
                    ////                            //                        att = dvatt[0][splitdate[1]].ToString();
                    ////                            //                    }
                    ////                            //                }
                    ////                            //                if (att != "")
                    ////                            //                {
                    ////                            //                    string[] tmpdate = att.Split(new char[] { '-' });
                    ////                            //                    mrng = tmpdate[0].ToString();
                    ////                            //                    evng = tmpdate[1].ToString();
                    ////                            //                }
                    ////                            //                //if (accessdate == entrydate1)
                    ////                            //                //{
                    ////                            //                //intime = d1.Tables[0].Rows[h]["time_in"].ToString();
                    ////                            //                //outtime = d1.Tables[0].Rows[h]["time_out"].ToString();
                    ////                            //                //Totalhours = d1.Tables[0].Rows[h]["TotalHours"].ToString();
                    ////                            //                //if (Convert.ToDateTime(intime) <= Convert.ToDateTime(timein3))
                    ////                            //                //{
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                //}
                    ////                            //                //if ((Convert.ToDateTime(intime) <= Convert.ToDateTime(gracetime3)) && (Convert.ToDateTime(intime) > Convert.ToDateTime(timein3)))
                    ////                            //                //{
                    ////                            //                //    //  countgracetime = countgracetime + 1;
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.Pink;
                    ////                            //                //}

                    ////                            //                //if ((Convert.ToDateTime(intime) > Convert.ToDateTime(gracetime3)))
                    ////                            //                //{
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                //}
                    ////                            //                //else if ((Convert.ToDateTime(intime) <= Convert.ToDateTime(extendgracetime)) && (Convert.ToDateTime(intime) > Convert.ToDateTime(gracetime3)))
                    ////                            //                //{
                    ////                            //                //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                //}
                    ////                            //                //fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;

                    ////                            //                //else
                    ////                            //                //{
                    ////                            //                if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                    ////                            //                {
                    ////                            //                    if (stsflag)
                    ////                            //                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                }
                    ////                            //                if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                    ////                            //                {
                    ////                            //                    if (stsflag)
                    ////                            //                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                    ////                            //                }
                    ////                            //                //}

                    ////                            //                if (Totalhours != "")
                    ////                            //                {
                    ////                            //                    string totalhours4;
                    ////                            //                    string[] split28 = Totalhours.Split(new Char[] { ':' });
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 2].Text = Convert.ToString(split28[0]) + ":" + split28[1].ToString();
                    ////                            //                }
                    ////                            //                else
                    ////                            //                {
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 2].Text = Totalhours;
                    ////                            //                }

                    ////                            //                int setcount = 0;
                    ////                            //                setcount = colcount;

                    ////                            //                if (mrng == "P")
                    ////                            //                {
                    ////                            //                    //25nov2013 countpresent++;     
                    ////                            //                    //added by srinath 12/3/2014 
                    ////                            //                    if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                    ////                            //                    {
                    ////                            //                        if (stsflag)
                    ////                            //                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                    }
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Green;
                    ////                            //                    //if (stsflag == false && attcnt == 1)
                    ////                            //                    //{
                    ////                            //                    //counttotalmorpresent++;
                    ////                            //                    //countpresent++;
                    ////                            //                    //}
                    ////                            //                    //else
                    ////                            //                    //{
                    ////                            //                    if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                    ////                            //                    {
                    ////                            //                        counttotalmorpresent++;
                    ////                            //                        countpresent++;
                    ////                            //                    }
                    ////                            //                    //}
                    ////                            //                }
                    ////                            //                if (evng == "P")
                    ////                            //                {
                    ////                            //                    //25nov2013counteveningpresent++;
                    ////                            //                    //added by srinath 12/3/2014 
                    ////                            //                    if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                    ////                            //                    {
                    ////                            //                        if (stsflag)
                    ////                            //                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                    ////                            //                    }
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Green;
                    ////                            //                    //if (stsflag == false && attcnt == 1)
                    ////                            //                    //{
                    ////                            //                    //counttotalevepresent++;
                    ////                            //                    //counteveningpresent++;
                    ////                            //                    //}
                    ////                            //                    //else
                    ////                            //                    //{
                    ////                            //                    if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                    ////                            //                    {
                    ////                            //                        counttotalevepresent++;
                    ////                            //                        counteveningpresent++;
                    ////                            //                    }
                    ////                            //                    //}
                    ////                            //                }


                    ////                            //                //25nov2013 totalperesent = countpresent + counteveningpresent;
                    ////                            //                //25nov2013 totalperesent = totalperesent / 2;

                    ////                            //                //added by srinath 12/3/2014 
                    ////                            //                totalperesent = countpresent + counteveningpresent;
                    ////                            //                totalperesent = totalperesent / 2;

                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].Text = Convert.ToDouble(totalperesent).ToString();
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //                g = Convert.ToDouble(fpbiomatric.Sheets[0].GetText(rowstr - 1, 10).ToString());

                    ////                            //                totpresent = totpresent + Convert.ToDouble(fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].Text);

                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].HorizontalAlign = HorizontalAlign.Center;

                    ////                            //                c = g * 100;

                    ////                            //                d = Convert.ToDouble(day3) - holiday;
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].Text = d.ToString();
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //                if ((c != 0) && (d != 0))
                    ////                            //                {
                    ////                            //                    percentage = Convert.ToDouble(c) / Convert.ToDouble(d);
                    ////                            //                    percentage = Math.Round(percentage, 2);
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].Text = percentage.ToString();
                    ////                            //                }

                    ////                            //                if (mrng == "A")
                    ////                            //                {
                    ////                            //                    //25nov2013 countmorningabsent = countmorningabsent + 1;   
                    ////                            //                    //added by srinath 12/3/2014 
                    ////                            //                    //if (stsflag == false && attcnt == 1)
                    ////                            //                    //{
                    ////                            //                    //    countmorningabsent = countmorningabsent + 1;
                    ////                            //                    //    countmortotalabsent += 1;
                    ////                            //                    //}
                    ////                            //                    //else
                    ////                            //                    //{
                    ////                            //                    if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                    ////                            //                    {
                    ////                            //                        countmorningabsent = countmorningabsent + 1;
                    ////                            //                        countmortotalabsent += 1;
                    ////                            //                    }
                    ////                            //                    //}
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Red;

                    ////                            //                }
                    ////                            //                if (evng == "A")
                    ////                            //                {
                    ////                            //                    //25nov2013 counteveningabsent = counteveningabsent + 1;  
                    ////                            //                    //added by srinath 12/3/2014 
                    ////                            //                    //if (stsflag == false && attcnt == 1)
                    ////                            //                    //{
                    ////                            //                    //    countevetotalabsent += 1;
                    ////                            //                    //    counteveningabsent = counteveningabsent + 1;
                    ////                            //                    //}
                    ////                            //                    //else
                    ////                            //                    //{
                    ////                            //                    if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                    ////                            //                    {
                    ////                            //                        countevetotalabsent += 1;
                    ////                            //                        counteveningabsent = counteveningabsent + 1;
                    ////                            //                    }
                    ////                            //                    //}
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Red;

                    ////                            //                }
                    ////                            //                //25nov2013 totalabsent = counteveningabsent + countmorningabsent;
                    ////                            //                //25nov2013 totalabsent = totalabsent / 2;

                    ////                            //                //added by srinath 12/3/2014 
                    ////                            //                totalabsent = counteveningabsent + countmorningabsent;
                    ////                            //                totalabsent = totalabsent / 2;
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text = Convert.ToDouble(totalabsent).ToString();
                    ////                            //                totabsent = totabsent + Convert.ToDouble(fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text);
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //                if (mrng == "LA")
                    ////                            //                {
                    ////                            //                    //25nov2013 countmorninglate++;
                    ////                            //                    //added by srinath 12/3/2014    

                    ////                            //                    //if (accessdate == entrydate1)
                    ////                            //                    //{
                    ////                            //                    //fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                    //fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkRed;
                    ////                            //                    //}
                    ////                            //                    //if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                    ////                            //                    //{
                    ////                            //                    //    if (stsflag)
                    ////                            //                    //        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                    //}
                    ////                            //                    if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                    ////                            //                    {
                    ////                            //                        if (stsflag)
                    ////                            //                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.White;
                    ////                            //                    }
                    ////                            //                    else
                    ////                            //                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.DarkRed;
                    ////                            //                    //if (stsflag == false && attcnt == 1)
                    ////                            //                    //{
                    ////                            //                    //countmorninglate++;
                    ////                            //                    //}
                    ////                            //                    //else
                    ////                            //                    //{
                    ////                            //                    if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                    ////                            //                    {
                    ////                            //                        countmorninglate++;
                    ////                            //                    }
                    ////                            //                    //}

                    ////                            //                }
                    ////                            //                if (evng == "LA")
                    ////                            //                {
                    ////                            //                    //if (stsflag == false && attcnt == 1)
                    ////                            //                    //{
                    ////                            //                    //counteveninglate = counteveninglate + 1;
                    ////                            //                    //}
                    ////                            //                    //else
                    ////                            //                    //{
                    ////                            //                    if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                    ////                            //                    {
                    ////                            //                        counteveninglate = counteveninglate + 1;
                    ////                            //                    }
                    ////                            //                    //}
                    ////                            //                }
                    ////                            //                //25nov2013 totallate = countmorninglate + counteveninglate;
                    ////                            //                //25nov2013 totallate = totallate / 2;
                    ////                            //                //added by srinath 12/3/2014 
                    ////                            //                totallate = countmorninglate + counteveninglate;
                    ////                            //                totallate = totallate / 2;

                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].Text = Convert.ToDouble(totallate).ToString();
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].HorizontalAlign = HorizontalAlign.Center;

                    ////                            //                if (mrng == "PER")
                    ////                            //                {
                    ////                            //                    // countpereng++;
                    ////                            //                    //25nov2013 countpermission = countpermission + 1;
                    ////                            //                    //added by srinath 12/3/2014 

                    ////                            //                    //if (accessdate == entrydate1)
                    ////                            //                    //{
                    ////                            //                    //fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                    //fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.BurlyWood;
                    ////                            //                    //}

                    ////                            //                    if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                    ////                            //                    {
                    ////                            //                        if (stsflag)
                    ////                            //                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.White;
                    ////                            //                    }
                    ////                            //                    else
                    ////                            //                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.BurlyWood;
                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.BurlyWood;

                    ////                            //                    //25nov2013  countmorningpermission = countmorningpermission + 1;
                    ////                            //                    //added by srinath 12/3/2014 
                    ////                            //                    //if (stsflag == false && attcnt == 1)
                    ////                            //                    //{
                    ////                            //                    //    countpermission = countpermission + 1;
                    ////                            //                    //    countmorningpermission = countmorningpermission + 1;
                    ////                            //                    //}
                    ////                            //                    //else
                    ////                            //                    //{
                    ////                            //                    if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                    ////                            //                    {
                    ////                            //                        countpermission = countpermission + 1;
                    ////                            //                        countmorningpermission = countmorningpermission + 1;
                    ////                            //                    }
                    ////                            //                    //}

                    ////                            //                }
                    ////                            //                if (evng == "PER")
                    ////                            //                {

                    ////                            //                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.BurlyWood;
                    ////                            //                    //if (accessdate == entrydate1)
                    ////                            //                    //{
                    ////                            //                    //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].BackColor = Color.Chocolate;
                    ////                            //                    //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                    ////                            //                    //}
                    ////                            //                    if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                    ////                            //                    {
                    ////                            //                        if (stsflag)
                    ////                            //                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                    ////                            //                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].BackColor = Color.White;
                    ////                            //                    }
                    ////                            //                    else
                    ////                            //                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].BackColor = Color.Chocolate;
                    ////                            //                    //25nov2013 countpermission2 = countpermission2 + 1;
                    ////                            //                    //25nov2013 counteveningpermission++;

                    ////                            //                    //added by srinath 12/3/2014 
                    ////                            //                    //if (stsflag == false && attcnt == 1)
                    ////                            //                    //{
                    ////                            //                    //eveningpermission++;
                    ////                            //                    //countpermission2 = countpermission2 + 1;
                    ////                            //                    //counteveningpermission++;
                    ////                            //                    //}
                    ////                            //                    //else
                    ////                            //                    //{
                    ////                            //                    if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                    ////                            //                    {
                    ////                            //                        eveningpermission++;
                    ////                            //                        countpermission2 = countpermission2 + 1;
                    ////                            //                        counteveningpermission++;
                    ////                            //                    }
                    ////                            //                    //}

                    ////                            //                }
                    ////                            //                //25nov2013 totalpermission = countmorningpermission + counteveningpermission;
                    ////                            //                //  totalpermission = totalpermission / 2; //modified by srinath

                    ////                            //                //added by srinath 12/3/2014 
                    ////                            //                totalpermission = countmorningpermission + counteveningpermission;
                    ////                            //                totalpermission = totalpermission / 2;

                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 13].Text = Convert.ToDouble(totalpermission).ToString();
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 13].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //                if (mrng == "OOD")
                    ////                            //                {
                    ////                            //                    //if (accessdate == entrydate1)
                    ////                            //                    //{
                    ////                            //                    //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                    //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.DarkSeaGreen;
                    ////                            //                    //}
                    ////                            //                    if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                    ////                            //                    {
                    ////                            //                        if (stsflag)
                    ////                            //                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.White;
                    ////                            //                    }
                    ////                            //                    else
                    ////                            //                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.DarkSeaGreen;
                    ////                            //                }
                    ////                            //                fpbiomatric.Sheets[0].Columns[4].Visible = false;
                    ////                            //                fpbiomatric.Sheets[0].Columns[6].Visible = false;
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].Text = mrng.ToString();
                    ////                            //                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].Text = evng.ToString();
                    ////                            //                Panel2.Visible = true;
                    ////                            //            }
                    ////                            //            Session.Remove("datefrom");
                    ////                            //            Session.Remove("dateto");
                    ////                            //            continue;
                    ////                            //        }

                    ////                            //    }
                    ////                            ////else
                    ////                            ////{

                    ////                            //        //}

                    ////                            //            ////////////////////////// }
                    ////                            //// h++;
                    ////                            ////}
                    ////                            //lbl2: if (hcount > h)
                    ////                            //    {
                    ////                            //        //h++;
                    ////                            //        //sno--;
                    ////                            //    }
                    ////                            //    //}
                    ////                            //    //else
                    ////                            //    //{
                    ////                            //    //    if (dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString() == d1.Tables[0].Rows[h]["staff_code"].ToString())
                    ////                            //    //    {
                    ////                            //    //        //category8 = d1.Tables[0].Rows[h]["category_name"].ToString();
                    ////                            //    //        //timein8 = d1.Tables[0].Rows[h]["time_in"].ToString();
                    ////                            //    //        //string timein3 = d1.Tables[0].Rows[h]["ontime"].ToString();

                    ////                            //    //        //string gracetime3 = d1.Tables[0].Rows[h]["gracetime"].ToString();
                    ////                            //    //        //string extendgracetime = d1.Tables[0].Rows[h]["extendgracetime"].ToString();


                    ////                            //    //        category8 = d1.Tables[0].Rows[h]["category_name"].ToString();
                    ////                            //    //        timein8 = "";
                    ////                            //    //        string timein3 = "";

                    ////                            //    //        string gracetime3 = d1.Tables[0].Rows[h]["gracetime"].ToString();
                    ////                            //    //        string extendgracetime = d1.Tables[0].Rows[h]["extendgracetime"].ToString();
                    ////                            //    //        //if (stsflag == false)
                    ////                            //    //        //{
                    ////                            //    //        //}

                    ////                            //    //        fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount, 1, 5);
                    ////                            //    //        fpbiomatric.ActiveSheetView.Columns[colcount].Font.Size = FontUnit.Medium;
                    ////                            //    //        fpbiomatric.ActiveSheetView.Columns[colcount].Font.Name = "Book Antiqua";
                    ////                            //    //        fpbiomatric.ActiveSheetView.Columns[colcount + 1].Font.Size = FontUnit.Medium;
                    ////                            //    //        fpbiomatric.ActiveSheetView.Columns[colcount + 1].Font.Name = "Book Antiqua";
                    ////                            //    //        fpbiomatric.ActiveSheetView.Columns[colcount + 2].Font.Size = FontUnit.Medium;
                    ////                            //    //        fpbiomatric.ActiveSheetView.Columns[colcount + 2].Font.Name = "Book Antiqua";

                    ////                            //    //        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount].Text = "In";
                    ////                            //    //        fpbiomatric.Sheets[0].SetColumnWidth(colcount, 60);
                    ////                            //    //        fpbiomatric.Sheets[0].Columns[colcount].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //    //        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount + 1].Text = "Out";
                    ////                            //    //        fpbiomatric.Sheets[0].SetColumnWidth(colcount + 1, 60);
                    ////                            //    //        fpbiomatric.Sheets[0].Columns[colcount + 1].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //    //        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount + 2].Text = "Tot";
                    ////                            //    //        fpbiomatric.Sheets[0].SetColumnWidth(colcount + 2, 60);
                    ////                            //    //        fpbiomatric.Sheets[0].Columns[colcount + 2].HorizontalAlign = HorizontalAlign.Center;

                    ////                            //    //        fpbiomatric.ActiveSheetView.Columns[colcount + 3].Font.Size = FontUnit.Medium;
                    ////                            //    //        fpbiomatric.ActiveSheetView.Columns[colcount + 3].Font.Name = "Book Antiqua";
                    ////                            //    //        fpbiomatric.ActiveSheetView.Columns[colcount + 4].Font.Size = FontUnit.Medium;
                    ////                            //    //        fpbiomatric.ActiveSheetView.Columns[colcount + 4].Font.Name = "Book Antiqua";

                    ////                            //    //        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //    //        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;

                    ////                            //    //        strdate = " and bio_attendance.access_date='" + datetagvalue + "'";

                    ////                            //    //        //Start 05july2013------------------------------------------------------------------------------------

                    ////                            //    //        if (cbo_att.Items[0].Selected == true)
                    ////                            //    //        {
                    ////                            //    //            if (rdomorning.Checked == true)
                    ////                            //    //            {
                    ////                            //    //                //Str = " and left(att,2)='P-'";
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;
                    ////                            //    //            }
                    ////                            //    //            else if (rdoevening.Checked == true)
                    ////                            //    //            {
                    ////                            //    //                //Str = " and right(att,2)='-P'";
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                    ////                            //    //            }
                    ////                            //    //            else if (rdoall.Checked == true)
                    ////                            //    //            {
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[9].Visible = true;
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[10].Visible = true;
                    ////                            //    //                //Str = " and att like '%P%'";
                    ////                            //    //            }
                    ////                            //    //            else if (rdoboth.Checked == true)
                    ////                            //    //            {
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[9].Visible = true;
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[10].Visible = true;
                    ////                            //    //                //Str = " and att='P-P'";
                    ////                            //    //            }
                    ////                            //    //        }
                    ////                            //    //        if (cbo_att.Items[1].Selected == true)
                    ////                            //    //        {
                    ////                            //    //            if (rdomorning.Checked == true)
                    ////                            //    //            {
                    ////                            //    //                // Str = " and left(att,2)='A-'";
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;

                    ////                            //    //            }
                    ////                            //    //            else if (rdoevening.Checked == true)
                    ////                            //    //            {
                    ////                            //    //                //Str = " and right(att,2)='-A'";
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                    ////                            //    //            }
                    ////                            //    //            else if (rdoall.Checked == true)
                    ////                            //    //            {
                    ////                            //    //                // Str = " and att like '%A%'";
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //    //            }
                    ////                            //    //            else if (rdoboth.Checked == true)
                    ////                            //    //            {
                    ////                            //    //                // Str = " and att='A-A'";
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //    //            }
                    ////                            //    //        }
                    ////                            //    //        if (cbo_att.Items[2].Selected == true)
                    ////                            //    //        {
                    ////                            //    //            if (rdomorning.Checked == true)
                    ////                            //    //            {
                    ////                            //    //                //Str = " and left(att,3)='LA-'";
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //    //            }
                    ////                            //    //            else if (rdoevening.Checked == true)
                    ////                            //    //            {
                    ////                            //    //                //Str = " and right(att,3)='-LA'";
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //    //            }

                    ////                            //    //            else if (rdoall.Checked == true)
                    ////                            //    //            {
                    ////                            //    //                //Str = " and att like '%LA%'";
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //    //            }

                    ////                            //    //            else if (rdoboth.Checked == true)
                    ////                            //    //            {
                    ////                            //    //                //Str = " and att='LA-LA'";

                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //    //            }
                    ////                            //    //        }
                    ////                            //    //        if (cbo_att.Items[3].Selected == true)
                    ////                            //    //        {
                    ////                            //    //            if (rdomorning.Checked == true)
                    ////                            //    //            {
                    ////                            //    //                //Str = " and left(att,4)='PER-'";
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //    //            }
                    ////                            //    //            else if (rdoevening.Checked == true)
                    ////                            //    //            {
                    ////                            //    //                // Str = " and right(att,4)='-PER'";
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //    //            }
                    ////                            //    //            else if (rdoall.Checked == true)
                    ////                            //    //            {
                    ////                            //    //                //Str = " and att like '%PER%'";
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //    //            }
                    ////                            //    //            else if (rdoboth.Checked == true)
                    ////                            //    //            {
                    ////                            //    //                // Str = " and att='PER-PER'";

                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            //    //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            //    //            }
                    ////                            //    //        }

                    ////                            //    //        //End 05july2013----------------------------------------------------------------------------------


                    ////                            //    //        if (d1.Tables[0].Rows.Count != 0)
                    ////                            //    //        {
                    ////                            //    //        }
                    ////                            //    //        if (Chktimein.Checked == true)
                    ////                            //    //        {
                    ////                            //    //            strTime = "";
                    ////                            //    //            strTime = " and  Right(CONVERT(nvarchar(100),time_in ,100),7)  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "'";
                    ////                            //    //        }
                    ////                            //    //        else if (Chktimeout.Checked == true)
                    ////                            //    //        {
                    ////                            //    //            strTime = "";
                    ////                            //    //            strTime = " AND Right(CONVERT(nvarchar(100),time_Out ,100),7) between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";
                    ////                            //    //        }

                    ////                            //    //        if ((Chktimein.Checked == true) && (Chktimeout.Checked == true))
                    ////                            //    //        {
                    ////                            //    //            strTime = "";

                    ////                            //    //            strTime = " and  Right(CONVERT(nvarchar(100),time_in ,100),7)  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "' AND Right(CONVERT(nvarchar(100),time_Out ,100),7) between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";

                    ////                            //    //        }
                    ////                            //    //        if (strTime != null)
                    ////                            //    //        {
                    ////                            //    //            sql = sql + " " + strTime + "";
                    ////                            //    //        }
                    ////                            //    //        // sql = sql + " order by hrdept_master.dept_name";
                    ////                            //    //        sql = sql + " order by hrdept_master.dept_name,len(staffmaster.staff_code),staffmaster.staff_code";//Modified By Srinath 28/3/2014 ";


                    ////                            //    //        con.Close();
                    ////                            //    //        con.Open();
                    ////                            //    //        fpbiomatric.Width = 1000;
                    ////                            //    //        lblnorec.Visible = false;

                    ////                            //    //        int datval = 0;
                    ////                            //    //        int rowcnt = 0;
                    ////                            //    //        int rowstr = 0;

                    ////                            //    //        int countlateforstaff = 0;

                    ////                            //    //        //   drcount14 = cmd7.ExecuteReader();
                    ////                            //    //        // drcount14.Read();
                    ////                            //    //        // lbl2:
                    ////                            //    //        //while (drcount14.Read())
                    ////                            //    //        //  for (int i = 0; i < d1.Tables[0].Rows.Count;i++)
                    ////                            //    //        //{

                    ////                            //    //        if (d1.Tables[0].Rows.Count != 0)
                    ////                            //    //        {

                    ////                            //    //            string category = "";
                    ////                            //    //            string timein = "";
                    ////                            //    //            string gracetime = "";

                    ////                            //    //            //if (gracetimeflag == true)
                    ////                            //    //            //{
                    ////                            //    //            //    if ((Convert.ToDateTime(timein8) <= Convert.ToDateTime(gracetime3)) && (Convert.ToDateTime(timein8) > Convert.ToDateTime(timein3)))
                    ////                            //    //            //    {
                    ////                            //    //            //        goto lbl3;
                    ////                            //    //            //    }
                    ////                            //    //            //    else
                    ////                            //    //            //    {
                    ////                            //    //            //        goto lbl4;
                    ////                            //    //            //    }
                    ////                            //    //            //}
                    ////                            //    //            //else if (ontimeflag == true)
                    ////                            //    //            //{
                    ////                            //    //            //    if (Convert.ToDateTime(timein8) <= Convert.ToDateTime(timein3))
                    ////                            //    //            //    {
                    ////                            //    //            //        goto lbl3;
                    ////                            //    //            //    }
                    ////                            //    //            //    else
                    ////                            //    //            //    {
                    ////                            //    //            //        goto lbl4;
                    ////                            //    //            //    }
                    ////                            //    //            //}
                    ////                            //    //            //else if (Generalflag == false)
                    ////                            //    //            //{
                    ////                            //    //            //    goto lbl3;
                    ////                            //    //            //}                                            

                    ////                            //    //            if (tempstaffcode == "")
                    ////                            //    //            {

                    ////                            //    //                countpresent = 0;
                    ////                            //    //                counteveningpresent = 0;
                    ////                            //    //                countmorningabsent = 0;
                    ////                            //    //                countmorningpermission = 0;
                    ////                            //    //                counteveninglate = 0;
                    ////                            //    //                counteveningpermission = 0;
                    ////                            //    //                counteveningabsent = 0;
                    ////                            //    //                countmorninglate = 0;
                    ////                            //    //                countpermission = 0;
                    ////                            //    //                category = d1.Tables[0].Rows[h]["category_name"].ToString();
                    ////                            //    //                //Added By SRinath 26/4/2014=========Start====
                    ////                            //    //                if (strtempdept != d1.Tables[0].Rows[h]["dept_name"].ToString())
                    ////                            //    //                {
                    ////                            //    //                    strtempdept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                    ////                            //    //                    fpbiomatric.Sheets[0].RowCount += 1;
                    ////                            //    //                    int col = 0;
                    ////                            //    //                    if (cblsearch.Items[0].Selected == false)
                    ////                            //    //                    {
                    ////                            //    //                        col = 0;
                    ////                            //    //                    }
                    ////                            //    //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Text = strtempdept;
                    ////                            //    //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Font.Bold = true;
                    ////                            //    //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //    //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].VerticalAlign = VerticalAlign.Middle;
                    ////                            //    //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].BackColor = Color.LightYellow;
                    ////                            //    //                    fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, col, 1, fpbiomatric.Sheets[0].ColumnCount);
                    ////                            //    //                }
                    ////                            //    //                //=======================End===================
                    ////                            //    //                fpbiomatric.Sheets[0].RowCount += 1;
                    ////                            //    //                tempstaffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                    ////                            //    //            }
                    ////                            //    //            else if ((tempstaffcode != "") && (tempstaffcode != d1.Tables[0].Rows[h]["staff_code"].ToString()))
                    ////                            //    //            {

                    ////                            //    //                countpresent = 0;
                    ////                            //    //                counteveningpresent = 0;
                    ////                            //    //                countmorningabsent = 0;
                    ////                            //    //                countpermission = 0;
                    ////                            //    //                countmorningpermission = 0;
                    ////                            //    //                counteveninglate = 0;
                    ////                            //    //                counteveningpermission = 0;
                    ////                            //    //                counteveningabsent = 0;
                    ////                            //    //                countmorninglate = 0;

                    ////                            //    //                c = 0;
                    ////                            //    //                d = 0;
                    ////                            //    //                g = 0;
                    ////                            //    //                f = 0;
                    ////                            //    //                percentage = 0;
                    ////                            //    //                countmorningabsent = 0;
                    ////                            //    //                countlateforstaff = 0;
                    ////                            //    //                counteveningabsent = 0;
                    ////                            //    //                countmorninglate = 0;
                    ////                            //    //                counteveninglate = 0;
                    ////                            //    //                countmorningpermission = 0;
                    ////                            //    //                counteveningpermission = 0;

                    ////                            //    //                //Added By SRinath 26/4/2014=========Start====
                    ////                            //    //                if (strtempdept != d1.Tables[0].Rows[h]["dept_name"].ToString())
                    ////                            //    //                {
                    ////                            //    //                    strtempdept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                    ////                            //    //                    fpbiomatric.Sheets[0].RowCount += 1;
                    ////                            //    //                    int col = 0;
                    ////                            //    //                    if (cblsearch.Items[0].Selected == false)
                    ////                            //    //                    {
                    ////                            //    //                        col = 0;
                    ////                            //    //                    }
                    ////                            //    //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Text = strtempdept;
                    ////                            //    //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Font.Bold = true;
                    ////                            //    //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //    //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].VerticalAlign = VerticalAlign.Middle;
                    ////                            //    //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].BackColor = Color.LightYellow;
                    ////                            //    //                    fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, col, 1, fpbiomatric.Sheets[0].ColumnCount);
                    ////                            //    //                }
                    ////                            //    //                //=======================End===================
                    ////                            //    //                fpbiomatric.Sheets[0].RowCount += 1;
                    ////                            //    //                tempstaffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                    ////                            //    //            }
                    ////                            //    //            Buttontotal.Visible = false;
                    ////                            //    //            DropDownListpage.Visible = false;
                    ////                            //    //            TextBoxpage.Visible = false;
                    ////                            //    //            lblrecord.Visible = false;
                    ////                            //    //            lblrecord.Visible = false;
                    ////                            //    //            lblpage.Visible = false;
                    ////                            //    //            Imgeveper.Visible = true;
                    ////                            //    //            Lblgracetime.Visible = true;
                    ////                            //    //            btnontime.Visible = true;
                    ////                            //    //            lblontime.Visible = true;
                    ////                            //    //            Imgmorper.Visible = true;
                    ////                            //    //            Imglate.Visible = true;
                    ////                            //    //            late.Visible = true;
                    ////                            //    //            Imgood.Visible = true;
                    ////                            //    //            btnmorabsent.Visible = true;
                    ////                            //    //            btneveabsent.Visible = true;
                    ////                            //    //            btnevepresent.Visible = true;
                    ////                            //    //            btnmorabsent.Visible = true;
                    ////                            //    //            lblmorpresent.Visible = true;
                    ////                            //    //            lblevepresent.Visible = true;
                    ////                            //    //            lblevepresent.Visible = true;
                    ////                            //    //            lbleveabsent.Visible = true;
                    ////                            //    //            lblmorabsent.Visible = true;
                    ////                            //    //            btnmorpresent.Visible = true;
                    ////                            //    //            lbldate.Visible = true; //Modified by Manikandan 09/05/2013
                    ////                            //    //            lblevngpermission.Visible = true;
                    ////                            //    //            lblood.Visible = true;
                    ////                            //    //            lblpermission.Visible = true;
                    ////                            //    //            btngracetime.Visible = true;
                    ////                            //    //            rowstr = Convert.ToInt32(fpbiomatric.Sheets[0].RowCount);
                    ////                            //    //            fpbiomatric.Visible = true;
                    ////                            //    //            btnprintmaster.Visible = true;
                    ////                            //    //            string staffcode = "";
                    ////                            //    //            string staffname = "";
                    ////                            //    //            string dept = "";
                    ////                            //    //            string design = "";
                    ////                            //    //            string dept_acronym = "";
                    ////                            //    //            string desig_acronym = "";

                    ////                            //    //            string doj = "";
                    ////                            //    //            string intime = "";
                    ////                            //    //            string outtime = "";
                    ////                            //    //            string Totalhours = "";

                    ////                            //    //            fpbiomatric.Sheets[0].SetColumnWidth(3, 250);

                    ////                            //    //            staffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                    ////                            //    //            staffname = d1.Tables[0].Rows[h]["staff_name"].ToString();
                    ////                            //    //            DataSet sds = new DataSet();
                    ////                            //    //            DAccess2 sda = new DAccess2();
                    ////                            //    //            sds.Clear();
                    ////                            //    //            string ssql = "select title from staff_appl_master,staffmaster  where staff_appl_master.appl_no=staffmaster.appl_no  and staffmaster.staff_code='" + staffcode + "'";
                    ////                            //    //            sds = sda.select_method_wo_parameter(ssql, "Text");
                    ////                            //    //            if (sds.Tables[0].Rows.Count > 0)
                    ////                            //    //            {
                    ////                            //    //                if (sds.Tables[0].Rows[0][0].ToString() != "")
                    ////                            //    //                {
                    ////                            //    //                    staffname = sds.Tables[0].Rows[0][0].ToString() + d1.Tables[0].Rows[h]["staff_name"].ToString();
                    ////                            //    //                }
                    ////                            //    //            }

                    ////                            //    //            dept_acronym = d1.Tables[0].Rows[h]["dept_acronym"].ToString();
                    ////                            //    //            desig_acronym = d1.Tables[0].Rows[h]["desig_acronym"].ToString();
                    ////                            //    //            dept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                    ////                            //    //            design = d1.Tables[0].Rows[h]["desig_name"].ToString();

                    ////                            //    //            doj = d1.Tables[0].Rows[h]["join_date"].ToString();
                    ////                            //    //            intime = "";
                    ////                            //    //            outtime = "";
                    ////                            //    //            Totalhours = d1.Tables[0].Rows[h]["TotalHours"].ToString();

                    ////                            //    //            fpbiomatric.Sheets[0].FrozenColumnCount = 4;

                    ////                            //    //            string tmp_course = "";
                    ////                            //    //            int getprevrow_cnt = 0;
                    ////                            //    //            int initor_cnt = 0;
                    ////                            //    //            //if (cnt == 0 || stsflag == false)
                    ////                            //    //            //{
                    ////                            //    //            //    sno++;                                                
                    ////                            //    //            //}
                    ////                            //    //            if (colcount==cnt)
                    ////                            //    //            {
                    ////                            //    //                newserialno++;
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text = Convert.ToString(newserialno);
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 1].Text = staffcode;
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 2].Text = staffname;
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 3].Text = dept;
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 4].Text = dept_acronym;
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 5].Text = design;
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 6].Text = desig_acronym;
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 7].Text = doj;
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 8].Text = category;                                              
                    ////                            //    //            }
                    ////                            //    //            //else
                    ////                            //    //            //{
                    ////                            //    //            //    if (fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text.Trim() == "")
                    ////                            //    //            //    {
                    ////                            //    //            //        newserialno++;
                    ////                            //    //            //    }
                    ////                            //    //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text = Convert.ToString(newserialno);
                    ////                            //    //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //    //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 1].Text = staffcode;
                    ////                            //    //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 2].Text = staffname;
                    ////                            //    //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 3].Text = dept;
                    ////                            //    //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 4].Text = dept_acronym;
                    ////                            //    //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 5].Text = design;
                    ////                            //    //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 6].Text = desig_acronym;
                    ////                            //    //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 7].Text = doj;
                    ////                            //    //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 8].Text = category;
                    ////                            //    //            //}
                    ////                            //    //            //fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text = sno.ToString();
                    ////                            //    //            //fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;

                    ////                            //    //            //if (sts == false)
                    ////                            //    //            //{
                    ////                            //    //            //    sno++;
                    ////                            //    //            //}



                    ////                            //    //            string mrng = "";
                    ////                            //    //            string evng = "";
                    ////                            //    //            string att = d1.Tables[0].Rows[h]["att"].ToString();
                    ////                            //    //            dsAtt.Tables[0].DefaultView.RowFilter = "staff_code='" + staffcode + "' and mon_year='" + splitdate[0] + '/' + splitdate[2] + "'";
                    ////                            //    //            DataView dvatt = dsAtt.Tables[0].DefaultView;
                    ////                            //    //            if (dvatt.Count > 0)
                    ////                            //    //            {
                    ////                            //    //                att = dvatt[0][splitdate[1]].ToString();
                    ////                            //    //            }
                    ////                            //    //            if (att != "")
                    ////                            //    //            {
                    ////                            //    //                string[] tmpdate = att.Split(new char[] { '-' });
                    ////                            //    //                mrng = tmpdate[0].ToString();
                    ////                            //    //                evng = tmpdate[1].ToString();
                    ////                            //    //            }

                    ////                            //    //            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //    //            //}
                    ////                            //    //            //if ((Convert.ToDateTime(intime) <= Convert.ToDateTime(gracetime3)) && (Convert.ToDateTime(intime) > Convert.ToDateTime(timein3)))
                    ////                            //    //            //{
                    ////                            //    //            //  countgracetime = countgracetime + 1;

                    ////                            //    //            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //    //            //fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.Red;
                    ////                            //    //            //}

                    ////                            //    //            //if ((Convert.ToDateTime(intime) > Convert.ToDateTime(gracetime3)))
                    ////                            //    //            //{
                    ////                            //    //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //    //            //}
                    ////                            //    //            //else if ((Convert.ToDateTime(intime) <= Convert.ToDateTime(extendgracetime)) && (Convert.ToDateTime(intime) > Convert.ToDateTime(gracetime3)))
                    ////                            //    //            //{
                    ////                            //    //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //    //            //}

                    ////                            //    //            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                    ////                            //    //            if (Totalhours != "")
                    ////                            //    //            {
                    ////                            //    //                string totalhours4;
                    ////                            //    //                string[] split28 = Totalhours.Split(new Char[] { ':' });
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 2].Text = Convert.ToString(split28[0]) + ":" + split28[1].ToString();
                    ////                            //    //            }
                    ////                            //    //            else
                    ////                            //    //            {
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 2].Text = Totalhours;
                    ////                            //    //            }

                    ////                            //    //            int setcount = 0;
                    ////                            //    //            setcount = colcount;

                    ////                            //    //            if (mrng == "P")
                    ////                            //    //            {
                    ////                            //    //                //25nov2013 countpresent++;     
                    ////                            //    //                //added by srinath 12/3/2014 
                    ////                            //    //                countpresent++;
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Green;
                    ////                            //    //                counttotalmorpresent += 1;
                    ////                            //    //            }

                    ////                            //    //            if (evng == "P")
                    ////                            //    //            {
                    ////                            //    //                //25nov2013counteveningpresent++;
                    ////                            //    //                //added by srinath 12/3/2014 
                    ////                            //    //                counteveningpresent++;
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Green;
                    ////                            //    //                counttotalevepresent += 1;
                    ////                            //    //            }


                    ////                            //    //            //25nov2013 totalperesent = countpresent + counteveningpresent;
                    ////                            //    //            //25nov2013 totalperesent = totalperesent / 2;

                    ////                            //    //            //added by srinath 12/3/2014   
                    ////                            //    //            totalperesent = countpresent + counteveningpresent;
                    ////                            //    //            totalperesent = totalperesent / 2;

                    ////                            //    //            fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].Text = Convert.ToDouble(totalperesent).ToString();
                    ////                            //    //            fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //    //            g = Convert.ToDouble(fpbiomatric.Sheets[0].GetText(rowstr - 1, 10).ToString());

                    ////                            //    //            totpresent = totpresent + Convert.ToDouble(fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].Text);

                    ////                            //    //            fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].HorizontalAlign = HorizontalAlign.Center;

                    ////                            //    //            c = g * 100;

                    ////                            //    //            d = Convert.ToDouble(day3) - holiday;
                    ////                            //    //            fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].Text = d.ToString();
                    ////                            //    //            fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //    //            if ((c != 0) && (d != 0))
                    ////                            //    //            {
                    ////                            //    //                percentage = Convert.ToDouble(c) / Convert.ToDouble(d);
                    ////                            //    //                percentage = Math.Round(percentage, 2);
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].Text = percentage.ToString();
                    ////                            //    //            }

                    ////                            //    //            if (mrng == "A")
                    ////                            //    //            {

                    ////                            //    //                //25nov2013 countmorningabsent = countmorningabsent + 1;   
                    ////                            //    //                //added by srinath 12/3/2014 
                    ////                            //    //                countmorningabsent = countmorningabsent + 1;
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Red;
                    ////                            //    //                countmortotalabsent += 1;
                    ////                            //    //            }
                    ////                            //    //            if (evng == "A")
                    ////                            //    //            {

                    ////                            //    //                //25nov2013 counteveningabsent = counteveningabsent + 1;  
                    ////                            //    //                //added by srinath 12/3/2014 
                    ////                            //    //                counteveningabsent = counteveningabsent + 1;
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Red;
                    ////                            //    //                countevetotalabsent += 1;
                    ////                            //    //            }
                    ////                            //    //            //25nov2013 totalabsent = counteveningabsent + countmorningabsent;
                    ////                            //    //            //25nov2013 totalabsent = totalabsent / 2;

                    ////                            //    //            //added by srinath 12/3/2014 
                    ////                            //    //            totalabsent = counteveningabsent + countmorningabsent;
                    ////                            //    //            totalabsent = totalabsent / 2;

                    ////                            //    //            fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text = Convert.ToDouble(totalabsent).ToString();

                    ////                            //    //            totabsent = totabsent + Convert.ToDouble(fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text);

                    ////                            //    //            //totabsent = totabsent + Convert.ToDouble(fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text);
                    ////                            //    //            fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center;

                    ////                            //    //            if (mrng == "LA")
                    ////                            //    //            {
                    ////                            //    //                //25nov2013 countmorninglate++;
                    ////                            //    //                //added by srinath 12/3/2014 
                    ////                            //    //                countmorninglate++;
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkRed;
                    ////                            //    //                //fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.DarkRed;
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.White;
                    ////                            //    //            }
                    ////                            //    //            if (evng == "LA")
                    ////                            //    //            {
                    ////                            //    //                //25nov2013 counteveninglate = counteveninglate + 1;
                    ////                            //    //                //added by srinath 12/3/2014 
                    ////                            //    //                counteveninglate = counteveninglate + 1;
                    ////                            //    //            }
                    ////                            //    //            //25nov2013 totallate = countmorninglate + counteveninglate;
                    ////                            //    //            //25nov2013 totallate = totallate / 2;
                    ////                            //    //            //added by srinath 12/3/2014 
                    ////                            //    //            totallate = countmorninglate + counteveninglate;
                    ////                            //    //            totallate = totallate / 2;

                    ////                            //    //            fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].Text = Convert.ToDouble(totallate).ToString();
                    ////                            //    //            fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].HorizontalAlign = HorizontalAlign.Center;

                    ////                            //    //            if (mrng == "PER")
                    ////                            //    //            {
                    ////                            //    //                // countpereng++;
                    ////                            //    //                //25nov2013 countpermission = countpermission + 1;
                    ////                            //    //                //added by srinath 12/3/2014 
                    ////                            //    //                countpermission = countpermission + 1;
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.BurlyWood;
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.White;

                    ////                            //    //                //25nov2013  countmorningpermission = countmorningpermission + 1;
                    ////                            //    //                //added by srinath 12/3/2014 
                    ////                            //    //                countmorningpermission = countmorningpermission + 1;

                    ////                            //    //            }
                    ////                            //    //            if (evng == "PER")
                    ////                            //    //            {
                    ////                            //    //                //25nov2013 counteveper++;

                    ////                            //    //                //eveningpermission++;

                    ////                            //    //                //added by srinath 12/3/2014 
                    ////                            //    //                eveningpermission++;

                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.BurlyWood;

                    ////                            //    //                // fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].Text = counteveningpermission.ToString();
                    ////                            //    //                //fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].HorizontalAlign = HorizontalAlign.Center; 
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].BackColor = Color.White;
                    ////                            //    //                //25nov2013 countpermission2 = countpermission2 + 1;
                    ////                            //    //                //25nov2013 counteveningpermission++;

                    ////                            //    //                //added by srinath 12/3/2014 
                    ////                            //    //                countpermission2 = countpermission2 + 1;
                    ////                            //    //                counteveningpermission++;
                    ////                            //    //            }
                    ////                            //    //            //25nov2013 totalpermission = countmorningpermission + counteveningpermission;
                    ////                            //    //            //  totalpermission = totalpermission / 2; //modified by srinath

                    ////                            //    //            //added by srinath 12/3/2014 
                    ////                            //    //            totalpermission = countmorningpermission + counteveningpermission;
                    ////                            //    //            totalpermission = totalpermission / 2;

                    ////                            //    //            fpbiomatric.Sheets[0].Cells[rowstr - 1, 13].Text = Convert.ToDouble(totalpermission).ToString();
                    ////                            //    //            fpbiomatric.Sheets[0].Cells[rowstr - 1, 13].HorizontalAlign = HorizontalAlign.Center;
                    ////                            //    //            if (mrng == "OOD")
                    ////                            //    //            {
                    ////                            //    //                // countood++;
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                    ////                            //    //                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.White;

                    ////                            //    //            }
                    ////                            //    //            fpbiomatric.Sheets[0].Columns[4].Visible = false;
                    ////                            //    //            fpbiomatric.Sheets[0].Columns[6].Visible = false;
                    ////                            //    //            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].Text = mrng.ToString();
                    ////                            //    //            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].Text = evng.ToString();
                    ////                            //    //            Panel2.Visible = true;
                    ////                            //    //        }
                    ////                            //    //        Session.Remove("datefrom");
                    ////                            //    //        Session.Remove("dateto");
                    ////                            //    //    }
                    ////                            //    //}
                    ////                            //}
                    ////#endregion Hidden

                    ////                            //cnt++;
                    ////                            //if (count != 0)
                    ////                            //{
                    ////                            fpbiomatric.Sheets[0].Columns[0].Visible = true;
                    ////                            fpbiomatric.Sheets[0].Columns[1].Visible = false;
                    ////                            fpbiomatric.Sheets[0].Columns[2].Visible = false;
                    ////                            fpbiomatric.Sheets[0].Columns[3].Visible = false;
                    ////                            fpbiomatric.Sheets[0].Columns[4].Visible = false;
                    ////                            fpbiomatric.Sheets[0].Columns[5].Visible = false;
                    ////                            fpbiomatric.Sheets[0].Columns[6].Visible = false;
                    ////                            fpbiomatric.Sheets[0].Columns[7].Visible = false;
                    ////                            fpbiomatric.Sheets[0].Columns[9].Visible = true;
                    ////                            fpbiomatric.Sheets[0].Columns[10].Visible = true;
                    ////                            fpbiomatric.Sheets[0].Columns[11].Visible = true;
                    ////                            fpbiomatric.Sheets[0].Columns[12].Visible = true;
                    ////                            fpbiomatric.Sheets[0].Columns[13].Visible = true;
                    ////                            fpbiomatric.Sheets[0].Columns[14].Visible = true;
                    ////                            fpbiomatric.Sheets[0].Columns[colcount].Visible = true;
                    ////                            fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = true;

                    ////                            fpbiomatric.Sheets[0].Columns[colcount + 2].Visible = false;

                    ////                            fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                    ////                            fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;


                    ////                            if (cblsearch.Items[10].Selected == true)
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = true;
                    ////                            }
                    ////                            else
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = false;
                    ////                            }
                    ////                            if (cblsearch.Items[10].Selected == true)
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = true;
                    ////                            }
                    ////                            else
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = false;
                    ////                            }
                    ////                            if (cblsearch.Items[9].Selected == true)
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[colcount].Visible = true;
                    ////                            }
                    ////                            else
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[colcount].Visible = false;
                    ////                            }
                    ////                            if (cblsearch.Items[11].Selected == true)
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[colcount + 2].Visible = true;
                    ////                            }
                    ////                            else
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[colcount + 2].Visible = false;
                    ////                            }
                    ////                            if (cblsearch.Items[12].Selected == true)
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                    ////                            }
                    ////                            else
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                    ////                            }
                    ////                            if (cblsearch.Items[13].Selected == true)
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                    ////                            }
                    ////                            else
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;
                    ////                            }
                    ////                            if (cblsearch.Items[0].Selected == true)
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[1].Visible = true;
                    ////                            }
                    ////                            else
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[1].Visible = false;
                    ////                            }
                    ////                            if (cblsearch.Items[7].Selected == true)
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[8].Visible = true;
                    ////                            }
                    ////                            else
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[8].Visible = false;
                    ////                            }
                    ////                            if (cblsearch.Items[0].Selected == true)
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[1].Visible = true;

                    ////                            }
                    ////                            if (cblsearch.Items[1].Selected == true)
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[2].Visible = true;

                    ////                            }
                    ////                            if (cblsearch.Items[2].Selected == true)
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[3].Visible = true;

                    ////                            }
                    ////                            if (cblsearch.Items[3].Selected == true)
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[4].Visible = true;

                    ////                            }
                    ////                            if (cblsearch.Items[4].Selected == true)
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[5].Visible = true;

                    ////                            }
                    ////                            if (cblsearch.Items[5].Selected == true)
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[6].Visible = true;

                    ////                            }
                    ////                            if (cblsearch.Items[6].Selected == true)
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[7].Visible = true;

                    ////                            }

                    ////                            if (cblsearch.Items[7].Selected == true)
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[8].Visible = true;

                    ////                            }

                    ////                            if (cblsearch.Items[8].Selected == true)
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[14].Visible = true;

                    ////                            }
                    ////                            else
                    ////                            {
                    ////                                fpbiomatric.Sheets[0].Columns[14].Visible = false;

                    ////                            }

                    ////                            //for (int i = 0; i < cblsearch.Items.Count; i++)
                    ////                            //{
                    ////                            //    if (cblsearch.Items[i].Selected == true)
                    ////                            //    {
                    ////                            //        fpbiomatric.Sheets[0].Columns[i].Visible = true;
                    ////                            //    }


                    ////                            //}

                    ////                            // }


                    ////                        }
                    //                        #endregion Hidden1
                    //                        /////////////////////}

                    //                    }
                    //                    lblood.Text = ":" + countood.ToString();
                    //                    lblpermission.Text = ":" + countpereng;
                    //                    lblevngpermission.Text = ":" + eveningpermission;
                    //                    late.Text = ":" + countmorlate.ToString();
                    //                    //25nov2013 counttotalpresent = counttotalevepresent + counttotalmorpresent;

                    //                    //25nov2013  counttotalpresent = counttotalpresent / 2; counttotalmorpresent  counttotalevepresent countmortotalabsent countevetotalabsent

                    //                    lblmorpresent.Text = ":" + counttotalmorpresent.ToString();
                    //                    lblevepresent.Text = ":" + counttotalevepresent.ToString();


                    //                    lblmorabsent.Text = ":" + countmortotalabsent.ToString();
                    //                    lbleveabsent.Text = ":" + countevetotalabsent.ToString();

                    //                    /////////////////
                    //                    counttotalabsent = countmortotalabsent + countevetotalabsent;
                    //                    counttotalabsent = counttotalabsent / 2;
                    //                    lblontime.Text = ":" + countintime.ToString();
                    //                    Lblgracetime.Text = ":" + countgracetime.ToString();

                    //                    ////////////////

                    //                    fpbiomatric.Sheets[0].RowCount++;

                    //                    fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                    //                    fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                    //                    fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 0, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                    //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].Text = "Total No of  Present (Morning):" + counttotalmorpresent.ToString();// 25nov2013 (counttotalmorpresent + countpereng + countmorlate).ToString();
                    //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;

                    //                    fpbiomatric.Sheets[0].RowCount++;

                    //                    fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                    //                    fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                    //                    fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 0, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                    //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].Text = "Total No of Present (Evening):" + counttotalevepresent.ToString();// 25nov2013 (counttotalevepresent + eveningpermission).ToString();
                    //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                    //                    fpbiomatric.Sheets[0].RowCount++;

                    //                    fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                    //                    fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                    //                    fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 0, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                    //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].Text = "Total No of Absent (Morning):" + countmortotalabsent.ToString();
                    //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;

                    //                    fpbiomatric.Sheets[0].RowCount++;

                    //                    fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                    //                    fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                    //                    fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 0, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                    //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].Text = "Total No of Absent (Evening):" + countevetotalabsent.ToString();
                    //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;


                    //                    DropDownListpage.Items.Clear();
                    //                    Double totalRows = 0;
                    //                    totalRows = Convert.ToInt32(fpbiomatric.Sheets[0].RowCount);
                    //                    DropDownListpage.Items.Clear();
                    //                    if (totalRows >= 10)
                    //                    {
                    //                        fpbiomatric.Sheets[0].PageSize = Convert.ToInt32(totalRows);
                    //                        for (int k = 0; k < Convert.ToInt32(totalRows); k = k + 10)
                    //                        {
                    //                            DropDownListpage.Items.Add((k + 10).ToString());
                    //                        }
                    //                        DropDownListpage.Items.Add("Others");
                    //                        DropDownListpage.SelectedIndex = DropDownListpage.Items.Count - 2;
                    //                        fpbiomatric.Height = 350;
                    //                        fpbiomatric.VerticalScrollBarPolicy = FarPoint.Web.Spread.ScrollBarPolicy.AsNeeded;
                    //                        fpbiomatric.HorizontalScrollBarPolicy = FarPoint.Web.Spread.ScrollBarPolicy.AsNeeded;

                    //                    }
                    //                    else if (totalRows == 0)
                    //                    {
                    //                        DropDownListpage.Items.Add("0");
                    //                        fpbiomatric.Height = 300;
                    //                    }
                    //                    else
                    //                    {
                    //                        fpbiomatric.Sheets[0].PageSize = Convert.ToInt32(totalRows);
                    //                        DropDownListpage.Items.Add(fpbiomatric.Sheets[0].PageSize.ToString());
                    //                        fpbiomatric.Height = 75 + (75 * Convert.ToInt32(totalRows));
                    //                    }
                    //                    Session["totalPages"] = (int)Math.Ceiling(totalRows / fpbiomatric.Sheets[0].PageSize);
                    //                    Buttontotal.Text = "Records : " + totalRows + "          Pages : " + Session["totalPages"];

                    //                    //drcount14.Close();
                    //                    con.Close();

                    //                }
                    #endregion NewStafAtt

                    #region StaffAtt
                    if (d1.Tables[0].Rows.Count > 0)
                    {
                        int access = 0;
                        sno = 0;
                        bool stsflag = false;
                        //counttotalmorpresent = 0;
                        //counttotalevepresent = 0;
                        //countmortotalabsent = 0;
                        //countevetotalabsent = 0;
                        ArrayList staffsno = new ArrayList();
                        bool stschk = false;
                        string PrevStaffcode = "";
                        //string strallcount = getfunction3(strqueryattenadnce);
                        for (int h1 = 0; h1 <= hhcount; h1++)
                        {
                            sql = "";
                            // Str = "";
                            stsflag = false;
                            string category8 = "";
                            string timein8 = "";
                            string staffcode3 = staffcode1;

                            string categorycode = "";
                            string deptCode = string.Empty;//delsi1606

                            //if ((staffcode3 != d1.Tables[0].Rows[h1]["staff_code"].ToString()) || (staffcode3 == ""))
                            //{
                            staffcode1 = dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString();
                            if (PrevStaffcode != staffcode1)
                            {
                                categorycode = dsstaffcode.Tables[0].Rows[h1]["category_code"].ToString();
                                deptCode = Convert.ToString(dsstaffcode.Tables[0].Rows[h1]["dept_code"]);
                                string wrkingday = "select isnull(SUM((CAST(morning as int)+CAST(evening as int))),0) as holiday from holidaystaff ";
                                wrkingday = wrkingday + " where category_code='" + categorycode + "' and dept_code='" + deptCode + "'";
                                wrkingday = wrkingday + " AND Holiday_Date Between '" + datefrom + "' and '" + dateto + "'";

                                double totholiday = 0;
                                double holiday = 0;
                                string works = getfunction(wrkingday);
                                if (works != "")
                                {
                                    totholiday = Convert.ToDouble(works);
                                    if (totholiday != 0)
                                    {
                                        holiday = totholiday / 2;
                                    }
                                    else
                                    {
                                        holiday = 0;
                                    }
                                }
                                else
                                {
                                    holiday = 0;
                                    totholiday = 0;
                                }

                                countpresent = 0;
                                counteveningpresent = 0;
                                countmorningabsent = 0;
                                counteveningabsent = 0;
                                countmorninglate = 0;
                                countmorningpermission = 0;
                                counteveninglate = 0;
                                counteveningpermission = 0;
                                countcolumn = fpbiomatric.Sheets[0].ColumnCount;
                                int permcount = 0;
                                colcount = 16;
                                int cnt = 16;
                                for (colcount = colcount; colcount <= countcolumn - 2; colcount = colcount + 6)
                                {
                                    string datetagvalue;
                                    datetagvalue = fpbiomatric.Sheets[0].ColumnHeader.Cells[0, colcount].Tag.ToString();
                                    string[] splitdate = datetagvalue.Split('/');
                                    string accessdate = splitdate[1] + "/" + Convert.ToInt16(splitdate[0].ToString()) + "/" + splitdate[2];
                                    splitdate[0] = splitdate[0].TrimStart('0');
                                    splitdate[1] = splitdate[1].TrimStart('0');//bb 03.07.17
                                    string entrydate = "";
                                    int attcnt = 0;
                                    stsflag = false;
                                    stschk = false;
                                    for (h = 0; h <= hcount; h++)
                                    {
                                        if (access <= hcount)
                                        {
                                            entrydate = d1.Tables[0].Rows[h]["access_date"].ToString();
                                        }
                                        string[] splitentry = entrydate.Split(' ');//modified by srinath 11/1/13
                                        string enrt1 = Convert.ToString(splitentry[0].ToString());
                                        string[] splitentry1 = enrt1.Split('/');
                                        string entrydate1 = Convert.ToInt16(splitentry1[1].ToString()) + "/" + Convert.ToInt32(splitentry1[0].ToString()) + "/" + splitentry1[2].ToString();
                                        //if (entrydate1 == accessdate)
                                        //{
                                        if (dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString() == d1.Tables[0].Rows[h]["staff_code"].ToString())
                                        {
                                            attcnt++;
                                            string timein3 = "";
                                            string gracetime3 = "";
                                            string extendgracetime = "";
                                            if (entrydate1 == accessdate)
                                            {
                                                category8 = d1.Tables[0].Rows[h]["category_name"].ToString();
                                                timein8 = d1.Tables[0].Rows[h]["time_in"].ToString();
                                                timein3 = d1.Tables[0].Rows[h]["ontime"].ToString();
                                                gracetime3 = d1.Tables[0].Rows[h]["gracetime"].ToString();
                                                extendgracetime = d1.Tables[0].Rows[h]["extendgracetime"].ToString();

                                                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount, 1, 6);
                                                fpbiomatric.ActiveSheetView.Columns[colcount].Font.Size = FontUnit.Medium;
                                                fpbiomatric.ActiveSheetView.Columns[colcount].Font.Name = "Book Antiqua";
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 1].Font.Size = FontUnit.Medium;
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 1].Font.Name = "Book Antiqua";
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 2].Font.Size = FontUnit.Medium;
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 2].Font.Name = "Book Antiqua";

                                                fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount].Text = "In";
                                                fpbiomatric.Sheets[0].SetColumnWidth(colcount, 60);
                                                fpbiomatric.Sheets[0].Columns[colcount].HorizontalAlign = HorizontalAlign.Center;
                                                fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount + 1].Text = "Out";
                                                fpbiomatric.Sheets[0].SetColumnWidth(colcount + 1, 60);
                                                fpbiomatric.Sheets[0].Columns[colcount + 1].HorizontalAlign = HorizontalAlign.Center;
                                                fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount + 2].Text = "Tot";
                                                fpbiomatric.Sheets[0].SetColumnWidth(colcount + 2, 60);
                                                fpbiomatric.Sheets[0].Columns[colcount + 2].HorizontalAlign = HorizontalAlign.Center;

                                                fpbiomatric.ActiveSheetView.Columns[colcount + 3].Font.Size = FontUnit.Medium;
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 3].Font.Name = "Book Antiqua";
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 4].Font.Size = FontUnit.Medium;
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 4].Font.Name = "Book Antiqua";

                                                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;

                                                strdate = " and bio_attendance.access_date='" + datetagvalue + "'";

                                                //Start 05july2013------------------------------------------------------------------------------------

                                                if (cbo_att.Items[0].Selected == true)
                                                {
                                                    if (rdomorning.Checked == true)
                                                    {
                                                        //Str = " and left(att,2)='P-'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;
                                                    }
                                                    else if (rdoevening.Checked == true)
                                                    {
                                                        //Str = " and right(att,2)='-P'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                                                    }
                                                    else if (rdoall.Checked == true)
                                                    {
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[9].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[10].Visible = true;
                                                        //Str = " and att like '%P%'";
                                                    }
                                                    else if (rdoboth.Checked == true)
                                                    {
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[9].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[10].Visible = true;
                                                        //Str = " and att='P-P'";
                                                    }
                                                }

                                                if (cbo_att.Items[1].Selected == true)
                                                {
                                                    if (rdomorning.Checked == true)
                                                    {
                                                        // Str = " and left(att,2)='A-'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;
                                                    }
                                                    else if (rdoevening.Checked == true)
                                                    {
                                                        //Str = " and right(att,2)='-A'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                                                    }
                                                    else if (rdoall.Checked == true)
                                                    {
                                                        // Str = " and att like '%A%'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }
                                                    else if (rdoboth.Checked == true)
                                                    {
                                                        // Str = " and att='A-A'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }
                                                }

                                                if (cbo_att.Items[2].Selected == true)
                                                {
                                                    if (rdomorning.Checked == true)
                                                    {
                                                        //Str = " and left(att,3)='LA-'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                    }
                                                    else if (rdoevening.Checked == true)
                                                    {
                                                        //Str = " and right(att,3)='-LA'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }
                                                    else if (rdoall.Checked == true)
                                                    {
                                                        //Str = " and att like '%LA%'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }
                                                    else if (rdoboth.Checked == true)
                                                    {
                                                        //Str = " and att='LA-LA'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }
                                                }

                                                if (cbo_att.Items[3].Selected == true)
                                                {
                                                    if (rdomorning.Checked == true)
                                                    {
                                                        //Str = " and left(att,4)='PER-'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                    }
                                                    else if (rdoevening.Checked == true)
                                                    {
                                                        // Str = " and right(att,4)='-PER'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }
                                                    else if (rdoall.Checked == true)
                                                    {
                                                        //Str = " and att like '%PER%'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }
                                                    else if (rdoboth.Checked == true)
                                                    {
                                                        // Str = " and att='PER-PER'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }
                                                }

                                                //End 05july2013----------------------------------------------------------------------------------
                                                if (d1.Tables[0].Rows.Count != 0)
                                                {
                                                }
                                                if (Chktimein.Checked == true)
                                                {
                                                    strTime = "";
                                                    strTime = " and  Right(CONVERT(nvarchar(100),time_in ,100),7)  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "'";
                                                }
                                                else if (Chktimeout.Checked == true)
                                                {
                                                    strTime = "";
                                                    strTime = " AND Right(CONVERT(nvarchar(100),time_Out ,100),7) between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";
                                                }

                                                if ((Chktimein.Checked == true) && (Chktimeout.Checked == true))
                                                {
                                                    strTime = "";
                                                    strTime = " and  Right(CONVERT(nvarchar(100),time_in ,100),7)  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "' AND Right(CONVERT(nvarchar(100),time_Out ,100),7) between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";

                                                }
                                                if (strTime != null)
                                                {
                                                    sql = sql + " " + strTime + "";
                                                }
                                                // sql = sql + " order by hrdept_master.dept_name";
                                                sql = sql + " order by hrdept_master.dept_name,len(staffmaster.staff_code),staffmaster.staff_code"; //Modified By Srinath 28/3/2014 ";


                                                con.Close();
                                                con.Open();
                                                fpbiomatric.Width = 1000;
                                                lblnorec.Visible = false;

                                                int datval = 0;
                                                int rowcnt = 0;
                                                int rowstr = 0;

                                                int countlateforstaff = 0;

                                                if (d1.Tables[0].Rows.Count != 0)
                                                {
                                                    string category = "";
                                                    string timein = "";
                                                    string gracetime = "";

                                                    if (gracetimeflag == true)
                                                    {
                                                        if ((Convert.ToDateTime(timein8) <= Convert.ToDateTime(gracetime3)) && (Convert.ToDateTime(timein8) > Convert.ToDateTime(timein3)))
                                                        {
                                                            goto lbl1;
                                                        }
                                                        else
                                                        {
                                                            goto lbl2;
                                                        }
                                                    }
                                                    else if (ontimeflag == true)
                                                    {
                                                        if (Convert.ToDateTime(timein8) <= Convert.ToDateTime(timein3))
                                                        {
                                                            goto lbl1;
                                                        }
                                                        else
                                                        {
                                                            goto lbl2;
                                                        }
                                                    }
                                                    else if (Generalflag == false)
                                                    {
                                                        goto lbl1;
                                                    }
                                                    else
                                                    {
                                                        goto lbl1;
                                                    }

                                                lbl1:
                                                    if (tempstaffcode == "")
                                                    {
                                                        countpresent = 0;
                                                        counteveningpresent = 0;
                                                        countmorningabsent = 0;
                                                        countmorningpermission = 0;
                                                        counteveninglate = 0;
                                                        counteveningpermission = 0;
                                                        counteveningabsent = 0;
                                                        countmorninglate = 0;
                                                        countpermission = 0;
                                                        category = d1.Tables[0].Rows[h]["category_name"].ToString();
                                                        //Added By SRinath 26/4/2014=========Start====
                                                        if (strtempdept != d1.Tables[0].Rows[h]["dept_name"].ToString())
                                                        {
                                                            strtempdept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                                                            fpbiomatric.Sheets[0].RowCount += 1;
                                                            int col = 0;
                                                            if (cblsearch.Items[0].Selected == false)
                                                            {
                                                                col = 0;
                                                            }
                                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Text = strtempdept;
                                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Font.Bold = true;
                                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].HorizontalAlign = HorizontalAlign.Center;
                                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].VerticalAlign = VerticalAlign.Middle;
                                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].BackColor = Color.LightYellow;
                                                            fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, col, 1, fpbiomatric.Sheets[0].ColumnCount);
                                                        }
                                                        //=======================End===================
                                                        fpbiomatric.Sheets[0].RowCount += 1;
                                                        tempstaffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                                                    }
                                                    else if ((tempstaffcode != "") && (tempstaffcode != d1.Tables[0].Rows[h]["staff_code"].ToString()))
                                                    {
                                                        countpresent = 0;
                                                        counteveningpresent = 0;
                                                        countmorningabsent = 0;
                                                        countpermission = 0;
                                                        countmorningpermission = 0;
                                                        counteveninglate = 0;
                                                        counteveningpermission = 0;
                                                        counteveningabsent = 0;
                                                        countmorninglate = 0;
                                                        c = 0;
                                                        d = 0;
                                                        g = 0;
                                                        f = 0;
                                                        percentage = 0;
                                                        countmorningabsent = 0;
                                                        countlateforstaff = 0;
                                                        counteveningabsent = 0;
                                                        countmorninglate = 0;
                                                        counteveninglate = 0;
                                                        countmorningpermission = 0;
                                                        counteveningpermission = 0;

                                                        //Added By SRinath 26/4/2014=========Start====
                                                        if (strtempdept != d1.Tables[0].Rows[h]["dept_name"].ToString())
                                                        {
                                                            strtempdept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                                                            fpbiomatric.Sheets[0].RowCount += 1;
                                                            int col = 0;
                                                            if (cblsearch.Items[0].Selected == false)
                                                            {
                                                                col = 0;
                                                            }
                                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Text = strtempdept;
                                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Font.Bold = true;
                                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].HorizontalAlign = HorizontalAlign.Center;
                                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].VerticalAlign = VerticalAlign.Middle;
                                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].BackColor = Color.LightYellow;
                                                            fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, col, 1, fpbiomatric.Sheets[0].ColumnCount);
                                                        }
                                                        //=======================End===================
                                                        fpbiomatric.Sheets[0].RowCount += 1;
                                                        tempstaffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                                                    }
                                                    Buttontotal.Visible = false;
                                                    DropDownListpage.Visible = false;
                                                    TextBoxpage.Visible = false;
                                                    lblrecord.Visible = false;
                                                    lblrecord.Visible = false;
                                                    lblpage.Visible = false;
                                                    Imgeveper.Visible = true;
                                                    Lblgracetime.Visible = true;
                                                    btnontime.Visible = true;
                                                    lblontime.Visible = true;
                                                    Imgmorper.Visible = true;
                                                    Imglate.Visible = true;
                                                    late.Visible = true;
                                                    Imgood.Visible = true;
                                                    btnmorabsent.Visible = true;
                                                    btneveabsent.Visible = true;
                                                    btnevepresent.Visible = true;
                                                    btnmorabsent.Visible = true;
                                                    lblmorpresent.Visible = true;
                                                    lblevepresent.Visible = true;
                                                    lblevepresent.Visible = true;
                                                    lbleveabsent.Visible = true;
                                                    lblmorabsent.Visible = true;
                                                    btnmorpresent.Visible = true;
                                                    lbldate.Visible = true;
                                                    lblevngpermission.Visible = true;
                                                    lblood.Visible = true;
                                                    lblpermission.Visible = true;
                                                    btngracetime.Visible = true;
                                                    rowstr = Convert.ToInt32(fpbiomatric.Sheets[0].RowCount);
                                                    fpbiomatric.Visible = true;
                                                    btnprintmaster.Visible = true;
                                                    string staffcode = "";
                                                    string staffname = "";
                                                    string dept = "";
                                                    string design = "";
                                                    string dept_acronym = "";
                                                    string desig_acronym = "";

                                                    string doj = "";
                                                    string intime = "";
                                                    string outtime = "";
                                                    string Totalhours = "";
                                                    string pertype = "";
                                                    string fingerid = "";
                                                    fpbiomatric.Sheets[0].SetColumnWidth(3, 250);

                                                    staffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                                                    staffname = d1.Tables[0].Rows[h]["staff_name"].ToString();
                                                    DataSet sds = new DataSet();
                                                    DAccess2 sda = new DAccess2();
                                                    sds.Clear();
                                                    string ssql = "select title from staff_appl_master,staffmaster  where staff_appl_master.appl_no=staffmaster.appl_no  and staffmaster.staff_code='" + staffcode + "'";
                                                    sds = sda.select_method_wo_parameter(ssql, "Text");
                                                    if (sds.Tables[0].Rows.Count > 0)
                                                    {
                                                        if (sds.Tables[0].Rows[0][0].ToString() != "")
                                                        {
                                                            staffname = sds.Tables[0].Rows[0][0].ToString() + d1.Tables[0].Rows[h]["staff_name"].ToString();
                                                        }
                                                    }

                                                    dept_acronym = d1.Tables[0].Rows[h]["dept_acronym"].ToString();
                                                    desig_acronym = d1.Tables[0].Rows[h]["desig_acronym"].ToString();
                                                    dept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                                                    design = d1.Tables[0].Rows[h]["desig_name"].ToString();
                                                    fingerid = d1.Tables[0].Rows[h]["Fingerprint1"].ToString();
                                                    doj = d1.Tables[0].Rows[h]["join_date"].ToString();
                                                    pertype = d1.Tables[0].Rows[h]["per_type"].ToString();
                                                    fpbiomatric.Sheets[0].FrozenColumnCount = 4;

                                                    string tmp_course = "";
                                                    int getprevrow_cnt = 0;
                                                    int initor_cnt = 0;

                                                    if (!staffsno.Contains(staffcode))
                                                    {
                                                        newserialno++;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text = Convert.ToString(newserialno);
                                                        staffsno.Add(staffcode);
                                                    }

                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 1].Text = staffcode;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 2].Text = staffname;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 3].Text = dept;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 4].Text = dept_acronym;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 5].Text = design;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 6].Text = desig_acronym;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 7].Text = doj;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 8].Text = category;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].CellType = textcell;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].Text = fingerid;
                                                    

                                                    //}
                                                    //else
                                                    //{
                                                    //    if (fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text.Trim() == "")
                                                    //    {
                                                    //        newserialno++;
                                                    //    }
                                                    //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text = Convert.ToString(newserialno);
                                                    //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                                    //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 1].Text = staffcode;
                                                    //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 2].Text = staffname;
                                                    //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 3].Text = dept;
                                                    //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 4].Text = dept_acronym;
                                                    //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 5].Text = design;
                                                    //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 6].Text = desig_acronym;
                                                    //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 7].Text = doj;
                                                    //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 8].Text = category;
                                                    //}
                                                    //fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text = sno.ToString();
                                                    //fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;

                                                    //if (sts == false)
                                                    //{
                                                    //    sno++;
                                                    //}

                                                    string mrng = "";
                                                    string evng = "";
                                                    //d1.Tables[0].Rows[h]["att"].ToString();
                                                    string att = "";
                                                    dsAtt.Tables[0].DefaultView.RowFilter = "staff_code='" + staffcode + "' and mon_year='" + splitdate[0] + '/' + splitdate[2] + "'";
                                                    DataView dvatt = dsAtt.Tables[0].DefaultView;
                                                    if (dvatt.Count > 0)
                                                    {
                                                        if (d1.Tables[0].Rows[h]["att"].ToString() == dvatt[0][splitdate[1]].ToString())
                                                        {
                                                            att = d1.Tables[0].Rows[h]["att"].ToString();
                                                            stsflag = false;
                                                            stschk = false;
                                                        }
                                                        else
                                                        {
                                                            stschk = true;
                                                            stsflag = true;
                                                            att = dvatt[0][splitdate[1]].ToString();
                                                        }
                                                    }
                                                    if (att != "")
                                                    {
                                                        string[] tmpdate = att.Split(new char[] { '-' });
                                                        mrng = tmpdate[0].ToString();
                                                        evng = tmpdate[1].ToString();
                                                    }

                                                    intime = d1.Tables[0].Rows[h]["time_in"].ToString();
                                                    outtime = d1.Tables[0].Rows[h]["time_out"].ToString();
                                                    if (intime != "" && outtime != "")//delsi1303
                                                    {
                                                        Totalhours = d1.Tables[0].Rows[h]["TotalHours"].ToString();
                                                    }
                                                    else
                                                    {
                                                        Totalhours = "";
                                                    }
                                                    if (!String.IsNullOrEmpty(intime) && !String.IsNullOrEmpty(timein3) && !String.IsNullOrEmpty(gracetime3))
                                                    {
                                                        if (Convert.ToDateTime(intime) <= Convert.ToDateTime(timein3))
                                                        {
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                        }
                                                        if ((Convert.ToDateTime(intime) <= Convert.ToDateTime(gracetime3)) && (Convert.ToDateTime(intime) > Convert.ToDateTime(timein3)))
                                                        {
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.Pink;
                                                        }

                                                        if ((Convert.ToDateTime(intime) > Convert.ToDateTime(gracetime3)))
                                                        {
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                        }
                                                        else if ((Convert.ToDateTime(intime) <= Convert.ToDateTime(extendgracetime)) && (Convert.ToDateTime(intime) > Convert.ToDateTime(gracetime3)))
                                                        {
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                        }
                                                    }
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                                                    if (Totalhours != "")
                                                    {
                                                        string totalhours4;
                                                        string[] split28 = Totalhours.Split(new Char[] { ':' });
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 2].Text = Convert.ToString(split28[0]) + ":" + split28[1].ToString();
                                                    }
                                                    else
                                                    {
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 2].Text = Totalhours;
                                                    }

                                                    int setcount = 0;
                                                    setcount = colcount;

                                                    if (mrng == "P")
                                                    {
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Green;
                                                        if (stsflag == false && attcnt == 1)
                                                        {
                                                            //counttotalmorpresent++;
                                                            countpresent++;
                                                            overallmorpresnet++;
                                                        }
                                                        //countpresent++;
                                                        else
                                                        {
                                                            if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                                                            {
                                                                //counttotalmorpresent++;
                                                                countpresent++;
                                                                overallmorpresnet++;
                                                            }
                                                        }
                                                    }
                                                    if (evng == "P")
                                                    {

                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Green;
                                                        if (stsflag == false && attcnt == 1)
                                                        {
                                                            overallevepresnet++;
                                                            //counttotalevepresent++;
                                                            counteveningpresent++;
                                                        }
                                                        //counteveningpresent++;
                                                        else
                                                        {
                                                            if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                                                            {
                                                                overallevepresnet++;
                                                                //counttotalevepresent++;
                                                                counteveningpresent++;
                                                            }
                                                        }
                                                    }

                                                    totalperesent = countpresent + counteveningpresent;
                                                    totalperesent = totalperesent / 2;

                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text = Convert.ToDouble(totalperesent).ToString();
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center;
                                                    g = Convert.ToDouble(fpbiomatric.Sheets[0].GetText(rowstr - 1, 11).ToString());

                                                    totpresent = totpresent + Convert.ToDouble(fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text);

                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center;

                                                    c = g * 100;

                                                    d = Convert.ToDouble(day3) - holiday;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].Text = d.ToString();
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].HorizontalAlign = HorizontalAlign.Center;
                                                    if ((c != 0) && (d != 0))
                                                    {
                                                        percentage = Convert.ToDouble(c) / Convert.ToDouble(d);
                                                        percentage = Math.Round(percentage, 2);
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 15].HorizontalAlign = HorizontalAlign.Center;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 15].Text = percentage.ToString();
                                                    }

                                                    if (mrng == "A")
                                                    {
                                                        if (stsflag == false && attcnt == 1)
                                                        {
                                                            overallmorabsent++;
                                                            if (d1.Tables[0].Rows[h]["att"].ToString() == "" && d1.Tables[0].Rows[h]["att"].ToString() == null)
                                                            {
                                                                countmortotalabsent++;
                                                            }
                                                            countmorningabsent = countmorningabsent + 1;
                                                            //countmortotalabsent++;
                                                        }
                                                        else
                                                        {
                                                            if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                                                            {
                                                                overallmorabsent++;
                                                                countmorningabsent = countmorningabsent + 1;
                                                                //countmortotalabsent++;
                                                            }
                                                        }
                                                        //countmorningabsent = countmorningabsent + 1;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Red;

                                                    }
                                                    if (evng == "A")
                                                    {
                                                        if (stsflag == false && attcnt == 1)
                                                        {
                                                            //countevetotalabsent++;
                                                            overalleveabsent++;
                                                            if (d1.Tables[0].Rows[h]["att"].ToString() == "" && d1.Tables[0].Rows[h]["att"].ToString() == null)
                                                            {
                                                                countevetotalabsent++;
                                                            }
                                                            counteveningabsent = counteveningabsent + 1;
                                                        }
                                                        else
                                                        {
                                                            if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                                                            {
                                                                //countevetotalabsent++;
                                                                overalleveabsent++;
                                                                counteveningabsent = counteveningabsent + 1;
                                                            }
                                                        }
                                                        //counteveningabsent = counteveningabsent + 1;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Red;
                                                    }
                                                    //25nov2013 totalabsent = counteveningabsent + countmorningabsent;
                                                    //25nov2013 totalabsent = totalabsent / 2;

                                                    //added by srinath 12/3/2014 
                                                    totalabsent = counteveningabsent + countmorningabsent;
                                                    totalabsent = totalabsent / 2;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].Text = Convert.ToDouble(totalabsent).ToString();
                                                    totabsent = totabsent + Convert.ToDouble(fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].Text);
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].HorizontalAlign = HorizontalAlign.Center;
                                                    if (mrng == "LA")
                                                    {
                                                        //25nov2013 countmorninglate++;
                                                        //added by srinath 12/3/2014    

                                                        //if (accessdate == entrydate1)
                                                        //{
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkRed;
                                                        //}
                                                        if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                                                        {
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.White;
                                                        }
                                                        else
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.DarkRed;
                                                        if (stsflag == false && attcnt == 1)
                                                        {
                                                            countmorninglate++;
                                                            overallmorlate++;
                                                        }
                                                        else
                                                        {
                                                            if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                                                            {
                                                                countmorninglate++;
                                                                overallmorlate++;
                                                            }
                                                        }

                                                    }
                                                    if (evng == "LA")
                                                    {

                                                        if (stsflag == false && attcnt == 1)
                                                        {
                                                            counteveninglate++;
                                                        }
                                                        else
                                                        {
                                                            if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                                                            {
                                                                counteveninglate++;

                                                            }
                                                        }
                                                    }

                                                    totallate = countmorninglate + counteveninglate;
                                                    totallate = totallate / 2;

                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 13].Text = Convert.ToDouble(totallate).ToString();
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 13].HorizontalAlign = HorizontalAlign.Center;

                                                    if (mrng == "PER")
                                                    {
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.BurlyWood;
                                                        if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                                                        {
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.White;
                                                        }
                                                        else
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.BurlyWood;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.BurlyWood;

                                                        if (stsflag == false && attcnt == 1)
                                                        {
                                                            overallmorper++;
                                                            countpermission = countpermission + 1;
                                                            countmorningpermission = countmorningpermission + 1;
                                                        }
                                                        else
                                                        {
                                                            if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                                                            {
                                                                overallmorper++;
                                                                countpermission = countpermission + 1;
                                                                countmorningpermission = countmorningpermission + 1;
                                                            }
                                                        }
                                                    }
                                                    if (evng == "PER")
                                                    {

                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.BurlyWood;

                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].BackColor = Color.Chocolate;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;

                                                        if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                                                        {
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].BackColor = Color.White;
                                                        }
                                                        else
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].BackColor = Color.Chocolate;

                                                        if (stsflag == false && attcnt == 1)
                                                        {
                                                            overalleveper++;
                                                            eveningpermission++;
                                                            countpermission2 = countpermission2 + 1;
                                                            counteveningpermission++;
                                                        }
                                                        else
                                                        {
                                                            if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                                                            {
                                                                overalleveper++;
                                                                eveningpermission++;
                                                                countpermission2 = countpermission2 + 1;
                                                                counteveningpermission++;
                                                            }
                                                        }

                                                    }
                                                    //25nov2013 totalpermission = countmorningpermission + counteveningpermission;
                                                    //  totalpermission = totalpermission / 2; //modified by srinath

                                                    //added by srinath 12/3/2014 

                                                    int totalper = countmorningpermission + counteveningpermission;
                                                    if (totalper.ToString() == "0")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, percount - 1].Text = "-";
                                                    else
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, percount - 1].Text = totalper.ToString();

                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, percount - 1].HorizontalAlign = HorizontalAlign.Center;


                                                    totalpermission = countmorningpermission + counteveningpermission;
                                                    totalpermission = totalpermission / 2;

                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].Text = Convert.ToDouble(totalpermission).ToString();
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].HorizontalAlign = HorizontalAlign.Center;
                                                    if (mrng == "OD")
                                                    {
                                                        //if (accessdate == entrydate1)
                                                        //{
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.Goldenrod;
                                                        //}
                                                        if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                                                        {
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.White;
                                                        }
                                                        else
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.Goldenrod;
                                                    }

                                                    if (evng == "OD")
                                                    {
                                                        //if (accessdate == entrydate1)
                                                        //{
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = outtime;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.Goldenrod;
                                                        //}
                                                        if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                                                        {
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = outtime;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.White;
                                                        }
                                                        else
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.Goldenrod;
                                                    }
                                                    //Added BY Saranyadevi 28.7.2018
                                                    if (mrng == "CL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkOrange;
                                                    if (evng == "CL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DarkOrange;
                                                    if (mrng == "CPL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkSlateGray;
                                                    if (evng == "CPL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DarkSlateGray;
                                                    if (mrng == "LL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkTurquoise;
                                                    if (evng == "LL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DarkTurquoise;
                                                    if (mrng == "LOP")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DeepPink;
                                                    if (evng == "LOP")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DeepPink;
                                                    if (mrng == "MAL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Lavender;
                                                    if (evng == "MAL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Lavender;
                                                    if (mrng == "ML")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.LightGoldenrodYellow;
                                                    if (evng == "ML")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.LightGoldenrodYellow;
                                                    if (mrng == "NA")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Maroon;
                                                    if (evng == "NA")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Maroon;
                                                    if (mrng == "SL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Navy;
                                                    if (evng == "SL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Navy;
                                                    if (mrng == "SPL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.LimeGreen;
                                                    if (evng == "SPL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.LimeGreen;
                                                    if (mrng == "VL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Magenta;
                                                    if (evng == "VL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Magenta;
                                                    if (mrng == "WL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.OliveDrab;
                                                    if (evng == "WL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.OliveDrab;

                                                    //End

                                                    fpbiomatric.Sheets[0].Columns[4].Visible = false;
                                                    fpbiomatric.Sheets[0].Columns[6].Visible = false;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].Text = mrng.ToString();
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].Text = evng.ToString();
                                                    if (pertype == "0")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 5].Text = "-";
                                                    else
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 5].Text = pertype + "- Hour";
                                                    Panel2.Visible = true;
                                                }
                                                Session.Remove("datefrom");
                                                Session.Remove("dateto");
                                                continue;
                                            }
                                            else
                                            {
                                                category8 = d1.Tables[0].Rows[h]["category_name"].ToString();
                                                timein8 = "";
                                                timein3 = "";
                                                gracetime3 = d1.Tables[0].Rows[h]["gracetime"].ToString();
                                                extendgracetime = d1.Tables[0].Rows[h]["extendgracetime"].ToString();
                                                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount, 1, 5);
                                                fpbiomatric.ActiveSheetView.Columns[colcount].Font.Size = FontUnit.Medium;
                                                fpbiomatric.ActiveSheetView.Columns[colcount].Font.Name = "Book Antiqua";
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 1].Font.Size = FontUnit.Medium;
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 1].Font.Name = "Book Antiqua";
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 2].Font.Size = FontUnit.Medium;
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 2].Font.Name = "Book Antiqua";

                                                fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount].Text = "In";
                                                fpbiomatric.Sheets[0].SetColumnWidth(colcount, 60);
                                                fpbiomatric.Sheets[0].Columns[colcount].HorizontalAlign = HorizontalAlign.Center;
                                                fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount + 1].Text = "Out";
                                                fpbiomatric.Sheets[0].SetColumnWidth(colcount + 1, 60);
                                                fpbiomatric.Sheets[0].Columns[colcount + 1].HorizontalAlign = HorizontalAlign.Center;
                                                fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount + 2].Text = "Tot";
                                                fpbiomatric.Sheets[0].SetColumnWidth(colcount + 2, 60);
                                                fpbiomatric.Sheets[0].Columns[colcount + 2].HorizontalAlign = HorizontalAlign.Center;

                                                fpbiomatric.ActiveSheetView.Columns[colcount + 3].Font.Size = FontUnit.Medium;
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 3].Font.Name = "Book Antiqua";
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 4].Font.Size = FontUnit.Medium;
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 4].Font.Name = "Book Antiqua";

                                                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;

                                                strdate = " and bio_attendance.access_date='" + datetagvalue + "'";

                                                if (cbo_att.Items[0].Selected == true)
                                                {
                                                    if (rdomorning.Checked == true)
                                                    {
                                                        //Str = " and left(att,2)='P-'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;
                                                    }
                                                    else if (rdoevening.Checked == true)
                                                    {
                                                        //Str = " and right(att,2)='-P'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                                                    }
                                                    else if (rdoall.Checked == true)
                                                    {
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[9].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[10].Visible = true;
                                                        //Str = " and att like '%P%'";
                                                    }
                                                    else if (rdoboth.Checked == true)
                                                    {
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[9].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[10].Visible = true;
                                                        //Str = " and att='P-P'";
                                                    }
                                                }

                                                if (cbo_att.Items[1].Selected == true)
                                                {
                                                    if (rdomorning.Checked == true)
                                                    {
                                                        // Str = " and left(att,2)='A-'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;
                                                    }
                                                    else if (rdoevening.Checked == true)
                                                    {
                                                        //Str = " and right(att,2)='-A'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                                                    }
                                                    else if (rdoall.Checked == true)
                                                    {
                                                        // Str = " and att like '%A%'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }
                                                    else if (rdoboth.Checked == true)
                                                    {
                                                        // Str = " and att='A-A'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }
                                                }

                                                if (cbo_att.Items[2].Selected == true)
                                                {
                                                    if (rdomorning.Checked == true)
                                                    {
                                                        //Str = " and left(att,3)='LA-'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                    }
                                                    else if (rdoevening.Checked == true)
                                                    {
                                                        //Str = " and right(att,3)='-LA'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }
                                                    else if (rdoall.Checked == true)
                                                    {
                                                        //Str = " and att like '%LA%'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }
                                                    else if (rdoboth.Checked == true)
                                                    {
                                                        //Str = " and att='LA-LA'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }
                                                }

                                                if (cbo_att.Items[3].Selected == true)
                                                {
                                                    if (rdomorning.Checked == true)
                                                    {
                                                        //Str = " and left(att,4)='PER-'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                    }
                                                    else if (rdoevening.Checked == true)
                                                    {
                                                        // Str = " and right(att,4)='-PER'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }
                                                    else if (rdoall.Checked == true)
                                                    {
                                                        //Str = " and att like '%PER%'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }
                                                    else if (rdoboth.Checked == true)
                                                    {
                                                        // Str = " and att='PER-PER'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }
                                                }

                                                //End 05july2013----------------------------------------------------------------------------------
                                                if (d1.Tables[0].Rows.Count != 0)
                                                {
                                                }
                                                if (Chktimein.Checked == true)
                                                {
                                                    strTime = "";
                                                    strTime = " and  Right(CONVERT(nvarchar(100),time_in ,100),7)  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "'";
                                                }
                                                else if (Chktimeout.Checked == true)
                                                {
                                                    strTime = "";
                                                    strTime = " AND Right(CONVERT(nvarchar(100),time_Out ,100),7) between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";
                                                }

                                                if ((Chktimein.Checked == true) && (Chktimeout.Checked == true))
                                                {
                                                    strTime = "";
                                                    strTime = " and  Right(CONVERT(nvarchar(100),time_in ,100),7)  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "' AND Right(CONVERT(nvarchar(100),time_Out ,100),7) between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";

                                                }
                                                if (strTime != null)
                                                {
                                                    sql = sql + " " + strTime + "";
                                                }
                                                // sql = sql + " order by hrdept_master.dept_name";
                                                sql = sql + " order by hrdept_master.dept_name,len(staffmaster.staff_code),staffmaster.staff_code"; //Modified By Srinath 28/3/2014 ";


                                                con.Close();
                                                con.Open();
                                                fpbiomatric.Width = 1000;
                                                lblnorec.Visible = false;

                                                int datval = 0;
                                                int rowcnt = 0;
                                                int rowstr = 0;

                                                int countlateforstaff = 0;

                                                if (d1.Tables[0].Rows.Count != 0)
                                                {
                                                    string category = "";
                                                    string timein = "";
                                                    string gracetime = "";

                                                    //if (gracetimeflag == true)
                                                //{
                                                //    if ((Convert.ToDateTime(timein8) <= Convert.ToDateTime(gracetime3)) && (Convert.ToDateTime(timein8) > Convert.ToDateTime(timein3)))
                                                //    {
                                                //        goto lbl1;
                                                //    }
                                                //    else
                                                //    {
                                                //        goto lbl2;
                                                //    }
                                                //}
                                                //else if (ontimeflag == true)
                                                //{
                                                //    if (Convert.ToDateTime(timein8) <= Convert.ToDateTime(timein3))
                                                //    {
                                                //        goto lbl1;
                                                //    }
                                                //    else
                                                //    {
                                                //        goto lbl2;
                                                //    }
                                                //}
                                                //else if (Generalflag == false)
                                                //{
                                                //    goto lbl1;
                                                //}
                                                //else
                                                //{
                                                //    goto lbl1;
                                                //}

                                                lbl1:
                                                    if (tempstaffcode == "")
                                                    {
                                                        countpresent = 0;
                                                        counteveningpresent = 0;
                                                        countmorningabsent = 0;
                                                        countmorningpermission = 0;
                                                        counteveninglate = 0;
                                                        counteveningpermission = 0;
                                                        counteveningabsent = 0;
                                                        countmorninglate = 0;
                                                        countpermission = 0;
                                                        category = d1.Tables[0].Rows[h]["category_name"].ToString();
                                                        //Added By SRinath 26/4/2014=========Start====
                                                        if (strtempdept != d1.Tables[0].Rows[h]["dept_name"].ToString())
                                                        {
                                                            strtempdept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                                                            fpbiomatric.Sheets[0].RowCount += 1;
                                                            int col = 0;
                                                            if (cblsearch.Items[0].Selected == false)
                                                            {
                                                                col = 0;
                                                            }
                                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Text = strtempdept;
                                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Font.Bold = true;
                                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].HorizontalAlign = HorizontalAlign.Center;
                                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].VerticalAlign = VerticalAlign.Middle;
                                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].BackColor = Color.LightYellow;
                                                            fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, col, 1, fpbiomatric.Sheets[0].ColumnCount);
                                                        }
                                                        //=======================End===================
                                                        fpbiomatric.Sheets[0].RowCount += 1;
                                                        tempstaffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                                                    }
                                                    else if ((tempstaffcode != "") && (tempstaffcode != d1.Tables[0].Rows[h]["staff_code"].ToString()))
                                                    {
                                                        countpresent = 0;
                                                        counteveningpresent = 0;
                                                        countmorningabsent = 0;
                                                        countpermission = 0;
                                                        countmorningpermission = 0;
                                                        counteveninglate = 0;
                                                        counteveningpermission = 0;
                                                        counteveningabsent = 0;
                                                        countmorninglate = 0;
                                                        c = 0;
                                                        d = 0;
                                                        g = 0;
                                                        f = 0;
                                                        percentage = 0;
                                                        countmorningabsent = 0;
                                                        countlateforstaff = 0;
                                                        counteveningabsent = 0;
                                                        countmorninglate = 0;
                                                        counteveninglate = 0;
                                                        countmorningpermission = 0;
                                                        counteveningpermission = 0;

                                                        //Added By SRinath 26/4/2014=========Start====
                                                        if (strtempdept != d1.Tables[0].Rows[h]["dept_name"].ToString())
                                                        {
                                                            strtempdept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                                                            fpbiomatric.Sheets[0].RowCount += 1;
                                                            int col = 0;
                                                            if (cblsearch.Items[0].Selected == false)
                                                            {
                                                                col = 0;
                                                            }
                                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Text = strtempdept;
                                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Font.Bold = true;
                                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].HorizontalAlign = HorizontalAlign.Center;
                                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].VerticalAlign = VerticalAlign.Middle;
                                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].BackColor = Color.LightYellow;
                                                            fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, col, 1, fpbiomatric.Sheets[0].ColumnCount);
                                                        }
                                                        //=======================End===================
                                                        fpbiomatric.Sheets[0].RowCount += 1;
                                                        tempstaffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                                                    }
                                                    Buttontotal.Visible = false;
                                                    DropDownListpage.Visible = false;
                                                    TextBoxpage.Visible = false;
                                                    lblrecord.Visible = false;
                                                    lblrecord.Visible = false;
                                                    lblpage.Visible = false;
                                                    Imgeveper.Visible = true;
                                                    Lblgracetime.Visible = true;
                                                    btnontime.Visible = true;
                                                    lblontime.Visible = true;
                                                    Imgmorper.Visible = true;
                                                    Imglate.Visible = true;
                                                    late.Visible = true;
                                                    Imgood.Visible = true;
                                                    btnmorabsent.Visible = true;
                                                    btneveabsent.Visible = true;
                                                    btnevepresent.Visible = true;
                                                    btnmorabsent.Visible = true;
                                                    lblmorpresent.Visible = true;
                                                    lblevepresent.Visible = true;
                                                    lblevepresent.Visible = true;
                                                    lbleveabsent.Visible = true;
                                                    lblmorabsent.Visible = true;
                                                    btnmorpresent.Visible = true;
                                                    lbldate.Visible = true; //Modified by Manikandan 09/05/2013
                                                    lblevngpermission.Visible = true;
                                                    lblood.Visible = true;
                                                    lblpermission.Visible = true;
                                                    btngracetime.Visible = true;
                                                    rowstr = Convert.ToInt32(fpbiomatric.Sheets[0].RowCount);
                                                    fpbiomatric.Visible = true;
                                                    btnprintmaster.Visible = true;
                                                    string staffcode = "";
                                                    string staffname = "";
                                                    string dept = "";
                                                    string design = "";
                                                    string dept_acronym = "";
                                                    string desig_acronym = "";
                                                    string fingerid = "";
                                                    string doj = "";
                                                    string intime = "";
                                                    string outtime = "";
                                                    string Totalhours = "";
                                                    string pertype = "";
                                                    fpbiomatric.Sheets[0].SetColumnWidth(3, 250);

                                                    staffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                                                    staffname = d1.Tables[0].Rows[h]["staff_name"].ToString();
                                                    DataSet sds = new DataSet();
                                                    DAccess2 sda = new DAccess2();
                                                    sds.Clear();
                                                    string ssql = "select title from staff_appl_master,staffmaster  where staff_appl_master.appl_no=staffmaster.appl_no  and staffmaster.staff_code='" + staffcode + "'";
                                                    sds = sda.select_method_wo_parameter(ssql, "Text");
                                                    if (sds.Tables[0].Rows.Count > 0)
                                                    {
                                                        if (sds.Tables[0].Rows[0][0].ToString() != "")
                                                        {
                                                            staffname = sds.Tables[0].Rows[0][0].ToString() + d1.Tables[0].Rows[h]["staff_name"].ToString();
                                                        }
                                                    }

                                                    dept_acronym = d1.Tables[0].Rows[h]["dept_acronym"].ToString();
                                                    desig_acronym = d1.Tables[0].Rows[h]["desig_acronym"].ToString();
                                                    dept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                                                    design = d1.Tables[0].Rows[h]["desig_name"].ToString();
                                                    fingerid = d1.Tables[0].Rows[h]["Fingerprint1"].ToString();
                                                    doj = d1.Tables[0].Rows[h]["join_date"].ToString();
                                                    pertype = d1.Tables[0].Rows[h]["per_type"].ToString();
                                                    fpbiomatric.Sheets[0].FrozenColumnCount = 4;

                                                    string tmp_course = "";
                                                    int getprevrow_cnt = 0;
                                                    int initor_cnt = 0;
                                                    if (!staffsno.Contains(staffcode))
                                                    {
                                                        newserialno++;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text = Convert.ToString(newserialno);
                                                        staffsno.Add(staffcode);
                                                    }

                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 1].Text = staffcode;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 2].Text = staffname;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 3].Text = dept;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 4].Text = dept_acronym;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 5].Text = design;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 6].Text = desig_acronym;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 7].Text = doj;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 8].Text = category;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].CellType = textcell;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].Text = fingerid;
                                                   
                                                    string mrng = "";
                                                    string evng = "";
                                                    //d1.Tables[0].Rows[h]["att"].ToString();
                                                    string att = "";
                                                    dsAtt.Tables[0].DefaultView.RowFilter = "staff_code='" + staffcode + "' and mon_year='" + splitdate[0] + '/' + splitdate[2] + "'";
                                                    DataView dvatt = dsAtt.Tables[0].DefaultView;
                                                    if (dvatt.Count > 0)
                                                    {
                                                        if (d1.Tables[0].Rows[h]["att"].ToString() == dvatt[0][splitdate[1]].ToString())
                                                        {
                                                            att = d1.Tables[0].Rows[h]["att"].ToString();
                                                            stsflag = false;
                                                            stschk = false;
                                                        }
                                                        else
                                                        {
                                                            stschk = true;
                                                            stsflag = true;
                                                            att = dvatt[0][splitdate[1]].ToString();
                                                        }
                                                    }
                                                    if (att != "")
                                                    {
                                                        string[] tmpdate = att.Split(new char[] { '-' });
                                                        mrng = tmpdate[0].ToString();
                                                        evng = tmpdate[1].ToString();
                                                    }
                                                    //if (accessdate == entrydate1)
                                                    //{
                                                    //intime = d1.Tables[0].Rows[h]["time_in"].ToString();
                                                    //outtime = d1.Tables[0].Rows[h]["time_out"].ToString();
                                                    //Totalhours = d1.Tables[0].Rows[h]["TotalHours"].ToString();
                                                    //if (Convert.ToDateTime(intime) <= Convert.ToDateTime(timein3))
                                                    //{
                                                    //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                    //}
                                                    //if ((Convert.ToDateTime(intime) <= Convert.ToDateTime(gracetime3)) && (Convert.ToDateTime(intime) > Convert.ToDateTime(timein3)))
                                                    //{
                                                    //    //  countgracetime = countgracetime + 1;
                                                    //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                    //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.Pink;
                                                    //}

                                                    //if ((Convert.ToDateTime(intime) > Convert.ToDateTime(gracetime3)))
                                                    //{
                                                    //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                    //}
                                                    //else if ((Convert.ToDateTime(intime) <= Convert.ToDateTime(extendgracetime)) && (Convert.ToDateTime(intime) > Convert.ToDateTime(gracetime3)))
                                                    //{
                                                    //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                    //}
                                                    //fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;

                                                    //else
                                                    //{
                                                    if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                                                    {
                                                        if (stsflag)
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                    }
                                                    if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                                                    {
                                                        if (stsflag)
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                                                    }
                                                    //}

                                                    if (Totalhours != "")
                                                    {
                                                        string totalhours4;
                                                        string[] split28 = Totalhours.Split(new Char[] { ':' });
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 2].Text = Convert.ToString(split28[0]) + ":" + split28[1].ToString();
                                                    }
                                                    else
                                                    {
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 2].Text = Totalhours;
                                                    }

                                                    int setcount = 0;
                                                    setcount = colcount;

                                                    if (mrng == "P")
                                                    {
                                                        //25nov2013 countpresent++;     
                                                        //added by srinath 12/3/2014                                                 
                                                        if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                                                        {
                                                            if (stsflag)
                                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                        }
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Green;
                                                        if (stsflag == false && attcnt == 1)
                                                        {
                                                            //counttotalmorpresent++;
                                                            countpresent++;
                                                            overallmorpresnet++;
                                                        }
                                                        else
                                                        {
                                                            if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                                                            {
                                                                //counttotalmorpresent++;
                                                                countpresent++;
                                                                overallmorpresnet++;
                                                            }
                                                        }
                                                        //countpresent++;
                                                    }
                                                    if (evng == "P")
                                                    {

                                                        //25nov2013counteveningpresent++;
                                                        //added by srinath 12/3/2014                                                
                                                        if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                                                        {
                                                            if (stsflag)
                                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                                                        }
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Green;
                                                        if (stsflag == false && attcnt == 1)
                                                        {
                                                            //counttotalevepresent++;
                                                            overallevepresnet++;
                                                            counteveningpresent++;
                                                        }
                                                        else
                                                        {
                                                            if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                                                            {
                                                                //counttotalevepresent++;
                                                                overallevepresnet++;
                                                                counteveningpresent++;
                                                            }
                                                        }
                                                        //counteveningpresent++;
                                                    }


                                                    //25nov2013 totalperesent = countpresent + counteveningpresent;
                                                    //25nov2013 totalperesent = totalperesent / 2;

                                                    //added by srinath 12/3/2014 
                                                    totalperesent = countpresent + counteveningpresent;
                                                    totalperesent = totalperesent / 2;

                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text = Convert.ToDouble(totalperesent).ToString();
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center;
                                                    g = Convert.ToDouble(fpbiomatric.Sheets[0].GetText(rowstr - 1, 11).ToString());

                                                    totpresent = totpresent + Convert.ToDouble(fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text);

                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center;

                                                    c = g * 100;

                                                    d = Convert.ToDouble(day3) - holiday;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].Text = d.ToString();
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].HorizontalAlign = HorizontalAlign.Center;
                                                    if ((c != 0) && (d != 0))
                                                    {
                                                        percentage = Convert.ToDouble(c) / Convert.ToDouble(d);
                                                        percentage = Math.Round(percentage, 2);
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 15].HorizontalAlign = HorizontalAlign.Center;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 15].Text = percentage.ToString();
                                                    }

                                                    if (mrng == "A")
                                                    {
                                                        //25nov2013 countmorningabsent = countmorningabsent + 1;   
                                                        //added by srinath 12/3/2014   
                                                        //countmorningabsent = countmorningabsent + 1;
                                                        if (stsflag == false && attcnt == 1)
                                                        {
                                                            if (d1.Tables[0].Rows[h]["att"].ToString() == "" && d1.Tables[0].Rows[h]["att"].ToString() == null)
                                                            {
                                                                countmortotalabsent += 1;
                                                            }
                                                            overallmorabsent++;
                                                            countmorningabsent = countmorningabsent + 1;
                                                            //countmortotalabsent += 1;
                                                        }
                                                        else
                                                        {
                                                            if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                                                            {
                                                                countmorningabsent = countmorningabsent + 1;
                                                                overallmorabsent++;
                                                                //countmortotalabsent += 1;
                                                            }
                                                        }
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Red;

                                                    }
                                                    if (evng == "A")
                                                    {
                                                        //25nov2013 counteveningabsent = counteveningabsent + 1;  
                                                        //added by srinath 12/3/2014    
                                                        //counteveningabsent = counteveningabsent + 1;
                                                        if (stsflag == false && attcnt == 1)
                                                        {
                                                            //countevetotalabsent += 1;
                                                            overalleveabsent++;
                                                            if (d1.Tables[0].Rows[h]["att"].ToString() == "" && d1.Tables[0].Rows[h]["att"].ToString() == null)
                                                            {
                                                                countevetotalabsent += 1;
                                                            }
                                                            counteveningabsent = counteveningabsent + 1;
                                                        }
                                                        else
                                                        {
                                                            if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                                                            {
                                                                overalleveabsent++;
                                                                //countevetotalabsent += 1;
                                                                counteveningabsent = counteveningabsent + 1;
                                                            }
                                                        }
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Red;
                                                    }
                                                    //25nov2013 totalabsent = counteveningabsent + countmorningabsent;
                                                    //25nov2013 totalabsent = totalabsent / 2;

                                                    //added by srinath 12/3/2014 
                                                    totalabsent = counteveningabsent + countmorningabsent;
                                                    totalabsent = totalabsent / 2;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].Text = Convert.ToDouble(totalabsent).ToString();
                                                    totabsent = totabsent + Convert.ToDouble(fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].Text);
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].HorizontalAlign = HorizontalAlign.Center;
                                                    if (mrng == "LA")
                                                    {
                                                        //25nov2013 countmorninglate++;
                                                        //added by srinath 12/3/2014    

                                                        //if (accessdate == entrydate1)
                                                        //{
                                                        //fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                        //fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkRed;
                                                        //}
                                                        //if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                                                        //{
                                                        //    if (stsflag)
                                                        //        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                        //}
                                                        if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                                                        {
                                                            if (stsflag)
                                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.White;
                                                        }
                                                        else
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.DarkRed;
                                                        if (stsflag == false && attcnt == 1)
                                                        {
                                                            countmorninglate++;
                                                            overallmorlate++;
                                                        }
                                                        else
                                                        {
                                                            if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                                                            {
                                                                overallmorlate++;
                                                                countmorninglate++;
                                                            }
                                                        }
                                                        //countmorninglate++;
                                                    }
                                                    if (evng == "LA")
                                                    {
                                                        if (stsflag == false && attcnt == 1)
                                                        {
                                                            counteveninglate = counteveninglate + 1;
                                                        }
                                                        else
                                                        {
                                                            if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                                                            {
                                                                counteveninglate = counteveninglate + 1;
                                                            }
                                                        }
                                                        //counteveninglate = counteveninglate + 1;
                                                    }
                                                    //25nov2013 totallate = countmorninglate + counteveninglate;
                                                    //25nov2013 totallate = totallate / 2;
                                                    //added by srinath 12/3/2014 
                                                    totallate = countmorninglate + counteveninglate;
                                                    totallate = totallate / 2;

                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 13].Text = Convert.ToDouble(totallate).ToString();
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 13].HorizontalAlign = HorizontalAlign.Center;

                                                    if (mrng == "PER")
                                                    {
                                                        // countpereng++;
                                                        //25nov2013 countpermission = countpermission + 1;
                                                        //added by srinath 12/3/2014 

                                                        //if (accessdate == entrydate1)
                                                        //{
                                                        //fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                        //fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.BurlyWood;
                                                        //}

                                                        if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                                                        {
                                                            if (stsflag)
                                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.White;
                                                        }
                                                        else
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.BurlyWood;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.BurlyWood;

                                                        //25nov2013  countmorningpermission = countmorningpermission + 1;
                                                        //added by srinath 12/3/2014 
                                                        //countpermission = countpermission + 1;
                                                        //countmorningpermission = countmorningpermission + 1;
                                                        if (stsflag == false && attcnt == 1)
                                                        {
                                                            countpermission = countpermission + 1;
                                                            overallmorper++;
                                                            countmorningpermission = countmorningpermission + 1;
                                                        }
                                                        else
                                                        {
                                                            if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                                                            {
                                                                countpermission = countpermission + 1;
                                                                overallmorper++;
                                                                countmorningpermission = countmorningpermission + 1;
                                                            }
                                                        }

                                                    }
                                                    if (evng == "PER")
                                                    {

                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.BurlyWood;
                                                        //if (accessdate == entrydate1)
                                                        //{
                                                        //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].BackColor = Color.Chocolate;
                                                        //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                                                        //}
                                                        if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                                                        {
                                                            if (stsflag)
                                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].BackColor = Color.White;
                                                        }
                                                        else
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].BackColor = Color.Chocolate;
                                                        //25nov2013 countpermission2 = countpermission2 + 1;
                                                        //25nov2013 counteveningpermission++;

                                                        //added by srinath 12/3/2014 
                                                        //eveningpermission++;
                                                        //countpermission2 = countpermission2 + 1;
                                                        //counteveningpermission++;
                                                        if (stsflag == false && attcnt == 1)
                                                        {
                                                            eveningpermission++;
                                                            countpermission2 = countpermission2 + 1;
                                                            counteveningpermission++;
                                                            overalleveper++;
                                                        }
                                                        else
                                                        {
                                                            if (stsflag == true && fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text == "")
                                                            {
                                                                eveningpermission++;
                                                                countpermission2 = countpermission2 + 1;
                                                                counteveningpermission++;
                                                                overalleveper++;
                                                            }
                                                        }

                                                    }
                                                    //25nov2013 totalpermission = countmorningpermission + counteveningpermission;
                                                    //  totalpermission = totalpermission / 2; //modified by srinath

                                                    //added by srinath 12/3/2014 
                                                    totalpermission = countmorningpermission + counteveningpermission;
                                                    totalpermission = totalpermission / 2;

                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].Text = Convert.ToDouble(totalpermission).ToString();
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].HorizontalAlign = HorizontalAlign.Center;
                                                    if (mrng == "OD")
                                                    {
                                                        //if (accessdate == entrydate1)
                                                        //{
                                                        //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                        //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.DarkSeaGreen;
                                                        //}
                                                        if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                                                        {
                                                            if (stsflag)
                                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.White;
                                                        }
                                                        else
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.Goldenrod;
                                                    }

                                                    if (evng == "OD")
                                                    {
                                                        //if (accessdate == entrydate1)
                                                        //{
                                                        //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                        //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.DarkSeaGreen;
                                                        //}
                                                        if (fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text == "")
                                                        {
                                                            if (stsflag)
                                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = outtime;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.White;
                                                        }
                                                        else
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.Goldenrod;
                                                    }

                                                    //Added BY Saranyadevi 28.7.2018
                                                    if (mrng == "CL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkOrange;
                                                    if (evng == "CL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DarkOrange;
                                                    if (mrng == "CPL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkSlateGray;
                                                    if (evng == "CPL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DarkSlateGray;
                                                    if (mrng == "LL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkTurquoise;
                                                    if (evng == "LL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DarkTurquoise;
                                                    if (mrng == "LOP")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DeepPink;
                                                    if (evng == "LOP")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DeepPink;
                                                    if (mrng == "MAL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Lavender;
                                                    if (evng == "MAL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Lavender;
                                                    if (mrng == "ML")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.LightGoldenrodYellow;
                                                    if (evng == "ML")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.LightGoldenrodYellow;
                                                    if (mrng == "NA")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Maroon;
                                                    if (evng == "NA")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Maroon;
                                                    if (mrng == "SL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Navy;
                                                    if (evng == "SL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Navy;
                                                    if (mrng == "SPL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.LimeGreen;
                                                    if (evng == "SPL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.LimeGreen;
                                                    if (mrng == "VL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Magenta;
                                                    if (evng == "VL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Magenta;
                                                    if (mrng == "WL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.OliveDrab;
                                                    if (evng == "WL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.OliveDrab;

                                                    //End

                                                    fpbiomatric.Sheets[0].Columns[4].Visible = false;
                                                    fpbiomatric.Sheets[0].Columns[6].Visible = false;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].Text = mrng.ToString();
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].Text = evng.ToString();
                                                    if (pertype == "0")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 5].Text = "-";
                                                    else
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 5].Text = pertype + "- Hour";

                                                    Panel2.Visible = true;
                                                }
                                                Session.Remove("datefrom");
                                                Session.Remove("dateto");
                                                continue;
                                            }

                                        }
                                    //else
                                    //{

                                            //}

                                                ////////////////////////// }
                                    // h++;
                                    //}
                                    lbl2: if (hcount > h)
                                        {
                                            //h++;
                                            //sno--;
                                        }

                                        #region CommentedLine
                                        //}
                                        //else
                                        //{
                                        //    if (dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString() == d1.Tables[0].Rows[h]["staff_code"].ToString())
                                        //    {
                                        //        //category8 = d1.Tables[0].Rows[h]["category_name"].ToString();
                                        //        //timein8 = d1.Tables[0].Rows[h]["time_in"].ToString();
                                        //        //string timein3 = d1.Tables[0].Rows[h]["ontime"].ToString();

                                        //        //string gracetime3 = d1.Tables[0].Rows[h]["gracetime"].ToString();
                                        //        //string extendgracetime = d1.Tables[0].Rows[h]["extendgracetime"].ToString();


                                        //        category8 = d1.Tables[0].Rows[h]["category_name"].ToString();
                                        //        timein8 = "";
                                        //        string timein3 = "";

                                        //        string gracetime3 = d1.Tables[0].Rows[h]["gracetime"].ToString();
                                        //        string extendgracetime = d1.Tables[0].Rows[h]["extendgracetime"].ToString();
                                        //        //if (stsflag == false)
                                        //        //{
                                        //        //}

                                        //        fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount, 1, 5);
                                        //        fpbiomatric.ActiveSheetView.Columns[colcount].Font.Size = FontUnit.Medium;
                                        //        fpbiomatric.ActiveSheetView.Columns[colcount].Font.Name = "Book Antiqua";
                                        //        fpbiomatric.ActiveSheetView.Columns[colcount + 1].Font.Size = FontUnit.Medium;
                                        //        fpbiomatric.ActiveSheetView.Columns[colcount + 1].Font.Name = "Book Antiqua";
                                        //        fpbiomatric.ActiveSheetView.Columns[colcount + 2].Font.Size = FontUnit.Medium;
                                        //        fpbiomatric.ActiveSheetView.Columns[colcount + 2].Font.Name = "Book Antiqua";

                                        //        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount].Text = "In";
                                        //        fpbiomatric.Sheets[0].SetColumnWidth(colcount, 60);
                                        //        fpbiomatric.Sheets[0].Columns[colcount].HorizontalAlign = HorizontalAlign.Center;
                                        //        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount + 1].Text = "Out";
                                        //        fpbiomatric.Sheets[0].SetColumnWidth(colcount + 1, 60);
                                        //        fpbiomatric.Sheets[0].Columns[colcount + 1].HorizontalAlign = HorizontalAlign.Center;
                                        //        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount + 2].Text = "Tot";
                                        //        fpbiomatric.Sheets[0].SetColumnWidth(colcount + 2, 60);
                                        //        fpbiomatric.Sheets[0].Columns[colcount + 2].HorizontalAlign = HorizontalAlign.Center;

                                        //        fpbiomatric.ActiveSheetView.Columns[colcount + 3].Font.Size = FontUnit.Medium;
                                        //        fpbiomatric.ActiveSheetView.Columns[colcount + 3].Font.Name = "Book Antiqua";
                                        //        fpbiomatric.ActiveSheetView.Columns[colcount + 4].Font.Size = FontUnit.Medium;
                                        //        fpbiomatric.ActiveSheetView.Columns[colcount + 4].Font.Name = "Book Antiqua";

                                        //        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                        //        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;

                                        //        strdate = " and bio_attendance.access_date='" + datetagvalue + "'";

                                        //        //Start 05july2013------------------------------------------------------------------------------------

                                        //        if (cbo_att.Items[0].Selected == true)
                                        //        {
                                        //            if (rdomorning.Checked == true)
                                        //            {
                                        //                //Str = " and left(att,2)='P-'";
                                        //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;
                                        //            }
                                        //            else if (rdoevening.Checked == true)
                                        //            {
                                        //                //Str = " and right(att,2)='-P'";
                                        //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                                        //            }
                                        //            else if (rdoall.Checked == true)
                                        //            {
                                        //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                        //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                        //                fpbiomatric.Sheets[0].Columns[9].Visible = true;
                                        //                fpbiomatric.Sheets[0].Columns[10].Visible = true;
                                        //                //Str = " and att like '%P%'";
                                        //            }
                                        //            else if (rdoboth.Checked == true)
                                        //            {
                                        //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                        //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                        //                fpbiomatric.Sheets[0].Columns[9].Visible = true;
                                        //                fpbiomatric.Sheets[0].Columns[10].Visible = true;
                                        //                //Str = " and att='P-P'";
                                        //            }
                                        //        }
                                        //        if (cbo_att.Items[1].Selected == true)
                                        //        {
                                        //            if (rdomorning.Checked == true)
                                        //            {
                                        //                // Str = " and left(att,2)='A-'";
                                        //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;

                                        //            }
                                        //            else if (rdoevening.Checked == true)
                                        //            {
                                        //                //Str = " and right(att,2)='-A'";
                                        //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                                        //            }
                                        //            else if (rdoall.Checked == true)
                                        //            {
                                        //                // Str = " and att like '%A%'";
                                        //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                        //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                        //            }
                                        //            else if (rdoboth.Checked == true)
                                        //            {
                                        //                // Str = " and att='A-A'";
                                        //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                        //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                        //            }
                                        //        }
                                        //        if (cbo_att.Items[2].Selected == true)
                                        //        {
                                        //            if (rdomorning.Checked == true)
                                        //            {
                                        //                //Str = " and left(att,3)='LA-'";
                                        //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                        //            }
                                        //            else if (rdoevening.Checked == true)
                                        //            {
                                        //                //Str = " and right(att,3)='-LA'";
                                        //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                        //            }

                                        //            else if (rdoall.Checked == true)
                                        //            {
                                        //                //Str = " and att like '%LA%'";
                                        //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                        //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                        //            }

                                        //            else if (rdoboth.Checked == true)
                                        //            {
                                        //                //Str = " and att='LA-LA'";

                                        //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                        //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                        //            }
                                        //        }
                                        //        if (cbo_att.Items[3].Selected == true)
                                        //        {
                                        //            if (rdomorning.Checked == true)
                                        //            {
                                        //                //Str = " and left(att,4)='PER-'";
                                        //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                        //            }
                                        //            else if (rdoevening.Checked == true)
                                        //            {
                                        //                // Str = " and right(att,4)='-PER'";
                                        //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                        //            }
                                        //            else if (rdoall.Checked == true)
                                        //            {
                                        //                //Str = " and att like '%PER%'";
                                        //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                        //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                        //            }
                                        //            else if (rdoboth.Checked == true)
                                        //            {
                                        //                // Str = " and att='PER-PER'";

                                        //                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                        //                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                        //            }
                                        //        }

                                        //        //End 05july2013----------------------------------------------------------------------------------


                                        //        if (d1.Tables[0].Rows.Count != 0)
                                        //        {
                                        //        }
                                        //        if (Chktimein.Checked == true)
                                        //        {
                                        //            strTime = "";
                                        //            strTime = " and  Right(CONVERT(nvarchar(100),time_in ,100),7)  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "'";
                                        //        }
                                        //        else if (Chktimeout.Checked == true)
                                        //        {
                                        //            strTime = "";
                                        //            strTime = " AND Right(CONVERT(nvarchar(100),time_Out ,100),7) between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";
                                        //        }

                                        //        if ((Chktimein.Checked == true) && (Chktimeout.Checked == true))
                                        //        {
                                        //            strTime = "";

                                        //            strTime = " and  Right(CONVERT(nvarchar(100),time_in ,100),7)  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "' AND Right(CONVERT(nvarchar(100),time_Out ,100),7) between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";

                                        //        }
                                        //        if (strTime != null)
                                        //        {
                                        //            sql = sql + " " + strTime + "";
                                        //        }
                                        //        // sql = sql + " order by hrdept_master.dept_name";
                                        //        sql = sql + " order by hrdept_master.dept_name,len(staffmaster.staff_code),staffmaster.staff_code";//Modified By Srinath 28/3/2014 ";


                                        //        con.Close();
                                        //        con.Open();
                                        //        fpbiomatric.Width = 1000;
                                        //        lblnorec.Visible = false;

                                        //        int datval = 0;
                                        //        int rowcnt = 0;
                                        //        int rowstr = 0;

                                        //        int countlateforstaff = 0;

                                        //        //   drcount14 = cmd7.ExecuteReader();
                                        //        // drcount14.Read();
                                        //        // lbl2:
                                        //        //while (drcount14.Read())
                                        //        //  for (int i = 0; i < d1.Tables[0].Rows.Count;i++)
                                        //        //{

                                        //        if (d1.Tables[0].Rows.Count != 0)
                                        //        {

                                        //            string category = "";
                                        //            string timein = "";
                                        //            string gracetime = "";

                                        //            //if (gracetimeflag == true)
                                        //            //{
                                        //            //    if ((Convert.ToDateTime(timein8) <= Convert.ToDateTime(gracetime3)) && (Convert.ToDateTime(timein8) > Convert.ToDateTime(timein3)))
                                        //            //    {
                                        //            //        goto lbl3;
                                        //            //    }
                                        //            //    else
                                        //            //    {
                                        //            //        goto lbl4;
                                        //            //    }
                                        //            //}
                                        //            //else if (ontimeflag == true)
                                        //            //{
                                        //            //    if (Convert.ToDateTime(timein8) <= Convert.ToDateTime(timein3))
                                        //            //    {
                                        //            //        goto lbl3;
                                        //            //    }
                                        //            //    else
                                        //            //    {
                                        //            //        goto lbl4;
                                        //            //    }
                                        //            //}
                                        //            //else if (Generalflag == false)
                                        //            //{
                                        //            //    goto lbl3;
                                        //            //}                                            

                                        //            if (tempstaffcode == "")
                                        //            {

                                        //                countpresent = 0;
                                        //                counteveningpresent = 0;
                                        //                countmorningabsent = 0;
                                        //                countmorningpermission = 0;
                                        //                counteveninglate = 0;
                                        //                counteveningpermission = 0;
                                        //                counteveningabsent = 0;
                                        //                countmorninglate = 0;
                                        //                countpermission = 0;
                                        //                category = d1.Tables[0].Rows[h]["category_name"].ToString();
                                        //                //Added By SRinath 26/4/2014=========Start====
                                        //                if (strtempdept != d1.Tables[0].Rows[h]["dept_name"].ToString())
                                        //                {
                                        //                    strtempdept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                                        //                    fpbiomatric.Sheets[0].RowCount += 1;
                                        //                    int col = 0;
                                        //                    if (cblsearch.Items[0].Selected == false)
                                        //                    {
                                        //                        col = 0;
                                        //                    }
                                        //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Text = strtempdept;
                                        //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Font.Bold = true;
                                        //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].HorizontalAlign = HorizontalAlign.Center;
                                        //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].VerticalAlign = VerticalAlign.Middle;
                                        //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].BackColor = Color.LightYellow;
                                        //                    fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, col, 1, fpbiomatric.Sheets[0].ColumnCount);
                                        //                }
                                        //                //=======================End===================
                                        //                fpbiomatric.Sheets[0].RowCount += 1;
                                        //                tempstaffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                                        //            }
                                        //            else if ((tempstaffcode != "") && (tempstaffcode != d1.Tables[0].Rows[h]["staff_code"].ToString()))
                                        //            {

                                        //                countpresent = 0;
                                        //                counteveningpresent = 0;
                                        //                countmorningabsent = 0;
                                        //                countpermission = 0;
                                        //                countmorningpermission = 0;
                                        //                counteveninglate = 0;
                                        //                counteveningpermission = 0;
                                        //                counteveningabsent = 0;
                                        //                countmorninglate = 0;

                                        //                c = 0;
                                        //                d = 0;
                                        //                g = 0;
                                        //                f = 0;
                                        //                percentage = 0;
                                        //                countmorningabsent = 0;
                                        //                countlateforstaff = 0;
                                        //                counteveningabsent = 0;
                                        //                countmorninglate = 0;
                                        //                counteveninglate = 0;
                                        //                countmorningpermission = 0;
                                        //                counteveningpermission = 0;

                                        //                //Added By SRinath 26/4/2014=========Start====
                                        //                if (strtempdept != d1.Tables[0].Rows[h]["dept_name"].ToString())
                                        //                {
                                        //                    strtempdept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                                        //                    fpbiomatric.Sheets[0].RowCount += 1;
                                        //                    int col = 0;
                                        //                    if (cblsearch.Items[0].Selected == false)
                                        //                    {
                                        //                        col = 0;
                                        //                    }
                                        //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Text = strtempdept;
                                        //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Font.Bold = true;
                                        //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].HorizontalAlign = HorizontalAlign.Center;
                                        //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].VerticalAlign = VerticalAlign.Middle;
                                        //                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].BackColor = Color.LightYellow;
                                        //                    fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, col, 1, fpbiomatric.Sheets[0].ColumnCount);
                                        //                }
                                        //                //=======================End===================
                                        //                fpbiomatric.Sheets[0].RowCount += 1;
                                        //                tempstaffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                                        //            }
                                        //            Buttontotal.Visible = false;
                                        //            DropDownListpage.Visible = false;
                                        //            TextBoxpage.Visible = false;
                                        //            lblrecord.Visible = false;
                                        //            lblrecord.Visible = false;
                                        //            lblpage.Visible = false;
                                        //            Imgeveper.Visible = true;
                                        //            Lblgracetime.Visible = true;
                                        //            btnontime.Visible = true;
                                        //            lblontime.Visible = true;
                                        //            Imgmorper.Visible = true;
                                        //            Imglate.Visible = true;
                                        //            late.Visible = true;
                                        //            Imgood.Visible = true;
                                        //            btnmorabsent.Visible = true;
                                        //            btneveabsent.Visible = true;
                                        //            btnevepresent.Visible = true;
                                        //            btnmorabsent.Visible = true;
                                        //            lblmorpresent.Visible = true;
                                        //            lblevepresent.Visible = true;
                                        //            lblevepresent.Visible = true;
                                        //            lbleveabsent.Visible = true;
                                        //            lblmorabsent.Visible = true;
                                        //            btnmorpresent.Visible = true;
                                        //            lbldate.Visible = true; //Modified by Manikandan 09/05/2013
                                        //            lblevngpermission.Visible = true;
                                        //            lblood.Visible = true;
                                        //            lblpermission.Visible = true;
                                        //            btngracetime.Visible = true;
                                        //            rowstr = Convert.ToInt32(fpbiomatric.Sheets[0].RowCount);
                                        //            fpbiomatric.Visible = true;
                                        //            btnprintmaster.Visible = true;
                                        //            string staffcode = "";
                                        //            string staffname = "";
                                        //            string dept = "";
                                        //            string design = "";
                                        //            string dept_acronym = "";
                                        //            string desig_acronym = "";

                                        //            string doj = "";
                                        //            string intime = "";
                                        //            string outtime = "";
                                        //            string Totalhours = "";

                                        //            fpbiomatric.Sheets[0].SetColumnWidth(3, 250);

                                        //            staffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                                        //            staffname = d1.Tables[0].Rows[h]["staff_name"].ToString();
                                        //            DataSet sds = new DataSet();
                                        //            DAccess2 sda = new DAccess2();
                                        //            sds.Clear();
                                        //            string ssql = "select title from staff_appl_master,staffmaster  where staff_appl_master.appl_no=staffmaster.appl_no  and staffmaster.staff_code='" + staffcode + "'";
                                        //            sds = sda.select_method_wo_parameter(ssql, "Text");
                                        //            if (sds.Tables[0].Rows.Count > 0)
                                        //            {
                                        //                if (sds.Tables[0].Rows[0][0].ToString() != "")
                                        //                {
                                        //                    staffname = sds.Tables[0].Rows[0][0].ToString() + d1.Tables[0].Rows[h]["staff_name"].ToString();
                                        //                }
                                        //            }

                                        //            dept_acronym = d1.Tables[0].Rows[h]["dept_acronym"].ToString();
                                        //            desig_acronym = d1.Tables[0].Rows[h]["desig_acronym"].ToString();
                                        //            dept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                                        //            design = d1.Tables[0].Rows[h]["desig_name"].ToString();

                                        //            doj = d1.Tables[0].Rows[h]["join_date"].ToString();
                                        //            intime = "";
                                        //            outtime = "";
                                        //            Totalhours = d1.Tables[0].Rows[h]["TotalHours"].ToString();

                                        //            fpbiomatric.Sheets[0].FrozenColumnCount = 4;

                                        //            string tmp_course = "";
                                        //            int getprevrow_cnt = 0;
                                        //            int initor_cnt = 0;
                                        //            //if (cnt == 0 || stsflag == false)
                                        //            //{
                                        //            //    sno++;                                                
                                        //            //}
                                        //            if (colcount==cnt)
                                        //            {
                                        //                newserialno++;
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text = Convert.ToString(newserialno);
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 1].Text = staffcode;
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 2].Text = staffname;
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 3].Text = dept;
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 4].Text = dept_acronym;
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 5].Text = design;
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 6].Text = desig_acronym;
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 7].Text = doj;
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 8].Text = category;                                              
                                        //            }
                                        //            //else
                                        //            //{
                                        //            //    if (fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text.Trim() == "")
                                        //            //    {
                                        //            //        newserialno++;
                                        //            //    }
                                        //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text = Convert.ToString(newserialno);
                                        //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                        //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 1].Text = staffcode;
                                        //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 2].Text = staffname;
                                        //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 3].Text = dept;
                                        //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 4].Text = dept_acronym;
                                        //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 5].Text = design;
                                        //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 6].Text = desig_acronym;
                                        //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 7].Text = doj;
                                        //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, 8].Text = category;
                                        //            //}
                                        //            //fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text = sno.ToString();
                                        //            //fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;

                                        //            //if (sts == false)
                                        //            //{
                                        //            //    sno++;
                                        //            //}



                                        //            string mrng = "";
                                        //            string evng = "";
                                        //            string att = d1.Tables[0].Rows[h]["att"].ToString();
                                        //            dsAtt.Tables[0].DefaultView.RowFilter = "staff_code='" + staffcode + "' and mon_year='" + splitdate[0] + '/' + splitdate[2] + "'";
                                        //            DataView dvatt = dsAtt.Tables[0].DefaultView;
                                        //            if (dvatt.Count > 0)
                                        //            {
                                        //                att = dvatt[0][splitdate[1]].ToString();
                                        //            }
                                        //            if (att != "")
                                        //            {
                                        //                string[] tmpdate = att.Split(new char[] { '-' });
                                        //                mrng = tmpdate[0].ToString();
                                        //                evng = tmpdate[1].ToString();
                                        //            }

                                        //            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                        //            //}
                                        //            //if ((Convert.ToDateTime(intime) <= Convert.ToDateTime(gracetime3)) && (Convert.ToDateTime(intime) > Convert.ToDateTime(timein3)))
                                        //            //{
                                        //            //  countgracetime = countgracetime + 1;

                                        //            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                        //            //fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.Red;
                                        //            //}

                                        //            //if ((Convert.ToDateTime(intime) > Convert.ToDateTime(gracetime3)))
                                        //            //{
                                        //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                        //            //}
                                        //            //else if ((Convert.ToDateTime(intime) <= Convert.ToDateTime(extendgracetime)) && (Convert.ToDateTime(intime) > Convert.ToDateTime(gracetime3)))
                                        //            //{
                                        //            //    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                        //            //}

                                        //            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                                        //            if (Totalhours != "")
                                        //            {
                                        //                string totalhours4;
                                        //                string[] split28 = Totalhours.Split(new Char[] { ':' });
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 2].Text = Convert.ToString(split28[0]) + ":" + split28[1].ToString();
                                        //            }
                                        //            else
                                        //            {
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 2].Text = Totalhours;
                                        //            }

                                        //            int setcount = 0;
                                        //            setcount = colcount;

                                        //            if (mrng == "P")
                                        //            {
                                        //                //25nov2013 countpresent++;     
                                        //                //added by srinath 12/3/2014 
                                        //                countpresent++;
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Green;
                                        //                counttotalmorpresent += 1;
                                        //            }

                                        //            if (evng == "P")
                                        //            {
                                        //                //25nov2013counteveningpresent++;
                                        //                //added by srinath 12/3/2014 
                                        //                counteveningpresent++;
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Green;
                                        //                counttotalevepresent += 1;
                                        //            }


                                        //            //25nov2013 totalperesent = countpresent + counteveningpresent;
                                        //            //25nov2013 totalperesent = totalperesent / 2;

                                        //            //added by srinath 12/3/2014   
                                        //            totalperesent = countpresent + counteveningpresent;
                                        //            totalperesent = totalperesent / 2;

                                        //            fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].Text = Convert.ToDouble(totalperesent).ToString();
                                        //            fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].HorizontalAlign = HorizontalAlign.Center;
                                        //            g = Convert.ToDouble(fpbiomatric.Sheets[0].GetText(rowstr - 1, 10).ToString());

                                        //            totpresent = totpresent + Convert.ToDouble(fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].Text);

                                        //            fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].HorizontalAlign = HorizontalAlign.Center;

                                        //            c = g * 100;

                                        //            d = Convert.ToDouble(day3) - holiday;
                                        //            fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].Text = d.ToString();
                                        //            fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                                        //            if ((c != 0) && (d != 0))
                                        //            {
                                        //                percentage = Convert.ToDouble(c) / Convert.ToDouble(d);
                                        //                percentage = Math.Round(percentage, 2);
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].HorizontalAlign = HorizontalAlign.Center;
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].Text = percentage.ToString();
                                        //            }

                                        //            if (mrng == "A")
                                        //            {

                                        //                //25nov2013 countmorningabsent = countmorningabsent + 1;   
                                        //                //added by srinath 12/3/2014 
                                        //                countmorningabsent = countmorningabsent + 1;
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Red;
                                        //                countmortotalabsent += 1;
                                        //            }
                                        //            if (evng == "A")
                                        //            {

                                        //                //25nov2013 counteveningabsent = counteveningabsent + 1;  
                                        //                //added by srinath 12/3/2014 
                                        //                counteveningabsent = counteveningabsent + 1;
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Red;
                                        //                countevetotalabsent += 1;
                                        //            }
                                        //            //25nov2013 totalabsent = counteveningabsent + countmorningabsent;
                                        //            //25nov2013 totalabsent = totalabsent / 2;

                                        //            //added by srinath 12/3/2014 
                                        //            totalabsent = counteveningabsent + countmorningabsent;
                                        //            totalabsent = totalabsent / 2;

                                        //            fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text = Convert.ToDouble(totalabsent).ToString();

                                        //            totabsent = totabsent + Convert.ToDouble(fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text);

                                        //            //totabsent = totabsent + Convert.ToDouble(fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text);
                                        //            fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center;

                                        //            if (mrng == "LA")
                                        //            {
                                        //                //25nov2013 countmorninglate++;
                                        //                //added by srinath 12/3/2014 
                                        //                countmorninglate++;
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkRed;
                                        //                //fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.DarkRed;
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.White;
                                        //            }
                                        //            if (evng == "LA")
                                        //            {
                                        //                //25nov2013 counteveninglate = counteveninglate + 1;
                                        //                //added by srinath 12/3/2014 
                                        //                counteveninglate = counteveninglate + 1;
                                        //            }
                                        //            //25nov2013 totallate = countmorninglate + counteveninglate;
                                        //            //25nov2013 totallate = totallate / 2;
                                        //            //added by srinath 12/3/2014 
                                        //            totallate = countmorninglate + counteveninglate;
                                        //            totallate = totallate / 2;

                                        //            fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].Text = Convert.ToDouble(totallate).ToString();
                                        //            fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].HorizontalAlign = HorizontalAlign.Center;

                                        //            if (mrng == "PER")
                                        //            {
                                        //                // countpereng++;
                                        //                //25nov2013 countpermission = countpermission + 1;
                                        //                //added by srinath 12/3/2014 
                                        //                countpermission = countpermission + 1;
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.BurlyWood;
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.White;

                                        //                //25nov2013  countmorningpermission = countmorningpermission + 1;
                                        //                //added by srinath 12/3/2014 
                                        //                countmorningpermission = countmorningpermission + 1;

                                        //            }
                                        //            if (evng == "PER")
                                        //            {
                                        //                //25nov2013 counteveper++;

                                        //                //eveningpermission++;

                                        //                //added by srinath 12/3/2014 
                                        //                eveningpermission++;

                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.BurlyWood;

                                        //                // fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].Text = counteveningpermission.ToString();
                                        //                //fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].HorizontalAlign = HorizontalAlign.Center; 
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].BackColor = Color.White;
                                        //                //25nov2013 countpermission2 = countpermission2 + 1;
                                        //                //25nov2013 counteveningpermission++;

                                        //                //added by srinath 12/3/2014 
                                        //                countpermission2 = countpermission2 + 1;
                                        //                counteveningpermission++;
                                        //            }
                                        //            //25nov2013 totalpermission = countmorningpermission + counteveningpermission;
                                        //            //  totalpermission = totalpermission / 2; //modified by srinath

                                        //            //added by srinath 12/3/2014 
                                        //            totalpermission = countmorningpermission + counteveningpermission;
                                        //            totalpermission = totalpermission / 2;

                                        //            fpbiomatric.Sheets[0].Cells[rowstr - 1, 13].Text = Convert.ToDouble(totalpermission).ToString();
                                        //            fpbiomatric.Sheets[0].Cells[rowstr - 1, 13].HorizontalAlign = HorizontalAlign.Center;
                                        //            if (mrng == "OOD")
                                        //            {
                                        //                // countood++;
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                        //                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.White;

                                        //            }
                                        //            fpbiomatric.Sheets[0].Columns[4].Visible = false;
                                        //            fpbiomatric.Sheets[0].Columns[6].Visible = false;
                                        //            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].Text = mrng.ToString();
                                        //            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].Text = evng.ToString();
                                        //            Panel2.Visible = true;
                                        //        }
                                        //        Session.Remove("datefrom");
                                        //        Session.Remove("dateto");
                                        //    }
                                        //}
                                        #endregion
                                    }
                                    //cnt++;
                                    //if (count != 0)
                                    //{
                                    fpbiomatric.Sheets[0].Columns[0].Visible = true;
                                    fpbiomatric.Sheets[0].Columns[1].Visible = false;
                                    fpbiomatric.Sheets[0].Columns[2].Visible = false;
                                    fpbiomatric.Sheets[0].Columns[3].Visible = false;
                                    fpbiomatric.Sheets[0].Columns[4].Visible = false;
                                    fpbiomatric.Sheets[0].Columns[5].Visible = false;
                                    fpbiomatric.Sheets[0].Columns[6].Visible = false;
                                    fpbiomatric.Sheets[0].Columns[7].Visible = false;
                                    fpbiomatric.Sheets[0].Columns[8].Visible = false;
                                    fpbiomatric.Sheets[0].Columns[9].Visible = false;
                                    fpbiomatric.Sheets[0].Columns[10].Visible = true;
                                    fpbiomatric.Sheets[0].Columns[11].Visible = true;
                                    fpbiomatric.Sheets[0].Columns[12].Visible = true;
                                    fpbiomatric.Sheets[0].Columns[13].Visible = true;
                                    fpbiomatric.Sheets[0].Columns[14].Visible = true;
                                    fpbiomatric.Sheets[0].Columns[15].Visible = true;
                                    fpbiomatric.Sheets[0].Columns[colcount].Visible = true;
                                    fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = true;

                                    fpbiomatric.Sheets[0].Columns[colcount + 2].Visible = false;

                                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;



                                    string ggg = cblsearch.Items[8].Text;
                                    if (cblsearch.Items[8].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[9].Visible = true;
                                    }
                                    else
                                    {
                                        fpbiomatric.Sheets[0].Columns[9].Visible = false;
                                    }
                                    if (cblsearch.Items[11].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = true;
                                    }
                                    else
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = false;
                                    }
                                    if (cblsearch.Items[11].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = true;
                                    }
                                    else
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = false;
                                    }
                                    if (cblsearch.Items[10].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount].Visible = true;
                                    }
                                    else
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount].Visible = false;
                                    }
                                    if (cblsearch.Items[12].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount + 2].Visible = true;
                                    }
                                    else
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount + 2].Visible = false;
                                    }
                                    if (cblsearch.Items[13].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                    }
                                    else
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                                    }
                                    if (cblsearch.Items[14].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                    }
                                    else
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;
                                    }
                                    if (cblsearch.Items[0].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[1].Visible = true;
                                    }
                                    else
                                    {
                                        fpbiomatric.Sheets[0].Columns[1].Visible = false;
                                    }
                                    if (cblsearch.Items[7].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[8].Visible = true;
                                    }
                                    else
                                    {
                                        fpbiomatric.Sheets[0].Columns[8].Visible = false;
                                    }
                                    if (cblsearch.Items[0].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[1].Visible = true;

                                    }
                                    if (cblsearch.Items[1].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[2].Visible = true;

                                    }
                                    if (cblsearch.Items[2].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[3].Visible = true;

                                    }
                                    if (cblsearch.Items[3].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[4].Visible = true;

                                    }
                                    if (cblsearch.Items[4].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[5].Visible = true;

                                    }
                                    if (cblsearch.Items[5].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[6].Visible = true;

                                    }
                                    if (cblsearch.Items[6].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[7].Visible = true;

                                    }

                                    if (cblsearch.Items[7].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[8].Visible = true;

                                    }

                                    if (cblsearch.Items[9].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[14].Visible = true;

                                    }
                                    else
                                    {
                                        fpbiomatric.Sheets[0].Columns[14].Visible = false;

                                    }

                                    //for (int i = 0; i < cblsearch.Items.Count; i++)
                                    //{
                                    //    if (cblsearch.Items[i].Selected == true)
                                    //    {
                                    //        fpbiomatric.Sheets[0].Columns[i].Visible = true;
                                    //    }


                                    //}

                                    // }


                                }
                                //Saran 10.12.2018


                                /////////////////////}
                                PrevStaffcode = staffcode1;
                            }
                        }
                        //lblood.Text = ":" + countood.ToString();
                        //lblpermission.Text = ":" + countpereng;
                        //lblevngpermission.Text = ":" + eveningpermission;
                        //late.Text = ":" + countmorlate.ToString();

                        lblood.Text = ":" + overallood.ToString();
                        lblpermission.Text = ":" + overallmorper.ToString();
                        lblevngpermission.Text = ":" + eveningpermission;
                        late.Text = ":" + overallmorlate.ToString();

                        //25nov2013 counttotalpresent = counttotalevepresent + counttotalmorpresent;

                        //25nov2013  counttotalpresent = counttotalpresent / 2; counttotalmorpresent  counttotalevepresent countmortotalabsent countevetotalabsent

                        //lblmorpresent.Text = ":" + counttotalmorpresent.ToString();
                        //lblevepresent.Text = ":" + counttotalevepresent.ToString();
                        lblmorpresent.Text = ":" + overallmorpresnet.ToString();
                        lblevepresent.Text = ":" + overallevepresnet.ToString();

                        //lblmorabsent.Text = ":" + countmortotalabsent.ToString();
                        //lbleveabsent.Text = ":" + countevetotalabsent.ToString();
                        lblmorabsent.Text = ":" + overallmorabsent.ToString();
                        lbleveabsent.Text = ":" + overalleveabsent.ToString();

                        /////////////////
                        counttotalabsent = countmortotalabsent + countevetotalabsent;
                        counttotalabsent = counttotalabsent / 2;
                        //lblontime.Text = ":" + countintime.ToString();
                        //Lblgracetime.Text = ":" + countgracetime.ToString();

                        lblontime.Text = ":" + overallontime.ToString();
                        Lblgracetime.Text = ":" + overallgracetime.ToString();

                        ////////////////

                        fpbiomatric.Sheets[0].RowCount++;

                        fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                        fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                        fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 0, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].Text = "Total No of  Present (Morning):" + overallmorpresnet.ToString();// 25nov2013 (counttotalmorpresent + countpereng + countmorlate).ToString();
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;

                        fpbiomatric.Sheets[0].RowCount++;

                        fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                        fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                        fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 0, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].Text = "Total No of Present (Evening):" + overallevepresnet.ToString();// 25nov2013 (counttotalevepresent + eveningpermission).ToString();
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].RowCount++;

                        fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                        fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                        fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 0, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].Text = "Total No of Absent (Morning):" + overallmorabsent.ToString();
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;

                        fpbiomatric.Sheets[0].RowCount++;

                        fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                        fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                        fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 0, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].Text = "Total No of Absent (Evening):" + overalleveabsent.ToString();
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;


                        DropDownListpage.Items.Clear();
                        Double totalRows = 0;
                        totalRows = Convert.ToInt32(fpbiomatric.Sheets[0].RowCount);
                        DropDownListpage.Items.Clear();
                        if (totalRows >= 10)
                        {
                            fpbiomatric.Sheets[0].PageSize = Convert.ToInt32(totalRows);
                            for (int k = 0; k < Convert.ToInt32(totalRows); k = k + 10)
                            {
                                DropDownListpage.Items.Add((k + 10).ToString());
                            }
                            DropDownListpage.Items.Add("Others");
                            DropDownListpage.SelectedIndex = DropDownListpage.Items.Count - 2;
                            fpbiomatric.Height = 350;
                            fpbiomatric.VerticalScrollBarPolicy = FarPoint.Web.Spread.ScrollBarPolicy.AsNeeded;
                            fpbiomatric.HorizontalScrollBarPolicy = FarPoint.Web.Spread.ScrollBarPolicy.AsNeeded;

                        }
                        else if (totalRows == 0)
                        {
                            DropDownListpage.Items.Add("0");
                            fpbiomatric.Height = 300;
                        }
                        else
                        {
                            fpbiomatric.Sheets[0].PageSize = Convert.ToInt32(totalRows);
                            DropDownListpage.Items.Add(fpbiomatric.Sheets[0].PageSize.ToString());
                            fpbiomatric.Height = 75 + (75 * Convert.ToInt32(totalRows));
                        }
                        Session["totalPages"] = (int)Math.Ceiling(totalRows / fpbiomatric.Sheets[0].PageSize);
                        Buttontotal.Text = "Records : " + totalRows + "          Pages : " + Session["totalPages"];

                        //drcount14.Close();
                        con.Close();

                    }
                    #endregion StaffAtt
                    else
                    {
                        Imgeveper.Visible = false;
                        Imgmorper.Visible = false;
                        Imglate.Visible = false;
                        Imgood.Visible = false;
                        //lbldate.Visible = false;  //Modified by Manikandan 09/05/2013
                        // btpresent.Visible = false;
                        // btnabsent.Visible = false;
                        // lbltotalabsent.Visible = false;
                        Lblgracetime.Visible = false;
                        btnontime.Visible = false;

                        // btngrace.Visible = false ;
                        lblontime.Visible = false;
                        btngracetime.Visible = false;
                        // lbltottalpresent.Visible = false;
                        lblevngpermission.Visible = false;
                        lblood.Visible = false;
                        lblpermission.Visible = false;
                        late.Visible = false;


                        btnmorabsent.Visible = false;
                        btneveabsent.Visible = false;
                        btnevepresent.Visible = false;
                        btnmorabsent.Visible = false;
                        lblmorpresent.Visible = false;
                        lblevepresent.Visible = false;
                        lblevepresent.Visible = false;
                        lbleveabsent.Visible = false;
                        lblmorabsent.Visible = false;
                        btnmorpresent.Visible = false;

                        fpbiomatric.Visible = false;
                        btnprintmaster.Visible = false;

                        Buttontotal.Visible = false;
                        Buttontotal.Visible = false;
                        DropDownListpage.Visible = false;
                        TextBoxpage.Visible = false;
                        lblrecord.Visible = false;
                        lblrecord.Visible = false;
                        lblpage.Visible = false;
                        Panel2.Visible = false;
                        lblnorec.Visible = true;

                    }
                    if (d1.Tables.Count == 0)
                    {
                        fpbiomatric.Visible = false;
                        btnprintmaster.Visible = false;

                        btnprintmaster.Visible = false;
                        Buttontotal.Visible = false;
                        Buttontotal.Visible = false;
                        DropDownListpage.Visible = false;
                        TextBoxpage.Visible = false;
                        lblrecord.Visible = false;
                        lblrecord.Visible = false;
                        lblpage.Visible = false;
                        Panel2.Visible = false;
                        lblnorec.Visible = true;
                    }
                    //  drname.Close();
                    con1.Close();
                    // counttotalpresent = counttotalevepresent + counttotalmorpresent;

                    //counttotalpresent = counttotalpresent / 2;
                    // counttotalabsent = countmortotalabsent + countevetotalabsent;
                    //  counttotalabsent = counttotalabsent / 2;

                }
            }
            #endregion RBINOUT

            #region RBDaily
            else if (rdodaily.Checked == true)
            {
                int sno1 = 0;
                btnmorpresent.Visible = false;
                cblsearch.Visible = false;
                // CheckBoxselect.Visible = false;
                Panel1.Visible = false;
                Panel2.Visible = false;
                cblsearch.Visible = false;
                Imgmorper.Visible = false;
                //CheckBoxselect.Visible = false;
                // Imgselectall.Visible = false;
                ///Image8.Visible = false;
                ///

                fpbiomatric.Sheets[0].ColumnCount = 0;
                fpbiomatric.Sheets[0].RowCount = 0;
                fpbiomatric.Sheets[0].ColumnCount = 9;

                fpbiomatric.Sheets[0].SheetCorner.RowCount = 1;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Staff Code";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Staff Name";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Department";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Designation";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Finger ID";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Date";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 7].Text = "In Time";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 7].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 8].Text = "Out Time";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 8].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.DefaultStyle.HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].SetColumnWidth(0, 50);
                fpbiomatric.Sheets[0].SetColumnWidth(1, 100);
                fpbiomatric.Sheets[0].SetColumnWidth(2, 200);
                fpbiomatric.Sheets[0].SetColumnWidth(3, 250);
                fpbiomatric.Sheets[0].SetColumnWidth(4, 200);
                fpbiomatric.Sheets[0].SetColumnWidth(5, 100);
                fpbiomatric.Sheets[0].SetColumnWidth(6, 100);
                fpbiomatric.Sheets[0].SetColumnWidth(7, 100);
                fpbiomatric.Sheets[0].SetColumnWidth(8, 100);

                FarPoint.Web.Spread.TextCellType textcell = new FarPoint.Web.Spread.TextCellType();
                fpbiomatric.Sheets[0].SetColumnMerge(0, FarPoint.Web.Spread.Model.MergePolicy.Always);
                fpbiomatric.Sheets[0].SetColumnMerge(1, FarPoint.Web.Spread.Model.MergePolicy.Always);

                fpbiomatric.ActiveSheetView.Columns[0].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[1].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[2].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[3].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[4].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[5].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[6].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[7].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[8].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[0].Font.Size = FontUnit.Medium;

                fpbiomatric.ActiveSheetView.Columns[1].Font.Size = FontUnit.Medium;


                fpbiomatric.ActiveSheetView.Columns[2].Font.Size = FontUnit.Medium;

                fpbiomatric.ActiveSheetView.Columns[3].Font.Size = FontUnit.Medium;

                fpbiomatric.ActiveSheetView.Columns[4].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[5].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[6].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[7].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[8].Font.Size = FontUnit.Medium;

                date1 = Txtentryfrom.Text.ToString();
                string[] split = date1.Split(new Char[] { '/' });
                datefrom = split[1].ToString() + "/" + split[0].ToString() + "/" + split[2].ToString();
                date2 = Txtentryto.Text.ToString();
                string[] split1 = date2.Split(new Char[] { '/' });
                dateto = split1[1].ToString() + "/" + split1[0].ToString() + "/" + split1[2].ToString();
                DateTime dfrom = Convert.ToDateTime(datefrom);
                DateTime dto = Convert.ToDateTime(dateto);
                //////////////////////////////////////////////////////////////////////////////
                if (dfrom <= dto)
                {
                    lbldate.Visible = false;
                    FarPoint.Web.Spread.StyleInfo style = new FarPoint.Web.Spread.StyleInfo();
                    style.Font.Size = 10;
                    style.Font.Bold = true;
                    fpbiomatric.Sheets[0].SheetCornerStyle = new FarPoint.Web.Spread.StyleInfo(style);
                    fpbiomatric.Sheets[0].ColumnHeader.DefaultStyle = new FarPoint.Web.Spread.StyleInfo(style);
                    fpbiomatric.Sheets[0].AllowTableCorner = false;
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                    //fpbiomatric.Sheets[0].SheetCorner.Cells[0, 0].Text = "S.No";
                    //fpbiomatric.Sheets[0].SheetCorner.Cells[0, 0].BackColor = Color.AliceBlue;
                    //fpbiomatric.Sheets[0].SheetCorner.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                    //fpbiomatric.Sheets[0].SheetCorner.Cells[0, 0].Border.BorderColorRight = Color.White;
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 3].Border.BorderColor = Color.White;



                    string str = "select isnull(collname, ' ') as collname,isnull(address1, ' ') as address1,isnull(address2,' ') as address2,isnull(address3, ' ') as address3,isnull(pincode,' ') as pincode from collinfo where college_code='" + ddlcollege.SelectedValue.ToString() + "'";
                    con.Close();
                    con.Open();
                    SqlCommand comm = new SqlCommand(str, con);
                    SqlDataReader drr = comm.ExecuteReader();
                    drr.Read();
                    string coll_name = Convert.ToString(drr["collname"]);
                    string coll_address1 = Convert.ToString(drr["address1"]);
                    string coll_address2 = Convert.ToString(drr["address2"]);
                    string coll_address3 = Convert.ToString(drr["address3"]);
                    string pin_code = Convert.ToString(drr["pincode"]);




                    MyImg mi = new MyImg();
                    mi.ImageUrl = "../images/10BIT001.jpeg";
                    mi.ImageUrl = "Handler/Handler2.ashx?";



                    fpbiomatric.Sheets[0].SetColumnWidth(0, 50);


                    fpbiomatric.Sheets[0].ColumnHeader.Rows[0].Font.Bold = true;
                    fpbiomatric.Sheets[0].ColumnHeader.Rows[0].Font.Size = FontUnit.Medium;
                    fpbiomatric.Sheets[0].ColumnHeader.Rows[0].BackColor = Color.FromArgb(214, 235, 255);


                    //try
                    // {
                    //     if ((datefrom != null) && (dateto != null))
                    {
                        sql = " SELECT staffmaster.staff_code,date,len(staffmaster.staff_code), staffmaster.staff_name,desig_name,dept_name,stafftrans.category_code,fingerprint1,bio..daily_logs.intime,bio..daily_logs.outtime,CONVERT(VARCHAR(10),date,103) as Date,desig_master.priority,desig_master.print_pri ,hrdept_master.dept_name,stafftrans.stftype ,desig_master.priority,hrdept_master.priority,staffmaster.join_date,hrdept_master.dept_code,CAST(Fingerprint1 as nvarchar) as Fingerprint";
                        sql = sql + " FROM staffmaster INNER JOIN stafftrans ON staffmaster.staff_code = stafftrans.staff_code";
                        sql = sql + " INNER JOIN hrdept_master ON stafftrans.dept_code = hrdept_master.dept_code AND";
                        sql = sql + " staffmaster.college_code = hrdept_master.college_code";
                        sql = sql + " INNER JOIN desig_master ON stafftrans.desig_code = desig_master.desig_code and";
                        sql = sql + " hrdept_master.dept_code=stafftrans.dept_code and hrdept_master.college_code=" + ddlcollege.SelectedValue.ToString() + " and";
                        sql = sql + " desig_master.collegecode='" + ddlcollege.SelectedValue.ToString() + "'   INNER JOIN bio..daily_logs ON bio..daily_logs.fingerprintdetails like staffmaster.fingerprint1 where stafftrans.latestrec<>0  and";
                        sql = sql + " fingerprint1 is not null and fingerprint1 not like '' AND";
                        sql = sql + " staffmaster.college_code =" + ddlcollege.SelectedValue.ToString() + "  And ((staffmaster.resign = 0 And staffmaster.settled = 0)) and ((staffmaster.settled =0 and staffmaster.resign=0) or (resign=1 and settled=1 and relieve_date >='' and relieve_date <='')) ";
                        sql = sql + "and bio.dbo.daily_logs.Date Between '" + datefrom + "' and '" + dateto + "'";
                        if (tbseattype.Text != "---Select---")
                        {
                            int itemcount = 0;
                            for (itemcount = 0; itemcount < cbldepttype.Items.Count; itemcount++)
                            {
                                if (cbldepttype.Items[itemcount].Selected == true)
                                {
                                    if (strdept == "")
                                        strdept = "'" + cbldepttype.Items[itemcount].Value.ToString() + "'";
                                    else
                                        strdept = strdept + "," + "'" + cbldepttype.Items[itemcount].Value.ToString() + "'";
                                }
                            }
                            if (strdept != "")
                            {
                                strdept = " in(" + strdept + ")";
                            }
                            sql = sql + " and hrdept_master.dept_code " + strdept + "";
                        }
                        if (tbblood.Text != "---Select---")
                        {
                            int itemcount1 = 0;
                            for (itemcount1 = 0; itemcount1 < cblcategory.Items.Count; itemcount1++)
                            {
                                if (cblcategory.Items[itemcount1].Selected == true)
                                {
                                    if (strcategory == "")
                                        strcategory = "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                                    else
                                        strcategory = strcategory + "," + "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                                }
                            }
                            if (strcategory != "")
                            {
                                strcategory = " in (" + strcategory + ")";
                            }
                            sql = sql + "  and stafftrans.category_code" + strcategory + "";
                        }
                        if (cbostaffname.SelectedItem.Value.ToString() != "All")
                        {
                            //Modified By srinath 22/10/2013
                            // sql = sql + " and staffmaster.staff_name like '%" + cbostaffname.Text + "%' ";
                            sql = sql + " and staffmaster.staff_name ='" + cbostaffname.SelectedItem.ToString() + "' ";
                        }
                        if (cbostaffcode.SelectedItem.Value.ToString() != "All")
                        {
                            //sql = sql + " and staffmaster.staff_code like '%" + cbostaffcode.Text + "%' ";
                            sql = sql + " and staffmaster.staff_code ='" + cbostaffcode.Text + "' ";
                        }
                        if (Chktimein.Checked == true)
                        {
                            strTime = "";
                            strTime = " and  Right(CONVERT(nvarchar(100),time_in ,100),7)  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "'";

                        }
                        else if (Chktimeout.Checked == true)
                        {
                            strTime = "";
                            strTime = " AND Right(CONVERT(nvarchar(100),time_Out ,100),7) between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";

                            // sql = sql + " " + strTime + "";
                        }

                        if ((Chktimein.Checked == true) && (Chktimeout.Checked == true))
                        {
                            strTime = "";

                            strTime = " and  Right(CONVERT(nvarchar(100),time_in ,100),7)  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "' AND Right(CONVERT(nvarchar(100),time_Out ,100),7) between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";

                            //  sql = sql + " " + strTime + "";
                        }
                        if (strTime != null)
                        {
                            sql = sql + " " + strTime + "";
                        }
                        // Str = "";
                        sql = sql + desig_query;
                        //modified by srinath 5/04/2014
                        //  sql = sql + " order by hrdept_master.dept_name,date ";
                        if (ddlorder.SelectedItem.Text.ToString() == "Priority")
                        {
                            sql = sql + " order by hrdept_master.priority,desig_master.priority,hrdept_master.dept_name,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code  ";//Modified by srinath 28/03/2014
                        }
                        else
                        {
                            sql = sql + " order by hrdept_master.dept_name,len(staffmaster.staff_code),staffmaster.staff_code";//Modified by srinath 28/03/2014
                        }
                        con.Close();
                        con.Open();
                        SqlCommand cmd = new SqlCommand(sql, con);
                        SqlDataReader drcount20;
                        Imgeveper.Visible = false;
                        Imgmorper.Visible = false;
                        Imglate.Visible = false;
                        Imgood.Visible = false;

                        Lblgracetime.Visible = false;
                        btnontime.Visible = false;
                        // btngrace.Visible = false;
                        lblontime.Visible = false;
                        btngracetime.Visible = false;
                        // lbltottalpresent.Visible = false;
                        lblood.Visible = false;
                        lblpermission.Visible = false;
                        lblevngpermission.Visible = false;
                        late.Visible = false;

                        btnmorabsent.Visible = false;
                        btneveabsent.Visible = false;
                        btnevepresent.Visible = false;
                        btnmorabsent.Visible = false;
                        lblmorpresent.Visible = false;
                        lblevepresent.Visible = false;
                        lblevepresent.Visible = false;
                        lbleveabsent.Visible = false;
                        lblmorabsent.Visible = false;

                        int rowstr2 = 0;
                        string staffcode = "";
                        string date = "";
                        drcount20 = cmd.ExecuteReader();

                        int cnt = 0;
                        while (drcount20.Read())
                        {
                            sno1++;
                            if (drcount20.HasRows == true)
                            {
                                lblnorec.Visible = false;
                                fpbiomatric.Visible = true;
                                btnprintmaster.Visible = true;
                                Buttontotal.Visible = false;
                                lblpage.Visible = false;
                                lblrecord.Visible = false;
                                DropDownListpage.Visible = false;
                                TextBoxpage.Visible = false;

                                //Added By Srinath 26/4/2014====Start
                                if (strtempdept != drcount20["dept_name"].ToString())
                                {
                                    strtempdept = drcount20["dept_name"].ToString();
                                    fpbiomatric.Sheets[0].RowCount += 1;
                                    int col = 0;
                                    if (cblsearch.Items[0].Selected == false)
                                    {
                                        col = 0;
                                    }
                                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Text = strtempdept;
                                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Font.Bold = true;
                                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].HorizontalAlign = HorizontalAlign.Center;
                                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].VerticalAlign = VerticalAlign.Middle;
                                    fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].BackColor = Color.LightYellow;
                                    fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, col, 1, fpbiomatric.Sheets[0].ColumnCount);
                                }
                                //================================End
                                fpbiomatric.Sheets[0].RowCount += 1;
                                rowstr2 = Convert.ToInt32(fpbiomatric.Sheets[0].RowCount);

                                string staffcode2 = "";
                                string staffname2 = "";
                                string dept2 = "";
                                string design2 = "";
                                //string date = "";
                                string intime2 = "";
                                string outtime2 = "";
                                outtime2 = drcount20["outtime"].ToString();
                                string date4 = drcount20["Date"].ToString();
                                staffname2 = drcount20["staff_name"].ToString();
                                string staffcode5 = drcount20["staff_code"].ToString();
                                string catgory_code = drcount20["category_code"].ToString();
                                // string date2="";

                                if ((staffcode == staffcode5) && (date == date4) && (date != "") && (staffcode != ""))
                                {
                                    string lunch_strat_time = getlunchtime(" select right(CONVERT(nvarchar(100),lunch_st_time ,100),7) as lunch from in_out_time where category_code='" + catgory_code + "'");
                                    string lunch_end_time = getlunchtime(" select right(CONVERT(nvarchar(100),lunch_end_time ,100),7) as lunch from in_out_time where category_code='" + catgory_code + "'");
                                    if (outtime2 != "")
                                    {
                                        if ((Convert.ToDateTime(outtime2) >= Convert.ToDateTime(lunch_strat_time)) && (Convert.ToDateTime(outtime2) <= Convert.ToDateTime(lunch_end_time)))
                                        {
                                        }
                                        else
                                        {
                                            fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 2].Text = staffname2 + "*"; ;
                                            fpbiomatric.Sheets[0].Rows[rowstr2 - 1].BackColor = Color.LightBlue;
                                        }
                                    }
                                    else
                                    {
                                        fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 2].Text = staffname2 + "*"; ;
                                        fpbiomatric.Sheets[0].Rows[rowstr2 - 1].BackColor = Color.LightBlue;
                                    }
                                }
                                else
                                {
                                    fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 2].Text = staffname2;
                                }
                                staffcode2 = drcount20["staff_code"].ToString();
                                staffcode = staffcode2;
                                dept2 = drcount20["dept_name"].ToString();
                                design2 = drcount20["desig_name"].ToString();
                                date = drcount20["Date"].ToString();
                                string fingerid = drcount20["Fingerprint"].ToString();
                                intime2 = drcount20["intime"].ToString();
                                if (cnt == 0)
                                {
                                    newserialno++;
                                    fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 0].Text = newserialno.ToString();
                                    fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                    fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 1].Text = staffcode2;
                                    // fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 1].Text = staffname2;
                                    fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 3].Text = dept2;
                                    fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 4].Text = design2;
                                    fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 5].CellType = textcell;
                                    fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 5].Text = fingerid;
                                    
                                    fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 6].Text = date;
                                }
                                else
                                {
                                    if (fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 0].Text == "")
                                    {
                                        newserialno++;
                                    }
                                    fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 0].Text = newserialno.ToString();
                                    fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                    fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 1].Text = staffcode2;
                                    // fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 1].Text = staffname2;
                                    fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 3].Text = dept2;
                                    fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 4].Text = design2;
                                    fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 5].CellType = textcell;
                                    fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 5].Text = fingerid;
                                    
                                    fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 6].Text = date;
                                }

                                fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 7].Text = "In Time";
                                fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 8].Text = "Out Time";
                                fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 7].Text = intime2;
                                fpbiomatric.Sheets[0].Cells[rowstr2 - 1, 8].Text = outtime2;
                            }
                            Session.Remove("datefrom");
                            Session.Remove("dateto");
                        }
                        if (drcount20.HasRows == false)
                        {
                            fpbiomatric.Visible = false;
                            btnprintmaster.Visible = false;
                            Buttontotal.Visible = false;
                            lblpage.Visible = false;
                            lblrecord.Visible = false;
                            DropDownListpage.Visible = false;
                            TextBoxpage.Visible = false;
                            lblnorec.Visible = true;
                            late.Visible = false;
                        }
                        drcount20.Close();
                        con.Close();
                    }
                    DropDownListpage.Items.Clear();
                    Double totalRows = 0;
                    totalRows = Convert.ToInt32(fpbiomatric.Sheets[0].RowCount);
                    DropDownListpage.Items.Clear();
                    if (totalRows >= 10)
                    {
                        fpbiomatric.Sheets[0].PageSize = Convert.ToInt32(totalRows);
                        for (int k = 0; k < Convert.ToInt32(totalRows); k = k + 10)
                        {
                            DropDownListpage.Items.Add((k + 10).ToString());
                        }
                        DropDownListpage.Items.Add("Others");
                        DropDownListpage.SelectedIndex = DropDownListpage.Items.Count - 2;
                        fpbiomatric.Height = 350;
                        fpbiomatric.VerticalScrollBarPolicy = FarPoint.Web.Spread.ScrollBarPolicy.AsNeeded;
                        fpbiomatric.HorizontalScrollBarPolicy = FarPoint.Web.Spread.ScrollBarPolicy.AsNeeded;

                    }
                    else if (totalRows == 0)
                    {
                        DropDownListpage.Items.Add("0");
                        fpbiomatric.Height = 300;
                    }
                    else
                    {
                        fpbiomatric.Sheets[0].PageSize = Convert.ToInt32(totalRows);
                        DropDownListpage.Items.Add(fpbiomatric.Sheets[0].PageSize.ToString());
                        fpbiomatric.Height = 75 + (75 * Convert.ToInt32(totalRows));
                    }


                    Session["totalPages"] = (int)Math.Ceiling(totalRows / fpbiomatric.Sheets[0].PageSize);
                    Buttontotal.Text = "Records : " + totalRows + "          Pages : " + Session["totalPages"];
                }
                else
                {
                    lbldate.Text = "Date Must Be Greater Than From Date";
                    lbldate.Visible = true;
                }
            }
            #endregion RBDaily
            //================

            #region RBInonly
            else if (rdoinonly.Checked == true)
            {
                int sno2 = 0;
                //CheckBoxselect.Visible = true;
                string[] search = new string[50];

                if (cblsearch.Items[0].Selected == true)
                {
                    search[0] = "staffmaster.staff_code";
                }
                if (cblsearch.Items[1].Selected == true)
                {
                    search[1] = "staffmaster.staff_name";
                }
                if (cblsearch.Items[2].Selected == true)
                {
                    search[2] = "hrdept_master.dept_name";
                }
                if (cblsearch.Items[3].Selected == true)
                {
                    search[3] = "dept_acronym";
                }
                if (cblsearch.Items[4].Selected == true)
                {
                    search[4] = "desig_master.desig_name";
                }
                if (cblsearch.Items[5].Selected == true)
                {
                    search[5] = " desig_master.desig_acronym";
                }
                if (cblsearch.Items[6].Selected == true)
                {
                    search[6] = "CONVERT(VARCHAR(10),staffmaster.join_date,103)";
                }
                if (cblsearch.Items[7].Selected == true)
                {
                    search[7] = "in_out_time.category_name";
                }
                if (cblsearch.Items[8].Selected == true)
                {
                    search[8] = "  CASE WHEN time_in = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_in ,100),7) END";// right(CONVERT(nvarchar(100),time_in ,100),6) as time_in";//barath 21.06.17
                }
                //if (cblsearch.Items[11].Selected == true)
                //{
                //}



                //string wsearch = "";
                int count = 0;
                //for (i = 0; i < cblsearch.Items.Count; i++)
                //{
                //    if (cblsearch.Items[i].Selected == true)
                //    {
                //        count = count + 1;

                //    }
                //}




                fpbiomatric.Sheets[0].ColumnCount = 0;
                fpbiomatric.Sheets[0].ColumnCount = 16;
                fpbiomatric.Sheets[0].ColumnHeader.RowCount = 2;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Staff Code";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Staff Name";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Department";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Dept Acronym";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;


                fpbiomatric.ActiveSheetView.Columns[0].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[1].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[2].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[3].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[4].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[5].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[6].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[7].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[8].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[9].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[10].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[11].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[12].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[13].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[14].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[15].Font.Name = "Book Antiqua";
                // fpbiomatric.ActiveSheetView.Columns[10].Font.Name = "Book Antiqua";

                //fpbiomatric.ActiveSheetView.Columns[1].Font.Name = "Arial";

                fpbiomatric.ActiveSheetView.Columns[0].Font.Size = FontUnit.Medium;

                fpbiomatric.ActiveSheetView.Columns[1].Font.Size = FontUnit.Medium;


                fpbiomatric.ActiveSheetView.Columns[2].Font.Size = FontUnit.Medium;

                fpbiomatric.ActiveSheetView.Columns[3].Font.Size = FontUnit.Medium;

                fpbiomatric.ActiveSheetView.Columns[4].Font.Size = FontUnit.Medium;


                fpbiomatric.ActiveSheetView.Columns[5].Font.Size = FontUnit.Medium;


                fpbiomatric.ActiveSheetView.Columns[6].Font.Size = FontUnit.Medium;


                fpbiomatric.ActiveSheetView.Columns[7].Font.Size = FontUnit.Medium;


                fpbiomatric.ActiveSheetView.Columns[8].Font.Size = FontUnit.Medium;

                fpbiomatric.ActiveSheetView.Columns[9].Font.Size = FontUnit.Medium;


                fpbiomatric.ActiveSheetView.Columns[10].Font.Size = FontUnit.Medium;

                fpbiomatric.ActiveSheetView.Columns[11].Font.Size = FontUnit.Medium;


                fpbiomatric.ActiveSheetView.Columns[12].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[13].Font.Size = FontUnit.Medium;

                fpbiomatric.ActiveSheetView.Columns[14].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[15].Font.Size = FontUnit.Medium;
                //fpbiomatric.ActiveSheetView.Columns[0].Font.Size = FontUnit.Medium;
                fpbiomatric.Sheets[0].FrozenColumnCount = 4;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Designation";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Desig Acronym";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 7].Text = "Date Of Joinng";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 7].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 8].Text = "Category";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 8].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 9].Text = "Finger ID";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 9].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 10].Text = "Working Days";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 10].HorizontalAlign = HorizontalAlign.Center;

                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 15].Text = "Att  %";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 15].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].SetColumnWidth(8, 70);
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 11].Text = "P";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 11].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].SetColumnWidth(11, 30);
                fpbiomatric.Sheets[0].SetColumnWidth(0, 50);
                fpbiomatric.Sheets[0].SetColumnWidth(1, 150);
                fpbiomatric.Sheets[0].SetColumnWidth(2, 100);
                fpbiomatric.Sheets[0].SetColumnWidth(3, 100);
                fpbiomatric.Sheets[0].SetColumnWidth(4, 100);
                fpbiomatric.Sheets[0].SetColumnWidth(5, 100);
                fpbiomatric.Sheets[0].SetColumnWidth(6, 100);

                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 12].Text = "A";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 12].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].SetColumnWidth(11, 30);
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 13].Text = "LA";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 13].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].SetColumnWidth(12, 30);
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 14].Text = "PER";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 14].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].SetColumnWidth(13, 30);


                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 5, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 7, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 7, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 8, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 9, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 10, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 11, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 12, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 13, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 14, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 15, 2, 1);
                fpbiomatric.Sheets[0].FrozenColumnCount = 8;
                //fpbiomatric.Sheets[0].FrozenColumnCount = 14;
                Panel1.Visible = true;
                string tempstaffcode = "";
                fpbiomatric.Sheets[0].RowCount = 0;
                fpbiomatric.Sheets[0].ColumnCount = 16;
                date1 = Txtentryfrom.Text.ToString();
                string[] split = date1.Split(new Char[] { '/' });
                datefrom = split[1].ToString() + "/" + Convert.ToInt16(split[0].ToString()) + "/" + split[2].ToString();
                date2 = Txtentryto.Text.ToString();
                string[] split1 = date2.Split(new Char[] { '/' });
                dateto = split1[1].ToString() + "/" + split1[0].ToString() + "/" + split1[2].ToString();
                DateTime dt1 = Convert.ToDateTime(datefrom.ToString());
                DateTime dt2 = Convert.ToDateTime(dateto.ToString());
                TimeSpan t = dt2.Subtract(dt1);
                long days = t.Days;
                day3 = Convert.ToInt32(days);
                day3 = day3 + 1;

                if ((datefrom != null) && (dateto != null))
                {
                    strdate = " and bio_attendance.access_date between '" + datefrom + "' and '" + dateto + "'";
                    if (days >= 0)
                    {
                        string[] differdays = new string[days];


                        lbldate.Visible = false;

                        fpbiomatric.Sheets[0].ColumnCount = fpbiomatric.Sheets[0].ColumnCount + 6;
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].Text = Txtentryfrom.Text.ToString();
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, fpbiomatric.Sheets[0].ColumnCount - 6, 1, 6);

                        fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].Tag = datefrom.ToString();
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 1].Text = "Permission Type";
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 1, 33);
                        fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;

                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 3].Text = "Mor";
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 3].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 3, 33);
                        fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 3].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 2].Text = "Eve";
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 2, 33);

                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 6].Text = "In";
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 6, 33);
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 5].Text = "Out";
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 5].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 6, 33);



                        for (int date_loop = 1; date_loop <= days; date_loop++) //Next Next Date
                        {

                            differdays[date_loop - 1] = dt1.AddDays(date_loop).ToString();
                            string[] split11 = differdays[date_loop - 1].Split(new char[] { ' ' });
                            string[] split12 = split11[0].Split(new Char[] { '/' });
                            string datevar = "";
                            datevar = split12[1].ToString() + "/" + split12[0].ToString() + "/" + split12[2].ToString();

                            fpbiomatric.Sheets[0].ColumnCount = fpbiomatric.Sheets[0].ColumnCount + 6;

                            //modified by srinath 28/4/2014
                            DateTime dthead = Convert.ToDateTime(split12[0].ToString() + "/" + split12[1].ToString() + "/" + split12[2].ToString());
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].Text = dthead.ToString("dd/MM/yyyy");
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].Tag = split12[0].ToString() + "/" + split12[1].ToString() + "/" + split12[2].ToString();

                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 1].Text = "Permission Type";
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 1, 33);

                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 3].Text = "Mor";
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 3].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 3].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, fpbiomatric.Sheets[0].ColumnCount - 6, 1, 6);

                            fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 3, 33);
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 2].Text = "Eve";
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 2, 33);
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;



                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 6].Text = "In";
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 6, 33);
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 5].Text = "Out";
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 5].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 6, 33);
                        }
                    }
                    else
                    {
                        lbldate.Visible = true;
                        lbldate.Text = "Date Must Be Greater Than From Date";
                    }
                    string sqlname;
                    fpbiomatric.Sheets[0].ColumnCount = fpbiomatric.Sheets[0].ColumnCount + 1;
                    int percount = fpbiomatric.Sheets[0].ColumnCount;
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, percount - 1].Text = "Total Permission Count";
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, percount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, percount - 1, 2, 1);
                    //if (cbo_att.SelectedItem.Value.ToString() == "Present(P)")
                    //{
                    //    if (rdomorning.Checked == true)
                    //    {
                    //        Str = " and left(att,2)='P-'";

                    //    }
                    //    else if (rdoevening.Checked == true)
                    //    {

                    //        Str = " and right(att,2)='-P'";

                    //    }
                    //    else if (rdoall.Checked == true)
                    //    {
                    //        Str = " and att like '%P%'";

                    //    }
                    //    else if (rdoboth.Checked == true)
                    //    {
                    //        Str = " and att='P-P'";
                    //    }
                    //}
                    //else if (cbo_att.SelectedItem.Value.ToString() == "Absent(A)")
                    //{
                    //    if (rdomorning.Checked == true)
                    //    {
                    //        Str = " and left(att,2)='A-'";

                    //    }
                    //    else if (rdoevening.Checked == true)
                    //    {
                    //        Str = " and right(att,2)='-A'";
                    //    }
                    //    else if (rdoall.Checked == true)
                    //    {

                    //        Str = " and att like '%A%'";
                    //    }
                    //    else if (rdoboth.Checked == true)
                    //    {
                    //        Str = " and att='A-A'";

                    //    }




                    //}
                    //else if (cbo_att.SelectedItem.Value.ToString() == "Late(LA)")
                    //{
                    //    if (rdomorning.Checked == true)
                    //    {

                    //        Str = " and left(att,3)='LA-'";
                    //    }
                    //    else if (rdoevening.Checked == true)
                    //    {


                    //        Str = " and right(att,3)='-LA'";
                    //    }

                    //    else if (rdoall.Checked == true)
                    //    {
                    //        Str = " and att like '%LA%'";
                    //    }

                    //    else if (rdoboth.Checked == true)
                    //    {
                    //        Str = " and att='LA-LA'";


                    //    }
                    //}
                    //else if (cbo_att.SelectedItem.Value.ToString() == "Permission(PER)")
                    //{
                    //    if (rdomorning.Checked == true)
                    //    {
                    //        Str = " and left(att,4)='PER-'";

                    //    }
                    //    else if (rdoevening.Checked == true)
                    //    {
                    //        Str = " and right(att,4)='-PER'";
                    //    }
                    //    else if (rdoall.Checked == true)
                    //    {
                    //        Str = " and att like '%PER%'";


                    //    }
                    //    else if (rdoboth.Checked == true)
                    //    {
                    //        Str = " and att='PER-PER'";

                    //    }
                    //}
                    //else if (cbo_att.SelectedItem.Value.ToString() == "Official OD(OOD)")
                    //{
                    //    if (rdomorning.Checked == true)
                    //    {

                    //        Str = " and left(att,4)='OOD-'";
                    //    }
                    //    else if (rdoevening.Checked == true)
                    //    {
                    //        Str = " and right(att,4)='-OOD'";
                    //    }
                    //    else if (rdoall.Checked == true)
                    //    {
                    //        Str = " and att like '%OOD%'";
                    //    }
                    //    else if (rdoboth.Checked == true)
                    //    {

                    //        Str = " and att='OOD-OOD'";

                    //    }
                    //}







                    //////////////////////////////////////////////////////////////////////////////
                    FarPoint.Web.Spread.TextCellType textcell = new FarPoint.Web.Spread.TextCellType();
                    FarPoint.Web.Spread.StyleInfo style = new FarPoint.Web.Spread.StyleInfo();
                    style.Font.Size = 10;
                    style.Font.Bold = true;
                    fpbiomatric.Sheets[0].SheetCornerStyle = new FarPoint.Web.Spread.StyleInfo(style);
                    fpbiomatric.Sheets[0].ColumnHeader.DefaultStyle = new FarPoint.Web.Spread.StyleInfo(style);
                    fpbiomatric.Sheets[0].AllowTableCorner = false;
                    //fpbiomatric.Sheets[0].SheetCorner.Cells[0, 0].Text = "  ";//======================


                    //fpbiomatric.Sheets[0].SheetCorner.Cells[0, 0].Text = "S.No";
                    //Fpspread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 7, 1);
                    //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, fpbiomatric.Sheets[0].ColumnCount - 1, 6, 1);
                    //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 9, 1);
                    //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 7, 1);




                    // fpbiomatric.Sheets[0].ColumnHeader.Rows[6].BackColor = Color.FromArgb(214, 235, 255);
                    //fpbiomatric.Sheets[0].SheetCornerSpanModel.Add(0, 0, 6, 1);//================
                    //fpbiomatric.Sheets[0].SheetCorner.Cells[0, 0].Text = "S.No";
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].Border.BorderColorRight = Color.White;
                    //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 3, 1);

                    //=========================================================
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 7].Border.BorderColor = Color.White;

                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[1, 7].Border.BorderColor = Color.White;

                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 3].Border.BorderColor = Color.White;
                    //=========================================================


                    string str = "select isnull(collname, ' ') as collname,isnull(address1, ' ') as address1,isnull(address2,' ') as address2,isnull(address3, ' ') as address3,isnull(pincode,' ') as pincode from collinfo where college_code='" + ddlcollege.SelectedValue.ToString() + "'";
                    con.Close();
                    con.Open();
                    SqlCommand comm = new SqlCommand(str, con);
                    SqlDataReader drr = comm.ExecuteReader();
                    drr.Read();
                    string coll_name = Convert.ToString(drr["collname"]);
                    string coll_address1 = Convert.ToString(drr["address1"]);
                    string coll_address2 = Convert.ToString(drr["address2"]);
                    string coll_address3 = Convert.ToString(drr["address3"]);
                    string pin_code = Convert.ToString(drr["pincode"]);
                    int count5 = 0;
                    int dacount = 2;
                    int coun6 = 0;
                    for (int l = 2; l <= cblsearch.Items.Count - 1; l++)
                    {
                        if (cblsearch.Items[l].Selected == true)
                        {

                            count5 = 3 + count5;
                            dacount = dacount + 2;
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, l].Text = "Staff Name";  //coll_name

                            //=========================================================
                            //////////////////////////////////////////////////
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, l, 1, fpbiomatric.Sheets[0].ColumnCount - (count5));

                            ///////////////////////////////////////////////////////
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[0, l].HorizontalAlign = HorizontalAlign.Center;
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[0, l].Border.BorderColorBottom = Color.White;

                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[1, l].Text = coll_address1;
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(1, l, 1, fpbiomatric.Sheets[0].ColumnCount - (count5));
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[1, l].HorizontalAlign = HorizontalAlign.Center;
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[1, l].Border.BorderColorBottom = Color.White;

                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[2, l].Text = coll_address2;
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(2, l, 1, fpbiomatric.Sheets[0].ColumnCount - (count5));
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[2, l].HorizontalAlign = HorizontalAlign.Center;
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[2, l].Border.BorderColorBottom = Color.White;

                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[3, l].Text = coll_address3 + "-" + pin_code;
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(3, l, 1, fpbiomatric.Sheets[0].ColumnCount - (count5));
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[3, l].HorizontalAlign = HorizontalAlign.Center;
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[3, l].Border.BorderColorBottom = Color.White;
                            //=========================================================

                            //========Added by Manikandan 10/05/2013

                            //==============

                            //=========================================================
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[4, l].Text = lbl_leave_msg_1;
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(4, l, 1, fpbiomatric.Sheets[0].ColumnCount - (count5));
                            //=========================================================


                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(1, 1, 1, fpbiomatric.Sheets[0].ColumnCount - 2);
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(2, 1, 1, fpbiomatric.Sheets[0].ColumnCount - 2);
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(3, 1, 1, fpbiomatric.Sheets[0].ColumnCount - 2);


                            //=========================================================
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[4, l].HorizontalAlign = HorizontalAlign.Center;
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[4, l].ForeColor = Color.FromArgb(64, 64, 255);
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[4, l].Border.BorderColorBottom = Color.White;
                            //=========================================================

                            // fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 9, 6, 1);

                            //=========================================================
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 6, 1);
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, fpbiomatric.Sheets[0].ColumnCount - 1, 6, 1);
                            //=========================================================

                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(5, 2, 1, 3);
                            //  fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(5, 4, 1, 5);
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(4, 4, 1, 5);

                            //=========================================================
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, l].HorizontalAlign = HorizontalAlign.Left;
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, l].Font.Bold = true;
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, l].Font.Size = FontUnit.Medium;
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, l].Border.BorderColorRight = Color.White;


                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, dacount].HorizontalAlign = HorizontalAlign.Right;
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, dacount].Font.Bold = true;
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, dacount].Font.Size = FontUnit.Medium;

                            //MyImg mi = new MyImg();
                            //mi.ImageUrl = "../images/10BIT001.jpeg";
                            //mi.ImageUrl = "Handler/Handler2.ashx?";
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 1].CellType = mi;
                            //=========================================================


                            // fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 1].CellType = mi;
                            fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 1, 100);


                            fpbiomatric.Sheets[0].SetColumnWidth(0, 100);

                            //=========================================================
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[0].Font.Bold = true;
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[0].Font.Size = FontUnit.Medium;
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[1].Font.Bold = true;
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[1].Font.Size = FontUnit.Medium;
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[2].Font.Bold = true;
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[2].Font.Size = FontUnit.Medium;
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[3].Font.Bold = true;
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[3].Font.Size = FontUnit.Medium;
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[4].Font.Bold = true;
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[4].Font.Size = FontUnit.Medium;
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[5].Font.Bold = true;
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[5].Font.Size = FontUnit.Medium;
                            //=========================================================

                            fpbiomatric.Sheets[0].ColumnHeader.Rows[0].Font.Bold = true;
                            fpbiomatric.Sheets[0].ColumnHeader.Rows[0].Font.Size = FontUnit.Medium;

                            //=========================================================
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, l].Text = "Date-From:" + date1 + "To:" + date2 + "";
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(5, l, 1, 2);
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, l].HorizontalAlign = HorizontalAlign.Left;
                            //=========================================================

                            string categry4 = "";
                            for (int g = 0; g < cblcategory.Items.Count; g++)
                            {
                                if (cblcategory.Items[g].Selected == true)
                                {
                                    categry4 = categry4 + cblcategory.Items[g].Text + ",";
                                }
                            }
                            if (categry4 != "")
                            {
                                categry4 = categry4.Substring(0, categry4.Length - 1);
                            }

                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, 5].Text = categry4.ToString();

                            //=========================================================
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, dacount].Text = "Category: " + categry4.ToString();
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, dacount].HorizontalAlign = HorizontalAlign.Right;
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, dacount].Border.BorderColorLeft = Color.White;
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(5, dacount, 1, fpbiomatric.Sheets[0].ColumnCount - (dacount + 1));
                            //=========================================================

                            fpbiomatric.Sheets[0].ColumnHeader.Rows[0].BackColor = Color.FromArgb(214, 235, 255);
                            fpbiomatric.Sheets[0].ColumnHeader.Rows[1].BackColor = Color.FromArgb(214, 235, 255);
                            goto l10;
                        }
                        else
                        {
                            count5++;
                            if (count5 == 1)
                            {
                                dacount = dacount + 4;
                            }
                            //coun6++;
                        }

                    }
                l10:
                    string catgorycode = "";
                    string deptcode = "";

                    //if (cbostaffname.SelectedItem.Text != "All")
                    //{
                    //    hastab.Clear();
                    //    hastab.Add("@fromdate", datefrom.ToString());
                    //    hastab.Add("@todate", dateto.ToString());
                    //    hastab.Add("@staffcode", cbostaffname.SelectedItem.Value.ToString());
                    //    dbio = dacces2.select_method("select_staff_code_in_bio", hastab, "sp");
                    //}




                    ////
                    string sqlstaffcode = "select distinct staffmaster.staff_code,len(staffmaster.staff_code),staffmaster.staff_name,hrdept_master.dept_name,stafftrans.category_code,desig_master.priority,desig_master.print_pri ,hrdept_master.dept_name,stafftrans.stftype ,desig_master.priority,hrdept_master.priority,staffmaster.join_date,hrdept_master.dept_code from staffmaster,stafftrans,hrdept_master,desig_master";
                    sqlstaffcode = sqlstaffcode + " where (staffmaster.Fingerprint1 Is  Null or staffmaster.Fingerprint1 Is Not Null)";
                    sqlstaffcode = sqlstaffcode + " and staffmaster.staff_code=stafftrans.staff_code and staffmaster.settled <>1 and staffmaster.resign <>1 and  stafftrans.latestrec<>0 and ((staffmaster.settled =0 and staffmaster.resign=0) or (resign=1 and settled=1 and relieve_date >='' and relieve_date <=''))";
                    sqlstaffcode = sqlstaffcode + " and hrdept_master.dept_code=stafftrans.dept_code and stafftrans.desig_code=desig_master.desig_code ";
                    ///
                    sql = "SELECT distinct staffmaster.staff_code,len(staffmaster.staff_code) , desig_master.desig_acronym, hrdept_master.dept_acronym,CONVERT(VARCHAR(10),staffmaster.join_date,103) as join_date,in_out_time.category_name,staffmaster.staff_name ,desig_name ,hrdept_master.dept_acronym as 'Dept Acronym',hrdept_master.dept_name ,desig_acronym,CONVERT(VARCHAR(10),access_date,103)as 'Entry Date',CASE WHEN time_in = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_in ,100),7) END as time_in , CASE WHEN time_out = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_out ,100),7) END as time_out,convert(char(8),(cast(time_out as datetime) - cast(time_in as datetime)),108) as TotalHours, att, right(CONVERT(nvarchar(100),in_out_time.intime ,100),7) as ontime,right(CONVERT(nvarchar(100),gracetime ,100),7) as gracetime,  right(CONVERT(nvarchar(100),in_out_time.extend_gracetime ,100),7) as extendgracetime,desig_master.priority,desig_master.print_pri ,hrdept_master.dept_name,stafftrans.stftype ,desig_master.priority,hrdept_master.priority,isnull(per_type,'0')per_type,CAST(Fingerprint1 as nvarchar) as Fingerprint1  FROM staffmaster,stafftrans,hrdept_master, desig_master,bio_attendance,In_Out_Time,staff_attnd where  (staffmaster.Fingerprint1 Is  Null or staffmaster.Fingerprint1 Is Not Null) and hrdept_master.college_code=staffmaster.college_code and hrdept_master.dept_code=stafftrans.dept_code and staffmaster.staff_code=stafftrans.staff_code and staffmaster.settled <>1 and staffmaster.resign <>1 and  stafftrans.latestrec<>0 and   staffmaster.staff_code=bio_attendance.roll_no and is_staff=1 and hrdept_master.dept_code=stafftrans.dept_code and desig_master.desig_code=stafftrans.desig_code and staffmaster.settled = 0 And staffmaster.resign = 0  And (in_out_time.category_code=stafftrans.category_code or in_out_time.stftype=stafftrans.stftype) And staffmaster.staff_code = stafftrans.staff_code And stafftrans.latestrec = 1 and staffmaster.college_code=hrdept_master.college_code and staffmaster.college_code=desig_master.collegecode  and staffmaster.college_code=" + ddlcollege.SelectedValue.ToString() + "  " + strdate + " and (time_in is not null or time_in<>'' or time_in <>'1900-01-01 00:00:00.000')";
                    sql = sql + " and (in_out_time.category_code=stafftrans.category_code or in_out_time.stftype=stafftrans.stftype) ";                  //and time_out is null Commented By Jeyaprakash on Jan 5th,2017
                    //sql= "hrdept_master.college_code and staffmaster.college_code=desig_master.collegecode and att<>'' and staffmaster.college_code=" + Session["collegecode"] + "  " + strdate + " ";
                    if (tbseattype.Text != "---Select---")
                    {
                        int itemcount = 0;


                        for (itemcount = 0; itemcount < cbldepttype.Items.Count; itemcount++)
                        {
                            if (cbldepttype.Items[itemcount].Selected == true)
                            {
                                if (strdept == "")
                                {
                                    strdept = "'" + cbldepttype.Items[itemcount].Value.ToString() + "'";
                                    deptcode = cbldepttype.Items[itemcount].Value.ToString();
                                }
                                else
                                {
                                    deptcode = deptcode + "," + cbldepttype.Items[itemcount].Value.ToString();

                                    strdept = strdept + "," + cbldepttype.Items[itemcount].Value.ToString();
                                }
                            }
                        }


                        if (strdept != "")
                        {
                            //deptcode = strdept;
                            strdept = " in(" + strdept + ")";
                        }
                        sql = sql + " and hrdept_master.dept_code " + strdept + "";

                        sqlstaffcode = sqlstaffcode + "  and hrdept_master.dept_code " + strdept + "";
                    }
                    if (tbblood.Text != "---Select---")
                    {
                        int itemcount1 = 0;
                        for (itemcount1 = 0; itemcount1 < cblcategory.Items.Count; itemcount1++)
                        {
                            if (cblcategory.Items[itemcount1].Selected == true)
                            {
                                if (strcategory == "")
                                    strcategory = "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                                else
                                    strcategory = strcategory + "," + "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                            }
                        }
                        if (strcategory != "")
                        {
                            catgorycode = strcategory;
                            strcategory = " in (" + strcategory + ")";
                        }
                        sql = sql + "  and stafftrans.category_code" + strcategory + "";
                        sqlstaffcode = sqlstaffcode + "  and stafftrans.category_code" + strcategory + "";
                    }

                    if (cbostaffname.SelectedItem.Value.ToString() != "All")
                    {
                        //Modiifed By Srinath 22/10/2013
                        //sql = sql + " and staffmaster.staff_code like '%" + cbostaffname.Text + "%' ";
                        sql = sql + " and staffmaster.staff_name ='" + cbostaffname.SelectedItem.ToString() + "' ";
                        sqlstaffcode = sqlstaffcode + " and staffmaster.staff_name ='" + cbostaffname.SelectedItem.ToString() + "' ";//Added by saranya on 7/9/2018

                    }
                    if (cbostaffcode.SelectedItem.Value.ToString() != "All")
                    {
                        //sql = sql + " and staffmaster.staff_code like '%" + cbostaffcode.Text + "%' ";
                        sql = sql + " and staffmaster.staff_code ='" + cbostaffcode.SelectedItem.ToString() + "' ";
                        sqlstaffcode = sqlstaffcode + " and staffmaster.staff_code ='" + cbostaffcode.SelectedItem.ToString() + "' ";//Added by saranya on 7/9/2018
                    }
                    if (Chktimein.Checked == true)
                    {
                        strTime = "";
                        strTime = " and  Right(CONVERT(nvarchar(100),time_in ,100),7)  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "'";

                    }
                    else if (Chktimeout.Checked == true)
                    {
                        strTime = "";
                        strTime = " AND Right(CONVERT(nvarchar(100),time_Out ,100),7) between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";

                        // sql = sql + " " + strTime + "";
                    }

                    if ((Chktimein.Checked == true) && (Chktimeout.Checked == true))
                    {
                        strTime = "";

                        strTime = " and  Right(CONVERT(nvarchar(100),time_in ,100),7)  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "' AND Right(CONVERT(nvarchar(100),time_Out ,100),7) between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";

                        //  sql = sql + " " + strTime + "";
                    }
                    if (strTime != null)
                    {
                        sql = sql + " " + strTime + "";
                    }
                    // Str = "";

                    sql = sql + " and bio_attendance.latestrec=1 and in_out_time.shift = stafftrans.shift" + desig_query + "";
                    sql = sql + Str;
                    //modified by srinath 05/04/2014
                    //sql = sql + " and in_out_time.college_code = staffmaster.college_code " + " order by hrdept_master.dept_name";
                    if (ddlorder.SelectedItem.Text.ToString() == "Priority")
                    {
                        sql = sql + " and in_out_time.college_code = staffmaster.college_code " + " order by hrdept_master.priority,desig_master.priority,hrdept_master.dept_name,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code ";
                    }
                    else
                    {
                        sql = sql + " and in_out_time.college_code = staffmaster.college_code " + " order by hrdept_master.dept_name,len(staffmaster.staff_code),staffmaster.staff_code";//Modified by srinath 28/03/2014
                    }
                    sql = sql.Replace('"', ' ');
                    sql.Remove(2);
                    sql.Remove(' ');

                    //modified by srinath 05/04/2014
                    //  sqlstaffcode = sqlstaffcode + " order by hrdept_master.dept_name";
                    if (ddlorder.SelectedItem.Text.ToString() == "Priority")
                    {
                        sqlstaffcode = sqlstaffcode + " order by hrdept_master.priority,desig_master.priority,hrdept_master.dept_name,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code ";
                    }
                    else
                    {
                        sqlstaffcode = sqlstaffcode + " order by hrdept_master.dept_name,len(staffmaster.staff_code),staffmaster.staff_code";
                    }
                    //     if ((tbseattype.Text != "---Select---") || (tbblood.Text != "---Select---"))
                    //{
                    //   // string collegecode1 = Session["collegecode"].ToString();

                    //   // deptcode = deptcode.Replace('"', ' ');
                    //    hastab.Clear();
                    //    hastab.Add("@college_code", Session["collegecode"].ToString());
                    //    hastab.Add("@fromdate", datefrom.ToString());
                    //    hastab.Add("@todate", dateto.ToString());
                    //    hastab.Add("@deptcode", deptcode.ToString());
                    //   // hastab.Add("@categorycode", catgorycode);
                    //    dbio = dacces2.select_method("bio_time_staff_details", hastab, "sp");
                    //}
                    string strqueryattenadnce = "select staffmaster.staff_code,staff_attnd.* from staffmaster ,stafftrans ,staff_attnd,hrdept_master   where staffmaster.staff_code=stafftrans.staff_code and stafftrans.dept_code=hrdept_master.dept_code and hrdept_master.college_code=staffmaster.college_code and staffmaster.staff_code=staff_attnd.staff_code";
                    DataSet dsAtt = new DataSet();
                    dsAtt = dacces2.select_method_wo_parameter(strqueryattenadnce, "text");

                    SqlDataAdapter dastaffcode = new SqlDataAdapter(sqlstaffcode, mycon);
                    mycon.Close();
                    mycon.Open();
                    DataSet dsstaffcode = new DataSet();
                    dastaffcode.Fill(dsstaffcode);


                    SqlDataAdapter dabio = new SqlDataAdapter(sql, con1);
                    con1.Open();
                    dabio.Fill(d1);
                    //  d1 = dacces2.select_method("biostaffattendance", hastab, "sp");
                    string str2 = getfunction3(sql);
                    int colcount = 13;
                    //int h = 0;
                    string staffcode1 = "";
                    int hcount = d1.Tables[0].Rows.Count - 1;
                    int hhcount = dsstaffcode.Tables[0].Rows.Count - 1;

                    if (d1.Tables[0].Rows.Count > 0)
                    {
                        counttotalmorpresent = 0;
                        counttotalevepresent = 0;
                        countmortotalabsent = 0;
                        countevetotalabsent = 0;
                        string prevstaffcode = "";
                        for (int h1 = 0; h1 <= hhcount; h1++)
                        {
                            sql = "";
                            // Str = "";
                            string category8 = "";
                            string timein8 = "";
                            string staffcode3 = staffcode1;

                            string categorycode = "";
                            string deptCode = string.Empty;//delsi1606
                            string pertype = string.Empty;

                            //if ((staffcode3 != d1.Tables[0].Rows[h1]["staff_code"].ToString()) || (staffcode3 == ""))
                            //{
                            //sno++;
                            //sno2++;
                            staffcode1 = dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString();
                            //if (prevstaffcode != staffcode1)
                            //{
                            categorycode = dsstaffcode.Tables[0].Rows[h1]["category_code"].ToString();
                            deptCode = Convert.ToString(dsstaffcode.Tables[0].Rows[h1]["dept_code"]);

                            string wrkingday = "select isnull(SUM((CAST(morning as int)+CAST(evening as int))),0) as holiday from holidaystaff ";
                            wrkingday = wrkingday + " where category_code='" + categorycode + "' and dept_code='" + deptCode + "'";

                            wrkingday = wrkingday + " AND Holiday_Date Between '" + datefrom + "' and '" + dateto + "'";

                            double totholiday = 0;
                            double holiday = 0;
                            string works = getfunction(wrkingday);
                            if (works != "")
                            {

                                totholiday = Convert.ToDouble(works);
                                if (totholiday != 0)
                                {
                                    holiday = totholiday / 2;
                                }
                                else
                                {
                                    holiday = 0;
                                }
                            }
                            else
                            {
                                holiday = 0;
                                totholiday = 0;

                            }

                            countpresent = 0;
                            //totpresent = 0;
                            //totabsent = 0;
                            counteveningpresent = 0;
                            countmorningabsent = 0;
                            counteveningabsent = 0;
                            countmorninglate = 0;
                            countmorningpermission = 0;
                            counteveninglate = 0;
                            counteveningpermission = 0;
                            countcolumn = fpbiomatric.Sheets[0].ColumnCount;

                            colcount = 16;
                            int access = 0;
                            int cnt = 0;
                            for (colcount = colcount; colcount <= countcolumn - 2; colcount = colcount + 6)
                            {
                                string datetagvalue;
                                datetagvalue = fpbiomatric.Sheets[0].ColumnHeader.Cells[0, colcount].Tag.ToString();
                                string[] splitdate = datetagvalue.Split('/');
                                string accessdate = splitdate[1] + "/" + Convert.ToInt16(splitdate[0].ToString()) + "/" + splitdate[2];
                                splitdate[0] = splitdate[0].TrimStart('0');
                                string entrydate = "";
                                for (h = 0; h <= hcount; h++)
                                {
                                    if (access <= hcount)
                                    {
                                        entrydate = d1.Tables[0].Rows[h]["entry date"].ToString();
                                    }
                                    string[] splitentry = entrydate.Split('/');
                                    string entrydate1 = Convert.ToInt16(splitentry[0].ToString()) + "/" + Convert.ToInt32(splitentry[1].ToString()) + "/" + splitentry[2].ToString();

                                    if (entrydate1 == accessdate)
                                    {
                                        if (dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString() == d1.Tables[0].Rows[h]["staff_code"].ToString())
                                        {
                                            if (prevstaffcode != staffcode1)
                                            {
                                                category8 = d1.Tables[0].Rows[h]["category_name"].ToString();
                                                timein8 = d1.Tables[0].Rows[h]["time_in"].ToString();
                                                string timein3 = d1.Tables[0].Rows[h]["ontime"].ToString();
                                                string gracetime3 = d1.Tables[0].Rows[h]["gracetime"].ToString();
                                                string extendgracetime = d1.Tables[0].Rows[h]["extendgracetime"].ToString();

                                                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount, 1, 6);
                                                fpbiomatric.ActiveSheetView.Columns[colcount].Font.Size = FontUnit.Medium;
                                                fpbiomatric.ActiveSheetView.Columns[colcount].Font.Name = "Book Antiqua";
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 1].Font.Size = FontUnit.Medium;
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 1].Font.Name = "Book Antiqua";
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 2].Font.Size = FontUnit.Medium;
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 2].Font.Name = "Book Antiqua";
                                                fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount].Text = "In";
                                                fpbiomatric.Sheets[0].SetColumnWidth(colcount, 60);
                                                fpbiomatric.Sheets[0].Columns[colcount].HorizontalAlign = HorizontalAlign.Center;
                                                fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount + 1].Text = "Out";
                                                fpbiomatric.Sheets[0].SetColumnWidth(colcount + 1, 60);
                                                fpbiomatric.Sheets[0].Columns[colcount + 1].HorizontalAlign = HorizontalAlign.Center;
                                                fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount + 2].Text = "Tot";
                                                fpbiomatric.Sheets[0].SetColumnWidth(colcount + 2, 60);
                                                fpbiomatric.Sheets[0].Columns[colcount + 2].HorizontalAlign = HorizontalAlign.Center;

                                                fpbiomatric.ActiveSheetView.Columns[colcount + 3].Font.Size = FontUnit.Medium;
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 3].Font.Name = "Book Antiqua";
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 4].Font.Size = FontUnit.Medium;
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 4].Font.Name = "Book Antiqua";


                                                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;


                                                strdate = " and bio_attendance.access_date='" + datetagvalue + "'";

                                                if (cbo_att.Items[0].Selected == true)
                                                {
                                                    if (rdomorning.Checked == true)
                                                    {
                                                        //Str = " and left(att,2)='P-'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;


                                                    }
                                                    else if (rdoevening.Checked == true)
                                                    {

                                                        //Str = " and right(att,2)='-P'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;


                                                    }
                                                    else if (rdoall.Checked == true)
                                                    {
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[9].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[10].Visible = true;
                                                        //Str = " and att like '%P%'";
                                                    }
                                                    else if (rdoboth.Checked == true)
                                                    {
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[9].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[10].Visible = true;
                                                        // Str = " and att='P-P'";

                                                    }
                                                }
                                                if (cbo_att.Items[1].Selected == true)
                                                {
                                                    if (rdomorning.Checked == true)
                                                    {
                                                        //Str = " and left(att,2)='A-'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;

                                                    }
                                                    else if (rdoevening.Checked == true)
                                                    {
                                                        //Str = " and right(att,2)='-A'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                                                    }
                                                    else if (rdoall.Checked == true)
                                                    {
                                                        //Str = " and att like '%A%'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;

                                                    }
                                                    else if (rdoboth.Checked == true)
                                                    {
                                                        //Str = " and att='A-A'";

                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }

                                                }
                                                if (cbo_att.Items[2].Selected == true)
                                                {
                                                    if (rdomorning.Checked == true)
                                                    {

                                                        //Str = " and left(att,3)='LA-'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;

                                                    }
                                                    else if (rdoevening.Checked == true)
                                                    {


                                                        //Str = " and right(att,3)='-LA'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }

                                                    else if (rdoall.Checked == true)
                                                    {
                                                        //Str = " and att like '%LA%'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }

                                                    else if (rdoboth.Checked == true)
                                                    {
                                                        //Str = " and att='LA-LA'";

                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }
                                                }
                                                if (cbo_att.Items[3].Selected == true)
                                                {
                                                    if (rdomorning.Checked == true)
                                                    {
                                                        //Str = " and left(att,4)='PER-'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;


                                                    }
                                                    else if (rdoevening.Checked == true)
                                                    {
                                                        //Str = " and right(att,4)='-PER'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }
                                                    else if (rdoall.Checked == true)
                                                    {
                                                        //Str = " and att like '%PER%'";

                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;

                                                    }
                                                    else if (rdoboth.Checked == true)
                                                    {
                                                        //Str = " and att='PER-PER'";

                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }
                                                }
                                                if (d1.Tables[0].Rows.Count != 0)
                                                {


                                                }

                                                //  sql = "SELECT distinct staffmaster.staff_code ,desig_master.desig_acronym, hrdept_master.dept_acronym,CONVERT(VARCHAR(10),staffmaster.join_date,103) as join_date,in_out_time.category_name,staffmaster.staff_name ,desig_name ,hrdept_master.dept_acronym as 'Dept Acronym',hrdept_master.dept_name ,desig_acronym,access_date as 'Entry Date',right(CONVERT(nvarchar(100),time_in ,100),7) as time_in ,right(CONVERT(nvarchar(100),time_out ,100),7) as time_out,convert(char(8),(cast(time_out as datetime) - cast(time_in as datetime)),108) as TotalHours,att  FROM staffmaster,stafftrans,hrdept_master, desig_master,bio_attendance,In_Out_Time,staff_attnd where  (staffmaster.Fingerprint1 Is  Null or staffmaster.Fingerprint1 Is Not Null) and hrdept_master.college_code=staffmaster.college_code and hrdept_master.dept_code=stafftrans.dept_code and staffmaster.staff_code=stafftrans.staff_code and staffmaster.settled <>1 and staffmaster.resign <>1 and  stafftrans.latestrec<>0 and   staffmaster.staff_code=bio_attendance.roll_no and is_staff=1 and hrdept_master.dept_code=stafftrans.dept_code and desig_master.desig_code=stafftrans.desig_code and staffmaster.settled = 0 And staffmaster.resign = 0 and staffmaster.staff_code='" + staffcode1 + "' And In_Out_Time.Category_Code = Stafftrans.Category_Code And staffmaster.staff_code = stafftrans.staff_code And stafftrans.latestrec = 1 and staffmaster.college_code=hrdept_master.college_code and staffmaster.college_code=desig_master.collegecode and att<>'' and staffmaster.college_code=" + Session["collegecode"] + "  " + strdate + " " + Str + " ";


                                                if (Chktimein.Checked == true)
                                                {
                                                    strTime = "";
                                                    strTime = " and  CASE WHEN time_in = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_in ,100),7) between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "'";

                                                }
                                                else if (Chktimeout.Checked == true)
                                                {
                                                    strTime = "";
                                                    strTime = " CASE WHEN time_Out = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_Out ,100),7) between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";

                                                    // sql = sql + " " + strTime + "";
                                                }

                                                if ((Chktimein.Checked == true) && (Chktimeout.Checked == true))
                                                {
                                                    strTime = "";

                                                    strTime = " and  CASE WHEN time_in = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_in ,100),7) END  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "' AND CASE WHEN time_Out = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_Out ,100),7) between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";

                                                    //  sql = sql + " " + strTime + "";
                                                }
                                                if (strTime != null)
                                                {
                                                    sql = sql + " " + strTime + "";
                                                }

                                                //sql = sql + " order by hrdept_master.dept_name ";
                                                sql = sql + " order by hrdept_master.dept_name,len(staffmaster.staff_code),staffmaster.staff_code ";//modified by Srinath 2/03/2014


                                                con.Close();
                                                con.Open();

                                                //SqlDataAdapter danamewise = new SqlDataAdapter(sql, con);
                                                //DataSet dsnamewise = new DataSet();
                                                //danamewise.Fill(dsnamewise);


                                                //SqlCommand cmd7 = new SqlCommand(sql, con);


                                                //SqlDataReader drcount14;
                                                fpbiomatric.Width = 1000;
                                                lblnorec.Visible = false;

                                                int datval = 0;
                                                int rowcnt = 0;
                                                int rowstr = 0;

                                                int countlateforstaff = 0;

                                                //   drcount14 = cmd7.ExecuteReader();
                                                // drcount14.Read();
                                                // lbl2:
                                                //while (drcount14.Read())
                                                //  for (int i = 0; i < d1.Tables[0].Rows.Count;i++)
                                                {

                                                    if (d1.Tables[0].Rows.Count != 0)

                                                    //   if (drcount14.HasRows == true)
                                                    {

                                                        string category = "";
                                                        string timein = "";
                                                        string gracetime = "";

                                                        if (gracetimeflag == true)
                                                        {
                                                            if (!String.IsNullOrEmpty(timein8) && !String.IsNullOrEmpty(gracetime3) && !String.IsNullOrEmpty(timein3))
                                                            {
                                                                if ((Convert.ToDateTime(timein8) <= Convert.ToDateTime(gracetime3)) && (Convert.ToDateTime(timein8) > Convert.ToDateTime(timein3)))
                                                                {


                                                                    // fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                                    // fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.Pink;
                                                                    goto lbl1;
                                                                }
                                                                else
                                                                {
                                                                    goto lbl2;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                goto lbl2;
                                                            }
                                                        }
                                                        else if (ontimeflag == true)
                                                        {
                                                            if (!String.IsNullOrEmpty(timein8) && !String.IsNullOrEmpty(timein3))
                                                            {
                                                                if (Convert.ToDateTime(timein8) <= Convert.ToDateTime(timein3))
                                                                {
                                                                    //fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                                    goto lbl1;

                                                                }
                                                                else
                                                                {
                                                                    goto lbl2;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                goto lbl2;
                                                            }
                                                        }
                                                        else if (Generalflag == false)
                                                        {
                                                            goto lbl1;
                                                        }
                                                        else
                                                        {
                                                            goto lbl1;
                                                        }
                                                    lbl1:
                                                        if (tempstaffcode == "")
                                                        {

                                                            countpresent = 0;


                                                            counteveningpresent = 0;
                                                            countmorningabsent = 0;
                                                            countmorningpermission = 0;
                                                            counteveninglate = 0;
                                                            counteveningpermission = 0;
                                                            counteveningabsent = 0;
                                                            countmorninglate = 0;

                                                            countpermission = 0;
                                                            //  category = drcount14["category_name"].ToString();
                                                            category = d1.Tables[0].Rows[h]["category_name"].ToString();

                                                            //timein = getfunction(" select right(CONVERT(nvarchar(100),intime ,100),6) as intime from in_out_time where category_name='" + category + "'");

                                                            //gracetime = getgracetimefunction(" select right(CONVERT(nvarchar(100),gracetime ,100),6) as gracetime from in_out_time where category_name='" + category + "'");

                                                            //Added By SRinath 26/4/2014=========Start====
                                                            if (strtempdept != d1.Tables[0].Rows[h]["dept_name"].ToString())
                                                            {
                                                                strtempdept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                                                                fpbiomatric.Sheets[0].RowCount += 1;
                                                                int col = 0;
                                                                if (cblsearch.Items[0].Selected == false)
                                                                {
                                                                    col = 0;
                                                                }
                                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Text = strtempdept;
                                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Font.Bold = true;
                                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].HorizontalAlign = HorizontalAlign.Center;
                                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].VerticalAlign = VerticalAlign.Middle;
                                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].BackColor = Color.LightYellow;
                                                                fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, col, 1, fpbiomatric.Sheets[0].ColumnCount);
                                                            }
                                                            //=======================End===================

                                                            fpbiomatric.Sheets[0].RowCount += 1;
                                                            //tempstaffcode = drcount14["staff_code"].ToString();
                                                            tempstaffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                                                        }

                                                       // else if ((tempstaffcode != "") && (tempstaffcode != drcount14["staff_code"].ToString()))
                                                        else if ((tempstaffcode != "") && (tempstaffcode != d1.Tables[0].Rows[h]["staff_code"].ToString()))
                                                        {
                                                            countpresent = 0;
                                                            counteveningpresent = 0;
                                                            countmorningabsent = 0;
                                                            countpermission = 0;
                                                            countmorningpermission = 0;
                                                            counteveninglate = 0;
                                                            counteveningpermission = 0;
                                                            counteveningabsent = 0;
                                                            countmorninglate = 0;

                                                            c = 0;
                                                            d = 0;
                                                            g = 0;
                                                            f = 0;
                                                            percentage = 0;
                                                            countmorningabsent = 0;
                                                            countlateforstaff = 0;
                                                            counteveningabsent = 0;
                                                            countmorninglate = 0;
                                                            counteveninglate = 0;
                                                            countmorningpermission = 0;
                                                            counteveningpermission = 0;
                                                            // category = drcount14["category_name"].ToString();
                                                            // timein = getfunction(" select right(CONVERT(nvarchar(100),intime ,100),6) as intime from in_out_time where category_name='" + category + "'");

                                                            //gracetime = getgracetimefunction(" select right(CONVERT(nvarchar(100),gracetime ,100),6) as gracetime from in_out_time where category_name='" + category + "'");

                                                            //  extendgracetime = getextendtimefunction("Select right(CONVERT(nvarchar(100),extend_gracetime ,100),7) as extendgracetime from in_out_time where category_name='" + category + "'");
                                                            //Added By SRinath 26/4/2014=========Start====
                                                            if (strtempdept != d1.Tables[0].Rows[h]["dept_name"].ToString())
                                                            {
                                                                strtempdept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                                                                fpbiomatric.Sheets[0].RowCount += 1;
                                                                int col = 0;
                                                                if (cblsearch.Items[0].Selected == false)
                                                                {
                                                                    col = 0;
                                                                }
                                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Text = strtempdept;
                                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Font.Bold = true;
                                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].HorizontalAlign = HorizontalAlign.Center;
                                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].VerticalAlign = VerticalAlign.Middle;
                                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].BackColor = Color.LightYellow;
                                                                fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, col, 1, fpbiomatric.Sheets[0].ColumnCount);
                                                            }
                                                            //=======================End===================
                                                            fpbiomatric.Sheets[0].RowCount += 1;
                                                            //tempstaffcode = drcount14["staff_code"].ToString();
                                                            tempstaffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                                                        }
                                                        Buttontotal.Visible = false;
                                                        DropDownListpage.Visible = false;
                                                        TextBoxpage.Visible = false;
                                                        lblrecord.Visible = false;
                                                        lblrecord.Visible = false;
                                                        lblpage.Visible = false;
                                                        Imgeveper.Visible = true;
                                                        // btpresent.Visible = false;
                                                        // btnabsent.Visible = false;
                                                        //lbltotalabsent.Visible = false;
                                                        Lblgracetime.Visible = true;
                                                        btnontime.Visible = true;
                                                        //btngrace.Visible = true;
                                                        lblontime.Visible = true;
                                                        //btngrace.Visible = true;
                                                        //lbltotalabsent.visi
                                                        //lbltottalpresent.Visible = false; ;
                                                        Imgmorper.Visible = true;
                                                        Imglate.Visible = true;
                                                        late.Visible = true;
                                                        Imgood.Visible = true;
                                                        // btpresent.Visible = false;
                                                        btnmorabsent.Visible = true;
                                                        btneveabsent.Visible = true;
                                                        btnevepresent.Visible = true;
                                                        btnmorabsent.Visible = true;
                                                        lblmorpresent.Visible = true;
                                                        lblevepresent.Visible = true;
                                                        lblevepresent.Visible = true;
                                                        lbleveabsent.Visible = true;
                                                        lblmorabsent.Visible = true;
                                                        btnmorpresent.Visible = true;
                                                        //lbldate.Visible = true;  //Modified by Manikandan 09/05/2013
                                                        lblevngpermission.Visible = true;
                                                        lblood.Visible = true;
                                                        lblpermission.Visible = true;
                                                        btngracetime.Visible = true;
                                                        rowstr = Convert.ToInt32(fpbiomatric.Sheets[0].RowCount);
                                                        fpbiomatric.Visible = true;
                                                        btnprintmaster.Visible = true;
                                                        string staffcode = "";
                                                        string staffname = "";
                                                        string dept = "";
                                                        string design = "";
                                                        string dept_acronym = "";
                                                        string desig_acronym = "";

                                                        string doj = "";
                                                        string intime = "";
                                                        string outtime = "";
                                                        string Totalhours = "";
                                                        string fingerid = "";
                                                        fpbiomatric.Sheets[0].SetColumnWidth(3, 250);



                                                        staffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                                                        staffname = d1.Tables[0].Rows[h]["staff_name"].ToString();
                                                        dept_acronym = d1.Tables[0].Rows[h]["dept_acronym"].ToString();
                                                        desig_acronym = d1.Tables[0].Rows[h]["desig_acronym"].ToString();
                                                        dept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                                                        design = d1.Tables[0].Rows[h]["desig_name"].ToString();
                                                        fingerid = d1.Tables[0].Rows[h]["Fingerprint1"].ToString();
                                                        doj = d1.Tables[0].Rows[h]["join_date"].ToString();
                                                        intime = d1.Tables[0].Rows[h]["time_in"].ToString();
                                                        outtime = d1.Tables[0].Rows[h]["time_out"].ToString();
                                                        pertype = d1.Tables[0].Rows[h]["per_type"].ToString();

                                                        if (intime != "" && outtime != "")//Saranyadevi 16.4.2018
                                                        {
                                                            Totalhours = d1.Tables[0].Rows[h]["TotalHours"].ToString();
                                                        }
                                                        else
                                                        {
                                                            Totalhours = "";
                                                        }
                                                        fpbiomatric.Sheets[0].FrozenColumnCount = 4;

                                                        string tmp_course = "";
                                                        int getprevrow_cnt = 0;


                                                        int initor_cnt = 0;


                                                        //sno2++;
                                                        if (cnt == 0)
                                                        {
                                                            newserialno++;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text = newserialno.ToString();
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 1].Text = staffcode;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 2].Text = staffname;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 3].Text = dept;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 4].Text = dept_acronym;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 5].Text = design;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 6].Text = desig_acronym;
                                                        }
                                                        else
                                                        {
                                                            if (fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text == "")
                                                            {
                                                                newserialno++;
                                                            }
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text = newserialno.ToString();
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 1].Text = staffcode;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 2].Text = staffname;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 3].Text = dept;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 4].Text = dept_acronym;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 5].Text = design;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 6].Text = desig_acronym;
                                                        }
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 7].Text = doj;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 8].Text = category;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].CellType = textcell;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].Text = fingerid;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                                                       

                                                        string mrng = "";
                                                        string evng = "";
                                                        //  string[] tmpdate = drcount14["att"].ToString().Split(new char[] { '-' });

                                                        string att = d1.Tables[0].Rows[h]["att"].ToString();
                                                        if (att != "")
                                                        {
                                                            string[] tmpdate = att.Split(new char[] { '-' });
                                                            mrng = tmpdate[0].ToString();
                                                            evng = tmpdate[1].ToString();
                                                            evng = "";  //Added By Jeyaprakash on Jan 5th,2017
                                                        }
                                                        if (!String.IsNullOrEmpty(intime) && !String.IsNullOrEmpty(timein3) && !String.IsNullOrEmpty(gracetime3) && !String.IsNullOrEmpty(extendgracetime))
                                                        {
                                                            if (Convert.ToDateTime(intime) <= Convert.ToDateTime(timein3))
                                                            {
                                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                                // countintime = countintime + 1;

                                                            }
                                                            if ((Convert.ToDateTime(intime) <= Convert.ToDateTime(gracetime3)) && (Convert.ToDateTime(intime) > Convert.ToDateTime(timein3)))
                                                            {
                                                                //  countgracetime = countgracetime + 1;

                                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.Pink;
                                                            }

                                                            if ((Convert.ToDateTime(intime) > Convert.ToDateTime(gracetime3)))
                                                            {
                                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                            }
                                                            else if ((Convert.ToDateTime(intime) <= Convert.ToDateTime(extendgracetime)) && (Convert.ToDateTime(intime) > Convert.ToDateTime(gracetime3)))
                                                            {
                                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                            }
                                                        }
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = ""; // outtime; Commented By Jeyaprakash on Jan 5th,2017
                                                        if (Totalhours != "")
                                                        {
                                                            string totalhours4;
                                                            string[] split28 = Totalhours.Split(new Char[] { ':' });
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 2].Text = Convert.ToString(split28[0]) + ":" + split28[1].ToString();
                                                        }
                                                        else
                                                        {
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 2].Text = Totalhours;
                                                        }

                                                        int setcount = 0;
                                                        setcount = colcount;
                                                        countpresent = 0;  //Added By Jeyaprakash on Jan 5th,2017
                                                        if (mrng == "P")
                                                        {
                                                            countpresent++;
                                                            // counttotalmorpresent++;
                                                            // counttotalmorpresent = counttotalmorpresent + 1;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Green;
                                                            counttotalmorpresent += countpresent;
                                                        }

                                                        if (evng == "P")
                                                        {
                                                            counteveningpresent++;
                                                            //  counttotalevepresent++;
                                                            //counttotalevepresent = counttotalevepresent + 1;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Green;
                                                            counttotalevepresent += counteveningpresent;
                                                        }
                                                        totalperesent = countpresent + counteveningpresent;
                                                        totalperesent = totalperesent / 2;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text = Convert.ToDouble(totalperesent).ToString();
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center;
                                                        g = Convert.ToDouble(fpbiomatric.Sheets[0].GetText(rowstr - 1, 11).ToString());

                                                        totpresent = totpresent + Convert.ToDouble(fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text);


                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center;

                                                        c = g * 100;

                                                        d = Convert.ToDouble(day3) - holiday;

                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].Text = d.ToString();
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].HorizontalAlign = HorizontalAlign.Center;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center;
                                                        if ((c != 0) && (d != 0))
                                                        {

                                                            percentage = Convert.ToDouble(c) / Convert.ToDouble(d);
                                                            percentage = Math.Round(percentage, 2);
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 15].HorizontalAlign = HorizontalAlign.Center;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 15].Text = percentage.ToString();

                                                        }
                                                        if (mrng == "A")
                                                        {
                                                            countmorningabsent = countmorningabsent + 1;
                                                            // countmortotalabsent++;
                                                            // countmortotalabsent = countmortotalabsent + 1;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Red;
                                                            countmortotalabsent += countmorningabsent;
                                                        }
                                                        if (evng == "A")
                                                        {
                                                            counteveningabsent = counteveningabsent + 1;
                                                            //countevetotalabsent++;
                                                            // countevetotalabsent = countevetotalabsent + 1;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Red;
                                                            countevetotalabsent += counteveningabsent;
                                                        }
                                                        totalabsent = counteveningabsent + countmorningabsent;
                                                        totalabsent = totalabsent / 2;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].Text = Convert.ToDouble(totalabsent).ToString();

                                                        totabsent = totabsent + Convert.ToDouble(fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].Text);

                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].HorizontalAlign = HorizontalAlign.Center;

                                                        if (mrng == "LA")
                                                        {
                                                            // countmorlate++;
                                                            countmorninglate++;
                                                            //countmorlate = countmorlate + 1;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkRed;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.DarkRed;
                                                            // fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text = countmorninglate.ToString();
                                                            // fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center; 

                                                        }
                                                        if (evng == "LA")
                                                        {
                                                            counteveninglate = counteveninglate + 1;
                                                            //fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].Text = counteveninglate.ToString();
                                                            // fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].HorizontalAlign = HorizontalAlign.Center; 

                                                        }
                                                        totallate = countmorninglate + counteveninglate;
                                                        totallate = totallate / 2;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 13].Text = Convert.ToDouble(totallate).ToString();
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 13].HorizontalAlign = HorizontalAlign.Center;




                                                        if (mrng == "PER")
                                                        {
                                                            // countpereng++;
                                                            countpermission = countpermission + 1;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Purple;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.Purple;
                                                            countmorningpermission = countmorningpermission + 1;
                                                        }
                                                        if (evng == "PER")
                                                        {
                                                            counteveper++;
                                                            //eveningpermission++;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Purple;
                                                            // fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].Text = counteveningpermission.ToString();
                                                            //fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].HorizontalAlign = HorizontalAlign.Center; 
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].BackColor = Color.Chocolate;
                                                            countpermission2 = countpermission2 + 1;
                                                            counteveningpermission++;
                                                        }
                                                        totalpermission = countmorningpermission + counteveningpermission;
                                                        totalpermission = totalpermission / 2;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].Text = Convert.ToDouble(totalpermission).ToString();
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].HorizontalAlign = HorizontalAlign.Center;
                                                        //Permission Count
                                                        int totalper = countmorningpermission + counteveningpermission;
                                                        if (totalper.ToString() == "0")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, percount - 1].Text = "-";
                                                        else
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, percount - 1].Text = totalper.ToString();

                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, percount - 1].HorizontalAlign = HorizontalAlign.Center;

                                                        if (mrng == "OD")
                                                        {
                                                            // countood++;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.Goldenrod;
                                                        }
                                                        if (evng == "OD")
                                                        {
                                                            // countood++;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = outtime;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.Goldenrod;
                                                        }

                                                        //Added BY Saranyadevi 28.7.2018
                                                        if (mrng == "CL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkOrange;
                                                        if (evng == "CL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DarkOrange;
                                                        if (mrng == "CPL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkSlateGray;
                                                        if (evng == "CPL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DarkSlateGray;
                                                        if (mrng == "LL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkTurquoise;
                                                        if (evng == "LL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DarkTurquoise;
                                                        if (mrng == "LOP")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DeepPink;
                                                        if (evng == "LOP")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DeepPink;
                                                        if (mrng == "MAL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Lavender;
                                                        if (evng == "MAL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Lavender;
                                                        if (mrng == "ML")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.LightGoldenrodYellow;
                                                        if (evng == "ML")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.LightGoldenrodYellow;
                                                        if (mrng == "NA")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Maroon;
                                                        if (evng == "NA")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Maroon;
                                                        if (mrng == "SL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Navy;
                                                        if (evng == "SL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Navy;
                                                        if (mrng == "SPL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.LimeGreen;
                                                        if (evng == "SPL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.LimeGreen;
                                                        if (mrng == "VL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Magenta;
                                                        if (evng == "VL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Magenta;
                                                        if (mrng == "WL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.OliveDrab;
                                                        if (evng == "WL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.OliveDrab;

                                                        //End

                                                        fpbiomatric.Sheets[0].Columns[4].Visible = false;
                                                        fpbiomatric.Sheets[0].Columns[6].Visible = false;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].Text = mrng.ToString();
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].Text = evng.ToString();
                                                        if (pertype == "0")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 5].Text = "-";
                                                        else
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 5].Text = pertype + "- Hour";
                                                        Panel2.Visible = true;
                                                    }
                                                    Session.Remove("datefrom");
                                                    Session.Remove("dateto");
                                                }
                                                ////////////////////////// }
                                                //h++;
                                            }
                                        lbl2: if (hcount > h)
                                            {
                                                //h++;
                                            }
                                            prevstaffcode = staffcode1;
                                        }

                                    }

                                }
                                cnt++;
                                //if (count != 0)
                                //{
                                //fpbiomatric.Sheets[0].Columns[0].Visible = false;
                                fpbiomatric.Sheets[0].Columns[1].Visible = false;
                                fpbiomatric.Sheets[0].Columns[2].Visible = false;
                                fpbiomatric.Sheets[0].Columns[3].Visible = false;
                                fpbiomatric.Sheets[0].Columns[4].Visible = false;
                                fpbiomatric.Sheets[0].Columns[5].Visible = false;
                                fpbiomatric.Sheets[0].Columns[6].Visible = false;
                                fpbiomatric.Sheets[0].Columns[7].Visible = false;
                                fpbiomatric.Sheets[0].Columns[8].Visible = true;
                                fpbiomatric.Sheets[0].Columns[9].Visible = true;
                                fpbiomatric.Sheets[0].Columns[10].Visible = true;
                                fpbiomatric.Sheets[0].Columns[11].Visible = true;
                                fpbiomatric.Sheets[0].Columns[12].Visible = true;
                                fpbiomatric.Sheets[0].Columns[13].Visible = true;
                                fpbiomatric.Sheets[0].Columns[14].Visible = true;
                                fpbiomatric.Sheets[0].Columns[15].Visible = true;
                                fpbiomatric.Sheets[0].Columns[colcount].Visible = true;
                                fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = true;

                                fpbiomatric.Sheets[0].Columns[colcount + 2].Visible = false;

                                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;


                                if (cblsearch.Items[11].Selected == true)
                                {
                                    fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = true;
                                }
                                else
                                {
                                    fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = false;
                                }
                                if (cblsearch.Items[11].Selected == true)
                                {
                                    fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = true;
                                }
                                else
                                {
                                    fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = false;
                                }
                                if (cblsearch.Items[10].Selected == true)
                                {
                                    fpbiomatric.Sheets[0].Columns[colcount].Visible = true;
                                }
                                else
                                {
                                    fpbiomatric.Sheets[0].Columns[colcount].Visible = false;
                                }
                                if (cblsearch.Items[12].Selected == true)
                                {
                                    fpbiomatric.Sheets[0].Columns[colcount + 2].Visible = true;
                                }
                                else
                                {
                                    fpbiomatric.Sheets[0].Columns[colcount + 2].Visible = false;
                                }
                                if (cblsearch.Items[13].Selected == true)
                                {
                                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                }
                                else
                                {
                                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                                }
                                if (cblsearch.Items[14].Selected == true)
                                {
                                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                }
                                else
                                {
                                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;
                                }
                                if (cblsearch.Items[0].Selected == true)
                                {
                                    fpbiomatric.Sheets[0].Columns[1].Visible = true;
                                }
                                else
                                {
                                    fpbiomatric.Sheets[0].Columns[1].Visible = false;
                                }
                                if (cblsearch.Items[7].Selected == true)
                                {
                                    fpbiomatric.Sheets[0].Columns[8].Visible = true;
                                }
                                else
                                {
                                    fpbiomatric.Sheets[0].Columns[8].Visible = false;
                                }
                                if (cblsearch.Items[0].Selected == true)
                                {
                                    fpbiomatric.Sheets[0].Columns[1].Visible = true;

                                }
                                if (cblsearch.Items[1].Selected == true)
                                {
                                    fpbiomatric.Sheets[0].Columns[2].Visible = true;

                                }
                                if (cblsearch.Items[2].Selected == true)
                                {
                                    fpbiomatric.Sheets[0].Columns[2].Visible = true;

                                }
                                if (cblsearch.Items[3].Selected == true)
                                {
                                    fpbiomatric.Sheets[0].Columns[4].Visible = true;

                                }
                                if (cblsearch.Items[4].Selected == true)
                                {
                                    fpbiomatric.Sheets[0].Columns[5].Visible = true;

                                }
                                if (cblsearch.Items[5].Selected == true)
                                {
                                    fpbiomatric.Sheets[0].Columns[6].Visible = true;

                                }
                                if (cblsearch.Items[6].Selected == true)
                                {
                                    fpbiomatric.Sheets[0].Columns[7].Visible = true;

                                }

                                if (cblsearch.Items[7].Selected == true)
                                {
                                    fpbiomatric.Sheets[0].Columns[8].Visible = true;
                                }
                                if (cblsearch.Items[8].Selected == true)
                                {
                                    fpbiomatric.Sheets[0].Columns[14].Visible = true;
                                }
                                else
                                {
                                    fpbiomatric.Sheets[0].Columns[14].Visible = false;
                                }
                                //for (int i = 0; i < cblsearch.Items.Count; i++)
                                //{
                                //    if (cblsearch.Items[i].Selected == true)
                                //    {
                                //        fpbiomatric.Sheets[0].Columns[i].Visible = true;
                                //    }
                                //}
                                // }
                            }
                            //    prevstaffcode = staffcode1;
                            //}
                            /////////////////////}

                        }


                        lblood.Text = ":" + countood.ToString();
                        lblpermission.Text = ":" + countpereng;
                        lblevngpermission.Text = ":" + eveningpermission;
                        late.Text = ":" + countmorlate.ToString();
                        counttotalpresent = counttotalevepresent + counttotalmorpresent;

                        counttotalpresent = counttotalpresent / 2;

                        lblmorpresent.Text = ":" + counttotalmorpresent.ToString();
                        lblevepresent.Text = ":" + counttotalevepresent.ToString();


                        lblmorabsent.Text = ":" + countmortotalabsent.ToString();
                        lbleveabsent.Text = ":" + countevetotalabsent.ToString();

                        /////////////////
                        //counttotalabsent = countmortotalabsent + countevetotalabsent;
                        //counttotalabsent = counttotalabsent / 2;
                        lblontime.Text = ":" + countintime.ToString();
                        Lblgracetime.Text = ":" + countgracetime.ToString();

                        ////////////////

                        if (cblsearch.Items[0].Selected == true)
                        {
                            fpbiomatric.Sheets[0].RowCount++;

                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                            fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 1, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 1].Text = "Total No of  Present (Morning):" + counttotalmorpresent.ToString(); //25nov2013 (counttotalmorpresent + countpereng + countmorlate).ToString();
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;

                            fpbiomatric.Sheets[0].RowCount++;

                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                            fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 1, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 1].Text = "Total No of Present (Evening):" + counttotalevepresent.ToString(); //25nov2013 (counttotalevepresent + eveningpermission).ToString();
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].RowCount++;

                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                            fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 1, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 1].Text = "Total No of Absent (Morning):" + countmortotalabsent.ToString();
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;

                            fpbiomatric.Sheets[0].RowCount++;

                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                            fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 1, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 1].Text = "Total No of Absent (Evening):" + countevetotalabsent.ToString();
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                        }
                        else
                        {
                            fpbiomatric.Sheets[0].RowCount++;

                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                            fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 2, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 2].Text = "Total No of  Present (Morning):" + counttotalmorpresent.ToString(); //25nov2013 (counttotalmorpresent + countpereng + countmorlate).ToString();
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;

                            fpbiomatric.Sheets[0].RowCount++;

                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                            fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 2, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 2].Text = "Total No of Present (Evening):" + counttotalevepresent.ToString(); //25nov2013 (counttotalevepresent + eveningpermission).ToString();
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].RowCount++;

                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                            fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 2, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 2].Text = "Total No of Absent (Morning):" + countmortotalabsent.ToString();
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;

                            fpbiomatric.Sheets[0].RowCount++;

                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                            fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 2, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 2].Text = "Total No of Absent (Evening):" + countevetotalabsent.ToString();
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                        }



                        DropDownListpage.Items.Clear();
                        Double totalRows = 0;
                        totalRows = Convert.ToInt32(fpbiomatric.Sheets[0].RowCount);
                        DropDownListpage.Items.Clear();
                        if (totalRows >= 10)
                        {
                            fpbiomatric.Sheets[0].PageSize = Convert.ToInt32(totalRows);
                            for (int k = 0; k < Convert.ToInt32(totalRows); k = k + 10)
                            {
                                DropDownListpage.Items.Add((k + 10).ToString());
                            }
                            DropDownListpage.Items.Add("Others");
                            DropDownListpage.SelectedIndex = DropDownListpage.Items.Count - 2;
                            fpbiomatric.Height = 350;
                            fpbiomatric.VerticalScrollBarPolicy = FarPoint.Web.Spread.ScrollBarPolicy.AsNeeded;
                            fpbiomatric.HorizontalScrollBarPolicy = FarPoint.Web.Spread.ScrollBarPolicy.AsNeeded;

                        }
                        else if (totalRows == 0)
                        {
                            DropDownListpage.Items.Add("0");
                            fpbiomatric.Height = 300;
                        }
                        else
                        {
                            fpbiomatric.Sheets[0].PageSize = Convert.ToInt32(totalRows);
                            DropDownListpage.Items.Add(fpbiomatric.Sheets[0].PageSize.ToString());
                            fpbiomatric.Height = 75 + (75 * Convert.ToInt32(totalRows));
                        }
                        Session["totalPages"] = (int)Math.Ceiling(totalRows / fpbiomatric.Sheets[0].PageSize);
                        Buttontotal.Text = "Records : " + totalRows + "          Pages : " + Session["totalPages"];
                        //drcount14.Close();
                        con.Close();
                    }
                    else
                    {
                        Imgeveper.Visible = false;
                        Imgmorper.Visible = false;
                        Imglate.Visible = false;
                        Imgood.Visible = false;
                        //lbldate.Visible = false;  //Modified by Manikandan 09/05/2013
                        // btpresent.Visible = false;
                        // btnabsent.Visible = false;
                        // lbltotalabsent.Visible = false;
                        Lblgracetime.Visible = false;
                        btnontime.Visible = false;

                        // btngrace.Visible = false ;
                        lblontime.Visible = false;
                        btngracetime.Visible = false;
                        // lbltottalpresent.Visible = false;
                        lblevngpermission.Visible = false;
                        lblood.Visible = false;
                        lblpermission.Visible = false;
                        late.Visible = false;
                        btnmorabsent.Visible = false;
                        btneveabsent.Visible = false;
                        btnevepresent.Visible = false;
                        btnmorabsent.Visible = false;
                        lblmorpresent.Visible = false;
                        lblevepresent.Visible = false;
                        lblevepresent.Visible = false;
                        lbleveabsent.Visible = false;
                        lblmorabsent.Visible = false;
                        btnmorpresent.Visible = false;
                        fpbiomatric.Visible = false;
                        btnprintmaster.Visible = false;
                        Buttontotal.Visible = false;
                        Buttontotal.Visible = false;
                        DropDownListpage.Visible = false;
                        TextBoxpage.Visible = false;
                        lblrecord.Visible = false;
                        lblrecord.Visible = false;
                        lblpage.Visible = false;
                        Panel2.Visible = false;
                        lblnorec.Visible = true;
                    }
                    if (d1.Tables.Count == 0)
                    {
                        fpbiomatric.Visible = false;
                        btnprintmaster.Visible = false;

                        Buttontotal.Visible = false;
                        Buttontotal.Visible = false;
                        DropDownListpage.Visible = false;
                        TextBoxpage.Visible = false;
                        lblrecord.Visible = false;
                        lblrecord.Visible = false;
                        lblpage.Visible = false;
                        Panel2.Visible = false;
                        lblnorec.Visible = true;
                    }

                    //  drname.Close();
                    con1.Close();


                    // counttotalpresent = counttotalevepresent + counttotalmorpresent;

                    //counttotalpresent = counttotalpresent / 2;
                    // counttotalabsent = countmortotalabsent + countevetotalabsent;
                    //  counttotalabsent = counttotalabsent / 2;

                }
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Department";

            }
            #endregion RBInonly

            #region RBOutonly
            else if (rdooutonly.Checked == true)
            {
                int sno3 = 0;
                string[] search = new string[50];

                if (cblsearch.Items[0].Selected == true)
                {
                    search[0] = "staffmaster.staff_code";
                }
                if (cblsearch.Items[1].Selected == true)
                {
                    search[1] = "staffmaster.staff_name";
                }
                if (cblsearch.Items[2].Selected == true)
                {
                    search[2] = "hrdept_master.dept_name";
                }
                if (cblsearch.Items[3].Selected == true)
                {
                    search[3] = "dept_acronym";
                }
                if (cblsearch.Items[4].Selected == true)
                {
                    search[4] = "desig_master.desig_name";
                }
                if (cblsearch.Items[5].Selected == true)
                {
                    search[5] = " desig_master.desig_acronym";
                }
                if (cblsearch.Items[6].Selected == true)
                {
                    search[6] = "CONVERT(VARCHAR(10),staffmaster.join_date,103)";
                }
                if (cblsearch.Items[7].Selected == true)
                {
                    search[7] = "in_out_time.category_name";
                }
                if (cblsearch.Items[8].Selected == true)
                {
                    search[8] = " CASE WHEN time_in = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_in ,100),7) END  as time_in"; //right(CONVERT(nvarchar(100),time_in ,100),6) as time_in";
                }
                int count = 0;
                //for (i = 0; i < cblsearch.Items.Count; i++)
                //{
                //    if (cblsearch.Items[i].Selected == true)
                //    {
                //        count = count + 1;
                //    }
                //}
                FarPoint.Web.Spread.TextCellType textcell = new FarPoint.Web.Spread.TextCellType();
                fpbiomatric.Sheets[0].ColumnCount = 0;
                fpbiomatric.Sheets[0].ColumnCount = 16;
                fpbiomatric.Sheets[0].SheetCorner.RowCount = 2;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Staff Code";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Staff Name";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Department";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Dept Acronym";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.ActiveSheetView.Columns[0].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[1].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[2].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[3].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[4].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[5].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[6].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[7].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[8].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[9].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[10].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[11].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[12].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[13].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[14].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[15].Font.Name = "Book Antiqua";
                // fpbiomatric.ActiveSheetView.Columns[10].Font.Name = "Book Antiqua";

                //fpbiomatric.ActiveSheetView.Columns[1].Font.Name = "Arial";

                fpbiomatric.ActiveSheetView.Columns[0].Font.Size = FontUnit.Medium;

                fpbiomatric.ActiveSheetView.Columns[1].Font.Size = FontUnit.Medium;


                fpbiomatric.ActiveSheetView.Columns[2].Font.Size = FontUnit.Medium;

                fpbiomatric.ActiveSheetView.Columns[3].Font.Size = FontUnit.Medium;

                fpbiomatric.ActiveSheetView.Columns[4].Font.Size = FontUnit.Medium;


                fpbiomatric.ActiveSheetView.Columns[5].Font.Size = FontUnit.Medium;


                fpbiomatric.ActiveSheetView.Columns[6].Font.Size = FontUnit.Medium;


                fpbiomatric.ActiveSheetView.Columns[7].Font.Size = FontUnit.Medium;


                fpbiomatric.ActiveSheetView.Columns[8].Font.Size = FontUnit.Medium;

                fpbiomatric.ActiveSheetView.Columns[9].Font.Size = FontUnit.Medium;


                fpbiomatric.ActiveSheetView.Columns[10].Font.Size = FontUnit.Medium;

                fpbiomatric.ActiveSheetView.Columns[11].Font.Size = FontUnit.Medium;


                fpbiomatric.ActiveSheetView.Columns[12].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[13].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[14].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[15].Font.Size = FontUnit.Medium;

                //fpbiomatric.ActiveSheetView.Columns[0].Font.Size = FontUnit.Medium;
                fpbiomatric.Sheets[0].FrozenColumnCount = 4;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Designation";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Desig Acronym";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 7].Text = "Date Of Joinng";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 7].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 8].Text = "Category";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 8].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 9].Text = "Finger ID";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 9].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 10].Text = "Working Days";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 10].HorizontalAlign = HorizontalAlign.Center;

                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 15].Text = "Att  %";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 15].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].SetColumnWidth(8, 70);
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 11].Text = "P";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 11].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].SetColumnWidth(11, 30);
                fpbiomatric.Sheets[0].SetColumnWidth(0, 50);
                fpbiomatric.Sheets[0].SetColumnWidth(1, 150);
                fpbiomatric.Sheets[0].SetColumnWidth(2, 100);
                fpbiomatric.Sheets[0].SetColumnWidth(3, 100);
                fpbiomatric.Sheets[0].SetColumnWidth(4, 100);
                fpbiomatric.Sheets[0].SetColumnWidth(5, 100);
                fpbiomatric.Sheets[0].SetColumnWidth(6, 100);

                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 12].Text = "A";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 12].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].SetColumnWidth(11, 30);
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 13].Text = "LA";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 13].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].SetColumnWidth(12, 30);
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 14].Text = "PER";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 14].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].SetColumnWidth(13, 30);

                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 5, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 7, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 7, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 8, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 9, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 10, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 11, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 12, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 13, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 14, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 15, 2, 1);
                fpbiomatric.Sheets[0].FrozenColumnCount = 8;
                //fpbiomatric.Sheets[0].FrozenColumnCount = 14;
                Panel1.Visible = true;

                string tempstaffcode = "";
                fpbiomatric.Sheets[0].RowCount = 0;
                fpbiomatric.Sheets[0].ColumnCount = 16;
                date1 = Txtentryfrom.Text.ToString();
                string[] split = date1.Split(new Char[] { '/' });
                datefrom = split[1].ToString() + "/" + Convert.ToInt16(split[0].ToString()) + "/" + split[2].ToString();
                date2 = Txtentryto.Text.ToString();
                string[] split1 = date2.Split(new Char[] { '/' });
                dateto = split1[1].ToString() + "/" + split1[0].ToString() + "/" + split1[2].ToString();
                DateTime dt1 = Convert.ToDateTime(datefrom.ToString());
                DateTime dt2 = Convert.ToDateTime(dateto.ToString());
                TimeSpan t = dt2.Subtract(dt1);
                long days = t.Days;
                day3 = Convert.ToInt32(days);
                day3 = day3 + 1;

                if ((datefrom != null) && (dateto != null))
                {
                    strdate = " and bio_attendance.access_date between '" + datefrom + "' and '" + dateto + "'";
                    if (days >= 0)
                    {
                        string[] differdays = new string[days];
                        lbldate.Visible = false;
                        fpbiomatric.Sheets[0].ColumnCount = fpbiomatric.Sheets[0].ColumnCount + 6;
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].Text = Txtentryfrom.Text.ToString();
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, fpbiomatric.Sheets[0].ColumnCount - 6, 1, 6);

                        fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].Tag = datefrom.ToString();

                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 1].Text = "Permission Type";
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 1, 33);

                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 3].Text = "Mor";
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 3].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 3, 33);
                        fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 3].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 2].Text = "Eve";
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 2, 33);
                        fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, fpbiomatric.Sheets[0].ColumnCount - 6, 1, 6);
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 6].Text = "In";
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 6, 33);
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 5].Text = "Out";
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 5].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 5].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 6, 33);

                        for (int date_loop = 1; date_loop <= days; date_loop++) //Next Next Date
                        {

                            differdays[date_loop - 1] = dt1.AddDays(date_loop).ToString();
                            string[] split11 = differdays[date_loop - 1].Split(new char[] { ' ' });
                            string[] split12 = split11[0].Split(new Char[] { '/' });
                            string datevar = "";
                            datevar = split12[1].ToString() + "/" + split12[0].ToString() + "/" + split12[2].ToString();

                            fpbiomatric.Sheets[0].ColumnCount = fpbiomatric.Sheets[0].ColumnCount + 6;

                            //modified by srinath 28/4/2014
                            DateTime dthead = Convert.ToDateTime(split12[0].ToString() + "/" + split12[1].ToString() + "/" + split12[2].ToString());
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].Text = dthead.ToString("dd/MM/yyyy");
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 5].Text = datevar;
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].Tag = split12[0].ToString() + "/" + split12[1].ToString() + "/" + split12[2].ToString();

                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 1].Text = "Permission Type";
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 1, 33);


                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 3].Text = "Mor";
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 3].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 3].HorizontalAlign = HorizontalAlign.Center;


                            fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 3, 33);
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 2].Text = "Eve";
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 1, 33);
                            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, fpbiomatric.Sheets[0].ColumnCount - 6, 1, 6);

                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 6].Text = "In";
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 6, 33);
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 5].Text = "Out";
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 5].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 6, 33);
                        }
                    }
                    else
                    {
                        lbldate.Visible = true;
                        lbldate.Text = "Date Must Be Greater Than From Date";
                    }
                    fpbiomatric.Sheets[0].ColumnCount = fpbiomatric.Sheets[0].ColumnCount + 1;
                    int percount = fpbiomatric.Sheets[0].ColumnCount;
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, percount - 1].Text = "Total Permission Count";
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, percount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, percount - 1, 2, 1);
                    string sqlname;
                    //----------------------------------------------------------------------------
                    //if (cbo_att.SelectedItem.Value.ToString() == "Present(P)")
                    //{
                    //    if (rdomorning.Checked == true)
                    //    {
                    //        Str = " and left(att,2)='P-'";

                    //    }
                    //    else if (rdoevening.Checked == true)
                    //    {

                    //        Str = " and right(att,2)='-P'";

                    //    }
                    //    else if (rdoall.Checked == true)
                    //    {
                    //        Str = " and att like '%P%'";

                    //    }
                    //    else if (rdoboth.Checked == true)
                    //    {
                    //        Str = " and att='P-P'";
                    //    }
                    //}
                    //else if (cbo_att.SelectedItem.Value.ToString() == "Absent(A)")
                    //{
                    //    if (rdomorning.Checked == true)
                    //    {
                    //        Str = " and left(att,2)='A-'";

                    //    }
                    //    else if (rdoevening.Checked == true)
                    //    {
                    //        Str = " and right(att,2)='-A'";
                    //    }
                    //    else if (rdoall.Checked == true)
                    //    {

                    //        Str = " and att like '%A%'";
                    //    }
                    //    else if (rdoboth.Checked == true)
                    //    {
                    //        Str = " and att='A-A'";

                    //    }




                    //}
                    //else if (cbo_att.SelectedItem.Value.ToString() == "Late(LA)")
                    //{
                    //    if (rdomorning.Checked == true)
                    //    {

                    //        Str = " and left(att,3)='LA-'";
                    //    }
                    //    else if (rdoevening.Checked == true)
                    //    {


                    //        Str = " and right(att,3)='-LA'";
                    //    }

                    //    else if (rdoall.Checked == true)
                    //    {
                    //        Str = " and att like '%LA%'";
                    //    }

                    //    else if (rdoboth.Checked == true)
                    //    {
                    //        Str = " and att='LA-LA'";


                    //    }
                    //}
                    //else if (cbo_att.SelectedItem.Value.ToString() == "Permission(PER)")
                    //{
                    //    if (rdomorning.Checked == true)
                    //    {
                    //        Str = " and left(att,4)='PER-'";

                    //    }
                    //    else if (rdoevening.Checked == true)
                    //    {
                    //        Str = " and right(att,4)='-PER'";
                    //    }
                    //    else if (rdoall.Checked == true)
                    //    {
                    //        Str = " and att like '%PER%'";


                    //    }
                    //    else if (rdoboth.Checked == true)
                    //    {
                    //        Str = " and att='PER-PER'";

                    //    }
                    //}
                    //else if (cbo_att.SelectedItem.Value.ToString() == "Official OD(OOD)")
                    //{
                    //    if (rdomorning.Checked == true)
                    //    {

                    //        Str = " and left(att,4)='OOD-'";
                    //    }
                    //    else if (rdoevening.Checked == true)
                    //    {
                    //        Str = " and right(att,4)='-OOD'";
                    //    }
                    //    else if (rdoall.Checked == true)
                    //    {
                    //        Str = " and att like '%OOD%'";
                    //    }
                    //    else if (rdoboth.Checked == true)
                    //    {

                    //        Str = " and att='OOD-OOD'";

                    //    }
                    //}

                    //else if ((cbo_att.SelectedItem.Value.ToString() == "Maternity Leave Without P(ML)") || (cbo_att.SelectedItem.Value.ToString() == "Leave On Loss Of Pay(LOP)") || (cbo_att.SelectedItem.Value.ToString() == "Winter Vacation Leave(WVL)") || (cbo_att.SelectedItem.Value.ToString() == "Weekly Off(WO)") || (cbo_att.SelectedItem.Value.ToString() == "Summer Vacation Leave(SVL)") || (cbo_att.SelectedItem.Value.ToString() == "Special Leave(SL)") || (cbo_att.SelectedItem.Value.ToString() == "On Duty(OD)") || (cbo_att.SelectedItem.Value.ToString() == "Maternity Leave With Pay(MLP)") || (cbo_att.SelectedItem.Value.ToString() == "Casual Leave(CL)"))
                    //{

                    //    if (rdomorning.Checked == true)
                    //    {

                    //    }
                    //    else if (rdoevening.Checked == true)
                    //    {

                    //    }
                    //    else if (rdoall.Checked == true)
                    //    {

                    //    }
                    //    else if (rdoboth.Checked == true)
                    //    {

                    //    }

                    //    else
                    //    {

                    //        Str = "";
                    //    }
                    //}

                    //--------------------------------------------------------------------



                    //////////////////////////////////////////////////////////////////////////////

                    FarPoint.Web.Spread.StyleInfo style = new FarPoint.Web.Spread.StyleInfo();
                    style.Font.Size = 10;
                    style.Font.Bold = true;
                    fpbiomatric.Sheets[0].SheetCornerStyle = new FarPoint.Web.Spread.StyleInfo(style);
                    fpbiomatric.Sheets[0].ColumnHeader.DefaultStyle = new FarPoint.Web.Spread.StyleInfo(style);
                    fpbiomatric.Sheets[0].AllowTableCorner = false;
                    fpbiomatric.Sheets[0].RowHeader.Visible = false;
                    //fpbiomatric.Sheets[0].SheetCorner.Cells[0, 0].Text = "  ";


                    //fpbiomatric.Sheets[0].SheetCorner.Cells[0, 0].Text = "S.No";
                    //Fpspread1.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 7, 1);
                    //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, fpbiomatric.Sheets[0].ColumnCount - 1, 6, 1);
                    //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 9, 1);
                    //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 7, 1);




                    // fpbiomatric.Sheets[0].ColumnHeader.Rows[6].BackColor = Color.FromArgb(214, 235, 255);
                    //fpbiomatric.Sheets[0].SheetCornerSpanModel.Add(0, 0, 6, 1);//=====================
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].Border.BorderColorRight = Color.White;
                    fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 3, 1);

                    //=========================================================
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 7].Border.BorderColor = Color.White;

                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[1, 7].Border.BorderColor = Color.White;

                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 3].Border.BorderColor = Color.White;
                    //=========================================================


                    string str = "select isnull(collname, ' ') as collname,isnull(address1, ' ') as address1,isnull(address2,' ') as address2,isnull(address3, ' ') as address3,isnull(pincode,' ') as pincode from collinfo where college_code='" + ddlcollege.SelectedValue.ToString() + "'";
                    con.Close();
                    con.Open();
                    SqlCommand comm = new SqlCommand(str, con);
                    SqlDataReader drr = comm.ExecuteReader();
                    drr.Read();
                    string coll_name = Convert.ToString(drr["collname"]);
                    string coll_address1 = Convert.ToString(drr["address1"]);
                    string coll_address2 = Convert.ToString(drr["address2"]);
                    string coll_address3 = Convert.ToString(drr["address3"]);
                    string pin_code = Convert.ToString(drr["pincode"]);
                    int count5 = 0;
                    int dacount = 2;
                    int coun6 = 0;
                    for (int l = 2; l <= cblsearch.Items.Count - 1; l++)
                    {
                        if (cblsearch.Items[l].Selected == true)
                        {

                            count5 = 3 + count5;
                            dacount = dacount + 2;
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, l].Text = "Staff Name";  //coll_name


                            //=========================================================
                            //////////////////////////////////////////////////
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, l, 1, fpbiomatric.Sheets[0].ColumnCount - (count5));

                            ///////////////////////////////////////////////////////
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[0, l].HorizontalAlign = HorizontalAlign.Center;
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[0, l].Border.BorderColorBottom = Color.White;

                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[1, l].Text = coll_address1;
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(1, l, 1, fpbiomatric.Sheets[0].ColumnCount - (count5));
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[1, l].HorizontalAlign = HorizontalAlign.Center;
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[1, l].Border.BorderColorBottom = Color.White;

                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[2, l].Text = coll_address2;
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(2, l, 1, fpbiomatric.Sheets[0].ColumnCount - (count5));
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[2, l].HorizontalAlign = HorizontalAlign.Center;
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[2, l].Border.BorderColorBottom = Color.White;

                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[3, l].Text = coll_address3 + "-" + pin_code;
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(3, l, 1, fpbiomatric.Sheets[0].ColumnCount - (count5));
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[3, l].HorizontalAlign = HorizontalAlign.Center;
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[3, l].Border.BorderColorBottom = Color.White;
                            //=========================================================




                            //=========================================================
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[4, l].Text = lbl_leave_msg_1;
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(4, l, 1, fpbiomatric.Sheets[0].ColumnCount - (count5));
                            //=========================================================


                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(1, 1, 1, fpbiomatric.Sheets[0].ColumnCount - 2);
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(2, 1, 1, fpbiomatric.Sheets[0].ColumnCount - 2);
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(3, 1, 1, fpbiomatric.Sheets[0].ColumnCount - 2);


                            //=========================================================
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[4, l].HorizontalAlign = HorizontalAlign.Center;
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[4, l].ForeColor = Color.FromArgb(64, 64, 255);
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[4, l].Border.BorderColorBottom = Color.White;
                            //=========================================================

                            // fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 9, 6, 1);

                            //=========================================================
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 6, 1);
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, fpbiomatric.Sheets[0].ColumnCount - 1, 6, 1);
                            //=========================================================

                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(5, 2, 1, 3);
                            //  fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(5, 4, 1, 5);
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(4, 4, 1, 5);


                            //=========================================================
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, l].HorizontalAlign = HorizontalAlign.Left;
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, l].Font.Bold = true;
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, l].Font.Size = FontUnit.Medium;
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, l].Border.BorderColorRight = Color.White;


                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, dacount].HorizontalAlign = HorizontalAlign.Right;
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, dacount].Font.Bold = true;
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, dacount].Font.Size = FontUnit.Medium;

                            //MyImg mi = new MyImg();
                            //mi.ImageUrl = "../images/10BIT001.jpeg";
                            //mi.ImageUrl = "Handler/Handler2.ashx?";
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 1].CellType = mi;
                            //=========================================================


                            // fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 1].CellType = mi;
                            fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 1, 100);


                            fpbiomatric.Sheets[0].SetColumnWidth(0, 100);

                            //=========================================================
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[0].Font.Bold = true;
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[0].Font.Size = FontUnit.Medium;
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[1].Font.Bold = true;
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[1].Font.Size = FontUnit.Medium;
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[2].Font.Bold = true;
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[2].Font.Size = FontUnit.Medium;
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[3].Font.Bold = true;
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[3].Font.Size = FontUnit.Medium;
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[4].Font.Bold = true;
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[4].Font.Size = FontUnit.Medium;
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[5].Font.Bold = true;
                            //fpbiomatric.Sheets[0].ColumnHeader.Rows[5].Font.Size = FontUnit.Medium;
                            //=========================================================

                            fpbiomatric.Sheets[0].ColumnHeader.Rows[0].Font.Bold = true;
                            fpbiomatric.Sheets[0].ColumnHeader.Rows[0].Font.Size = FontUnit.Medium;

                            //=========================================================
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, l].Text = "Date-From:" + date1 + "To:" + date2 + "";
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(5, l, 1, 2);
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, l].HorizontalAlign = HorizontalAlign.Left;
                            //=========================================================

                            string categry4 = "";
                            for (int g = 0; g < cblcategory.Items.Count; g++)
                            {
                                if (cblcategory.Items[g].Selected == true)
                                {
                                    categry4 = categry4 + cblcategory.Items[g].Text + ",";
                                }
                            }
                            if (categry4 != "")
                            {
                                categry4 = categry4.Substring(0, categry4.Length - 1);
                            }

                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, 5].Text = categry4.ToString();

                            //=========================================================
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, dacount].Text = "Category: " + categry4.ToString();
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, dacount].HorizontalAlign = HorizontalAlign.Right;
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, dacount].Border.BorderColorLeft = Color.White;
                            //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(5, dacount, 1, fpbiomatric.Sheets[0].ColumnCount - (dacount + 1));
                            //=========================================================
                            fpbiomatric.Sheets[0].ColumnHeader.Rows[0].BackColor = Color.FromArgb(214, 235, 255);
                            fpbiomatric.Sheets[0].ColumnHeader.Rows[1].BackColor = Color.FromArgb(214, 235, 255);
                            goto l10;
                        }
                        else
                        {
                            count5++;
                            if (count5 == 1)
                            {
                                dacount = dacount + 4;
                            }
                            //coun6++;
                        }

                    }
                l10:
                    string catgorycode = "";
                    string deptcode = "";

                    //if (cbostaffname.SelectedItem.Text != "All")
                    //{
                    //    hastab.Clear();
                    //    hastab.Add("@fromdate", datefrom.ToString());
                    //    hastab.Add("@todate", dateto.ToString());
                    //    hastab.Add("@staffcode", cbostaffname.SelectedItem.Value.ToString());
                    //    dbio = dacces2.select_method("select_staff_code_in_bio", hastab, "sp");
                    //}




                    ////
                    string sqlstaffcode = "select distinct staffmaster.staff_code,len(staffmaster.staff_code),staffmaster.staff_name,hrdept_master.dept_name,stafftrans.category_code,desig_master.priority,desig_master.print_pri ,hrdept_master.dept_name,stafftrans.stftype ,desig_master.priority,hrdept_master.priority,staffmaster.join_date,hrdept_master.dept_code from staffmaster,stafftrans,hrdept_master,desig_master";
                    sqlstaffcode = sqlstaffcode + " where (staffmaster.Fingerprint1 Is  Null or staffmaster.Fingerprint1 Is Not Null)";
                    sqlstaffcode = sqlstaffcode + " and staffmaster.staff_code=stafftrans.staff_code and staffmaster.settled <>1 and staffmaster.resign <>1 and  stafftrans.latestrec<>0 and ((staffmaster.settled =0 and staffmaster.resign=0) or (resign=1 and settled=1 and relieve_date >='' and relieve_date <=''))";
                    sqlstaffcode = sqlstaffcode + " and hrdept_master.dept_code=stafftrans.dept_code and stafftrans.desig_code=desig_master.desig_code ";
                    ///
                    sql = "SELECT distinct staffmaster.staff_code,len(staffmaster.staff_code) , desig_master.desig_acronym, hrdept_master.dept_acronym,CONVERT(VARCHAR(10),staffmaster.join_date,103) as join_date,in_out_time.category_name,staffmaster.staff_name ,desig_name ,hrdept_master.dept_acronym as 'Dept Acronym',hrdept_master.dept_name ,desig_acronym,CONVERT(VARCHAR(10),access_date,103)as 'Entry Date', CASE WHEN time_in = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_in ,100),7) END as time_in, CASE WHEN time_out = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_out ,100),7) END as time_out,convert(char(8),(cast(time_out as datetime) - cast(time_in as datetime)),108) as TotalHours, att, right(CONVERT(nvarchar(100),in_out_time.intime ,100),7) as ontime,right(CONVERT(nvarchar(100),gracetime ,100),7) as gracetime,  right(CONVERT(nvarchar(100),in_out_time.extend_gracetime ,100),7) as extendgracetime,desig_master.priority,desig_master.print_pri ,hrdept_master.dept_name,stafftrans.stftype ,desig_master.priority,hrdept_master.priority,isnull(per_type,'0')per_type,CAST(Fingerprint1 as nvarchar) as Fingerprint1  FROM staffmaster,stafftrans,hrdept_master, desig_master,bio_attendance,In_Out_Time,staff_attnd where  (staffmaster.Fingerprint1 Is  Null or staffmaster.Fingerprint1 Is Not Null) and hrdept_master.college_code=staffmaster.college_code and hrdept_master.dept_code=stafftrans.dept_code and staffmaster.staff_code=stafftrans.staff_code and staffmaster.settled <>1 and staffmaster.resign <>1 and  stafftrans.latestrec<>0 and   staffmaster.staff_code=bio_attendance.roll_no and is_staff=1 and hrdept_master.dept_code=stafftrans.dept_code and desig_master.desig_code=stafftrans.desig_code and staffmaster.settled = 0 And staffmaster.resign = 0  And (in_out_time.category_code=stafftrans.category_code or in_out_time.stftype=stafftrans.stftype) And staffmaster.staff_code = stafftrans.staff_code And stafftrans.latestrec = 1 and staffmaster.college_code=hrdept_master.college_code and staffmaster.college_code=desig_master.collegecode  and staffmaster.college_code=" + ddlcollege.SelectedValue.ToString() + "  " + strdate + " and (time_out<>'' or time_out is not null or time_out<>'1900-01-01 00:00:00.000' )";
                    sql = sql + " and (in_out_time.category_code=stafftrans.category_code or in_out_time.stftype=stafftrans.stftype)";   //and  time_out<>'' Commented By Jeyaprakash
                    //sql= "hrdept_master.college_code and staffmaster.college_code=desig_master.collegecode and att<>'' and staffmaster.college_code=" + Session["collegecode"] + "  " + strdate + " ";
                    if (tbseattype.Text != "---Select---")
                    {
                        int itemcount = 0;


                        for (itemcount = 0; itemcount < cbldepttype.Items.Count; itemcount++)
                        {
                            if (cbldepttype.Items[itemcount].Selected == true)
                            {
                                if (strdept == "")
                                {
                                    strdept = "'" + cbldepttype.Items[itemcount].Value.ToString() + "'";
                                    deptcode = cbldepttype.Items[itemcount].Value.ToString();
                                }
                                else
                                {
                                    deptcode = deptcode + "," + cbldepttype.Items[itemcount].Value.ToString();

                                    strdept = strdept + "," + cbldepttype.Items[itemcount].Value.ToString();
                                }
                            }
                        }


                        if (strdept != "")
                        {
                            //deptcode = strdept;
                            strdept = " in(" + strdept + ")";
                        }
                        sql = sql + " and hrdept_master.dept_code " + strdept + "";

                        sqlstaffcode = sqlstaffcode + "  and hrdept_master.dept_code " + strdept + "";
                    }
                    if (tbblood.Text != "---Select---")
                    {


                        int itemcount1 = 0;

                        for (itemcount1 = 0; itemcount1 < cblcategory.Items.Count; itemcount1++)
                        {
                            if (cblcategory.Items[itemcount1].Selected == true)
                            {
                                if (strcategory == "")
                                    strcategory = "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                                else
                                    strcategory = strcategory + "," + "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                            }
                        }


                        if (strcategory != "")
                        {
                            catgorycode = strcategory;
                            strcategory = " in (" + strcategory + ")";
                        }
                        sql = sql + "  and stafftrans.category_code" + strcategory + "";
                        sqlstaffcode = sqlstaffcode + "  and stafftrans.category_code" + strcategory + "";
                    }

                    if (cbostaffname.SelectedItem.Value.ToString() != "All")
                    {
                        //sql = sql + " and staffmaster.staff_code like '%" + cbostaffname.Text + "%' ";
                        //Modiifed By Srinath 22/10/2013
                        //sql = sql + " and staffmaster.staff_code like '%" + cbostaffname.Text + "%' ";
                        sql = sql + " and staffmaster.staff_name = '" + cbostaffname.SelectedItem.ToString() + "' ";
                        sqlstaffcode = sqlstaffcode + " and staffmaster.staff_name = '" + cbostaffname.SelectedItem.ToString() + "' ";//Added by saranya on 7/9/2018
                    }
                    if (cbostaffcode.SelectedItem.Value.ToString() != "All")
                    {
                        //sql = sql + " and staffmaster.staff_code like '%" + cbostaffcode.Text + "%' ";
                        sql = sql + " and staffmaster.staff_code='" + cbostaffcode.SelectedItem.ToString() + "' ";
                        sqlstaffcode = sqlstaffcode + " and staffmaster.staff_code='" + cbostaffcode.SelectedItem.ToString() + "' ";//Added by saranya on 7/9/2018
                    }
                    if (Chktimein.Checked == true)
                    {
                        strTime = "";
                        strTime = " and  CASE WHEN time_in = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_in ,100),7) END  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "'";
                    }
                    else if (Chktimeout.Checked == true)
                    {
                        strTime = "";
                        strTime = " AND  CASE WHEN time_out = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_out ,100),7) END between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";

                        // sql = sql + " " + strTime + "";
                    }

                    if ((Chktimein.Checked == true) && (Chktimeout.Checked == true))
                    {
                        strTime = "";

                        strTime = " and  CASE WHEN time_in = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_in ,100),7) END  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "' AND CASE WHEN time_out = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_out ,100),7) END between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";

                        //  sql = sql + " " + strTime + "";
                    }
                    if (strTime != null)
                    {
                        sql = sql + " " + strTime + "";
                    }
                    // Str = "";

                    sql = sql + " and bio_attendance.latestrec=1 and in_out_time.shift = stafftrans.shift " + desig_query + "";
                    sql = sql + Str;
                    //modified by srinath 05/04/2014
                    //sql = sql + " and in_out_time.college_code = staffmaster.college_code " + " order by hrdept_master.dept_name";
                    if (ddlorder.SelectedItem.Text.ToString() == "Priority")
                    {
                        sql = sql + " and in_out_time.college_code = staffmaster.college_code " + " order by hrdept_master.priority,desig_master.priority,hrdept_master.dept_name,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code ";
                    }
                    else
                    {
                        sql = sql + " and in_out_time.college_code = staffmaster.college_code " + " order by hrdept_master.dept_name,len(staffmaster.staff_code),staffmaster.staff_code";//Modified By srinath 28/03/2014
                    }
                    sql = sql.Replace('"', ' ');
                    sql.Remove(2);
                    sql.Remove(' ');

                    //modified by srinath 05/04/2014
                    //sqlstaffcode = sqlstaffcode + " order by hrdept_master.dept_name";
                    if (ddlorder.SelectedItem.Text.ToString() == "Priority")
                    {
                        sqlstaffcode = sqlstaffcode + " order by hrdept_master.priority,desig_master.priority,hrdept_master.dept_name,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code ";
                    }
                    else
                    {
                        sqlstaffcode = sqlstaffcode + " order by hrdept_master.dept_name,len(staffmaster.staff_code),staffmaster.staff_code";//Modified By srinath 28/03/2014
                    }

                    //     if ((tbseattype.Text != "---Select---") || (tbblood.Text != "---Select---"))
                    //{
                    //   // string collegecode1 = Session["collegecode"].ToString();
                    //   // deptcode = deptcode.Replace('"', ' ');
                    //    hastab.Clear();
                    //    hastab.Add("@college_code", Session["collegecode"].ToString());
                    //    hastab.Add("@fromdate", datefrom.ToString());
                    //    hastab.Add("@todate", dateto.ToString());
                    //    hastab.Add("@deptcode", deptcode.ToString());
                    //   // hastab.Add("@categorycode", catgorycode);
                    //    dbio = dacces2.select_method("bio_time_staff_details", hastab, "sp");
                    //}

                    string strqueryattenadnce = "select staffmaster.staff_code,staff_attnd.* from staffmaster ,stafftrans ,staff_attnd,hrdept_master   where staffmaster.staff_code=stafftrans.staff_code and stafftrans.dept_code=hrdept_master.dept_code and hrdept_master.college_code=staffmaster.college_code and staffmaster.staff_code=staff_attnd.staff_code";
                    DataSet dsAtt = new DataSet();
                    dsAtt = dacces2.select_method_wo_parameter(strqueryattenadnce, "text");

                    SqlDataAdapter dastaffcode = new SqlDataAdapter(sqlstaffcode, mycon);
                    mycon.Close();
                    mycon.Open();
                    DataSet dsstaffcode = new DataSet();
                    dastaffcode.Fill(dsstaffcode);


                    SqlDataAdapter dabio = new SqlDataAdapter(sql, con1);
                    con1.Open();
                    dabio.Fill(d1);
                    //  d1 = dacces2.select_method("biostaffattendance", hastab, "sp");
                    string str2 = getfunction3(sql);
                    int colcount = 13;
                    //int h = 0;
                    string staffcode1 = "";
                    int hcount = d1.Tables[0].Rows.Count - 1;
                    int hhcount = dsstaffcode.Tables[0].Rows.Count - 1;

                    if (d1.Tables[0].Rows.Count > 0)
                    {
                        counttotalmorpresent = 0;
                        counttotalevepresent = 0;
                        countmortotalabsent = 0;
                        countevetotalabsent = 0;
                        string prevstaffcode = "";
                        for (int h1 = 0; h1 <= hhcount; h1++)
                        {
                            sql = "";
                            // Str = "";

                            string category8 = "";
                            string timein8 = "";
                            string staffcode3 = staffcode1;

                            string categorycode = "";
                            string deptCode = string.Empty;//delsi1606

                            //if ((staffcode3 != d1.Tables[0].Rows[h1]["staff_code"].ToString()) || (staffcode3 == ""))
                            //{
                            staffcode1 = dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString();
                            categorycode = dsstaffcode.Tables[0].Rows[h1]["category_code"].ToString();
                            deptCode = Convert.ToString(dsstaffcode.Tables[0].Rows[h1]["dept_code"]);

                            string wrkingday = "select isnull(SUM((CAST(morning as int)+CAST(evening as int))),0) as holiday from holidaystaff ";
                            wrkingday = wrkingday + " where category_code='" + categorycode + "' and dept_code='" + deptCode + "'";

                            wrkingday = wrkingday + " AND Holiday_Date Between '" + datefrom + "' and '" + dateto + "'";

                            double totholiday = 0;
                            double holiday = 0;
                            string works = getfunction(wrkingday);
                            if (works != "")
                            {

                                totholiday = Convert.ToDouble(works);
                                if (totholiday != 0)
                                {
                                    holiday = totholiday / 2;
                                }
                                else
                                {
                                    holiday = 0;
                                }
                            }
                            else
                            {
                                holiday = 0;
                                totholiday = 0;

                            }

                            countpresent = 0;
                            //totpresent = 0;
                            //totabsent = 0;
                            counteveningpresent = 0;
                            countmorningabsent = 0;
                            counteveningabsent = 0;
                            countmorninglate = 0;
                            countmorningpermission = 0;
                            counteveninglate = 0;
                            counteveningpermission = 0;
                            countcolumn = fpbiomatric.Sheets[0].ColumnCount;

                            colcount = 16;
                            int access = 0;
                            int cnt = 0;
                            for (colcount = colcount; colcount <= countcolumn - 2; colcount = colcount + 6)
                            {
                                string datetagvalue;
                                datetagvalue = fpbiomatric.Sheets[0].ColumnHeader.Cells[0, colcount].Tag.ToString();


                                string[] splitdate = datetagvalue.Split('/');
                                string accessdate = splitdate[1] + "/" + Convert.ToInt16(splitdate[0].ToString()) + "/" + splitdate[2];
                                splitdate[0] = splitdate[0].TrimStart('0');
                                string entrydate = "";
                                for (h = 0; h <= hcount; h++)
                                {
                                    sno++;

                                    if (access <= hcount)
                                    {
                                        entrydate = d1.Tables[0].Rows[h]["entry date"].ToString();
                                    }

                                    string[] splitentry = entrydate.Split('/');
                                    string entrydate1 = Convert.ToInt16(splitentry[0].ToString()) + "/" + Convert.ToInt32(splitentry[1].ToString()) + "/" + splitentry[2].ToString();


                                    if (entrydate1 == accessdate)
                                    {
                                        //for (h = 0; h < d1.Tables[0].Rows.Count; h++)
                                        //{
                                        if (dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString() == d1.Tables[0].Rows[h]["staff_code"].ToString())
                                        {

                                            if (prevstaffcode != staffcode1)
                                            {
                                                category8 = d1.Tables[0].Rows[h]["category_name"].ToString();
                                                timein8 = d1.Tables[0].Rows[h]["time_in"].ToString();
                                                string timein3 = d1.Tables[0].Rows[h]["ontime"].ToString();

                                                string gracetime3 = d1.Tables[0].Rows[h]["gracetime"].ToString();
                                                string extendgracetime = d1.Tables[0].Rows[h]["extendgracetime"].ToString();

                                                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount, 1, 6);
                                                fpbiomatric.ActiveSheetView.Columns[colcount].Font.Size = FontUnit.Medium;
                                                fpbiomatric.ActiveSheetView.Columns[colcount].Font.Name = "Book Antiqua";
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 1].Font.Size = FontUnit.Medium;
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 1].Font.Name = "Book Antiqua";
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 2].Font.Size = FontUnit.Medium;
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 2].Font.Name = "Book Antiqua";




                                                fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount].Text = "In";
                                                fpbiomatric.Sheets[0].SetColumnWidth(colcount, 60);
                                                fpbiomatric.Sheets[0].Columns[colcount].HorizontalAlign = HorizontalAlign.Center;
                                                fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount + 1].Text = "Out";
                                                fpbiomatric.Sheets[0].SetColumnWidth(colcount + 1, 60);
                                                fpbiomatric.Sheets[0].Columns[colcount + 1].HorizontalAlign = HorizontalAlign.Center;
                                                fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount + 2].Text = "Tot";
                                                fpbiomatric.Sheets[0].SetColumnWidth(colcount + 2, 60);
                                                fpbiomatric.Sheets[0].Columns[colcount + 2].HorizontalAlign = HorizontalAlign.Center;

                                                fpbiomatric.ActiveSheetView.Columns[colcount + 3].Font.Size = FontUnit.Medium;
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 3].Font.Name = "Book Antiqua";
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 4].Font.Size = FontUnit.Medium;
                                                fpbiomatric.ActiveSheetView.Columns[colcount + 4].Font.Name = "Book Antiqua";


                                                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;


                                                strdate = " and bio_attendance.access_date='" + datetagvalue + "'";




                                                if (cbo_att.Items[0].Selected == true)
                                                {
                                                    if (rdomorning.Checked == true)
                                                    {
                                                        //Str = " and left(att,2)='P-'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;


                                                    }
                                                    else if (rdoevening.Checked == true)
                                                    {

                                                        //Str = " and right(att,2)='-P'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;


                                                    }
                                                    else if (rdoall.Checked == true)
                                                    {
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[9].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[10].Visible = true;
                                                        //Str = " and att like '%P%'";
                                                    }
                                                    else if (rdoboth.Checked == true)
                                                    {
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[9].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[10].Visible = true;
                                                        //Str = " and att='P-P'";

                                                    }
                                                }
                                                if (cbo_att.Items[1].Selected == true)
                                                {
                                                    if (rdomorning.Checked == true)
                                                    {
                                                        //Str = " and left(att,2)='A-'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;

                                                    }
                                                    else if (rdoevening.Checked == true)
                                                    {
                                                        //Str = " and right(att,2)='-A'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                                                    }
                                                    else if (rdoall.Checked == true)
                                                    {
                                                        //Str = " and att like '%A%'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;

                                                    }
                                                    else if (rdoboth.Checked == true)
                                                    {
                                                        //Str = " and att='A-A'";

                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }




                                                }
                                                if (cbo_att.Items[2].Selected == true)
                                                {
                                                    if (rdomorning.Checked == true)
                                                    {

                                                        //Str = " and left(att,3)='LA-'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;

                                                    }
                                                    else if (rdoevening.Checked == true)
                                                    {


                                                        //Str = " and right(att,3)='-LA'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }

                                                    else if (rdoall.Checked == true)
                                                    {
                                                        //Str = " and att like '%LA%'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }

                                                    else if (rdoboth.Checked == true)
                                                    {
                                                        //Str = " and att='LA-LA'";

                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }
                                                }
                                                if (cbo_att.Items[3].Selected == true)
                                                {
                                                    if (rdomorning.Checked == true)
                                                    {
                                                        //Str = " and left(att,4)='PER-'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;


                                                    }
                                                    else if (rdoevening.Checked == true)
                                                    {
                                                        //Str = " and right(att,4)='-PER'";
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }
                                                    else if (rdoall.Checked == true)
                                                    {
                                                        //Str = " and att like '%PER%'";

                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;

                                                    }
                                                    else if (rdoboth.Checked == true)
                                                    {
                                                        //Str = " and att='PER-PER'";

                                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                    }
                                                }

                                                if (d1.Tables[0].Rows.Count != 0)
                                                {


                                                }

                                                //  sql = "SELECT distinct staffmaster.staff_code ,desig_master.desig_acronym, hrdept_master.dept_acronym,CONVERT(VARCHAR(10),staffmaster.join_date,103) as join_date,in_out_time.category_name,staffmaster.staff_name ,desig_name ,hrdept_master.dept_acronym as 'Dept Acronym',hrdept_master.dept_name ,desig_acronym,access_date as 'Entry Date',right(CONVERT(nvarchar(100),time_in ,100),7) as time_in ,right(CONVERT(nvarchar(100),time_out ,100),7) as time_out,convert(char(8),(cast(time_out as datetime) - cast(time_in as datetime)),108) as TotalHours,att  FROM staffmaster,stafftrans,hrdept_master, desig_master,bio_attendance,In_Out_Time,staff_attnd where  (staffmaster.Fingerprint1 Is  Null or staffmaster.Fingerprint1 Is Not Null) and hrdept_master.college_code=staffmaster.college_code and hrdept_master.dept_code=stafftrans.dept_code and staffmaster.staff_code=stafftrans.staff_code and staffmaster.settled <>1 and staffmaster.resign <>1 and  stafftrans.latestrec<>0 and   staffmaster.staff_code=bio_attendance.roll_no and is_staff=1 and hrdept_master.dept_code=stafftrans.dept_code and desig_master.desig_code=stafftrans.desig_code and staffmaster.settled = 0 And staffmaster.resign = 0 and staffmaster.staff_code='" + staffcode1 + "' And In_Out_Time.Category_Code = Stafftrans.Category_Code And staffmaster.staff_code = stafftrans.staff_code And stafftrans.latestrec = 1 and staffmaster.college_code=hrdept_master.college_code and staffmaster.college_code=desig_master.collegecode and att<>'' and staffmaster.college_code=" + Session["collegecode"] + "  " + strdate + " " + Str + " ";


                                                if (Chktimein.Checked == true)
                                                {
                                                    strTime = "";
                                                    strTime = " and  Right(CONVERT(nvarchar(100),time_in ,100),7)  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "'";

                                                }
                                                else if (Chktimeout.Checked == true)
                                                {
                                                    strTime = "";
                                                    strTime = " AND Right(CONVERT(nvarchar(100),time_Out ,100),7) between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";

                                                    // sql = sql + " " + strTime + "";
                                                }

                                                if ((Chktimein.Checked == true) && (Chktimeout.Checked == true))
                                                {
                                                    strTime = "";

                                                    strTime = " and  Right(CONVERT(nvarchar(100),time_in ,100),7)  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "' AND Right(CONVERT(nvarchar(100),time_Out ,100),7) between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";

                                                    //  sql = sql + " " + strTime + "";
                                                }
                                                if (strTime != null)
                                                {
                                                    sql = sql + " " + strTime + "";
                                                }

                                                // sql = sql + " order by hrdept_master.dept_name ";
                                                sql = sql + " order by hrdept_master.dept_name,len(staffmaster.staff_code),staffmaster.staff_code ";//Modified by srinath 28/03/2014


                                                con.Close();
                                                con.Open();

                                                //SqlDataAdapter danamewise = new SqlDataAdapter(sql, con);
                                                //DataSet dsnamewise = new DataSet();
                                                //danamewise.Fill(dsnamewise);


                                                //SqlCommand cmd7 = new SqlCommand(sql, con);


                                                //SqlDataReader drcount14;
                                                fpbiomatric.Width = 1000;
                                                lblnorec.Visible = false;

                                                int datval = 0;
                                                int rowcnt = 0;
                                                int rowstr = 0;

                                                int countlateforstaff = 0;

                                                //   drcount14 = cmd7.ExecuteReader();
                                                // drcount14.Read();
                                                // lbl2:
                                                //while (drcount14.Read())
                                                //  for (int i = 0; i < d1.Tables[0].Rows.Count;i++)
                                                {

                                                    if (d1.Tables[0].Rows.Count != 0)

                                                    //   if (drcount14.HasRows == true)
                                                    {

                                                        string category = "";
                                                        string timein = "";
                                                        string gracetime = "";

                                                        if (gracetimeflag == true)
                                                        {
                                                            if (!String.IsNullOrEmpty(timein8) && !String.IsNullOrEmpty(gracetime3) && !String.IsNullOrEmpty(timein3))
                                                            {
                                                                if ((Convert.ToDateTime(timein8) <= Convert.ToDateTime(gracetime3)) && (Convert.ToDateTime(timein8) > Convert.ToDateTime(timein3)))
                                                                {


                                                                    // fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                                    // fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.Pink;
                                                                    goto lbl1;
                                                                }
                                                                else
                                                                {
                                                                    goto lbl2;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                goto lbl2;
                                                            }
                                                        }
                                                        else if (ontimeflag == true)
                                                        {
                                                            if (!String.IsNullOrEmpty(timein8) && !String.IsNullOrEmpty(timein3))
                                                            {
                                                                if (Convert.ToDateTime(timein8) <= Convert.ToDateTime(timein3))
                                                                {
                                                                    //fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                                    goto lbl1;

                                                                }
                                                                else
                                                                {
                                                                    goto lbl2;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                goto lbl2;
                                                            }
                                                        }
                                                        else if (Generalflag == false)
                                                        {
                                                            goto lbl1;
                                                        }
                                                        else
                                                        {
                                                            goto lbl1;
                                                        }
                                                    lbl1:
                                                        if (tempstaffcode == "")
                                                        {

                                                            countpresent = 0;


                                                            counteveningpresent = 0;
                                                            countmorningabsent = 0;
                                                            countmorningpermission = 0;
                                                            counteveninglate = 0;
                                                            counteveningpermission = 0;
                                                            counteveningabsent = 0;
                                                            countmorninglate = 0;

                                                            countpermission = 0;
                                                            //  category = drcount14["category_name"].ToString();
                                                            category = d1.Tables[0].Rows[h]["category_name"].ToString();

                                                            //timein = getfunction(" select right(CONVERT(nvarchar(100),intime ,100),6) as intime from in_out_time where category_name='" + category + "'");

                                                            //gracetime = getgracetimefunction(" select right(CONVERT(nvarchar(100),gracetime ,100),6) as gracetime from in_out_time where category_name='" + category + "'");

                                                            //Added By SRinath 26/4/2014=========Start====
                                                            if (strtempdept != d1.Tables[0].Rows[h]["dept_name"].ToString())
                                                            {
                                                                strtempdept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                                                                fpbiomatric.Sheets[0].RowCount += 1;
                                                                int col = 0;
                                                                if (cblsearch.Items[0].Selected == false)
                                                                {
                                                                    col = 0;
                                                                }
                                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Text = strtempdept;
                                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Font.Bold = true;
                                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].HorizontalAlign = HorizontalAlign.Center;
                                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].VerticalAlign = VerticalAlign.Middle;
                                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].BackColor = Color.LightYellow;
                                                                fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, col, 1, fpbiomatric.Sheets[0].ColumnCount);
                                                            }
                                                            //=======================End===================

                                                            fpbiomatric.Sheets[0].RowCount += 1;
                                                            //tempstaffcode = drcount14["staff_code"].ToString();
                                                            tempstaffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                                                        }

                                                       // else if ((tempstaffcode != "") && (tempstaffcode != drcount14["staff_code"].ToString()))
                                                        else if ((tempstaffcode != "") && (tempstaffcode != d1.Tables[0].Rows[h]["staff_code"].ToString()))
                                                        {

                                                            countpresent = 0;
                                                            counteveningpresent = 0;
                                                            countmorningabsent = 0;
                                                            countpermission = 0;



                                                            countmorningpermission = 0;
                                                            counteveninglate = 0;
                                                            counteveningpermission = 0;
                                                            counteveningabsent = 0;
                                                            countmorninglate = 0;

                                                            c = 0;
                                                            d = 0;
                                                            g = 0;
                                                            f = 0;
                                                            percentage = 0;
                                                            countmorningabsent = 0;
                                                            countlateforstaff = 0;
                                                            counteveningabsent = 0;
                                                            countmorninglate = 0;
                                                            counteveninglate = 0;
                                                            countmorningpermission = 0;
                                                            counteveningpermission = 0;
                                                            // category = drcount14["category_name"].ToString();
                                                            // timein = getfunction(" select right(CONVERT(nvarchar(100),intime ,100),6) as intime from in_out_time where category_name='" + category + "'");

                                                            //gracetime = getgracetimefunction(" select right(CONVERT(nvarchar(100),gracetime ,100),6) as gracetime from in_out_time where category_name='" + category + "'");

                                                            //  extendgracetime = getextendtimefunction("Select right(CONVERT(nvarchar(100),extend_gracetime ,100),7) as extendgracetime from in_out_time where category_name='" + category + "'");
                                                            //Added By SRinath 26/4/2014=========Start====
                                                            if (strtempdept != d1.Tables[0].Rows[h]["dept_name"].ToString())
                                                            {
                                                                strtempdept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                                                                fpbiomatric.Sheets[0].RowCount += 1;
                                                                int col = 0;
                                                                if (cblsearch.Items[0].Selected == false)
                                                                {
                                                                    col = 0;
                                                                }
                                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Text = strtempdept;
                                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Font.Bold = true;
                                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].HorizontalAlign = HorizontalAlign.Center;
                                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].VerticalAlign = VerticalAlign.Middle;
                                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].BackColor = Color.LightYellow;
                                                                fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, col, 1, fpbiomatric.Sheets[0].ColumnCount);
                                                            }
                                                            //=======================End===================
                                                            fpbiomatric.Sheets[0].RowCount += 1;
                                                            //tempstaffcode = drcount14["staff_code"].ToString();
                                                            tempstaffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                                                        }
                                                        Buttontotal.Visible = false;
                                                        DropDownListpage.Visible = false;
                                                        TextBoxpage.Visible = false;
                                                        lblrecord.Visible = false;
                                                        lblrecord.Visible = false;
                                                        lblpage.Visible = false;
                                                        Imgeveper.Visible = true;
                                                        // btpresent.Visible = false;
                                                        // btnabsent.Visible = false;
                                                        //lbltotalabsent.Visible = false;
                                                        Lblgracetime.Visible = true;
                                                        btnontime.Visible = true;
                                                        //btngrace.Visible = true;
                                                        lblontime.Visible = true;
                                                        //btngrace.Visible = true;
                                                        //lbltotalabsent.visi
                                                        //lbltottalpresent.Visible = false; ;
                                                        Imgmorper.Visible = true;
                                                        Imglate.Visible = true;
                                                        late.Visible = true;
                                                        Imgood.Visible = true;
                                                        // btpresent.Visible = false;
                                                        btnmorabsent.Visible = true;
                                                        btneveabsent.Visible = true;
                                                        btnevepresent.Visible = true;
                                                        btnmorabsent.Visible = true;
                                                        lblmorpresent.Visible = true;
                                                        lblevepresent.Visible = true;
                                                        lblevepresent.Visible = true;
                                                        lbleveabsent.Visible = true;
                                                        lblmorabsent.Visible = true;
                                                        btnmorpresent.Visible = true;
                                                        //lbldate.Visible = true;  //Modified by Manikandan 09/05/2013
                                                        lblevngpermission.Visible = true;
                                                        lblood.Visible = true;
                                                        lblpermission.Visible = true;
                                                        btngracetime.Visible = true;
                                                        rowstr = Convert.ToInt32(fpbiomatric.Sheets[0].RowCount);
                                                        fpbiomatric.Visible = true;
                                                        btnprintmaster.Visible = true;

                                                        string staffcode = "";
                                                        string staffname = "";
                                                        string dept = "";
                                                        string design = "";
                                                        string dept_acronym = "";
                                                        string desig_acronym = "";

                                                        string doj = "";
                                                        string intime = "";
                                                        string outtime = "";
                                                        string Totalhours = "";
                                                        string pertype = "";
                                                        string fingerid = "";

                                                        fpbiomatric.Sheets[0].SetColumnWidth(3, 250);



                                                        staffcode = d1.Tables[0].Rows[h]["staff_code"].ToString();
                                                        staffname = d1.Tables[0].Rows[h]["staff_name"].ToString();
                                                        dept_acronym = d1.Tables[0].Rows[h]["dept_acronym"].ToString();
                                                        desig_acronym = d1.Tables[0].Rows[h]["desig_acronym"].ToString();
                                                        dept = d1.Tables[0].Rows[h]["dept_name"].ToString();
                                                        design = d1.Tables[0].Rows[h]["desig_name"].ToString();
                                                        fingerid = d1.Tables[0].Rows[h]["Fingerprint1"].ToString();
                                                        doj = d1.Tables[0].Rows[h]["join_date"].ToString();
                                                        intime = d1.Tables[0].Rows[h]["time_in"].ToString();
                                                        outtime = d1.Tables[0].Rows[h]["time_out"].ToString();
                                                        pertype = d1.Tables[0].Rows[h]["per_type"].ToString();
                                                        if (intime != "" && outtime != "")//Saranyadevi 16.4.2018
                                                        {
                                                            Totalhours = d1.Tables[0].Rows[h]["TotalHours"].ToString();
                                                        }
                                                        else
                                                        {
                                                            Totalhours = "";
                                                        }
                                                        //Totalhours = d1.Tables[0].Rows[h]["TotalHours"].ToString();

                                                        fpbiomatric.Sheets[0].FrozenColumnCount = 4;

                                                        string tmp_course = "";
                                                        int getprevrow_cnt = 0;


                                                        int initor_cnt = 0;
                                                        if (cnt == 0)
                                                        {
                                                            newserialno++;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text = newserialno.ToString();
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 1].Text = staffcode;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 2].Text = staffname;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 3].Text = dept;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 4].Text = dept_acronym;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 5].Text = design;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 6].Text = desig_acronym;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 7].Text = doj;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 8].Text = category;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].CellType = textcell;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].Text = fingerid;
                                                            

                                                        }
                                                        else
                                                        {
                                                            if (fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text == "")
                                                            {
                                                                newserialno++;
                                                            }
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text = newserialno.ToString();
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 1].Text = staffcode;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 2].Text = staffname;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 3].Text = dept;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 4].Text = dept_acronym;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 5].Text = design;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 6].Text = desig_acronym;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 7].Text = doj;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 8].Text = category;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].CellType = textcell;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].Text = fingerid;
                                                        }
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                                                      
                                                        string mrng = "";
                                                        string evng = "";
                                                        //  string[] tmpdate = drcount14["att"].ToString().Split(new char[] { '-' });

                                                        string att = d1.Tables[0].Rows[h]["att"].ToString();
                                                        if (att != "")
                                                        {
                                                            string[] tmpdate = att.Split(new char[] { '-' });
                                                            mrng = tmpdate[0].ToString();
                                                            mrng = "";
                                                            evng = tmpdate[1].ToString();
                                                        }
                                                        if (!String.IsNullOrEmpty(intime) && !String.IsNullOrEmpty(timein3) && !String.IsNullOrEmpty(gracetime3) && !String.IsNullOrEmpty(extendgracetime))
                                                        {
                                                            if (Convert.ToDateTime(intime) <= Convert.ToDateTime(timein3))
                                                            {
                                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = ""; //intime;  Assigned by Jeyaprakash
                                                                // countintime = countintime + 1;
                                                            }
                                                            if ((Convert.ToDateTime(intime) <= Convert.ToDateTime(gracetime3)) && (Convert.ToDateTime(intime) > Convert.ToDateTime(timein3)))
                                                            {
                                                                //  countgracetime = countgracetime + 1;
                                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = ""; //intime;  Assigned by Jeyaprakash
                                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.Pink;
                                                            }

                                                            if ((Convert.ToDateTime(intime) > Convert.ToDateTime(gracetime3)))
                                                            {
                                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = ""; //intime;  Assigned by Jeyaprakash
                                                            }
                                                            else if ((Convert.ToDateTime(intime) <= Convert.ToDateTime(extendgracetime)) && (Convert.ToDateTime(intime) > Convert.ToDateTime(gracetime3)))
                                                            {
                                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = ""; //intime;  Assigned by Jeyaprakash
                                                            }
                                                        }
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                                                        if (Totalhours != "")
                                                        {

                                                            string totalhours4;
                                                            string[] split28 = Totalhours.Split(new Char[] { ':' });



                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 2].Text = Convert.ToString(split28[0]) + ":" + split28[1].ToString();

                                                        }
                                                        else
                                                        {
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 2].Text = Totalhours;
                                                        }

                                                        int setcount = 0;
                                                        setcount = colcount;

                                                        if (mrng == "P")
                                                        {
                                                            countpresent++;
                                                            // counttotalmorpresent++;
                                                            counttotalmorpresent += countpresent;
                                                            // counttotalmorpresent = counttotalmorpresent + 1;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Green;

                                                        }

                                                        if (evng == "P")
                                                        {
                                                            counteveningpresent++;
                                                            //  counttotalevepresent++;
                                                            //counttotalevepresent = counttotalevepresent + 1;
                                                            counttotalevepresent += counteveningpresent;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Green;
                                                        }


                                                        totalperesent = countpresent + counteveningpresent;
                                                        totalperesent = totalperesent / 2;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text = Convert.ToDouble(totalperesent).ToString();
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center;
                                                        g = Convert.ToDouble(fpbiomatric.Sheets[0].GetText(rowstr - 1, 11).ToString());

                                                        totpresent = totpresent + Convert.ToDouble(fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text);


                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center;
                                                        c = g * 100;

                                                        d = Convert.ToDouble(day3) - holiday;

                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].Text = d.ToString();
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].HorizontalAlign = HorizontalAlign.Center;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center;
                                                        if ((c != 0) && (d != 0))
                                                        {
                                                            percentage = Convert.ToDouble(c) / Convert.ToDouble(d);
                                                            percentage = Math.Round(percentage, 2);
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 15].HorizontalAlign = HorizontalAlign.Center;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 15].Text = percentage.ToString();

                                                        }

                                                        if (mrng == "A")
                                                        {

                                                            countmorningabsent = countmorningabsent + 1;

                                                            // countmortotalabsent++;
                                                            // countmortotalabsent = countmortotalabsent + 1;                                                    
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Red;
                                                            countmortotalabsent += countmorningabsent;
                                                        }
                                                        if (evng == "A")
                                                        {
                                                            counteveningabsent = counteveningabsent + 1;
                                                            //countevetotalabsent++;
                                                            // countevetotalabsent = countevetotalabsent + 1;
                                                            countevetotalabsent += counteveningabsent;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Red;
                                                        }
                                                        totalabsent = counteveningabsent + countmorningabsent;
                                                        totalabsent = totalabsent / 2;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].Text = Convert.ToDouble(totalabsent).ToString();

                                                        totabsent = totabsent + Convert.ToDouble(fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].Text);

                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].HorizontalAlign = HorizontalAlign.Center;

                                                        if (mrng == "LA")
                                                        {
                                                            // countmorlate++;
                                                            countmorninglate++;
                                                            //countmorlate = countmorlate + 1;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkRed;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.DarkRed;
                                                            // fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text = countmorninglate.ToString();
                                                            // fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center; 

                                                        }
                                                        if (evng == "LA")
                                                        {
                                                            counteveninglate = counteveninglate + 1;
                                                            //fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].Text = counteveninglate.ToString();
                                                            // fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].HorizontalAlign = HorizontalAlign.Center; 

                                                        }
                                                        totallate = countmorninglate + counteveninglate;
                                                        totallate = totallate / 2;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 13].Text = Convert.ToDouble(totallate).ToString();
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 13].HorizontalAlign = HorizontalAlign.Center;
                                                        if (mrng == "PER")
                                                        {
                                                            // countpereng++;
                                                            countpermission = countpermission + 1;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Purple;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.Purple;
                                                            countmorningpermission = countmorningpermission + 1;

                                                        }
                                                        if (evng == "PER")
                                                        {
                                                            counteveper++;

                                                            //eveningpermission++;

                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Purple;

                                                            // fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].Text = counteveningpermission.ToString();
                                                            //fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].HorizontalAlign = HorizontalAlign.Center; 
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].BackColor = Color.Chocolate;
                                                            countpermission2 = countpermission2 + 1;
                                                            counteveningpermission++;

                                                        }
                                                        totalpermission = countmorningpermission + counteveningpermission;
                                                        totalpermission = totalpermission / 2;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].Text = Convert.ToDouble(totalpermission).ToString();
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].HorizontalAlign = HorizontalAlign.Center;

                                                        //Permission Count
                                                        int totalper = countmorningpermission + counteveningpermission;
                                                        if (totalper.ToString() == "0")
                                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Rows.Count - 1, percount - 1].Text = "-";
                                                        else
                                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Rows.Count - 1, percount - 1].Text = totalper.ToString();

                                                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Rows.Count - 1, percount - 1].HorizontalAlign = HorizontalAlign.Center;

                                                        if (mrng == "OD")
                                                        {
                                                            // countood++;

                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.Goldenrod;
                                                        }
                                                        if (evng == "OD")
                                                        {
                                                            // countood++;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = outtime;
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.Goldenrod;
                                                        }
                                                        //Added BY Saranyadevi 28.7.2018
                                                        if (mrng == "CL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkOrange;
                                                        if (evng == "CL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DarkOrange;
                                                        if (mrng == "CPL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkSlateGray;
                                                        if (evng == "CPL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DarkSlateGray;
                                                        if (mrng == "LL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkTurquoise;
                                                        if (evng == "LL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DarkTurquoise;
                                                        if (mrng == "LOP")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DeepPink;
                                                        if (evng == "LOP")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DeepPink;
                                                        if (mrng == "MAL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Lavender;
                                                        if (evng == "MAL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Lavender;
                                                        if (mrng == "ML")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.LightGoldenrodYellow;
                                                        if (evng == "ML")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.LightGoldenrodYellow;
                                                        if (mrng == "NA")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Maroon;
                                                        if (evng == "NA")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Maroon;
                                                        if (mrng == "SL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Navy;
                                                        if (evng == "SL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Navy;
                                                        if (mrng == "SPL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.LimeGreen;
                                                        if (evng == "SPL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.LimeGreen;
                                                        if (mrng == "VL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Magenta;
                                                        if (evng == "VL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Magenta;
                                                        if (mrng == "WL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.OliveDrab;
                                                        if (evng == "WL")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.OliveDrab;
                                                        //End
                                                        fpbiomatric.Sheets[0].Columns[4].Visible = false;
                                                        fpbiomatric.Sheets[0].Columns[6].Visible = false;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].Text = mrng.ToString();
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].Text = evng.ToString();
                                                        if (pertype == "0")
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 5].Text = "-";
                                                        else
                                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 5].Text = pertype + "- Hour";
                                                        Panel2.Visible = true;
                                                    }
                                                    Session.Remove("datefrom");
                                                    Session.Remove("dateto");
                                                }
                                            ////////////////////////// }
                                            // h++;
                                            //}
                                            lbl2: if (hcount > h)
                                                {
                                                    //h++;
                                                }
                                                prevstaffcode = staffcode1;
                                            }
                                        }
                                        //}
                                    }
                                    //if (count != 0)
                                    //{
                                    //fpbiomatric.Sheets[0].Columns[0].Visible = false;
                                    fpbiomatric.Sheets[0].Columns[1].Visible = false;
                                    fpbiomatric.Sheets[0].Columns[2].Visible = false;
                                    fpbiomatric.Sheets[0].Columns[3].Visible = false;
                                    fpbiomatric.Sheets[0].Columns[4].Visible = false;
                                    fpbiomatric.Sheets[0].Columns[5].Visible = false;
                                    fpbiomatric.Sheets[0].Columns[6].Visible = false;
                                    fpbiomatric.Sheets[0].Columns[7].Visible = false;
                                    fpbiomatric.Sheets[0].Columns[9].Visible = true;
                                    fpbiomatric.Sheets[0].Columns[10].Visible = true;
                                    fpbiomatric.Sheets[0].Columns[11].Visible = true;
                                    fpbiomatric.Sheets[0].Columns[12].Visible = true;
                                    fpbiomatric.Sheets[0].Columns[13].Visible = true;
                                    fpbiomatric.Sheets[0].Columns[14].Visible = true;
                                    fpbiomatric.Sheets[0].Columns[15].Visible = true;
                                    fpbiomatric.Sheets[0].Columns[colcount].Visible = true;
                                    fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = true;
                                    fpbiomatric.Sheets[0].Columns[colcount + 2].Visible = false;
                                    fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                                    fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;


                                    if (cblsearch.Items[8].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[9].Visible = true;
                                    }
                                    else
                                    {
                                        fpbiomatric.Sheets[0].Columns[9].Visible = false;
                                    }

                                    if (cblsearch.Items[11].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = true;
                                    }
                                    else
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = false;
                                    }
                                    if (cblsearch.Items[11].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = true;
                                    }
                                    else
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = false;
                                    }
                                    if (cblsearch.Items[10].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount].Visible = true;
                                    }
                                    else
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount].Visible = false;
                                    }
                                    if (cblsearch.Items[12].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount + 2].Visible = true;
                                    }
                                    else
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount + 2].Visible = false;
                                    }
                                    if (cblsearch.Items[13].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                    }
                                    else
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                                    }
                                    if (cblsearch.Items[14].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                    }
                                    else
                                    {
                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;
                                    }
                                    if (cblsearch.Items[0].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[1].Visible = true;
                                    }
                                    else
                                    {
                                        fpbiomatric.Sheets[0].Columns[1].Visible = false;
                                    }
                                    if (cblsearch.Items[7].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[8].Visible = true;
                                    }
                                    else
                                    {
                                        fpbiomatric.Sheets[0].Columns[8].Visible = false;
                                    }
                                    if (cblsearch.Items[0].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[1].Visible = true;
                                    }
                                    if (cblsearch.Items[1].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[2].Visible = true;
                                    }
                                    if (cblsearch.Items[2].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[3].Visible = true;
                                    }
                                    if (cblsearch.Items[3].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[4].Visible = true;
                                    }
                                    if (cblsearch.Items[4].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[5].Visible = true;
                                    }
                                    if (cblsearch.Items[5].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[6].Visible = true;
                                    }
                                    if (cblsearch.Items[6].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[7].Visible = true;
                                    }
                                    if (cblsearch.Items[7].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[8].Visible = true;
                                    }
                                    if (cblsearch.Items[8].Selected == true)
                                    {
                                        fpbiomatric.Sheets[0].Columns[14].Visible = true;
                                    }
                                    else
                                    {
                                        fpbiomatric.Sheets[0].Columns[14].Visible = false;
                                    }
                                    //for (int i = 0; i < cblsearch.Items.Count; i++)
                                    //{
                                    //    if (cblsearch.Items[i].Selected == true)
                                    //    {
                                    //        fpbiomatric.Sheets[0].Columns[i].Visible = true;
                                    //    }
                                    //}
                                    // }
                                }
                                cnt++;
                            }



                            /////////////////////}
                        }
                        lblood.Text = ":" + countood.ToString();
                        lblpermission.Text = ":" + countpereng;
                        lblevngpermission.Text = ":" + eveningpermission;
                        late.Text = ":" + countmorlate.ToString();
                        counttotalpresent = counttotalevepresent + counttotalmorpresent;

                        counttotalpresent = counttotalpresent / 2;

                        lblmorpresent.Text = ":" + counttotalmorpresent.ToString();
                        lblevepresent.Text = ":" + counttotalevepresent.ToString();


                        lblmorabsent.Text = ":" + countmortotalabsent.ToString();
                        lbleveabsent.Text = ":" + countevetotalabsent.ToString();

                        /////////////////
                        //counttotalabsent = countmortotalabsent + countevetotalabsent;
                        //counttotalabsent = counttotalabsent / 2;
                        lblontime.Text = ":" + countintime.ToString();
                        Lblgracetime.Text = ":" + countgracetime.ToString();

                        ////////////////

                        if (cblsearch.Items[0].Selected == true)
                        {
                            fpbiomatric.Sheets[0].RowCount++;
                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                            fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 1, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 1].Text = "Total No of  Present (Morning):" + counttotalmorpresent.ToString();  //25nov2013 (counttotalmorpresent + countpereng + countmorlate).ToString();
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;

                            fpbiomatric.Sheets[0].RowCount++;

                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                            fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 1, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 1].Text = "Total No of Present (Evening):" + counttotalevepresent.ToString();  //25nov2013 (counttotalevepresent + eveningpermission).ToString();
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].RowCount++;

                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                            fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 1, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 1].Text = "Total No of Absent (Morning):" + countmortotalabsent.ToString();
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;

                            fpbiomatric.Sheets[0].RowCount++;

                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                            fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 1, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 1].Text = "Total No of Absent (Evening):" + countevetotalabsent.ToString();
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                        }
                        else
                        {
                            fpbiomatric.Sheets[0].RowCount++;

                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                            fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 2, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 2].Text = "Total No of  Present (Morning):" + counttotalmorpresent.ToString();  //25nov2013 (counttotalmorpresent + countpereng + countmorlate).ToString();
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;

                            fpbiomatric.Sheets[0].RowCount++;

                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                            fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 2, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 2].Text = "Total No of Present (Evening):" + counttotalevepresent.ToString();  //25nov2013 (counttotalevepresent + eveningpermission).ToString();
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].RowCount++;

                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                            fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 2, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 2].Text = "Total No of Absent (Morning):" + countmortotalabsent.ToString();
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;

                            fpbiomatric.Sheets[0].RowCount++;

                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                            fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 2, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 2].Text = "Total No of Absent (Evening):" + countevetotalabsent.ToString();
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                        }
                        DropDownListpage.Items.Clear();
                        Double totalRows = 0;
                        totalRows = Convert.ToInt32(fpbiomatric.Sheets[0].RowCount);
                        DropDownListpage.Items.Clear();
                        if (totalRows >= 10)
                        {
                            fpbiomatric.Sheets[0].PageSize = Convert.ToInt32(totalRows);
                            for (int k = 0; k < Convert.ToInt32(totalRows); k = k + 10)
                            {
                                DropDownListpage.Items.Add((k + 10).ToString());
                            }
                            DropDownListpage.Items.Add("Others");
                            DropDownListpage.SelectedIndex = DropDownListpage.Items.Count - 2;
                            fpbiomatric.Height = 350;
                            fpbiomatric.VerticalScrollBarPolicy = FarPoint.Web.Spread.ScrollBarPolicy.AsNeeded;
                            fpbiomatric.HorizontalScrollBarPolicy = FarPoint.Web.Spread.ScrollBarPolicy.AsNeeded;

                        }
                        else if (totalRows == 0)
                        {
                            DropDownListpage.Items.Add("0");
                            fpbiomatric.Height = 300;
                        }
                        else
                        {
                            fpbiomatric.Sheets[0].PageSize = Convert.ToInt32(totalRows);
                            DropDownListpage.Items.Add(fpbiomatric.Sheets[0].PageSize.ToString());
                            fpbiomatric.Height = 75 + (75 * Convert.ToInt32(totalRows));
                        }
                        Session["totalPages"] = (int)Math.Ceiling(totalRows / fpbiomatric.Sheets[0].PageSize);
                        Buttontotal.Text = "Records : " + totalRows + "          Pages : " + Session["totalPages"];
                        //drcount14.Close();
                        con.Close();
                    }
                    else
                    {
                        Imgeveper.Visible = false;
                        Imgmorper.Visible = false;
                        Imglate.Visible = false;
                        Imgood.Visible = false;
                        //lbldate.Visible = false;  //Modified by Manikandan 09/05/2013
                        // btpresent.Visible = false;
                        // btnabsent.Visible = false;
                        // lbltotalabsent.Visible = false;
                        Lblgracetime.Visible = false;
                        btnontime.Visible = false;
                        // btngrace.Visible = false ;
                        lblontime.Visible = false;
                        btngracetime.Visible = false;
                        // lbltottalpresent.Visible = false;
                        lblevngpermission.Visible = false;
                        lblood.Visible = false;
                        lblpermission.Visible = false;
                        late.Visible = false;
                        btnmorabsent.Visible = false;
                        btneveabsent.Visible = false;
                        btnevepresent.Visible = false;
                        btnmorabsent.Visible = false;
                        lblmorpresent.Visible = false;
                        lblevepresent.Visible = false;
                        lblevepresent.Visible = false;
                        lbleveabsent.Visible = false;
                        lblmorabsent.Visible = false;
                        btnmorpresent.Visible = false;
                        fpbiomatric.Visible = false;
                        btnprintmaster.Visible = false;
                        Buttontotal.Visible = false;
                        Buttontotal.Visible = false;
                        DropDownListpage.Visible = false;
                        TextBoxpage.Visible = false;
                        lblrecord.Visible = false;
                        lblrecord.Visible = false;
                        lblpage.Visible = false;
                        Panel2.Visible = false;
                        lblnorec.Visible = true;
                    }
                    if (d1.Tables.Count == 0)
                    {
                        fpbiomatric.Visible = false;
                        btnprintmaster.Visible = false;
                        Buttontotal.Visible = false;
                        Buttontotal.Visible = false;
                        DropDownListpage.Visible = false;
                        TextBoxpage.Visible = false;
                        lblrecord.Visible = false;
                        lblrecord.Visible = false;
                        lblpage.Visible = false;
                        Panel2.Visible = false;
                        lblnorec.Visible = true;
                    }
                    //  drname.Close();
                    con1.Close();
                    // counttotalpresent = counttotalevepresent + counttotalmorpresent;
                    //counttotalpresent = counttotalpresent / 2;
                    // counttotalabsent = countmortotalabsent + countevetotalabsent;
                    //  counttotalabsent = counttotalabsent / 2;
                }
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Department";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
            }

            #endregion RBInonly
            //else if (rdoinonly.Checked == true)
            //{
            //    fpbiomatric.Visible = true;
            //    cblsearch.Visible = true;
            //    Imgselectall.Visible = true;
            //    CheckBoxselect.Visible = true;

          //////display not fingar print staff

            #region Unreg
            else if (rdounreg.Checked == true)
            {
                int sno3 = 0;
                Chktimein.Checked = false;
                Chktimeout.Checked = false;
                fpbiomatric.Visible = true;
                btnprintmaster.Visible = true;
                fpbiomatric.Sheets[0].ColumnCount = 0;

                fpbiomatric.Sheets[0].RowCount = 0;
                if (rdounreg.Checked == true)
                {
                    string[] search = new string[50];

                    if (cblsearch.Items[0].Selected == true)
                    {
                        search[0] = "staffmaster.staff_code";
                    }
                    if (cblsearch.Items[1].Selected == true)
                    {
                        search[1] = "staffmaster.staff_name";
                    }
                    if (cblsearch.Items[2].Selected == true)
                    {
                        search[2] = "hrdept_master.dept_name";
                    }
                    if (cblsearch.Items[3].Selected == true)
                    {
                        search[3] = "desig_name";
                    }
                    lblnorec.Visible = false;
                    string wsearch = "";
                    int count = 0;
                    for (i = 0; i < cblsearch.Items.Count; i++)
                    {
                        if (cblsearch.Items[i].Selected == true)
                        {
                            count = count + 1;
                        }
                    }
                    fpbiomatric.Sheets[0].ColumnCount = 0;
                    fpbiomatric.Sheets[0].RowCount = 0;
                    fpbiomatric.Sheets[0].ColumnCount = 0;
                    fpbiomatric.Sheets[0].RowCount = 0;
                    fpbiomatric.Sheets[0].ColumnCount = 6;
                    fpbiomatric.Sheets[0].SheetCorner.RowCount = 2;
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Staff Code";
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Staff Name";
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Department";
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Designation";
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Finger ID";
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;

                    fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
                    fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
                    fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
                    fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
                    fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
                    fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 5, 2, 1);

                    Panel1.Visible = true;
                    btnmorpresent.Visible = false;
                    FarPoint.Web.Spread.TextCellType textcell = new FarPoint.Web.Spread.TextCellType();
                    fpbiomatric.ActiveSheetView.Columns[0].Font.Size = FontUnit.Medium;
                    fpbiomatric.ActiveSheetView.Columns[1].Font.Size = FontUnit.Medium;
                    fpbiomatric.ActiveSheetView.Columns[2].Font.Size = FontUnit.Medium;
                    fpbiomatric.ActiveSheetView.Columns[3].Font.Size = FontUnit.Medium;
                    fpbiomatric.ActiveSheetView.Columns[4].Font.Size = FontUnit.Medium;
                    fpbiomatric.ActiveSheetView.Columns[5].Font.Size = FontUnit.Medium;

                    fpbiomatric.ActiveSheetView.Columns[0].Font.Name = "Book Antiqua";
                    fpbiomatric.ActiveSheetView.Columns[1].Font.Name = "Book Antiqua";
                    fpbiomatric.ActiveSheetView.Columns[2].Font.Name = "Book Antiqua";
                    fpbiomatric.ActiveSheetView.Columns[3].Font.Name = "Book Antiqua";
                    fpbiomatric.ActiveSheetView.Columns[4].Font.Name = "Book Antiqua";
                    fpbiomatric.ActiveSheetView.Columns[5].Font.Name = "Book Antiqua";
                    string tempstaffcode = "";
                    lbldate.Visible = false;
                    fpbiomatric.Sheets[0].RowCount = 0;
                    fpbiomatric.Sheets[0].ColumnCount = 6;
                    string monyear;
                    DateTime monyear1;
                    int day5;
                    date1 = Txtentryfrom.Text.ToString();
                    string[] split = date1.Split(new Char[] { '/' });
                    datefrom = split[1].ToString() + "/" + split[0].ToString() + "/" + split[2].ToString();
                    // monyearfrom= split[1].ToString() +"/" + split[2].ToString();
                    //  day5=
                    date2 = Txtentryto.Text.ToString();
                    string[] split1 = date2.Split(new Char[] { '/' });
                    dateto = split1[1].ToString() + "/" + split1[0].ToString() + "/" + split1[2].ToString();
                    DateTime dt1 = Convert.ToDateTime(datefrom.ToString());
                    DateTime dt2 = Convert.ToDateTime(dateto.ToString());
                    TimeSpan t = dt2.Subtract(dt1);
                    long days = t.Days;
                    day3 = Convert.ToInt32(days);
                    day3 = day3 + 1;
                    strdate = " and bio_attendance.access_date between '" + datefrom + "' and '" + dateto + "'";
                    if (days >= 0)
                    {
                        string[] differdays = new string[days];
                        fpbiomatric.Sheets[0].ColumnCount = fpbiomatric.Sheets[0].ColumnCount + 2;

                        fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 2].Text = Txtentryfrom.Text.ToString();
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 2].Tag = datefrom.ToString();
                        //fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 1].Text = "Morning";
                        //fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount ].Text = "Evening";
                        for (int date_loop = 1; date_loop <= days; date_loop++) //Next Next Date
                        {
                            differdays[date_loop - 1] = dt1.AddDays(date_loop).ToString();
                            string[] split11 = differdays[date_loop - 1].Split(new char[] { ' ' });
                            string[] split12 = split11[0].Split(new Char[] { '/' });
                            string datevar = "";
                            datevar = split12[1].ToString() + "/" + split12[0].ToString() + "/" + split12[2].ToString();
                            fpbiomatric.Sheets[0].ColumnCount = fpbiomatric.Sheets[0].ColumnCount + 2;
                            //modified by srinath 28/4/2014
                            DateTime dthead = Convert.ToDateTime(split12[0].ToString() + "/" + split12[1].ToString() + "/" + split12[2].ToString());
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 2].Text = dthead.ToString("dd/MM/yyyy");
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 2].Text = datevar;
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 2].Tag = split12[0].ToString() + "/" + split12[1].ToString() + "/" + split12[2].ToString(); ;
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 1].Text = "Morning";
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount ].Text = "Evening";
                        }
                    }
                    else
                    {
                        lbldate.Visible = true;
                        lbldate.Text = "Date Must Be Greater Than From Date";
                    }
                    string sqlname;
                    //------------------------------------------------------------------------
                    //if (cbo_att.SelectedItem.Value.ToString() == "Present(P)")
                    //{
                    //    if (rdomorning.Checked == true)
                    //    {
                    //        Str = " and left(att,2)='P-'";
                    //    }
                    //    else if (rdoevening.Checked == true)
                    //    {
                    //        Str = " and right(att,2)='-P'";
                    //    }
                    //    else if (rdoall.Checked == true)
                    //    {
                    //        Str = " and att like '%P%'";
                    //    }
                    //    else if (rdoboth.Checked == true)
                    //    {
                    //        Str = " and att='P-P'";
                    //    }
                    //}
                    //else if (cbo_att.SelectedItem.Value.ToString() == "Absent(A)")
                    //{
                    //    if (rdomorning.Checked == true)
                    //    {
                    //        Str = " and left(att,2)='A-'";
                    //    }
                    //    else if (rdoevening.Checked == true)
                    //    {
                    //        Str = " and right(att,2)='-A'";
                    //    }
                    //    else if (rdoall.Checked == true)
                    //    {
                    //        Str = " and att like '%A%'";
                    //    }
                    //    else if (rdoboth.Checked == true)
                    //    {
                    //        Str = " and att='A-A'";
                    //    }
                    //}
                    //else if (cbo_att.SelectedItem.Value.ToString() == "Late(LA)")
                    //{
                    //    if (rdomorning.Checked == true)
                    //    {
                    //        Str = " and left(att,3)='LA-'";
                    //    }
                    //    else if (rdoevening.Checked == true)
                    //    {
                    //        Str = " and right(att,3)='-LA'";
                    //    }
                    //    else if (rdoall.Checked == true)
                    //    {
                    //        Str = " and att like '%LA%'";
                    //    }
                    //    else if (rdoboth.Checked == true)
                    //    {
                    //        Str = " and att='LA-LA'";
                    //    }
                    //}
                    //else if (cbo_att.SelectedItem.Value.ToString() == "Permission(PER)")
                    //{
                    //    if (rdomorning.Checked == true)
                    //    {
                    //        Str = " and left(att,4)='PER-'";
                    //    }
                    //    else if (rdoevening.Checked == true)
                    //    {
                    //        Str = " and right(att,4)='-PER'";
                    //    }
                    //    else if (rdoall.Checked == true)
                    //    {
                    //        Str = " and att like '%PER%'";
                    //    }
                    //    else if (rdoboth.Checked == true)
                    //    {
                    //        Str = " and att='PER-PER'";
                    //    }
                    //}
                    //--------------------------------------------------------------------
                    //////////////////////////////////////////////////////////////////////////////

                    FarPoint.Web.Spread.StyleInfo style = new FarPoint.Web.Spread.StyleInfo();
                    style.Font.Size = 10;
                    style.Font.Bold = true;
                    fpbiomatric.Sheets[0].SheetCornerStyle = new FarPoint.Web.Spread.StyleInfo(style);
                    fpbiomatric.Sheets[0].ColumnHeader.DefaultStyle = new FarPoint.Web.Spread.StyleInfo(style);
                    fpbiomatric.Sheets[0].AllowTableCorner = false;
                    //fpbiomatric.Sheets[0].SheetCorner.Cells[0, 0].Text = "  ";

                    // fpbiomatric.Sheets[0].ColumnHeader.Rows[6].BackColor = Color.FromArgb(214, 235, 255);
                    //fpbiomatric.Sheets[0].SheetCornerSpanModel.Add(0, 0, 6, 1);
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].Border.BorderColorRight = Color.White;
                    fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 3].Border.BorderColor = Color.White;
                    string str = "select isnull(collname, ' ') as collname,isnull(address1, ' ') as address1,isnull(address2,' ') as address2,isnull(address3, ' ') as address3,isnull(pincode,' ') as pincode from collinfo where college_code='" + ddlcollege.SelectedValue.ToString() + "'";
                    con.Close();
                    con.Open();
                    SqlCommand comm = new SqlCommand(str, con);
                    SqlDataReader drr = comm.ExecuteReader();
                    drr.Read();
                    string coll_name = Convert.ToString(drr["collname"]);
                    string coll_address1 = Convert.ToString(drr["address1"]);
                    string coll_address2 = Convert.ToString(drr["address2"]);
                    string coll_address3 = Convert.ToString(drr["address3"]);
                    string pin_code = Convert.ToString(drr["pincode"]);

                    //=========================================================
                    //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 6, 1);
                    //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, fpbiomatric.Sheets[0].ColumnCount - 1, 6, 1);
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 1].Text = coll_name;

                    //////////////////////////////////////////////////
                    //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 1, fpbiomatric.Sheets[0].ColumnCount - 2);

                    ///////////////////////////////////////////////////////
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 1].Border.BorderColorBottom = Color.White;

                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[1, 1].Text = coll_address1;
                    //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(1, 1, 1, fpbiomatric.Sheets[0].ColumnCount - 2);
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[1, 1].HorizontalAlign = HorizontalAlign.Center;
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[1, 1].Border.BorderColorBottom = Color.White;

                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[2, 1].Text = coll_address2;
                    //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(2, 1, 1, fpbiomatric.Sheets[0].ColumnCount - 2);
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[2, 1].HorizontalAlign = HorizontalAlign.Center;
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[2, 1].Border.BorderColorBottom = Color.White;

                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[3, 1].Text = coll_address3 + "-" + pin_code;
                    //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(3, 1, 1, fpbiomatric.Sheets[0].ColumnCount - 2);
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[3, 1].HorizontalAlign = HorizontalAlign.Center;
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[3, 1].Border.BorderColorBottom = Color.White;
                    //=========================================================
                    //=========================================================
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[4, 1].Text = lbl_leave_msg_1;
                    //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(4, 1, 1, fpbiomatric.Sheets[0].ColumnCount - 2);
                    //=========================================================
                    //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(1, 1, 1, fpbiomatric.Sheets[0].ColumnCount - 2);
                    //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(2, 1, 1, fpbiomatric.Sheets[0].ColumnCount - 2);
                    //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(3, 1, 1, fpbiomatric.Sheets[0].ColumnCount - 2);
                    //=========================================================
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[4, 1].HorizontalAlign = HorizontalAlign.Center;
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[4, 1].ForeColor = Color.FromArgb(64, 64, 255);
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[4, 1].Border.BorderColorBottom = Color.White;
                    //=========================================================
                    // fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 9, 6, 1);
                    //=========================================================
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, 1].HorizontalAlign = HorizontalAlign.Left;
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, 1].Font.Bold = true;
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, 1].Font.Size = FontUnit.Medium;
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, 1].Border.BorderColorRight = Color.White;
                    //if (days >= 0) // Added by Manikandan
                    //{
                    //    fpbiomatric.Sheets[0].ColumnHeader.Cells[5, 4].HorizontalAlign = HorizontalAlign.Right;
                    //    fpbiomatric.Sheets[0].ColumnHeader.Cells[5, 4].Font.Bold = true;
                    //    fpbiomatric.Sheets[0].ColumnHeader.Cells[5, 4].Font.Size = FontUnit.Medium;
                    //}
                    //MyImg mi = new MyImg();
                    //mi.ImageUrl = "../images/10BIT001.jpeg";
                    //mi.ImageUrl = "Handler/Handler2.ashx?";
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].CellType = mi;
                    //=========================================================
                    // fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 1].CellType = mi;
                    fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 1, 100);
                    fpbiomatric.Sheets[0].SetColumnWidth(0, 50);
                    fpbiomatric.Sheets[0].SetColumnWidth(1, 100);
                    fpbiomatric.Sheets[0].ColumnHeader.Rows[0].Font.Bold = true;
                    fpbiomatric.Sheets[0].ColumnHeader.Rows[0].Font.Size = FontUnit.Medium;
                    fpbiomatric.Sheets[0].ColumnHeader.Rows[1].Font.Bold = true;
                    fpbiomatric.Sheets[0].ColumnHeader.Rows[1].Font.Size = FontUnit.Medium;
                    //===================Hided by Manikandan 13/06/2013
                    //fpbiomatric.Sheets[0].ColumnHeader.Rows[2].Font.Bold = true;
                    //fpbiomatric.Sheets[0].ColumnHeader.Rows[2].Font.Size = FontUnit.Medium;
                    //fpbiomatric.Sheets[0].ColumnHeader.Rows[3].Font.Bold = true;
                    //fpbiomatric.Sheets[0].ColumnHeader.Rows[3].Font.Size = FontUnit.Medium;
                    //fpbiomatric.Sheets[0].ColumnHeader.Rows[4].Font.Bold = true;
                    //fpbiomatric.Sheets[0].ColumnHeader.Rows[4].Font.Size = FontUnit.Medium;
                    //fpbiomatric.Sheets[0].ColumnHeader.Rows[5].Font.Bold = true;
                    //fpbiomatric.Sheets[0].ColumnHeader.Rows[5].Font.Size = FontUnit.Medium;
                    //fpbiomatric.Sheets[0].ColumnHeader.Rows[6].Font.Bold = true;
                    //fpbiomatric.Sheets[0].ColumnHeader.Rows[6].Font.Size = FontUnit.Medium;
                    //=========================================================
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, 1].Text = "Date-From" + date1 + "To:" + date2 + "";
                    //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(5, 1, 1, 2);
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, 1].HorizontalAlign = HorizontalAlign.Left;
                    //=========================================================
                    string categry4 = "";
                    for (int g = 0; g < cblcategory.Items.Count; g++)
                    {
                        if (cblcategory.Items[g].Selected == true)
                        {
                            categry4 = categry4 + cblcategory.Items[g].Text + ",";
                        }
                    }
                    if (categry4 != "")
                    {
                        categry4 = categry4.Substring(0, categry4.Length - 1);
                    }

                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, 5].Text = categry4.ToString();
                    //=========================================================
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, 3].Text = "Category: " + categry4.ToString();
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, 3].HorizontalAlign = HorizontalAlign.Left;
                    //fpbiomatric.Sheets[0].ColumnHeader.Cells[5, 3].Border.BorderColorLeft = Color.White;
                    //if (days >= 0) // Added by Manikandan 09/05/2013
                    //{
                    //    fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(5, 3, 1, fpbiomatric.Sheets[0].ColumnCount - 4);
                    //}
                    //=========================================================

                    fpbiomatric.Sheets[0].ColumnHeader.Rows[0].BackColor = Color.FromArgb(214, 235, 255);
                    fpbiomatric.Sheets[0].ColumnHeader.Rows[1].BackColor = Color.FromArgb(214, 235, 255);
                    // Image8.Visible = false;

                    sql = "SELECT distinct staffmaster.staff_code,len(staffmaster.staff_code),staffmaster.staff_name,hrdept_master.dept_name,hrdept_master.dept_acronym,desig_master.desig_name,desig_master.desig_acronym,desig_master.priority,desig_master.print_pri ,hrdept_master.dept_name,stafftrans.stftype ,desig_master.priority,hrdept_master.priority,staffmaster.join_date,CAST(Fingerprint1 as nvarchar) as Fingerprint1 FROM staffmaster,stafftrans,hrdept_master ,desig_master,staff_attnd where(staffmaster.Fingerprint1 Is not Null or staffmaster.Fingerprint1 Is  Null)and hrdept_master.college_code=staffmaster.college_code and hrdept_master.dept_code=stafftrans.dept_code and staffmaster.staff_code=stafftrans.staff_code and staffmaster.settled <>1 and staffmaster.resign <>1 and  stafftrans.latestrec<>0 and staffmaster.college_code ='" + ddlcollege.SelectedValue.ToString() + "' And staffmaster.college_code = hrdept_master.college_code and desig_master.desig_code=stafftrans.desig_code and desig_master.collegecode=hrdept_master.college_code and staff_attnd.staff_code = staffmaster.staff_code and ((staffmaster.settled =0 and staffmaster.resign=0) or (resign=1 and settled=1 and relieve_date >='' and relieve_date <=''))";
                    if (tbseattype.Text != "---Select---")
                    {
                        int itemcount = 0;


                        for (itemcount = 0; itemcount < cbldepttype.Items.Count; itemcount++)
                        {
                            if (cbldepttype.Items[itemcount].Selected == true)
                            {
                                if (strdept == "")
                                    strdept = "'" + cbldepttype.Items[itemcount].Value.ToString() + "'";
                                else
                                    strdept = strdept + "," + "'" + cbldepttype.Items[itemcount].Value.ToString() + "'";
                            }
                        }


                        if (strdept != "")
                        {
                            strdept = " in(" + strdept + ")";
                        }
                        sql = sql + " and hrdept_master.dept_code " + strdept + "";
                    }
                    if (tbblood.Text != "---Select---")
                    {
                        int itemcount1 = 0;

                        for (itemcount1 = 0; itemcount1 < cblcategory.Items.Count; itemcount1++)
                        {
                            if (cblcategory.Items[itemcount1].Selected == true)
                            {
                                if (strcategory == "")
                                    strcategory = "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                                else
                                    strcategory = strcategory + "," + "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                            }
                        }
                        if (strcategory != "")
                        {
                            strcategory = " in (" + strcategory + ")";
                        }
                        sql = sql + "  and stafftrans.category_code" + strcategory + "";
                    }
                    if (cbostaffname.SelectedItem.Value.ToString() != "All")
                    {
                        //sql = sql + " and staffmaster.staff_name like '%" + cbostaffname.Text + "%' ";
                        //Modiifed By Srinath 22/10/2013
                        sql = sql + " and staffmaster.staff_name='" + cbostaffname.SelectedItem.ToString() + "' ";
                    }
                    if (cbostaffcode.SelectedItem.Value.ToString() != "All")
                    {
                        //sql = sql + " and staffmaster.staff_code like '%" + cbostaffcode.Text + "%' ";
                        sql = sql + " and staffmaster.staff_code='" + cbostaffcode.Text + "' ";
                    }
                    if (Chktimein.Checked == true)
                    {

                        strTime = " and CASE WHEN time_in = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_in ,100),6) END between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + " " + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + " " + cbointo.Text + "'";
                        sql = sql + " " + strTime + "";
                    }
                    else if (Chktimeout.Checked == true)
                    {

                        strTime = " AND CASE WHEN time_in = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_Out ,100),6) END between '" + cbo_hours.Text + ":" + cbo_min.Text + " " + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + " " + cbo_sec2.Text + " '";

                        sql = sql + " " + strTime + "";

                    }
                    sql = sql + desig_query;
                    //modified by srinath 05/04/2014
                    //  sql = sql + " order by hrdept_master.dept_name ";
                    if (ddlorder.SelectedItem.Text.ToString() == "Priority")
                    {
                        sql = sql + " order by  hrdept_master.priority,desig_master.priority,hrdept_master.dept_name,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code  ";
                    }
                    else
                    {
                        sql = sql + " order by hrdept_master.dept_name,len(staffmaster.staff_code),staffmaster.staff_code";//Modified by Srianth 28/03/2014
                    }
                    // tr = "";

                    // con1.Close();
                    //string str2 = getfunction3(sql);
                    //'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                    con.Close();
                    con1.Open();
                    SqlDataReader drname;
                    SqlCommand cmd2 = new SqlCommand(sql, con1);
                    drname = cmd2.ExecuteReader();
                    int cnt = 0;
                    while (drname.Read())
                    {
                        if (drname.HasRows == true)
                        {
                            // sql = "";
                            Str = "";
                            sno++;
                            sno3++;
                            string staffcode1;
                            string staffname5 = "";
                            string dept_name5 = "";
                            string design_name = "";
                            string categoryname5 = "";
                            string finid = "";
                            dept_name5 = drname["dept_name"].ToString();
                            staffname5 = drname["staff_name"].ToString();
                            staffcode1 = drname["staff_code"].ToString();
                            design_name = drname["desig_name"].ToString();
                            finid = drname["Fingerprint1"].ToString();
                            fpbiomatric.Sheets[0].SetColumnWidth(0, 50);
                            fpbiomatric.Sheets[0].SetColumnWidth(4, 100);
                            fpbiomatric.Sheets[0].SetColumnWidth(1, 250);
                            fpbiomatric.Sheets[0].SetColumnWidth(2, 250);
                            fpbiomatric.Sheets[0].SetColumnWidth(3, 200);
                            fpbiomatric.Sheets[0].SetColumnWidth(5, 200);
                            countpresent = 0;
                            counteveningpresent = 0;
                            countmorningabsent = 0;
                            counteveningabsent = 0;
                            countmorninglate = 0;
                            countmorningpermission = 0;
                            counteveninglate = 0;
                            totabsent = 0;
                            totpresent = 0;
                            counteveningpermission = 0;
                            countcolumn = fpbiomatric.Sheets[0].ColumnCount;
                            for (int colcount = 6; colcount <= Convert.ToInt32(fpbiomatric.Sheets[0].ColumnCount - 1); colcount = colcount + 2)
                            {
                                fpbiomatric.ActiveSheetView.Columns[colcount].Font.Name = "Book Antiqua";
                                fpbiomatric.ActiveSheetView.Columns[colcount + 1].Font.Name = "Book Antiqua";
                                fpbiomatric.ActiveSheetView.Columns[colcount].Font.Size = FontUnit.Medium;
                                fpbiomatric.ActiveSheetView.Columns[colcount + 1].Font.Size = FontUnit.Medium;
                                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount, 1, 2);
                                fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount].Text = "Mor";
                                fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount].HorizontalAlign = HorizontalAlign.Center;
                                fpbiomatric.Sheets[0].SetColumnWidth(colcount, 33);
                                fpbiomatric.Sheets[0].Columns[colcount].HorizontalAlign = HorizontalAlign.Center;
                                fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount + 1].Text = "Eve";
                                fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount + 1].HorizontalAlign = HorizontalAlign.Center;
                                fpbiomatric.Sheets[0].SetColumnWidth(colcount + 1, 33);
                                fpbiomatric.Sheets[0].Columns[colcount + 1].HorizontalAlign = HorizontalAlign.Center;

                                int month;
                                string datetagvalue1;
                                string datetagvalue;

                                datetagvalue1 = fpbiomatric.Sheets[0].ColumnHeader.Cells[0, colcount].Tag.ToString();
                                ///fpbiomatric.Sheets[0].ColumnHeader.Cells[0, colcount].Text = datetagvalue1.ToString();
                                string[] split23 = datetagvalue1.Split(new Char[] { '/' });
                                datetagvalue = datetagvalue1;

                                //  datetagvalue1 = split23[1].ToString() + "/" + split23[0].ToString() + "/" + split23[2].ToString();
                                month = Convert.ToInt16(split23[0].ToString());

                                monyear = month + "/" + split23[2].ToString();
                                day5 = Convert.ToInt16(split23[1].ToString());
                                strdate = " and bio_attendance.access_date='" + datetagvalue1 + "'";

                                //----------------------------------------------------------------------------------------------
                                //if (cbo_att.SelectedItem.Value.ToString() == "Present(P)")
                                //{
                                //    if (rdomorning.Checked == true)
                                //    {
                                //        Str = " and left(att,2)='P-'";
                                //    }
                                //    else if (rdoevening.Checked == true)
                                //    {
                                //        Str = " and right(att,2)='-P'";
                                //    }
                                //    else if (rdoall.Checked == true)
                                //    {
                                //        //fpbiomatric.Sheets[0].Columns[8].Visible = true;
                                //        //fpbiomatric.Sheets[0].Columns[9].Visible = true;
                                //        Str = " and att like '%P%'";
                                //    }
                                //    else if (rdoboth.Checked == true)
                                //    {
                                //        // fpbiomatric.Sheets[0].Columns[8].Visible = true;
                                //        //fpbiomatric.Sheets[0].Columns[9].Visible = true;
                                //        Str = " and att='P-P'";
                                //    }
                                //}
                                //else if (cbo_att.SelectedItem.Value.ToString() == "Absent(A)")
                                //{
                                //    if (rdomorning.Checked == true)
                                //    {
                                //        Str = " and left(att,2)='A-'";
                                //    }
                                //    else if (rdoevening.Checked == true)
                                //    {
                                //        Str = " and right(att,2)='-A'";
                                //    }
                                //    else if (rdoall.Checked == true)
                                //    {
                                //        Str = " and att like '%A%'";
                                //    }
                                //    else if (rdoboth.Checked == true)
                                //    {
                                //        Str = " and att='A-A'";
                                //    }
                                //}
                                //else if (cbo_att.SelectedItem.Value.ToString() == "Late(LA)")
                                //{
                                //    if (rdomorning.Checked == true)
                                //    {
                                //        Str = " and left(att,3)='LA-'";
                                //    }
                                //    else if (rdoevening.Checked == true)
                                //    {
                                //        Str = " and right(att,3)='-LA'";
                                //    }
                                //    else if (rdoall.Checked == true)
                                //    {
                                //        Str = " and att like '%LA%'";
                                //    }
                                //    else if (rdoboth.Checked == true)
                                //    {
                                //        Str = " and att='LA-LA'";
                                //    }
                                //}
                                //else if (cbo_att.SelectedItem.Value.ToString() == "Permission(PER)")
                                //{
                                //    if (rdomorning.Checked == true)
                                //    {
                                //        Str = " and left(att,4)='PER-'";

                                //    }
                                //    else if (rdoevening.Checked == true)
                                //    {
                                //        Str = " and right(att,4)='-PER'";
                                //    }
                                //    else if (rdoall.Checked == true)
                                //    {

                                //        Str = " and att like '%PER%'";
                                //    }
                                //    else if (rdoboth.Checked == true)
                                //    {
                                //        Str = " and att='PER-PER'";
                                //    }
                                //}

                                //--------------------------------------------------------------------------------------
                                int datval = 0;
                                int rowcnt = 0;
                                int rowstr = 0;
                                lblnorec.Visible = false;
                                Panel1.Visible = true;
                                SqlDataReader drcount14;
                                fpbiomatric.Width = 800;
                                string tempstaffcode1 = "";
                                string a = "";
                                string staff5 = "";

                                sql2 = " Select * From bio_attendance Where Roll_No ='" + staffcode1 + "' and Is_Staff = 1 " + strdate + "";
                                SqlCommand cmd90 = new SqlCommand(sql2, con);
                                con.Close();
                                con.Open();
                                SqlDataReader dr52;
                                dr52 = cmd90.ExecuteReader();

                                //if (dr52.HasRows == false)
                                if (dr52.HasRows == false)
                                {
                                    con.Close();
                                    con.Open();
                                    day5 = Convert.ToInt16(day5 + 3);
                                    sql1 = "select * from staff_attnd where mon_year='" + monyear + "' and staff_code='" + staffcode1 + "'";
                                    SqlCommand cmd60 = new SqlCommand(sql1, con);

                                    SqlDataReader drcountmon;
                                    drcountmon = cmd60.ExecuteReader();
                                    while (drcountmon.Read())
                                    {
                                        if (drcountmon.HasRows == true)
                                        {
                                            a = drcountmon[day5].ToString();
                                            staff5 = drcountmon["staff_code"].ToString();
                                        }
                                        mycon1.Close();
                                        //Added By SRinath 26/4/2014=========Start====
                                        if (strtempdept != dept_name5)
                                        {
                                            strtempdept = dept_name5;
                                            fpbiomatric.Sheets[0].RowCount += 1;
                                            int col = 0;
                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Text = strtempdept;
                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Font.Bold = true;
                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].HorizontalAlign = HorizontalAlign.Center;
                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].VerticalAlign = VerticalAlign.Middle;
                                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].BackColor = Color.LightYellow;
                                            fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, col, 1, fpbiomatric.Sheets[0].ColumnCount);
                                        }
                                        //=======================End===================
                                        if (tempstaffcode == "")
                                        {
                                            fpbiomatric.Sheets[0].RowCount += 1;
                                            tempstaffcode = staff5.ToString();
                                        }
                                        else if ((tempstaffcode != "") && (tempstaffcode != staff5.ToString()))
                                        {
                                            fpbiomatric.Sheets[0].RowCount += 1;
                                            tempstaffcode = staff5;
                                        }
                                        //fpbiomatric.Sheets[0].RowCount += 1;
                                        string staffcode6 = "";
                                        string staffname6 = "";
                                        string dept_name7 = "";
                                        string design_name7 = "";
                                        string categoryname7 = "";
                                        staffcode6 = staffcode1;
                                        dept_name7 = dept_name5;
                                        design_name7 = design_name;
                                        categoryname7 = categoryname5;
                                        rowstr = Convert.ToInt32(fpbiomatric.Sheets[0].RowCount);
                                        staffname6 = staffname5;
                                        string mrng5 = "";
                                        string eveng5 = "";
                                        if (a != "")
                                        {
                                            string[] tmpdate = a.ToString().Split(new char[] { '-' });
                                            mrng5 = tmpdate[0].ToString();
                                            eveng5 = tmpdate[1].ToString();
                                        }
                                        if ((mrng5 == "P") || (mrng5 == "PER") || (mrng5 == "LA"))
                                        {
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.Green;
                                            counttotalmorpresent++;
                                        }
                                        if ((eveng5 == "P") || (eveng5 == "PER") || (eveng5 == "LA"))
                                        {
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].BackColor = Color.Green;
                                            counttotalevepresent++;
                                        }
                                        if ((mrng5 != "P") && (mrng5 != "PER") && (mrng5 != "LA"))
                                        {
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.Red;
                                            countmortotalabsent++;
                                        }
                                        if ((eveng5 != "P") && (eveng5 != "PER") && (eveng5 != "LA"))
                                        {
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].BackColor = Color.Red;
                                            countevetotalabsent++;
                                        }
                                        int setcount = 0;
                                        setcount = colcount;
                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount].Text = mrng5.ToString();
                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 1].Text = eveng5.ToString();

                                        Buttontotal.Visible = false;
                                        DropDownListpage.Visible = false;
                                        TextBoxpage.Visible = false;
                                        lblrecord.Visible = false;
                                        lblrecord.Visible = false;
                                        lblpage.Visible = false;

                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text = sno3.ToString();
                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 1].Text = staffcode6;
                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 2].Text = staffname6;
                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 3].Text = dept_name7;
                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 4].Text = design_name7;
                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 5].CellType = textcell;
                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 5].Text = finid;
                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, 5].HorizontalAlign = HorizontalAlign.Center;
                                    }
                                }
                            }
                            con.Close();
                            ///////////
                            Imgeveper.Visible = false;
                            Imgmorper.Visible = false;
                            Imglate.Visible = false;
                            Imgood.Visible = false;
                            //  btpresent.Visible = false;
                            // btnabsent.Visible = false;
                            // lbltotalabsent.Visible = false;
                            Lblgracetime.Visible = false;
                            btnontime.Visible = false;
                            // btngrace.Visible = false;
                            lblontime.Visible = false;
                            btngracetime.Visible = false;
                            // lbltottalpresent.Visible = false;
                            lblood.Visible = false;
                            lblpermission.Visible = false;
                            lblevngpermission.Visible = false;
                            late.Visible = false;
                            btnmorabsent.Visible = false;
                            btneveabsent.Visible = false;
                            btnevepresent.Visible = false;
                            btnmorabsent.Visible = false;
                            lblmorpresent.Visible = false;
                            lblevepresent.Visible = false;
                            lblevepresent.Visible = false;
                            lbleveabsent.Visible = false;
                            lblmorabsent.Visible = false;
                            Panel1.Visible = false;
                            cblsearch.Visible = false;
                            //Imgselectall.Visible = false;
                            // CheckBoxselect.Visible = false;
                            Panel2.Visible = false;
                            //  }
                            // drcountmon.Close();
                            //mycon1.Close();
                        }
                        if (drname.HasRows == false)
                        {
                            fpbiomatric.Visible = false;
                            btnprintmaster.Visible = false;

                            Buttontotal.Visible = false;
                            DropDownListpage.Visible = false;
                            TextBoxpage.Visible = false;
                            lblrecord.Visible = false;
                            lblrecord.Visible = false;
                            lblpage.Visible = false;
                            Panel2.Visible = false;

                            lblnorec.Visible = true;
                            Imgeveper.Visible = false;
                            Imgmorper.Visible = false;
                            Imglate.Visible = false;
                            // btpresent.Visible = false;
                            //  lbltottalpresent.Visible = false;
                            Imgood.Visible = false;
                            lblood.Visible = false;
                            lblpermission.Visible = false;
                            lblevngpermission.Visible = false;
                            late.Visible = false;
                            Panel1.Visible = false;
                            lblne.Visible = false;
                            btnmorabsent.Visible = false;
                            btneveabsent.Visible = false;
                            btnevepresent.Visible = false;
                            btnmorabsent.Visible = false;
                            lblmorpresent.Visible = false;
                            lblevepresent.Visible = false;
                            lblevepresent.Visible = false;
                            lbleveabsent.Visible = false;
                            lblmorabsent.Visible = false;
                        }
                        //////////
                    }
                    //drcount14.Close();
                }
                fpbiomatric.Sheets[0].RowCount++;

                fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 0, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].Text = "Total No of  Present (Morning):" + counttotalmorpresent.ToString();
                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;

                fpbiomatric.Sheets[0].RowCount++;

                fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 0, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].Text = "Total No of Present (Evening):" + counttotalevepresent.ToString();
                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].RowCount++;

                fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 0, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].Text = "Total No of Absent (Morning):" + countmortotalabsent.ToString();
                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;

                fpbiomatric.Sheets[0].RowCount++;

                fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;
                fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 0, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].Text = "Total No of Absent (Evening):" + countevetotalabsent.ToString();
                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                DropDownListpage.Items.Clear();
                Double totalRows = 0;
                lblne.Visible = true;
                totalRows = Convert.ToInt32(fpbiomatric.Sheets[0].RowCount);
                DropDownListpage.Items.Clear();
                if (totalRows >= 10)
                {
                    fpbiomatric.Sheets[0].PageSize = Convert.ToInt32(totalRows);
                    for (int k = 0; k < Convert.ToInt32(totalRows); k = k + 10)
                    {
                        DropDownListpage.Items.Add((k + 10).ToString());
                    }
                    DropDownListpage.Items.Add("Others");
                    DropDownListpage.SelectedIndex = DropDownListpage.Items.Count - 2;
                    fpbiomatric.Height = 350;
                    fpbiomatric.VerticalScrollBarPolicy = FarPoint.Web.Spread.ScrollBarPolicy.AsNeeded;
                    fpbiomatric.HorizontalScrollBarPolicy = FarPoint.Web.Spread.ScrollBarPolicy.AsNeeded;
                }
                else if (totalRows == 0)
                {
                    DropDownListpage.Items.Add("0");
                    fpbiomatric.Height = 300;
                }
                else
                {
                    fpbiomatric.Sheets[0].PageSize = Convert.ToInt32(totalRows);
                    DropDownListpage.Items.Add(fpbiomatric.Sheets[0].PageSize.ToString());
                    fpbiomatric.Height = 50 + (75 * Convert.ToInt32(totalRows));
                }
                Session["totalPages"] = (int)Math.Ceiling(totalRows / fpbiomatric.Sheets[0].PageSize);
                Buttontotal.Text = "Records : " + totalRows + "          Pages : " + Session["totalPages"];
                con1.Close();
            }

            #endregion

            #region Both

            else if (rdoboth1.Checked == true)
            {
                int sno3 = 0;
                cblsearch.Visible = true;
                string[] search = new string[50];

                if (cblsearch.Items[0].Selected == true)
                {
                    search[0] = "staffmaster.staff_code";
                }
                if (cblsearch.Items[1].Selected == true)
                {
                    search[1] = "staffmaster.staff_name";
                }
                if (cblsearch.Items[2].Selected == true)
                {
                    search[2] = "hrdept_master.dept_name";
                }
                if (cblsearch.Items[3].Selected == true)
                {
                    search[3] = "dept_acronym";
                }
                if (cblsearch.Items[4].Selected == true)
                {
                    search[4] = "desig_master.desig_name";
                }
                if (cblsearch.Items[5].Selected == true)
                {
                    search[5] = " desig_master.desig_acronym";
                }
                if (cblsearch.Items[6].Selected == true)
                {
                    search[6] = "CONVERT(VARCHAR(10),staffmaster.join_date,103)";
                }
                if (cblsearch.Items[7].Selected == true)
                {
                    search[7] = "in_out_time.category_name";
                }
                if (cblsearch.Items[8].Selected == true)
                {
                    search[8] = " CASE WHEN time_in = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_in ,100),6) END as time_in";
                }
                int count = 0;
                FarPoint.Web.Spread.TextCellType textcell = new FarPoint.Web.Spread.TextCellType();
                fpbiomatric.Sheets[0].ColumnCount = 0;
                fpbiomatric.Sheets[0].ColumnCount = 25;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                fpbiomatric.Sheets[0].ColumnHeader.RowCount = 2;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Staff Code";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Staff Name";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Department";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Dept Acronym";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;

                fpbiomatric.ActiveSheetView.Columns[0].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[1].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[2].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[3].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[4].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[5].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[6].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[7].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[8].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[9].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[10].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[11].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[12].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[13].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[14].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[15].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[16].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[17].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[18].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[19].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[20].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[21].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[22].Font.Name = "Book Antiqua";
                fpbiomatric.ActiveSheetView.Columns[23].Font.Name = "Book Antiqua";

                fpbiomatric.ActiveSheetView.Columns[0].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[1].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[2].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[3].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[4].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[5].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[6].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[7].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[8].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[9].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[10].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[11].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[12].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[13].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[14].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[15].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[16].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[17].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[18].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[19].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[21].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[21].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[22].Font.Size = FontUnit.Medium;
                fpbiomatric.ActiveSheetView.Columns[23].Font.Size = FontUnit.Medium;

                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Designation";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Desig Acronym";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 7].Text = "Date Of Joinng";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 7].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 8].Text = "Category";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 8].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 9].Text = "Finger ID";//Added By Srinath 8/3/2013
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 9].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 10].Text = " No Of Working Days";//Added By Srinath 8/3/2013
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 10].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 24].Text = "Att %";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 24].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 23].Text = "Other Permission";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 23].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].SetColumnWidth(9, 70);
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 11].Text = "P";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 11].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 12].Text = "Manual(P)";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 12].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].SetColumnWidth(10, 30);
                fpbiomatric.Sheets[0].SetColumnWidth(0, 50);
                fpbiomatric.Sheets[0].SetColumnWidth(1, 200);
                fpbiomatric.Sheets[0].SetColumnWidth(2, 100);
                fpbiomatric.Sheets[0].SetColumnWidth(3, 100);
                fpbiomatric.Sheets[0].SetColumnWidth(4, 200);
                fpbiomatric.Sheets[0].SetColumnWidth(5, 100);
                fpbiomatric.Sheets[0].SetColumnWidth(6, 100);

                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 13].Text = "A";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 13].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 14].Text = "Manual(A)";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 14].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].SetColumnWidth(10, 30);
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 15].Text = "LA";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 15].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 16].Text = "Manual(LA)";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 16].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].SetColumnWidth(12, 30);
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 17].Text = "PER";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 17].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 18].Text = "Manual(PER)";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 18].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 19].Text = "CL";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 19].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 20].Text = "ML";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 20].HorizontalAlign = HorizontalAlign.Center;

                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 21].Text = "OD";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 21].HorizontalAlign = HorizontalAlign.Center;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 22].Text = "Others";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 22].HorizontalAlign = HorizontalAlign.Center;

                fpbiomatric.Sheets[0].SetColumnWidth(13, 30);
                fpbiomatric.Sheets[0].SetColumnWidth(14, 30);
                fpbiomatric.Sheets[0].SetColumnWidth(15, 30);
                fpbiomatric.Sheets[0].SetColumnWidth(16, 30);
                fpbiomatric.Sheets[0].SetColumnWidth(17, 30);

                // fpbiomatric.Sheets[0].SetColumnWidth(12, 30);
                fpbiomatric.Sheets[0].SetColumnWidth(18, 30);
                fpbiomatric.Sheets[0].SetColumnWidth(19, 30);
                fpbiomatric.Sheets[0].SetColumnWidth(20, 30);
                fpbiomatric.Sheets[0].SetColumnWidth(21, 30);


                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 5, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 7, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 7, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 8, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 9, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 10, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 11, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 12, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 13, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 14, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 15, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 16, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 17, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 18, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 19, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 20, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 21, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 22, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 23, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 24, 2, 1);

                Panel1.Visible = true;
                string tempstaffcode = "";
                fpbiomatric.Sheets[0].RowCount = 0;
                fpbiomatric.Sheets[0].ColumnCount = 25;
                date1 = Txtentryfrom.Text.ToString();
                string[] split = date1.Split(new Char[] { '/' });
                datefrom = split[1].ToString() + "/" + Convert.ToInt16(split[0].ToString()) + "/" + split[2].ToString();
                date2 = Txtentryto.Text.ToString();
                string[] split1 = date2.Split(new Char[] { '/' });
                dateto = split1[1].ToString() + "/" + split1[0].ToString() + "/" + split1[2].ToString();
                DateTime dt1 = Convert.ToDateTime(datefrom.ToString());
                DateTime dt2 = Convert.ToDateTime(dateto.ToString());
                TimeSpan t = dt2.Subtract(dt1);
                long days = t.Days;
                day3 = Convert.ToInt32(days);
                day3 = day3 + 1;
                int sno123 = 0;

                if ((datefrom != null) && (dateto != null))
                {
                    strdate = " and bio_attendance.access_date between '" + datefrom + "' and '" + dateto + "'";
                    if (days >= 0)
                    {
                        string[] differdays = new string[days];


                        lbldate.Visible = false;


                        fpbiomatric.Sheets[0].ColumnCount = fpbiomatric.Sheets[0].ColumnCount + 6;

                        fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].Text = Txtentryfrom.Text.ToString();
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, fpbiomatric.Sheets[0].ColumnCount - 6, 1, 6);

                        fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].Tag = datefrom.ToString();

                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 1].Text = "Permission Type";
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 1, 33);
                        fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;

                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 3].Text = "Mor";
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 3].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 3, 33);
                        fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 3].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 2].Text = "Eve";
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 2, 33);

                        for (int date_loop = 1; date_loop <= days; date_loop++) //Next Next Date
                        {

                            differdays[date_loop - 1] = dt1.AddDays(date_loop).ToString();
                            string[] split11 = differdays[date_loop - 1].Split(new char[] { ' ' });
                            string[] split12 = split11[0].Split(new Char[] { '/' });
                            string datevar = "";
                            datevar = split12[1].ToString() + "/" + split12[0].ToString() + "/" + split12[2].ToString();

                            fpbiomatric.Sheets[0].ColumnCount = fpbiomatric.Sheets[0].ColumnCount + 6;

                            //modified by srinath 28/4/2014
                            DateTime dthead = Convert.ToDateTime(split12[0].ToString() + "/" + split12[1].ToString() + "/" + split12[2].ToString());
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].Text = dthead.ToString("dd/MM/yyyy");
                            //fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 5].Text = datevar;
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 6].Tag = split12[0].ToString() + "/" + split12[1].ToString() + "/" + split12[2].ToString(); ;

                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 1].Text = "Permission Type";
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 1, 33);


                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 3].Text = "Mor";
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 3].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 3].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, fpbiomatric.Sheets[0].ColumnCount - 6, 1, 6);//Addedby srinath 29/4/2014

                            fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 3, 33);
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 2].Text = "Eve";
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, fpbiomatric.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].Columns[fpbiomatric.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 2, 33);
                        }
                    }
                    else
                    {
                        lbldate.Visible = true;
                        lbldate.Text = "Date Must Be Greater Than From Date";
                    }
                    string sqlname;
                    fpbiomatric.Sheets[0].ColumnCount = fpbiomatric.Sheets[0].ColumnCount + 1;
                    int percount = fpbiomatric.Sheets[0].ColumnCount;
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, percount - 1].Text = "Total Permission Count";
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, percount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, percount - 1, 2, 1);


                    FarPoint.Web.Spread.StyleInfo style = new FarPoint.Web.Spread.StyleInfo();
                    style.Font.Size = 10;
                    style.Font.Bold = true;
                    fpbiomatric.Sheets[0].SheetCornerStyle = new FarPoint.Web.Spread.StyleInfo(style);
                    fpbiomatric.Sheets[0].ColumnHeader.DefaultStyle = new FarPoint.Web.Spread.StyleInfo(style);
                    fpbiomatric.Sheets[0].AllowTableCorner = false;
                    //fpbiomatric.Sheets[0].SheetCorner.Cells[0, 0].Text = "  ";
                    //fpbiomatric.Sheets[0].SheetCorner.Cells[0, 0].Text = "S.No";
                    //fpbiomatric.Sheets[0].SheetCornerSpanModel.Add(0, 0, 6, 1);
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                    fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].Border.BorderColorRight = Color.White;
                    fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
                    string strrrr = "select isnull(collname, ' ') as collname,isnull(address1, ' ') as address1,isnull(address2,' ') as address2,isnull(address3, ' ') as address3,isnull(pincode,' ') as pincode from collinfo where college_code='" + ddlcollege.SelectedValue.ToString() + "'";
                    con.Close();
                    con.Open();
                    SqlCommand comm = new SqlCommand(strrrr, con);
                    SqlDataReader drr = comm.ExecuteReader();
                    drr.Read();
                    string coll_name = Convert.ToString(drr["collname"]);
                    string coll_address1 = Convert.ToString(drr["address1"]);
                    string coll_address2 = Convert.ToString(drr["address2"]);
                    string coll_address3 = Convert.ToString(drr["address3"]);
                    string pin_code = Convert.ToString(drr["pincode"]);
                    int count5 = 0;
                    int dacount = 2;
                    int coun6 = 0;
                    for (int l = 2; l <= cblsearch.Items.Count - 1; l++)
                    {
                        if (cblsearch.Items[l].Selected == true)
                        {
                            count5 = 3 + count5;
                            dacount = dacount + 2;
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, l].Text = "Staff Name";   //coll_name
                            fpbiomatric.Sheets[0].SetColumnWidth(fpbiomatric.Sheets[0].ColumnCount - 1, 100);
                            fpbiomatric.Sheets[0].SetColumnWidth(0, 100);
                            fpbiomatric.Sheets[0].ColumnHeader.Rows[0].Font.Bold = true;
                            fpbiomatric.Sheets[0].ColumnHeader.Rows[0].Font.Size = FontUnit.Medium;
                            string categry4 = "";
                            for (int g = 0; g < cblcategory.Items.Count; g++)
                            {
                                if (cblcategory.Items[g].Selected == true)
                                {
                                    categry4 = categry4 + cblcategory.Items[g].Text + ",";
                                }
                            }
                            if (categry4 != "")
                            {
                                categry4 = categry4.Substring(0, categry4.Length - 1);
                            }

                            string holiday5 = "select isnull(SUM((CAST(morning as int)+CAST(evening as int))),0) as holiday from holidaystaff ";
                            holiday5 = holiday5 + " where Holiday_Date Between '" + datefrom + "' and '" + dateto + "'";

                            SqlDataAdapter daholi = new SqlDataAdapter(holiday5, mycon1);
                            double holiday3 = 0;
                            mycon1.Close();
                            mycon1.Open();
                            DataSet dsholi = new DataSet();
                            daholi.Fill(dsholi);
                            if (dsholi.Tables[0].Rows.Count > 0)
                            {
                                holiday3 = Convert.ToDouble(dsholi.Tables[0].Rows[0]["holiday"].ToString());
                            }
                            double holidaycount = Convert.ToDouble(day3) - holiday3;



                            fpbiomatric.Sheets[0].ColumnHeader.Rows[0].BackColor = Color.FromArgb(214, 235, 255);
                            fpbiomatric.Sheets[0].ColumnHeader.Rows[1].BackColor = Color.FromArgb(214, 235, 255);
                            goto l10;
                        }
                        else
                        {
                            count5++;
                            if (count5 == 1)
                            {
                                dacount = dacount + 4;
                            }

                        }

                    }
                l10:
                    string catgorycode = "";
                    string deptcode = "";
                    string sqlstaffcode = "select  staffmaster.staff_code,staffmaster.fingerprint1,staffmaster.staff_name,desig_master.desig_acronym,CONVERT(VARCHAR(10),staffmaster.join_date,103) as join_date,in_out_time.category_name,hrdept_master.dept_acronym,desig_name ,hrdept_master.dept_acronym as 'Dept Acronym',hrdept_master.dept_name,stafftrans.category_code,stafftrans.dept_code,desig_master.priority,desig_master.print_pri ,hrdept_master.dept_name,stafftrans.stftype ,desig_master.priority,hrdept_master.priority,hrdept_master.dept_code from staffmaster,stafftrans,hrdept_master,desig_master,in_out_time";
                    sqlstaffcode = sqlstaffcode + " where (staffmaster.Fingerprint1 Is  Null or staffmaster.Fingerprint1 Is Not Null)";
                    sqlstaffcode = sqlstaffcode + " and staffmaster.staff_code=stafftrans.staff_code and staffmaster.settled <>1 and staffmaster.resign <>1 and  stafftrans.latestrec<>0 and ((staffmaster.settled =0 and staffmaster.resign=0) or (resign=1 and settled=1 and relieve_date >='' and relieve_date <=''))";

                    sqlstaffcode = sqlstaffcode + " and stafftrans.category_code=in_out_time.category_code and stafftrans.shift = in_out_time.shift and staffmaster.college_code = in_out_time.college_code and hrdept_master.dept_code=stafftrans.dept_code and staffmaster.college_code = hrdept_master.college_code and desig_master.desig_code=stafftrans.desig_code";

                    sqlstaffcode = sqlstaffcode + " and hrdept_master.dept_code=stafftrans.dept_code and staffmaster.college_code = desig_master.collegecode and staffmaster.college_code='" + ddlcollege.SelectedValue.ToString() + "'";
                    ///
                    sql = "SELECT distinct staffmaster.staff_code , desig_master.desig_acronym, hrdept_master.dept_acronym,CONVERT(VARCHAR(10),staffmaster.join_date,103) as join_date,in_out_time.category_name,staffmaster.staff_name ,desig_name ,hrdept_master.dept_acronym as 'Dept Acronym',hrdept_master.dept_name ,desig_acronym,CONVERT(VARCHAR(10),access_date,103)as 'Entry Date',CASE WHEN time_in = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_in ,100),7) END as time_in , CASE WHEN time_out = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_out ,100),7) END as time_out,convert(char(8),(cast(time_out as datetime) - cast(time_in as datetime)),108) as TotalHours, att, right(CONVERT(nvarchar(100),in_out_time.intime ,100),7) as ontime,right(CONVERT(nvarchar(100),gracetime ,100),7) as gracetime,  right(CONVERT(nvarchar(100),in_out_time.extend_gracetime ,100),7) as extendgracetime,desig_master.priority,desig_master.print_pri ,hrdept_master.dept_name,stafftrans.stftype ,desig_master.priority,hrdept_master.priority,len(staffmaster.staff_code),CAST(Fingerprint1 as nvarchar) as Fingerprint1 FROM staffmaster,stafftrans,hrdept_master, desig_master,bio_attendance,In_Out_Time,staff_attnd where  (staffmaster.Fingerprint1 Is  Null or staffmaster.Fingerprint1 Is Not Null) and hrdept_master.college_code=staffmaster.college_code and hrdept_master.dept_code=stafftrans.dept_code and staffmaster.staff_code=stafftrans.staff_code and staffmaster.settled <>1 and staffmaster.resign <>1 and  stafftrans.latestrec<>0 and   staffmaster.staff_code=bio_attendance.roll_no and is_staff=1 and hrdept_master.dept_code=stafftrans.dept_code and desig_master.desig_code=stafftrans.desig_code and staffmaster.settled = 0 And staffmaster.resign = 0  And (in_out_time.category_code=stafftrans.category_code or in_out_time.stftype=stafftrans.stftype) And staffmaster.staff_code = stafftrans.staff_code And stafftrans.latestrec = 1 and staffmaster.college_code=hrdept_master.college_code and staffmaster.college_code=desig_master.collegecode  and staffmaster.college_code=" + ddlcollege.SelectedValue.ToString() + "  " + strdate + " ";
                    sql = sql + " and (in_out_time.category_code=stafftrans.category_code or in_out_time.stftype=stafftrans.stftype)";

                    strdept = "";


                    if (tbseattype.Text != "---Select---")
                    {
                        int itemcount = 0;
                        for (itemcount = 0; itemcount < cbldepttype.Items.Count; itemcount++)
                        {
                            if (cbldepttype.Items[itemcount].Selected == true)
                            {
                                if (strdept == "")
                                {
                                    strdept = "'" + cbldepttype.Items[itemcount].Value.ToString() + "'";
                                    deptcode = cbldepttype.Items[itemcount].Value.ToString();
                                }
                                else
                                {
                                    deptcode = deptcode + "," + cbldepttype.Items[itemcount].Value.ToString();

                                    strdept = strdept + "," + cbldepttype.Items[itemcount].Value.ToString();
                                }
                            }
                        }
                        if (strdept != "")
                        {
                            //deptcode = strdept;
                            strdept = " in(" + strdept + ")";
                        }
                        sql = sql + " and hrdept_master.dept_code " + strdept + "";

                        sqlstaffcode = sqlstaffcode + "  and hrdept_master.dept_code " + strdept + "";
                    }
                    if (tbblood.Text != "---Select---")
                    {
                        int itemcount1 = 0;
                        for (itemcount1 = 0; itemcount1 < cblcategory.Items.Count; itemcount1++)
                        {
                            if (cblcategory.Items[itemcount1].Selected == true)
                            {
                                if (strcategory == "")
                                    strcategory = "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                                else
                                    strcategory = strcategory + "," + "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                            }
                        }
                        if (strcategory != "")
                        {
                            catgorycode = strcategory;
                            strcategory = " in (" + strcategory + ")";
                        }
                        sql = sql + "  and stafftrans.category_code" + strcategory + "";
                        sqlstaffcode = sqlstaffcode + "  and stafftrans.category_code" + strcategory + "";
                    }

                    if (cbostaffname.SelectedItem.Value.ToString() != "All")
                    {
                        //sql = sql + " and staffmaster.staff_code like '%" + cbostaffname.Text + "%' ";
                        //Modiifed By Srinath 22/10/2013
                        sql = sql + " and staffmaster.staff_name = '" + cbostaffname.SelectedItem.ToString() + "' ";
                        sqlstaffcode = sqlstaffcode + " and staffmaster.staff_name = '" + cbostaffname.SelectedItem.ToString() + "' ";//Added by saranya on 7/9/2018
                    }
                    if (cbostaffcode.SelectedItem.Value.ToString() != "All")
                    {
                        //sql = sql + " and staffmaster.staff_code like '%" + cbostaffcode.Text + "%' ";
                        sql = sql + " and staffmaster.staff_code ='" + cbostaffcode.Text + "' ";
                        sqlstaffcode = sqlstaffcode + " and staffmaster.staff_code ='" + cbostaffcode.Text + "' ";//Added by saranya on 7/9/2018
                    }
                    if (Chktimein.Checked == true)
                    {
                        strTime = "";
                        strTime = " and  CASE WHEN time_in = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_in ,100),7) END  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "'";

                    }
                    else if (Chktimeout.Checked == true)
                    {
                        strTime = "";
                        strTime = " AND  CASE WHEN time_out = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_out ,100),7) END between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";

                        // sql = sql + " " + strTime + "";
                    }

                    if ((Chktimein.Checked == true) && (Chktimeout.Checked == true))
                    {
                        strTime = "";

                        strTime = " and   CASE WHEN time_in = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_in ,100),7) END  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "' AND CASE WHEN time_out = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_out ,100),7) END between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";

                        //  sql = sql + " " + strTime + "";
                    }
                    if (strTime != null)
                    {
                        sql = sql + " " + strTime + "";
                    }
                    // Str = "";

                    sql = sql + " and bio_attendance.latestrec=1 and in_out_time.shift = stafftrans.shift " + desig_query + "";
                    sql = sql + desig_query;
                    sql = sql + Str;
                    //modified by srinath 05/04/2014
                    //  sql = sql + " and in_out_time.college_code = staffmaster.college_code " + " order by hrdept_master.dept_name";
                    if (ddlorder.SelectedItem.Text.ToString() == "Priority")
                    {
                        sql = sql + " and in_out_time.college_code = staffmaster.college_code " + " order by hrdept_master.priority,desig_master.priority,hrdept_master.dept_name,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code ";
                    }
                    else
                    {
                        sql = sql + " and in_out_time.college_code = staffmaster.college_code " + " order by hrdept_master.dept_name,staffmaster.staff_code";//Modified By srinath 28/03/2014
                    }
                    sql = sql.Replace('"', ' ');
                    sql.Remove(2);
                    sql.Remove(' ');

                    sqlstaffcode = sqlstaffcode + desig_query;
                    //modified by srinath 05/04/2014
                    // sqlstaffcode = sqlstaffcode + " order by hrdept_master.dept_name";
                    if (ddlorder.SelectedItem.Text.ToString() == "Priority")
                    {
                        sqlstaffcode = sqlstaffcode + " order by hrdept_master.priority,desig_master.priority,hrdept_master.dept_name,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code ";
                    }
                    else
                    {
                        sqlstaffcode = sqlstaffcode + " order by hrdept_master.dept_name,len(staffmaster.staff_code),staffmaster.staff_code";//Modified by srinath 28/03/2014
                    }

                    string strqueryattenadnce = "select staffmaster.staff_code,staff_attnd.* from staffmaster ,stafftrans ,staff_attnd,hrdept_master   where staffmaster.staff_code=stafftrans.staff_code and stafftrans.dept_code=hrdept_master.dept_code and hrdept_master.college_code=staffmaster.college_code and staffmaster.staff_code=staff_attnd.staff_code";
                    DataSet dsAtt = new DataSet();
                    dsAtt = dacces2.select_method_wo_parameter(strqueryattenadnce, "text");

                    SqlDataAdapter dastaffcode = new SqlDataAdapter(sqlstaffcode, mycon);
                    mycon.Close();
                    mycon.Open();
                    DataSet dsstaffcode = new DataSet();
                    dastaffcode.Fill(dsstaffcode);
                    SqlDataAdapter dabio = new SqlDataAdapter(sql, con1);
                    con1.Open();
                    dabio.Fill(d1);
                    string str2 = getfunction3(sql);
                    int colcount = 22;
                    string staffcode1 = "";
                    int hcount = d1.Tables[0].Rows.Count - 1;
                    int hhcount = dsstaffcode.Tables[0].Rows.Count - 1;
                    double count_manual_present = 0;

                    double count_maul_evepreasent = 0;

                    double count_manual_absent = 0;
                    double count_manual_eveabsent = 0;
                    int SNO8 = 0;
                    if (d1.Tables[0].Rows.Count <= 0 || d1.Tables[0].Rows.Count > 0)
                    {
                        counttotalmorpresent = 0;
                        counttotalevepresent = 0;
                        countmortotalabsent = 0;
                        countevetotalabsent = 0;
                        string PrevStaffcode = "";
                        Boolean Staffvis = false;
                        for (int h1 = 0; h1 <= hhcount; h1++)
                        {

                            sql = "";
                            // Str = "";
                            string category8 = "";
                            string timein8 = "";
                            string staffcode3 = staffcode1;

                            string categorycode = "";
                            string deptCode = string.Empty;//delsi1606
                            Staffvis = false;
                            //if ((staffcode3 != d1.Tables[0].Rows[h1]["staff_code"].ToString()) || (staffcode3 == ""))
                            //{
                            staffcode1 = dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString();

                            if (PrevStaffcode != staffcode1)
                            {
                                SNO8++;
                                sno++;
                                categorycode = dsstaffcode.Tables[0].Rows[h1]["category_code"].ToString();
                                deptCode = Convert.ToString(dsstaffcode.Tables[0].Rows[h1]["dept_code"]);

                                string wrkingday = "select isnull(SUM((CAST(morning as int)+CAST(evening as int))),0) as holiday from holidaystaff ";
                                wrkingday = wrkingday + " where category_code='" + categorycode + "' and dept_code='" + deptCode + "' ";

                                wrkingday = wrkingday + " AND Holiday_Date Between '" + datefrom + "' and '" + dateto + "'";

                                double totholiday = 0;
                                double holiday = 0;
                                string works = getfunction(wrkingday);
                                if (works != "")
                                {

                                    totholiday = Convert.ToDouble(works);
                                    if (totholiday != 0)
                                    {
                                        holiday = totholiday / 2;
                                    }
                                    else
                                    {
                                        holiday = 0;
                                    }
                                }
                                else
                                {
                                    holiday = 0;
                                    totholiday = 0;

                                }


                                double count_manual_permission = 0;
                                double count_manual_evepermission = 0;
                                double count_manual_evelate = 0;
                                double count_manual_late = 0, count_manul_evepresent = 0;

                                double count_bio_present = 0;
                                double count_bio_absent = 0;
                                double count_bio_permission = 0;
                                double count_bio_late = 0;

                                double count_bio_evepresent = 0;
                                double count_bio_eveabsent = 0;
                                double count_bio_eveper = 0;
                                double count_bio_evelate = 0;

                                double total_manul_presnt = 0;
                                double total_bio_present = 0;
                                double total_manual_absent = 0;
                                double total_bio_absent = 0;
                                double total_manualpermission = 0;
                                double total_biopermission = 0;

                                double total_manuallate = 0;
                                double total_biolate = 0;

                                double clmor = 0, cleve = 0, odmor = 0, odeve = 0, mlmor = 0, mleve = 0, othermor = 0, othereve = 0, cltotal = 0, mltotal = 0, odtotal = 0, othertotal = 0;


                                countpresent = 0;
                                int countotherpermission = 0;
                                //totpresent = 0;
                                //totabsent = 0;
                                counteveningpresent = 0;
                                countmorningabsent = 0;
                                counteveningabsent = 0;
                                countmorninglate = 0;
                                countmorningpermission = 0;
                                counteveninglate = 0;
                                counteveningpermission = 0;
                                countcolumn = fpbiomatric.Sheets[0].ColumnCount;

                                colcount = 25;

                                for (colcount = 25; colcount <= countcolumn - 2; colcount = colcount + 6)
                                {

                                    string datetagvalue;
                                    datetagvalue = fpbiomatric.Sheets[0].ColumnHeader.Cells[0, colcount].Tag.ToString();


                                    string[] splitdate = datetagvalue.Split('/');
                                    string accessdate = splitdate[1] + "/" + splitdate[0] + "/" + splitdate[2];
                                    splitdate[0] = splitdate[0].TrimStart('0');
                                    //string entrydate = d1.Tables[0].Rows[0]["entry date"].ToString();

                                    //string[] splitentry = entrydate.Split('/');
                                    //string entrydate1 = Convert.ToInt16(splitentry[0].ToString()) + "/" + splitentry[1].ToString() + "/" + splitentry[2].ToString();

                                    string monthyear = Convert.ToInt16(splitdate[0].ToString()) + "/" + splitdate[2];

                                    int dayatt = Convert.ToInt16(splitdate[1].ToString());

                                    //start 08july2013=====================================================================================
                                    if (cbo_att.Items[0].Selected == true)
                                    {
                                        if (rdomorning.Checked == true)
                                        {
                                            attmark_P = "  left([" + dayatt + "],2)='P-'";

                                        }
                                        else if (rdoevening.Checked == true)
                                        {

                                            attmark_P = "  right([" + dayatt + "],2)='-P'";

                                        }
                                        else if (rdoall.Checked == true)
                                        {
                                            attmark_P = "  [" + dayatt + "] like '%P%'";

                                        }
                                        else if (rdoboth.Checked == true)
                                        {
                                            attmark_P = "  [" + dayatt + "]='P-P'";
                                        }
                                    }

                                    if (cbo_att.Items[1].Selected == true)
                                    {
                                        if (rdomorning.Checked == true)
                                        {
                                            attmark_A = "  left([" + dayatt + "],2)='A-'";

                                        }
                                        else if (rdoevening.Checked == true)
                                        {
                                            attmark_A = "  right([" + dayatt + "],2)='-A'";
                                        }
                                        else if (rdoall.Checked == true)
                                        {

                                            attmark_A = "  [" + dayatt + "] like '%A%'";
                                        }
                                        else if (rdoboth.Checked == true)
                                        {
                                            attmark_A = "  [" + dayatt + "]='A-A'";

                                        }
                                    }

                                    if (cbo_att.Items[2].Selected == true)
                                    {
                                        if (rdomorning.Checked == true)
                                        {

                                            attmark_LA = "  left([" + dayatt + "],3)='LA-'";
                                        }
                                        else if (rdoevening.Checked == true)
                                        {


                                            attmark_LA = "  right([" + dayatt + "],3)='-LA'";
                                        }

                                        else if (rdoall.Checked == true)
                                        {
                                            attmark_LA = "  [" + dayatt + "] like '%LA%'";
                                        }

                                        else if (rdoboth.Checked == true)
                                        {
                                            attmark_LA = "  [" + dayatt + "]='LA-LA'";
                                        }
                                    }

                                    if (cbo_att.Items[3].Selected == true)
                                    {
                                        if (rdomorning.Checked == true)
                                        {
                                            attmark_PER = "  left([" + dayatt + "],4)='PER-'";

                                        }
                                        else if (rdoevening.Checked == true)
                                        {
                                            attmark_PER = "  right([" + dayatt + "],4)='-PER'";
                                        }
                                        else if (rdoall.Checked == true)
                                        {
                                            attmark_PER = "  [" + dayatt + "] like '%PER%'";
                                        }
                                        else if (rdoboth.Checked == true)
                                        {
                                            attmark_PER = "  [" + dayatt + "]='PER-PER'";
                                        }
                                    }
                                    ////sankar added july11'2013
                                    ////Start................................
                                    if (cbo_att.Items.Count != null)
                                    {
                                        int itemcount = 0;
                                        for (itemcount = 0; itemcount < cbo_att.Items.Count; itemcount++)
                                        {
                                            if (cbo_att.Items[itemcount].Selected == true)
                                            {
                                                if (rdomorning.Checked == true)
                                                {
                                                    if (datemark_Time == "")
                                                    {
                                                        if (rdoboth1.Checked == true)
                                                        {
                                                            datemark_Time = " [" + dayatt + "] like '" + cbo_att.Items[itemcount].Text.ToString() + "-" + "%'";
                                                        }
                                                        else
                                                        {
                                                            datemark_Time = "left([" + dayatt + "],4) = '" + cbo_att.Items[itemcount].Text.ToString() + "-" + "'";
                                                        }

                                                    }
                                                    else
                                                    {
                                                        if (rdoboth1.Checked == true)
                                                        {
                                                            datemark_Time = datemark_Time + "or " + " [" + dayatt + "] like '" + cbo_att.Items[itemcount].Text.ToString() + "-" + "%'";
                                                        }
                                                        else
                                                        {
                                                            datemark_Time = datemark_Time + "or " + "left([" + dayatt + "],4) = '" + cbo_att.Items[itemcount].Text.ToString() + "-" + "'";
                                                        }

                                                    }
                                                }
                                                else if (rdoevening.Checked == true)
                                                {
                                                    if (datemark_Time == "")
                                                    {
                                                        if (rdoboth1.Checked == true)
                                                        {
                                                            datemark_Time = " [" + dayatt + "] like '" + "%-" + cbo_att.Items[itemcount].Text.ToString() + "'";
                                                        }
                                                        else
                                                        {
                                                            datemark_Time = "  right([" + dayatt + "]) = '" + "%-" + cbo_att.Items[itemcount].Text.ToString() + "'";
                                                        }

                                                    }
                                                    else
                                                    {
                                                        if (rdoboth1.Checked == true)
                                                        {
                                                            datemark_Time = datemark_Time + "or " + " [" + dayatt + "] like '" + "%-" + cbo_att.Items[itemcount].Text.ToString() + "'";
                                                        }
                                                        else
                                                        {
                                                            datemark_Time = datemark_Time + "or " + "  right([" + dayatt + "])='" + "%-" + cbo_att.Items[itemcount].Text.ToString() + "'";
                                                        }

                                                    }
                                                }
                                                else if (rdoall.Checked == true)
                                                {
                                                    if (datemark_Time == "")
                                                    {
                                                        //attmark_CL = "  att like '%CL%'";
                                                        datemark_Time = " [" + dayatt + "] like '%" + cbo_att.Items[itemcount].Text.ToString() + "%'";
                                                    }
                                                    else
                                                    {
                                                        datemark_Time = datemark_Time + "or " + " [" + dayatt + "] like '%" + cbo_att.Items[itemcount].Text.ToString() + "%'";
                                                    }
                                                }
                                                else if (rdoboth.Checked == true)
                                                {
                                                    if (datemark_Time == "")
                                                    {
                                                        datemark_Time = " [" + dayatt + "] = '" + cbo_att.Items[itemcount].Text.ToString() + "-" + cbo_att.Items[itemcount].Text.ToString() + "'";
                                                    }
                                                    else
                                                    {
                                                        datemark_Time = datemark_Time + "or " + " [" + dayatt + "] = '" + cbo_att.Items[itemcount].Text.ToString() + "-" + cbo_att.Items[itemcount].Text.ToString() + "'";
                                                    }
                                                }
                                            }
                                        }
                                    }

                                    //if (cbo_att.Items[4].Selected == true)
                                    //{
                                    //    if (rdomorning.Checked == true)
                                    //    {
                                    //        attmark_CL = "  left([" + dayatt + "],4)='CL-'";

                                    //    }
                                    //    else if (rdoevening.Checked == true)
                                    //    {
                                    //        attmark_CL = "  right([" + dayatt + "],4)='-CL'";
                                    //    }
                                    //    else if (rdoall.Checked == true)
                                    //    {
                                    //        attmark_CL = "  [" + dayatt + "] like '%CL%'";
                                    //    }
                                    //    else if (rdoboth.Checked == true)
                                    //    {
                                    //        attmark_CL = "  [" + dayatt + "]='CL-CL'";
                                    //    }
                                    //}
                                    //if (cbo_att.Items[5].Selected == true)
                                    //{
                                    //    if (rdomorning.Checked == true)
                                    //    {
                                    //        attmark_EL = "  left([" + dayatt + "],4)='EL-'";

                                    //    }
                                    //    else if (rdoevening.Checked == true)
                                    //    {
                                    //        attmark_EL = "  right([" + dayatt + "],4)='-EL'";
                                    //    }
                                    //    else if (rdoall.Checked == true)
                                    //    {
                                    //        attmark_EL = "  [" + dayatt + "] like '%EL%'";
                                    //    }
                                    //    else if (rdoboth.Checked == true)
                                    //    {
                                    //        attmark_EL = "  [" + dayatt + "]='EL-EL'";
                                    //    }
                                    //}
                                    //if (cbo_att.Items[6].Selected == true)
                                    //{
                                    //    if (rdomorning.Checked == true)
                                    //    {
                                    //        attmark_ML = "  left([" + dayatt + "],4)='ML-'";

                                    //    }
                                    //    else if (rdoevening.Checked == true)
                                    //    {
                                    //        attmark_ML = "  right([" + dayatt + "],4)='-ML'";
                                    //    }
                                    //    else if (rdoall.Checked == true)
                                    //    {
                                    //        attmark_ML = "  [" + dayatt + "] like '%ML%'";
                                    //    }
                                    //    else if (rdoboth.Checked == true)
                                    //    {
                                    //        attmark_ML = "  [" + dayatt + "]='ML-ML'";
                                    //    }
                                    //}
                                    //if (cbo_att.Items[7].Selected == true)
                                    //{
                                    //    if (rdomorning.Checked == true)
                                    //    {
                                    //        attmark_OD = "  left([" + dayatt + "],4)='OD-'";

                                    //    }
                                    //    else if (rdoevening.Checked == true)
                                    //    {
                                    //        attmark_OD = "  right([" + dayatt + "],4)='-OD'";
                                    //    }
                                    //    else if (rdoall.Checked == true)
                                    //    {
                                    //        attmark_OD = "  [" + dayatt + "] like '%OD%'";
                                    //    }
                                    //    else if (rdoboth.Checked == true)
                                    //    {
                                    //        attmark_OD = "  [" + dayatt + "]='OD-OD'";
                                    //    }
                                    //}
                                    //if (cbo_att.Items[8].Selected == true)
                                    //{
                                    //    if (rdomorning.Checked == true)
                                    //    {
                                    //        attmark_LOP = "  left([" + dayatt + "],4)='LOP-'";

                                    //    }
                                    //    else if (rdoevening.Checked == true)
                                    //    {
                                    //        attmark_LOP = "  right([" + dayatt + "],4)='-LOP'";
                                    //    }
                                    //    else if (rdoall.Checked == true)
                                    //    {
                                    //        attmark_LOP = "  [" + dayatt + "] like '%LOP%'";
                                    //    }
                                    //    else if (rdoboth.Checked == true)
                                    //    {
                                    //        attmark_LOP = "  [" + dayatt + "]='LOP-LOP'";
                                    //    }
                                    //}
                                    //if (cbo_att.Items[9].Selected == true)
                                    //{
                                    //    if (rdomorning.Checked == true)
                                    //    {
                                    //        attmark_MAT = "  left([" + dayatt + "],4)='MAT-'";

                                    //    }
                                    //    else if (rdoevening.Checked == true)
                                    //    {
                                    //        attmark_MAT = "  right([" + dayatt + "],4)='-MAT'";
                                    //    }
                                    //    else if (rdoall.Checked == true)
                                    //    {
                                    //        attmark_MAT = "  [" + dayatt + "] like '%MAT%'";
                                    //    }
                                    //    else if (rdoboth.Checked == true)
                                    //    {
                                    //        attmark_MAT = "  [" + dayatt + "]='MAT-MAT'";
                                    //    }
                                    //}
                                    //if (cbo_att.Items[10].Selected == true)
                                    //{
                                    //    if (rdomorning.Checked == true)
                                    //    {
                                    //        attmark_CH = "  left([" + dayatt + "],4)='CH-'";

                                    //    }
                                    //    else if (rdoevening.Checked == true)
                                    //    {
                                    //        attmark_CH = "  right([" + dayatt + "],4)='-CH'";
                                    //    }
                                    //    else if (rdoall.Checked == true)
                                    //    {
                                    //        attmark_CH = "  [" + dayatt + "] like '%CH%'";
                                    //    }
                                    //    else if (rdoboth.Checked == true)
                                    //    {
                                    //        attmark_CH = "  [" + dayatt + "]='CH-CH'";
                                    //    }
                                    //}
                                    //if (cbo_att.Items[10].Selected == true)
                                    //{
                                    //    if (rdomorning.Checked == true)
                                    //    {
                                    //        attmark_POD = "  left([" + dayatt + "],4)='POD-'";

                                    //    }
                                    //    else if (rdoevening.Checked == true)
                                    //    {
                                    //        attmark_POD = "  right([" + dayatt + "],4)='-POD'";
                                    //    }
                                    //    else if (rdoall.Checked == true)
                                    //    {
                                    //        attmark_POD = "  [" + dayatt + "] like '%POD%'";
                                    //    }
                                    //    else if (rdoboth.Checked == true)
                                    //    {
                                    //        attmark_POD = "  [" + dayatt + "]='POD-POD'";
                                    //    }
                                    //}
                                    //if (cbo_att.Items[11].Selected == true)
                                    //{
                                    //    if (rdomorning.Checked == true)
                                    //    {
                                    //        attmark_OOD = "  left([" + dayatt + "],4)='OOD-'";

                                    //    }
                                    //    else if (rdoevening.Checked == true)
                                    //    {
                                    //        attmark_OOD = "  right([" + dayatt + "],4)='-OOD'";
                                    //    }
                                    //    else if (rdoall.Checked == true)
                                    //    {
                                    //        attmark_OOD = "  [" + dayatt + "] like '%OOD%'";
                                    //    }
                                    //    else if (rdoboth.Checked == true)
                                    //    {
                                    //        attmark_OOD = "  [" + dayatt + "]='OOD-OOD'";
                                    //    }
                                    //}
                                    //if (cbo_att.Items[12].Selected == true)
                                    //{
                                    //    if (rdomorning.Checked == true)
                                    //    {
                                    //        attmark_VL = "  left([" + dayatt + "],4)='VL-'";

                                    //    }
                                    //    else if (rdoevening.Checked == true)
                                    //    {
                                    //        attmark_VL = "  right([" + dayatt + "],4)='-VL'";
                                    //    }
                                    //    else if (rdoall.Checked == true)
                                    //    {
                                    //        attmark_VL = "  [" + dayatt + "] like '%VL%'";
                                    //    }
                                    //    else if (rdoboth.Checked == true)
                                    //    {
                                    //        attmark_VL = "  [" + dayatt + "]='VL-VL'";
                                    //    }
                                    //}
                                    //if (cbo_att.Items[13].Selected == true)
                                    //{
                                    //    if (rdomorning.Checked == true)
                                    //    {
                                    //        attmark_SOD = "  left([" + dayatt + "],4)='SOD-'";

                                    //    }
                                    //    else if (rdoevening.Checked == true)
                                    //    {
                                    //        attmark_SOD = "  right([" + dayatt + "],4)='-SOD'";
                                    //    }
                                    //    else if (rdoall.Checked == true)
                                    //    {
                                    //        attmark_SOD = "  [" + dayatt + "] like '%SOD%'";
                                    //    }
                                    //    else if (rdoboth.Checked == true)
                                    //    {
                                    //        attmark_SOD = "  [" + dayatt + "]='SOD-SOD'";
                                    //    }
                                    //}
                                    //if (cbo_att.Items[14].Selected == true)
                                    //{
                                    //    if (rdomorning.Checked == true)
                                    //    {
                                    //        attmark_VEL = "  left([" + dayatt + "],4)='VEL-'";

                                    //    }
                                    //    else if (rdoevening.Checked == true)
                                    //    {
                                    //        attmark_VEL = "  right([" + dayatt + "],4)='-VEL'";
                                    //    }
                                    //    else if (rdoall.Checked == true)
                                    //    {
                                    //        attmark_VEL = "  [" + dayatt + "] like '%VEL%'";
                                    //    }
                                    //    else if (rdoboth.Checked == true)
                                    //    {
                                    //        attmark_VEL = "  [" + dayatt + "]='VEL-VEL'";
                                    //    }
                                    //}
                                    //if (cbo_att.Items[15].Selected == true)
                                    //{
                                    //    if (rdomorning.Checked == true)
                                    //    {
                                    //        attmark_R = "  left([" + dayatt + "],4)='R-'";

                                    //    }
                                    //    else if (rdoevening.Checked == true)
                                    //    {
                                    //        attmark_R = "  right([" + dayatt + "],4)='-R'";
                                    //    }
                                    //    else if (rdoall.Checked == true)
                                    //    {
                                    //        attmark_R = "  [" + dayatt + "] like '%R%'";
                                    //    }
                                    //    else if (rdoboth.Checked == true)
                                    //    {
                                    //        attmark_R = "  [" + dayatt + "]='R-R'";
                                    //    }
                                    //}


                                    //End....................................
                                    Str_1 = "";
                                    if (attmark_P.Trim().ToString() != "")
                                    {
                                        Str_1 = Str_1 + attmark_P;
                                    }
                                    if (attmark_A.Trim().ToString() != "")
                                    {
                                        if (Str_1.Trim().ToString() != "")
                                        {
                                            Str_1 = Str_1 + " or " + attmark_A;
                                        }
                                        else
                                        {
                                            Str_1 = Str_1 + attmark_A;
                                        }
                                    }
                                    if (attmark_LA.Trim().ToString() != "")
                                    {
                                        if (Str_1.Trim().ToString() != "")
                                        {
                                            Str_1 = Str_1 + " or " + attmark_LA;
                                        }
                                        else
                                        {
                                            Str_1 = Str_1 + attmark_LA;
                                        }
                                    }
                                    if (attmark_PER.Trim().ToString() != "")
                                    {
                                        if (Str_1.Trim().ToString() != "")
                                        {
                                            Str_1 = Str_1 + " or " + attmark_PER;
                                        }
                                        else
                                        {
                                            Str_1 = Str_1 + attmark_PER;
                                        }
                                    }
                                    if (datemark_Time.Trim().ToString() != "")
                                    {
                                        Str_1 = " and (" + datemark_Time + ")";
                                    }
                                    //string att_check = getfuctionatt("select [" + dayatt + "] from staff_attnd where staff_code='" + dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString() + "' and mon_year='" + monthyear + "'");
                                    string att_check = getfuctionatt("select * from staff_attnd where staff_code='" + dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString() + "' and mon_year='" + monthyear + "' " + Str_1 + " ");
                                    if (att_check.Trim().ToString() != "")
                                    {
                                        //=====================================================================================================                               

                                        string timein3 = "";
                                        string gracetime3 = "";
                                        string extendgracetime = "";
                                        if (d1.Tables[0].Rows.Count > 0)
                                        {
                                            category8 = d1.Tables[0].Rows[h]["category_name"].ToString();
                                            timein8 = d1.Tables[0].Rows[h]["time_in"].ToString();
                                            timein3 = d1.Tables[0].Rows[h]["ontime"].ToString();

                                            gracetime3 = d1.Tables[0].Rows[h]["gracetime"].ToString();
                                            extendgracetime = d1.Tables[0].Rows[h]["extendgracetime"].ToString();
                                        }

                                        //fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(6, colcount, 1, 5);
                                        fpbiomatric.ActiveSheetView.Columns[colcount].Font.Size = FontUnit.Medium;
                                        fpbiomatric.ActiveSheetView.Columns[colcount].Font.Name = "Book Antiqua";
                                        fpbiomatric.ActiveSheetView.Columns[colcount + 1].Font.Size = FontUnit.Medium;
                                        fpbiomatric.ActiveSheetView.Columns[colcount + 1].Font.Name = "Book Antiqua";
                                        fpbiomatric.ActiveSheetView.Columns[colcount + 2].Font.Size = FontUnit.Medium;
                                        fpbiomatric.ActiveSheetView.Columns[colcount + 2].Font.Name = "Book Antiqua";




                                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount].Text = "In";
                                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount].HorizontalAlign = HorizontalAlign.Center;
                                        fpbiomatric.Sheets[0].SetColumnWidth(colcount, 60);
                                        fpbiomatric.Sheets[0].Columns[colcount].HorizontalAlign = HorizontalAlign.Center;
                                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount + 1].Text = "Out";
                                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount + 1].HorizontalAlign = HorizontalAlign.Center;
                                        fpbiomatric.Sheets[0].SetColumnWidth(colcount + 1, 60);
                                        fpbiomatric.Sheets[0].Columns[colcount + 1].HorizontalAlign = HorizontalAlign.Center;
                                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount + 2].Text = "Tot";
                                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, colcount + 2].HorizontalAlign = HorizontalAlign.Center;
                                        fpbiomatric.Sheets[0].SetColumnWidth(colcount + 2, 60);
                                        fpbiomatric.Sheets[0].Columns[colcount + 2].HorizontalAlign = HorizontalAlign.Center;

                                        fpbiomatric.ActiveSheetView.Columns[colcount + 3].Font.Size = FontUnit.Medium;
                                        fpbiomatric.ActiveSheetView.Columns[colcount + 3].Font.Name = "Book Antiqua";
                                        fpbiomatric.ActiveSheetView.Columns[colcount + 4].Font.Size = FontUnit.Medium;
                                        fpbiomatric.ActiveSheetView.Columns[colcount + 4].Font.Name = "Book Antiqua";


                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;


                                        strdate = " and bio_attendance.access_date='" + datetagvalue + "'";




                                        if (cbo_att.Items[0].Selected == true)
                                        {
                                            if (rdomorning.Checked == true)
                                            {
                                                //Str = " and left(att,2)='P-'";
                                                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;


                                            }
                                            else if (rdoevening.Checked == true)
                                            {
                                                // Str = " and right(att,2)='-P'";
                                                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                                            }
                                            else if (rdoall.Checked == true)
                                            {
                                                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                fpbiomatric.Sheets[0].Columns[9].Visible = true;
                                                fpbiomatric.Sheets[0].Columns[10].Visible = true;
                                                // Str = " and att like '%P%'";
                                            }
                                            else if (rdoboth.Checked == true)
                                            {
                                                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                                fpbiomatric.Sheets[0].Columns[9].Visible = true;
                                                fpbiomatric.Sheets[0].Columns[10].Visible = true;
                                                // Str = " and att='P-P'";

                                            }
                                        }
                                        if (cbo_att.Items[1].Selected == true)
                                        {
                                            if (rdomorning.Checked == true)
                                            {
                                                //Str = " and left(att,2)='A-'";
                                                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;

                                            }
                                            else if (rdoevening.Checked == true)
                                            {
                                                //Str = " and right(att,2)='-A'";
                                                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                                            }
                                            else if (rdoall.Checked == true)
                                            {
                                                //Str = " and att like '%A%'";
                                                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;

                                            }
                                            else if (rdoboth.Checked == true)
                                            {
                                                //Str = " and att='A-A'";

                                                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                            }
                                        }
                                        if (cbo_att.Items[2].Selected == true)
                                        {
                                            if (rdomorning.Checked == true)
                                            {
                                                // Str = " and left(att,3)='LA-'";
                                                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                            }
                                            else if (rdoevening.Checked == true)
                                            {
                                                //Str = " and right(att,3)='-LA'";
                                                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                            }

                                            else if (rdoall.Checked == true)
                                            {
                                                //Str = " and att like '%LA%'";
                                                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                            }

                                            else if (rdoboth.Checked == true)
                                            {
                                                //Str = " and att='LA-LA'";

                                                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                            }
                                        }
                                        if (cbo_att.Items[3].Selected == true)
                                        {
                                            if (rdomorning.Checked == true)
                                            {
                                                //Str = " and left(att,4)='PER-'";
                                                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;


                                            }
                                            else if (rdoevening.Checked == true)
                                            {
                                                //Str = " and right(att,4)='-PER'";
                                                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                            }
                                            else if (rdoall.Checked == true)
                                            {
                                                //Str = " and att like '%PER%'";

                                                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;

                                            }
                                            else if (rdoboth.Checked == true)
                                            {
                                                //Str = " and att='PER-PER'";

                                                fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                                fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                            }
                                        }




                                        if (Chktimein.Checked == true)
                                        {
                                            strTime = "";
                                            strTime = " and CASE WHEN time_in = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_in ,100),7) END between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "'";

                                        }
                                        else if (Chktimeout.Checked == true)
                                        {
                                            strTime = "";
                                            strTime = " AND CASE WHEN time_out = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_out ,100),7) END between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";

                                            // sql = sql + " " + strTime + "";
                                        }

                                        if ((Chktimein.Checked == true) && (Chktimeout.Checked == true))
                                        {
                                            strTime = "";

                                            strTime = " and  CASE WHEN time_in = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_in ,100),7) END  between '" + cbo_hrtin.Text + ":" + cbo_mintimein.Text + cbo_in.Text + "'  and '" + cbo_hrinto.Text + ":" + cbo_mininto.Text + cbointo.Text + "' AND  CASE WHEN time_out = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_out ,100),7) END between '" + cbo_hours.Text + ":" + cbo_min.Text + cbo_sec.Text + "'  and '" + cbo_hour2.SelectedItem.Value.ToString() + ":" + cbo_min2.SelectedItem.Value.ToString() + cbo_sec2.Text + " '";

                                            //  sql = sql + " " + strTime + "";
                                        }
                                        if (strTime != null)
                                        {
                                            sql = sql + " " + strTime + "";
                                        }

                                        //  sql = sql + " order by hrdept_master.dept_name ";


                                        con.Close();
                                        con.Open();

                                        int row = 0;
                                        Boolean rowvis = false;
                                        fpbiomatric.Width = 1000;
                                        lblnorec.Visible = false;

                                        int datval = 0;
                                        int rowcnt = 0;
                                        int rowstr = 0;
                                        Boolean rowvi = false;
                                        int countlateforstaff = 0;



                                        string category = "";
                                        string timein = "";
                                        string gracetime = "";

                                        if (gracetimeflag == true)
                                        {
                                            if ((Convert.ToDateTime(timein8) <= Convert.ToDateTime(gracetime3)) && (Convert.ToDateTime(timein8) > Convert.ToDateTime(timein3)))
                                            {
                                                goto lbl1;
                                            }
                                            else
                                            {

                                            }


                                        }
                                        else if (ontimeflag == true)
                                        {
                                            if (Convert.ToDateTime(timein8) <= Convert.ToDateTime(timein3))
                                            {

                                                goto lbl1;

                                            }
                                            else
                                            {

                                            }


                                        }
                                        else if (Generalflag == false)
                                        {
                                            goto lbl1;
                                        }
                                        else
                                        {
                                            goto lbl1;
                                        }
                                    lbl1:
                                        if (tempstaffcode == "")
                                        {
                                            countpresent = 0;
                                            counteveningpresent = 0;
                                            countmorningabsent = 0;
                                            countmorningpermission = 0;
                                            counteveninglate = 0;
                                            counteveningpermission = 0;
                                            counteveningabsent = 0;
                                            countmorninglate = 0;
                                            countpermission = 0;
                                            count_manual_present = 0;
                                            count_manual_absent = 0;
                                            count_manual_permission = 0;
                                            count_maul_evepreasent = 0;
                                            count_manual_eveabsent = 0;
                                            count_manual_late = 0;


                                            //category = d1.Tables[0].Rows[h]["category_name"].ToString();


                                            //Added By SRinath 26/4/2014=========Start====
                                            if (strtempdept != dsstaffcode.Tables[0].Rows[h1]["dept_name"].ToString())
                                            {
                                                strtempdept = dsstaffcode.Tables[0].Rows[h1]["dept_name"].ToString();
                                                fpbiomatric.Sheets[0].RowCount += 1;
                                                row++;
                                                rowvi = true;
                                                int col = 0;
                                                if (cblsearch.Items[0].Selected == false)
                                                {
                                                    col = 0;
                                                }
                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Text = strtempdept;
                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Font.Bold = true;
                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].HorizontalAlign = HorizontalAlign.Center;
                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].VerticalAlign = VerticalAlign.Middle;
                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].BackColor = Color.LightYellow;
                                                fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, col, 1, fpbiomatric.Sheets[0].ColumnCount);
                                            }
                                            //=======================End===================
                                            fpbiomatric.Sheets[0].RowCount++;

                                            //tempstaffcode = drcount14["staff_code"].ToString();
                                            tempstaffcode = dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString();
                                        }

                                       // else if ((tempstaffcode != "") && (tempstaffcode != drcount14["staff_code"].ToString()))
                                        else if ((tempstaffcode != "") && (tempstaffcode != dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString()))
                                        {

                                            countpresent = 0;
                                            counteveningpresent = 0;
                                            countmorningabsent = 0;
                                            countpermission = 0;
                                            countmorningpermission = 0;
                                            counteveninglate = 0;
                                            counteveningpermission = 0;
                                            counteveningabsent = 0;
                                            countmorninglate = 0;

                                            c = 0;
                                            d = 0;
                                            g = 0;
                                            f = 0;
                                            percentage = 0;
                                            countmorningabsent = 0;
                                            countlateforstaff = 0;
                                            counteveningabsent = 0;
                                            countmorninglate = 0;
                                            counteveninglate = 0;
                                            countmorningpermission = 0;
                                            counteveningpermission = 0;


                                            //Added By SRinath 26/4/2014=========Start====
                                            if (strtempdept != dsstaffcode.Tables[0].Rows[h1]["dept_name"].ToString())
                                            {
                                                rowvi = true;
                                                strtempdept = dsstaffcode.Tables[0].Rows[h1]["dept_name"].ToString();
                                                fpbiomatric.Sheets[0].RowCount += 1;
                                                int col = 0;
                                                row++;
                                                if (cblsearch.Items[0].Selected == false)
                                                {
                                                    col = 0;
                                                }
                                                //sno123++;
                                                //sno123 = fpbiomatric.Sheets[0].RowCount;
                                                //sno123 = sno123 + 1;
                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Text = strtempdept;
                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].Font.Bold = true;
                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].HorizontalAlign = HorizontalAlign.Center;
                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].VerticalAlign = VerticalAlign.Middle;
                                                fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, col].BackColor = Color.LightYellow;
                                                fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, col, 1, fpbiomatric.Sheets[0].ColumnCount);
                                            }
                                            //=======================End===================
                                            fpbiomatric.Sheets[0].RowCount++;
                                            tempstaffcode = dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString();
                                        }


                                        Buttontotal.Visible = false;
                                        DropDownListpage.Visible = false;
                                        TextBoxpage.Visible = false;
                                        lblrecord.Visible = false;
                                        lblrecord.Visible = false;
                                        lblpage.Visible = false;
                                        Imgeveper.Visible = true;
                                        Lblgracetime.Visible = true;
                                        btnontime.Visible = true;
                                        lblontime.Visible = true;

                                        Imgmorper.Visible = true;
                                        Imglate.Visible = true;
                                        late.Visible = true;
                                        Imgood.Visible = true;
                                        // btpresent.Visible = false;
                                        btnmorabsent.Visible = true;
                                        btneveabsent.Visible = true;
                                        btnevepresent.Visible = true;
                                        btnmorabsent.Visible = true;
                                        lblmorpresent.Visible = true;
                                        lblevepresent.Visible = true;
                                        lblevepresent.Visible = true;
                                        lbleveabsent.Visible = true;
                                        lblmorabsent.Visible = true;
                                        btnmorpresent.Visible = true;
                                        //lbldate.Visible = true;  //Modified by Manikandan 09/05/2013
                                        lblevngpermission.Visible = true;
                                        lblood.Visible = true;
                                        lblpermission.Visible = true;
                                        btngracetime.Visible = true;
                                        rowstr = Convert.ToInt32(fpbiomatric.Sheets[0].RowCount);
                                        fpbiomatric.Visible = true;
                                        btnprintmaster.Visible = true;
                                        string staffcode = "";
                                        string staffname = "";
                                        string dept = "";
                                        string design = "";
                                        string dept_acronym = "";
                                        string desig_acronym = "";
                                        // string category3 = "";

                                        string doj = "";
                                        string intime = "";
                                        string outtime = "";
                                        string Totalhours = "";
                                        string pertype = "";


                                        string sql5 = "select att,roll_no, CASE WHEN time_in = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_in ,100),7) END as time_in, CASE WHEN time_out = '1900-01-01 00:00:00.000' THEN '' ELSE right(CONVERT(nvarchar(100),time_out ,100),7) END as time_out,convert(char(8),(cast(time_out as datetime) - cast(time_in as datetime)),108) as TotalHours,isnull(per_type,'0')per_type from bio_attendance where roll_no='" + staffcode1 + "' " + strdate + " and is_staff=1 and latestrec=1 " + Str + "";


                                        SqlDataAdapter dabio3 = new SqlDataAdapter(sql5, mycon1);
                                        mycon1.Close();
                                        mycon1.Open();
                                        DataSet dsbio = new DataSet();
                                        dabio3.Fill(dsbio);

                                        if (dsbio.Tables[0].Rows.Count > 0)
                                        {
                                            Staffvis = true;
                                            fpbiomatric.Sheets[0].SetColumnWidth(3, 250);
                                            // category3 = dsstaffcode.Tables[0].Rows[h1]["category"].ToString();
                                            staffcode = dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString();
                                            staffname = dsstaffcode.Tables[0].Rows[h1]["staff_name"].ToString();
                                            dept_acronym = dsstaffcode.Tables[0].Rows[h1]["dept_acronym"].ToString();
                                            desig_acronym = dsstaffcode.Tables[0].Rows[h1]["desig_acronym"].ToString();
                                            dept = dsstaffcode.Tables[0].Rows[h1]["dept_name"].ToString();
                                            design = dsstaffcode.Tables[0].Rows[h1]["desig_name"].ToString();

                                            doj = dsstaffcode.Tables[0].Rows[h1]["join_date"].ToString();
                                            intime = dsbio.Tables[0].Rows[0]["time_in"].ToString();
                                            outtime = dsbio.Tables[0].Rows[0]["time_out"].ToString();
                                            pertype = dsbio.Tables[0].Rows[0]["per_type"].ToString();

                                            if (intime != "" && outtime != "")//Saranyadevi 16.4.2018
                                            {
                                                Totalhours = dsbio.Tables[0].Rows[0]["TotalHours"].ToString();
                                            }
                                            else
                                            {
                                                Totalhours = "";
                                            }

                                            //Totalhours = d1.Tables[0].Rows[h]["TotalHours"].ToString();
                                            string fingerprint = dsstaffcode.Tables[0].Rows[h1]["fingerprint1"].ToString();


                                            string sqldaily = "select * from Attn_Logs where  FingerID='" + fingerprint + "' and Log_Date='" + datetagvalue + "'";
                                            SqlDataAdapter dadaily = new SqlDataAdapter(sqldaily, mycon1);
                                            mycon1.Close();
                                            mycon1.Open();
                                            DataSet dsdaily = new DataSet();
                                            dadaily.Fill(dsdaily);
                                            if (dsdaily.Tables[0].Rows.Count > 1)
                                            {
                                                string lunch_strat_time = getlunchtime(" select right(CONVERT(nvarchar(100),lunch_st_time ,100),7) as lunch from in_out_time where category_name='" + category8 + "'");
                                                string lunch_end_time = getlunchtime(" select right(CONVERT(nvarchar(100),lunch_end_time ,100),7) as lunch from in_out_time where category_name='" + category8 + "'");
                                                for (int daily = 0; daily < dsdaily.Tables[0].Rows.Count - 1; daily++)
                                                {
                                                    string daily_out_time = dsdaily.Tables[0].Rows[daily]["outtime"].ToString();
                                                    if (daily_out_time != "")
                                                    {

                                                        if ((Convert.ToDateTime(daily_out_time) >= Convert.ToDateTime(lunch_strat_time)) && (Convert.ToDateTime(daily_out_time) <= Convert.ToDateTime(lunch_end_time)))
                                                        {

                                                        }
                                                        else
                                                        {
                                                            countotherpermission++;
                                                        }
                                                    }
                                                }
                                                // fpbiomatric.Sheets[0].FrozenColumnCount = 3;
                                            }

                                            //sno123++;


                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text = SNO8.ToString();
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 1].Text = staffcode;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 2].Text = staffname;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 3].Text = dept;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 4].Text = dept_acronym;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 5].Text = design;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 6].Text = desig_acronym;

                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 7].Text = doj;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 8].Text = category;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].CellType = textcell;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].Text = fingerprint;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 23].Text = countotherpermission.ToString();

                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 23].HorizontalAlign = HorizontalAlign.Center;

                                            string mrng = "";
                                            string evng = "";
                                            //  string[] tmpdate = drcount14["att"].ToString().Split(new char[] { '-' });
                                            //Added by srinath 28/4/2014
                                            string att = dsbio.Tables[0].Rows[0]["att"].ToString();
                                            if (att != "")
                                            {
                                                string[] tmpdate = att.Split(new char[] { '-' });
                                                if (tmpdate[0].Trim().ToLower() == "a" || tmpdate[1].Trim().ToLower() == "a")
                                                {
                                                    string att1 = getfuctionatt("select [" + dayatt + "] from staff_attnd where staff_code='" + dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString() + "' and mon_year='" + monthyear + "' " + Str_1 + "");
                                                    if (att1.Trim() != "" && att1 != null)
                                                    {
                                                        tmpdate = att1.Split(new char[] { '-' });
                                                        mrng = tmpdate[0].ToString();
                                                        evng = tmpdate[1].ToString();
                                                    }
                                                }
                                                else
                                                {
                                                    mrng = tmpdate[0].ToString();
                                                    evng = tmpdate[1].ToString();
                                                }
                                            }
                                            if (!String.IsNullOrEmpty(intime) && !String.IsNullOrEmpty(timein3) && !String.IsNullOrEmpty(gracetime3) && !String.IsNullOrEmpty(extendgracetime))
                                            {
                                                if (Convert.ToDateTime(intime) <= Convert.ToDateTime(timein3))
                                                {
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                    // countintime = countintime + 1;

                                                }
                                                if ((Convert.ToDateTime(intime) <= Convert.ToDateTime(gracetime3)) && (Convert.ToDateTime(intime) > Convert.ToDateTime(timein3)))
                                                {
                                                    //  countgracetime = countgracetime + 1;

                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.Pink;
                                                }

                                                if ((Convert.ToDateTime(intime) > Convert.ToDateTime(gracetime3)))
                                                {
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                }
                                                else if ((Convert.ToDateTime(intime) <= Convert.ToDateTime(extendgracetime)) && (Convert.ToDateTime(intime) > Convert.ToDateTime(gracetime3)))
                                                {
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                }
                                            }
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                                            if (Totalhours != "")
                                            {
                                                string totalhours4;
                                                string[] split28 = Totalhours.Split(new Char[] { ':' });
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 2].Text = Convert.ToString(split28[0]) + ":" + split28[1].ToString();

                                            }
                                            else
                                            {
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 2].Text = Totalhours;
                                            }

                                            int setcount = 0;
                                            setcount = colcount;

                                            if (mrng == "P")
                                            {
                                                countpresent++;
                                                count_bio_present++;
                                                counttotalmorpresent++;
                                                counttotalmorpresent = counttotalmorpresent + 1;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Green;
                                            }

                                            if (evng == "P")
                                            {
                                                counteveningpresent++;
                                                count_bio_evepresent++;
                                                counttotalevepresent++;
                                                counttotalevepresent = counttotalevepresent + 1;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Green;
                                            }

                                            total_bio_present = count_bio_evepresent + count_bio_present;

                                            total_bio_present = total_bio_present / 2;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text = total_bio_present.ToString();
                                            totalperesent = countpresent + counteveningpresent;
                                            totalperesent = totalperesent / 2;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Tag = Convert.ToDouble(totalperesent).ToString();
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center;
                                            g = Convert.ToDouble(fpbiomatric.Sheets[0].GetTag(rowstr - 1, 11).ToString());

                                            totpresent = totpresent + Convert.ToDouble(fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Tag);


                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center;
                                            c = g * 100;
                                            d = Convert.ToDouble(day3) - holiday;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].Text = d.ToString();

                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].HorizontalAlign = HorizontalAlign.Center;
                                            if (c != 0)
                                            {
                                                percentage = Convert.ToDouble(c) / Convert.ToDouble(d);
                                                percentage = Math.Round(percentage, 2);
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 24].HorizontalAlign = HorizontalAlign.Center;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 24].Text = percentage.ToString();
                                            }
                                            if ((mrng == "A") || (mrng == "OD"))
                                            {
                                                count_bio_absent++;
                                                countmorningabsent = countmorningabsent + 1;

                                                // countmortotalabsent++;
                                                countmortotalabsent = countmortotalabsent + 1;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Red;
                                            }
                                            if ((evng == "A") || (evng == "OD"))
                                            {
                                                count_bio_eveabsent++;

                                                counteveningabsent = counteveningabsent + 1;

                                                //countevetotalabsent++;

                                                // countevetotalabsent = countevetotalabsent + 1;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Red;
                                            }

                                            total_bio_absent = count_bio_absent + count_bio_eveabsent;
                                            total_bio_absent = total_bio_absent / 2;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 13].Text = total_bio_absent.ToString();



                                            totalabsent = counteveningabsent + countmorningabsent;
                                            totalabsent = totalabsent / 2;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].Tag = Convert.ToDouble(totalabsent).ToString();

                                            totabsent = totabsent + Convert.ToDouble(fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Tag);

                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].HorizontalAlign = HorizontalAlign.Center;

                                            if (mrng == "LA")
                                            {
                                                count_bio_late++;
                                                // countmorlate++;
                                                countmorninglate++;
                                                //countmorlate = countmorlate + 1;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkRed;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.DarkRed;
                                                // fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text = countmorninglate.ToString();
                                                // fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center; 

                                            }
                                            if (evng == "LA")
                                            {
                                                count_bio_evelate++;
                                                counteveninglate = counteveninglate + 1;
                                                //fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].Text = counteveninglate.ToString();
                                                // fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].HorizontalAlign = HorizontalAlign.Center; 

                                            }

                                            total_biolate = count_bio_late + count_bio_evelate;
                                            total_biolate = total_biolate / 2;

                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 15].Text = total_biolate.ToString();

                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 13].Tag = Convert.ToDouble(totallate).ToString();
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 13].HorizontalAlign = HorizontalAlign.Center;




                                            totallate = countmorninglate + counteveninglate;
                                            totallate = totallate / 2;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 13].Tag = Convert.ToDouble(totallate).ToString();
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 13].HorizontalAlign = HorizontalAlign.Center;

                                            if (mrng == "PER")
                                            {

                                                count_bio_permission++;
                                                // countpereng++;
                                                countpermission = countpermission + 1;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Purple;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.Purple;

                                                countmorningpermission = countmorningpermission + 1;

                                            }
                                            if (evng == "PER")
                                            {
                                                counteveper++;
                                                count_bio_eveper++;
                                                //eveningpermission++;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Purple;

                                                // fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].Text = counteveningpermission.ToString();
                                                //fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].HorizontalAlign = HorizontalAlign.Center; 
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].BackColor = Color.Chocolate;
                                                countpermission2 = countpermission2 + 1;
                                                counteveningpermission++;

                                            }

                                            total_biopermission = count_bio_permission + count_bio_eveper;

                                            total_biopermission = total_biopermission / 2;

                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 17].Text = total_biopermission.ToString();

                                            //Permission Count
                                            int totalper = Convert.ToInt32(count_bio_permission) + Convert.ToInt32(count_bio_eveper);
                                            if (totalper.ToString() == "0")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, percount - 1].Text = "-";
                                            else
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, percount - 1].Text = totalper.ToString();
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, percount - 1].HorizontalAlign = HorizontalAlign.Center;


                                            totalpermission = countmorningpermission + counteveningpermission;
                                            totalpermission = totalpermission / 2;
                                            //fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].Text = Convert.ToDouble(totalpermission).ToString();
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 17].HorizontalAlign = HorizontalAlign.Center;
                                            if (mrng == "OD")
                                            {
                                                // countood++;

                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.Goldenrod;

                                            }
                                            if (evng == "OD")
                                            {
                                                // countood++;

                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = outtime;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.Goldenrod;

                                            }


                                            //Added BY Saranyadevi 28.7.2018
                                            if (mrng == "CL")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkOrange;
                                            if (evng == "CL")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DarkOrange;
                                            if (mrng == "CPL")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkSlateGray;
                                            if (evng == "CPL")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DarkSlateGray;
                                            if (mrng == "LL")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkTurquoise;
                                            if (evng == "LL")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DarkTurquoise;
                                            if (mrng == "LOP")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DeepPink;
                                            if (evng == "LOP")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DeepPink;
                                            if (mrng == "MAL")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Lavender;
                                            if (evng == "MAL")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Lavender;
                                            if (mrng == "ML")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.LightGoldenrodYellow;
                                            if (evng == "ML")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.LightGoldenrodYellow;
                                            if (mrng == "NA")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Maroon;
                                            if (evng == "NA")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Maroon;
                                            if (mrng == "SL")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Navy;
                                            if (evng == "SL")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Navy;
                                            if (mrng == "SPL")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.LimeGreen;
                                            if (evng == "SPL")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.LimeGreen;
                                            if (mrng == "VL")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Magenta;
                                            if (evng == "VL")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Magenta;
                                            if (mrng == "WL")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.OliveDrab;
                                            if (evng == "WL")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.OliveDrab;

                                            //End
                                            fpbiomatric.Sheets[0].Columns[4].Visible = false;
                                            fpbiomatric.Sheets[0].Columns[6].Visible = false;

                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].Text = mrng.ToString();
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].Text = evng.ToString();

                                            if (pertype == "0")
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 5].Text = "-";
                                            else
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 5].Text = pertype + "- Hour";

                                            if (mrng == "")
                                            {
                                                string morning5 = getfunctionmorning("select [" + dayatt + "] from staff_attnd where staff_code='" + dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString() + "' and mon_year='" + monthyear + "' " + Str_1 + "");
                                                if (morning5 == "P")
                                                {
                                                    countpresent++;
                                                    count_manual_present++;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Green;

                                                }
                                                if (morning5 == "CL")
                                                {
                                                    clmor++;
                                                }
                                                cltotal = clmor + cleve;
                                                cltotal = cltotal = cltotal / 2;


                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 19].Text = cltotal.ToString();

                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 19].HorizontalAlign = HorizontalAlign.Center;
                                                if (morning5 == "OD")
                                                {
                                                    odmor++;
                                                }
                                                odtotal = odmor + odeve;
                                                odtotal = odtotal / 2;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 21].Text = odtotal.ToString();
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 21].HorizontalAlign = HorizontalAlign.Center;
                                                if (morning5 == "ML")
                                                {
                                                    mlmor++;
                                                }
                                                mltotal = mlmor + mleve;
                                                mltotal = mltotal / 2;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 20].Text = mltotal.ToString();

                                                if ((morning5 != "CL") && (morning5 != "OD") && (morning5 != "ML") && (morning5 != "P") && (morning5 != "A") && (morning5 != "PER") && (morning5 != "LA") && (morning5 == ""))
                                                {
                                                    othermor++;
                                                }
                                                othertotal = othermor + othereve;

                                                othertotal = othertotal / 2;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 22].Text = othertotal.ToString();
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 22].HorizontalAlign = HorizontalAlign.Center;
                                                total_manul_presnt = count_manual_present + count_maul_evepreasent;

                                                total_manul_presnt = total_manul_presnt / 2;

                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].Text = total_manul_presnt.ToString();
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].HorizontalAlign = HorizontalAlign.Center;

                                                //if ((morning5 == "A")||(morning5==""))
                                                if (morning5 == "A")
                                                {
                                                    morning5 = "A";
                                                    count_manual_absent++;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Red;
                                                }
                                                total_manual_absent = count_manual_eveabsent + count_manual_absent;
                                                total_manual_absent = total_manual_absent / 2;

                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].Text = total_manual_absent.ToString();
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].HorizontalAlign = HorizontalAlign.Center;
                                                if (morning5 == "PER")
                                                {
                                                    count_manual_permission++;
                                                }
                                                total_manualpermission = count_manual_evepermission + count_manual_permission;
                                                total_manualpermission = total_manualpermission / 2;

                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 18].Text = total_manualpermission.ToString();

                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 18].HorizontalAlign = HorizontalAlign.Center;
                                                //Permission Count
                                                int totalper1 = Convert.ToInt32(count_manual_evepermission) + Convert.ToInt32(count_manual_permission);
                                                if (totalper1.ToString() == "0")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, percount - 1].Text = "-";
                                                else
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, percount - 1].Text = totalper1.ToString();
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, percount - 1].HorizontalAlign = HorizontalAlign.Center;

                                                if (morning5 == "LA")
                                                {
                                                    count_manual_late++;
                                                }
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].Text = morning5.ToString();
                                                total_manuallate = count_manual_late + count_manual_evelate;

                                                total_manuallate = total_manuallate / 2;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 16].Text = total_manuallate.ToString();
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 16].HorizontalAlign = HorizontalAlign.Center;

                                                //Added BY Saranyadevi 28.7.2018
                                                if (morning5 == "CL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkOrange;

                                                if (morning5 == "CPL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkSlateGray;

                                                if (morning5 == "LL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DarkTurquoise;

                                                if (morning5 == "LOP")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.DeepPink;

                                                if (morning5 == "MAL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Lavender;

                                                if (morning5 == "ML")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.LightGoldenrodYellow;

                                                if (morning5 == "NA")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Maroon;

                                                if (morning5 == "SL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Navy;

                                                if (morning5 == "SPL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.LimeGreen;

                                                if (morning5 == "VL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.Magenta;

                                                if (morning5 == "WL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 3].BackColor = Color.OliveDrab;


                                                //End


                                            }
                                            if (evng == "")
                                            {
                                                string evenin5 = getfunctionevening("select [" + dayatt + "] from staff_attnd where staff_code='" + dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString() + "' and mon_year='" + monthyear + "' " + Str_1 + "");
                                                if (evenin5 != "")
                                                {
                                                    if (evenin5 == "P")
                                                    {
                                                        counteveningpresent++;
                                                        count_maul_evepreasent++;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Green;

                                                    }
                                                    //if ((evenin5 == "A") || (evenin5 == ""))
                                                    if (evenin5 == "A")
                                                    {
                                                        evenin5 = "A";
                                                        count_manual_eveabsent++;
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Red;
                                                    }
                                                    if (evenin5 == "PER")
                                                    {
                                                        count_manual_evepermission++;

                                                    }
                                                    if (evenin5 == "LA")
                                                    {
                                                        count_manual_evelate++;

                                                    }

                                                    total_manul_presnt = count_manual_present + count_maul_evepreasent;

                                                    total_manul_presnt = total_manul_presnt / 2;

                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].Text = total_manul_presnt.ToString();


                                                    total_manual_absent = count_manual_eveabsent + count_manual_absent;
                                                    total_manual_absent = total_manual_absent / 2;

                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].Text = total_manual_absent.ToString();
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].HorizontalAlign = HorizontalAlign.Center;
                                                    total_manuallate = count_manual_late + count_manual_evelate;

                                                    total_manuallate = total_manuallate / 2;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 16].Text = total_manuallate.ToString();
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 16].HorizontalAlign = HorizontalAlign.Center;


                                                    total_manualpermission = count_manual_evepermission + count_manual_permission;
                                                    total_manualpermission = total_manualpermission / 2;

                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 18].Text = total_manualpermission.ToString();

                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 18].HorizontalAlign = HorizontalAlign.Center;
                                                    //Permission Count
                                                    int totalper2 = Convert.ToInt32(count_manual_evepermission) + Convert.ToInt32(count_manual_permission);
                                                    if (totalper2.ToString() == "0")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, percount - 1].Text = "-";
                                                    else
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, percount - 1].Text = totalper2.ToString();
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, percount - 1].HorizontalAlign = HorizontalAlign.Center;


                                                    if (evenin5 == "CL")
                                                    {
                                                        cleve++;
                                                    }
                                                    cltotal = clmor + cleve;
                                                    cltotal = cltotal = cltotal / 2;


                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 19].Text = cltotal.ToString();

                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 19].HorizontalAlign = HorizontalAlign.Center;
                                                    if (evenin5 == "OD")
                                                    {
                                                        odeve++;
                                                    }
                                                    odtotal = odmor + odeve;
                                                    odtotal = odtotal / 2;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 21].Text = odtotal.ToString();
                                                    if (evenin5 == "ML")
                                                    {
                                                        mleve++;
                                                    }
                                                    mltotal = mlmor + mleve;
                                                    mltotal = mltotal / 2;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 20].Text = mltotal.ToString();

                                                    if ((evenin5 != "CL") && (evenin5 != "OD") && (evenin5 != "ML") && (evenin5 != "P") && (evenin5 != "A") && (evenin5 != "PER") && (evenin5 != "LA") && (evenin5 != ""))
                                                    {
                                                        othereve++;
                                                    }
                                                    othertotal = othermor + othereve;

                                                    othertotal = othertotal / 2;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 22].Text = othertotal.ToString();

                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 22].HorizontalAlign = HorizontalAlign.Center;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].Text = evenin5.ToString();

                                                    //Added BY Saranyadevi 28.7.2018

                                                    if (evenin5 == "CL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DarkOrange;

                                                    if (evenin5 == "CPL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DarkSlateGray;

                                                    if (evenin5 == "LL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DarkTurquoise;

                                                    if (evenin5 == "LOP")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.DeepPink;

                                                    if (evenin5 == "MAL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Lavender;

                                                    if (evenin5 == "ML")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.LightGoldenrodYellow;

                                                    if (evenin5 == "NA")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Maroon;

                                                    if (evenin5 == "SL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Navy;

                                                    if (evenin5 == "SPL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.LimeGreen;

                                                    if (evenin5 == "VL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.Magenta;

                                                    if (evenin5 == "WL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, setcount + 4].BackColor = Color.OliveDrab;

                                                    //End

                                                }
                                                else
                                                {
                                                    //  mrng = "A";
                                                    //evng = "A";
                                                    //count_bio_absent++;
                                                    count_bio_eveabsent++;
                                                    total_bio_absent = count_bio_absent + count_bio_eveabsent;
                                                    total_bio_absent = total_bio_absent / 2;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 13].Text = total_bio_absent.ToString();


                                                    //Added BY Saranyadevi 28.7.2018
                                                    if (mrng == "CL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.DarkOrange;
                                                    if (evng == "CL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.DarkOrange;
                                                    if (mrng == "CPL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.DarkSlateGray;
                                                    if (evng == "CPL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.DarkSlateGray;
                                                    if (mrng == "LL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.DarkTurquoise;
                                                    if (evng == "LL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.DarkTurquoise;
                                                    if (mrng == "LOP")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.DeepPink;
                                                    if (evng == "LOP")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.DeepPink;
                                                    if (mrng == "MAL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.Lavender;
                                                    if (evng == "MAL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.Lavender;
                                                    if (mrng == "ML")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.LightGoldenrodYellow;
                                                    if (evng == "ML")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.LightGoldenrodYellow;
                                                    if (mrng == "NA")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.Maroon;
                                                    if (evng == "NA")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.Maroon;
                                                    if (mrng == "SL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.Navy;
                                                    if (evng == "SL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.Navy;
                                                    if (mrng == "SPL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.LimeGreen;
                                                    if (evng == "SPL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.LimeGreen;
                                                    if (mrng == "VL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.Magenta;
                                                    if (evng == "VL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.Magenta;
                                                    if (mrng == "WL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.OliveDrab;
                                                    if (evng == "WL")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.OliveDrab;

                                                    //End

                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].Text = mrng.ToString();
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].Text = evng.ToString();

                                                    if (pertype == "0")
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 5].Text = "-";
                                                    else
                                                        fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 5].Text = pertype + "- Hour";

                                                }
                                            }
                                            Panel2.Visible = true;
                                        }
                                        else
                                        {
                                            string att1 = getfuctionatt("select [" + dayatt + "] from staff_attnd where staff_code='" + dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString() + "' and mon_year='" + monthyear + "' " + Str_1 + "");
                                            // int rowstr2 =0;
                                            total_manul_presnt = 0;
                                            if (tempstaffcode == "")
                                            {
                                                countpresent = 0;
                                                counteveningpresent = 0;
                                                countmorningabsent = 0;
                                                countmorningpermission = 0;
                                                counteveninglate = 0;
                                                counteveningpermission = 0;
                                                counteveningabsent = 0;
                                                countmorninglate = 0;

                                                countpermission = 0;
                                                tempstaffcode = dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString();

                                                // tempstaffcode = ds34.Tables[0].Rows[0]["Roll_No"].ToString();
                                            }
                                            else if ((tempstaffcode != "") && (tempstaffcode != dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString()))
                                            {
                                                countpresent = 0;
                                                counteveningpresent = 0;
                                                countmorningabsent = 0;
                                                countpermission = 0;



                                                countmorningpermission = 0;
                                                counteveninglate = 0;
                                                counteveningpermission = 0;
                                                counteveningabsent = 0;
                                                countmorninglate = 0;

                                                c = 0;
                                                d = 0;
                                                g = 0;
                                                f = 0;
                                                percentage = 0;
                                                countmorningabsent = 0;
                                                countlateforstaff = 0;
                                                counteveningabsent = 0;
                                                countmorninglate = 0;
                                                counteveninglate = 0;
                                                countmorningpermission = 0;
                                                counteveningpermission = 0;
                                                tempstaffcode = dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString();
                                                //fpbiomatric.Sheets[0].RowCount += 1;
                                                // tempstaffcode =  ds34.Tables[0].Rows[0]["Roll_No"].ToString();
                                            }

                                            Staffvis = true;
                                            string staff_code = dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString();
                                            string staff_name = dsstaffcode.Tables[0].Rows[h1]["staff_name"].ToString();
                                            dept_acronym = dsstaffcode.Tables[0].Rows[h1]["dept_acronym"].ToString();
                                            desig_acronym = dsstaffcode.Tables[0].Rows[h1]["desig_acronym"].ToString();
                                            dept = dsstaffcode.Tables[0].Rows[h1]["dept_name"].ToString();
                                            design = dsstaffcode.Tables[0].Rows[h1]["desig_name"].ToString();

                                            doj = dsstaffcode.Tables[0].Rows[h1]["join_date"].ToString();
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 0].Text = SNO8.ToString();
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 1].Text = staff_code;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 2].Text = staff_name;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 3].Text = dept;

                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 4].Text = dept_acronym;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 5].Text = design;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 6].Text = desig_acronym;

                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 7].Text = doj;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 8].Text = category;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].CellType = textcell;
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].Text = dsstaffcode.Tables[0].Rows[h1]["Fingerprint1"].ToString();
                                            fpbiomatric.Sheets[0].Cells[rowstr - 1, 9].HorizontalAlign = HorizontalAlign.Center;

                                            string mrng = "";
                                            string evng = "";
                                            if ((att1 != "") && (att1 != " - "))
                                            {
                                                string[] splitatt = att1.Split('-');
                                                mrng = splitatt[0].ToString();
                                                evng = splitatt[1].ToString();
                                                if (mrng == "P")
                                                {
                                                    count_manual_present++;
                                                    countpresent++;
                                                    counttotalmorpresent++;
                                                    counttotalmorpresent = counttotalmorpresent + 1;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.Green;
                                                }
                                                if (evng == "P")
                                                {
                                                    count_maul_evepreasent++;
                                                    counteveningpresent++;
                                                    counttotalevepresent++;
                                                    counttotalevepresent = counttotalevepresent + 1;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.Green;
                                                }

                                                if (mrng == "CL")
                                                {
                                                    clmor++;
                                                }
                                                if (evng == "CL")
                                                {
                                                    cleve++;
                                                }

                                                cltotal = clmor + cleve;
                                                cltotal = cltotal = cltotal / 2;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 19].Text = cltotal.ToString();
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 19].HorizontalAlign = HorizontalAlign.Center;

                                                if (mrng == "OD")
                                                {
                                                    odmor++;
                                                }
                                                if (evng == "OD")
                                                {
                                                    odeve++;
                                                }
                                                odtotal = odmor + odeve;
                                                odtotal = odtotal / 2;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 21].Text = odtotal.ToString();
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 21].HorizontalAlign = HorizontalAlign.Center;

                                                if (mrng == "ML")
                                                {
                                                    mlmor++;
                                                }
                                                if (evng == "ML")
                                                {
                                                    mleve++;
                                                }
                                                mltotal = mlmor + mleve;
                                                mltotal = mltotal / 2;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 20].Text = mltotal.ToString();
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 20].HorizontalAlign = HorizontalAlign.Center;

                                                if ((mrng != "CL") && (mrng != "OD") && (mrng != "ML") && (mrng != "P") && (mrng != "A") && (mrng != "PER") && (mrng != "LA") && (mrng != "") && (mrng == "-"))
                                                {
                                                    othermor++;
                                                }

                                                if ((evng != "CL") && (evng != "OD") && (evng != "ML") && (evng != "P") && (evng != "A") && (evng != "PER") && (evng != "LA") && (evng != "") && (evng == "-"))
                                                {
                                                    othereve++;
                                                }
                                                othertotal = othermor + othereve;

                                                othertotal = othertotal / 2;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 22].Text = othertotal.ToString();

                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 22].HorizontalAlign = HorizontalAlign.Center;


                                                total_manul_presnt = count_manual_present + count_maul_evepreasent;

                                                total_manul_presnt = total_manul_presnt / 2;
                                                totalperesent = countpresent + counteveningpresent;
                                                totalperesent = totalperesent / 2;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text = totalperesent.ToString();
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Tag = Convert.ToDouble(totalperesent).ToString();
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center;
                                                g = Convert.ToDouble(fpbiomatric.Sheets[0].GetTag(rowstr - 1, 11).ToString());

                                                totpresent = totpresent + Convert.ToDouble(fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Tag);


                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center;



                                                c = g * 100;

                                                d = Convert.ToDouble(day3) - holiday;

                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].Text = d.ToString();

                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 10].HorizontalAlign = HorizontalAlign.Center;
                                                if (c != 0)
                                                {

                                                    percentage = Convert.ToDouble(c) / Convert.ToDouble(d);
                                                    percentage = Math.Round(percentage, 2);
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 24].HorizontalAlign = HorizontalAlign.Center;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, 24].Text = percentage.ToString();

                                                }

                                                //if (mrng == "")
                                                //{
                                                //    count_manual_absent++;
                                                //}
                                                //if (evng == "")
                                                //{
                                                //    count_manual_absent++;
                                                //}

                                                if ((mrng == "A") || (mrng == "") || (mrng == " "))
                                                {
                                                    mrng = "A";
                                                    count_manual_absent++;

                                                    countmorningabsent = countmorningabsent + 1;

                                                    // countmortotalabsent++;
                                                    countmortotalabsent = countmortotalabsent + 1;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.Red;

                                                }
                                                if ((evng == "A") || (evng == "") || (evng == " "))
                                                {
                                                    evng = "A";
                                                    count_manual_eveabsent++;

                                                    counteveningabsent = counteveningabsent + 1;

                                                    //countevetotalabsent++;

                                                    // countevetotalabsent = countevetotalabsent + 1;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.Red;
                                                }

                                                total_manual_absent = count_manual_eveabsent + count_manual_absent;
                                                total_manual_absent = total_manual_absent / 2;

                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].Text = total_manual_absent.ToString();


                                                totalabsent = counteveningabsent + countmorningabsent;
                                                totalabsent = totalabsent / 2;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].Tag = Convert.ToDouble(totalabsent).ToString();

                                                totabsent = totabsent + Convert.ToDouble(fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].Tag);

                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].HorizontalAlign = HorizontalAlign.Center;

                                                if (mrng == "LA")
                                                {

                                                    count_manual_late++;
                                                    // countmorlate++;
                                                    countmorninglate++;
                                                    //countmorlate = countmorlate + 1;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.DarkRed;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.DarkRed;
                                                    // fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text = countmorninglate.ToString();
                                                    // fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center; 

                                                }

                                                if (evng == "LA")
                                                {

                                                    count_manual_evelate++;
                                                    counteveninglate = counteveninglate + 1;
                                                    //fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].Text = counteveninglate.ToString();
                                                    // fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].HorizontalAlign = HorizontalAlign.Center; 

                                                }

                                                total_manuallate = count_manual_late + count_manual_evelate;

                                                total_manuallate = total_manuallate / 2;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 16].Text = total_manuallate.ToString();
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 16].HorizontalAlign = HorizontalAlign.Center;
                                                totallate = countmorninglate + counteveninglate;
                                                totallate = totallate / 2;
                                                // fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text = Convert.ToDouble(totallate).ToString();
                                                //fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center;
                                                if (mrng == "PER")
                                                {
                                                    count_manual_permission++;
                                                    // countpereng++;
                                                    countpermission = countpermission + 1;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.Purple;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].BackColor = Color.Purple;
                                                    countmorningpermission = countmorningpermission + 1;
                                                }
                                                if (evng == "PER")
                                                {
                                                    count_manual_evepermission++;
                                                    counteveper++;
                                                    //eveningpermission++;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.Purple;
                                                    // fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].Text = counteveningpermission.ToString();
                                                    //fpbiomatric.Sheets[0].Cells[rowstr - 1, 14].HorizontalAlign = HorizontalAlign.Center; 
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].Text = outtime;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 1].BackColor = Color.Chocolate;
                                                    countpermission2 = countpermission2 + 1;
                                                    counteveningpermission++;
                                                }

                                                total_manualpermission = count_manual_evepermission + count_manual_permission;
                                                total_manualpermission = total_manualpermission / 2;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 18].Text = total_manualpermission.ToString();
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 18].HorizontalAlign = HorizontalAlign.Center;
                                                //Permission Count
                                                int totalper = Convert.ToInt32(count_manual_evepermission) + Convert.ToInt32(count_manual_permission);
                                                if (totalper.ToString() == "0")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, percount - 1].Text = "-";
                                                else
                                                    fpbiomatric.Sheets[0].Cells[rowstr, percount - 1].Text = totalper.ToString();

                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, percount - 1].HorizontalAlign = HorizontalAlign.Center;

                                                totalpermission = countmorningpermission + counteveningpermission;
                                                totalpermission = totalpermission / 2;
                                                //   fpbiomatric.Sheets[0].Cells[rowstr - 1, 12].Text = Convert.ToDouble(totalpermission).ToString();
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, 13].HorizontalAlign = HorizontalAlign.Center;
                                                if (mrng == "OD")
                                                {
                                                    // countood++;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = intime;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.Goldenrod;
                                                }
                                                if (evng == "OD")
                                                {
                                                    // countood++;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount].Text = outtime;
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.Goldenrod;
                                                }
                                                //Added BY Saranyadevi 28.7.2018
                                                if (mrng == "CL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.DarkOrange;
                                                if (evng == "CL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.DarkOrange;
                                                if (mrng == "CPL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.DarkSlateGray;
                                                if (evng == "CPL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.DarkSlateGray;
                                                if (mrng == "LL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.DarkTurquoise;
                                                if (evng == "LL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.DarkTurquoise;
                                                if (mrng == "LOP")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.DeepPink;
                                                if (evng == "LOP")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.DeepPink;
                                                if (mrng == "MAL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.Lavender;
                                                if (evng == "MAL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.Lavender;
                                                if (mrng == "ML")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.LightGoldenrodYellow;
                                                if (evng == "ML")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.LightGoldenrodYellow;
                                                if (mrng == "NA")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.Maroon;
                                                if (evng == "NA")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.Maroon;
                                                if (mrng == "SL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.Navy;
                                                if (evng == "SL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.Navy;
                                                if (mrng == "SPL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.LimeGreen;
                                                if (evng == "SPL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.LimeGreen;
                                                if (mrng == "VL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.Magenta;
                                                if (evng == "VL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.Magenta;
                                                if (mrng == "WL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].BackColor = Color.OliveDrab;
                                                if (evng == "WL")
                                                    fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].BackColor = Color.OliveDrab;

                                                //End

                                                fpbiomatric.Sheets[0].Columns[4].Visible = false;
                                                fpbiomatric.Sheets[0].Columns[6].Visible = false;
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].Text = mrng.ToString();
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].Text = evng.ToString();
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 5].Text = "-";
                                                Panel2.Visible = true;
                                            }
                                            else
                                            {
                                                mrng = " ";
                                                evng = " ";
                                                //count_bio_absent++;
                                                //count_bio_eveabsent++;
                                                //total_bio_absent = count_bio_absent + count_bio_eveabsent;
                                                //total_bio_absent = total_bio_absent / 2;
                                                //fpbiomatric.Sheets[0].Cells[rowstr - 1, 11].Text = total_bio_absent.ToString();

                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 3].Text = mrng.ToString();
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 4].Text = evng.ToString();
                                                fpbiomatric.Sheets[0].Cells[rowstr - 1, colcount + 5].Text = "-";

                                            }
                                        }
                                        //else

                                        //   {
                                        //       int rowstr1 = fpbiomatric.Sheets[0].RowCount++;
                                        //       string att=getfuctionatt("select ["+dayatt+"] from staff_attnd where staff_code='" + dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString() + "' and mon_year='" + monthyear + "'");
                                        //       string mrng = "";
                                        //       string evng = "";

                                        //       string staff_code = dsstaffcode.Tables[0].Rows[h1]["staff_code"].ToString();
                                        //       string staff_name = dsstaffcode.Tables[0].Rows[h1]["staff_name"].ToString();


                                        //       //fpbiomatric.Sheets[0].Cells[rowstr , 0].Text = staffcode;
                                        //       //fpbiomatric.Sheets[0].Cells[rowstr , 1].Text = staffname;
                                        //       //fpbiomatric.Sheets[0].Cells[rowstr - 1, 2].Text = dept;
                                        //       //fpbiomatric.Sheets[0].Cells[rowstr - 1, 3].Text = dept_acronym;
                                        //       //fpbiomatric.Sheets[0].Cells[rowstr - 1, 4].Text = design;
                                        //       //fpbiomatric.Sheets[0].Cells[rowstr - 1, 5].Text = desig_acronym;
                                        //       fpbiomatric.Sheets[0].Cells[rowstr1, 0].Text = staff_code;
                                        //       fpbiomatric.Sheets[0].Cells[rowstr1, 1].Text = staff_name;


                                        //       if (att != "")
                                        //       {
                                        //           string[] splitatt = att.Split('-');
                                        //           mrng = splitatt[0].ToString();
                                        //           evng = splitatt[1].ToString();

                                        //       }

                                        //       if (mrng == "P")
                                        //       {
                                        //           countpresent++;
                                        //           // counttotalmorpresent++;
                                        //           // counttotalmorpresent = counttotalmorpresent + 1;
                                        //           fpbiomatric.Sheets[0].Cells[rowstr1, colcount + 3].BackColor = Color.Green;

                                        //       }

                                        //       if (evng == "P")
                                        //       {
                                        //           counteveningpresent++;
                                        //           //  counttotalevepresent++;

                                        //           //counttotalevepresent = counttotalevepresent + 1;
                                        //           fpbiomatric.Sheets[0].Cells[rowstr1, colcount + 4].BackColor = Color.Green;




                                        //       }
                                        fpbiomatric.Sheets[0].Columns[0].Visible = true;
                                        fpbiomatric.Sheets[0].Columns[1].Visible = false;
                                        fpbiomatric.Sheets[0].Columns[2].Visible = false;
                                        fpbiomatric.Sheets[0].Columns[3].Visible = false;
                                        fpbiomatric.Sheets[0].Columns[4].Visible = false;
                                        fpbiomatric.Sheets[0].Columns[5].Visible = false;
                                        fpbiomatric.Sheets[0].Columns[6].Visible = false;
                                        fpbiomatric.Sheets[0].Columns[7].Visible = false;
                                        fpbiomatric.Sheets[0].Columns[9].Visible = true;
                                        fpbiomatric.Sheets[0].Columns[10].Visible = true;
                                        fpbiomatric.Sheets[0].Columns[11].Visible = true;
                                        fpbiomatric.Sheets[0].Columns[12].Visible = true;
                                        fpbiomatric.Sheets[0].Columns[13].Visible = true;
                                        fpbiomatric.Sheets[0].Columns[14].Visible = true;
                                        fpbiomatric.Sheets[0].Columns[15].Visible = true;
                                        fpbiomatric.Sheets[0].Columns[colcount].Visible = true;
                                        fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = true;

                                        fpbiomatric.Sheets[0].Columns[colcount + 2].Visible = false;

                                        fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                                        fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;

                                        if (cblsearch.Items[8].Selected == true)
                                        {
                                            fpbiomatric.Sheets[0].Columns[9].Visible = true;
                                        }
                                        else
                                        {
                                            fpbiomatric.Sheets[0].Columns[9].Visible = false;
                                        }
                                        if (cblsearch.Items[11].Selected == true)
                                        {
                                            fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = true;
                                        }
                                        else
                                        {
                                            fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = false;
                                        }
                                        if (cblsearch.Items[11].Selected == true)
                                        {
                                            fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = true;
                                        }
                                        else
                                        {
                                            fpbiomatric.Sheets[0].Columns[colcount + 1].Visible = false;
                                        }
                                        if (cblsearch.Items[10].Selected == true)
                                        {
                                            fpbiomatric.Sheets[0].Columns[colcount].Visible = true;
                                        }
                                        else
                                        {
                                            fpbiomatric.Sheets[0].Columns[colcount].Visible = false;
                                        }
                                        if (cblsearch.Items[12].Selected == true)
                                        {
                                            fpbiomatric.Sheets[0].Columns[colcount + 2].Visible = true;
                                        }
                                        else
                                        {
                                            fpbiomatric.Sheets[0].Columns[colcount + 2].Visible = false;
                                        }
                                        if (cblsearch.Items[13].Selected == true)
                                        {
                                            fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = true;
                                        }
                                        else
                                        {
                                            fpbiomatric.Sheets[0].Columns[colcount + 3].Visible = false;
                                        }
                                        if (cblsearch.Items[14].Selected == true)
                                        {
                                            fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = true;
                                        }
                                        else
                                        {
                                            fpbiomatric.Sheets[0].Columns[colcount + 4].Visible = false;
                                        }
                                        if (cblsearch.Items[0].Selected == true)
                                        {
                                            fpbiomatric.Sheets[0].Columns[1].Visible = true;
                                        }
                                        else
                                        {
                                            fpbiomatric.Sheets[0].Columns[1].Visible = false;
                                        }
                                        if (cblsearch.Items[7].Selected == true)
                                        {
                                            fpbiomatric.Sheets[0].Columns[8].Visible = true;
                                        }
                                        else
                                        {
                                            fpbiomatric.Sheets[0].Columns[8].Visible = false;
                                        }
                                        if (cblsearch.Items[0].Selected == true)
                                        {
                                            fpbiomatric.Sheets[0].Columns[1].Visible = true;

                                        }
                                        if (cblsearch.Items[1].Selected == true)
                                        {
                                            fpbiomatric.Sheets[0].Columns[2].Visible = true;

                                        }
                                        if (cblsearch.Items[2].Selected == true)
                                        {
                                            fpbiomatric.Sheets[0].Columns[2].Visible = true;

                                        }
                                        if (cblsearch.Items[3].Selected == true)
                                        {
                                            fpbiomatric.Sheets[0].Columns[4].Visible = true;

                                        }
                                        if (cblsearch.Items[4].Selected == true)
                                        {
                                            fpbiomatric.Sheets[0].Columns[5].Visible = true;

                                        }
                                        if (cblsearch.Items[5].Selected == true)
                                        {
                                            fpbiomatric.Sheets[0].Columns[6].Visible = true;

                                        }
                                        if (cblsearch.Items[6].Selected == true)
                                        {
                                            fpbiomatric.Sheets[0].Columns[7].Visible = true;

                                        }

                                        if (cblsearch.Items[7].Selected == true)
                                        {
                                            fpbiomatric.Sheets[0].Columns[8].Visible = true;

                                        }

                                        if (cblsearch.Items[8].Selected == true)
                                        {
                                            fpbiomatric.Sheets[0].Columns[24].Visible = true;

                                        }
                                        else
                                        {
                                            fpbiomatric.Sheets[0].Columns[24].Visible = false; ;

                                        }

                                        if (cblsearch.Items[15].Selected == true)
                                        {
                                            fpbiomatric.Sheets[0].Columns[12].Visible = true;
                                            fpbiomatric.Sheets[0].Columns[14].Visible = true;
                                            fpbiomatric.Sheets[0].Columns[16].Visible = true;
                                            fpbiomatric.Sheets[0].Columns[18].Visible = true;
                                        }
                                        else
                                        {
                                            fpbiomatric.Sheets[0].Columns[12].Visible = false;
                                            fpbiomatric.Sheets[0].Columns[14].Visible = false;
                                            fpbiomatric.Sheets[0].Columns[16].Visible = false;
                                            fpbiomatric.Sheets[0].Columns[18].Visible = false;
                                        }
                                        if (cblsearch.Items[16].Selected == true)
                                        {
                                            fpbiomatric.Sheets[0].Columns[19].Visible = true;
                                            fpbiomatric.Sheets[0].Columns[20].Visible = true;
                                            fpbiomatric.Sheets[0].Columns[21].Visible = true;
                                            fpbiomatric.Sheets[0].Columns[22].Visible = true;
                                        }
                                        else
                                        {
                                            fpbiomatric.Sheets[0].Columns[19].Visible = false;
                                            fpbiomatric.Sheets[0].Columns[20].Visible = false;
                                            fpbiomatric.Sheets[0].Columns[21].Visible = false;
                                            fpbiomatric.Sheets[0].Columns[22].Visible = false;
                                        }

                                        //for (int i = 0; i < cblsearch.Items.Count; i++)
                                        //{
                                        //    if (cblsearch.Items[i].Selected == true)
                                        //    {
                                        //        fpbiomatric.Sheets[0].Columns[i].Visible = true;
                                        //    }


                                        //}

                                    }

                                }
                                //if (count != 0)
                                //{

                                // }
                                PrevStaffcode = staffcode1;

                                if (!Staffvis)
                                    SNO8--;
                            }


                        }
                        lblood.Text = ":" + countood.ToString();
                        lblpermission.Text = ":" + countpereng;
                        lblevngpermission.Text = ":" + eveningpermission;
                        late.Text = ":" + countmorlate.ToString();
                        counttotalpresent = counttotalevepresent + counttotalmorpresent;

                        counttotalpresent = counttotalpresent / 2;

                        lblmorpresent.Text = ":" + ((counttotalmorpresent + count_manual_present) / 2).ToString();
                        lblevepresent.Text = ":" + ((counttotalevepresent + count_maul_evepreasent) / 2).ToString();


                        lblmorabsent.Text = ":" + countmortotalabsent.ToString();
                        lbleveabsent.Text = ":" + (countevetotalabsent + count_manual_eveabsent).ToString();

                        /////////////////
                        //counttotalabsent = countmortotalabsent + countevetotalabsent;
                        //counttotalabsent = counttotalabsent / 2;
                        lblontime.Text = ":" + countintime.ToString();
                        Lblgracetime.Text = ":" + countgracetime.ToString();

                        ////////////////

                        fpbiomatric.Sheets[0].RowCount++;

                        fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                        fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                        fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 0, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].Text = "Total No of  Present (Morning):" + ((counttotalmorpresent + count_manual_present) / 2).ToString(); //25nov2013 (counttotalmorpresent + countpereng + countmorlate + count_manual_present).ToString();
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;

                        fpbiomatric.Sheets[0].RowCount++;

                        fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                        fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                        fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 0, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].Text = "Total No of Present (Evening):" + ((counttotalevepresent + count_maul_evepreasent) / 2).ToString(); //25nov2013 (counttotalevepresent + eveningpermission + count_maul_evepreasent).ToString();
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].RowCount++;

                        fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                        fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                        fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 0, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].Text = "Total No of Absent (Morning):" + countmortotalabsent.ToString();
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;

                        fpbiomatric.Sheets[0].RowCount++;

                        fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Bold = true;
                        fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].Font.Size = FontUnit.Medium;

                        fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, 0, 1, fpbiomatric.Sheets[0].ColumnCount - 1);
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].Text = "Total No of Absent (Evening):" + (countevetotalabsent + count_manual_eveabsent).ToString();
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;

                        DropDownListpage.Items.Clear();
                        Double totalRows = 0;
                        totalRows = Convert.ToInt32(fpbiomatric.Sheets[0].RowCount);
                        DropDownListpage.Items.Clear();
                        if (totalRows >= 10)
                        {
                            fpbiomatric.Sheets[0].PageSize = Convert.ToInt32(totalRows);
                            for (int k = 0; k < Convert.ToInt32(totalRows); k = k + 10)
                            {
                                DropDownListpage.Items.Add((k + 10).ToString());
                            }
                            DropDownListpage.Items.Add("Others");
                            DropDownListpage.SelectedIndex = DropDownListpage.Items.Count - 2;
                            fpbiomatric.Height = 350;
                            fpbiomatric.VerticalScrollBarPolicy = FarPoint.Web.Spread.ScrollBarPolicy.AsNeeded;
                            fpbiomatric.HorizontalScrollBarPolicy = FarPoint.Web.Spread.ScrollBarPolicy.AsNeeded;

                        }
                        else if (totalRows == 0)
                        {
                            DropDownListpage.Items.Add("0");
                            fpbiomatric.Height = 300;
                        }
                        else
                        {
                            fpbiomatric.Sheets[0].PageSize = Convert.ToInt32(totalRows);
                            DropDownListpage.Items.Add(fpbiomatric.Sheets[0].PageSize.ToString());
                            fpbiomatric.Height = 75 + (75 * Convert.ToInt32(totalRows));
                        }


                        Session["totalPages"] = (int)Math.Ceiling(totalRows / fpbiomatric.Sheets[0].PageSize);
                        Buttontotal.Text = "Records : " + totalRows + "          Pages : " + Session["totalPages"];

                        //drcount14.Close();
                        con.Close();

                        /////////////////////}
                    }
                    else
                    {

                        Imgeveper.Visible = false;
                        Imgmorper.Visible = false;
                        Imglate.Visible = false;
                        Imgood.Visible = false;
                        //lbldate.Visible = false;  //Modified by Manikandan 09/05/2013
                        // btpresent.Visible = false;
                        // btnabsent.Visible = false;
                        // lbltotalabsent.Visible = false;
                        Lblgracetime.Visible = false;
                        btnontime.Visible = false;

                        // btngrace.Visible = false ;
                        lblontime.Visible = false;
                        btngracetime.Visible = false;
                        // lbltottalpresent.Visible = false;
                        lblevngpermission.Visible = false;
                        lblood.Visible = false;
                        lblpermission.Visible = false;
                        late.Visible = false;


                        btnmorabsent.Visible = false;
                        btneveabsent.Visible = false;
                        btnevepresent.Visible = false;
                        btnmorabsent.Visible = false;
                        lblmorpresent.Visible = false;
                        lblevepresent.Visible = false;
                        lblevepresent.Visible = false;
                        lbleveabsent.Visible = false;
                        lblmorabsent.Visible = false;
                        btnmorpresent.Visible = false;

                        fpbiomatric.Visible = false;
                        btnprintmaster.Visible = false;

                        Buttontotal.Visible = false;
                        Buttontotal.Visible = false;
                        DropDownListpage.Visible = false;
                        TextBoxpage.Visible = false;
                        lblrecord.Visible = false;
                        lblrecord.Visible = false;
                        lblpage.Visible = false;
                        Panel2.Visible = false;
                        lblnorec.Visible = true;

                    }

                }
                else
                {
                    Imgeveper.Visible = false;
                    Imgmorper.Visible = false;
                    Imglate.Visible = false;
                    Imgood.Visible = false;
                    //lbldate.Visible = false;  //Modified by Manikandan 09/05/2013
                    // btpresent.Visible = false;
                    // btnabsent.Visible = false;
                    // lbltotalabsent.Visible = false;
                    Lblgracetime.Visible = false;
                    btnontime.Visible = false;

                    // btngrace.Visible = false ;
                    lblontime.Visible = false;
                    btngracetime.Visible = false;
                    // lbltottalpresent.Visible = false;
                    lblevngpermission.Visible = false;
                    lblood.Visible = false;
                    lblpermission.Visible = false;
                    late.Visible = false;


                    btnmorabsent.Visible = false;
                    btneveabsent.Visible = false;
                    btnevepresent.Visible = false;
                    btnmorabsent.Visible = false;
                    lblmorpresent.Visible = false;
                    lblevepresent.Visible = false;
                    lblevepresent.Visible = false;
                    lbleveabsent.Visible = false;
                    lblmorabsent.Visible = false;
                    btnmorpresent.Visible = false;

                    fpbiomatric.Visible = false;
                    btnprintmaster.Visible = false;

                    Buttontotal.Visible = false;
                    Buttontotal.Visible = false;
                    DropDownListpage.Visible = false;
                    TextBoxpage.Visible = false;
                    lblrecord.Visible = false;
                    lblrecord.Visible = false;
                    lblpage.Visible = false;
                    Panel2.Visible = false;
                    lblnorec.Visible = true;

                }
                if (d1.Tables.Count == 0)
                {
                    fpbiomatric.Visible = false;
                    btnprintmaster.Visible = false;

                    Buttontotal.Visible = false;
                    Buttontotal.Visible = false;
                    DropDownListpage.Visible = false;
                    TextBoxpage.Visible = false;
                    lblrecord.Visible = false;
                    lblrecord.Visible = false;
                    lblpage.Visible = false;
                    Panel2.Visible = false;
                    lblnorec.Visible = true;
                }

                //  drname.Close();
                con1.Close();


                // counttotalpresent = counttotalevepresent + counttotalmorpresent;

                //counttotalpresent = counttotalpresent / 2;
                // counttotalabsent = countmortotalabsent + countevetotalabsent;
                //  counttotalabsent = counttotalabsent / 2;

                // }
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Department";
            }

            #endregion
            MyClass ms = new MyClass();
            ms.Dispose();
            GC.SuppressFinalize(this);
            GC.Collect();
            GC.WaitForFullGCComplete();
        }
        catch (Exception ex) { }
    }

    public class MyClass : IDisposable
    {
        private bool disposed = false;

        protected virtual void Dispose(bool disposing)
        {
            if (!disposed)
            {
                if (disposing)
                {
                    // called via myClass.Dispose(). 
                    // OK to use any private object references
                }

                disposed = true;
            }
            disposed = true;
        }

        public void Dispose() // Implement IDisposable
        {
            Dispose(true);
            GC.SuppressFinalize(this);
        }

        ~MyClass() // the finalizer
        {
            Dispose(false);
        }
    }

    public string getfunctionmorning(string sql3)
    {
        string sqlstr;
        sqlstr = sql3;
        mycon.Close();
        mycon.Open();
        SqlDataAdapter cmd10 = new SqlDataAdapter(sqlstr, mycon);
        DataSet dsatt = new DataSet();
        dsatt.Clear();
        cmd10.Fill(dsatt);



        if (dsatt.Tables[0].Rows.Count > 0)
        {
            string att1 = "";
            att1 = dsatt.Tables[0].Rows[0][0].ToString();
            string mrng3 = "";
            if (att1 != "")
            {
                string[] tematt = att1.Split('-');
                mrng3 = tematt[0].ToString();

            }
            return mrng3;
        }
        else
        {
            return "";
        }
    }

    public string getfunctionevening(string sql3)
    {
        string sqlstr;
        sqlstr = sql3;
        mycon.Close();
        mycon.Open();
        SqlDataAdapter cmd10 = new SqlDataAdapter(sqlstr, mycon);
        DataSet dsatt = new DataSet();
        dsatt.Clear();
        cmd10.Fill(dsatt);



        if (dsatt.Tables[0].Rows.Count > 0)
        {
            string att1 = "";
            att1 = dsatt.Tables[0].Rows[0][0].ToString();
            string evng3 = "";
            if (att1 != "")
            {
                string[] tematt = att1.Split('-');
                evng3 = tematt[1].ToString();

            }
            return evng3;
        }
        else
        {
            return "";
        }
    }

    public string getfuctionatt(string sql3)
    {
        string sqlstr;
        sqlstr = sql3;
        mycon.Close();
        mycon.Open();
        SqlDataAdapter cmd10 = new SqlDataAdapter(sqlstr, mycon);
        DataSet dsatt = new DataSet();
        dsatt.Clear();
        cmd10.Fill(dsatt);



        if (dsatt.Tables[0].Rows.Count > 0)
        {
            string att1 = "";
            att1 = dsatt.Tables[0].Rows[0][0].ToString();
            return att1;
        }
        else
        {
            return "";
        }

    }

    public string getfunction3(string sql)
    {


        string sqlstr1;
        sqlstr1 = sql;
        mycon1.Close();
        mycon1.Open();
        SqlCommand cmd10 = new SqlCommand(sqlstr1, mycon1);
        SqlDataReader dr10;
        dr10 = cmd10.ExecuteReader();
        while (dr10.Read())
        {
            if (dr10.HasRows == true)
            {
                string staffname = "";
                string category3 = "";
                string timein1 = "";
                string timeout2 = "";
                category3 = dr10["category_name"].ToString();
                timein1 = dr10["time_in"].ToString();
                timeout2 = dr10["time_out"].ToString();

                string mrng1 = "";
                string evng1 = "";
                staffname = dr10["staff_name"].ToString();

                string att = "";
                att = dr10["att"].ToString();
                if (att != "")
                {
                    string[] tmpdate = att.ToString().Split('-');
                    mrng1 = tmpdate[0].ToString();
                    evng1 = tmpdate[1].ToString();
                }


                // string timein = getfunction(" select right(CONVERT(nvarchar(100),intime ,100),6) as intime from in_out_time where category_name='" + category3 + "'");
                // string gracetime = getgracetimefunction(" select right(CONVERT(nvarchar(100),gracetime ,100),6) as gracetime from in_out_time where category_name='" + category3 + "'");
                string timein = dr10["ontime"].ToString();
                string gracetime = dr10["gracetime"].ToString();
                if (!String.IsNullOrEmpty(timein) && !String.IsNullOrEmpty(timein1) && !String.IsNullOrEmpty(gracetime))
                {
                    if (Convert.ToDateTime(timein1) <= Convert.ToDateTime(timein))
                    {
                        countintime = countintime + 1;

                    }
                    if ((Convert.ToDateTime(timein1) <= Convert.ToDateTime(gracetime)) && (Convert.ToDateTime(timein1) > Convert.ToDateTime(timein)))
                    {
                        countgracetime = countgracetime + 1;
                    }
                }
                if (mrng1 == "PER")
                {
                    countpereng++;
                }
                lblpermission.Text = ":" + countpereng;

                if (evng1 == "PER")
                {
                    eveningpermission++;
                }
                lblevngpermission.Text = ":" + eveningpermission;
                if (mrng1 == "LA")
                {
                    countmorlate++;
                }
                late.Text = ":" + countmorlate.ToString();
                if (mrng1 == "OOD")
                {
                    countood++;
                }
                lblood.Text = ":" + countood.ToString();

                if (mrng1 == "P")
                {
                    counttotalmorpresent++;
                }
                if (evng1 == "P")
                {
                    counttotalevepresent++;
                }
                counttotalpresent = counttotalevepresent + counttotalmorpresent;

                counttotalpresent = counttotalpresent / 2;
                //lbltottalpresent.Text = ":" + counttotalpresent;
                if (mrng1 == "A")
                {
                    countmortotalabsent++;
                }
                if (evng1 == "A")
                {
                    countevetotalabsent++;
                }
                lblmorpresent.Text = ":" + counttotalmorpresent.ToString();
                lblevepresent.Text = ":" + counttotalevepresent.ToString();


                lblmorabsent.Text = ":" + countmortotalabsent.ToString();
                lbleveabsent.Text = ":" + countevetotalabsent.ToString();

                /////////////////
                counttotalabsent = countmortotalabsent + countevetotalabsent;
                counttotalabsent = counttotalabsent / 2;
                lblontime.Text = ":" + countintime.ToString();
                Lblgracetime.Text = ":" + countgracetime.ToString();

                ///////////////////////////

                // lbltotalabsent.Text = ":" + Convert.ToDouble(counttotalabsent);

            }
        }
        return "";


        dr10.Close();
        mycon1.Close();



    }

    public string getfunction(string sql1)
    {
        string sqlstr;
        sqlstr = sql1;
        mycon.Close();
        mycon.Open();
        SqlCommand cmd10 = new SqlCommand(sqlstr, mycon);
        SqlDataReader dr11;
        dr11 = cmd10.ExecuteReader();
        dr11.Read();
        if (dr11.HasRows == true)
        {
            string gettimein = "";
            gettimein = dr11["holiday"].ToString();
            return gettimein;
        }
        else
        {
            return "";
        }


    }

    public string gettimeout(string sql24)
    {
        string sqlout;
        sqlout = sql24;
        mycon.Close();
        mycon.Open();
        SqlCommand cmd24 = new SqlCommand(sqlout, mycon);
        SqlDataReader dr24;
        dr24 = cmd24.ExecuteReader();
        dr24.Read();
        if (dr24.HasRows == true)
        {
            string getouttime = "";
            getouttime = dr24["outtime"].ToString();
            return getouttime;
        }
        else
        {
            return "";
        }
    }

    public string getgracetimefunction(string sql2)
    {
        string sqlgrace;
        sqlgrace = sql2;
        mycon.Close();
        mycon.Open();
        SqlCommand cmd11 = new SqlCommand(sqlgrace, mycon);
        SqlDataReader dr11;
        dr11 = cmd11.ExecuteReader();
        dr11.Read();
        if (dr11.HasRows == true)
        {
            string getgracetime = "";
            getgracetime = dr11["gracetime"].ToString();
            return getgracetime;
        }
        else
        {
            return "";
        }


    }

    public string getlatetimefunction(string sql3)
    {
        string sqllate;

        sqllate = sql3;
        mycon.Close();
        mycon.Open();
        SqlCommand cmd12 = new SqlCommand(sqllate, mycon);
        SqlDataReader dr12;
        dr12 = cmd12.ExecuteReader();
        dr12.Read();
        if (dr12.HasRows == true)
        {
            string getlatetime = "";
            getlatetime = dr12["latetime"].ToString();
            return getlatetime;
        }
        else
        {
            return "";
        }


    }

    public string getextendtimefunction(string sql4)
    {
        string sqlextend;
        sqlextend = sql4;
        mycon.Close();
        mycon.Open();
        SqlCommand cmd13 = new SqlCommand(sqlextend, mycon);
        SqlDataReader dr13;
        dr13 = cmd13.ExecuteReader();
        dr13.Read();
        if (dr13.HasRows == true)
        {
            string getextend = "";
            getextend = dr13["extendgracetime"].ToString();
            return getextend;
        }
        else
        {
            return "";
        }
    }

    public string getlunchtime(string sql7)
    {
        string sqllun;
        sqllun = sql7;
        mycon.Close();
        mycon.Open();
        SqlCommand cmd17 = new SqlCommand(sqllun, mycon);
        SqlDataReader dr17;
        dr17 = cmd17.ExecuteReader();
        dr17.Read();
        if (dr17.HasRows == true)
        {
            string getlunch = "";
            getlunch = dr17["lunch"].ToString();
            return getlunch;
        }
        else
        {
            return "";
        }
    }

    public string getpertime(string sql8)
    {
        string sqlpertime;
        sqlpertime = sql8;
        mycon.Close();
        mycon.Open();
        SqlCommand cmd18 = new SqlCommand(sqlpertime, mycon);
        SqlDataReader dr18;
        dr18 = cmd18.ExecuteReader();
        dr18.Read();
        if (dr18.HasRows == true)
        {
            string getper = "";
            getper = dr18["permissiontime"].ToString();
            return getper;
        }
        else
        {
            return "";
        }
    }

    protected void cbodept_SelectedIndexChanged(object sender, EventArgs e)
    {

    }

    protected void rdodatebetween_CheckedChanged(object sender, EventArgs e)
    {



    }

    protected void rdomorning_CheckedChanged(object sender, EventArgs e)
    {
        if (rdomorning.Checked == true)
        {
            rdoevening.Checked = false;
            rdoall.Checked = false;
            rdoboth.Checked = false;
        }
    }

    protected void rdoevening_CheckedChanged(object sender, EventArgs e)
    {
        if (rdoevening.Checked == true)
        {
            rdoall.Checked = false;
            rdoboth.Checked = false;
            rdomorning.Checked = false;
        }
    }

    protected void rdoall_CheckedChanged(object sender, EventArgs e)
    {
        if (rdoall.Checked == true)
        {
            rdomorning.Checked = false;
            rdoevening.Checked = false;
            rdoboth.Checked = false;
        }
    }

    protected void TextBox2_TextChanged(object sender, EventArgs e)
    {
        //DateTime.Now.ToString();
    }

    protected void CheckBoxList1_SelectedIndexChanged(object sender, EventArgs e)
    {

    }

    protected void CheckBoxList1_SelectedIndexChanged1(object sender, EventArgs e)
    {

    }

    protected void cblBathYear_SelectedIndexChanged(object sender, EventArgs e)
    {

    }

    protected void rdoboth_CheckedChanged(object sender, EventArgs e)
    {
        if (rdoboth.Checked == true)
        {
            rdomorning.Checked = false;
            rdoevening.Checked = false;
            rdoall.Checked = false;
        }
    }
    //}
    protected void rdoinout_CheckedChanged(object sender, EventArgs e)
    {
        rdodaily.Checked = false;
        rdooutonly.Checked = false;
        rdoinonly.Checked = false;
        if (rdoinout.Checked == true)
        {
            rdoinout.Checked = true;
            //Label9.Visible = true;
            cbo_att.Visible = true;
            //chktimebwt.Visible = true;
            rdomorning.Enabled = false;
            rdoevening.Enabled = false;
            rdoboth.Enabled = true;
            rdoall.Enabled = true;
        }
        else
        {
            // Label9.Visible = false;
            cbo_att.Visible = false;
            rdoinout.Checked = false;
        }
        //added By Srinath 2/4/2013

        rdoboth.Checked = true;
        Chktimein.Enabled = true;
        Chktimeout.Enabled = true;
        cbo_att.Enabled = true;
        TextBox1.Enabled = true;
    }

    protected void chktimebwt_CheckedChanged(object sender, EventArgs e)
    {

        Chktimein.Visible = true;
        Chktimeout.Visible = true;



        Chktimein.Visible = false;
        Chktimeout.Visible = false;
        cbo_hour2.Visible = false;
        cbo_min2.Visible = false;
        cbo_hours.Visible = false;
        cbo_min.Visible = false;
        cbo_hrtin.Visible = false;
        cbo_hrinto.Visible = false;
        cbo_mintimein.Visible = false;
        cbo_mininto.Visible = false;
        cbointo.Visible = false;
        cbo_in.Visible = false;
        cbo_sec.Visible = false;
        cbo_sec2.Visible = false;
        lbltoutto.Visible = false;
        lblto.Visible = false;


    }

    protected void Txtentryto_TextChanged(object sender, EventArgs e)
    {
        //load_btnclick();
    }

    protected void Chktimein_CheckedChanged(object sender, EventArgs e)
    {
        if (Chktimein.Checked == true)
        {
            cbo_hrtin.Enabled = true;
            cbo_mintimein.Enabled = true;
            cbo_in.Enabled = true;
            cbo_hrinto.Enabled = true;
            cbo_mininto.Enabled = true;
            cbointo.Enabled = true;

            //Chktimeout.Enabled = false;
            // Chktimeout.Checked = false;
            // Requiredtimein.Visible = true;
        }
        else
        {
            cbo_hrtin.Enabled = false;
            cbo_mintimein.Enabled = false;
            cbo_in.Enabled = false;
            cbo_hrinto.Enabled = false;
            cbo_mininto.Enabled = false;
            cbointo.Enabled = false;
        }

    }

    protected void Chktimeout_CheckedChanged(object sender, EventArgs e)
    {
        if (Chktimeout.Checked == true)
        {



            cbo_hours.Enabled = true;
            cbo_min.Enabled = true;
            cbo_sec.Enabled = true;
            cbo_hour2.Enabled = true;
            cbo_min2.Enabled = true;
            cbo_sec2.Enabled = true;

        }
        else
        {
            cbo_hours.Enabled = false;
            cbo_min.Enabled = false;
            cbo_sec.Enabled = false;
            cbo_hour2.Enabled = false;
            cbo_min2.Enabled = false;
            cbo_sec2.Enabled = false;
        }

    }

    protected void cbodept_SelectedIndexChanged1(object sender, EventArgs e)
    {

    }

    protected void cbo_hour2_SelectedIndexChanged(object sender, EventArgs e)
    {

    }

    protected void cblblood_SelectedIndexChanged(object sender, EventArgs e)
    {

    }

    protected void tbblood_TextChanged(object sender, EventArgs e)
    {

    }

    protected void cbldepttype_SelectedIndexChanged(object sender, EventArgs e)
    {
        pseattype.Focus();

        int seatcount = 0;
        string value = "";
        string code = "";


        for (int i = 0; i < cbldepttype.Items.Count; i++)
        {
            if (cbldepttype.Items[i].Selected == true)
            {
                value = cbldepttype.Items[i].Text;
                code = cbldepttype.Items[i].Value.ToString();
                seatcount = seatcount + 1;
                tbseattype.Text = "Department(" + seatcount.ToString() + ")";
            }

        }

        if (seatcount == 0)
            tbseattype.Text = "---Select---";
        else
        {


        }
        seatcnt = seatcount;

        load_staffname();
        load_staffcode();//added by srinath
    }

    protected void cblcategory_SelectedIndexChanged(object sender, EventArgs e)
    {
        int bloodcount = 0;
        string value = "";
        string code = "";


        for (int i = 0; i < cblcategory.Items.Count; i++)
        {
            if (cblcategory.Items[i].Selected == true)
            {
                value = cblcategory.Items[i].Text;

                code = cblcategory.Items[i].Value.ToString();
                bloodcount = bloodcount + 1;
                tbblood.Text = "Category(" + bloodcount.ToString() + ")";
            }
        }
        if (bloodcount == 0)
        {
            tbblood.Text = "---Select---";
        }
        else
        {

        }
        bloodcnt = bloodcount;
        load_staffname();
        load_staffcode();//added by srinath

    }

    protected void tbseattype_TextChanged(object sender, EventArgs e)
    {

    }

    protected void rdodaily_CheckedChanged(object sender, EventArgs e)
    {
        rdoinout.Checked = false;
        if (rdodaily.Checked == true)
        {
            rdoinout.Checked = false;
            rdoinonly.Checked = false;
            rdooutonly.Checked = false;
            //added By Srinath 2/4/2013
            Chktimein.Enabled = false;
            Chktimein.Checked = false;
            Chktimeout.Enabled = false;
            Chktimeout.Checked = false;
            cbo_att.Enabled = false;
            cbo_hrtin.Enabled = false;
            cbo_mintimein.Enabled = false;
            cbo_in.Enabled = false;
            cbo_hrinto.Enabled = false;
            cbo_mininto.Enabled = false;
            cbointo.Enabled = false;
            rdomorning.Enabled = false;
            rdoevening.Enabled = false;
            rdoboth.Enabled = false;
            rdoall.Enabled = false;
            TextBox1.Enabled = false;
            rdomorning.Checked = false;
            rdoevening.Checked = false;
            rdoboth.Checked = false;
            rdoall.Checked = false;
        }
    }

    protected void CheckBoxselect_CheckedChanged(object sender, EventArgs e)
    {
        //if (CheckBoxselect.Checked == true)
        //{
        //    for (int i = 0; i < cblsearch.Items.Count; i++)
        //    {
        //        cblsearch.Items[i].Selected = true;
        //        LinkButtonsremove.Visible = true;
        //        ItemList.Add(cblsearch.Items[i].Text.ToString());
        //        Itemindex.Add(i.ToString());

        //    }
        //}
        //else
        //{
        //    for (int i = 0; i < cblsearch.Items.Count; i++)
        //    {
        //        cblsearch.Items[i].Selected = false;
        //        LinkButtonsremove.Visible = false;
        //        ItemList.Clear();
        //        Itemindex.Clear();
        //    }
        //}


    }

    protected void LinkButtonsremove_Click(object sender, EventArgs e)
    {
        cblsearch.ClearSelection();
        // CheckBoxselect.Checked = false;
        LinkButtonsremove.Visible = false;

        ItemList.Clear();
        Itemindex.Clear();
    }

    protected void cblsearch_SelectedIndexChanged1(object sender, EventArgs e)
    {
        //string value = "";
        //int index;


        //value = string.Empty;
        //string result = Request.Form["__EVENTTARGET"];
        //string[] checkedBox = result.Split('$');
        //index = int.Parse(checkedBox[checkedBox.Length - 1]);
        //if (cblsearch.Items[index].Selected)
        //{
        //    ItemList.Add(cblsearch.Items[index].Text.ToString());
        //    Itemindex.Add(index.ToString());
        //}
        //else
        //{
        //    ItemList.Remove(cblsearch.Items[index].Text.ToString());
        //    Itemindex.Remove(index.ToString());
        //}
        //LinkButtonsremove.Visible = true;
        ////tborder.Visible = true;
        ////tborder.Text = "";
        //for (int i = 0; i < ItemList.Count; i++)
        //{
        //    //tborder.Text = tborder.Text + ItemList[i].ToString();

        //    //tborder.Text = tborder.Text + "(" + (i + 1).ToString() + ")  ";

        //}
        //if (ItemList.Count == 0)
        //{
        //    //tborder.Visible = false;
        //    LinkButtonsremove.Visible = false;
        //}



    }

    protected void Txtstaffname_TextChanged(object sender, EventArgs e)
    {

    }

    protected void Txtstaffcode_TextChanged(object sender, EventArgs e)
    {

    }

    protected void DropDownListpage_SelectedIndexChanged(object sender, EventArgs e)
    {
        TextBoxother.Text = "";
        LabelE.Visible = false;
        if (DropDownListpage.Text == "Others")
        {

            TextBoxother.Visible = false;
            TextBoxother.Focus();

        }
        else
        {
            TextBoxother.Visible = false;
            fpbiomatric.Sheets[0].PageSize = Convert.ToInt16(DropDownListpage.Text.ToString());
            CalculateTotalPages();
        }
        fpbiomatric.CurrentPage = 0;
    }

    void CalculateTotalPages()
    {
        Double totalRows = 0;
        totalRows = Convert.ToInt32(fpbiomatric.Sheets[0].RowCount);
        Session["totalPages"] = (int)Math.Ceiling(totalRows / fpbiomatric.Sheets[0].PageSize);
        Buttontotal.Text = "Records : " + totalRows + "          Pages : " + Session["totalPages"];


        //Buttontotal.Visible = false;
    }

    protected void TextBoxother_TextChanged(object sender, EventArgs e)
    {
        if (TextBoxother.Text != "")
        {
            fpbiomatric.Sheets[0].PageSize = Convert.ToInt16(TextBoxother.Text.ToString());
            CalculateTotalPages();
        }
    }

    protected void TextBoxpage_TextChanged(object sender, EventArgs e)
    {
        if (TextBoxpage.Text.Trim() != "")
        {
            if (Convert.ToInt32(TextBoxpage.Text) > Convert.ToInt32(Session["totalPages"]))
            {
                LabelE.Visible = true;
                LabelE.Text = "Exceed The Page Limit";
                fpbiomatric.Visible = true;
                btnprintmaster.Visible = true;

                TextBoxpage.Text = "";
            }
            else if (Convert.ToInt16(TextBoxpage.Text) == 0)
            {
                LabelE.Visible = true;
                LabelE.Text = "Value should be grater than zero";
                //fpbiomatric.Visible = true;
                TextBoxpage.Text = "";
            }

            else
            {
                LabelE.Visible = false;
                fpbiomatric.CurrentPage = Convert.ToInt16(TextBoxpage.Text) - 1;
                fpbiomatric.Visible = true;
                btnprintmaster.Visible = true;
            }

        }
    }

    protected void late_Click(object sender, EventArgs e)
    {

    }

    protected void lblabsent_Click(object sender, EventArgs e)
    {

    }

    protected void lblpermission_Click(object sender, EventArgs e)
    {

    }

    protected void lblevngpermission_Click(object sender, EventArgs e)
    {

    }

    protected void lblood_Click(object sender, EventArgs e)
    {

    }

    protected void ImageButton2_Click(object sender, ImageClickEventArgs e)
    {

    }

    protected void rdoinonly_CheckedChanged(object sender, EventArgs e)
    {
        rdoinonly.Checked = true;
        rdoinout.Checked = false;
        rdoevening.Checked = false;
        if (rdoinonly.Checked == true)
        {
            rdoinonly.Checked = true;
            rdodaily.Checked = false;
            rdoinout.Checked = false;
            rdooutonly.Checked = false;

            rdomorning.Enabled = true;
            rdomorning.Checked = true;

            rdoboth.Checked = false;
            rdoevening.Enabled = false;
            rdoboth.Enabled = false;
            rdoall.Enabled = false;

        }
        else
        {
            rdoinonly.Checked = false;
        }
        rdomorning.Checked = true;
        rdoevening.Checked = false;
        rdoboth.Checked = false;
        rdoall.Checked = false;
        //added By Srinath 2/4/2013
        Chktimein.Enabled = true;
        Chktimeout.Enabled = true;
        cbo_att.Enabled = true;
        TextBox1.Enabled = true;
    }

    protected void rdooutonly_CheckedChanged(object sender, EventArgs e)
    {
        rdooutonly.Checked = true;
        rdoinout.Checked = false;
        if (rdooutonly.Checked == true)
        {
            rdooutonly.Checked = true;
            rdodaily.Checked = false;
            rdoinout.Checked = false;
            rdoinonly.Checked = false;

            rdomorning.Enabled = false;
            rdoevening.Enabled = true;
            rdoboth.Enabled = false;
            rdoall.Enabled = false;
        }
        else
        {
            rdooutonly.Checked = false;
        }
        //added By Srinath 2/4/2013
        rdoboth.Checked = false;
        Chktimein.Enabled = true;
        Chktimeout.Enabled = true;
        rdoevening.Checked = true;
        cbo_att.Enabled = true;
        TextBox1.Enabled = true;
    }

    protected void Imgeveper_Click(object sender, ImageClickEventArgs e)
    {
        Str = " and right(att,4)='-PER'";
        Imglate.Visible = true;
        Imgeveper.Visible = true;
        Imgmorper.Visible = true;
        Imgood.Visible = true;
        TextBoxother.Visible = false;
        TextBoxother.Text = "";
        load_btnclick();
        if (fpbiomatric.Sheets[0].RowCount == 0)
        {
            fpbiomatric.Visible = false;
            fpbiomatric.Visible = false;

            Buttontotal.Visible = false;
            Buttontotal.Visible = false;
            DropDownListpage.Visible = false;
            TextBoxpage.Visible = false;
            lblrecord.Visible = false;
            lblrecord.Visible = false;
            lblpage.Visible = false;
            Panel2.Visible = false;
            lblnorec.Visible = true;
        }

    }

    protected void Imgmorper_Click(object sender, ImageClickEventArgs e)
    {
        Str = " and left(att,4)='PER-'";
        Imglate.Visible = true;
        Imgeveper.Visible = true;
        Imgmorper.Visible = true;
        Imgood.Visible = true;

        TextBoxother.Visible = false;
        TextBoxother.Text = "";
        load_btnclick();
        if (fpbiomatric.Sheets[0].RowCount == 0)
        {
            fpbiomatric.Visible = false;
            fpbiomatric.Visible = false;

            Buttontotal.Visible = false;
            Buttontotal.Visible = false;
            DropDownListpage.Visible = false;
            TextBoxpage.Visible = false;
            lblrecord.Visible = false;
            lblrecord.Visible = false;
            lblpage.Visible = false;
            Panel2.Visible = false;
            lblnorec.Visible = true;
        }

    }

    protected void Imglate_Click(object sender, ImageClickEventArgs e)
    {
        Str = Str = " and left(att,3)='LA-'";
        Imglate.Visible = true;
        Imgeveper.Visible = true;
        Imgmorper.Visible = true;
        Imgood.Visible = true;
        TextBoxother.Visible = false;
        TextBoxother.Text = "";

        load_btnclick();
        if (fpbiomatric.Sheets[0].RowCount == 0)
        {
            fpbiomatric.Visible = false;
            fpbiomatric.Visible = false;

            Buttontotal.Visible = false;
            Buttontotal.Visible = false;
            DropDownListpage.Visible = false;
            TextBoxpage.Visible = false;
            lblrecord.Visible = false;
            lblrecord.Visible = false;
            lblpage.Visible = false;
            Panel2.Visible = false;
            lblnorec.Visible = true;
        }

    }

    protected void Imgood_Click2(object sender, ImageClickEventArgs e)
    {
        Imglate.Visible = true;
        Imgeveper.Visible = true;
        Imgmorper.Visible = true;
        Imgood.Visible = true;
        Str = " and left(att,4)='OOD-'";
        TextBoxother.Visible = false;
        TextBoxother.Text = "";
        load_btnclick();
        if (fpbiomatric.Sheets[0].RowCount == 0)
        {
            fpbiomatric.Visible = false;
            btnprintmaster.Visible = false;

            Buttontotal.Visible = false;
            Buttontotal.Visible = false;
            DropDownListpage.Visible = false;
            TextBoxpage.Visible = false;
            lblrecord.Visible = false;
            lblrecord.Visible = false;
            lblpage.Visible = false;
            Panel2.Visible = false;
            lblnorec.Visible = true;
        }
    }

    protected void tborder_TextChanged(object sender, EventArgs e)
    {

    }

    protected void ImageButton1_Click(object sender, ImageClickEventArgs e)
    {
        // fpbiomatric.CommandBar.Visible = false;
        FarPoint.Web.Spread.StyleInfo darkStyle = new FarPoint.Web.Spread.StyleInfo();
        darkStyle.Font.Bold = true;
        darkStyle.Font.Size = FontUnit.Medium;
        darkStyle.Font.Name = "Book Antiqua";
        darkStyle.HorizontalAlign = HorizontalAlign.Center;
        darkStyle.ForeColor = Color.Black;
        darkStyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
        fpbiomatric.Sheets[0].PageSize = 10;
        fpbiomatric.Pager.Position = FarPoint.Web.Spread.PagerPosition.Bottom;
        fpbiomatric.Pager.Mode = FarPoint.Web.Spread.PagerMode.Both;
        fpbiomatric.Pager.Align = HorizontalAlign.Right;
        fpbiomatric.Sheets[0].SheetCorner.Cells[0, 0].Text = "S.No";
        fpbiomatric.Pager.Font.Bold = true;
        fpbiomatric.Pager.Font.Name = "Arial";
        fpbiomatric.Pager.ForeColor = Color.DarkGreen;
        fpbiomatric.Pager.BackColor = ColorTranslator.FromHtml("#0CA6CA");
        fpbiomatric.Pager.PageCount = 5;
        fpbiomatric.Sheets[0].ColumnHeader.DefaultStyle = darkStyle;
        fpbiomatric.Sheets[0].SetColumnWidth(0, 90);
        fpbiomatric.Sheets[0].SetColumnWidth(1, 200);
        fpbiomatric.Sheets[0].SetColumnWidth(2, 200);
        fpbiomatric.Sheets[0].SetColumnWidth(3, 150);
        fpbiomatric.Sheets[0].SetColumnWidth(4, 200);

        cblsearch.Visible = true;
        //  CheckBoxselect.Visible = true;
        Panel1.Visible = true;
        Panel2.Visible = true;
        cblsearch.Visible = true;
        // CheckBoxselect.Visible = true;
        // Imgselectall.Visible = true;
        // Image8.Visible = true;


        Buttontotal.Visible = false;
        DropDownListpage.Visible = false;
        TextBoxpage.Visible = false;
        lblrecord.Visible = false;
        lblrecord.Visible = false;
        lblpage.Visible = false;
        Imgeveper.Visible = true;
        //  btpresent.Visible = false;
        //  btnabsent.Visible = true;
        // lbltotalabsent.Visible = true;
        Lblgracetime.Visible = true;
        btnontime.Visible = true;
        // btngrace.Visible = true;
        lblontime.Visible = true;
        btngracetime.Visible = true;
        // lbltottalpresent.Visible = false;
        Imgmorper.Visible = true;
        Imglate.Visible = true;
        late.Visible = true;
        Imgood.Visible = true;
        //lbldate.Visible = true;  //Modified by Manikandan 09/05/2013
        lblevngpermission.Visible = true;
        lblood.Visible = true;
        lblpermission.Visible = true;
        lblne.Visible = false;


        btnmorabsent.Visible = true;
        btneveabsent.Visible = true;
        btnevepresent.Visible = true;
        btnmorabsent.Visible = true;
        lblmorpresent.Visible = true;
        lblevepresent.Visible = true;
        lblevepresent.Visible = true;
        lbleveabsent.Visible = true;
        lblmorabsent.Visible = true;
        btnmorpresent.Visible = true;
        btnmorpresent.Visible = true;
        if (rbdailylog.Checked == true)
        {
            loaddailylog();
        }
        else
        {
            load_btnclick();
        }
        //load_btnclick();
        CalculateTotalPages();

    }

    protected void btpresent_Click(object sender, EventArgs e)
    {
        //Str = " and (att like 'P-%' or att like 'PER-%' or att like 'LA-%' or att like 'OOD-%') and   (att like '%-P' or att like '%-PER' or att like '%-LA' or att like '%-OOD')";

    }

    protected void btnabsent_Click(object sender, EventArgs e)
    {


    }

    protected void btngrace_Click(object sender, EventArgs e)
    {

    }

    protected void btnontime_Click(object sender, EventArgs e)
    {

    }

    protected void btpresent_Click1(object sender, ImageClickEventArgs e)
    {
        //Str = " and (att  like 'P-%' and att not like 'PER-%' and att not like 'LA-%' and  att not like 'OOD-%') and   (att not  like '%-P' or att not like '%-PER' or att not like '%-LA' or att not like '%-OOD')";

        Str = " and att like '%P%'";
        load_btnclick();

    }

    protected void btnabsent_Click1(object sender, ImageClickEventArgs e)
    {
        // Str = " and (att not like 'P-%' and att not like 'PER-%' and att not like 'LA-%' and  att not like 'OOD-%') and   (att not  like '%-P' or att not like '%-PER' or att not like '%-LA' or att not like '%-OOD')";
        Str = " and  att like '%A%'";
        //Str = "and (att not like 'P-%' or att  like 'PER-%' or att like 'LA-%' or  att not like 'OOD-%') and   (att not  like '%-P' or att  like '%-PER' or att  like '%-LA' or att like '%-OOD')";
        // Str = " and att like '%A%'";
        load_btnclick();

    }

    protected void btnontime_Click(object sender, ImageClickEventArgs e)
    {
        Generalflag = false;
        ontimeflag = true;

        load_btnclick();
    }

    protected void btngrace_Click(object sender, ImageClickEventArgs e)
    {


    }

    protected void ImageButton4_Click(object sender, ImageClickEventArgs e)
    {

    }

    protected void btngracetime_Click(object sender, ImageClickEventArgs e)
    {
        Generalflag = false;
        gracetimeflag = true;

        load_btnclick();
    }

    protected void cbostaffcode_SelectedIndexChanged(object sender, EventArgs e)
    {

    }

    protected void chkselect_CheckedChanged(object sender, EventArgs e)
    {
        if (chkselect.Checked == true)
        {
            for (int i = 0; i < cbldepttype.Items.Count; i++)
            {
                cbldepttype.Items[i].Selected = true;
                tbseattype.Text = "Department(" + (cbldepttype.Items.Count) + ")";
            }
        }
        else
        {
            for (int i = 0; i < cbldepttype.Items.Count; i++)
            {
                cbldepttype.Items[i].Selected = false;
                tbseattype.Text = "---Select---";
            }
        }
        load_staffname();
        load_staffcode();//added by srinath
    }

    protected void chkcategory_CheckedChanged(object sender, EventArgs e)
    {
        if (chkcategory.Checked == true)
        {
            for (int i = 0; i < cblcategory.Items.Count; i++)
            {
                cblcategory.Items[i].Selected = true;
                tbblood.Text = "Category(" + (cblcategory.Items.Count) + ")";
            }
        }
        else
        {
            for (int i = 0; i < cblcategory.Items.Count; i++)
            {
                cblcategory.Items[i].Selected = false;
                tbblood.Text = "---Select---";
            }
        }


    }

    protected void btnmorpresent_Click(object sender, ImageClickEventArgs e)
    {
        Str = " and left(att,2)='P-'";

        Imglate.Visible = true;
        Imgeveper.Visible = true;
        Imgmorper.Visible = true;
        Imgood.Visible = true;
        TextBoxother.Visible = false;
        TextBoxother.Text = "";

        load_btnclick();
        if (fpbiomatric.Sheets[0].RowCount == 0)
        {
            fpbiomatric.Visible = false;
            btnprintmaster.Visible = false;

            Buttontotal.Visible = false;
            Buttontotal.Visible = false;
            DropDownListpage.Visible = false;
            TextBoxpage.Visible = false;
            lblrecord.Visible = false;
            lblrecord.Visible = false;
            lblpage.Visible = false;
            Panel2.Visible = false;
            lblnorec.Visible = true;

            btnmorabsent.Visible = false;
            btneveabsent.Visible = false;
            btnevepresent.Visible = false;
            btnmorabsent.Visible = false;
            lblmorpresent.Visible = false;
            lblevepresent.Visible = false;
            lblevepresent.Visible = false;
            lbleveabsent.Visible = false;
            lblmorabsent.Visible = false;
        }
    }

    protected void btnevepresent_Click(object sender, ImageClickEventArgs e)
    {
        Str = " and Right(att,2)='-P'";

        Imglate.Visible = true;
        Imgeveper.Visible = true;
        Imgmorper.Visible = true;
        Imgood.Visible = true;
        TextBoxother.Visible = false;
        TextBoxother.Text = "";

        load_btnclick();
        if (fpbiomatric.Sheets[0].RowCount == 0)
        {
            fpbiomatric.Visible = false;
            btnprintmaster.Visible = false;

            Buttontotal.Visible = false;
            Buttontotal.Visible = false;
            DropDownListpage.Visible = false;
            TextBoxpage.Visible = false;
            lblrecord.Visible = false;
            lblrecord.Visible = false;
            lblpage.Visible = false;
            Panel2.Visible = false;
            lblnorec.Visible = true;

            btnmorabsent.Visible = false;
            btneveabsent.Visible = false;
            btnevepresent.Visible = false;
            btnmorabsent.Visible = false;
            lblmorpresent.Visible = false;
            lblevepresent.Visible = false;
            lblevepresent.Visible = false;
            lbleveabsent.Visible = false;
            lblmorabsent.Visible = false;
        }

    }

    protected void btnmorabsent_Click(object sender, ImageClickEventArgs e)
    {
        Str = " and left(att,2)='A-'";

        Imglate.Visible = true;
        Imgeveper.Visible = true;
        Imgmorper.Visible = true;
        Imgood.Visible = true;
        TextBoxother.Visible = false;
        TextBoxother.Text = "";

        load_btnclick();
        if (fpbiomatric.Sheets[0].RowCount == 0)
        {
            fpbiomatric.Visible = false;
            btnprintmaster.Visible = false;

            Buttontotal.Visible = false;
            Buttontotal.Visible = false;
            DropDownListpage.Visible = false;
            TextBoxpage.Visible = false;
            lblrecord.Visible = false;
            lblrecord.Visible = false;
            lblpage.Visible = false;
            Panel2.Visible = false;
            lblnorec.Visible = true;

            btnmorabsent.Visible = false;
            btneveabsent.Visible = false;
            btnevepresent.Visible = false;
            btnmorabsent.Visible = false;
            lblmorpresent.Visible = false;
            lblevepresent.Visible = false;
            lblevepresent.Visible = false;
            lbleveabsent.Visible = false;
            lblmorabsent.Visible = false;
        }
    }

    protected void btneveabsent_Click(object sender, ImageClickEventArgs e)
    {
        Str = " and Right(att,2)='-A'";

        Imglate.Visible = true;
        Imgeveper.Visible = true;
        Imgmorper.Visible = true;
        Imgood.Visible = true;
        TextBoxother.Visible = false;
        TextBoxother.Text = "";

        load_btnclick();
        if (fpbiomatric.Sheets[0].RowCount == 0)
        {
            fpbiomatric.Visible = false;
            btnprintmaster.Visible = false;

            Buttontotal.Visible = false;
            Buttontotal.Visible = false;
            DropDownListpage.Visible = false;
            TextBoxpage.Visible = false;
            lblrecord.Visible = false;
            lblrecord.Visible = false;
            lblpage.Visible = false;
            Panel2.Visible = false;
            lblnorec.Visible = true;

            btnmorabsent.Visible = false;
            btneveabsent.Visible = false;
            btnevepresent.Visible = false;
            btnmorabsent.Visible = false;
            lblmorpresent.Visible = false;
            lblevepresent.Visible = false;
            lblevepresent.Visible = false;
            lbleveabsent.Visible = false;
            lblmorabsent.Visible = false;
        }
    }

    protected void btnprint_Click(object sender, EventArgs e)
    {
        string appPath = HttpContext.Current.Server.MapPath("~");//modified by srinath 8/1/13
        string print = "";
        if (appPath != "")
        {
            int i = 1;
            appPath = appPath.Replace("\\", "/");
        e:
            try
            {
                print = "InAndOutTimeReport" + i;
                //fpbiomatric.SaveExcel(appPath + "/Report/" + print + ".xls", FarPoint.Web.Spread.Model.IncludeHeaders.BothCustomOnly); //Print the sheet
                //Aruna on 26feb2013============================
                string szPath = appPath + "/Report/";
                string szFile = print + ".xls"; // + DateTime.Now.ToString("yyyyMMddHHmmss")

                fpbiomatric.SaveExcel(szPath + szFile, FarPoint.Web.Spread.Model.IncludeHeaders.ColumnHeadersCustomOnly);
                Response.Clear();
                Response.ClearHeaders();
                Response.ClearContent();
                Response.AddHeader("Content-Disposition", "attachment; filename=" + szFile);
                Response.ContentType = "application/vnd.ms-excel";
                Response.Flush();
                Response.WriteFile(szPath + szFile);
                //=============================================

            }
            catch
            {
                i++;
                goto e;

            }
            //ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('" + print + ".xls" + " saved in" + " " + appPath + "/Report" + " successfully')", true);
        }
    }

    protected void cbostaffname_SelectedIndexChanged(object sender, EventArgs e)
    {

    }

    //Added By Srinath 3/4/2013
    protected void rdounreg_CheckedChanged(object sender, EventArgs e)
    {
        //added By Srinath 2/4/2013
        Chktimein.Enabled = false;
        Chktimeout.Enabled = false;
        //cbo_att.Enabled = false;
        Chktimeout.Checked = false;
        Chktimein.Checked = false;
        Chktimein.Enabled = false;
        Chktimein.Checked = false;
        Chktimeout.Enabled = false;
        Chktimeout.Checked = false;
        cbo_att.Enabled = true;
        cbo_hrtin.Enabled = false;
        cbo_mintimein.Enabled = false;
        cbo_in.Enabled = false;
        cbo_hrinto.Enabled = false;
        cbo_mininto.Enabled = false;
        cbointo.Enabled = false;
        rdomorning.Enabled = false;
        rdoevening.Enabled = false;
        rdoboth.Enabled = false;
        rdoall.Enabled = false;
        TextBox1.Enabled = false;
        rdoevening.Checked = false;
        rdomorning.Checked = false;
        rdoboth.Checked = false;
        rdoall.Checked = false;

    }

    protected void rdoboth1_CheckedChanged(object sender, EventArgs e)
    {
        //added By Srinath 3/4/2013
        Chktimein.Enabled = false;
        Chktimeout.Enabled = false;
        //cbo_att.Enabled = false;
        Chktimeout.Checked = false;
        Chktimein.Checked = false;
        Chktimein.Enabled = false;
        Chktimein.Checked = false;
        Chktimeout.Enabled = false;
        Chktimeout.Checked = false;
        cbo_att.Enabled = true;
        cbo_hrtin.Enabled = false;
        cbo_mintimein.Enabled = false;
        cbo_in.Enabled = false;
        cbo_hrinto.Enabled = false;
        cbo_mininto.Enabled = false;
        cbointo.Enabled = false;
        rdomorning.Enabled = true;
        rdoevening.Enabled = true;
        rdoboth.Enabled = true;
        rdoall.Enabled = true;
        TextBox1.Enabled = true;
        rdoboth.Checked = true;
        rdomorning.Checked = false;
        rdoevening.Checked = false;
        rdoall.Checked = false;
    }

    protected void btnprintmaster_Click(object sender, EventArgs e)
    {
        string degreedetails = string.Empty;

        if (rdodaily.Checked == true)
        {
            Session["column_header_row_count"] = 1;
        }
        else
        {
            Session["column_header_row_count"] = 2;
        }
        string lbl_leave_msg = string.Empty;


        //if (cbo_att.SelectedItem.Text == "All")
        //{
        //    lbl_leave_msg = "Daily Attendance Report";
        //}=====================================================================================
        if (TextBox1.Text == "---Select---")
        {
            lbl_leave_msg = "Daily Attendance Report";
        }
        else if (cbo_att.SelectedItem.Text == "P")
        {
            lbl_leave_msg = "Present Report";
        }
        else if (cbo_att.SelectedItem.Text == "A")
        {
            lbl_leave_msg = "Absent Report";
        }
        else if (cbo_att.SelectedItem.Text == "PER")
        {
            lbl_leave_msg = "Permission Report";
        }
        else if (cbo_att.SelectedItem.Text == "LA")
        {
            lbl_leave_msg = "Late Report";
        }
        else if (cbo_att.SelectedItem.Text == "CL")
        {
            lbl_leave_msg = "Casual Report";
        }
        else if (cbo_att.SelectedItem.Text == "COM")
        {
            lbl_leave_msg = "Common Leave Report";
        }
        else if (cbo_att.SelectedItem.Text == "COMP")
        {
            lbl_leave_msg = "Compensation Report";
        }
        else if (cbo_att.SelectedItem.Text == "ED")
        {
            lbl_leave_msg = "Exam Duty Report";
        }
        else if (cbo_att.SelectedItem.Text == "EL")
        {
            lbl_leave_msg = "Earn Leave Report";
        }
        else if (cbo_att.SelectedItem.Text == "LOP")
        {
            lbl_leave_msg = "Loss Of Pay Report";
        }
        else if (cbo_att.SelectedItem.Text == "OD")
        {
            lbl_leave_msg = "On Duty Report";
        }
        else if (cbo_att.SelectedItem.Text == "ODE")
        {
            lbl_leave_msg = "On Duty Exam Report";
        }
        else if (cbo_att.SelectedItem.Text == "VC")
        {
            lbl_leave_msg = "Vacation Report";
        }
        else if (cbo_att.SelectedItem.Text == "WO")
        {
            lbl_leave_msg = "Weekly Off Report";
        }
        if (rdomorning.Checked == true)
        {
            lbl_leave_msg_1 = "Morning " + lbl_leave_msg;
        }
        else if (rdoevening.Checked == true)
        {
            lbl_leave_msg_1 = "Evening " + lbl_leave_msg;
        }
        else if (rdoboth.Checked == true)
        {
            lbl_leave_msg_1 = "Morning & Evening " + lbl_leave_msg;
        }
        else if (rdoall.Checked == true)
        {
            lbl_leave_msg_1 = lbl_leave_msg;
        }
        //if (cbo_att.SelectedItem.Text == "All")
        //{
        //    lbl_leave_msg_1 = "Daily Attendance Report";
        //}=====================================================================================
        string printda = "Printed Date and Time : " + DateTime.Now.ToString("dd/MM/yyyy") + " " + DateTime.Now.ToShortTimeString();
        degreedetails = lbl_leave_msg_1 + "@" + "From :" + Txtentryfrom.Text.ToString() + " To :" + Txtentryto.Text.ToString() + "@" + printda;
        string pagename = "BioMatric_new.aspx";
        Printcontrol.loadspreaddetails(fpbiomatric, pagename, degreedetails);
        Printcontrol.Visible = true;

    }

    protected void txt_desig_TextChanged(object sender, EventArgs e)
    {

    }

    protected void chk_desig_ChekedChanged(object sender, EventArgs e)
    {
        int tmp = 0;
        if (chk_desig.Checked == true)
        {

            for (int i = 0; i < chklst_desig.Items.Count; i++)
            {
                tmp++;
                chklst_desig.Items[i].Selected = true;
                txt_desig.Text = "Designation(" + (tmp) + ")";

            }
        }
        else
        {
            for (int i = 0; i < chklst_desig.Items.Count; i++)
            {
                chklst_desig.Items[i].Selected = false;
                txt_desig.Text = "---Select---";
            }
        }
    }

    protected void chklst_desig_SelectedIndexChanged(object sender, EventArgs e)
    {
        pdesig.Focus();

        int degreecount = 0;
        string value = "";
        string code = "";


        for (int i = 0; i < chklst_desig.Items.Count; i++)
        {
            if (chklst_desig.Items[i].Selected == true)
            {

                value = chklst_desig.Items[i].Text;
                code = chklst_desig.Items[i].Value.ToString();
                degreecount = degreecount + 1;
                txt_desig.Text = "Designation(" + degreecount.ToString() + ")";
            }

        }
    }

    public void bind_designation()
    {
        con.Open();
        SqlCommand cmd_desig = new SqlCommand("select desig_code,desig_name from desig_master where collegecode='" + ddlcollege.SelectedValue.ToString() + "'", con);
        SqlDataAdapter da_desig = new SqlDataAdapter(cmd_desig);
        DataTable dt_desig = new DataTable();
        da_desig.Fill(dt_desig);
        con.Close();
        if (dt_desig.Rows.Count > 0)
        {
            chklst_desig.Items.Clear();
            chklst_desig.DataSource = dt_desig;
            chklst_desig.DataValueField = "desig_code";
            chklst_desig.DataTextField = "desig_name";
            chklst_desig.DataBind();
        }
    }

    protected void SelectAll_CheckedChanged(object sender, EventArgs e)
    {
        if (SelectAll.Checked == true)
        {
            for (int i = 0; i < cbo_att.Items.Count; i++)
            {
                cbo_att.Items[i].Selected = true;
                TextBox1.Text = "Leave(" + (cbo_att.Items.Count) + ")";
            }
        }
        else
        {
            for (int i = 0; i < cbo_att.Items.Count; i++)
            {
                cbo_att.Items[i].Selected = false;
                //cbo_att.Items[i + 3].Selected = true;
                TextBox1.Text = "---Select---";
            }
        }

    }

    protected void cbo_att_SelectedIndexChanged(object sender, EventArgs e)
    {
        int batchcount = 0;
        string value = "";
        string code = "";


        for (int i = 0; i < cbo_att.Items.Count; i++)
        {
            if (cbo_att.Items[i].Selected == true)
            {

                value = cbo_att.Items[i].Text;
                code = cbo_att.Items[i].Value.ToString();
                batchcount = batchcount + 1;
                TextBox1.Text = "Leave(" + batchcount.ToString() + ")";
            }

        }

        if (batchcount == 0)
            TextBox1.Text = "---Select---";
        else
        {
            Label lbl = batchlabel();
            lbl.Text = " " + value + " ";
            lbl.ID = "lbl1-" + code.ToString();
            ImageButton ib = batchimage();
            ib.ID = "imgbut1_" + code.ToString();
            ib.Click += new ImageClickEventHandler(batchimg_Click);
        }
        batchcnt = batchcount;
    }

    public void batchimg_Click(object sender, ImageClickEventArgs e)
    {
        batchcnt = batchcnt - 1;
        ImageButton b = sender as ImageButton;
        int r = Convert.ToInt32(b.CommandArgument);
        cbo_att.Items[r].Selected = false;
        TextBox1.Text = "Leave(" + batchcnt.ToString() + ")";
        if (TextBox1.Text == "Leave(0)")
        {
            TextBox1.Text = "---Select---";
        }
    }

    public Label batchlabel()
    {
        Label lbc = new Label();
        ViewState["lseatcontrol"] = true;
        return (lbc);
    }

    public ImageButton batchimage()
    {
        ImageButton imc = new ImageButton();
        imc.ImageUrl = "xb.jpeg";
        imc.Height = 9;
        imc.Width = 9;
        ViewState["iseatcontrol"] = true;
        return (imc);
    }

    protected void ddlcollege_SelectedIndexChanged(object sender, EventArgs e)
    {
        bind_designation();
        bindleave();
        load_staffname();
        load_staffcode();
        load_dept();
        load_category();
    }

    public void loaddailylog()
    {
        try
        {
            int sno = 0;
            lblnorec.Visible = false;
            fpbiomatric.Sheets[0].ColumnCount = 0;
            fpbiomatric.Sheets[0].RowCount = 0;
            fpbiomatric.Sheets[0].ColumnCount = 18;
            fpbiomatric.Sheets[0].SheetCorner.RowCount = 2;
            fpbiomatric.Sheets[0].SheetCorner.Cells[0, 0].Text = "S.No";
            fpbiomatric.Sheets[0].SheetCorner.Cells[0, 0].Text = "S.No";
            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Staff Code";
            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Staff Name";
            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Department";
            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Dept Acronym";
            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Designation";
            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Desig Acronym";
           
            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 7].Text = "Date Of Joinng";
            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 8].Text = "Category";
            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 9].Text = "Finger ID";
            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 10].Text = "Attendance  %";
            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 11].Text = "Working Days";
            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 12].Text = "P";
            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 13].Text = "A";
            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 14].Text = "LA";
            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 15].Text = "PER";
            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 16].Text = "OD";
            fpbiomatric.Sheets[0].ColumnHeader.Cells[0, 17].Text = "L";

            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 5, 2, 1);
            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 2, 1);
            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 7, 2, 1);
            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 8, 2, 1);
            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 9, 2, 1);
            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 10, 2, 1);
            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 11, 2, 1);
            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 12, 2, 1);
            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 13, 2, 1);
            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 14, 2, 1);
            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 15, 2, 1);
            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 16, 2, 1);
            fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, 17, 2, 1);

            fpbiomatric.ActiveSheetView.Columns[0].Font.Name = "Book Antiqua";
            fpbiomatric.ActiveSheetView.Columns[1].Font.Name = "Book Antiqua";
            fpbiomatric.ActiveSheetView.Columns[2].Font.Name = "Book Antiqua";
            fpbiomatric.ActiveSheetView.Columns[3].Font.Name = "Book Antiqua";
            fpbiomatric.ActiveSheetView.Columns[4].Font.Name = "Book Antiqua";
            fpbiomatric.ActiveSheetView.Columns[5].Font.Name = "Book Antiqua";
            fpbiomatric.ActiveSheetView.Columns[6].Font.Name = "Book Antiqua";
            fpbiomatric.ActiveSheetView.Columns[7].Font.Name = "Book Antiqua";
            fpbiomatric.ActiveSheetView.Columns[8].Font.Name = "Book Antiqua";
            fpbiomatric.ActiveSheetView.Columns[9].Font.Name = "Book Antiqua";
            fpbiomatric.ActiveSheetView.Columns[10].Font.Name = "Book Antiqua";
            fpbiomatric.ActiveSheetView.Columns[11].Font.Name = "Book Antiqua";
            fpbiomatric.ActiveSheetView.Columns[12].Font.Name = "Book Antiqua";
            fpbiomatric.ActiveSheetView.Columns[13].Font.Name = "Book Antiqua";
            fpbiomatric.ActiveSheetView.Columns[14].Font.Name = "Book Antiqua";
            fpbiomatric.ActiveSheetView.Columns[15].Font.Name = "Book Antiqua";
            fpbiomatric.ActiveSheetView.Columns[16].Font.Name = "Book Antiqua";
            fpbiomatric.ActiveSheetView.Columns[17].Font.Name = "Book Antiqua";


            fpbiomatric.ActiveSheetView.Columns[0].Font.Size = FontUnit.Medium;
            fpbiomatric.ActiveSheetView.Columns[1].Font.Size = FontUnit.Medium;
            fpbiomatric.ActiveSheetView.Columns[2].Font.Size = FontUnit.Medium;
            fpbiomatric.ActiveSheetView.Columns[3].Font.Size = FontUnit.Medium;
            fpbiomatric.ActiveSheetView.Columns[4].Font.Size = FontUnit.Medium;
            fpbiomatric.ActiveSheetView.Columns[5].Font.Size = FontUnit.Medium;
            fpbiomatric.ActiveSheetView.Columns[6].Font.Size = FontUnit.Medium;
            fpbiomatric.ActiveSheetView.Columns[7].Font.Size = FontUnit.Medium;
            fpbiomatric.ActiveSheetView.Columns[8].Font.Size = FontUnit.Medium;
            fpbiomatric.ActiveSheetView.Columns[9].Font.Size = FontUnit.Medium;
            fpbiomatric.ActiveSheetView.Columns[10].Font.Size = FontUnit.Medium;
            fpbiomatric.ActiveSheetView.Columns[11].Font.Size = FontUnit.Medium;
            fpbiomatric.ActiveSheetView.Columns[12].Font.Size = FontUnit.Medium;
            fpbiomatric.ActiveSheetView.Columns[13].Font.Size = FontUnit.Medium;
            fpbiomatric.ActiveSheetView.Columns[14].Font.Size = FontUnit.Medium;
            fpbiomatric.ActiveSheetView.Columns[15].Font.Size = FontUnit.Medium;
            fpbiomatric.ActiveSheetView.Columns[16].Font.Size = FontUnit.Medium;
            fpbiomatric.ActiveSheetView.Columns[17].Font.Size = FontUnit.Medium;

            fpbiomatric.Sheets[0].FrozenColumnCount = 3;
            fpbiomatric.ActiveSheetView.Columns[1].Visible = false;
            fpbiomatric.ActiveSheetView.Columns[2].Visible = false;
            fpbiomatric.ActiveSheetView.Columns[3].Visible = false;
            fpbiomatric.ActiveSheetView.Columns[4].Visible = false;
            fpbiomatric.ActiveSheetView.Columns[5].Visible = false;
            fpbiomatric.ActiveSheetView.Columns[6].Visible = false;
            fpbiomatric.ActiveSheetView.Columns[7].Visible = false;
            fpbiomatric.ActiveSheetView.Columns[8].Visible = false;
            if (cblsearch.Items[0].Selected == true)
            {
                fpbiomatric.ActiveSheetView.Columns[1].Visible = true;
            }
            if (cblsearch.Items[1].Selected == true)
            {
                fpbiomatric.ActiveSheetView.Columns[2].Visible = true;
            }
            if (cblsearch.Items[2].Selected == true)
            {
                fpbiomatric.ActiveSheetView.Columns[3].Visible = true;

            }
            if (cblsearch.Items[3].Selected == true)
            {
                fpbiomatric.ActiveSheetView.Columns[4].Visible = true;
            }
            if (cblsearch.Items[4].Selected == true)
            {
                fpbiomatric.ActiveSheetView.Columns[5].Visible = true;
            }
            if (cblsearch.Items[5].Selected == true)
            {
                fpbiomatric.ActiveSheetView.Columns[6].Visible = true;
            }
            if (cblsearch.Items[6].Selected == true)
            {
                fpbiomatric.ActiveSheetView.Columns[7].Visible = true;
            }
            if (cblsearch.Items[7].Selected == true)
            {
                fpbiomatric.ActiveSheetView.Columns[8].Visible = true;
            }
            if (cblsearch.Items[8].Selected == true)
            {
                fpbiomatric.ActiveSheetView.Columns[9].Visible = true;
            }
            fpbiomatric.Sheets[0].SetColumnWidth(0, 50);
            fpbiomatric.Sheets[0].SetColumnWidth(1, 150);
            fpbiomatric.Sheets[0].SetColumnWidth(2, 100);
            fpbiomatric.Sheets[0].SetColumnWidth(3, 100);
            fpbiomatric.Sheets[0].SetColumnWidth(4, 100);
            fpbiomatric.Sheets[0].SetColumnWidth(5, 100);
            fpbiomatric.Sheets[0].SetColumnWidth(6, 100);
            fpbiomatric.Sheets[0].SetColumnWidth(7, 70);
            fpbiomatric.Sheets[0].SetColumnWidth(8, 30);
            fpbiomatric.Sheets[0].SetColumnWidth(9, 50);
            fpbiomatric.Sheets[0].SetColumnWidth(10, 50);
            fpbiomatric.Sheets[0].SetColumnWidth(11, 50);
            fpbiomatric.Sheets[0].SetColumnWidth(12, 50);

            string desig = "";
            string desig_query = "";

            for (int cnt_desig = 0; cnt_desig < chklst_desig.Items.Count; cnt_desig++)
            {
                if (chklst_desig.Items[cnt_desig].Selected == true)
                {
                    if (desig == "")
                    {
                        desig = "'" + chklst_desig.Items[cnt_desig].Value + "'";
                    }
                    else
                    {
                        desig = desig + ",'" + chklst_desig.Items[cnt_desig].Value + "'";
                    }
                }
            }

            if (desig != "")
            {
                desig_query = " and st.desig_code in(" + desig + " ) ";
            }
            else
            {
                desig_query = "";
            }


            string dept = "";
            string deptquery = "";
            for (int cnt_desig = 0; cnt_desig < cbldepttype.Items.Count; cnt_desig++)
            {
                if (cbldepttype.Items[cnt_desig].Selected == true)
                {
                    if (dept == "")
                    {
                        dept = "'" + cbldepttype.Items[cnt_desig].Value + "'";
                    }
                    else
                    {
                        dept = dept + ",'" + cbldepttype.Items[cnt_desig].Value + "'";
                    }
                }
            }

            if (dept != "")
            {
                deptquery = " and st.dept_code in(" + dept + " ) ";
            }
            else
            {
                deptquery = "";
            }


            string cate = "";
            string catequery = "";
            for (int cnt_desig = 0; cnt_desig < cblcategory.Items.Count; cnt_desig++)
            {
                if (cblcategory.Items[cnt_desig].Selected == true)
                {
                    if (cate == "")
                    {
                        cate = "'" + cblcategory.Items[cnt_desig].Value + "'";
                    }
                    else
                    {
                        cate = cate + ",'" + cblcategory.Items[cnt_desig].Value + "'";
                    }
                }
            }

            if (cate != "")
            {
                catequery = " and st.category_code in(" + cate + " ) ";
            }
            else
            {
                catequery = "";
            }
            string staffcode = "";
            string staffname = "";
            if (cbostaffname.SelectedItem.Value.ToString() != "All")
            {
                staffname = " and sm.staff_name ='" + cbostaffname.SelectedItem.ToString() + "' ";
            }
            if (cbostaffcode.SelectedItem.Value.ToString() != "All")
            {
                staffcode = " and sm.staff_code ='" + cbostaffcode.Text + "' ";
            }

            Printcontrol.Visible = false;
            string[] sf = Txtentryfrom.Text.ToString().Split('/');
            DateTime dfr = Convert.ToDateTime(sf[1] + '/' + sf[0] + '/' + sf[2]);

            string[] st = Txtentryto.Text.ToString().Split('/');
            DateTime dto = Convert.ToDateTime(st[1] + '/' + st[0] + '/' + st[2]);
            Boolean flag = false;


            Dictionary<string, Double> dicstaff = new Dictionary<string, Double>();
            Dictionary<string, string> dicleave = new Dictionary<string, string>();
            Dictionary<string, string> dicleavetype = new Dictionary<string, string>();
            string collegecode = ddlcollege.SelectedValue.ToString();
            string Orderby = "";
            if (ddlorder.SelectedItem.Text.ToString() == "Priority")
            {
                Orderby = " order by hd.priority,dm.priority,hd.dept_name,sm.join_date,len(sm.staff_code),sm.staff_code ";
            }
            else
            {
                Orderby = " order by hd.dept_name,sm.join_date,len(sm.staff_code),sm.staff_code";
            }
            string getdegree = "";
            string strquery = "select sm.staff_code,sm.staff_name,hd.dept_acronym,convert(nvarchar(15),sm.join_date,103) as joindate,hd.dept_name,dm.desig_name,dm.desig_acronym,sc.category_name,CAST(Fingerprint1 as nvarchar) as Fingerprint1 from staffmaster sm,stafftrans st,hrdept_master hd,desig_master dm,staffcategorizer sc where st.staff_code=sm.staff_code and sm.resign=0 and sm.settled=0 and st.latestrec=1 and st.dept_code=hd.dept_code and st.desig_code=dm.desig_code and st.category_code=sc.category_code and sm.college_code=hd.college_Code and sm.college_Code=dm.collegeCode and sm.college_Code=sc.college_Code " + deptquery + desig_query + catequery + " " + staffname + " " + staffcode + " and sm.college_code='" + collegecode + "' " + Orderby + "";
            strquery = strquery + " ; select sm.staff_code,st.category_code,st.stftype,d.Log_Date,d.logtime,cast(d.logtime AS datetime) AS  actime from Daily_Logs d,staffmaster sm,stafftrans st where  st.staff_code=sm.staff_code and convert(nvarchar(15),sm.Fingerprint1)=convert(nvarchar(15),d.FingerID)  and sm.resign=0 and sm.settled=0 and st.latestrec=1 and sm.Fingerprint1 is not null   " + deptquery + catequery + desig_query + " " + staffname + " " + staffcode + " and d.log_date between '" + dfr.ToString("MM/dd/yyyy") + "' and '" + dto.ToString("MM/dd/yyyy") + "'  and sm.college_code='" + collegecode + "'  order by SM.staff_code,D.Log_Date,cast(d.logtime AS datetime) ";
            strquery = strquery + " ; select sa.*,sm.staff_code from staff_attnd sa,staffmaster sm ,stafftrans st where st.staff_code=sm.staff_code and st.staff_code=sa.staff_code and sm.staff_code=sa.staff_code and sm.resign=0 and sm.settled=0 and st.latestrec=1  " + deptquery + catequery + desig_query + " " + staffname + " " + staffcode + "  and sa.mon_year between '" + dfr.ToString("M/yyyy") + "' and '" + dto.ToString("M/yyyy") + "'  and sm.college_code='" + collegecode + "'";
            strquery = strquery + " ; select * from leave_category where shortname<>'Per' and shortname<>'la' and shortname<>'od' and shortname<>'ood' and college_code='" + collegecode + "'";
            strquery = strquery + " ; select category_code,StfType,college_code,intime,gracetime from in_out_time where college_code='" + collegecode + "'";
            DataSet ds = dacces2.select_method_wo_parameter(strquery, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                for (int l = 0; l < ds.Tables[3].Rows.Count; l++)
                {
                    string stracl = ds.Tables[3].Rows[l]["shortname"].ToString();
                    string status = ds.Tables[3].Rows[l]["status"].ToString();
                    //if (status == "comp")
                    //{
                    //    if (!dicleave.ContainsKey(stracl))
                    //    {
                    //        dicleave.Add(stracl, stracl);
                    //    }
                    //}
                    //else
                    //{
                    if (!dicleavetype.ContainsKey(stracl))
                    {
                        dicleavetype.Add(stracl, stracl);
                    }
                    //}
                }

                for (int stc = 0; stc < ds.Tables[0].Rows.Count; stc++)
                {
                    string scc = ds.Tables[0].Rows[stc]["staff_code"].ToString();
                    ds.Tables[1].DefaultView.RowFilter = " staff_code='" + scc + "' ";
                    DataView dvset = ds.Tables[1].DefaultView;
                    if (dvset.Count > 0)
                    {
                        sno += 1;
                        if (!dicstaff.ContainsKey(scc + "-P"))
                        {
                            dicstaff.Add(scc + "-P", 0);
                            dicstaff.Add(scc + "-A", 0);
                            dicstaff.Add(scc + "-LA", 0);
                            dicstaff.Add(scc + "-PER", 0);
                            dicstaff.Add(scc + "-od", 0);
                            dicstaff.Add(scc + "-l", 0);
                        }
                        string temprdegree = ds.Tables[0].Rows[stc]["dept_name"].ToString();
                        if (getdegree.Trim().ToLower() != temprdegree.Trim().ToLower())
                        {
                            getdegree = temprdegree;
                            fpbiomatric.Sheets[0].RowCount++;
                            int colst = 0;
                            //if (cblsearch.Items[0].Selected == false)
                            //{
                            //    colst = 1;
                            //}
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, colst].Text = temprdegree;
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, colst].Font.Bold = true;
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, colst].HorizontalAlign = HorizontalAlign.Center;
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, colst].VerticalAlign = VerticalAlign.Middle;
                            fpbiomatric.Sheets[0].Rows[fpbiomatric.Sheets[0].RowCount - 1].BackColor = Color.LightYellow;
                            fpbiomatric.Sheets[0].SpanModel.Add(fpbiomatric.Sheets[0].RowCount - 1, colst, 1, fpbiomatric.Sheets[0].ColumnCount);
                        }
                        fpbiomatric.Sheets[0].RowCount++;
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(sno);
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 1].Text = ds.Tables[0].Rows[stc]["staff_code"].ToString();
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 2].Text = ds.Tables[0].Rows[stc]["staff_name"].ToString();
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 3].Text = ds.Tables[0].Rows[stc]["dept_name"].ToString();
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 4].Text = ds.Tables[0].Rows[stc]["dept_acronym"].ToString();
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 5].Text = ds.Tables[0].Rows[stc]["desig_name"].ToString();
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 6].Text = ds.Tables[0].Rows[stc]["desig_acronym"].ToString();
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 7].Text = ds.Tables[0].Rows[stc]["joindate"].ToString();
                        fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 8].Text = ds.Tables[0].Rows[stc]["category_name"].ToString();
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 9].Text = ds.Tables[0].Rows[stc]["Fingerprint1"].ToString();
                            fpbiomatric.Sheets[0].Cells[fpbiomatric.Sheets[0].RowCount - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                    }
                }
                fpbiomatric.Visible = true;
                btnprintmaster.Visible = true;
                for (DateTime dt = dfr; dt <= dto; dt = dt.AddDays(1))
                {
                    string strnum = dacces2.GetFunction("select top 1 COUNT(*) as numrow,FingerID,Log_Date from Daily_Logs where convert(nvarchar(15),FingerID )in( select convert(nvarchar(15),sm.Fingerprint1) from staffmaster sm,stafftrans st,hrdept_master hd,desig_master dm,staffcategorizer sc where  st.staff_code=sm.staff_code and sm.resign=0 and sm.settled=0 and st.latestrec=1 and st.dept_code=hd.dept_code and st.desig_code=dm.desig_code and st.category_code=sc.category_code " + deptquery + desig_query + catequery + ")  and Log_Date='" + dt.ToString("MM/dd/yyyy") + "' group by FingerID,Log_Date order by numrow desc ");
                    if (strnum.Trim() != "" && strnum != null && strnum.Trim() != "0")
                    {
                        int colcou = Convert.ToInt32(strnum);
                        int stcol = fpbiomatric.Sheets[0].ColumnCount;
                        fpbiomatric.Sheets[0].ColumnCount = fpbiomatric.Sheets[0].ColumnCount + colcou + 3;
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[0, stcol].Text = dt.ToString("dd/MM/yyyy");
                        fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, stcol, 1, colcou + 3);
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, stcol].Text = "Time In";
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, stcol + 1].Text = "Time Out";
                        fpbiomatric.Sheets[0].ColumnHeader.Cells[1, stcol + 2].Text = "Working Hours";
                        int p = 0;
                        for (int h1 = 0; h1 < colcou; h1++)
                        {
                            p++;
                            fpbiomatric.Sheets[0].ColumnHeader.Cells[1, stcol + 3 + h1].Text = "Time In " + p + "";
                        }

                        for (int str = 0; str < fpbiomatric.Sheets[0].RowCount; str++)
                        {
                            string scode = fpbiomatric.Sheets[0].Cells[str, 1].Text.ToString();
                            ds.Tables[1].DefaultView.RowFilter = " staff_code='" + scode + "' and Log_Date='" + dt.ToString("MM/dd/yyyy") + "' ";
                            DataView dvset = ds.Tables[1].DefaultView;
                            if (dvset.Count > 0)
                            {
                                fpbiomatric.Sheets[0].Cells[str, stcol].Text = dvset[0]["logtime"].ToString();
                                if (dvset.Count > 1)
                                {
                                    fpbiomatric.Sheets[0].Cells[str, stcol + 1].Text = dvset[dvset.Count - 1]["logtime"].ToString();
                                    DateTime dtstrtime = Convert.ToDateTime(dvset[0]["actime"].ToString());
                                    DateTime dtendtime = Convert.ToDateTime(dvset[dvset.Count - 1]["actime"].ToString());
                                    TimeSpan ts = dtendtime - dtstrtime;
                                    Boolean stfflag = false;
                                    Boolean graceflag = false;
                                    string catecode = dvset[0]["category_code"].ToString();
                                    string stft = dvset[0]["stftype"].ToString();
                                    if (catecode.Trim() != "" && catecode != null)
                                    {
                                        ds.Tables[4].DefaultView.RowFilter = "category_code='" + catecode + "'";
                                        DataView dvgrav = ds.Tables[4].DefaultView;
                                        if (dvgrav.Count > 0)
                                        {
                                            stfflag = true;
                                            DateTime dtgrace = Convert.ToDateTime(dvgrav[0]["gracetime"].ToString());
                                            DateTime dtonti = Convert.ToDateTime(dvgrav[0]["intime"].ToString());
                                            if (dtstrtime <= dtgrace && dtstrtime > dtonti)
                                            {
                                                graceflag = true;
                                            }
                                        }
                                    }
                                    if (stfflag == false)
                                    {
                                        ds.Tables[4].DefaultView.RowFilter = "stftype='" + stft + "'";
                                        DataView dvgrav = ds.Tables[4].DefaultView;
                                        if (dvgrav.Count > 0)
                                        {
                                            stfflag = true;
                                            DateTime dtgrace = Convert.ToDateTime(dvgrav[0]["gracetime"].ToString());
                                            DateTime dtonti = Convert.ToDateTime(dvgrav[0]["intime"].ToString());
                                            if (dtstrtime <= dtgrace && dtstrtime > dtonti)
                                            {
                                                graceflag = true;
                                            }
                                        }
                                    }
                                    fpbiomatric.Sheets[0].Cells[str, stcol + 2].Text = ts.Hours.ToString() + " : " + ts.Minutes.ToString();
                                    ds.Tables[2].DefaultView.RowFilter = " staff_code='" + scode + "' and mon_year='" + dt.ToString("M/yyyy") + "' ";
                                    DataView dvatt = ds.Tables[2].DefaultView;
                                    if (dvatt.Count > 0)
                                    {
                                        string[] attval = dvatt[0][dt.Day.ToString()].ToString().Split('-');
                                        if (attval.GetUpperBound(0) >= 1)
                                        {
                                            string fhrs = scode + "-" + attval[0];
                                            string shrs = scode + "-" + attval[1];
                                            //if (dicleavetype.ContainsKey(attval[0]))
                                            //{
                                            //    fhrs = scode + "-P";

                                            //}
                                            //if (dicleavetype.ContainsKey(attval[1]))
                                            //{
                                            //    shrs = scode + "-P";
                                            //}

                                            //if (dicleave.ContainsKey(attval[0]))
                                            //{
                                            //    fhrs = scode + "-A";
                                            //}
                                            //if (dicleave.ContainsKey(attval[1]))
                                            //{
                                            //    shrs = scode + "-A";
                                            //}
                                            if (dicleavetype.ContainsKey(attval[0]))
                                            {
                                                fhrs = scode + "-l";

                                            }
                                            if (dicleavetype.ContainsKey(attval[1]))
                                            {
                                                shrs = scode + "-l";
                                            }
                                            if (attval[0].Trim().ToLower() == "od" || attval[0].Trim().ToLower() == "ood")
                                            {
                                                fhrs = scode + "-od";
                                            }
                                            if (attval[1].Trim().ToLower() == "od" || attval[1].Trim().ToLower() == "ood")
                                            {
                                                shrs = scode + "-od";
                                            }
                                            if (dicstaff.ContainsKey(fhrs))
                                            {
                                                Double set = dicstaff[fhrs];
                                                set = set + 0.5;
                                                dicstaff[fhrs] = set;
                                            }
                                            if (dicstaff.ContainsKey(shrs))
                                            {
                                                Double set = dicstaff[shrs];
                                                set = set + 0.5;
                                                dicstaff[shrs] = set;
                                            }
                                            // if (attval[0].Trim().ToLower() == "p" || dicleavetype.ContainsKey(attval[0].ToString()))
                                            if (attval[0].Trim().ToLower() == "p")
                                            {
                                                counttotalmorpresent = counttotalmorpresent + 1;
                                                if (graceflag == true)
                                                {
                                                    fpbiomatric.Sheets[0].Cells[str, stcol].BackColor = Color.Pink;
                                                    countgracetime = countgracetime + 1;
                                                }
                                                else
                                                {
                                                    fpbiomatric.Sheets[0].Cells[str, stcol].BackColor = Color.Green;
                                                    countintime = countintime + 1;
                                                }
                                            }
                                            // if (attval[1].Trim().ToLower() == "p" || dicleavetype.ContainsKey(attval[1].ToString()))
                                            if (attval[1].Trim().ToLower() == "p")
                                            {
                                                fpbiomatric.Sheets[0].Cells[str, stcol + 1].BackColor = Color.Green;
                                                counttotalevepresent = counttotalevepresent + 1;
                                                countintime = countintime + 1;
                                            }

                                            if (attval[0].Trim().ToLower() == "a" || dicleave.ContainsKey(attval[0].ToString()))
                                            {
                                                fpbiomatric.Sheets[0].Cells[str, stcol].BackColor = Color.Red;
                                                fpbiomatric.Sheets[0].Cells[str, stcol].Text = "A";
                                                countmortotalabsent = countmortotalabsent + 1;
                                            }
                                            if (attval[1].Trim().ToLower() == "a" || dicleave.ContainsKey(attval[1].ToString()))
                                            {
                                                fpbiomatric.Sheets[0].Cells[str, stcol + 1].BackColor = Color.Red;
                                                fpbiomatric.Sheets[0].Cells[str, stcol + 1].Text = "A";
                                                countevetotalabsent = countevetotalabsent + 1;
                                            }

                                            if (attval[0].Trim().ToLower() == "la")
                                            {
                                                fpbiomatric.Sheets[0].Cells[str, stcol].BackColor = Color.DarkRed;
                                                countmorlate = countmorlate + 1;
                                            }
                                            if (attval[1].Trim().ToLower() == "la")
                                            {
                                                fpbiomatric.Sheets[0].Cells[str, stcol + 1].BackColor = Color.DarkRed;
                                                countmorlate = countmorlate + 1;
                                            }
                                            if (attval[0].Trim().ToLower() == "per")
                                            {
                                                fpbiomatric.Sheets[0].Cells[str, stcol].BackColor = Color.Purple;
                                                countpereng = countpereng + 1;
                                            }
                                            if (attval[1].Trim().ToLower() == "per")
                                            {
                                                fpbiomatric.Sheets[0].Cells[str, stcol + 1].BackColor = Color.Chocolate;
                                                eveningpermission = eveningpermission + 1;
                                            }
                                            if (attval[0].Trim().ToLower() == "od" || attval[0].Trim().ToLower() == "ood")
                                            {
                                                fpbiomatric.Sheets[0].Cells[str, stcol].BackColor = Color.DarkSeaGreen;
                                                fpbiomatric.Sheets[0].Cells[str, stcol].Text = attval[0].ToString();
                                                countood = countood + 1;
                                            }
                                            if (attval[1].Trim().ToLower() == "od" || attval[1].Trim().ToLower() == "ood")
                                            {
                                                fpbiomatric.Sheets[0].Cells[str, stcol + 1].BackColor = Color.DarkSeaGreen;
                                                fpbiomatric.Sheets[0].Cells[str, stcol + 1].Text = attval[1].ToString();
                                                countood = countood + 1;
                                            }
                                            if (dicleavetype.ContainsKey(attval[0].ToString()))
                                            {
                                                fpbiomatric.Sheets[0].Cells[str, stcol].BackColor = Color.Red;
                                                fpbiomatric.Sheets[0].Cells[str, stcol].Text = attval[0].ToString();
                                                countmortotalabsent = countmortotalabsent + 1;
                                            }
                                            if (dicleavetype.ContainsKey(attval[1].ToString()))
                                            {
                                                fpbiomatric.Sheets[0].Cells[str, stcol + 1].BackColor = Color.Red;
                                                fpbiomatric.Sheets[0].Cells[str, stcol + 1].Text = attval[1].ToString();
                                                countevetotalabsent = countevetotalabsent + 1;
                                            }
                                            if (attval[0].Trim().ToLower() == "h")
                                            {
                                                fpbiomatric.Sheets[0].Cells[str, stcol].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                                                fpbiomatric.Sheets[0].Cells[str, stcol].Text = attval[0].ToString();
                                            }
                                            if (attval[1].Trim().ToLower() == "h")
                                            {
                                                fpbiomatric.Sheets[0].Cells[str, stcol + 1].BackColor = ColorTranslator.FromHtml("#0CA6CA");
                                                fpbiomatric.Sheets[0].Cells[str, stcol + 1].Text = attval[1].ToString();
                                            }

                                        }
                                    }
                                }
                                for (int dvs = 0; dvs < dvset.Count; dvs++)
                                {
                                    flag = true;
                                    fpbiomatric.Sheets[0].Cells[str, stcol + 3 + dvs].Text = dvset[dvs]["logtime"].ToString();
                                }
                            }
                        }

                    }

                }
                fpbiomatric.Sheets[0].ColumnCount++;
                fpbiomatric.Sheets[0].ColumnHeaderSpanModel.Add(0, fpbiomatric.Sheets[0].ColumnCount - 1, 2, 1);
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 1].Text = "Remarks";
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 1].Font.Bold = true;
                fpbiomatric.Sheets[0].ColumnHeader.Cells[0, fpbiomatric.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                for (int str = 0; str < fpbiomatric.Sheets[0].RowCount; str++)
                {
                    if (fpbiomatric.Sheets[0].Cells[str, 3].Text.Trim() != "")
                    {
                        string pstcode = fpbiomatric.Sheets[0].Cells[str, 1].Text.ToString() + "-P";
                        string astcode = fpbiomatric.Sheets[0].Cells[str, 1].Text.ToString() + "-A";
                        string lastcode = fpbiomatric.Sheets[0].Cells[str, 1].Text.ToString() + "-LA";
                        string perstcode = fpbiomatric.Sheets[0].Cells[str, 1].Text.ToString() + "-PER";
                        string odstaffcode = fpbiomatric.Sheets[0].Cells[str, 1].Text.ToString() + "-od";
                        string lestaffcode = fpbiomatric.Sheets[0].Cells[str, 1].Text.ToString() + "-l";
                        Double conhrs = 0;
                        Double pres = 0;
                        if (dicstaff.ContainsKey(pstcode))
                        {
                            Double val = dicstaff[pstcode];
                            fpbiomatric.Sheets[0].Cells[str, 12].Text = val.ToString();
                            conhrs = conhrs + val;
                            pres = pres + val;
                        }
                        if (dicstaff.ContainsKey(astcode))
                        {
                            Double val = dicstaff[astcode];
                            fpbiomatric.Sheets[0].Cells[str, 13].Text = val.ToString();
                            conhrs = conhrs + val;
                        }
                        if (dicstaff.ContainsKey(lastcode))
                        {
                            Double val = dicstaff[lastcode];
                            fpbiomatric.Sheets[0].Cells[str, 14].Text = val.ToString();
                            conhrs = conhrs + val;
                            pres = pres + val;
                        }
                        if (dicstaff.ContainsKey(perstcode))
                        {
                            Double val = dicstaff[perstcode];
                            fpbiomatric.Sheets[0].Cells[str, 15].Text = val.ToString();
                            conhrs = conhrs + val;
                            pres = pres + val;
                        }
                        if (dicstaff.ContainsKey(odstaffcode))
                        {
                            Double val = dicstaff[odstaffcode];
                            fpbiomatric.Sheets[0].Cells[str, 16].Text = val.ToString();
                            conhrs = conhrs + val;
                        }
                        if (dicstaff.ContainsKey(lestaffcode))
                        {
                            Double val = dicstaff[lestaffcode];
                            fpbiomatric.Sheets[0].Cells[str, 17].Text = val.ToString();
                            conhrs = conhrs + val;
                        }
                        Double attper = pres / conhrs * 100;
                        attper = Math.Round(attper, 2, MidpointRounding.AwayFromZero);
                        fpbiomatric.Sheets[0].Cells[str, 10].Text = attper.ToString();
                        fpbiomatric.Sheets[0].Cells[str, 11].Text = conhrs.ToString();
                        fpbiomatric.Sheets[0].Cells[str, 10].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].Cells[str, 11].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].Cells[str, 12].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].Cells[str, 13].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].Cells[str, 14].HorizontalAlign = HorizontalAlign.Center;
                        fpbiomatric.Sheets[0].Cells[str, 15].HorizontalAlign = HorizontalAlign.Center;
                    }
                }
            }
            if (flag == false)
            {
                fpbiomatric.Visible = false;
                btnprintmaster.Visible = false;
                lblnorec.Visible = true;
            }
            else
            {
                lblood.Text = ":" + countood.ToString();
                lblpermission.Text = ":" + countpereng;
                lblevngpermission.Text = ":" + eveningpermission;
                late.Text = ":" + countmorlate.ToString();
                counttotalpresent = counttotalevepresent + counttotalmorpresent;
                counttotalpresent = counttotalpresent / 2;
                lblmorpresent.Text = ":" + counttotalmorpresent.ToString();
                lblevepresent.Text = ":" + counttotalevepresent.ToString();
                lblmorabsent.Text = ":" + countmortotalabsent.ToString();
                lbleveabsent.Text = ":" + countevetotalabsent.ToString();
                lblontime.Text = ":" + countintime.ToString();
                Lblgracetime.Text = ":" + countgracetime.ToString();
            }
            fpbiomatric.Sheets[0].PageSize = fpbiomatric.Sheets[0].RowCount;
            MyClass ms = new MyClass();
            ms.Dispose();
            GC.SuppressFinalize(this);
            GC.Collect();
            GC.WaitForFullGCComplete();
        }
        catch
        {
        }

    }
}