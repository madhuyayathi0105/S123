using System;//----------------modified on 26/7/12(PRABHA)
using System.Collections;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using System.Data.SqlClient;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Net.Mail;
using System.Net;
using System.IO;
using Gios.Pdf;
using FarPoint.Web.Spread;
using System.Globalization;

public partial class salary1 : System.Web.UI.Page
{

    [Serializable()]

    public class MyImg : ImageCellType
    {
        public override Control PaintCell(String id, TableCell parent, FarPoint.Web.Spread.Appearance style, FarPoint.Web.Spread.Inset margin, object val, bool ul)
        {
            System.Web.UI.WebControls.Image img = new System.Web.UI.WebControls.Image();
            style.BackColor = Color.White;//Mani
            img.ImageUrl = this.ImageUrl; //base.ImageUrl;  
            img.Width = Unit.Percentage(55);
            img.Height = Unit.Percentage(55);
            return img;


        }
    }

    public object GetCorrespondingKey(object key, Hashtable hashTable)
    {
        IDictionaryEnumerator e = hashTable.GetEnumerator();
        while (e.MoveNext())
        {
            if (e.Key.ToString() == key.ToString())
            {
                return e.Value;
            }
        }

        return null;
    }
    //if (htpass.Contains(Convert.ToString(intCtr)))
    //                       {
    //                           long malecount = Convert.ToInt32(GetCorrespondingKey(Convert.ToString(intCtr), htpass));
    //                           malecount = malecount + LngMT;
    //                           htpass[Convert.ToString(intCtr)] = malecount;
    //                       }
    Hashtable splallow = new Hashtable();
    Hashtable allow = new Hashtable();
    ArrayList alleavetype = new ArrayList();
    Hashtable hatpre = new Hashtable();
    static string[] splallw_arry = new string[15];
    static string[] spll_alll_tag_arry = new string[15];
    static string[] allow_arry = new string[15];
    //  SqlConnection myconn1 = new SqlConnection(ConfigurationManager.AppSettings["DSN"]);
    Hashtable hsamount = new Hashtable();
    SqlConnection con = new SqlConnection(ConfigurationManager.AppSettings["DSN"].ToString());
    SqlConnection con1 = new SqlConnection(ConfigurationManager.AppSettings["DSN"].ToString());
    SqlDataAdapter da = new SqlDataAdapter();
    static int seatcnt = 0;
    static int allowancecnt = 0;
    static int deductioncnt = 0;
    string collegecode = "";
    string usercode = "";
    string single_user = "";
    string group_user = "";
    int checkseat = 0;
    int height = 0;
    int checkallowance = 0;
    int checkdeduction = 0;
    int rowstr;
    string[] deductioncode = new string[44];
    int[] deductionindex = new int[44];
    string[] allowancecode = new string[44];
    int[] allowanceindex = new int[44];
    double IntMTotal;
    double IntMTemp;
    string college = "";
    double[] dblallowtotal = new double[55];
    double[] dbldedtotal = new double[55];

    string[] seatcode = new string[44];
    int[] seatindex = new int[50];
    int[] bloodindex = new int[44];
    string sql1;
    int colheder;
    int colgross;
    string[] allowancevalue = new string[50];
    string[] dedctionvalue = new string[44];
    string[] seatvalue = new string[55];
    int checkblood = 0;
    string sql;
    int ccountforallow = 0;
    int j = 0;
    int countood = 0;
    int col;
    Boolean Cellclick;// added by sridhar 16 sep 2014
    Hashtable hat = new Hashtable();
    DataSet ds1 = new DataSet1();
    static int bloodcnt = 0;
    string strdept = "";
    string strcategory = "";
    string adv_amount = "";
    double month_amount;
    double collect_amount;
    int total_amount = 0;
    string[] bloodvalue = new string[55];
    string[] bloodcode = new string[55];
    DataSet ds = new DataSet();
    DataSet dsbind = new DataSet();
    DataSet dset = new DataSet();
    DAccess2 d2 = new DAccess2();
    DataSet ds2 = new DataSet();
    static ArrayList ItemList = new ArrayList();
    static ArrayList Itemindex = new ArrayList();
    DataSet dssmssalary = new DataSet();
    SortedDictionary<string, string> deduct = new SortedDictionary<string, string>();
    Dictionary<string, double> dictgetsettec = new Dictionary<string, double>();
    Dictionary<string, double> dictgetsetnontec = new Dictionary<string, double>();

    Dictionary<string, double> dictgetsettecs = new Dictionary<string, double>();
    Dictionary<string, double> dictgetsetnontecs = new Dictionary<string, double>();
    FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
    string alloworder = "";
    int SendSMSCount = 0;

    protected void Page_Load(object sender, EventArgs e)
    {
        if (Session["collegecode"] == null) //Aruna For Back Button
        {
            Response.Redirect("~/Default.aspx");
        }
        collegecode = Session["collegecode"].ToString();
        college = Session["collegecode"].ToString();
        usercode = Session["usercode"].ToString();
        single_user = Session["single_user"].ToString();
        group_user = Session["group_code"].ToString();
        btnslip.Visible = false;
        tn_format2.Visible = false;
        lblnorec.Visible = false;
        if (!IsPostBack)
        {

            // added by sridhar 17 sep 2014 -------------------Start
            cbkincludeCarryTot.Checked = true;
            FpSpread2.Sheets[0].AutoPostBack = true;
            FpSpread2.CommandBar.Visible = false;
            // added by sridhar 17 sep 2014 -------------------end
            DateTime stdate;
            string today = System.DateTime.Now.ToString();
            string today1;

            string[] split13 = today.Split(new char[] { ' ' });
            string[] split14 = split13[0].Split(new Char[] { '/' });
            today1 = split14[1].ToString() + "/" + split14[0].ToString() + "/" + split14[2].ToString();
            Txtentryfrom.Text = today1;
            string today2 = System.DateTime.Now.ToString();
            stdate = System.DateTime.Today.AddDays(30);
            string today3;
            today3 = stdate.Date.ToShortDateString();
            // today3 =Convert.ToString( day9.AddDays(30));
            string[] split15 = today3.Split(new char[] { ' ' });
            string[] split16 = split15[0].Split(new Char[] { '/' });
            today3 = split16[1].ToString() + "/" + split16[0].ToString() + "/" + split16[2].ToString();
            Txtentryto.Text = today3;
            cblmonth.SelectedValue = split14[0].ToString();
            //fpbiomatric.Visible = false;


            load_allowance();
            load_dept();
            load_category();
            load_detection();
            binddesig(college);
            bindstafftype(college);
            year();
            loadcolumns(sender, e);
            loadClgBank();
            //string strselecet = d2.GetFunction("select value from Master_Settings where settings='Salary1 report'");
            //if (strselecet != "" && strselecet != null && strselecet.Trim() != "0")
            //{
            //    string[] sp = strselecet.Split(',');
            //    {
            //        for (int i = 0; i < sp.GetUpperBound(0); i++)
            //        {
            //            int v = Convert.ToInt32(sp[i]);
            //            cblsearch.Items[v].Selected = true;
            //        }
            //    }
            //}
            //else
            //{
            //    cblsearch.Items[0].Selected = true;
            //    cblsearch.Items[3].Selected = true;
            //    cblsearch.Items[4].Selected = true;
            //    cblsearch.Items[14].Selected = true;
            //}
            clear();
            chksms.Visible = true;
            chkEmail.Visible = true;
            chkactual.Visible = true;

            // added by sridhar 17 sep 2014 -------------------Start
            lblpurpose1.Visible = false;
            ddlpurpose.Visible = false;
            FpSpread2.Visible = false;
            btnaddtemplate.Visible = false;
            btndeletetemplate.Visible = false;
            lblsmstype.Visible = false;
            ddlsmstype.Visible = false;
            lblstaffcnt.Visible = true;
            txt_staff.Visible = true;
            // added by sridhar 17 sep 2014 -------------------End
            chkEmail.Visible = false;
            chksms.Visible = false;
            if (cblsearch.Items[27].Selected == true)// Added by sridharan april 30 2015
            {
                cblsearch.Items[39].Enabled = true;
            }
            else
            {
                cblsearch.Items[39].Enabled = false;
            }
        }


    }

    //protected override void Render(System.Web.UI.HtmlTextWriter writer)
    //{

    //    Control cntUpdateBtn = FpSpread1.FindControl("Update");
    //    Control cntCancelBtn = FpSpread1.FindControl("Cancel");
    //    Control cntCopyBtn = FpSpread1.FindControl("Copy");
    //    Control cntCutBtn = FpSpread1.FindControl("Clear");
    //    Control cntPasteBtn = FpSpread1.FindControl("Paste");
    //    Control cntPageNextBtn = FpSpread1.FindControl("Next");
    //    Control cntPagePreviousBtn = FpSpread1.FindControl("Prev");
    //    Control cntPagePrintBtn = FpSpread1.FindControl("Print");


    //    Control cntUpdateBtn2 = fpsalary.FindControl("Update");
    //    Control cntCancelBtn2 = fpsalary.FindControl("Cancel");
    //    Control cntCopyBtn2 = fpsalary.FindControl("Copy");
    //    Control cntCutBtn2 = fpsalary.FindControl("Clear");
    //    Control cntPasteBtn2 = fpsalary.FindControl("Paste");
    //    Control cntPageNextBtn2 = fpsalary.FindControl("Next");
    //    Control cntPagePreviousBtn2 = fpsalary.FindControl("Prev");
    //    Control cntPagePrintBtn2 = fpsalary.FindControl("Print");

    //    if ((cntUpdateBtn != null))
    //    {

    //        TableCell tc = (TableCell)cntUpdateBtn.Parent;
    //        TableRow tr = (TableRow)tc.Parent;

    //        tr.Cells.Remove(tc);

    //        tc = (TableCell)cntCancelBtn.Parent;
    //        tr.Cells.Remove(tc);


    //        tc = (TableCell)cntCopyBtn.Parent;
    //        tr.Cells.Remove(tc);

    //        tc = (TableCell)cntCutBtn.Parent;
    //        tr.Cells.Remove(tc);

    //        tc = (TableCell)cntPasteBtn.Parent;
    //        tr.Cells.Remove(tc);
    //    }


    //    cntUpdateBtn = fpsalary.FindControl("Update");
    //    cntCancelBtn = fpsalary.FindControl("Cancel");
    //    cntCopyBtn = fpsalary.FindControl("Copy");
    //    cntCutBtn = fpsalary.FindControl("Clear");
    //    cntPasteBtn = fpsalary.FindControl("Paste");
    //    cntPageNextBtn = fpsalary.FindControl("Next");
    //    cntPagePreviousBtn = fpsalary.FindControl("Prev");
    //    cntPagePrintBtn = fpsalary.FindControl("Print");


    //    if ((cntUpdateBtn != null))
    //    {

    //        TableCell tc = (TableCell)cntUpdateBtn.Parent;
    //        TableRow tr = (TableRow)tc.Parent;

    //        tr.Cells.Remove(tc);

    //        tc = (TableCell)cntCancelBtn.Parent;
    //        tr.Cells.Remove(tc);


    //        tc = (TableCell)cntCopyBtn.Parent;
    //        tr.Cells.Remove(tc);

    //        tc = (TableCell)cntCutBtn.Parent;
    //        tr.Cells.Remove(tc);

    //        tc = (TableCell)cntPasteBtn.Parent;
    //        tr.Cells.Remove(tc);
    //    }

    //    cntUpdateBtn = fpsalary.FindControl("Update");
    //    cntCancelBtn = fpsalary.FindControl("Cancel");
    //    cntCopyBtn = fpsalary.FindControl("Copy");
    //    cntCutBtn = fpsalary.FindControl("Clear");
    //    cntPasteBtn = fpsalary.FindControl("Paste");
    //    cntPageNextBtn = fpsalary.FindControl("Next");
    //    cntPagePreviousBtn = fpsalary.FindControl("Prev");
    //    cntPagePrintBtn = fpsalary.FindControl("Print");

    //    if ((cntUpdateBtn != null))
    //    {

    //        TableCell tc = (TableCell)cntUpdateBtn.Parent;
    //        TableRow tr = (TableRow)tc.Parent;

    //        tr.Cells.Remove(tc);

    //        tc = (TableCell)cntCancelBtn.Parent;
    //        tr.Cells.Remove(tc);


    //        tc = (TableCell)cntCopyBtn.Parent;
    //        tr.Cells.Remove(tc);

    //        tc = (TableCell)cntCutBtn.Parent;
    //        tr.Cells.Remove(tc);

    //        tc = (TableCell)cntPasteBtn.Parent;
    //        tr.Cells.Remove(tc);
    //    }
    //    base.Render(writer);
    //}

    void load_dept()
    {
        cbldepttype.Visible = true;
        cbldepttype.Items.Clear();
        ds.Clear();
        //ListItem lsitem = new ListItem();
        con.Open();
        string group_user = "";
        SqlCommand cmd = new SqlCommand();
        string singleuser = Session["single_user"].ToString();
        if (singleuser == "True")
        {
            cmd = new SqlCommand("SELECT DISTINCT hp.dept_code,dept_name from hr_privilege hp,hrdept_master hr  where user_code=" + Session["usercode"] + " and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master where college_code='" + Session["collegecode"] + "') order by dept_name", con);
        }

        else
        {

            group_user = Session["group_code"].ToString();
            if (group_user.Contains(';'))
            {
                string[] group_semi = group_user.Split(';');
                group_user = group_semi[0].ToString();
            }
            cmd = new SqlCommand("SELECT DISTINCT hp.dept_code,dept_name from hr_privilege hp,hrdept_master hr  where group_code='" + group_user + "' and hr.dept_code=hp.dept_code  and hp.dept_code in (select dept_code from hrdept_master where college_code='" + Session["collegecode"] + "') order by dept_name", con);

        }
        da.SelectCommand = cmd;
        da.Fill(ds);
        cbldepttype.DataSource = ds.Tables[0];
        cbldepttype.DataTextField = "dept_name";
        cbldepttype.DataValueField = "dept_code";
        cbldepttype.DataBind();

        //  cbldepttype.Items.Add("Select All");

        con.Close();

    }

    public void year()
    {
        try
        {
            SqlCommand cmd = new SqlCommand();
            string yrqry = "select distinct year(To_Date) as year from HrPayMonths where College_Code ='" + collegecode + "' order by year asc";
            cmd = new SqlCommand(yrqry, con);
            da.SelectCommand = cmd;
            ddlyear2.ClearSelection();
            da.Fill(ds2);
            ddlyear2.DataSource = ds2.Tables[0];
            if (ds2.Tables[0].Rows.Count > 0)
            {
                ddlyear2.DataTextField = "year";
                ddlyear2.DataValueField = "year";
                ddlyear2.DataBind();
                ddlyear2.SelectedIndex = 0;
            }
            else
            {
                ScriptManager.RegisterStartupScript(base.Page, this.GetType(), ("dialogJavascript" + this.ID), "alert(\"Please Choose Hryear\");", true);
                ddlyear2.Enabled = false;
            }
        }
        catch
        {
        }
    }

    void load_category()
    {

        cblcategory.Visible = true;
        cblcategory.Items.Clear();
        ds.Clear();
        // ListItem lsitem = new ListItem();
        con.Open();
        SqlCommand cmd = new SqlCommand("select  distinct category_code,category_name from  staffcategorizer where college_code='" + Session["collegecode"] + "'  ", con);
        da.SelectCommand = cmd;
        da.Fill(ds);
        cblcategory.DataSource = ds.Tables[0];
        cblcategory.DataTextField = "category_name";
        cblcategory.DataValueField = "category_code";
        cblcategory.DataBind();

        con.Close();
    }

    void load_allowance()
    {
        cblallowance.Items.Clear();
        ds.Clear();
        con.Open();
        SqlCommand cmd = new SqlCommand("Select * from incentives_master where college_code=" + Session["collegecode"] + "", con);
        SqlDataReader dr;
        dr = cmd.ExecuteReader();
        string allowanmce = "";
        string detection = "";

        while (dr.Read())
        {
            if (dr.HasRows == true)
            {
                allowanmce = dr["allowances"].ToString();
                detection = dr["deductions"].ToString();

            }
        }
        string[] allowanmce_arr;
        allowanmce_arr = allowanmce.Split(';');

        for (int i = 0; i <= allowanmce_arr.GetUpperBound(0); i++)
        {
            string all2 = allowanmce_arr[i];
            string[] splitallo3 = all2.Split('\\');
            if (splitallo3.GetUpperBound(0) > 1)
            {
                //all2 = splitallo3[2];
                all2 = splitallo3[0];//Modified by Manikandan on 19/20/2013
            }
            if (all2.Trim() != "")
            {
                cblallowance.Items.Add(all2);
                cblallowance.Items[i].Selected = true;
            }
        }
        string valu1 = "";
        string code1 = "";
        string value2 = "";
        string code2 = "";
        int deductioncount = 0;
        int allowancecount = 0;
        for (int i = 0; i < cblallowance.Items.Count; i++)
        {
            if (cblallowance.Items[i].Selected == true)
            {

                valu1 = cblallowance.Items[i].Text;
                code1 = cblallowance.Items[i].Value.ToString();
                allowancecount = allowancecount + 1;
                txtallowance.Text = "Allowance(" + allowancecount.ToString() + ")";
            }

        }
        string[] detection_arr;
        detection_arr = detection.Split(';');
        for (int j = 0; j <= detection_arr.GetUpperBound(0); j++)
        {
            string all2 = detection_arr[j];
            string[] splitallo3 = all2.Split('\\');
            if (splitallo3.GetUpperBound(0) > 0)
            {
                // all2 = splitallo3[1];
                all2 = splitallo3[0];//Modified by Manikandan on 19/10/2013
                if (all2.Trim() != "")
                {
                    cbldeduction.Items.Add(all2);
                    cbldeduction.Items[j].Selected = true;
                }
            }
            else
            {
                if (detection_arr[j].Trim() != "")
                {
                    cbldeduction.Items.Add(detection_arr[j]);
                    cbldeduction.Items[j].Selected = true;
                }
            }
        }
        for (int i = 0; i < cbldeduction.Items.Count; i++)
        {
            if (cbldeduction.Items[i].Selected == true)
            {
                value2 = cbldeduction.Items[i].Text;
                code2 = cbldeduction.Items[i].Value.ToString();
                deductioncount = deductioncount + 1;
                txtdeduction.Text = "Deduction(" + deductioncount.ToString() + ")";
            }

        }
        con.Close();


    }

    void load_detection()
    {
    }
    int seatcount = 0;

    protected void cbldepttype_SelectedIndexChanged(object sender, EventArgs e)
    {

        clear();
        pseattype.Focus();
        string value = "";
        string code = "";
        for (int i = 0; i < cbldepttype.Items.Count; i++)
        {
            if (cbldepttype.Items[i].Selected == true)
            {

                value = cbldepttype.Items[i].Text;
                code = cbldepttype.Items[i].Value.ToString();
                seatcount = seatcount + 1;
                tbseattype.Text = "Department(" + seatcount.ToString() + ")";
            }

        }

        if (seatcount == 0)
            tbseattype.Text = "---Select---";
        else
        {
            Label lbl = seatlabel();
            lbl.Text = " " + value + " ";
            lbl.ID = "lbl1-" + code.ToString();
            ImageButton ib = seatimage();
            ib.ID = "imgbut1_" + code.ToString();
            ib.Click += new ImageClickEventHandler(seatimg_Click);
        }
        seatcnt = seatcount;

    }

    public void seatimg_Click(object sender, ImageClickEventArgs e)
    {
        seatcount = seatcount - 1;
        ImageButton b = sender as ImageButton;
        int r = Convert.ToInt32(b.CommandArgument);
        cbldepttype.Items[r].Selected = false;

        tbseattype.Text = "Department(" + seatcount.ToString() + ")";
        if (tbseattype.Text == "Degree(0)")
        {
            tbseattype.Text = "---Select---";

        }

    }

    public Label seatlabel()
    {
        Label lbc = new Label();

        ViewState["lseatcontrol"] = true;
        return (lbc);
    }

    public ImageButton seatimage()
    {
        ImageButton imc = new ImageButton();
        imc.ImageUrl = "xb.jpeg";
        imc.Height = 9;
        imc.Width = 9;
        ViewState["iseatcontrol"] = true;
        return (imc);
    }
    int bloodcount = 0;

    protected void cblcategory_SelectedIndexChanged(object sender, EventArgs e)
    {
        clear();
        string value = "";
        string code = "";
        for (int i = 0; i < cblcategory.Items.Count; i++)
        {
            if (cblcategory.Items[i].Selected == true)
            {
                value = cblcategory.Items[i].Text;

                code = cblcategory.Items[i].Value.ToString();
                bloodcount = bloodcount + 1;
                tbblood.Text = "Category(" + bloodcount.ToString() + ")";
            }
        }
        if (bloodcount == 0)
        {
            tbblood.Text = "---Select---";
        }
        else
        {
            Label lbl = bloodlabel();
            lbl.Text = " " + value + " ";
            // lbl.ID = "lbl2-" + code.ToString();
            ImageButton ib = bloodimage();
            ib.ID = "imgbut2_" + code.ToString();
            ib.Click += new ImageClickEventHandler(bloodimg_Click);
        }
        bloodcnt = bloodcount;
    }

    public void bloodimg_Click(object sender, ImageClickEventArgs e)
    {
        bloodcount = bloodcount - 1;
        ImageButton b = sender as ImageButton;
        int r = Convert.ToInt32(b.CommandArgument);
        cblcategory.Items[r].Selected = false;

        tbblood.Text = "Degree(" + bloodcount.ToString() + ")";
        if (tbblood.Text == "Degree(0)")
        {
            tbblood.Text = "---Select---";

        }

    }

    public Label bloodlabel()
    {
        Label lbc = new Label();

        ViewState["lseatcontrol"] = true;
        return (lbc);
    }

    public ImageButton bloodimage()
    {
        ImageButton imc = new ImageButton();
        imc.ImageUrl = "xb.jpeg";
        imc.Height = 9;
        imc.Width = 9;
        ViewState["iseatcontrol"] = true;
        return (imc);
    }

    protected void btn_go_Click1(object sender, EventArgs e)
    {

    }

    protected void tbseattype_TextChanged(object sender, EventArgs e)
    {

    }

    protected void tbblood_TextChanged(object sender, EventArgs e)
    {

    }

    protected void btngo_Click(object sender, EventArgs e)
    {
        loadcolumns(sender, e);
        if (ddlyear2.Items.Count == 0)
        {
            ScriptManager.RegisterStartupScript(base.Page, this.GetType(), ("dialogJavascript" + this.ID), "alert(\"Please Select Hr Year\");", true);
            ddlyear2.Enabled = true;

        }
        else if (tbseattype.Text == "---Select---")
        {
            ScriptManager.RegisterStartupScript(base.Page, this.GetType(), ("dialogJavascript" + this.ID), "alert(\"Please Select Department\");", true);
        }
        else if (tbblood.Text == "---Select---")
        {
            ScriptManager.RegisterStartupScript(base.Page, this.GetType(), ("dialogJavascript" + this.ID), "alert(\"Please Select Category\");", true);
        }
        //else if (txtallowance.Text == "---Select---")
        //{
        //    ScriptManager.RegisterStartupScript(base.Page, this.GetType(), ("dialogJavascript" + this.ID), "alert(\"Please Select Allowance\");", true);
        //}
        //else if (txtdeduction.Text == "---Select---")
        //{
        //    ScriptManager.RegisterStartupScript(base.Page, this.GetType(), ("dialogJavascript" + this.ID), "alert(\"Please Select Deduction\");", true);
        //}
        else
        {
            btnslip.Visible = false;
            // added by sridhar 17 sep 2014 start

            // added by sridhar 17 sep 2014 end
            //clear();
            //if ((rdFormat1.Checked == true) && (rddept.Checked == false))//---------------new
            //{
            //chkEmail.Visible = false;
            //chksms.Visible = false;

            if (ddlreport.SelectedItem.Text.ToString() == "Format 1")
            {
                func_format1();
                fpsalary.Sheets[0].Columns[0].Locked = false;
                chkactual.Visible = true;
                chkEmail.Visible = true;
                chksms.Visible = true;
                salcer.Visible = true;
                cbincludeBasicpay.Visible = true;
            }
            //else if (rdFormat2.Checked == true)
            else if (ddlreport.SelectedItem.Text.ToString() == "Format 2")
            {
                func_format2();
                cbincludeBasicpay.Visible = true;
                //chkEmail.Visible = false;
                //chksms.Visible = false;
            }
            else if (ddlreport.SelectedItem.Text.ToString() == "Format 4") // added by sridhar 14 oct 2014 start
            {
                new_format4();
                return;

            }// added by sridhar 14 oct 2014 end
            else if (ddlreport.SelectedItem.Text.ToString() == "Department Wise")
            {
                func_format3();
                chkEmail.Visible = true;
                chksms.Visible = true;
                txtsms.Visible = false;


            }
            //else if (rbfromat3.Checked == true)
            else if (ddlreport.SelectedItem.Text.ToString() == "Format 3")
            {
                func_Format4();
                chkEmail.Visible = true;
                chksms.Visible = true;
                cbrupesinwords.Visible = true;
                cbdateofjoin.Visible = true;
                cbRound.Visible = true;
                cbAuthor.Visible = true;
                cbAuthor.Checked = false;
                txt_author.Text = "";
                txt_author.Visible = true;
                lblauthor.Visible = true;
                salcer.Visible = true;
                cbincludeBasicpay.Visible = true;
            }
            lblpurpose1.Visible = false;
            ddlpurpose.Visible = false;
            FpSpread2.Visible = false;
            btnaddtemplate.Visible = false;
            btndeletetemplate.Visible = false;
            btnsendsms.Visible = false;
            txtsms.Visible = false;
            lblsmstype.Visible = false;
            ddlsmstype.Visible = false;
            if (ddlreport.SelectedItem.Text.ToString() == "Format 3" || ddlreport.SelectedItem.Text.ToString() == "Format 2")
            {
                chkEmail.Visible = true;
                chksms.Visible = true;
                if (fpsalary.Visible == true)
                {
                    if (chksms.Checked == true)
                    {
                        Spread2Go();
                        Dropdownload();
                        btnsendsms.Visible = true;
                        txtsms.Visible = true;
                        lblsmstype.Visible = true;
                        ddlsmstype.Visible = true;
                        if (ddlsmstype.SelectedValue.ToString() == "Automatic")
                        {
                            string year = d2.GetFunction("select CONVERT(CHAR(4), to_date, 120) from hrpaymonths where paymonthnum='" + cblmonth.SelectedItem.Value.ToString() + "' and college_Code=" + Session["collegecode"].ToString() + ""); // Added by jairam 13-11-2014 
                            string settext = "Your salary for the month of " + cblmonth.SelectedItem.Text + " - " + year + "- Rs.$Salary$ has been credited to your account-$Account No$";
                            txtsms.Enabled = false;
                            txtsms.Text = settext;
                        }
                        else
                        {
                            lblpurpose1.Visible = true;
                            ddlpurpose.Visible = true;
                            FpSpread2.Visible = true;
                            btnaddtemplate.Visible = true;
                            btndeletetemplate.Visible = true;
                            txtsms.Enabled = true;
                        }
                    }
                    if (chksms.Checked == true || chkEmail.Checked == true)
                    {
                        btnsendsms.Visible = true;
                    }
                }
            }
            btnslip.Visible = false;
            tn_format2.Visible = false;
        }
    }

    public void mobile()
    {

    }

    public void func_format1()
    {
        try
        {
            Double netpaytotal = 0;
            int columncountbank = 0;
            int sk = 0;
            int rk = 0;
            btnslip.Visible = false;
            for (int i = 0; i < cblallowance.Items.Count; i++)
            {
                if (cblallowance.Items[i].Selected == true)
                {
                    ccountforallow++;
                }
            }

            fpsalary.Sheets[0].RowCount = 0;
            fpsalary.CommandBar.Visible = true;
            FarPoint.Web.Spread.TextCellType txt = new FarPoint.Web.Spread.TextCellType();
            lblnorec.Visible = false;
            fpsalary.Sheets[0].PageSize = 11;
            fpsalary.Pager.Position = FarPoint.Web.Spread.PagerPosition.Bottom;
            fpsalary.Pager.Mode = FarPoint.Web.Spread.PagerMode.Both;
            //fpsalary.Pager.Align = HorizontalAlign.Right;
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].Font.Name = "Book Antiqua";
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].Font.Bold = true;
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].Font.Size = FontUnit.Large;
            darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
            darkstyle.ForeColor = Color.Black;
            darkstyle.HorizontalAlign = HorizontalAlign.Center;
            darkstyle.Font.Name = "Book Antiqua";
            darkstyle.Font.Bold = true;
            darkstyle.Font.Size = FontUnit.Medium;
            fpsalary.Sheets[0].ColumnHeader.DefaultStyle = darkstyle;
            fpsalary.Pager.Font.Bold = true;
            fpsalary.Pager.Font.Name = "Arial";
            fpsalary.Pager.ForeColor = Color.DarkGreen;
            fpsalary.Pager.BackColor = Color.AliceBlue;
            fpsalary.Pager.PageCount = 5;
            fpsalary.CommandBar.Visible = false;
            fpsalary.Sheets[0].ColumnCount = 15;

            fpsalary.Sheets[0].SheetCorner.Columns[0].Visible = false;

            fpsalary.Sheets[0].SheetCorner.RowCount = 2;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.NO";
            fpsalary.Sheets[0].Columns[0].Width = 30;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
            fpsalary.Sheets[0].Columns[1].Width = 100;
            FarPoint.Web.Spread.CheckBoxCellType chkcell1 = new FarPoint.Web.Spread.CheckBoxCellType();
            chkcell1.AutoPostBack = true;
            fpsalary.Sheets[0].Columns[1].Locked = false;
            string datefrom;
            string dateto;
            string date1;
            string date2;
            fpsalary.Sheets[0].ColumnCount = 27;
            int banknamecolcount = 0;//delsi26
            int clgbanknamecount = 0;
            int uannum = 0;

            fpsalary.Visible = true;
            btnprintmaster.Visible = true;
            Button3.Visible = false;
            btnprintmaster.Visible = false;
            Printcontrol.Visible = false;
            GridPrintmaster.Visible = false;

            int no_of_staff = Convert.ToInt32(txt_staff.Text);

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
            //  fpsalary.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].Columns[1].Locked = false;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Staff Name";
            //   fpsalary.Sheets[0].Columns[2].HorizontalAlign = HorizontalAlign.Left;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Staff Code";
            //    fpsalary.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Left;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;


            fpsalary.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Designation";
            // fpsalary.Sheets[0].Columns[3].HorizontalAlign = HorizontalAlign.Left;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Dept";
            // fpsalary.Sheets[0].Columns[4].HorizontalAlign = HorizontalAlign.Left;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Dept Acronym";
            //  fpsalary.Sheets[0].Columns[5].HorizontalAlign = HorizontalAlign.Left;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 7].Text = "Design Acronym";
            //  fpsalary.Sheets[0].Columns[6].HorizontalAlign = HorizontalAlign.Left;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 7].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 8].Text = "Category";
            // fpsalary.Sheets[0].Columns[7].HorizontalAlign = HorizontalAlign.Left;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 8].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 9].Text = "Staff Type";
            // fpsalary.Sheets[0].Columns[8].HorizontalAlign = HorizontalAlign.Left;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 9].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 10].Text = "Date of Joining";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 10].Column.Width = 100;//barath 09.01.18
            //  fpsalary.Sheets[0].Columns[9].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 10].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 11].Text = "Working Days ";
            //  fpsalary.Sheets[0].Columns[10].HorizontalAlign = HorizontalAlign.Left;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 11].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 12].Text = "LOP Days ";
            //  fpsalary.Sheets[0].Columns[11].HorizontalAlign = HorizontalAlign.Left;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 12].HorizontalAlign = HorizontalAlign.Center;


            fpsalary.Sheets[0].ColumnHeader.Cells[0, 13].Text = "Present days";
            //   fpsalary.Sheets[0].Columns[12].HorizontalAlign = HorizontalAlign.Left;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 13].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 14].Text = "Absent days";
            //   fpsalary.Sheets[0].Columns[12].HorizontalAlign = HorizontalAlign.Left;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 14].HorizontalAlign = HorizontalAlign.Center;


            fpsalary.Sheets[0].ColumnHeader.Cells[0, 15].Text = "Previous Month LOP Days";
            //  fpsalary.Sheets[0].Columns[13].HorizontalAlign = HorizontalAlign.Left;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 15].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 16].Text = "Current Month LOP Days";
            //  fpsalary.Sheets[0].Columns[14].HorizontalAlign = HorizontalAlign.Left;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 16].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 17].Text = "LOP Date(s) ";
            // fpsalary.Sheets[0].Columns[15].HorizontalAlign = HorizontalAlign.Left;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 17].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 18].Text = "Pay Band";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 18].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.ActiveSheetView.Columns[18].HorizontalAlign = HorizontalAlign.Right;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 19].Text = "Grade Pay ";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 19].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.ActiveSheetView.Columns[19].HorizontalAlign = HorizontalAlign.Right;


            fpsalary.Sheets[0].ColumnHeader.Cells[0, 20].Text = "Basic ";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 20].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.ActiveSheetView.Columns[20].HorizontalAlign = HorizontalAlign.Right;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 21].Text = "AGP ";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 21].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.ActiveSheetView.Columns[21].HorizontalAlign = HorizontalAlign.Right;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 22].Text = "No. of Increment ";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 22].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.ActiveSheetView.Columns[22].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 23].Text = "Increment in Rs";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 23].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.ActiveSheetView.Columns[23].HorizontalAlign = HorizontalAlign.Right;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 24].Text = "Actual Basic ";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 24].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.ActiveSheetView.Columns[24].HorizontalAlign = HorizontalAlign.Right;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 25].Text = "Basic Pay ";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 25].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.ActiveSheetView.Columns[25].HorizontalAlign = HorizontalAlign.Right;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 26].Text = "DA % ";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 26].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.ActiveSheetView.Columns[26].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 5, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 7, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 8, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 9, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 10, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 11, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 12, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 13, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 14, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 15, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 16, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 17, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 18, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 19, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 20, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 21, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 22, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 23, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 24, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 25, 2, 1);
            fpsalary.ActiveSheetView.Columns[0].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[0].Font.Size = FontUnit.Large;

            fpsalary.ActiveSheetView.Columns[1].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[1].Font.Name = "Book Antiqua";

            fpsalary.ActiveSheetView.Columns[2].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[2].Font.Name = "Book Antiqua";

            fpsalary.ActiveSheetView.Columns[3].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[3].Font.Name = "Book Antiqua";

            fpsalary.ActiveSheetView.Columns[4].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[4].Font.Name = "Book Antiqua";

            fpsalary.ActiveSheetView.Columns[5].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[5].Font.Name = "Book Antiqua";

            fpsalary.ActiveSheetView.Columns[6].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[6].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[7].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[7].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[8].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[8].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[9].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[9].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[10].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[10].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[11].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[11].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[12].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[12].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[13].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[13].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[14].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[14].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[15].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[15].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[16].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[16].Font.Size = FontUnit.Large;

            fpsalary.ActiveSheetView.Columns[17].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[17].Font.Size = FontUnit.Large;

            fpsalary.ActiveSheetView.Columns[18].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[18].Font.Size = FontUnit.Large;

            fpsalary.ActiveSheetView.Columns[19].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[19].Font.Size = FontUnit.Large;

            fpsalary.ActiveSheetView.Columns[20].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[20].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[21].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[21].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[22].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[22].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[23].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[23].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[24].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[24].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[25].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[25].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[26].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[26].Font.Size = FontUnit.Large;

            //CalculateTotalPages();//Hided by Manikandan 03/08/2013
            int colcount1;
            colcount1 = 14;
            sql1 = "select * from incentives_master where college_code='" + Session["collegecode"] + "'";
            sql1 = sql1 + " ;select distinct CONVERT(VARCHAR(10),from_date,103) as from_date,convert(VARCHAR(10),to_date,103) as to_date from hrpaymonths where paymonthnum='" + cblmonth.SelectedItem.Value.ToString() + "'and PayYear='" + ddlyear2.SelectedItem.Text.ToString() + "' and college_Code=" + Session["collegecode"].ToString() + ""; // Added by jairam 13-11-2014 
            sql1 = sql1 + " ;select isnull(collname, ' ') as collname,isnull(address1, ' ') as address1,isnull(address2,' ') as address2,isnull(address3, ' ') as address3,isnull(pincode,' ') as pincode from collinfo where college_code='" + Session["collegecode"].ToString() + "'";
            sql1 = sql1 + " ;select shortname from leave_category where status<>'pres' and college_code='" + Session["collegecode"] + "'";
            sql1 = sql1 + " ;select shortname from leave_category where status<>'comp' and college_code='" + Session["collegecode"] + "'";
            DataSet dsset = d2.select_method_wo_parameter(sql1, "Text");
            int colspl = 0;
            int splall = 0;
            int colcnt_pf_number = 0;
            int colcnt_total_deduction = 0;
            int columnVal = 0;
            int UanNo = 0;
            int gratuitycount = 0;
            int yrofexp = 0;
            if (dsset.Tables[0].Rows.Count > 0)
            {
                string allowncweshead;

                string detuctionheader;
                allowncweshead = dsset.Tables[0].Rows[0]["allowances"].ToString();
                string[] allown2;
                int getval;
                allown2 = allowncweshead.Split(';');
                getval = allown2.GetUpperBound(0);
                colcount1 = 26;

                int itemcount = 0;
                int count = 0;
                string strallowan;
                count = allown2.GetUpperBound(0);


                int v = 0;
                int w = 0;
                int nallow = 0;
                for (int i = 0; i <= allown2.GetUpperBound(0); i++)
                {
                    string newallow = allown2[i];
                    string[] newallow_split = newallow.Split('\\');
                    if (newallow_split.GetUpperBound(0) > 0)
                    {
                        //if (newallow_split[1] == "1")
                        //{
                        //    spll_alll_tag_arry[splall] = newallow_split[0];
                        //    //splallw_arry[splall] = newallow_split[2];
                        //    splallw_arry[splall] = newallow_split[0];//Modified by Manikandan on 19/10/2013
                        //    v++;
                        //    splall++;
                        //}

                        //else
                        //{

                        //allow_arry[nallow] = newallow_split[2];
                        allow_arry[nallow] = newallow_split[0];//Modified by Manikandan on 19/10/2013
                        w++;
                        nallow++;
                        //}

                    }

                }
                int u = 0;

                fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + nallow * 2;



                if (nallow != 0)//added by srinath 4/1/13
                {

                    for (int k = 0; k < 2; k++)
                    {
                        fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1].Text = "Actual Allowances";
                        fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1].HorizontalAlign = HorizontalAlign.Center;
                        fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount1, 1, nallow);
                        fpsalary.ActiveSheetView.Columns[colcount1].HorizontalAlign = HorizontalAlign.Right;
                        u = 0;

                        for (int t = 0; t < nallow; t++)
                        {
                            if (cblallowance.Items.Count > u)
                            {
                                if (cblallowance.Items[u].Selected == true)
                                {

                                    if (cblallowance.Items[u].Text == allow_arry[t])
                                    {

                                        fpsalary.Sheets[0].Columns[colcount1 + t].Visible = true;
                                        fpsalary.Sheets[0].Columns[colcount1 + t].HorizontalAlign = HorizontalAlign.Center;
                                        if (k == 0)
                                        {
                                            if (chkactual.Checked == false)
                                            {
                                                fpsalary.Sheets[0].Columns[colcount1 + t].Visible = false;
                                            }
                                        }
                                        fpsalary.Sheets[0].ColumnHeader.Cells[1, colcount1 + t].Text = allow_arry[t];
                                        fpsalary.ActiveSheetView.Columns[colcount1 + t].HorizontalAlign = HorizontalAlign.Right;

                                        fpsalary.ActiveSheetView.Columns[colcount1 + t].Font.Size = FontUnit.Large;
                                        fpsalary.ActiveSheetView.Columns[colcount1 + t].Font.Name = "Book Antiqua";
                                        fpsalary.Sheets[0].ColumnHeader.Cells[1, colcount1 + t].HorizontalAlign = HorizontalAlign.Center;
                                        fpsalary.Sheets[0].ColumnHeader.Cells[1, colcount1 + t].Column.Width = 100;
                                    }
                                    else
                                    {
                                        t--;
                                        u++;
                                    }
                                }
                                else
                                {

                                    // t--;
                                    if (cblallowance.Items[u].Text == allow_arry[t])
                                    {
                                        fpsalary.Sheets[0].Columns[colcount1 + t].Visible = false;
                                    }

                                    else
                                    {
                                        t--;
                                    }
                                    fpsalary.Sheets[0].Columns[colcount1 + t].HorizontalAlign = HorizontalAlign.Center;
                                    u++;
                                }

                            }

                        }
                        colcount1 = colcount1 + nallow;
                    }
                    colcount1 = colcount1 - nallow;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1].Text = "Allowances ";

                }

                //if (cblsearch.Items[44].Selected == true)
                //{

                //    fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 1;
                //    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - colcount1 -1].Text = "UAN No";
                //    columnVal = fpsalary.Sheets[0].ColumnCount - colcount1 - 1;
                //    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsalary.Sheets[0].ColumnCount - colcount1, 2, 1);



                //}

                //modified by srinath 8/3/2014
                if (chkcontribution.Checked == true)//modified by srinath 21/1/13
                {
                    fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 2;
                    colgross = fpsalary.Sheets[0].ColumnCount;
                    fpsalary.Sheets[0].ColumnHeader.Cells[1, colgross - 3].Text = "PF Salary";
                    fpsalary.Sheets[0].ColumnHeader.Cells[1, colgross - 2].Text = "ESI Salary";
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colgross - 3].Text = "Contribution";
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colgross - 3].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colgross - 3, 1, 2);
                    fpsalary.ActiveSheetView.Columns[colgross - 3].HorizontalAlign = HorizontalAlign.Right;
                    fpsalary.ActiveSheetView.Columns[colgross - 2].HorizontalAlign = HorizontalAlign.Right;
                }
                else
                {
                    colgross = fpsalary.Sheets[0].ColumnCount;

                }

                if (colcount1 + nallow < fpsalary.Sheets[0].ColumnCount)
                {
                    colgross = fpsalary.Sheets[0].ColumnCount;
                }
                else
                {
                    colgross = fpsalary.Sheets[0].ColumnCount;
                }
                //if (cblsearch.Items[44].Selected == true)
                //{
                //    colgross--;
                //}
                //fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 2;
                fpsalary.Sheets[0].ColumnHeader.Cells[0, colgross - 1].Text = "Actual Gross Pay";
                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colgross - 1, 2, 1);
                fpsalary.ActiveSheetView.Columns[colgross - 1].HorizontalAlign = HorizontalAlign.Right;
                fpsalary.Sheets[0].ColumnHeader.Cells[0, colgross - 1].HorizontalAlign = HorizontalAlign.Center;
                fpsalary.Sheets[0].ColumnHeader.Cells[0, colgross - 1].Column.Width = 150;
                //fpsalary.Sheets[0].Columns[colgross - 1].HorizontalAlign = HorizontalAlign.Right;
                fpsalary.Sheets[0].Columns[colgross - 1].Font.Size = FontUnit.Large;
                fpsalary.ActiveSheetView.Columns[colgross - 1].Font.Name = "Book Antiqua";

                fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 1;
                colgross = fpsalary.Sheets[0].ColumnCount;

                fpsalary.Sheets[0].ColumnHeader.Cells[0, colgross - 1].Text = "Gross Pay";
                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colgross - 1, 2, 1);
                fpsalary.Sheets[0].ColumnHeader.Cells[0, colgross - 1].HorizontalAlign = HorizontalAlign.Center;
                fpsalary.Sheets[0].Columns[colgross - 1].HorizontalAlign = HorizontalAlign.Right;
                fpsalary.Sheets[0].Columns[colgross - 1].Font.Size = FontUnit.Large;
                fpsalary.Sheets[0].ColumnHeader.Cells[0, colgross - 1].HorizontalAlign = HorizontalAlign.Center;
                fpsalary.Sheets[0].ColumnHeader.Cells[0, colgross - 1].Column.Width = 150;

                fpsalary.ActiveSheetView.Columns[colgross - 1].Font.Name = "Book Antiqua";



                ////////////////////to add pf 

                fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 1;
                colcnt_pf_number = fpsalary.Sheets[0].ColumnCount;

                if (cblsearch.Items[44].Selected == true)
                {
                    //fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 1;
                    UanNo = colcnt_pf_number;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, UanNo - 1].Text = "UAN No";
                    columnVal = fpsalary.Sheets[0].ColumnCount - colcount1 - 1;
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, UanNo - 1, 2, 1);
                    fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 1;
                    colcnt_pf_number = fpsalary.Sheets[0].ColumnCount;
                }

                fpsalary.Sheets[0].ColumnHeader.Cells[0, colcnt_pf_number - 1].Text = "LOP Amount";
                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcnt_pf_number - 1, 2, 1);
                fpsalary.Sheets[0].ColumnHeader.Cells[0, colcnt_pf_number - 1].HorizontalAlign = HorizontalAlign.Center;
                fpsalary.Sheets[0].Columns[colcnt_pf_number - 1].Font.Size = FontUnit.Large;
                //fpsalary.ActiveSheetView.Columns[colcnt_pf_number - 1].Font.Size = FontUnit.Large;
                fpsalary.ActiveSheetView.Columns[colcnt_pf_number - 1].Font.Name = "Book Antiqua";
                fpsalary.Sheets[0].Columns[colcnt_pf_number - 1].HorizontalAlign = HorizontalAlign.Right;


                // To Add LOP Amount
                fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 1;
                colheder = fpsalary.Sheets[0].ColumnCount;

                fpsalary.Sheets[0].ColumnHeader.Cells[0, colheder - 1].Text = "PF No";
                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colheder - 1, 2, 1);
                fpsalary.Sheets[0].ColumnHeader.Cells[0, colheder - 1].HorizontalAlign = HorizontalAlign.Center;

                //fpsalary.ActiveSheetView.Columns[colheder - 1].Font.Size = FontUnit.Large;
                fpsalary.ActiveSheetView.Columns[colheder - 1].Font.Name = "Book Antiqua";


                //

                detuctionheader = dsset.Tables[0].Rows[0]["deductions"].ToString();
                string[] deduct2;
                int getval2;
                deduct2 = detuctionheader.Split(';');
                getval2 = deduct2.GetUpperBound(0) + 1;

                col = fpsalary.Sheets[0].ColumnCount;

                fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + (getval2);
                colcount1 = fpsalary.Sheets[0].ColumnCount + 1;
                //modified by srinath 8/3/2014
                if (colheder >= fpsalary.Sheets[0].ColumnCount)
                {
                    colheder = fpsalary.Sheets[0].ColumnCount - 1;
                }
                if (getval2 == 0)
                {
                    getval2 = getval2 + 1;
                }

                for (int g = 0; g < 2; g++)
                {
                    if (cblsearch.Items[11].Selected == true)
                    {
                        fpsalary.Sheets[0].ColumnHeader.Cells[0, colheder].Text = "Deductions";
                        fpsalary.Sheets[0].ColumnHeader.Cells[0, colheder].HorizontalAlign = HorizontalAlign.Center;
                    }
                    else
                    {
                        fpsalary.Sheets[0].ColumnHeader.Cells[0, colheder].Text = "Deductions";
                        fpsalary.Sheets[0].ColumnHeader.Cells[0, colheder].HorizontalAlign = HorizontalAlign.Center;
                        // fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, col, 1, getval2);
                    }
                    if (deduct2.Count() == cbldeduction.Items.Count)
                    {

                        for (int i = 0; i <= deduct2.GetUpperBound(0); i++)
                        {
                            if (cbldeduction.Items[i].Selected == true)
                            {
                                fpsalary.Sheets[0].Columns[col + i].Visible = true;
                                string ded = deduct2[i];
                                string[] ne_split_ded = ded.Split('\\');
                                if (ne_split_ded.GetUpperBound(0) > 0)
                                {
                                    fpsalary.Sheets[0].ColumnHeader.Cells[1, col + i].Text = ne_split_ded[0].ToString();//Modified by Manikandan on 19/10/2013
                                }
                                else
                                {
                                    fpsalary.Sheets[0].ColumnHeader.Cells[1, col + i].Text = deduct2[i];
                                    string adv = deduct2[i];
                                    if (adv == "ADVANCE")
                                    {
                                        if (cblsearch.Items[24].Selected == true && cblsearch.Items[25].Selected == true)
                                        {
                                            fpsalary.Sheets[0].Columns[col + i].Visible = false;
                                        }
                                        else
                                        {
                                            fpsalary.Sheets[0].Columns[col + i].Visible = true;
                                        }
                                    }

                                }

                                fpsalary.Sheets[0].ColumnHeader.Cells[1, col + i].HorizontalAlign = HorizontalAlign.Center;
                                fpsalary.Sheets[0].ColumnHeader.Cells[1, col + i].Column.Width = 100;
                                fpsalary.ActiveSheetView.Columns[col + i].Font.Size = FontUnit.Large;
                                fpsalary.ActiveSheetView.Columns[col + i].Font.Name = "Book Antiqua";
                                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, col, 1, (getval2));
                            }
                            else
                            {
                                fpsalary.Sheets[0].Columns[col + i].Visible = false;
                                fpsalary.Sheets[0].ColumnHeader.Cells[1, col + i].Text = deduct2[i];
                                fpsalary.Sheets[0].ColumnHeader.Cells[1, col + i].HorizontalAlign = HorizontalAlign.Center;
                            }
                        }
                    }
                    if (deduct2.Count() >= cbldeduction.Items.Count)
                    {
                        for (int i = 0; i < deduct2.GetUpperBound(0); i++)
                        {
                            if (cbldeduction.Items[i].Selected == true)
                            {
                                fpsalary.Sheets[0].Columns[col + i].Visible = true;
                                string ded = deduct2[i];
                                string[] ne_split_ded = ded.Split('\\');
                                if (ne_split_ded.GetUpperBound(0) > 0)
                                {
                                    fpsalary.Sheets[0].ColumnHeader.Cells[1, col + i].Text = ne_split_ded[0].ToString();//Modified by Manikandan on 19/10/2013
                                }
                                else
                                {
                                    fpsalary.Sheets[0].ColumnHeader.Cells[1, col + i].Text = deduct2[i];
                                    string adv = deduct2[i];
                                    if (adv == "ADVANCE")
                                    {
                                        if (cblsearch.Items[24].Selected == true && cblsearch.Items[25].Selected == true)
                                        {
                                            fpsalary.Sheets[0].Columns[col + i].Visible = false;
                                        }
                                        else
                                        {
                                            fpsalary.Sheets[0].Columns[col + i].Visible = true;
                                        }
                                    }

                                }

                                fpsalary.Sheets[0].ColumnHeader.Cells[1, col + i].HorizontalAlign = HorizontalAlign.Center;
                                fpsalary.Sheets[0].ColumnHeader.Cells[1, col + i].Column.Width = 100;
                                fpsalary.ActiveSheetView.Columns[col + i].Font.Size = FontUnit.Large;
                                fpsalary.ActiveSheetView.Columns[col + i].Font.Name = "Book Antiqua";
                                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, col, 1, (getval2));
                            }
                            else
                            {
                                fpsalary.Sheets[0].Columns[col + i].Visible = false;
                                fpsalary.Sheets[0].ColumnHeader.Cells[1, col + i].Text = deduct2[i];
                                fpsalary.Sheets[0].ColumnHeader.Cells[1, col + i].HorizontalAlign = HorizontalAlign.Center;
                            }
                        }

                    }


                }
                fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 5;
                colcnt_total_deduction = fpsalary.Sheets[0].ColumnCount;

                fpsalary.Sheets[0].Columns[colcnt_total_deduction - 5].HorizontalAlign = HorizontalAlign.Right;
                fpsalary.Sheets[0].Columns[colcnt_total_deduction - 4].HorizontalAlign = HorizontalAlign.Right;
                fpsalary.Sheets[0].Columns[colcnt_total_deduction - 3].HorizontalAlign = HorizontalAlign.Right;
                fpsalary.Sheets[0].Columns[colcnt_total_deduction - 2].HorizontalAlign = HorizontalAlign.Right;
                fpsalary.Sheets[0].Columns[colcnt_total_deduction - 1].HorizontalAlign = HorizontalAlign.Right;
                if (cblsearch.Items[24].Selected == true)
                {
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcnt_total_deduction - 5].Text = "Adv Rs.";
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcnt_total_deduction - 5].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].Columns[colcnt_total_deduction - 5].Font.Size = FontUnit.Large;
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcnt_total_deduction - 5, 2, 1);
                }
                else
                {
                    fpsalary.Sheets[0].Columns[colcnt_total_deduction - 5].Visible = false;
                }

                if (cblsearch.Items[25].Selected == true)
                {
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcnt_total_deduction - 2].Text = "Balance";
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcnt_total_deduction - 3].Text = "Current Month Deduction";
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcnt_total_deduction - 4].Text = "Collected Amount";
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcnt_total_deduction - 2].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcnt_total_deduction - 3].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcnt_total_deduction - 4].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.ActiveSheetView.Columns[colcnt_total_deduction - 2].Font.Size = FontUnit.Large;
                    fpsalary.ActiveSheetView.Columns[colcnt_total_deduction - 3].Font.Size = FontUnit.Large;
                    fpsalary.ActiveSheetView.Columns[colcnt_total_deduction - 4].Font.Size = FontUnit.Large;

                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcnt_total_deduction - 2, 2, 1);
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcnt_total_deduction - 3, 2, 1);
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcnt_total_deduction - 4, 2, 1);
                }
                else
                {
                    fpsalary.Sheets[0].Columns[colcnt_total_deduction - 2].Visible = false;
                    fpsalary.Sheets[0].Columns[colcnt_total_deduction - 3].Visible = false;
                    fpsalary.Sheets[0].Columns[colcnt_total_deduction - 4].Visible = false;
                }
                if (cblsearch.Items[28].Selected == true)
                {
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcnt_total_deduction - 1].Text = "Total Ded";//Total Deduction
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcnt_total_deduction - 1].Column.Width = 80;//barath 09.01.18
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcnt_total_deduction - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.ActiveSheetView.Columns[colcnt_total_deduction - 1].Font.Size = FontUnit.Large;

                    fpsalary.Sheets[0].Columns[colcnt_total_deduction - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcnt_total_deduction - 1, 2, 1);
                }
                else
                {
                    fpsalary.Sheets[0].Columns[colcnt_total_deduction - 1].Visible = false;
                }
                if (splall != 0)
                {
                    u = 0;
                    colspl = fpsalary.Sheets[0].ColumnCount;
                    fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + splall;


                    for (int b = 0; b <= splall; b++)
                    {

                        if (cblallowance.Items.Count > u)
                        {
                            if (cblallowance.Items[u].Selected == true)
                            {
                                if (cblallowance.Items[u].Text == splallw_arry[b])
                                {
                                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colspl + b, 2, 1);
                                    fpsalary.Sheets[0].Columns[colspl + b].Visible = true;
                                    fpsalary.Sheets[0].Columns[colspl + b].HorizontalAlign = HorizontalAlign.Center;

                                    fpsalary.Sheets[0].Columns[colspl + b].Visible = true;


                                    //fpsalary.Sheets[0].ColumnHeader.Cells[0, colspl + b].Locked = true;
                                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colspl + b].Text = splallw_arry[b];
                                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colspl + b].Tag = spll_alll_tag_arry[b];
                                    fpsalary.Sheets[0].Columns[colspl + b].HorizontalAlign = HorizontalAlign.Right;

                                    fpsalary.ActiveSheetView.Columns[colspl + b].Font.Size = FontUnit.Large;
                                    fpsalary.ActiveSheetView.Columns[colspl + b].Font.Name = "Book Antiqua";
                                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colspl + b].HorizontalAlign = HorizontalAlign.Center;
                                }
                                else
                                {
                                    b--;
                                    u++;
                                }
                            }
                            else
                            {
                                if (cblallowance.Items[u].Text == splallw_arry[b])
                                {
                                    u++;
                                    b = b;
                                    splall = splall - 1;
                                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colspl + b].Text = splallw_arry[b];
                                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colspl + b].Tag = spll_alll_tag_arry[b];
                                    fpsalary.Sheets[0].Columns[colspl + b].HorizontalAlign = HorizontalAlign.Right;

                                    fpsalary.Sheets[0].Columns[colspl + b].Visible = false;
                                    fpsalary.Sheets[0].Columns[colspl + b].HorizontalAlign = HorizontalAlign.Center;
                                }
                                else
                                {
                                    u++;
                                    b--;
                                }

                            }

                        }


                    }

                }

                string bankquerys = "select hb.bankpk,BankName from hr_bankrights  hb,FM_FinBankMaster fb where hb.bankpk=fb.BankPK and hb.college_code=fb.CollegeCode and hb.college_code='" + collegecode + "'";//delsi1106
                DataSet bankds = new DataSet();



                bankds = d2.select_method_wo_parameter(bankquerys, "text");
                if (bankds.Tables[0].Rows.Count > 0)
                {
                    for (int i = 0; i < bankds.Tables[0].Rows.Count; i++)
                    {

                        fpsalary.Sheets[0].ColumnCount++;
                        fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Text = Convert.ToString(bankds.Tables[0].Rows[i]["BankName"]);
                        fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Tag = Convert.ToString(bankds.Tables[0].Rows[i]["bankpk"]);
                        fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                        fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Bold = true;
                        fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                        fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsalary.Sheets[0].ColumnCount - 1, 2, 1);
                    }


                    fpsalary.Sheets[0].ColumnCount++;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Text = "Cash";
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsalary.Sheets[0].ColumnCount - 1, 2, 1);
                    columncountbank = fpsalary.Sheets[0].ColumnCount;
                    //countvalue++;
                }





                //////////////////////////////////
                fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 3;
                colcount1 = fpsalary.Sheets[0].ColumnCount;
                fpsalary.ActiveSheetView.Columns[colcount1 - 3].Font.Name = "Book Antiqua";
                fpsalary.ActiveSheetView.Columns[colcount1 - 3].Font.Size = FontUnit.Large;


                fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 3].HorizontalAlign = HorizontalAlign.Center;
                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount1 - 3, 2, 1);

                // fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 2].Text = "Acc no"; //hided by gowtham
                fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 3].Text = "Acc no";
                fpsalary.Sheets[0].Columns[colcount1 - 3].CellType = txt;
                fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 3].Column.Width = 150;

                fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 2].Text = "Net Pay";
                fpsalary.ActiveSheetView.Columns[colcount1 - 2].Font.Size = FontUnit.Large;
                fpsalary.ActiveSheetView.Columns[colcount1 - 2].Font.Name = "Book Antiqua";
                fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 2].HorizontalAlign = HorizontalAlign.Center; ;
                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount1 - 2, 2, 1);
                fpsalary.Sheets[0].Columns[colcount1 - 2].HorizontalAlign = HorizontalAlign.Right;
                fpsalary.Sheets[0].Columns[colcount1 - 2].VerticalAlign = VerticalAlign.Middle;


                fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 1].Text = "Bank Formate";
                fpsalary.ActiveSheetView.Columns[colcount1 - 1].Font.Name = "Book Antiqua";
                fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 1].HorizontalAlign = HorizontalAlign.Center;
                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount1 - 1, 2, 1);
                if (cblsearch.Items[40].Selected == true)
                {
                    fpsalary.Sheets[0].Columns[colcount1 - 1].Visible = true;
                }
                else
                {
                    fpsalary.Sheets[0].Columns[colcount1 - 1].Visible = false;
                }




                if (cblsearch.Items[42].Selected == true)//delsi25/05
                {
                    fpsalary.Sheets[0].ColumnCount++;
                    banknamecolcount = fpsalary.Sheets[0].ColumnCount;
                    //fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Text = "Bank Name";
                    //fpsalary.ActiveSheetView.Columns[fpsalary.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    //fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    // fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount1 - 1, 2, 1);

                    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Text = "Bank Name";
                    fpsalary.ActiveSheetView.Columns[fpsalary.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsalary.Sheets[0].ColumnCount - 1, 2, 1);

                }
                if (cblsearch.Items[43].Selected == true)
                {

                    fpsalary.Sheets[0].ColumnCount++;
                    clgbanknamecount = fpsalary.Sheets[0].ColumnCount;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Text = "College Bank";
                    fpsalary.ActiveSheetView.Columns[fpsalary.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsalary.Sheets[0].ColumnCount - 1, 2, 1);

                }
                if (cblsearch.Items[45].Selected == true)//delsi1710
                {
                    fpsalary.Sheets[0].ColumnCount++;
                    gratuitycount = fpsalary.Sheets[0].ColumnCount;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Text = "Gratuity";
                    fpsalary.ActiveSheetView.Columns[fpsalary.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsalary.Sheets[0].ColumnCount - 1, 2, 1);
                }
                if (cblsearch.Items[46].Selected == true)//delsi1710
                {
                    fpsalary.Sheets[0].ColumnCount++;
                    yrofexp = fpsalary.Sheets[0].ColumnCount;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Text = "Year of Experience";
                    fpsalary.ActiveSheetView.Columns[fpsalary.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsalary.Sheets[0].ColumnCount - 1, 2, 1);
                }

                fpsalary.Sheets[0].ColumnCount++;
                fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Text = "Remarks";
                fpsalary.ActiveSheetView.Columns[fpsalary.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsalary.Sheets[0].ColumnCount - 1, 2, 1);



            }
            //////////////////////////////////////////////////////////////////////////
            FarPoint.Web.Spread.StyleInfo style = new FarPoint.Web.Spread.StyleInfo();
            style.Font.Size = 10;
            style.Font.Bold = true;
            fpsalary.Sheets[0].SheetCornerStyle = new FarPoint.Web.Spread.StyleInfo(style);
            //fpsalary.Sheets[0].ColumnHeader.DefaultStyle = new FarPoint.Web.Spread.StyleInfo(style);
            fpsalary.Sheets[0].AllowTableCorner = true;
            //fpsalary.Sheets[0].SheetCorner.Cells[0, 0].Text = "  ";//===============
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].Text = "S.No";
            //fpsalary.Sheets[0].SheetCornerSpanModel.Add(0, 0, 6, 1);//==============
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].Text = "S.No";
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].BackColor = Color.AliceBlue;
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].Border.BorderColorRight = Color.White;
            fpsalary.Sheets[0].SheetCornerSpanModel.Add(0, 0, 3, 1);

            //=================================================
            //fpsalary.Sheets[0].ColumnHeader.Cells[0, 7].Border.BorderColor = Color.White;

            //fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 3].Border.BorderColor = Color.White;
            //=================================================


            //sql1 = "select CONVERT(VARCHAR(10),from_date,103) as from_date,convert(VARCHAR(10),to_date,103) as to_date from hrpaymonths where paymonthnum='" + cblmonth.SelectedItem.Value.ToString() + "'";
            string fromdate = "";
            string todate = "";
            if (dsset.Tables[1].Rows.Count > 0)
            {
                fromdate = dsset.Tables[1].Rows[0]["from_date"].ToString();
                Txtentryfrom.Text = fromdate;
                todate = dsset.Tables[1].Rows[0]["to_date"].ToString();
                Txtentryto.Text = todate;
            }


            date1 = Txtentryfrom.Text.ToString();
            string[] split = date1.Split(new Char[] { '/' });
            datefrom = split[1].ToString() + "/" + split[0].ToString() + "/" + split[2].ToString();
            date2 = Txtentryto.Text.ToString();
            string[] split1 = date2.Split(new Char[] { '/' });
            dateto = split1[1].ToString() + "/" + split1[0].ToString() + "/" + split1[2].ToString();

            string coll_name = "";
            string coll_address1 = "";
            string coll_address2 = "";
            string coll_address3 = "";
            string pin_code = "";
            // string str = "select isnull(collname, ' ') as collname,isnull(address1, ' ') as address1,isnull(address2,' ') as address2,isnull(address3, ' ') as address3,isnull(pincode,' ') as pincode from collinfo where college_code='" + Session["collegecode"].ToString() + "'";
            if (dsset.Tables[2].Rows.Count > 0)
            {
                coll_name = dsset.Tables[2].Rows[0]["collname"].ToString();
                coll_address1 = dsset.Tables[2].Rows[0]["address1"].ToString();
                coll_address2 = dsset.Tables[2].Rows[0]["address2"].ToString();
                coll_address3 = dsset.Tables[2].Rows[0]["address3"].ToString();
                pin_code = dsset.Tables[2].Rows[0]["pincode"].ToString();
            }

            int head = 1;
            int headerset = 1;
            if (cblsearch.Items[14].Selected == true)
            {
                //sankar modif
                //fpsalary.Sheets[0].AutoPostBack = true;
                //headerset = headerset + 1;
                //head = 1;
                fpsalary.Sheets[0].AutoPostBack = false;
            }

            else
            {

                headerset = headerset + 1;
                head = 1;
                fpsalary.Sheets[0].AutoPostBack = false;
            }



            fpsalary.Sheets[0].SetColumnWidth(fpsalary.Sheets[0].ColumnCount - 1, 100);


            fpsalary.Sheets[0].SetColumnWidth(0, 80);
            fpsalary.Sheets[0].ColumnHeader.Rows[0].Font.Bold = true;
            // fpsalary.Sheets[0].ColumnHeader.Rows[0].Font.Size = FontUnit.Large;

            fpsalary.Sheets[0].ColumnHeader.Rows[0].BackColor = Color.FromArgb(214, 235, 255);
            fpsalary.Sheets[0].ColumnHeader.Rows[1].BackColor = Color.FromArgb(214, 235, 255);
            fpsalary.Sheets[0].ColumnHeader.Rows[0].Font.Bold = true;
            // fpsalary.Sheets[0].ColumnHeader.Rows[0].Font.Size = FontUnit.Large;

            fpsalary.Sheets[0].ColumnHeader.Rows[1].Font.Bold = true;
            // fpsalary.Sheets[0].ColumnHeader.Rows[1].Font.Size = FontUnit.Large;

            fpsalary.Sheets[0].ColumnHeader.Rows[1].Border.BorderColorBottom = Color.Black;

            fpsalary.Sheets[0].ColumnHeader.Cells[1, 0].Border.BorderColorBottom = Color.Black;

            alleavetype.Clear();
            if (dsset.Tables[3].Rows.Count > 0)
            {
                for (int dtsval = 0; dtsval < dsset.Tables[3].Rows.Count; dtsval++)
                {
                    alleavetype.Add(Convert.ToString(dsset.Tables[3].Rows[dtsval]["shortname"]));
                }
            }
            hatpre.Clear();
            hatpre.Add("P", 0);
            hatpre.Add("LA", 0);
            hatpre.Add("PER", 0);
            hatpre.Add("H", 0);
            for (int prc = 0; prc < dsset.Tables[4].Rows.Count; prc++)
            {
                if (!hatpre.Contains(dsset.Tables[4].Rows[prc]["shortname"].ToString()))
                {
                    hatpre.Add(dsset.Tables[4].Rows[prc]["shortname"].ToString(), 0);
                }
            }

            goto l10;
        //l10: sql = " SELECT monthlypay.*,desig_master.priority,dept_acronym,staff_name,bankaccount,pfnumber,CONVERT(VARCHAR(10),staffmaster.join_date,103) as joindate,monthlypay.pay_band,monthlypay.grade_pay,desig_master.desig_acronym,monthlypay.LOP,len(staffmaster.staff_code),staffmaster.staff_code,desig_master.print_pri,monthlypay.PF_Salary,monthlypay.ESI_Salary , hrdept_master.dept_name as deptname,desig_master.desig_name as designame,staffmaster.resign from monthlypay,desig_master,stafftrans,staffmaster,hrdept_master Where hrdept_master.dept_code=stafftrans.dept_code and ((staffmaster.resign=0 or staffmaster.settled=0) or (staffmaster.resign=1 and staffmaster.relieve_date>='" + dateto + "') or (staffmaster.resign=1 and staffmaster.relieve_date between '" + datefrom + "' and '" + dateto + "'))  and stafftrans.staff_code=monthlypay.staff_code and stafftrans.latestrec=1 and desig_master.desig_code=stafftrans.desig_code and monthlypay.fdate ='" + datefrom + "' and monthlypay.tdate ='" + dateto + "' and monthlypay.college_code=" + Session["collegecode"] + " and desig_master.collegecode=" + Session["collegecode"] + " and staffmaster.staff_code=monthlypay.staff_code  "; // added by jairam 13-11-2014 //delsi2605 lastly added  isnull(staffmaster.clgbankcode,'0')as clgbankcode , isnull(staffmaster.bank_name,'') as bank_name,
        l10: sql = " SELECT monthlypay.*,desig_master.priority,dept_acronym,staff_name,bankaccount,pfnumber,UAN_No,CONVERT(VARCHAR(10),staffmaster.join_date,103) as joindate,CONVERT(VARCHAR(10),staffmaster.relieve_date,103) as relieve_date,monthlypay.pay_band,monthlypay.grade_pay,desig_master.desig_acronym,monthlypay.LOP,len(staffmaster.staff_code),staffmaster.staff_code,isnull(staffmaster.clgbankcode,'0')as clgbankcode , case when PayMode='0' then 'Cash' when PayMode='1' then 'Cheque' when PayMode='2' then 'Credit'  end as PayMode,isnull(staffmaster.bank_name,'') as bank_name,desig_master.print_pri,monthlypay.PF_Salary,monthlypay.ESI_Salary , hrdept_master.dept_name as deptname,desig_master.desig_name as designame,staffmaster.resign from monthlypay,desig_master,stafftrans,staffmaster,hrdept_master Where hrdept_master.dept_code=stafftrans.dept_code and ((staffmaster.resign=0 or staffmaster.settled=0) or (staffmaster.resign=1 and staffmaster.relieve_date>='" + dateto + "') or (staffmaster.resign=1 and staffmaster.relieve_date between '" + datefrom + "' and '" + dateto + "'))  and stafftrans.staff_code=monthlypay.staff_code and stafftrans.latestrec=1 and desig_master.desig_code=stafftrans.desig_code and monthlypay.PayMonth ='" + cblmonth.SelectedValue.ToString() + "' and monthlypay.PayYear ='" + ddlyear2.SelectedValue.ToString() + "' and monthlypay.college_code=" + Session["collegecode"] + " and desig_master.collegecode=" + Session["collegecode"] + " and staffmaster.staff_code=monthlypay.staff_code  "; // added by srinath 10-12-2014

            int clgbankval = Convert.ToInt32(ddl_colbank.SelectedItem.Value);

            if (tbseattype.Text != "---Select---")
            {
                int itemcount = 0;
                for (itemcount = 0; itemcount < cbldepttype.Items.Count; itemcount++)
                {
                    if (cbldepttype.Items[itemcount].Selected == true)
                    {
                        if (strdept == "")
                            strdept = "'" + cbldepttype.Items[itemcount].Value.ToString() + "'";
                        else
                            strdept = strdept + "," + "'" + cbldepttype.Items[itemcount].Value.ToString() + "'";
                    }
                }


                if (strdept != "")
                {
                    strdept = " in(" + strdept + ")";
                }
                sql = sql + " and hrdept_master.dept_code " + strdept + "";
            }

            string strdesig = "";
            for (int idesig = 0; idesig < cbl_Designation.Items.Count; idesig++)
            {
                if (cbl_Designation.Items[idesig].Selected == true)
                {
                    if (strdesig == "")
                    {
                        strdesig = "'" + cbl_Designation.Items[idesig].Value.ToString() + "'";
                    }
                    else
                    {
                        strdesig = strdesig + ",'" + cbl_Designation.Items[idesig].Value.ToString() + "'";
                    }
                }
            }
            if (strdesig != "")
            {
                sql = sql + " and desig_master.desig_code in(" + strdesig + ")";
            }

            string strtypeval = "";
            for (int idesig = 0; idesig < cblstafftype.Items.Count; idesig++)
            {
                if (cblstafftype.Items[idesig].Selected == true)
                {
                    if (strtypeval == "")
                    {
                        strtypeval = "'" + cblstafftype.Items[idesig].Value.ToString() + "'";
                    }
                    else
                    {
                        strtypeval = strtypeval + ",'" + cblstafftype.Items[idesig].Value.ToString() + "'";
                    }
                }
            }
            if (strtypeval != "")
            {
                sql = sql + " and stafftrans.stftype in(" + strtypeval + ")";
            }

            if (tbblood.Text != "---Select---")
            {
                int itemcount1 = 0;

                for (itemcount1 = 0; itemcount1 < cblcategory.Items.Count; itemcount1++)
                {
                    if (cblcategory.Items[itemcount1].Selected == true)
                    {
                        if (strcategory == "")
                            strcategory = "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                        else
                            strcategory = strcategory + "," + "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                    }
                }


                if (strcategory != "")
                {
                    strcategory = " in (" + strcategory + ")";
                }
                sql = sql + "  and stafftrans.category_code" + strcategory + "";
            }
            if (ddlpfcategory.SelectedItem.Text != "All")
            {
                sql = sql + " and isnull(staffmaster.is_pf,0)=" + ddlpfcategory.SelectedItem.Value.ToString() + "";
            }

            if (ddl_colbank.Text.Trim().ToUpper() != "SELECT")//delsi26/05
            {
                if (clgbankval != 0)
                {
                    sql = sql + " and isnull(staffmaster.clgbankcode,'0') ='" + clgbankval + "'";
                }

            }
            if (cb_hold.Checked == true)//delsi 1002
            {
                sql = sql + " and isnull(monthlypay.staffholdSet,'') in('','1','2')";
            }
            else
            {
                sql = sql + " and isnull(monthlypay.staffholdSet,'') in('','2')";
            }

            //if (ddlorder.SelectedItem.Text.ToString() == "Priority")
            //{
            //    sql = sql + " order by hrdept_master.priority,desig_master.priority,hrdept_master.dept_name,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code ";//Modified By Srinath 28/3/2014
            //}
            //else
            //{
            //    sql = sql + " order by hrdept_master.dept_name,len(staffmaster.staff_code),staffmaster.staff_code";//Modified By Srinath 28/3/2014
            //}
            if (ddlorder.SelectedItem.Text.ToString() == "Priority")
            {
                sql = sql + " order by hrdept_master.priority,desig_master.priority,hrdept_master.dept_name,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code ";//Modified By Srinath 28/3/2014
            }
            //******************Modified By Subburaj 16.08.2014***********//
            else if (ddlorder.SelectedItem.Text.ToString() == "Print Priority-1")
            {
                sql = sql + " order by hrdept_master.priority,monthlypay.stftype desc,staffmaster.PrintPriority,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code";
                // sql = sql + " order by hrdept_master.priority,  desig_Master.priority,  staffmaster.PrintPriority,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code";//delsi 7/24 added monthlypay.stftype desc on 0108

                //  sql = sql + " order by  staffmaster.PrintPriority";//delsi 2407
            }
            else if (ddlorder.SelectedItem.Text.ToString() == "Print Priority-2")
            {
                sql = sql + " order by hrdept_master.priority1, desig_master.print_pri,  staffmaster.PrintPriority,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code";
            }
            //*******************************End*****************************// 
            else if (ddlorder.SelectedItem.Text.ToString() == "Account No")
            {
                sql = sql + " order by case when staffmaster.bankaccount is null then 1 else 0 end,len(staffmaster.bankaccount), staffmaster.bankaccount";
            }
            else if (ddlorder.SelectedItem.Text.ToString() == "Staff Wise Priority")// added by sridhar 22 sep 2014
            {
                sql = sql + "order by isnull(staffmaster.PrintPriority,0) ";
            }
            else
            {
                sql = sql + " order by hrdept_master.dept_name,len(staffmaster.staff_code),staffmaster.staff_code";//Modified By Srinath 28/3/2014
            }
            sql = sql + " select sa.per_mobileno,sa.email,sm.staff_code,allowances,deductions from staff_appl_master sa,staffmaster sm, stafftrans st  where sm.appl_no=sa.appl_no and sm.settled=0 and sm.resign=0 and sm.staff_code=st.staff_code  and st.latestrec=1";
            //modified by srinath 5/4/2014
            //sql = sql + "  order by hrdept_master.priority,desig_master.priority,monthlypay.dept_name,desig_master.print_pri,staffmaster.join_date ,stafftrans.stftype,len(staffmaster.staff_code),staffmaster.staff_code";

            //sql = sql + "  order by desig_master.print_pri desc,monthlypay.dept_name,stafftrans.stftype ,desig_master.priority";
            sql = sql + "  select shortname  from leave_category where status ='comp' and college_code =" + Session["collegecode"] + "";
            string df = Txtentryfrom.Text.ToString();
            string dt = Txtentryto.Text.ToString();

            string[] stf = df.Split('/');
            string[] stt = dt.Split('/');
            DateTime dtf = Convert.ToDateTime(stf[1] + '/' + stf[0] + '/' + stf[2]);
            DateTime dtt = Convert.ToDateTime(stt[1] + '/' + stt[0] + '/' + stt[2]);
            DataSet dsstaffatt = d2.select_method_wo_parameter("select * from staff_attnd where mon_year between '" + dtf.ToString("M/yyyy") + "' and '" + dtt.ToString("M/yyyy") + "'", "Text");
            ArrayList addleave = new ArrayList();
            int colcount;
            colcount = 13;
            int sno = 0;
            int smscolum = fpsalary.Sheets[0].ColumnCount + 3;
            fpsalary.Sheets[0].RowCount += 1;
            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 1].CellType = chkcell1;
            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
            dsset.Reset();
            dsset.Dispose();
            dsset = d2.select_method_wo_parameter(sql, "Text");

            int startrow = 0;

            if (dsset.Tables[0].Rows.Count > 0)
            {
                txtexcel.Visible = true;
                btnexcel.Visible = true;
                lblexcel.Visible = true;
                btnprintmaster.Visible = true;
                Button3.Visible = true;
                Double nettot = 0;
                double grandbanktot = 0;

                if (dsset.Tables[2].Rows.Count > 0)
                {
                    for (int leave = 0; leave < dsset.Tables[2].Rows.Count; leave++)
                    {
                        addleave.Add(Convert.ToString(dsset.Tables[2].Rows[leave]["shortname"]));
                    }
                }
                bool isnotchecked = cbkincludeCarryTot.Checked;
                //if (!isnotchecked)
                //{
                string graduity = string.Empty;
                graduity = d2.GetFunction("select LinkValue from New_InsSettings where LinkName='gratuity' and user_code='" + usercode + "' and college_code='" + Session["collegecode"] + "'");
                for (int sal = 0; sal < dsset.Tables[0].Rows.Count; sal++)
                {
                    if (isnotchecked)
                    {
                        if ((sal % no_of_staff) == 0 && sal > 0)
                        {

                            startrow = fpsalary.Sheets[0].RowCount - no_of_staff;
                            fpsalary.Sheets[0].RowCount = fpsalary.Sheets[0].RowCount + 2;
                            fpsalary.Sheets[0].Rows[fpsalary.Sheets[0].RowCount - 2].HorizontalAlign = HorizontalAlign.Right;
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].HorizontalAlign = HorizontalAlign.Right;
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Font.Size = FontUnit.Large;
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Font.Bold = true;
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Text = "C/O";
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Locked = true;
                            fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 2, 0, 1, 13);

                            for (int intColCtr = 14; intColCtr < fpsalary.Sheets[0].ColumnCount - 2; intColCtr++)
                            {
                                if ((intColCtr != fpsalary.Sheets[0].ColumnCount - 6) && (intColCtr != colheder - 1) && (intColCtr != fpsalary.Sheets[0].ColumnCount - 4) && (intColCtr != UanNo - 1))
                                {
                                    IntMTotal = 0;
                                    for (int IntRowCtr = startrow; IntRowCtr < fpsalary.Sheets[0].RowCount - 2; IntRowCtr++)
                                    {
                                        IntMTemp = 0;

                                        if (fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text != "-")
                                        {
                                            if (fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text != "")
                                            {
                                                string calval = fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text.ToString();
                                                Double num = 0;
                                                if (Double.TryParse(calval, out num))
                                                {
                                                    Double.TryParse(Convert.ToString(fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text), out IntMTemp);
                                                }
                                            }
                                            else
                                            {
                                                IntMTemp = 0;
                                            }
                                        }
                                        else
                                        {
                                            IntMTemp = 0;
                                        }
                                        IntMTotal = IntMTemp + IntMTotal;
                                    }
                                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, intColCtr].Font.Bold = true;
                                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, intColCtr].Text = IntMTotal > 0 ? IntMTotal + "" : "-";
                                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, intColCtr].HorizontalAlign = HorizontalAlign.Right;
                                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, intColCtr].Font.Size = FontUnit.Large;
                                }
                            }

                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Large;
                            fpsalary.Sheets[0].Rows[fpsalary.Sheets[0].RowCount - 1].HorizontalAlign = HorizontalAlign.Right;
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Font.Bold = true;
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Right;
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Text = "B/F";
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Locked = true;
                            fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 1, 0, 1, 13);
                            for (int intColCtr = 14; intColCtr < fpsalary.Sheets[0].ColumnCount - 2; intColCtr++)
                            {
                                if ((intColCtr != fpsalary.Sheets[0].ColumnCount - 6) && (intColCtr != colheder - 1) && (intColCtr != fpsalary.Sheets[0].ColumnCount - 4) && (intColCtr != UanNo - 1))// 
                                {
                                    IntMTotal = 0;
                                    for (int IntRowCtr = 0; IntRowCtr < fpsalary.Sheets[0].RowCount - 2; IntRowCtr++)
                                    {
                                        IntMTemp = 0;
                                        if (fpsalary.Sheets[0].Cells[IntRowCtr, 0].Text != "B/F" && fpsalary.Sheets[0].Cells[IntRowCtr, 0].Text != "C/O")
                                        {
                                            if (fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text != "-")
                                            {
                                                if (fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text != "")
                                                {
                                                    string calval = fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text.ToString();
                                                    Double num = 0;
                                                    if (Double.TryParse(calval, out num))
                                                    {
                                                        Double.TryParse(Convert.ToString(fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text), out IntMTemp);
                                                    }
                                                }
                                                else
                                                {
                                                    IntMTemp = 0;
                                                }
                                            }
                                            else
                                            {
                                                IntMTemp = 0;
                                            }
                                            IntMTotal = IntMTemp + IntMTotal;
                                        }
                                    }
                                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].Font.Bold = true;
                                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].Text = IntMTotal > 0 ? IntMTotal + "" : "-";
                                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].HorizontalAlign = HorizontalAlign.Right;
                                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].Font.Size = FontUnit.Large;
                                }
                            }
                            startrow = fpsalary.Sheets[0].RowCount;
                        }
                    }
                    fpsalary.Sheets[0].RowCount += 1;
                    rowstr = Convert.ToInt32(fpsalary.Sheets[0].RowCount);
                    btnslip.Visible = true;
                    chkactual.Visible = true;
                    string staffname = "";

                    string joindate = "";
                    string reliv = "";
                    string dept = "";
                    string dept_acrronym = "";
                    string designation = "";
                    string allowance = "";
                    string deduction = "";
                    string basicpay = "";
                    string bascic = "";
                    string AGP = "";
                    string Increment = "";
                    string Incrementtime = "";
                    string category = "";
                    string netadd = "";
                    string totalded = "";
                    string netpay = "";
                    string desig_acronym = "";
                    string design_acc = "";
                    string staffcode1 = "";
                    string BasicLOP;
                    fpsalary.Sheets[0].SetColumnWidth(0, 80);
                    fpsalary.Sheets[0].SetColumnWidth(2, 250);
                    fpsalary.Sheets[0].SetColumnWidth(3, 150);
                    fpsalary.Sheets[0].SetColumnWidth(4, 100);
                    fpsalary.Sheets[0].SetColumnWidth(5, 100);
                    fpsalary.Sheets[0].SetColumnWidth(6, 150);
                    fpsalary.Sheets[0].SetColumnWidth(8, 100);
                    fpsalary.Sheets[0].SetColumnWidth(9, 50);
                    fpsalary.Sheets[0].SetColumnWidth(10, 100);
                    fpsalary.Sheets[0].SetColumnWidth(11, 75);
                    string datefrom3;
                    int monthname1;
                    string date3 = Txtentryfrom.Text.ToString();
                    string monthname2 = "";
                    int monthnamenum;
                    string yearto = "";
                    string monyearto = "";
                    string newpresdays = string.Empty;
                    string newabsdays = string.Empty;
                    double totlops = 0;
                    string[] split5 = date3.Split(new Char[] { '/' });
                    staffcode1 = dsset.Tables[0].Rows[sal]["staff_code"].ToString();
                    joindate = dsset.Tables[0].Rows[sal]["joindate"].ToString();
                    if (joindate.Contains('/'))
                    {
                        string[] splitjoin = joindate.Split('/');
                        joindate = Convert.ToString(splitjoin[1] + "/" + splitjoin[0] + "/" + splitjoin[2]);

                    }
                    reliv = dsset.Tables[0].Rows[sal]["relieve_date"].ToString();
                    if (reliv != "")
                    {
                        if (reliv.Contains('/'))
                        {
                            string[] splitrelv = reliv.Split('/');
                            reliv = Convert.ToString(splitrelv[1] + "/" + splitrelv[0] + "/" + splitrelv[2]);

                        }

                    }

                    DateTime join_datetime = Convert.ToDateTime(joindate);

                    DateTime TodayData = DateTime.Now;
                    if (reliv != "")
                    {
                        TodayData = Convert.ToDateTime(reliv);
                    }
                    int Years = TodayData.Year - join_datetime.Year;
                    int month = TodayData.Month - join_datetime.Month;
                    string leavedetail = dsset.Tables[0].Rows[sal]["leavedetail"].ToString();
                    string[] spiltleavedetail = leavedetail.Split(new Char[] { ';' });
                    string workingdays = spiltleavedetail[0].ToString();
                    if (spiltleavedetail.Length >= 2)//delsi1606
                    {
                        newpresdays = Convert.ToString(spiltleavedetail[1]);
                    }
                    if (spiltleavedetail.Length >= 3)
                    {
                        newabsdays = Convert.ToString(spiltleavedetail[2]);
                    }
                    if (spiltleavedetail.Length >= 7)
                    {
                        Double.TryParse(Convert.ToString(spiltleavedetail[6]), out totlops);
                    }



                    //////////////////////////
                    string monyear;
                    int dayfrm = 0;
                    string dayto;
                    int daytonum;
                    int year3;

                    datefrom3 = split5[1].ToString() + "/" + split5[0].ToString() + "/" + split5[2].ToString();
                    year3 = Convert.ToInt16(split5[2]);
                    string date4 = Txtentryto.Text.ToString();


                    string[] split6 = date4.Split(new Char[] { '/' });

                    string dateto4 = split6[1].ToString() + "/" + split6[0].ToString() + "/" + split6[2].ToString();

                    monthname2 = split6[0].ToString();
                    monthnamenum = Convert.ToInt32(monthname2.ToString());
                    yearto = split1[2].ToString();
                    ///////
                    int fromday = 0;
                    fromday = Convert.ToInt16(split6[0].ToString());
                    string mnmae = split5[1].ToString();
                    monthname1 = Convert.ToInt16(mnmae);
                    monthname2 = split1[1].ToString();
                    monthnamenum = Convert.ToInt16(monthname2);

                    string year = split5[2].ToString();

                    monyear = monthname1.ToString() + "/" + year;
                    monyearto = monthnamenum.ToString() + "/" + yearto;

                    string dayfrom;
                    int today = 0;
                    today = Convert.ToInt16(split6[0].ToString());

                    dayfrom = split5[0].ToString();
                    dayfrm = Convert.ToInt32(dayfrom);
                    dayto = split6[0].ToString();
                    daytonum = Convert.ToInt32(dayto);

                    double lopdaysmor = 0;
                    double lopdayseveg = 0;
                    double totlop = 0;
                    double absentdaysmor = 0;
                    double absentdayseve = 0;
                    double totabsentdays = 0;
                    string date = "";
                    int morpresent = 0;
                    int evepresent = 0;
                    Double Present = 0;
                    int maxdays = getmaxdays(monthname1, year3);

                    int absentdays = 0;
                    if (monthname1 == monthnamenum)  // Modify by jairam 10-12-2014  *********************** Start ***********************
                    {
                        dsstaffatt.Tables[0].DefaultView.RowFilter = " staff_code='" + staffcode1 + "' and mon_year='" + monyear + "'";
                        DataView dvstaffatt = dsstaffatt.Tables[0].DefaultView;
                        if (dvstaffatt.Count > 0)
                        {
                            for (int day = dayfrm; dayfrm <= daytonum; dayfrm++)
                            {
                                int boll4 = 0;
                                int day5 = 0;
                                day5 = 0 + dayfrm;

                                int day6;
                                string attnda = "";
                                day6 = 3 + day5;
                                attnda = dvstaffatt[0][day6].ToString();
                                if (attnda != "")
                                {
                                    string[] split100 = attnda.Split(new char[] { '-' });
                                    string mor = "";
                                    string eve = "";
                                    mor = split100[0].ToString();
                                    eve = split100[1].ToString();

                                    if ((mor.Trim() == "A"))
                                    {
                                        absentdays++;
                                        lopdaysmor = lopdaysmor + 0.5;
                                        boll4 = 1;
                                    }
                                    else
                                    {
                                        if (addleave.Count > 0)
                                        {
                                            if (addleave.Contains(mor) == true)
                                            {
                                                lopdaysmor = lopdaysmor + 0.5;
                                                boll4 = 1;
                                            }
                                        }
                                        if (hatpre.Contains(mor))
                                        {
                                            morpresent = morpresent + 1;
                                            Present = Present + 0.5;
                                        }
                                    }
                                    if ((eve.Trim() == "A"))
                                    {
                                        absentdays++;
                                        lopdayseveg = lopdayseveg + 0.5;
                                        boll4 = 1;
                                    }
                                    else
                                    {
                                        if (addleave.Count > 0)
                                        {
                                            if (addleave.Contains(eve) == true)
                                            {
                                                lopdayseveg = lopdayseveg + 0.5;
                                                boll4 = 1;
                                            }
                                        }
                                        if (hatpre.Contains(eve))
                                        {
                                            evepresent = evepresent + 1;
                                            Present = Present + 0.5;
                                        }
                                    }


                                    // if ((mor == "LOP") || (mor == "A"))
                                    //if (alleavetype.Contains(mor))
                                    //{
                                    //    lopdaysmor = lopdaysmor + 0.5;
                                    //    boll4 = 1;
                                    //}
                                    //// if ((eve == "LOP") || (eve == "A"))
                                    //if (alleavetype.Contains(eve))
                                    //{
                                    //    lopdayseveg = lopdayseveg + 0.5;
                                    //    boll4 = 1;

                                    //}
                                    //if (mor == "A")
                                    //{
                                    //    absentdaysmor = absentdaysmor + 0.5;
                                    //}
                                    //if (eve == "A")
                                    //{
                                    //    absentdayseve = absentdayseve + 0.5;
                                    //}
                                    if (boll4 == 1)
                                    {
                                        if (date == "")
                                        {
                                            date = day5 + "/" + monyear;
                                        }
                                        else
                                        {
                                            date = date + "," + day5 + "/" + monyear;
                                        }
                                    }
                                    string[] lave = new string[15];
                                }
                            }
                        }

                        fpsalary.Sheets[0].Cells[rowstr - 1, 17].Text = date;
                        fpsalary.Sheets[0].Cells[rowstr - 1, 17].HorizontalAlign = HorizontalAlign.Left;
                        fpsalary.Sheets[0].Cells[rowstr - 1, 17].Locked = true;

                        fpsalary.Sheets[0].Cells[rowstr - 1, 14].Text = Convert.ToString(Convert.ToInt32(absentdays / 2));
                        fpsalary.Sheets[0].Cells[rowstr - 1, 14].HorizontalAlign = HorizontalAlign.Center;
                        fpsalary.Sheets[0].Cells[rowstr - 1, 14].Locked = true;

                        fpsalary.Sheets[0].Cells[rowstr - 1, 11].Text = Convert.ToString(workingdays);

                        fpsalary.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center;
                        fpsalary.Sheets[0].Cells[rowstr - 1, 11].Locked = true;

                    }
                    else
                    {
                        ///////
                        dsstaffatt.Tables[0].DefaultView.RowFilter = " mon_year= '" + monyear + "' and staff_code='" + staffcode1 + "'";
                        DataView dvstaffatt = dsstaffatt.Tables[0].DefaultView;
                        if (dvstaffatt.Count > 0)
                        {
                            for (int day = dayfrm; dayfrm <= maxdays; dayfrm++)
                            {
                                fpsalary.Sheets[0].Columns[10].Visible = true;
                                fpsalary.Sheets[0].Columns[11].Visible = true;
                                fpsalary.Sheets[0].Columns[9].Visible = false;
                                int day5 = 0;
                                day5 = 0 + dayfrm;
                                int bol = 0;
                                int day6;
                                string attnda = "";
                                day6 = 3 + day5;
                                attnda = dvstaffatt[0][day6].ToString();
                                if (attnda != "")
                                {
                                    string[] split100 = attnda.Split(new char[] { '-' });
                                    string mor = "";
                                    string eve = "";
                                    mor = split100[0].ToString();
                                    eve = split100[1].ToString();

                                    if ((mor.Trim() == "A"))
                                    {
                                        absentdays++;
                                        lopdaysmor = lopdaysmor + 0.5;
                                        bol = 1;
                                    }
                                    else
                                    {
                                        if (addleave.Count > 0)
                                        {
                                            if (addleave.Contains(mor) == true)
                                            {
                                                lopdaysmor = lopdaysmor + 0.5;
                                                bol = 1;
                                            }
                                        }
                                        if (hatpre.Contains(mor))
                                        {
                                            morpresent = morpresent + 1;
                                            Present = Present + 0.5;
                                        }
                                    }
                                    if ((eve.Trim() == "A"))
                                    {
                                        absentdays++;
                                        lopdayseveg = lopdayseveg + 0.5;
                                        bol = 1;
                                    }
                                    else
                                    {
                                        if (addleave.Count > 0)
                                        {
                                            if (addleave.Contains(eve) == true)
                                            {
                                                lopdayseveg = lopdayseveg + 0.5;
                                                bol = 1;
                                            }
                                        }
                                        if (hatpre.Contains(eve))
                                        {
                                            evepresent = evepresent + 1;
                                            Present = Present + 0.5;
                                        }
                                    }
                                    if (bol == 1)
                                    {
                                        if (date == "")
                                        {
                                            date = day5 + "/" + monyear;
                                        }
                                        else
                                        {
                                            date = date + "," + day5 + "/" + monyear;
                                        }
                                    }

                                }
                            }
                        }
                        lopdayseveg = 0;
                        lopdaysmor = 0;
                        dsstaffatt.Tables[0].DefaultView.RowFilter = " mon_year= '" + monyearto + "' and staff_code='" + staffcode1 + "'";
                        dvstaffatt = dsstaffatt.Tables[0].DefaultView;
                        if (dvstaffatt.Count > 0)
                        {
                            for (int day = 1; day <= today; day++)
                            {
                                int day5 = 0;

                                day5 = 0 + day;
                                int day6;
                                int bol2 = 0;
                                string attnda = "";
                                day6 = 3 + day5;
                                attnda = dvstaffatt[0][day6].ToString();
                                if (attnda != "")
                                {
                                    string[] split100 = attnda.Split(new char[] { '-' });
                                    string mor = "";
                                    string eve = "";
                                    mor = split100[0].ToString();
                                    eve = split100[1].ToString();
                                    if ((mor.Trim() == "A"))
                                    {
                                        absentdays++;
                                        lopdaysmor = lopdaysmor + 0.5;
                                        bol2 = 1;
                                    }
                                    else
                                    {
                                        if (addleave.Count > 0)
                                        {
                                            if (addleave.Contains(mor) == true)
                                            {
                                                lopdaysmor = lopdaysmor + 0.5;
                                                bol2 = 1;
                                            }
                                        }
                                        if (hatpre.Contains(mor))
                                        {
                                            morpresent = morpresent + 1;
                                            Present = Present + 0.5;
                                        }
                                    }
                                    if ((eve.Trim() == "A"))
                                    {
                                        absentdays++;
                                        lopdayseveg = lopdayseveg + 0.5;
                                        bol2 = 1;

                                    }
                                    else
                                    {
                                        if (addleave.Count > 0)
                                        {
                                            if (addleave.Contains(eve) == true)
                                            {
                                                lopdayseveg = lopdayseveg + 0.5;
                                                bol2 = 1;
                                            }
                                        }
                                        if (hatpre.Contains(eve))
                                        {
                                            evepresent = evepresent + 1;
                                            Present = Present + 0.5;
                                        }
                                    }
                                    if (bol2 == 1)
                                    {
                                        if (date == "")
                                        {
                                            date = day5 + "/" + monyearto;
                                        }
                                        else
                                        {
                                            date = date + "," + day5 + "/" + monyearto;
                                        }
                                    }

                                }

                            }
                        }

                        fpsalary.Sheets[0].Cells[rowstr - 1, 17].Text = date;
                        fpsalary.Sheets[0].Cells[rowstr - 1, 17].HorizontalAlign = HorizontalAlign.Left;
                        fpsalary.Sheets[0].Cells[rowstr - 1, 17].Locked = true;
                        fpsalary.Sheets[0].Cells[rowstr - 1, 14].Text = Convert.ToString(Convert.ToInt32(absentdays / 2));
                        fpsalary.Sheets[0].Cells[rowstr - 1, 14].HorizontalAlign = HorizontalAlign.Left;
                        fpsalary.Sheets[0].Cells[rowstr - 1, 14].Locked = true;
                        fpsalary.Sheets[0].Cells[rowstr - 1, 11].Text = Convert.ToString(workingdays);
                        fpsalary.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center;
                        fpsalary.Sheets[0].Cells[rowstr - 1, 11].Locked = true;
                    }


                    string current_lop = dsset.Tables[0].Rows[sal]["Cur_Lop"].ToString();
                    string periv_lop = dsset.Tables[0].Rows[sal]["Pre_Lop"].ToString();
                    Double curlop = 0.0;
                    double total_abs = Convert.ToDouble(absentdays) / 2;
                    Double prevlop = 0.0;
                    Double.TryParse(current_lop, out curlop);
                    Double.TryParse(periv_lop, out prevlop);
                    double total_lop = curlop + prevlop;

                    double lopabs = total_abs + totlops;
                    fpsalary.Sheets[0].Cells[rowstr - 1, 16].Text = Convert.ToString(current_lop);
                    fpsalary.Sheets[0].Cells[rowstr - 1, 16].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].Cells[rowstr - 1, 16].Locked = true;

                    fpsalary.Sheets[0].Cells[rowstr - 1, 15].Text = Convert.ToString(periv_lop);
                    fpsalary.Sheets[0].Cells[rowstr - 1, 15].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].Cells[rowstr - 1, 15].Locked = true;

                    // fpsalary.Sheets[0].Cells[rowstr - 1, 12].Text = Convert.ToString(total_lop); delsi1606
                    //  fpsalary.Sheets[0].Cells[rowstr - 1, 12].Text = Convert.ToString(totlops); total lop aline delsi 3007
                    fpsalary.Sheets[0].Cells[rowstr - 1, 12].Text = Convert.ToString(lopabs);
                    fpsalary.Sheets[0].Cells[rowstr - 1, 12].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].Cells[rowstr - 1, 12].Locked = true;

                    //fpsalary.Sheets[0].Cells[rowstr - 1, 13].Text = Convert.ToString(Present);//delsi1606
                    fpsalary.Sheets[0].Cells[rowstr - 1, 13].Text = Convert.ToString(newpresdays);

                    fpsalary.Sheets[0].Cells[rowstr - 1, 13].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].Cells[rowstr - 1, 13].Locked = true;
                    //////////// ********************************************** End by jairam ***********************************************


                    staffname = dsset.Tables[0].Rows[sal]["staff_name"].ToString();
                    sno = sno + 1;
                    string staffcode = dsset.Tables[0].Rows[sal]["staff_code"].ToString();
                    dept = dsset.Tables[0].Rows[sal]["deptname"].ToString(); // added by jairam 13-11-2014
                    designation = dsset.Tables[0].Rows[sal]["designame"].ToString(); // added by jairam 13-11-2014
                    dept_acrronym = dsset.Tables[0].Rows[sal]["dept_acronym"].ToString();
                    desig_acronym = dsset.Tables[0].Rows[sal]["desig_acronym"].ToString();
                    basicpay = dsset.Tables[0].Rows[sal]["bsalary"].ToString();
                    string actu_basicpay = dsset.Tables[0].Rows[sal]["basic_alone"].ToString();
                    category = dsset.Tables[0].Rows[sal]["stftype"].ToString();
                    netadd = dsset.Tables[0].Rows[sal]["netadd"].ToString();
                    totalded = dsset.Tables[0].Rows[sal]["netded"].ToString();
                    netpay = dsset.Tables[0].Rows[sal]["netsal"].ToString();
                    string collbank_name = Convert.ToString(dsset.Tables[0].Rows[sal]["clgbankcode"]);//delsi26/05
                    string ownbankname = Convert.ToString(dsset.Tables[0].Rows[sal]["bank_name"]);//delsi26/05
                    string uan_num = Convert.ToString(dsset.Tables[0].Rows[sal]["UAN_No"]);

                    int gratuityval = 0;
                    int getnetsal = 0;
                    int gettotallow = 0;

                    //  BasicLOP = dsset.Tables[0].Rows[sal]["LOP"].ToString();
                    BasicLOP = Convert.ToString(dsset.Tables[0].Rows[sal]["Tot_Lop"]);//delsi2605

                    string payband = dsset.Tables[0].Rows[sal]["pay_band"].ToString();
                    string gradepay = dsset.Tables[0].Rows[sal]["grade_pay"].ToString();
                    bascic = dsset.Tables[0].Rows[sal]["Basic"].ToString();
                    AGP = dsset.Tables[0].Rows[sal]["AGP"].ToString();
                    Increment = dsset.Tables[0].Rows[sal]["IncrementAmt"].ToString();
                    Incrementtime = dsset.Tables[0].Rows[sal]["IncrementTime"].ToString();
                    string banaccount = dsset.Tables[0].Rows[sal]["bankaccount"].ToString();
                    string pfsalary = dsset.Tables[0].Rows[sal]["PF_Salary"].ToString();
                    string esisalary = dsset.Tables[0].Rows[sal]["ESI_Salary"].ToString();
                    string regisin = dsset.Tables[0].Rows[sal]["resign"].ToString();
                    if (regisin.Trim().ToLower() == "true" || regisin.Trim() == "1")
                    {
                        fpsalary.Sheets[0].Rows[rowstr - 1].BackColor = Color.Pink;
                    }

                    fpsalary.Sheets[0].Cells[rowstr - 1, 0].Text = sno.ToString();
                    if (cblsearch.Items[30].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[3].Visible = true;
                    }
                    else
                    {
                        fpsalary.Sheets[0].Columns[3].Visible = false;

                    }
                    if (chkcontribution.Checked == true)
                    {
                        fpsalary.Sheets[0].Cells[rowstr - 1, colgross - 4].Text = pfsalary.ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 1, colgross - 3].Text = esisalary.ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 1, colgross - 4].Font.Bold = true;
                        fpsalary.Sheets[0].Cells[rowstr - 1, colgross - 3].Font.Bold = true;
                        fpsalary.Sheets[0].Cells[rowstr - 1, colgross - 4].HorizontalAlign = HorizontalAlign.Right;
                        fpsalary.Sheets[0].Cells[rowstr - 1, colgross - 3].HorizontalAlign = HorizontalAlign.Right;


                    }


                    fpsalary.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].Columns[1].Locked = false;
                    fpsalary.Sheets[0].Cells[rowstr - 1, 1].CellType = chkcell1;
                    fpsalary.Sheets[0].Cells[rowstr - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].Cells[rowstr - 1, 2].Text = staffname.ToString();
                    fpsalary.Sheets[0].Cells[rowstr - 1, 2].Tag = staffcode1.ToString();
                    fpsalary.Sheets[0].Cells[rowstr - 1, 3].Text = staffcode.ToString();
                    fpsalary.Sheets[0].Cells[rowstr - 1, 3].Locked = true;

                    fpsalary.Sheets[0].Cells[rowstr - 1, 5].Text = dept.ToString();
                    fpsalary.Sheets[0].Cells[rowstr - 1, 5].Locked = true;
                    fpsalary.Sheets[0].Cells[rowstr - 1, 5].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].Cells[rowstr - 1, 6].Text = dept_acrronym.ToString();
                    fpsalary.Sheets[0].Cells[rowstr - 1, 6].Locked = true;
                    fpsalary.Sheets[0].Cells[rowstr - 1, 6].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].Cells[rowstr - 1, 7].Text = desig_acronym.ToString();
                    fpsalary.Sheets[0].Cells[rowstr - 1, 7].Locked = true;
                    fpsalary.Sheets[0].Cells[rowstr - 1, 7].HorizontalAlign = HorizontalAlign.Left;

                    fpsalary.Sheets[0].Cells[rowstr - 1, 10].Text = joindate.ToString();
                    fpsalary.Sheets[0].Cells[rowstr - 1, 10].Locked = true;

                    fpsalary.Sheets[0].Cells[rowstr - 1, 4].Text = designation.ToString();
                    fpsalary.Sheets[0].Cells[rowstr - 1, 8].Text = category.ToString();
                    fpsalary.Sheets[0].Cells[rowstr - 1, 8].Locked = true;
                    fpsalary.Sheets[0].Cells[rowstr - 1, 9].Text = dsset.Tables[0].Rows[sal]["stftype"].ToString();
                    fpsalary.Sheets[0].Cells[rowstr - 1, 9].Locked = true;
                    //Start===========Added by Manikandan 20/08/2013==========
                    fpsalary.Sheets[0].Cells[rowstr - 1, 2].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].Cells[rowstr - 1, 6].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].Cells[rowstr - 1, 7].HorizontalAlign = HorizontalAlign.Left;
                    //===========================End==========================

                    //******************************Added by srinath 12/1/2015================
                    Dictionary<string, string> dicactaloo = new Dictionary<string, string>();
                    dsset.Tables[1].DefaultView.RowFilter = "staff_code='" + staffcode + "'";
                    DataView dvallow = dsset.Tables[1].DefaultView;
                    if (dvallow.Count > 0)
                    {
                        string actall = dvallow[0]["allowances"].ToString();
                        string[] spactalo = actall.Split('\\');
                        for (int i = 0; i < spactalo.GetUpperBound(0); i++)
                        {
                            string getactal = spactalo[i];
                            if (getactal.Trim() != "" && getactal != null)
                            {
                                string[] actallspv = getactal.Split(';');
                                if (actallspv.GetUpperBound(0) >= 8)
                                {
                                    Double getalloval = 0;
                                    if (actallspv[1].ToString().Trim().ToLower() == "percent")
                                    {
                                        Double getrealsalry = 0;
                                        Double getperce = 0;
                                        string getval = "0";
                                        if (actallspv[6].ToString().Trim() == "1")
                                        {
                                            if (actu_basicpay.Trim() != "" && actu_basicpay != null)
                                            {
                                                getrealsalry = Convert.ToDouble(actu_basicpay);
                                                getrealsalry = Math.Round(getrealsalry, 0, MidpointRounding.AwayFromZero);
                                            }
                                            if (actallspv[2].ToString().Trim() != "" && actallspv[2].ToString() != null)
                                            {
                                                getperce = Convert.ToDouble(actallspv[2].ToString());
                                                getperce = Math.Round(getperce, 0, MidpointRounding.AwayFromZero);
                                            }
                                            Double val = getrealsalry / 100 * getperce;
                                            val = Math.Round(val, 0, MidpointRounding.AwayFromZero);
                                            getval = val.ToString();
                                        }
                                        else if (actallspv[8].ToString().Trim() == "1")
                                        {
                                            if (actu_basicpay.Trim() != "" && actu_basicpay != null)
                                            {
                                                getrealsalry = Convert.ToDouble(actu_basicpay);
                                                getrealsalry = Math.Round(getrealsalry, 0, MidpointRounding.AwayFromZero);
                                            }
                                            if (gradepay.Trim() != "" && gradepay != null)
                                            {
                                                getrealsalry = getrealsalry + Convert.ToDouble(gradepay);
                                                getrealsalry = Math.Round(getrealsalry, 0, MidpointRounding.AwayFromZero);
                                            }

                                            if (actallspv[2].ToString().Trim() != "" && actallspv[2].ToString() != null)
                                            {
                                                getperce = Convert.ToDouble(actallspv[2].ToString());
                                                getperce = Math.Round(getperce, 0, MidpointRounding.AwayFromZero);
                                            }
                                            Double val = getrealsalry / 100 * getperce;
                                            val = Math.Round(val, 0, MidpointRounding.AwayFromZero);
                                            getval = val.ToString();
                                        }
                                        if (!dicactaloo.ContainsKey(actallspv[0].ToString()))
                                        {
                                            dicactaloo.Add(actallspv[0].ToString().Trim().ToLower(), getval);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    //*******************END********************************************************************
                    allowance = dsset.Tables[0].Rows[sal]["allowances"].ToString();
                    int h = 0;

                    string[] allowanmce_arr1;
                    string alowancesplit;
                    double dblallowact2 = 0;
                    double grosspaylop = 0;

                    allowanmce_arr1 = allowance.Split('\\');
                    for (int i = 0; i < allowanmce_arr1.GetUpperBound(0); i++)
                    {
                        alowancesplit = allowanmce_arr1[i];
                        string[] allowanceda;
                        allowanceda = alowancesplit.Split(';');
                        string da;
                        string da3;
                        double ds4 = 0;
                        string da2;
                        double ds3 = 0;
                        double ds2 = 0;
                        string dblallowact;
                        double dblallowact1 = 0;
                        dblallowact2 = 0;

                        da = allowanceda[0];
                        da3 = allowanceda[3];
                        da2 = allowanceda[2];
                        dblallowact = allowanceda[3];
                        ///// Modified by subburaj on 21/06/2014

                        // if (chkcontribution.Checked == true)//modified by srinath 21/1/13
                        ///{

                        ///}

                        //else
                        //{

                        //}
                        string[] spval = da2.Split('-');
                        da2 = spval[0];
                        if (da2.Trim() == "" || da2 == null)
                        {
                            da2 = "0";
                        }
                        ds3 = Convert.ToDouble(da2);
                        ds4 = Convert.ToDouble(da3);
                        ds3 = Math.Round(ds3, 0);
                        ds2 = Convert.ToDouble(da2);
                        // ds2 = Math.Round(da2, 0);
                        dblallowact1 = Convert.ToDouble(dblallowact);
                        dblallowact1 = Math.Round(dblallowact1, 0);
                        dblallowact2 = dblallowact2 + (ds3 - dblallowact1);
                        int all = 0;
                        da = da.ToUpper();
                        for (int k = 13; k <= colcount1 - 2; k++)
                        {
                            string headval = fpsalary.Sheets[0].ColumnHeader.Cells[1, k].Text;
                            headval = headval.ToUpper();
                            //Mahesh
                            fpsalary.Sheets[0].Cells[rowstr - 1, k].HorizontalAlign = HorizontalAlign.Right;


                            //fpsalary.Sheets[0].Cells[rowstr - 1, k].Locked = true;
                            if (da == headval)
                            {
                                if (dicactaloo.ContainsKey(headval.ToString().Trim().ToLower()))
                                {
                                    fpsalary.Sheets[0].Cells[rowstr - 1, k].Text = dicactaloo[headval.ToString().Trim().ToLower()];
                                }
                                else
                                {
                                    fpsalary.Sheets[0].Cells[rowstr - 1, k].Text = ds3.ToString();
                                }

                                ds4 = Math.Round(ds4, 0, MidpointRounding.AwayFromZero);
                                fpsalary.Sheets[0].Cells[rowstr - 1, k + ccountforallow].Text = ds4.ToString();

                                //fpsalary.Sheets[0].Cells[rowstr - 1, k].Locked = true;
                                all++;
                                fpsalary.Sheets[0].Cells[rowstr - 1, k].HorizontalAlign = HorizontalAlign.Right;
                                fpsalary.Sheets[0].Cells[rowstr - 1, k + ccountforallow].HorizontalAlign = HorizontalAlign.Right;

                                grosspaylop = Convert.ToDouble(ds2) + grosspaylop;

                                if (allowanceda[1] == "Percent")
                                {
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 22].Text = allowanceda[2];
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 22].Locked = true;
                                }
                                k = colcount1;

                            }
                            if (da == "INCENTIVE")
                            {
                                splall = 2;
                            }
                        }
                        int o = 0;
                        if (all == 0)
                        {
                            for (int k = colspl; k <= fpsalary.Sheets[0].ColumnCount - 2; k++)
                            {
                                string headval = "";
                                if (splall > o)
                                {
                                    headval = Convert.ToString(fpsalary.Sheets[0].ColumnHeader.Cells[0, k].Tag);
                                    headval = headval.ToUpper();
                                    o++;
                                }
                                //Sankar Modify June'28
                                fpsalary.Sheets[0].Cells[rowstr - 1, k].HorizontalAlign = HorizontalAlign.Right;


                                //fpsalary.Sheets[0].Cells[rowstr - 1, k].Locked = true;
                                if (da == headval)
                                {
                                    fpsalary.Sheets[0].Cells[rowstr - 1, k].Text = ds3.ToString();
                                    fpsalary.Sheets[0].Cells[rowstr - 1, k + 5].Text = ds4.ToString();

                                    //fpsalary.Sheets[0].Cells[rowstr - 1, k].Locked = true;
                                    fpsalary.Sheets[0].Cells[rowstr - 1, k].HorizontalAlign = HorizontalAlign.Right;


                                }
                            }
                        }
                    }
                    double BasicLOP1 = 0;
                    double dblGross = 0;
                    double dblNetadd = 0;
                    double totalded1 = 0;
                    BasicLOP1 = Convert.ToDouble(BasicLOP);
                    BasicLOP1 = Math.Round(BasicLOP1, 0);
                    dblallowact2 = dblallowact2 + BasicLOP1;
                    deduction = dsset.Tables[0].Rows[sal]["deductions"].ToString();
                    dblNetadd = Convert.ToDouble(netadd);
                    dblGross = dblallowact2 + dblNetadd;
                    totalded1 = Convert.ToDouble(totalded);
                    //  totalded1 = totalded1 + dblallowact2;//delsi1304

                    try
                    {
                        //Adv Rs............Pay Deatils
                        //Bind Advance Amount///////////////////
                        //Start.........Sankar Added June'24
                        con1.Close();
                        con1.Open();
                        string quertAdv = "";

                        DataSet dsload = new DataSet();
                        quertAdv = "select * from dailytransaction where name= '" + staffcode1 + "' +'-'+ '" + staffname + "' and studOrOthers =3";
                        SqlDataAdapter daupdatequery2 = new SqlDataAdapter(quertAdv, con1);
                        daupdatequery2.Fill(dsload);

                        if (dsload.Tables[0].Rows.Count > 0)
                        {
                            adv_amount = "";
                            for (int i2 = 0; i2 < dsload.Tables[0].Rows.Count; i2++)
                            {
                                string staff_Code = "";
                                staff_Code = dsload.Tables[0].Rows[i2]["name"].ToString();

                                string[] spi_staff_code = staff_Code.Split('-');
                                string final_spi_staff_code = spi_staff_code[0];
                                if (final_spi_staff_code != "" && spi_staff_code[0] != "0")
                                {
                                    if (final_spi_staff_code == staffcode1)
                                    {
                                        //string staff_name_code = '" +staffcode1
                                        if (adv_amount == "")
                                        {
                                            adv_amount = d2.GetFunction("select sum(credit) from dailytransaction where name= '" + staffcode1 + "' +'-'+ '" + staffname + "' and studOrOthers =3");
                                            //adv_amount = GetFunction("select sum(credit) from dailytransaction where studOrOthers =3");
                                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 5].Text = adv_amount;
                                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 5].Locked = true;
                                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 5].HorizontalAlign = HorizontalAlign.Right;
                                        }
                                    }
                                    else
                                    {
                                        adv_amount = "";
                                        fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 5].Text = "0";
                                        fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 5].Locked = true;
                                        fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 5].HorizontalAlign = HorizontalAlign.Right;
                                    }
                                }
                            }
                        }
                        else
                        {
                            adv_amount = "";
                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 5].Text = "0";
                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 5].Locked = true;
                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 5].HorizontalAlign = HorizontalAlign.Right;
                        }
                        //End
                        //Remaining Balance Pay Details....Sankar Added June'24

                        //this month deduction..........................
                        //start......................................
                        string dec_This_Month = "";
                        string ref_staff_code = staffcode1;
                        string staff_new_name = staffname;

                        int check1 = 0;
                        string collect_amt1 = "";
                        string common_value1 = "";
                        collect_amt1 = "select * from stafftrans where staff_code = '" + staffcode1 + "' and latestrec = '1'";
                        SqlDataAdapter dec_Collect13 = new SqlDataAdapter(collect_amt1, con1);
                        DataSet dsload21 = new DataSet();
                        dec_Collect13.Fill(dsload21);
                        if (dsload21.Tables[0].Rows.Count > 0)
                        {
                            collect_amount = 0;
                            for (int i2 = 0; i2 < dsload21.Tables[0].Rows.Count; i2++)
                            {
                                string staff_collect_amt = "";
                                staff_collect_amt = dsload21.Tables[0].Rows[i2]["deductions"].ToString();

                                string[] spli_staff_collect_amt = staff_collect_amt.Split('\\');

                                int count = 0;
                                count = spli_staff_collect_amt.Length;

                                for (int i = 0; i < count; i++)
                                {
                                    string final_month_Collect = spli_staff_collect_amt[i];
                                    string[] spli_salary_Amt = final_month_Collect.Split(';');
                                    if (check1 == 0)
                                    {

                                        if (spli_salary_Amt.Length > 10)
                                        {

                                            if (spli_salary_Amt[10] != "0" && spli_salary_Amt[10] != "")
                                            {
                                                common_value1 = spli_salary_Amt[0];
                                                check1++;
                                                string collect_New_Amt = "";
                                                collect_New_Amt = "select * from monthlypay where staff_code = '" + staffcode1 + "' and fdate ='" + datefrom + "'";
                                                DataSet dsload3 = new DataSet();
                                                SqlDataAdapter dec_Collect12 = new SqlDataAdapter(collect_New_Amt, con1);
                                                dec_Collect12.Fill(dsload3);
                                                if (dsload3.Tables[0].Rows.Count > 0)
                                                {
                                                    int ch = 0;
                                                    for (int i1 = 0; i1 < dsload3.Tables[0].Rows.Count; i1++)
                                                    {
                                                        string staff_amount = "";
                                                        staff_amount = dsload3.Tables[0].Rows[i1]["deductions"].ToString();
                                                        string[] spli_staff_collect_amt_new = staff_amount.Split('\\');

                                                        int length_spli_value = 0;
                                                        length_spli_value = spli_staff_collect_amt_new.Length;
                                                        for (int k = 0; k < length_spli_value; k++)
                                                        {
                                                            string final_month_Collect_amt = spli_staff_collect_amt_new[k];

                                                            string[] spli_salary_Amt_Final = final_month_Collect_amt.Split(';');
                                                            if (common_value1 == spli_salary_Amt_Final[0])
                                                            {
                                                                if (ch == 0)
                                                                {
                                                                    ch++;
                                                                    month_amount = Convert.ToDouble(spli_salary_Amt_Final[3]);
                                                                }
                                                                else
                                                                {
                                                                    month_amount = month_amount + Convert.ToDouble(spli_salary_Amt_Final[3]);

                                                                }
                                                                fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 3].Text = month_amount.ToString();
                                                                fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 3].Locked = true;
                                                                fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 3].HorizontalAlign = HorizontalAlign.Right;
                                                            }
                                                        }

                                                    }
                                                }
                                                else
                                                {
                                                    fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 3].Text = "0";
                                                    fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 3].Locked = true;
                                                    fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 3].HorizontalAlign = HorizontalAlign.Right;
                                                }
                                            }

                                        }
                                        else
                                        {
                                            //check++;
                                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 3].Text = "0";
                                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 3].Locked = true;
                                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 3].HorizontalAlign = HorizontalAlign.Right;
                                        }

                                    }
                                    else
                                    {

                                    }
                                }

                            }
                        }
                        else
                        {
                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 3].Text = "0";
                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 3].Locked = true;
                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 3].HorizontalAlign = HorizontalAlign.Right;
                        }


                        //collect amt.......Sankar Added June'24
                        //Start......................
                        int check = 0;
                        string collect_amt = "";
                        string common_value = "";
                        collect_amt = "select * from stafftrans where staff_code = '" + staffcode1 + "' and latestrec = '1'";
                        SqlDataAdapter dec_Collect = new SqlDataAdapter(collect_amt, con1);
                        DataSet dsload2 = new DataSet();
                        dec_Collect.Fill(dsload2);
                        if (dsload2.Tables[0].Rows.Count > 0)
                        {
                            collect_amount = 0;
                            for (int i2 = 0; i2 < dsload2.Tables[0].Rows.Count; i2++)
                            {
                                string staff_collect_amt = "";
                                staff_collect_amt = dsload2.Tables[0].Rows[i2]["deductions"].ToString();

                                string[] spli_staff_collect_amt = staff_collect_amt.Split('\\');

                                int count = 0;
                                count = spli_staff_collect_amt.Length;

                                for (int i = 0; i < count; i++)
                                {
                                    string final_month_Collect = spli_staff_collect_amt[i];
                                    string[] spli_salary_Amt = final_month_Collect.Split(';');
                                    if (check == 0)
                                    {

                                        if (spli_salary_Amt.Length > 10)
                                        {

                                            if (spli_salary_Amt[10] != "0" && spli_salary_Amt[10] != "")
                                            {
                                                common_value = spli_salary_Amt[0];
                                                check++;
                                                string collect_New_Amt = "";
                                                collect_New_Amt = "select * from monthlypay where staff_code = '" + staffcode1 + "' and latestrec = '0' and fdate < '" + datefrom + "'";
                                                DataSet dsload3 = new DataSet();
                                                SqlDataAdapter dec_Collect1 = new SqlDataAdapter(collect_New_Amt, con1);
                                                dec_Collect1.Fill(dsload3);
                                                if (dsload3.Tables[0].Rows.Count > 0)
                                                {
                                                    int ch = 0;
                                                    for (int i1 = 0; i1 < dsload3.Tables[0].Rows.Count; i1++)
                                                    {
                                                        string staff_amount = "";
                                                        staff_amount = dsload3.Tables[0].Rows[i1]["deductions"].ToString();
                                                        string[] spli_staff_collect_amt_new = staff_amount.Split('\\');

                                                        int length_spli_value = 0;
                                                        length_spli_value = spli_staff_collect_amt_new.Length;
                                                        for (int k = 0; k < length_spli_value; k++)
                                                        {
                                                            string final_month_Collect_amt = spli_staff_collect_amt_new[k];

                                                            string[] spli_salary_Amt_Final = final_month_Collect_amt.Split(';');

                                                            if (common_value == spli_salary_Amt_Final[0])
                                                            {
                                                                if (ch == 0)
                                                                {
                                                                    ch++;
                                                                    collect_amount = Convert.ToDouble(spli_salary_Amt_Final[3]);
                                                                }
                                                                else
                                                                {
                                                                    collect_amount = collect_amount + Convert.ToDouble(spli_salary_Amt_Final[3]);

                                                                }
                                                                fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 4].Text = collect_amount.ToString();
                                                                fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 4].Locked = true;
                                                                fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 4].HorizontalAlign = HorizontalAlign.Right;
                                                            }
                                                        }

                                                    }
                                                }
                                                else
                                                {
                                                    fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 4].Text = "0";
                                                    fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 4].Locked = true;
                                                    fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 4].HorizontalAlign = HorizontalAlign.Right;
                                                }
                                            }

                                        }
                                        else
                                        {
                                            //check++;
                                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 4].Text = "0";
                                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 4].Locked = true;
                                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 4].HorizontalAlign = HorizontalAlign.Right;
                                        }

                                    }
                                    else
                                    {
                                        //fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 5].Text = "0";
                                        //fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 5].Locked = true;
                                        //fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 5].HorizontalAlign = HorizontalAlign.Right;
                                    }
                                }

                            }
                        }
                        else
                        {
                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 4].Text = "0";
                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 4].Locked = true;
                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 4].HorizontalAlign = HorizontalAlign.Right;
                        }
                        //End..........................                   


                        //Balance Amt Bind...........Added Sankar June'25
                        //start......................
                        if (adv_amount != "")
                        {
                            double balance_Amount = 0;
                            balance_Amount = Convert.ToDouble(adv_amount) - (month_amount + collect_amount);
                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 2].Text = balance_Amount.ToString();
                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 2].Locked = true;
                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 2].HorizontalAlign = HorizontalAlign.Right;
                        }
                        else
                        {
                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 2].Text = "0";
                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 2].Locked = true;
                            fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 2].HorizontalAlign = HorizontalAlign.Right;
                        }



                        //End.........................


                    }
                    catch
                    {

                    }


                    string[] deduction_arr1; ;
                    string deductionsplit1;
                    deduction_arr1 = deduction.Split('\\');
                    string de2 = "";
                    for (int sp = 0; sp < deduction_arr1.GetUpperBound(0); sp++)
                    {
                        deductionsplit1 = deduction_arr1[sp];
                        string[] deductionda;
                        deductionda = deductionsplit1.Split(';');
                        string de;
                        string de3;
                        de = deductionda[0];
                        de = de.ToUpper();
                        de2 = deductionda[2];
                        de3 = deductionda[3];
                        for (int p = col; p <= colcount1 - 1; p++)//Modified by srinath 12 to col for deduction missing
                        {
                            string headval2 = fpsalary.Sheets[0].ColumnHeader.Cells[1, p].Text;
                            headval2 = headval2.ToUpper();
                            //if (de == headval2)
                            if (de == headval2 && (fpsalary.Sheets[0].Cells[rowstr - 1, p].Text == string.Empty || fpsalary.Sheets[0].Cells[rowstr - 1, p].Text == "0"))//Modified by Manikandan on 19/10/2013
                            {
                                Double getval = Convert.ToDouble(de3);
                                getval = Math.Round(getval, 0, MidpointRounding.AwayFromZero);
                                de3 = getval.ToString();
                                fpsalary.Sheets[0].Cells[rowstr - 1, p].Text = Convert.ToString(Math.Round(Convert.ToDouble(de3), 0, MidpointRounding.AwayFromZero)); // ************************* Modify jairam 10-12-2014 *****************
                                // fpsalary.Sheets[0].Cells[rowstr - 1, p + 4].Text = Convert.ToString(Math.Round(Convert.ToDouble(de3), 0, MidpointRounding.AwayFromZero));

                                fpsalary.Sheets[0].Cells[rowstr - 1, p].Locked = true;
                                //Mahesh
                                fpsalary.Sheets[0].Cells[rowstr - 1, p].HorizontalAlign = HorizontalAlign.Right;
                                //  fpsalary.Sheets[0].Cells[rowstr - 1, p + 4].HorizontalAlign = HorizontalAlign.Right;
                                p = colcount1;
                            }

                        }
                    }
                    //Added By Subburaj 06/09/2014*********//
                    if (payband != "")
                    {
                        fpsalary.Sheets[0].Cells[rowstr - 1, 18].Text = payband.ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 1, 18].HorizontalAlign = HorizontalAlign.Right;
                    }
                    else
                    {
                        fpsalary.Sheets[0].Cells[rowstr - 1, 18].Text = "0";
                        fpsalary.Sheets[0].Cells[rowstr - 1, 18].HorizontalAlign = HorizontalAlign.Right;
                    }
                    if (gradepay != "")
                    {
                        fpsalary.Sheets[0].Cells[rowstr - 1, 19].Text = gradepay.ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 1, 19].HorizontalAlign = HorizontalAlign.Right;
                    }
                    else
                    {
                        fpsalary.Sheets[0].Cells[rowstr - 1, 19].Text = "0";
                        fpsalary.Sheets[0].Cells[rowstr - 1, 19].HorizontalAlign = HorizontalAlign.Right;
                    }
                    //*********************End*************************//
                    if (bascic != "")
                    {
                        fpsalary.Sheets[0].Cells[rowstr - 1, 20].Text = bascic.ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 1, 20].HorizontalAlign = HorizontalAlign.Right;
                    }
                    else
                    {
                        fpsalary.Sheets[0].Cells[rowstr - 1, 20].Text = "0";
                        fpsalary.Sheets[0].Cells[rowstr - 1, 20].HorizontalAlign = HorizontalAlign.Right;
                    }
                    if (AGP != "")
                    {
                        fpsalary.Sheets[0].Cells[rowstr - 1, 21].Text = AGP.ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 1, 21].HorizontalAlign = HorizontalAlign.Right;
                    }
                    else
                    {
                        fpsalary.Sheets[0].Cells[rowstr - 1, 21].Text = "0";
                        fpsalary.Sheets[0].Cells[rowstr - 1, 21].HorizontalAlign = HorizontalAlign.Right;
                    }
                    if (Increment != "")
                    {
                        fpsalary.Sheets[0].Cells[rowstr - 1, 23].Text = Increment.ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 1, 23].HorizontalAlign = HorizontalAlign.Right;
                    }
                    else
                    {
                        fpsalary.Sheets[0].Cells[rowstr - 1, 23].Text = "0";
                        fpsalary.Sheets[0].Cells[rowstr - 1, 23].HorizontalAlign = HorizontalAlign.Right;
                    }
                    if (Incrementtime != "")
                    {
                        fpsalary.Sheets[0].Cells[rowstr - 1, 22].Text = Incrementtime.ToString();
                    }
                    else
                    {
                        fpsalary.Sheets[0].Cells[rowstr - 1, 22].Text = "0";
                    }
                    fpsalary.Sheets[0].Cells[rowstr - 1, 25].Text = Convert.ToString(Math.Round(Convert.ToDouble(basicpay), 0, MidpointRounding.AwayFromZero));
                    fpsalary.Sheets[0].Cells[rowstr - 1, 25].Locked = true;
                    fpsalary.Sheets[0].Cells[rowstr - 1, 25].HorizontalAlign = HorizontalAlign.Right;

                    fpsalary.Sheets[0].Cells[rowstr - 1, 24].Text = Convert.ToString(Math.Round(Convert.ToDouble(actu_basicpay), 0, MidpointRounding.AwayFromZero));
                    fpsalary.Sheets[0].Cells[rowstr - 1, 24].Locked = true;
                    fpsalary.Sheets[0].Cells[rowstr - 1, 24].HorizontalAlign = HorizontalAlign.Right;


                    // fpsalary.Sheets[0].Cells[rowstr - 1, colheder - 2].Text = dblGross.ToString();

                    grosspaylop = Convert.ToDouble(actu_basicpay) + grosspaylop;
                    //******************modifiied by srinath 21/Jan/2015************************
                    string actgrosspay = dsset.Tables[0].Rows[sal]["netaddact"].ToString();
                    if (actgrosspay.Trim() != "" && actgrosspay != null)
                    {
                        fpsalary.Sheets[0].Cells[rowstr - 1, colgross - 2].Text = Convert.ToString(Math.Round(Convert.ToDouble(actgrosspay), 0, MidpointRounding.AwayFromZero));

                    }
                    else
                    {
                        fpsalary.Sheets[0].Cells[rowstr - 1, colgross - 2].Text = Convert.ToString(Math.Round(Convert.ToDouble(grosspaylop), 0, MidpointRounding.AwayFromZero));
                    }
                    fpsalary.Sheets[0].Cells[rowstr - 1, colgross - 2].Font.Size = FontUnit.Large;
                    fpsalary.Sheets[0].Cells[rowstr - 1, colgross - 2].Font.Name = "Book Antiqua";
                    fpsalary.Sheets[0].Cells[rowstr - 1, colgross - 2].Locked = true;
                    fpsalary.Sheets[0].Cells[rowstr - 1, colgross - 2].HorizontalAlign = HorizontalAlign.Right;


                    fpsalary.Sheets[0].Cells[rowstr - 1, colgross - 1].Text = Convert.ToString(Math.Round(Convert.ToDouble(dsset.Tables[0].Rows[sal]["netadd"]), 0, MidpointRounding.AwayFromZero));
                    fpsalary.Sheets[0].Cells[rowstr - 1, colgross - 1].Locked = true;
                    fpsalary.Sheets[0].Cells[rowstr - 1, colgross - 1].HorizontalAlign = HorizontalAlign.Right;
                    ////////////

                    if (cblsearch.Items[44].Selected == true)
                    {
                        fpsalary.Sheets[0].Cells[rowstr - 1, UanNo - 1].Text = Convert.ToString(uan_num);
                        fpsalary.Sheets[0].Cells[rowstr - 1, UanNo - 1].CellType = txt;
                        fpsalary.Sheets[0].Cells[rowstr - 1, UanNo - 1].Locked = true;
                        fpsalary.Sheets[0].Cells[rowstr - 1, UanNo - 1].HorizontalAlign = HorizontalAlign.Left;
                    }

                    fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_pf_number - 1].Text = Convert.ToString(Math.Round(Convert.ToDouble(BasicLOP), 0, MidpointRounding.AwayFromZero));
                    fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_pf_number - 1].Locked = true;
                    fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_pf_number - 1].HorizontalAlign = HorizontalAlign.Right;

                    // to add lop amount

                    fpsalary.Sheets[0].Cells[rowstr - 1, colheder - 1].Text = dsset.Tables[0].Rows[sal]["pfnumber"].ToString();
                    fpsalary.Sheets[0].Cells[rowstr - 1, colheder - 1].Locked = true;
                    //fpsalary.Sheets[0].Cells[rowstr - 1, colheder - 1].HorizontalAlign = HorizontalAlign.Right;

                    double totdeductlop = 0;
                    if (Convert.ToString(dsset.Tables[0].Rows[sal]["LOP"]) != "")
                    {
                        totdeductlop = Convert.ToDouble(Convert.ToString(dsset.Tables[0].Rows[sal]["LOP"]));
                    }
                    double totnetded = 0;

                    if (Convert.ToString(dsset.Tables[0].Rows[sal]["netded"]) != "")
                    {
                        totnetded = Convert.ToDouble(Convert.ToString(dsset.Tables[0].Rows[sal]["netded"]));
                    }

                    // double lopandded = totdeductlop + totnetded;
                    double lopandded = totnetded;
                    //SANKAR ADDED JUNE'28...............
                    if (cblsearch.Items[25].Selected == true)
                    {
                        // fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 1].Text = dr24["netded"].ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 1].Text = Convert.ToString(Math.Round(Convert.ToDouble(lopandded), 0, MidpointRounding.AwayFromZero));
                        fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 1].HorizontalAlign = HorizontalAlign.Right;
                    }
                    else
                    {
                        fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 1].Text = Convert.ToString(Math.Round(Convert.ToDouble(lopandded), 0, MidpointRounding.AwayFromZero));
                        // fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 1].Text = dr24["netded"].ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 1].Locked = true;
                        fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 1].HorizontalAlign = HorizontalAlign.Right;
                    }
                    fpsalary.Sheets[0].Cells[rowstr - 1, colcount1 - 2].Text = Convert.ToString(Math.Round(Convert.ToDouble(netpay), 0, MidpointRounding.AwayFromZero));
                    nettot = nettot + Convert.ToDouble(netpay);//delsiref1506
                    fpsalary.Sheets[0].Cells[rowstr - 1, colcount1 - 2].Locked = true;
                    fpsalary.Sheets[0].Cells[rowstr - 1, colcount1 - 2].HorizontalAlign = HorizontalAlign.Right;
                    fpsalary.Sheets[0].Cells[rowstr - 1, colcount1 - 3].Text = dsset.Tables[0].Rows[sal]["bankaccount"].ToString();
                    fpsalary.Sheets[0].Cells[rowstr - 1, colcount1 - 3].Locked = true;
                    fpsalary.Sheets[0].Cells[rowstr - 1, colcount1 - 3].Locked = true;
                    fpsalary.Sheets[0].Cells[rowstr - 1, 0].Locked = true;


                    //if (cblsearch.Items[44].Selected == true)
                    //{
                    //    fpsalary.Sheets[0].Cells[rowstr - 1, columnVal].Text = Convert.ToString(uan_num);
                    //    fpsalary.Sheets[0].Cells[rowstr - 1, columnVal].CellType = txt;
                    //    fpsalary.Sheets[0].Cells[rowstr - 1, columnVal].Locked = true;
                    //    fpsalary.Sheets[0].Cells[rowstr - 1, columnVal].HorizontalAlign = HorizontalAlign.Left;
                    //}


                    if (cblsearch.Items[42].Selected == true)//delsi26
                    {
                        string bnkName = Convert.ToString(ownbankname);
                        if (bnkName.ToUpper().Trim() == "SELECT")
                        {
                            bnkName = "";
                        }
                        fpsalary.Sheets[0].Cells[rowstr - 1, banknamecolcount - 1].Text = Convert.ToString(bnkName);

                        fpsalary.Sheets[0].Cells[rowstr - 1, banknamecolcount - 1].Locked = true;
                        fpsalary.Sheets[0].Cells[rowstr - 1, banknamecolcount - 1].HorizontalAlign = HorizontalAlign.Left;


                    }
                    if (cblsearch.Items[43].Selected == true)
                    {
                        if (collbank_name != "0")
                        {
                            int bankcodee = Convert.ToInt32(collbank_name);

                            string getName = d2.GetFunction("select BankName from FM_FinBankMaster where CollegeCode='" + collegecode + "' and BankPK='" + bankcodee + "'");
                            fpsalary.Sheets[0].Cells[rowstr - 1, clgbanknamecount - 1].Text = Convert.ToString(getName);

                            fpsalary.Sheets[0].Cells[rowstr - 1, clgbanknamecount - 1].Locked = true;
                            fpsalary.Sheets[0].Cells[rowstr - 1, clgbanknamecount - 1].HorizontalAlign = HorizontalAlign.Left;
                        }
                        else
                        {
                            fpsalary.Sheets[0].Cells[rowstr - 1, clgbanknamecount - 1].Text = "";

                        }

                    }
                    string bankquerys = "select hb.bankpk,BankName from hr_bankrights  hb,FM_FinBankMaster fb where hb.bankpk=fb.BankPK and hb.college_code=fb.CollegeCode and hb.college_code='" + collegecode + "'";//delsi1106
                    DataSet bankdss = new DataSet();
                    Hashtable bankhash = new Hashtable();

                    bankdss = d2.select_method_wo_parameter(bankquerys, "text");
                    if (bankdss.Tables[0].Rows.Count > 0)
                    {
                        int totalbankcount = (bankdss.Tables[0].Rows.Count) + 1;
                        string getpaymode = Convert.ToString(dsset.Tables[0].Rows[sal]["PayMode"]);
                        int clgBankcodee = Convert.ToInt32(dsset.Tables[0].Rows[sal]["clgbankcode"]);
                        for (int i = 0; i < bankdss.Tables[0].Rows.Count; i++)
                        {
                            int headertag = Convert.ToInt32(fpsalary.Sheets[0].ColumnHeader.Cells[0, columncountbank - totalbankcount + i].Tag);
                            if (getpaymode.Trim().ToUpper() == "CREDIT")
                            {

                                if (clgBankcodee == headertag)
                                {
                                    double netsalarys = 0;
                                    Double.TryParse(Convert.ToString(dsset.Tables[0].Rows[sal]["netsal"]), out netsalarys);
                                    netsalarys = Math.Round(netsalarys, 0, MidpointRounding.AwayFromZero);
                                    fpsalary.Sheets[0].Cells[rowstr - 1, columncountbank - totalbankcount + i].Text = Convert.ToString(netsalarys);
                                    fpsalary.Sheets[0].Cells[rowstr - 1, columncountbank - totalbankcount + i].HorizontalAlign = HorizontalAlign.Right;
                                    fpsalary.Sheets[0].Cells[rowstr - 1, columncountbank - totalbankcount + i].Font.Name = "Book Antiqua";

                                }
                                else
                                {
                                    fpsalary.Sheets[0].Cells[rowstr - 1, columncountbank - totalbankcount + i].Text = "";
                                    fpsalary.Sheets[0].Cells[rowstr - 1, columncountbank - totalbankcount + i].HorizontalAlign = HorizontalAlign.Right;
                                    fpsalary.Sheets[0].Cells[rowstr - 1, columncountbank - totalbankcount + i].Font.Name = "Book Antiqua";
                                }

                            }

                            else
                            {
                                fpsalary.Sheets[0].Cells[rowstr - 1, columncountbank - totalbankcount + i].Text = "";
                                fpsalary.Sheets[0].Cells[rowstr - 1, columncountbank - totalbankcount + i].HorizontalAlign = HorizontalAlign.Right;
                                fpsalary.Sheets[0].Cells[rowstr - 1, columncountbank - totalbankcount + i].Font.Name = "Book Antiqua";

                            }
                        }


                        if (getpaymode.Trim().ToUpper() == "CASH")
                        {
                            double netsalarys = 0;
                            Double.TryParse(Convert.ToString(dsset.Tables[0].Rows[sal]["netsal"]), out netsalarys);
                            netsalarys = Math.Round(netsalarys, 0, MidpointRounding.AwayFromZero);
                            fpsalary.Sheets[0].Cells[rowstr - 1, columncountbank - 1].Text = Convert.ToString(netsalarys);
                            fpsalary.Sheets[0].Cells[rowstr - 1, columncountbank - 1].HorizontalAlign = HorizontalAlign.Right;
                            fpsalary.Sheets[0].Cells[rowstr - 1, columncountbank - 1].Font.Name = "Book Antiqua";
                        }
                        else
                        {
                            fpsalary.Sheets[0].Cells[rowstr - 1, columncountbank - 1].Text = "";
                            fpsalary.Sheets[0].Cells[rowstr - 1, columncountbank - 1].HorizontalAlign = HorizontalAlign.Right;
                            fpsalary.Sheets[0].Cells[rowstr - 1, columncountbank - 1].Font.Name = "Book Antiqua";

                        }
                       
                    }

                    Hashtable allowhash = new Hashtable();
                    if (cblsearch.Items[45].Selected == true)//delsi1017
                    {

                        getnetsal = Convert.ToInt32(dsset.Tables[0].Rows[sal]["netadd"]);
                        if (graduity != "0")
                        {
                            if (graduity.Contains('+'))
                            {
                                string[] splitval = graduity.Split('+');

                                for (int val = 0; val < splitval.Count(); val++)
                                {
                                    string gratuitytxt = Convert.ToString(splitval[val]);
                                    if (gratuitytxt != "Basic")
                                    {

                                        string allowance3 = "";
                                        allowance3 = Convert.ToString(dsset.Tables[0].Rows[sal]["allowances"]);
                                        string[] allowanmce_arr11;
                                        string alowancesplit1;
                                        int exatval1 = 0;

                                        double DblAllowLOP = 0;
                                        double DblAllowLOP1 = 0;
                                        allowanmce_arr11 = allowance3.Split('\\');
                                        for (int i = 0; i < allowanmce_arr11.GetUpperBound(0); i++)
                                        {
                                            exatval1 = allowanmce_arr11.GetUpperBound(0);
                                            alowancesplit1 = allowanmce_arr11[i];
                                            string[] allowanceda = alowancesplit1.Split(';');
                                            if (allowanceda.GetUpperBound(0) >= 3)
                                            {
                                                string da = allowanceda[0];
                                                if (gratuitytxt == da)
                                                {

                                                    string mode = Convert.ToString(allowanceda[1]);
                                                    string daac = "";
                                                    string da3 = "";
                                                    if (allowanceda[2].Trim() != "")
                                                    {
                                                        string[] spval = allowanceda[2].Split('-');
                                                        if (spval.Length == 2)
                                                        {
                                                            if (mode.Trim().ToUpper() == "PERCENT")
                                                            {
                                                                da3 = Convert.ToString(spval[1]);
                                                            }
                                                            else
                                                            {
                                                                da3 = Convert.ToString(spval[0]);
                                                            }
                                                        }
                                                        else
                                                        {
                                                            da3 = Convert.ToString(allowanceda[3]);
                                                        }
                                                    }
                                                    daac = Convert.ToString(allowanceda[3]);
                                                    double da2 = 0;
                                                    Double.TryParse(daac, out da2);
                                                    double ds3 = 0;
                                                    double.TryParse(da3, out ds3);
                                                    ds3 = Math.Round(ds3, 2, MidpointRounding.AwayFromZero);
                                                    string DblAllowActVal = daac;
                                                    string DblAllowVal = allowanceda[3];
                                                    DblAllowLOP = (Convert.ToDouble(DblAllowActVal) - Convert.ToDouble(DblAllowVal));
                                                    DblAllowLOP = Math.Round(DblAllowLOP);
                                                    DblAllowLOP1 = DblAllowLOP1 + DblAllowLOP;
                                                    if (ds3 != 0)
                                                    {
                                                        if (!allowhash.Contains(da))
                                                        {
                                                            allowhash.Add(da, da3);

                                                        }

                                                    }
                                                }
                                            }
                                        }
                                    }
                                    if (gratuitytxt == "Basic")
                                    {
                                        double basic_pay3 = 0;
                                        double.TryParse(dsset.Tables[0].Rows[sal]["bsalary"].ToString(), out basic_pay3);
                                        if (!allowhash.Contains("Basic"))
                                        {
                                            allowhash.Add("Basic", basic_pay3);
                                        }


                                    }
                                }

                                foreach (DictionaryEntry item in allowhash)
                                {
                                    string key = Convert.ToString(item.Key);

                                    string value = Convert.ToString(item.Value);

                                    gettotallow = gettotallow + Convert.ToInt32(value);
                                }
                                gratuityval = (Convert.ToInt32(gettotallow) * 15 * Years / 26);
                            }
                            else
                            {
                                if (graduity.Trim() == "Gross Pay")
                                {
                                    gratuityval = (Convert.ToInt32(getnetsal) * 15 * Years / 26);
                                }
                            }

                        }
                        fpsalary.Sheets[0].Cells[rowstr - 1, gratuitycount - 1].Text = Convert.ToString(gratuityval);

                        fpsalary.Sheets[0].Cells[rowstr - 1, gratuitycount - 1].Locked = true;
                        fpsalary.Sheets[0].Cells[rowstr - 1, gratuitycount - 1].HorizontalAlign = HorizontalAlign.Right;
                        //fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, gratuitucolcount - 1].Text = Convert.ToString(gratuityval);
                        //fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, gratuitucolcount - 1].HorizontalAlign = HorizontalAlign.Right;
                        //fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, gratuitucolcount - 1].Font.Name = "Book Antiqua";


                    }
                    if (cblsearch.Items[46].Selected == true)//delsi1017
                    {
                        fpsalary.Sheets[0].Cells[rowstr - 1, yrofexp - 1].Text = Convert.ToString(Years)+"Yrs";

                        fpsalary.Sheets[0].Cells[rowstr - 1, yrofexp - 1].Locked = true;
                        fpsalary.Sheets[0].Cells[rowstr - 1, yrofexp - 1].HorizontalAlign = HorizontalAlign.Right;
                    }



                    fpsalary.Sheets[0].Columns[1].Locked = false;

                    fpsalary.Sheets[0].Columns[2].Visible = false;
                    //  fpsalary.Sheets[0].Columns[3].Visible = false;
                    fpsalary.Sheets[0].Columns[4].Visible = false;
                    fpsalary.Sheets[0].Columns[5].Visible = false;
                    fpsalary.Sheets[0].Columns[6].Visible = false;
                    fpsalary.Sheets[0].Columns[7].Visible = false;
                    fpsalary.Sheets[0].Columns[1].Visible = false;
                    fpsalary.Sheets[0].Columns[8].Visible = false;
                    fpsalary.Sheets[0].Columns[9].Visible = false;
                    fpsalary.Sheets[0].Columns[10].Visible = false;
                    fpsalary.Sheets[0].Columns[11].Visible = false;
                    fpsalary.Sheets[0].Columns[12].Visible = false;
                    fpsalary.Sheets[0].Columns[13].Visible = false;
                    fpsalary.Sheets[0].Columns[14].Visible = true;
                    fpsalary.Sheets[0].Columns[15].Visible = false;
                    fpsalary.Sheets[0].Columns[16].Visible = false;
                    fpsalary.Sheets[0].Columns[17].Visible = false;
                    fpsalary.Sheets[0].Columns[18].Visible = false;
                    fpsalary.Sheets[0].Columns[19].Visible = false;
                    fpsalary.Sheets[0].Columns[21].Visible = false;
                    fpsalary.Sheets[0].Columns[20].Visible = false;
                    fpsalary.Sheets[0].Columns[22].Visible = false;
                    fpsalary.Sheets[0].Columns[23].Visible = false;
                    fpsalary.Sheets[0].Columns[24].Visible = false;
                    fpsalary.Sheets[0].Columns[25].Visible = false;

                    fpsalary.Sheets[0].Columns[colcnt_pf_number - 1].Visible = false;
                    fpsalary.Sheets[0].Columns[colheder - 1].Visible = false;
                    fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 4].Visible = false;//delsiref
                    fpsalary.Sheets[0].Columns[colgross - 1].Visible = false;
                    fpsalary.Sheets[0].Columns[colgross - 2].Visible = false;

                    if (cblsearch.Items[0].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[2].Visible = true;
                    }
                    if (cblsearch.Items[1].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[4].Visible = true;
                    }
                    if (cblsearch.Items[30].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[3].Visible = true;
                    }
                    if (cblsearch.Items[2].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[5].Visible = true;
                    }
                    if (cblsearch.Items[3].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[6].Visible = true;
                    }
                    if (cblsearch.Items[4].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[7].Visible = true;
                    }
                    if (cblsearch.Items[5].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[8].Visible = true;
                    }
                    if (cblsearch.Items[6].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[9].Visible = true;
                    }
                    if (cblsearch.Items[7].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[12].Visible = true;
                    }
                    if (cblsearch.Items[8].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[10].Visible = true;
                    }
                    if (cblsearch.Items[9].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 4].Visible = true;
                    }
                    if (cblsearch.Items[10].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[24].Visible = true;
                    }
                    if (cblsearch.Items[11].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[colcnt_pf_number - 1].Visible = true;
                    }
                    if (cblsearch.Items[12].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[colheder - 1].Visible = true;
                    }
                    if (cblsearch.Items[13].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[26].Visible = true;
                    }
                    if (cblsearch.Items[14].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[1].Visible = true;
                    }
                    if (cblsearch.Items[15].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[9].Visible = true;
                    }
                    if (cblsearch.Items[16].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[20].Visible = true;
                    }
                    if (cblsearch.Items[17].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[21].Visible = true;
                    }
                    if (cblsearch.Items[18].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[22].Visible = true;
                    }
                    if (cblsearch.Items[19].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[23].Visible = true;
                    }
                    if (cblsearch.Items[20].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[11].Visible = true;
                    }
                    if (cblsearch.Items[21].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[25].Visible = true;
                    }
                    if (cblsearch.Items[22].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[colgross - 2].Visible = true;
                    }
                    if (cblsearch.Items[23].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[colgross - 1].Visible = true;
                    }
                    if (cblsearch.Items[32].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[19].Visible = true;
                    }
                    else
                    {
                        fpsalary.Sheets[0].Columns[19].Visible = false;
                    }
                    if (cblsearch.Items[31].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[18].Visible = true;
                    }
                    else
                    {
                        fpsalary.Sheets[0].Columns[18].Visible = false;
                    }

                    if (cblsearch.Items[44].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[UanNo - 1].Visible = true;

                    }
                    if (cblsearch.Items[45].Selected == true)//delsi1710
                    {
                        fpsalary.Sheets[0].Columns[gratuitycount - 1].Visible = true;
                    }
                    fpsalary.Sheets[0].Columns[5].HorizontalAlign = HorizontalAlign.Center;
                    //Start========Added by Manikandan 11/09/2013============            

                    fpsalary.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;

                    fpsalary.Sheets[0].Cells[rowstr - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;

                    fpsalary.Sheets[0].Cells[rowstr - 1, 2].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;

                    fpsalary.Sheets[0].Cells[rowstr - 1, 2].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;

                    fpsalary.Sheets[0].Cells[rowstr - 1, 3].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;

                    fpsalary.Sheets[0].Cells[rowstr - 1, 4].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;

                    fpsalary.Sheets[0].Cells[rowstr - 1, 5].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;

                    fpsalary.Sheets[0].Cells[rowstr - 1, 6].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;

                    fpsalary.Sheets[0].Cells[rowstr - 1, 7].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, 7].HorizontalAlign = HorizontalAlign.Center;

                    fpsalary.Sheets[0].Cells[rowstr - 1, 8].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, 8].HorizontalAlign = HorizontalAlign.Center;

                    fpsalary.Sheets[0].Columns[12].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].Columns[13].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].Columns[14].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].Columns[15].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].Columns[16].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].Columns[17].HorizontalAlign = HorizontalAlign.Left;


                    if (cblsearch.Items[6].Selected == true)   //****************** Start  Added by jairam  10-12-2014 ************************ 
                    {
                        if (monthname1 == monthnamenum)
                        {
                            fpsalary.Sheets[0].Columns[12].Visible = true;
                            fpsalary.Sheets[0].Columns[16].Visible = false;
                            fpsalary.Sheets[0].Columns[15].Visible = false;
                        }
                        else
                        {
                            fpsalary.Sheets[0].Columns[16].Visible = true;
                            fpsalary.Sheets[0].Columns[16].HorizontalAlign = HorizontalAlign.Center;
                            fpsalary.Sheets[0].Columns[17].Visible = true;
                            fpsalary.Sheets[0].Columns[17].HorizontalAlign = HorizontalAlign.Center;
                            fpsalary.Sheets[0].Columns[12].Visible = true;
                            fpsalary.Sheets[0].Columns[12].HorizontalAlign = HorizontalAlign.Center;

                        }
                    }

                    if (cblsearch.Items[20].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[11].Visible = true;
                        fpsalary.Sheets[0].Columns[11].HorizontalAlign = HorizontalAlign.Center;
                    }
                    if (cblsearch.Items[20].Selected == false)
                    {
                        fpsalary.Sheets[0].Columns[11].Visible = false;
                    }

                    if (cblsearch.Items[6].Selected == false)
                    {
                        fpsalary.Sheets[0].Columns[12].Visible = false;
                        fpsalary.Sheets[0].Columns[16].Visible = false;
                        fpsalary.Sheets[0].Columns[15].Visible = false;
                    }

                    if (cblsearch.Items[29].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[14].Visible = true;
                        fpsalary.Sheets[0].Columns[14].HorizontalAlign = HorizontalAlign.Center;
                    }
                    if (cblsearch.Items[29].Selected == false)
                    {
                        fpsalary.Sheets[0].Columns[14].Visible = false;
                    }

                    if (cblsearch.Items[7].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[17].Visible = true;
                        fpsalary.Sheets[0].Columns[17].HorizontalAlign = HorizontalAlign.Left;
                    }
                    if (cblsearch.Items[7].Selected == false)
                    {
                        fpsalary.Sheets[0].Columns[17].Visible = false;
                        fpsalary.Sheets[0].Columns[17].HorizontalAlign = HorizontalAlign.Left;
                    }
                    if (cblsearch.Items[38].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[13].Visible = true;
                        fpsalary.Sheets[0].Columns[13].HorizontalAlign = HorizontalAlign.Left;
                    }
                    else
                    {
                        fpsalary.Sheets[0].Columns[13].Visible = false;
                        fpsalary.Sheets[0].Columns[13].HorizontalAlign = HorizontalAlign.Left;
                    }
                    if (cblsearch.Items[40].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[colcount1 - 1].Visible = true;
                    }
                    else
                    {
                        fpsalary.Sheets[0].Columns[colcount1 - 1].Visible = false;
                    }

                   

                    //******************************** End*****************************************

                }
                //}


                //===================End=====================
                if (fpsalary.Sheets[0].RowCount - 1 > 0)
                {
                    chkdays.Visible = true;
                    if (startrow == 0)
                    {
                        startrow = 1;
                    }

                    fpsalary.Sheets[0].RowCount = fpsalary.Sheets[0].RowCount + 2;
                    fpsalary.Sheets[0].Rows[fpsalary.Sheets[0].RowCount - 2].HorizontalAlign = HorizontalAlign.Right;
                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].HorizontalAlign = HorizontalAlign.Right;
                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Font.Size = FontUnit.Large;
                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Font.Bold = true;
                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Text = "C/O";
                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Locked = true;
                    fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 2, 0, 1, 13);

                    for (int intColCtr = 14; intColCtr < fpsalary.Sheets[0].ColumnCount - 2; intColCtr++)
                    {
                        if ((intColCtr != fpsalary.Sheets[0].ColumnCount - 6) && (intColCtr != colheder - 1) && (intColCtr != fpsalary.Sheets[0].ColumnCount - 4) && (intColCtr != UanNo - 1))
                        {
                            IntMTotal = 0;
                            for (int IntRowCtr = startrow; IntRowCtr < fpsalary.Sheets[0].RowCount - 2; IntRowCtr++)
                            {
                                IntMTemp = 0;

                                if (fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text != "-")
                                {
                                    if (fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text != "")
                                    {
                                        string calval = fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text.ToString();
                                        Double num = 0;
                                        if (Double.TryParse(calval, out num))
                                        {
                                            Double.TryParse(Convert.ToString(fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text), out IntMTemp);
                                        }
                                    }
                                    else
                                    {
                                        IntMTemp = 0;
                                    }
                                }
                                else
                                {
                                    IntMTemp = 0;
                                }
                                IntMTotal = IntMTemp + IntMTotal;
                            }
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, intColCtr].Font.Bold = true;
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, intColCtr].Text = IntMTotal > 0 ? IntMTotal + "" : "-";
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, intColCtr].Font.Size = FontUnit.Large;
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, intColCtr].HorizontalAlign = HorizontalAlign.Right;
                        }
                    }

                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Large;
                    fpsalary.Sheets[0].Rows[fpsalary.Sheets[0].RowCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Right;
                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Font.Bold = true;
                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Text = "Total";
                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Locked = true;
                    fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 1, 0, 1, 13);



                    for (int intColCtr = 13; intColCtr < fpsalary.Sheets[0].ColumnCount - 2; intColCtr++)
                    {
                        if ((intColCtr != fpsalary.Sheets[0].ColumnCount - 6) && (intColCtr != 13) && (intColCtr != colheder - 1) && (intColCtr != fpsalary.Sheets[0].ColumnCount - 4) && (intColCtr != UanNo - 1))
                        {
                            IntMTotal = 0;
                            for (int IntRowCtr = 0; IntRowCtr < fpsalary.Sheets[0].RowCount - 2; IntRowCtr++)
                            {
                                IntMTemp = 0;
                                if (fpsalary.Sheets[0].Cells[IntRowCtr, 0].Text != "B/F" && fpsalary.Sheets[0].Cells[IntRowCtr, 0].Text != "C/O")
                                {
                                    if (fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text != "-")
                                    {
                                        if (fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text != "")
                                        {
                                            string calval = fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text.ToString();
                                            Double num = 0;
                                            if (Double.TryParse(calval, out num))
                                            {
                                                Double.TryParse(Convert.ToString(fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text), out IntMTemp);
                                            }
                                        }
                                        else
                                        {
                                            IntMTemp = 0;
                                        }
                                    }
                                    else
                                    {
                                        IntMTemp = 0;
                                    }
                                    IntMTotal = IntMTemp + IntMTotal;

                                    if (intColCtr == 14)
                                    {
                                        string getbankdigi = d2.GetFunction("select value from Master_Settings where settings='Bank Foramte Fixed Digits'");
                                        if (getbankdigi.Trim() != "" && getbankdigi.Trim() != "0")
                                        {
                                            int bankdigit = Convert.ToInt32(getbankdigi);
                                            string acno = fpsalary.Sheets[0].Cells[IntRowCtr, fpsalary.Sheets[0].ColumnCount - 4].Text.ToString();
                                            string netpay = fpsalary.Sheets[0].Cells[IntRowCtr, fpsalary.Sheets[0].ColumnCount - 3].Text.ToString();
                                            if (acno.Trim() != "" && netpay.Trim() != "")
                                            {
                                                int diff = 0;
                                                string addval = "";
                                                if (bankdigit > (acno.Length + netpay.Length))
                                                {
                                                    diff = bankdigit - (acno.Length + netpay.Length);
                                                }
                                                if (diff > 0)
                                                {
                                                    Double getav = 0;
                                                    if (diff > 0)
                                                    {
                                                        getav = diff / 2;
                                                        for (int sla = 0; sla < getav; sla++)
                                                        {
                                                            addval = addval + "0";
                                                        }
                                                    }
                                                    getav = diff % 2;
                                                    if (getav == 0)
                                                    {
                                                        addval = acno + addval + netpay + addval;
                                                    }
                                                    else
                                                    {
                                                        addval = acno + addval + "0" + netpay + addval;
                                                    }
                                                }
                                                else
                                                {
                                                    addval = acno + netpay;
                                                }
                                                fpsalary.Sheets[0].Cells[IntRowCtr, fpsalary.Sheets[0].ColumnCount - 2].CellType = txt;
                                                fpsalary.Sheets[0].Cells[IntRowCtr, fpsalary.Sheets[0].ColumnCount - 2].Text = addval;
                                                fpsalary.Sheets[0].Cells[IntRowCtr, fpsalary.Sheets[0].ColumnCount - 2].Font.Size = FontUnit.Large;
                                            }
                                        }
                                    }
                                }
                            }
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].Font.Bold = true;
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].Text = IntMTotal > 0 ? IntMTotal + "" : "-";
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].Font.Size = FontUnit.Large;
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].HorizontalAlign = HorizontalAlign.Right;

                            if (fpsalary.Sheets[0].ColumnHeader.Cells[0, intColCtr].Text.ToString().Trim().ToLower() == "net pay")
                            {
                                netpaytotal = IntMTotal;
                            }
                        }
                    }


                }

                fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 2;

                fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 3].Text = "Check No";
                // fpsalary.ActiveSheetView.Columns[fpsalary.Sheets[0].ColumnCount - 3].Font.Size = FontUnit.Large;
                fpsalary.ActiveSheetView.Columns[fpsalary.Sheets[0].ColumnCount - 3].Font.Name = "Book Antiqua";
                fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 3].HorizontalAlign = HorizontalAlign.Center;
                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsalary.Sheets[0].ColumnCount - 3, 2, 1);
                fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 3].Locked = true;
                if (cblsearch.Items[26].Selected == true)
                {
                    if (rk == 0)
                    {
                        fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 3].Visible = true;
                        rk++;
                    }

                }
                else
                {
                    fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 3].Visible = false;
                }

                fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 2].Text = "Signature";
                // fpsalary.ActiveSheetView.Columns[fpsalary.Sheets[0].ColumnCount - 2].Font.Size = FontUnit.Large;
                fpsalary.ActiveSheetView.Columns[fpsalary.Sheets[0].ColumnCount - 2].Font.Name = "Book Antiqua";
                fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 2].Width = 250;
                fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Center;
                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsalary.Sheets[0].ColumnCount - 2, 2, 1);
                fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 2].Locked = true;


                for (int i = 0; i < fpsalary.Sheets[0].RowCount; i++)
                {
                    if (fpsalary.Sheets[0].Cells[i, fpsalary.Sheets[0].ColumnCount - 2].Text.ToString().Trim() == "")
                    {
                        if (cblsearch.Items[39].Selected == true) // Added by sridharan april 30 2015
                        {
                            fpsalary.Sheets[0].Cells[i, fpsalary.Sheets[0].ColumnCount - 2].Text = "                                                                                                                                                                                                                                             ";
                        }
                        else
                        {
                            fpsalary.Sheets[0].Cells[i, fpsalary.Sheets[0].ColumnCount - 2].Text = "  ";
                        }
                    }
                }


                if (cblsearch.Items[27].Selected == true)
                {
                    if (sk == 0)
                    {
                        fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 2].Visible = true;
                        sk++;
                    }

                }
                else
                {
                    fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 2].Visible = false;
                }


                fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Text = "Remarks";
                //fpsalary.ActiveSheetView.Columns[fpsalary.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Large;
                fpsalary.ActiveSheetView.Columns[fpsalary.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsalary.Sheets[0].ColumnCount - 1, 2, 1);
                fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 1].Locked = true;
                fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 3;
                // string strquery = "select sa.per_mobileno,sa.email,sm.staff_code from staff_appl_master sa,staffmaster sm where sm.appl_no=sa.appl_no and sm.settled=0 and sm.resign=0";
                //ds = d2.select_method_wo_parameter(strquery, "Text");
                fpsalary.SaveChanges();
                if (chksms.Checked == true)
                {
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 3].Text = "Mobile No";
                    fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 3].Locked = true;
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsalary.Sheets[0].ColumnCount - 3, 2, 1);
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 3].HorizontalAlign = HorizontalAlign.Center;
                    for (int row = 0; row < fpsalary.Sheets[0].RowCount; row++)
                    {
                        row++;
                        fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 3].Text = "Mobile No";
                        fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsalary.Sheets[0].ColumnCount - 3, 2, 1);
                        fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 3].HorizontalAlign = HorizontalAlign.Center;

                        dsset.Tables[1].DefaultView.RowFilter = "staff_code='" + fpsalary.Sheets[0].Cells[row - 1, 3].Text + "'";
                        DataView dvnew = new DataView();
                        dvnew = dsset.Tables[1].DefaultView;
                        if (dvnew.Count > 0)
                        {
                            string mobileno = dvnew[0]["per_mobileno"].ToString();
                            fpsalary.Sheets[0].Cells[row - 1, fpsalary.Sheets[0].ColumnCount - 3].Text = mobileno;
                            fpsalary.Sheets[0].Cells[row - 1, fpsalary.Sheets[0].ColumnCount - 3].Font.Bold = true;
                            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 3].HorizontalAlign = HorizontalAlign.Left;

                        }
                        row--;
                    }
                    txtsms.Visible = true;
                    //txtsms.Text = "";
                    btnsendsms.Visible = true;
                }
                else
                {
                    fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 3].Visible = false;
                    txtsms.Visible = false;
                    btnsendsms.Visible = false;
                }
                if (chkEmail.Checked == true)
                {

                    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 2].Text = "EMail";
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsalary.Sheets[0].ColumnCount - 2, 2, 1);
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Center;
                    for (int row = 0; row < fpsalary.Sheets[0].RowCount; row++)
                    {
                        row++;
                        fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 2].Text = "EMail";
                        fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 2].Locked = true;
                        fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsalary.Sheets[0].ColumnCount - 2, 2, 1);
                        fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Center;

                        dsset.Tables[1].DefaultView.RowFilter = "staff_code='" + fpsalary.Sheets[0].Cells[row - 1, 3].Text + "'";
                        DataView dvnew = new DataView();
                        if (dvnew.Count > 0)
                        {
                            string email = dvnew[0]["email"].ToString();
                            fpsalary.Sheets[0].Cells[row - 1, fpsalary.Sheets[0].ColumnCount - 2].Text = email;
                            fpsalary.Sheets[0].Cells[row - 1, fpsalary.Sheets[0].ColumnCount - 2].Font.Bold = true;
                            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Left;

                        }
                        row--;
                    }
                    txtsms.Visible = true;
                    //btnsendsms.Visible = true;
                    txtsubject.Text = "";
                    txtbodycontant.Text = "";
                    emailpanel.Visible = true;
                    //btnemailsend.Visible = true;
                }
                else
                {
                    fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 2].Visible = false;
                    emailpanel.Visible = false;
                }
                fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 1].Visible = false;

                fpsalary.Sheets[0].Columns[16].HorizontalAlign = HorizontalAlign.Center;
                btnpayslip.Visible = true;
            }
            else
            {

                fpsalary.Visible = false;
                btnprintmaster.Visible = false;
                Button3.Visible = false;
                btnprintmaster.Visible = false;
                Printcontrol.Visible = false;
                GridPrintmaster.Visible = false;
                lblnorec.Visible = true;
                btnexcel.Visible = false;
                lblexcel.Visible = false;
                txtexcel.Visible = false;
                emailpanel.Visible = false;
                txtsms.Visible = false;
                btnsendsms.Visible = false;
                chkdays.Visible = false;
                lblnorec.Visible = true;
                lblnorec.Text = "No Records Found";
                // added by sridhar 17 sep 2014 -------------------Start
                lblpurpose1.Visible = false;
                ddlpurpose.Visible = false;
                FpSpread2.Visible = false;
                btnaddtemplate.Visible = false;
                btndeletetemplate.Visible = false;
                btnpayslip.Visible = false;
                salcer.Visible = false;
                // added by sridhar 17 sep 2014 -------------------End
            }
            fpsalary.SaveChanges();
            if (fpsalary.Sheets[0].RowCount > 0) // Added by sridharan april 30 2015
            {
                fpsalary.Sheets[0].RowCount = fpsalary.Sheets[0].RowCount + 1;
                fpsalary.Sheets[0].Rows[fpsalary.Sheets[0].RowCount - 1].HorizontalAlign = HorizontalAlign.Left;
                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Left;
                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Large;
                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Font.Bold = true;
                int netvaldkm = Convert.ToInt32(Math.Round(netpaytotal, 0, MidpointRounding.AwayFromZero));
                string netword = ConvertNumbertoWords(netvaldkm);
                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Text = "Total Amount : " + netword + " ";
                fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 1, 0, 1, fpsalary.Sheets[0].ColumnCount);

                for (int c = 0; c < fpsalary.Sheets[0].ColumnCount; c++)
                {
                    if (c != 1)
                    {
                        fpsalary.Sheets[0].Columns[c].Locked = true;
                    }
                }
            }
            Double totalRows = 0;
            totalRows = Convert.ToInt32(fpsalary.Sheets[0].RowCount);

            if (totalRows >= 10)
            {
                fpsalary.Sheets[0].PageSize = Convert.ToInt32(totalRows);

                fpsalary.VerticalScrollBarPolicy = FarPoint.Web.Spread.ScrollBarPolicy.AsNeeded;
                fpsalary.HorizontalScrollBarPolicy = FarPoint.Web.Spread.ScrollBarPolicy.AsNeeded;

            }
            else
            {
                fpsalary.Sheets[0].PageSize = Convert.ToInt32(totalRows);
            }
            fpsalary.Height = 300 + (fpsalary.Sheets[0].RowCount * 20);

            fpsalary.Sheets[0].PageSize = fpsalary.Sheets[0].RowCount;
            fpsalary.SaveChanges();
            Session["totalPages"] = (int)Math.Ceiling(totalRows / fpsalary.Sheets[0].PageSize);
            lblsmserror.Visible = false;
            try
            {
                string setvalue = "";
                for (int sv = 0; sv < cblsearch.Items.Count; sv++)
                {
                    if (cblsearch.Items[sv].Selected == true)
                    {
                        if (setvalue == "")
                        {
                            setvalue = "" + sv + "";
                        }
                        else
                        {
                            setvalue = setvalue + "," + sv + "";
                        }
                    }
                }

                sql = "if exists (select * from Master_Settings where settings='Salary1 report') update Master_Settings set value='" + setvalue + "' where settings='Salary1 report' else insert into Master_Settings (settings,value) values('Salary1 report','" + setvalue + "')";
                int insert = d2.update_method_wo_parameter(sql, "Text");
            }
            catch
            {
            }
            btnslip.Visible = false;
        }
        catch (Exception ex)
        {
            lblnorec.Visible = true;
            lblnorec.Text = ex.ToString();
        }
    }

    protected void btnexcel_Click(object sender, EventArgs e)
    {

        try
        {
            string reportname = txtexcel.Text;
            if (reportname.ToString().Trim() != "")
            {
                d2.printexcelreport(fpsalary, reportname);
            }
            else
            {
                lblnorec.Text = "Please Enter Your Report Name";
                lblnorec.Visible = true;
            }
        }
        catch
        {
        }
    }

    public void func_format3()
    {
        try
        {
            int sk = 0;
            int rk = 0;
            int tk = 0;
            fpsalary.Sheets[0].ColumnCount = 15;
            fpsalary.Sheets[0].AutoPostBack = false;
            fpsalary.Sheets[0].RowCount = 0;
            fpsalary.CommandBar.Visible = true; ;
            fpsalary.Sheets[0].PageSize = 11;
            fpsalary.Pager.Position = FarPoint.Web.Spread.PagerPosition.Bottom;
            fpsalary.Pager.Mode = FarPoint.Web.Spread.PagerMode.Both;
            darkstyle.Font.Bold = true;
            darkstyle.Font.Name = "Book Antiqua";
            darkstyle.Font.Size = FontUnit.Medium;
            darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
            darkstyle.ForeColor = Color.Black;
            darkstyle.HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.DefaultStyle = darkstyle;
            fpsalary.Pager.Font.Bold = true;
            fpsalary.Pager.Font.Name = "Arial";
            fpsalary.Pager.ForeColor = Color.DarkGreen;
            fpsalary.Pager.BackColor = Color.AliceBlue;
            fpsalary.Pager.PageCount = 5;
            fpsalary.Sheets[0].ColumnCount = 14;
            fpsalary.Sheets[0].SetColumnWidth(1, 200);
            fpsalary.Sheets[0].SetColumnWidth(2, 150);
            fpsalary.Sheets[0].SetColumnWidth(3, 150);
            fpsalary.Sheets[0].SetColumnWidth(4, 150);
            fpsalary.Sheets[0].SetColumnWidth(5, 150);
            fpsalary.Sheets[0].SetColumnWidth(6, 150);
            fpsalary.CommandBar.Visible = false;
            fpsalary.Sheets[0].SheetCorner.Columns[0].Visible = false;
            fpsalary.Sheets[0].SheetCorner.RowCount = 2;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
            fpsalary.Sheets[0].Columns[0, 1].Width = 10;//====================
            FarPoint.Web.Spread.CheckBoxCellType chkcell = new FarPoint.Web.Spread.CheckBoxCellType();

            string datefrom;
            string dateto;
            string date1;
            string date2;
            fpsalary.Sheets[0].ColumnCount = 22;
            txtsms.Visible = true;
            fpsalary.Visible = true;
            btnprintmaster.Visible = true;
            Button3.Visible = false;
            btnprintmaster.Visible = false;
            Printcontrol.Visible = false;
            GridPrintmaster.Visible = false;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Staff Name";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Designation";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Dept";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Dept Acronym";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Design Acronym";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 7].Text = "Category";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 7].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 8].Text = "Staff Type";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 8].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 9].Text = "Date of Joining ";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 9].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 10].Text = "Working Days ";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 10].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 11].Text = "LOP Days ";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 11].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 12].Text = "Previous Month LOP Days";

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 13].Text = "Current Month LOP Days";

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 14].Text = "LOP Date(s) ";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 14].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 15].Text = "Basic ";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 15].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 16].Text = "AGP ";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 16].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 17].Text = "No. of Increment ";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 17].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 18].Text = "Increment in Rs";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 18].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 19].Text = "Actual Basic ";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 19].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 20].Text = "Basic Pay ";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 20].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 21].Text = "DA % ";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 21].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 3, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 5, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 6, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 7, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 8, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 9, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 10, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 11, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 12, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 13, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 14, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 15, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 16, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 17, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 18, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 19, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 20, 2, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 21, 2, 1);

            fpsalary.ActiveSheetView.Columns[0].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[0].Font.Size = FontUnit.Large;

            fpsalary.ActiveSheetView.Columns[1].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[1].Font.Name = "Book Antiqua";

            fpsalary.ActiveSheetView.Columns[2].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[2].Font.Name = "Book Antiqua";

            fpsalary.ActiveSheetView.Columns[3].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[3].Font.Name = "Book Antiqua";

            fpsalary.ActiveSheetView.Columns[4].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[4].Font.Name = "Book Antiqua";

            fpsalary.ActiveSheetView.Columns[5].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[5].Font.Name = "Book Antiqua";

            fpsalary.ActiveSheetView.Columns[6].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[6].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[7].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[7].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[8].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[8].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[9].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[9].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[10].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[10].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[11].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[11].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[12].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[12].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[13].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[13].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[14].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[14].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[15].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[15].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[16].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[16].Font.Size = FontUnit.Large;

            fpsalary.ActiveSheetView.Columns[17].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[17].Font.Size = FontUnit.Large;

            fpsalary.ActiveSheetView.Columns[18].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[18].Font.Size = FontUnit.Large;

            fpsalary.ActiveSheetView.Columns[19].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[19].Font.Size = FontUnit.Large;

            fpsalary.ActiveSheetView.Columns[20].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[20].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[21].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[21].Font.Size = FontUnit.Large;


            //CalculateTotalPages();//Hided by Manikandan 03/08/2013
            int colcount1;
            colcount1 = 30;
            sql1 = "select * from incentives_master where college_code=" + Session["collegecode"] + "";
            con1.Open();
            SqlCommand cmd2 = new SqlCommand(sql1, con1);
            SqlDataReader drrow;
            drrow = cmd2.ExecuteReader();
            int colspl = 0;
            int splall = 0;
            int colcnt_pf_number = 0;
            int colcnt_total_deduction = 0;

            while (drrow.Read())
            {
                {
                    string allowncweshead;

                    string detuctionheader;
                    allowncweshead = drrow["allowances"].ToString();
                    string[] allown2;
                    int getval;
                    allown2 = allowncweshead.Split(';');
                    // string[] newall2=
                    getval = allown2.GetUpperBound(0);
                    colcount1 = 22;
                    int itemcount = 0;
                    int count = 0;
                    string strallowan;
                    count = allown2.GetUpperBound(0);
                    int v = 0;
                    int w = 0;
                    int nallow = 0;
                    for (int i = 0; i <= allown2.GetUpperBound(0); i++)
                    {
                        string newallow = allown2[i];
                        string[] newallow_split = newallow.Split('\\');
                        if (newallow_split.GetUpperBound(0) > 0)
                        {
                            if (newallow_split[1] == "1")
                            {
                                spll_alll_tag_arry[splall] = newallow_split[0];
                                if (newallow_split.Length >= 3)
                                {
                                    splallw_arry[splall] = newallow_split[2];
                                }
                                v++;
                                splall++;
                            }
                            else
                            {
                                allow_arry[nallow] = newallow_split[0];
                                w++;
                                nallow++;
                            }
                        }
                    }
                    int u = 0;
                    fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + nallow;
                    if (nallow != 0)
                    {
                        fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1].Text = "Allowances";
                        fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1].HorizontalAlign = HorizontalAlign.Center;
                        fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1].Column.Width = 750;
                        fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount1, 1, nallow);
                        for (int t = 0; t <= nallow; t++)
                        {
                            if (cblallowance.Items.Count > u)
                            {
                                if (cblallowance.Items[u].Selected == true)
                                {
                                    if (cblallowance.Items[u].Text == allow_arry[t])
                                    {

                                        fpsalary.Sheets[0].Columns[colcount1 + t].Visible = true;
                                        fpsalary.Sheets[0].Columns[colcount1 + t].HorizontalAlign = HorizontalAlign.Center;

                                        fpsalary.Sheets[0].Columns[colcount1 + t].Visible = true;
                                        fpsalary.Sheets[0].ColumnHeader.Cells[1, colcount1 + t].Text = allow_arry[t];

                                        //fpsalary.Sheets[0].ColumnHeader.Cells[1, colcount1 + i].Text = allown2[i];
                                        fpsalary.Sheets[0].ColumnHeader.Cells[1, colcount1 + t].Column.Width = 100;
                                        fpsalary.ActiveSheetView.Columns[colcount1 + t].Font.Size = FontUnit.Large;
                                        fpsalary.ActiveSheetView.Columns[colcount1 + t].Font.Name = "Book Antiqua";
                                        fpsalary.Sheets[0].ColumnHeader.Cells[1, colcount1 + t].HorizontalAlign = HorizontalAlign.Center;
                                    }
                                    else
                                    {
                                        t--;
                                        u++;
                                    }
                                }
                                else
                                {

                                    // t--;
                                    if (cblallowance.Items[u].Text == allow_arry[t])
                                    {
                                        fpsalary.Sheets[0].Columns[colcount1 + t].Visible = false;
                                    }

                                    else
                                    {
                                        t--;
                                    }
                                    fpsalary.Sheets[0].Columns[colcount1 + t].HorizontalAlign = HorizontalAlign.Center;
                                    u++;
                                }
                            }
                            // colcount1 = colcount1 + getval;
                        }
                    }
                    fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 1;
                    colgross = fpsalary.Sheets[0].ColumnCount;


                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colgross - 1].Text = "Actual Gross Pay";
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colgross - 1, 2, 1);
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colgross - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colgross - 1].Column.Width = 150;
                    fpsalary.ActiveSheetView.Columns[colgross - 1].Font.Size = FontUnit.Large;
                    fpsalary.ActiveSheetView.Columns[colgross - 1].Font.Name = "Book Antiqua";

                    fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 1;
                    colgross = fpsalary.Sheets[0].ColumnCount;

                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colgross - 1].Text = "Gross Pay";
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colgross - 1, 2, 1);
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colgross - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colgross - 1].Column.Width = 100;

                    fpsalary.ActiveSheetView.Columns[colgross - 1].Font.Size = FontUnit.Large;
                    fpsalary.ActiveSheetView.Columns[colgross - 1].Font.Name = "Book Antiqua";



                    ////////////////////to add pf 

                    fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 1;
                    colcnt_pf_number = fpsalary.Sheets[0].ColumnCount;

                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcnt_pf_number - 1].Text = "LOP";
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcnt_pf_number - 1, 2, 1);
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcnt_pf_number - 1].HorizontalAlign = HorizontalAlign.Center;

                    fpsalary.ActiveSheetView.Columns[colcnt_pf_number - 1].Font.Size = FontUnit.Large;
                    fpsalary.ActiveSheetView.Columns[colcnt_pf_number - 1].Font.Name = "Book Antiqua";


                    // To Add LOP Amount
                    fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 1;
                    colheder = fpsalary.Sheets[0].ColumnCount;
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsalary.Sheets[0].ColumnCount - 1, 2, 1);
                    //fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(6, colheder - 1, 1, 1);
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colheder - 1].Text = "PF No";

                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colheder - 1].HorizontalAlign = HorizontalAlign.Center;


                    fpsalary.ActiveSheetView.Columns[colheder - 1].Font.Size = FontUnit.Large;
                    fpsalary.ActiveSheetView.Columns[colheder - 1].Font.Name = "Book Antiqua";
                    //


                    detuctionheader = drrow["deductions"].ToString();
                    string[] deduct2;
                    int getval2;
                    deduct2 = detuctionheader.Split(';');
                    getval2 = deduct2.GetUpperBound(0);
                    col = fpsalary.Sheets[0].ColumnCount;

                    // col = col + 1;
                    fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + (getval2);
                    colcount1 = fpsalary.Sheets[0].ColumnCount + 1;
                    // fpsalary.Sheets[0].ColumnHeader.Cells[6, col].Text = "Deductions";
                    //added by srinath 8/3/2014
                    if (colheder >= fpsalary.Sheets[0].ColumnCount)
                    {
                        colheder = fpsalary.Sheets[0].ColumnCount - 1;
                    }
                    if (getval2 == 0)
                    {
                        getval2 = 1;
                    }

                    if (cblsearch.Items[11].Selected == true)
                    {
                        fpsalary.Sheets[0].ColumnHeader.Cells[0, colheder].Text = "Deductions";

                        fpsalary.Sheets[0].ColumnHeader.Cells[0, colheder].HorizontalAlign = HorizontalAlign.Center;

                        fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, col, 1, (getval2));
                    }

                    else
                    {
                        fpsalary.Sheets[0].ColumnHeader.Cells[0, colheder].Text = "Deductions";

                        fpsalary.Sheets[0].ColumnHeader.Cells[0, colheder].HorizontalAlign = HorizontalAlign.Center;

                        fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, col, 1, (getval2));
                    }

                    for (int i = 0; i < deduct2.GetUpperBound(0); i++)
                    {
                        if (cbldeduction.Items[i].Selected == true)
                        {
                            fpsalary.Sheets[0].Columns[col + i].Visible = true;
                            string ded = deduct2[i];
                            string[] ne_split_ded = ded.Split('\\');
                            if (ne_split_ded.GetUpperBound(0) > 0)
                            {
                                fpsalary.Sheets[0].ColumnHeader.Cells[1, col + i].Text = ne_split_ded[0].ToString();
                            }
                            else
                            {
                                fpsalary.Sheets[0].ColumnHeader.Cells[1, col + i].Text = deduct2[i];
                            }
                            fpsalary.Sheets[0].ColumnHeader.Cells[1, col + i].HorizontalAlign = HorizontalAlign.Center;
                            fpsalary.ActiveSheetView.Columns[col + i].Font.Size = FontUnit.Large;
                            fpsalary.ActiveSheetView.Columns[col + i].Font.Name = "Book Antiqua";
                        }
                        else
                        {
                            fpsalary.Sheets[0].Columns[col + i].Visible = false;
                            fpsalary.Sheets[0].ColumnHeader.Cells[1, col + i].Text = deduct2[i];
                            fpsalary.Sheets[0].ColumnHeader.Cells[1, col + i].HorizontalAlign = HorizontalAlign.Center;
                        }
                    }

                    fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 1;
                    colcnt_total_deduction = fpsalary.Sheets[0].ColumnCount;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcnt_total_deduction - 1].Text = "Total Deduction";
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcnt_total_deduction - 1].HorizontalAlign = HorizontalAlign.Right;
                    fpsalary.ActiveSheetView.Columns[colcnt_total_deduction - 1].Font.Size = FontUnit.Large;

                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcnt_total_deduction - 1, 2, 1);

                    if (cblsearch.Items[28].Selected == true)
                    {
                        fpsalary.Sheets[0].Columns[colcnt_total_deduction - 1].Visible = true;
                    }
                    else
                    {
                        fpsalary.Sheets[0].Columns[colcnt_total_deduction - 1].Visible = false;
                    }

                    ///////////////////////////////////////////////////////////////spl allowance
                    if (splall != 0)
                    {
                        u = 0;
                        colspl = fpsalary.Sheets[0].ColumnCount;
                        fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + splall;
                        for (int b = 0; b <= splall; b++)
                        {
                            if (cblallowance.Items.Count > u)
                            {
                                if (cblallowance.Items[u].Selected == true)
                                {
                                    if (cblallowance.Items[u].Text == splallw_arry[b])
                                    {
                                        fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colspl + b, 2, 1);
                                        fpsalary.Sheets[0].Columns[colspl + b].Visible = true;
                                        fpsalary.Sheets[0].Columns[colspl + b].HorizontalAlign = HorizontalAlign.Center;

                                        fpsalary.Sheets[0].Columns[colspl + b].Visible = true;
                                        fpsalary.Sheets[0].ColumnHeader.Cells[0, colspl + b].Locked = true;
                                        fpsalary.Sheets[0].ColumnHeader.Cells[0, colspl + b].Text = splallw_arry[b];
                                        fpsalary.Sheets[0].ColumnHeader.Cells[0, colspl + b].Tag = spll_alll_tag_arry[b];
                                        //fpsalary.Sheets[0].ColumnHeader.Cells[1, colcount1 + i].Text = allown2[i];
                                        fpsalary.ActiveSheetView.Columns[colspl + b].Font.Size = FontUnit.Large;
                                        fpsalary.ActiveSheetView.Columns[colspl + b].Font.Name = "Book Antiqua";
                                        fpsalary.Sheets[0].ColumnHeader.Cells[0, colspl + b].HorizontalAlign = HorizontalAlign.Center;
                                    }
                                    else
                                    {
                                        b--;
                                        u++;
                                    }
                                }
                                else
                                {
                                    if (cblallowance.Items[u].Text == splallw_arry[b])
                                    {
                                        u++;
                                        b = b;
                                        splall = splall - 1;
                                        fpsalary.Sheets[0].ColumnHeader.Cells[0, colspl + b].Text = splallw_arry[b];
                                        fpsalary.Sheets[0].ColumnHeader.Cells[0, colspl + b].Tag = spll_alll_tag_arry[b];

                                        fpsalary.Sheets[0].Columns[colspl + b].Visible = false;
                                        fpsalary.Sheets[0].Columns[colspl + b].HorizontalAlign = HorizontalAlign.Center;
                                    }
                                    else
                                    {
                                        u++;
                                        b--;
                                    }
                                }
                            }
                        }
                    }
                    //////////////////////////////////
                    fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 3;
                    colcount1 = fpsalary.Sheets[0].ColumnCount;
                    fpsalary.ActiveSheetView.Columns[colcount1 - 3].Font.Name = "Book Antiqua";
                    fpsalary.ActiveSheetView.Columns[colcount1 - 3].Font.Size = FontUnit.Large;


                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 3].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount1 - 3, 2, 1);

                    FarPoint.Web.Spread.TextCellType txt = new FarPoint.Web.Spread.TextCellType();

                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 3].Text = "Acc No";
                    fpsalary.Sheets[0].Columns[colcount1 - 3].CellType = txt;

                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 2].Text = "Net Pay";
                    fpsalary.ActiveSheetView.Columns[colcount1 - 2].Font.Size = FontUnit.Large;

                    fpsalary.ActiveSheetView.Columns[colcount1 - 2].Font.Name = "Book Antiqua";

                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 2].HorizontalAlign = HorizontalAlign.Center; ;
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount1 - 2, 2, 1);
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 1].Text = "Remarks";
                    fpsalary.ActiveSheetView.Columns[colcount1 - 1].Font.Size = FontUnit.Large;
                    fpsalary.ActiveSheetView.Columns[colcount1 - 1].Font.Name = "Book Antiqua";

                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount1 - 1, 2, 1);


                }
            }

            //////////////////////////////////////////////////////////////////////////
            FarPoint.Web.Spread.StyleInfo style = new FarPoint.Web.Spread.StyleInfo();
            style.Font.Size = 10;
            style.Font.Bold = true;
            fpsalary.Sheets[0].SheetCornerStyle = new FarPoint.Web.Spread.StyleInfo(style);
            //fpsalary.Sheets[0].ColumnHeader.DefaultStyle = new FarPoint.Web.Spread.StyleInfo(style);
            fpsalary.Sheets[0].AllowTableCorner = true;
            //fpsalary.Sheets[0].SheetCorner.Cells[0, 0].Text = "  ";//=================


            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].Text = "S.No";

            //fpsalary.Sheets[0].SheetCornerSpanModel.Add(0, 0, 6, 1);//================
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].Text = "S.No";
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].BackColor = Color.AliceBlue;
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].Border.BorderColorRight = Color.White;
            fpsalary.Sheets[0].SheetCornerSpanModel.Add(0, 0, 3, 1);

            //modified senthil(25.06.15)
            sql1 = "select distinct CONVERT(VARCHAR(10),from_date,103) as from_date,convert(VARCHAR(10),to_date,103) as to_date from hrpaymonths where paymonthnum='" + cblmonth.SelectedItem.Value.ToString() + "'and PayYear='" + ddlyear2.SelectedItem.Text.ToString() + "' and college_Code=" + Session["collegecode"].ToString() + ""; // Added by jairam 13-11-2014 
            SqlDataAdapter da1 = new SqlDataAdapter(sql1, con);
            DataSet ds1 = new DataSet();
            da1.Fill(ds1);
            string fromdate = "";
            string todate = "";

            if (ds1.Tables[0].Rows.Count > 0)
            {
                fromdate = ds1.Tables[0].Rows[0]["from_date"].ToString();
                Txtentryfrom.Text = fromdate;
                todate = ds1.Tables[0].Rows[0]["to_date"].ToString();
                Txtentryto.Text = todate;

            }


            date1 = Txtentryfrom.Text.ToString();
            string[] split = date1.Split(new Char[] { '/' });
            datefrom = split[1].ToString() + "/" + split[0].ToString() + "/" + split[2].ToString();
            date2 = Txtentryto.Text.ToString();
            string[] split1 = date2.Split(new Char[] { '/' });
            dateto = split1[1].ToString() + "/" + split1[0].ToString() + "/" + split1[2].ToString();


            string str = "select isnull(collname, ' ') as collname,isnull(address1, ' ') as address1,isnull(address2,' ') as address2,isnull(address3, ' ') as address3,isnull(pincode,' ') as pincode from collinfo where college_code='" + Session["collegecode"].ToString() + "'";
            con.Close();
            con.Open();
            SqlCommand comm = new SqlCommand(str, con);
            SqlDataReader drr = comm.ExecuteReader();
            drr.Read();
            string coll_name = Convert.ToString(drr["collname"]);
            string coll_address1 = Convert.ToString(drr["address1"]);
            string coll_address2 = Convert.ToString(drr["address2"]);
            string coll_address3 = Convert.ToString(drr["address3"]);
            string pin_code = Convert.ToString(drr["pincode"]);
            int count5 = 0;
            int dacount = 2;
            int coun6 = 0;


            //count5 = 3 + count5;
            //dacount = dacount + 2;
            int head = 1;
            int headerset = 1;
            if (cblsearch.Items[14].Selected == true)
            {
                //headerset = headerset + 1;
                //head = 1;
            }

            else
            {

                headerset = headerset + 1;
                head = 1;
            }




            fpsalary.Sheets[0].ColumnHeader.Rows[0].Font.Bold = true;
            fpsalary.Sheets[0].ColumnHeader.Rows[0].Font.Size = FontUnit.Large;





            fpsalary.Sheets[0].ColumnHeader.Rows[0].Font.Bold = true;
            fpsalary.Sheets[0].ColumnHeader.Rows[0].Font.Size = FontUnit.Large;

            fpsalary.Sheets[0].ColumnHeader.Rows[1].Font.Bold = true;
            fpsalary.Sheets[0].ColumnHeader.Rows[1].Font.Size = FontUnit.Large;

            fpsalary.Sheets[0].ColumnHeader.Rows[1].Border.BorderColorBottom = Color.Black;

            fpsalary.Sheets[0].ColumnHeader.Cells[1, 0].Border.BorderColorBottom = Color.Black;
            // fpsalary.Sheets[0].Cells[, 1].Border.BorderColorBottom = Color.White;
            int rc = 0;

            ////////////////////////////////////collname/.///////////////////////
            Double depttotal = 0;
            Boolean setflga = false;
            int startrow = 0;
            int depatrow = 0;
            string tempdeptvalue = "";
            if (tbseattype.Text != "---Select---")
            {
                int itemcount = 0;
                int sno = 0;

                for (itemcount = 0; itemcount < cbldepttype.Items.Count; itemcount++)
                {
                    if (cbldepttype.Items[itemcount].Selected == true)
                    {

                        lbldeppt.Visible = false;
                    // rc = fpsalary.Sheets[0].Rows.Count++;
                    //fpsalary.Sheets[0].Cells[rc, 0].Text = cbldepttype.Items[itemcount].Text.ToString();
                    //fpsalary.Sheets[0].Cells[rc, 0].BackColor = Color.SkyBlue;
                    //fpsalary.Sheets[0].Cells[rc, 0].HorizontalAlign = HorizontalAlign.Center;
                    //fpsalary.Sheets[0].AddSpanCell(rc, 0, 1, fpsalary.Sheets[0].ColumnCount - 1);

                    l10: sql = " SELECT monthlypay.*,is_pf,desig_master.priority,dept_acronym,staff_name,bankaccount,pfnumber,CONVERT(VARCHAR(10),staffmaster.join_date,103) as joindate,monthlypay.pay_band,monthlypay.grade_pay,desig_master.desig_acronym,monthlypay.LOP,hrdept_master.dept_name as deptname,desig_master.desig_name as designame,staffmaster.resign from monthlypay,desig_master,stafftrans,staffmaster,hrdept_master Where hrdept_master.dept_code=stafftrans.dept_code and stafftrans.staff_code=monthlypay.staff_code and stafftrans.latestrec=1 and desig_master.desig_code=stafftrans.desig_code and monthlypay.PayYear='" + ddlyear2.SelectedValue.ToString() + "' and monthlypay.PayMonth='" + cblmonth.SelectedValue.ToString() + "' and monthlypay.college_code=" + Session["collegecode"] + " and desig_master.collegecode=" + Session["collegecode"] + " and staffmaster.staff_code=monthlypay.staff_code  and ((staffmaster.resign=0 or staffmaster.settled=0) or(staffmaster.resign=1 and staffmaster.relieve_date>='" + dateto + "') or (staffmaster.resign=1 and staffmaster.relieve_date between '" + datefrom + "' and '" + dateto + "'))"; // added by Srinath 3-1-2015
                        sql = sql + "  and hrdept_master.dept_code ='" + cbldepttype.Items[itemcount].Value.ToString() + "'";
                        if (tbblood.Text != "---Select---")
                        {
                            strcategory = "";
                            int itemcount1 = 0;
                            for (itemcount1 = 0; itemcount1 < cblcategory.Items.Count; itemcount1++)
                            {
                                if (cblcategory.Items[itemcount1].Selected == true)
                                {
                                    if (strcategory == "")
                                        strcategory = "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                                    else
                                        strcategory = strcategory + "," + "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                                }
                            }

                            if (strcategory != "")
                            {
                                strcategory = " in (" + strcategory + ")";
                            }
                            sql = sql + "  and stafftrans.category_code" + strcategory + "";
                        }
                        if (ddlpfcategory.SelectedItem.Text != "All")
                        {
                            sql = sql + " and isnull(staffmaster.is_pf,0)=" + ddlpfcategory.SelectedItem.Value.ToString() + "";
                        }

                        // sql = sql + "  order by desig_master.print_pri desc,monthlypay.dept_name,stafftrans.stftype ,desig_master.priority";
                        sql = sql + " order by  monthlypay.dept_name,monthlypay.desig_name,Is_PF,staffmaster.join_date,staffmaster.staff_code";

                        int rowstr;
                        con.Close();
                        con.Open();
                        SqlCommand cmd4 = new SqlCommand(sql, con);
                        SqlDataReader dr24;
                        dr24 = cmd4.ExecuteReader();
                        int colcount;
                        colcount = 13;
                        string tempstraing = "";
                        Boolean deptvalflga = false;
                        while (dr24.Read())
                        {
                            deptvalflga = true;
                            setflga = true;
                            string pfcategorey = dr24["is_pf"].ToString();
                            if (pfcategorey == "1")
                            {
                                pfcategorey = "With PF";
                            }
                            else
                            {
                                pfcategorey = "With Out PF";
                            }
                            Boolean gettotal = false;
                            if (tempdeptvalue != dr24["dept_name"].ToString())
                            {
                                if (tempdeptvalue != "")
                                {
                                    gettotal = true;
                                }
                                tempdeptvalue = dr24["dept_name"].ToString();
                                depatrow = fpsalary.Sheets[0].RowCount;
                            }
                            string ordercalue = dr24["dept_name"].ToString() + '-' + dr24["desig_name"].ToString() + '-' + pfcategorey;
                            if (tempstraing != ordercalue)
                            {
                                startrow = fpsalary.Sheets[0].RowCount;
                                sno = 0;
                                if (gettotal == false)
                                {
                                    if (fpsalary.Sheets[0].RowCount - 1 > 0)
                                    {
                                        fpsalary.Sheets[0].RowCount++;

                                        fpsalary.Sheets[0].Rows[fpsalary.Sheets[0].RowCount - 1].Font.Bold = true;
                                        fpsalary.Sheets[0].Rows[fpsalary.Sheets[0].RowCount - 1].HorizontalAlign = HorizontalAlign.Right;
                                        //  fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 1, 0, 1, 2);
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Large;
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Font.Bold = true;
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Text = "Total";
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Right;
                                        fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 1, 0, 1, 14);
                                        for (int intColCtr = 13; intColCtr < fpsalary.Sheets[0].ColumnCount; intColCtr++)
                                        {
                                            if ((intColCtr != fpsalary.Sheets[0].ColumnCount - 1) && (intColCtr != 15) && (intColCtr != colheder - 1) && (intColCtr != colcount1 - 3))
                                            {
                                                IntMTotal = 0;
                                                for (int IntRowCtr = rc; IntRowCtr < fpsalary.Sheets[0].RowCount - 1; IntRowCtr++)
                                                {
                                                    IntMTemp = 0;
                                                    if (fpsalary.Sheets[0].Cells[IntRowCtr, 0].Text != "Total")
                                                    {
                                                        if (fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text != "-")
                                                        {
                                                            if (fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text != "")
                                                            {
                                                                Double.TryParse(Convert.ToString(fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text), out IntMTemp);
                                                            }
                                                            else
                                                            {
                                                                IntMTemp = 0;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            IntMTemp = 0;
                                                        }
                                                        IntMTotal = IntMTemp + IntMTotal;
                                                    }
                                                }
                                                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].Font.Size = FontUnit.Large;
                                                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].HorizontalAlign = HorizontalAlign.Right;
                                                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].Font.Bold = true;
                                                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].Text = IntMTotal > 0 ? IntMTotal + "" : "-";
                                            }

                                        }
                                    }
                                }
                                tempstraing = ordercalue;
                                rc = fpsalary.Sheets[0].Rows.Count++;
                                fpsalary.Sheets[0].Cells[rc, 0].Text = tempstraing;
                                fpsalary.Sheets[0].Cells[rc, 0].BackColor = Color.SkyBlue;
                                fpsalary.Sheets[0].Cells[rc, 0].HorizontalAlign = HorizontalAlign.Center;
                                fpsalary.Sheets[0].AddSpanCell(rc, 0, 1, fpsalary.Sheets[0].ColumnCount - 1);
                            }

                            fpsalary.Sheets[0].RowCount += 1;
                            rowstr = Convert.ToInt32(fpsalary.Sheets[0].RowCount);

                            if (dr24.HasRows == true)
                            {

                                btnslip.Visible = true;
                                chkactual.Visible = true;
                                //string staffcode = "";
                                string staffname = "";

                                string joindate = "";
                                string AGP = "";
                                string bascic = "";
                                string Increment = "";
                                string Incrementtime = "";
                                string dept = "";
                                string dept_acrronym = "";
                                string designation = "";
                                string allowance = "";
                                string deduction = "";
                                string basicpay = "";
                                string category = "";
                                string netadd = "";
                                string totalded = "";
                                string netpay = "";
                                string desig_acronym = "";
                                string design_acc = "";
                                string staffcode1 = "";
                                string BasicLOP;
                                fpsalary.Sheets[0].SetColumnWidth(0, 100);
                                fpsalary.Sheets[0].SetColumnWidth(2, 250);
                                fpsalary.Sheets[0].SetColumnWidth(3, 150);
                                fpsalary.Sheets[0].SetColumnWidth(4, 150);
                                fpsalary.Sheets[0].SetColumnWidth(5, 100);
                                fpsalary.Sheets[0].SetColumnWidth(6, 150);
                                fpsalary.Sheets[0].SetColumnWidth(9, 50);
                                fpsalary.Sheets[0].SetColumnWidth(10, 75);
                                fpsalary.Sheets[0].SetColumnWidth(11, 75);
                                string datefrom3;
                                int monthname1;
                                string date3 = Txtentryfrom.Text.ToString();
                                string monthname2 = "";
                                int monthnamenum;
                                string yearto = "";
                                string monyearto = "";
                                string[] split5 = date3.Split(new Char[] { '/' });
                                staffcode1 = dr24["staff_code"].ToString();
                                joindate = dr24["joindate"].ToString();
                                string leavedetail = dr24["leavedetail"].ToString();
                                string[] spiltleavedetail = leavedetail.Split(new Char[] { ';' });
                                string workingdays = spiltleavedetail[0].ToString();
                                //////////////////////////


                                string monyear;
                                int dayfrm = 0;
                                string dayto;
                                int daytonum;
                                int year3;

                                datefrom3 = split5[1].ToString() + "/" + split5[0].ToString() + "/" + split5[2].ToString();
                                year3 = Convert.ToInt16(split5[2]);
                                string date4 = Txtentryto.Text.ToString();


                                string[] split6 = date4.Split(new Char[] { '/' });

                                string dateto4 = split6[1].ToString() + "/" + split6[0].ToString() + "/" + split6[2].ToString();

                                monthname2 = split6[0].ToString();
                                monthnamenum = Convert.ToInt32(monthname2.ToString());
                                yearto = split1[2].ToString();
                                ///////
                                int fromday = 0;
                                fromday = Convert.ToInt16(split6[0].ToString());
                                string mnmae = split5[1].ToString();
                                monthname1 = Convert.ToInt16(mnmae);
                                monthname2 = split1[1].ToString();
                                monthnamenum = Convert.ToInt16(monthname2);
                                string year = split5[2].ToString();

                                monyear = monthname1.ToString() + "/" + year;
                                monyearto = monthnamenum.ToString() + "/" + yearto;

                                string dayfrom;
                                int today = 0;
                                today = Convert.ToInt16(split6[0].ToString());

                                dayfrom = split5[0].ToString();
                                dayfrm = Convert.ToInt32(dayfrom);
                                dayto = split6[0].ToString();
                                daytonum = Convert.ToInt32(dayto);

                                double lopdaysmor = 0;
                                double lopdayseveg = 0;
                                double totlop = 0;
                                string date = "";
                                int maxdays = getmaxdays(monthname1, year3);

                                if (monthname1 == monthnamenum)  // Modify jairam **************************** 10-12-2014 *******************
                                {

                                    for (int day = dayfrm; dayfrm <= daytonum; dayfrm++)
                                    {
                                        int boll4 = 0;
                                        int day5 = 0;
                                        day5 = 0 + dayfrm;
                                        sql1 = "select * from staff_attnd where mon_year between '" + monyear + "' and '" + monyearto + "' and staff_code='" + staffcode1 + "'";
                                        con1.Close();
                                        con1.Open();
                                        SqlCommand cmd100 = new SqlCommand(sql1, con1);
                                        SqlDataReader dr100 = cmd100.ExecuteReader();
                                        while (dr100.Read())
                                        {
                                            if (dr100.HasRows == true)
                                            {
                                                int day6;
                                                string attnda = "";
                                                day6 = 3 + day5;
                                                attnda = dr100[day6].ToString();
                                                if (attnda != "")
                                                {
                                                    string[] split100 = attnda.Split(new char[] { '-' });
                                                    string mor = "";
                                                    string eve = "";
                                                    mor = split100[0].ToString();
                                                    eve = split100[1].ToString();
                                                    //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = leavetype[l].ToString();
                                                    if ((mor == "LOP") || (mor == "A"))
                                                    {
                                                        //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = levatype + "(" + countmor++ + ")";
                                                        lopdaysmor = lopdaysmor + 0.5;
                                                        boll4 = 1;
                                                        //  date = dayfrm + monyear + date;
                                                    }
                                                    if ((eve == "LOP") || (eve == "A"))
                                                    {
                                                        lopdayseveg = lopdayseveg + 0.5;
                                                        boll4 = 1;



                                                    }
                                                    if (boll4 == 1)
                                                    {
                                                        date = date + "," + dayfrm;
                                                    }
                                                    string[] lave = new string[15];



                                                }

                                            }
                                        }

                                    }
                                    totlop = lopdayseveg + lopdayseveg;
                                    fpsalary.Sheets[0].Columns[10].Visible = false;
                                    fpsalary.Sheets[0].Columns[11].Visible = false;
                                    fpsalary.Sheets[0].Columns[9].Visible = true;
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 11].Text = totlop.ToString();
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 1].CellType = chkcell;
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                    //totlop = lopdaysmor + lopdayseveg;
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 11].Text = totlop.ToString();
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 8].Text = dr24["stftype"].ToString();
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 8].Locked = true;
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 10].Text = workingdays.ToString();
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 10].HorizontalAlign = HorizontalAlign.Center;
                                    if (date != "")
                                    {
                                        date = date.Substring(1, date.Length - 1);
                                    }
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 14].Text = date;
                                }
                                else
                                {

                                    ///////

                                    for (int day = dayfrm; dayfrm <= maxdays; dayfrm++)
                                    {
                                        fpsalary.Sheets[0].Columns[10].Visible = true;
                                        fpsalary.Sheets[0].Columns[11].Visible = true;
                                        fpsalary.Sheets[0].Columns[9].Visible = false;
                                        int day5 = 0;
                                        day5 = 0 + dayfrm;
                                        sql1 = "select * from staff_attnd where mon_year= '" + monyear + "' and staff_code='" + staffcode1 + "'";
                                        con1.Close();
                                        con1.Open();
                                        SqlCommand cmd100 = new SqlCommand(sql1, con1);
                                        SqlDataReader dr100 = cmd100.ExecuteReader();
                                        while (dr100.Read())
                                        {
                                            if (dr100.HasRows == true)
                                            {
                                                int bol = 0;
                                                int day6;
                                                string attnda = "";
                                                day6 = 3 + day5;
                                                attnda = dr100[day6].ToString();
                                                if (attnda != "")
                                                {
                                                    string[] split100 = attnda.Split(new char[] { '-' });
                                                    string mor = "";
                                                    string eve = "";
                                                    mor = split100[0].ToString();
                                                    eve = split100[1].ToString();
                                                    //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = leavetype[l].ToString();
                                                    if ((mor == "LOP") || (mor == "A'"))
                                                    {
                                                        //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = levatype + "(" + countmor++ + ")";
                                                        lopdaysmor = lopdaysmor + 0.5;
                                                        //date = dayfrm + monyear + date;
                                                        bol = 1;
                                                    }
                                                    if ((eve == "LOP") || (eve == "A"))
                                                    {
                                                        lopdayseveg = lopdayseveg + 0.5;
                                                        // date = dayfrm + monyear + date;
                                                        bol = 1;
                                                    }
                                                    if (bol == 1)
                                                    {
                                                        date = date + "," + dayfrm;
                                                    }




                                                }

                                            }
                                        }
                                        totlop = lopdayseveg + lopdaysmor;
                                        fpsalary.Sheets[0].Cells[rowstr - 1, 12].Text = totlop.ToString();
                                        fpsalary.Sheets[0].Cells[rowstr - 1, 12].Locked = true;
                                        fpsalary.Sheets[0].Cells[rowstr - 1, 12].HorizontalAlign = HorizontalAlign.Center;

                                    }
                                    lopdayseveg = 0;
                                    lopdaysmor = 0;


                                    for (int day = 1; day <= today; day++)
                                    {
                                        int day5 = 0;

                                        day5 = 0 + day;
                                        sql1 = "select * from staff_attnd where mon_year= '" + monyearto + "' and staff_code='" + staffcode1 + "'";
                                        con1.Close();
                                        con1.Open();
                                        SqlCommand cmd100 = new SqlCommand(sql1, con1);
                                        SqlDataReader dr100 = cmd100.ExecuteReader();
                                        while (dr100.Read())
                                        {
                                            if (dr100.HasRows == true)
                                            {
                                                int day6;
                                                int bol2 = 0;
                                                string attnda = "";
                                                day6 = 3 + day5;
                                                attnda = dr100[day6].ToString();
                                                if (attnda != "")
                                                {
                                                    string[] split100 = attnda.Split(new char[] { '-' });
                                                    string mor = "";
                                                    string eve = "";
                                                    mor = split100[0].ToString();
                                                    eve = split100[1].ToString();
                                                    //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = leavetype[l].ToString();
                                                    if ((mor == "LOP") || (mor == "A'"))
                                                    {
                                                        //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = levatype + "(" + countmor++ + ")";
                                                        lopdaysmor = lopdaysmor + 0.5;
                                                        bol2 = 1;

                                                    }
                                                    if ((eve == "LOP") || (eve == "A"))
                                                    {
                                                        lopdayseveg = lopdayseveg + 0.5;
                                                        bol2 = 1;


                                                    }
                                                    // string[] lave = new string[15];

                                                    if (bol2 == 1)
                                                    {
                                                        date = date + "," + day;
                                                    }

                                                }

                                            }
                                        }

                                    }
                                    totlop = lopdaysmor + lopdayseveg;
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 12].Text = totlop.ToString();
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 12].Locked = true;
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 12].HorizontalAlign = HorizontalAlign.Center;
                                    if (date != "")
                                    {
                                        date = date.Substring(1, date.Length - 1);
                                    }
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 14].Text = date;
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 14].Locked = true;
                                }

                                //////////// ************************************ Ene by jairam ********************************


                                staffname = dr24["staff_name"].ToString();



                                sno = sno + 1;

                                dept = dr24["deptname"].ToString(); // added by jairam 13-11-2014
                                designation = dr24["designame"].ToString(); // added by jairam 13-11-2014
                                dept_acrronym = dr24["dept_acronym"].ToString();
                                bascic = dr24["Basic"].ToString();
                                AGP = dr24["AGP"].ToString();
                                Increment = dr24["IncrementAmt"].ToString();
                                Incrementtime = dr24["IncrementTime"].ToString();
                                desig_acronym = dr24["desig_acronym"].ToString();
                                basicpay = dr24["bsalary"].ToString();
                                string actu_basicpay = dr24["basic_alone"].ToString();
                                category = dr24["stftype"].ToString();
                                netadd = dr24["netadd"].ToString();
                                totalded = dr24["netded"].ToString();
                                netpay = dr24["netsal"].ToString();
                                BasicLOP = dr24["LOP"].ToString();
                                string banaccount = dr24["bankaccount"].ToString();

                                string regisin = dr24["resign"].ToString();
                                if (regisin.Trim().ToLower() == "true" || regisin.Trim() == "1")
                                {
                                    fpsalary.Sheets[0].Rows[rowstr - 1].BackColor = Color.Pink;
                                }

                                fpsalary.Sheets[0].Cells[rowstr - 1, 0].Text = sno.ToString();
                                fpsalary.Sheets[0].Cells[rowstr - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                fpsalary.Sheets[0].Cells[rowstr - 1, 2].Text = staffname.ToString();
                                fpsalary.Sheets[0].Cells[rowstr - 1, 2].Locked = true;
                                fpsalary.Sheets[0].Cells[rowstr - 1, 2].Tag = staffcode1.ToString();
                                fpsalary.Sheets[0].Cells[rowstr - 1, 4].Text = dept.ToString();
                                fpsalary.Sheets[0].Cells[rowstr - 1, 4].Locked = true;
                                fpsalary.Sheets[0].Cells[rowstr - 1, 5].Text = dept_acrronym.ToString();
                                fpsalary.Sheets[0].Cells[rowstr - 1, 5].Locked = true;
                                fpsalary.Sheets[0].Cells[rowstr - 1, 6].Text = desig_acronym.ToString();
                                fpsalary.Sheets[0].Cells[rowstr - 1, 6].Locked = true;

                                fpsalary.Sheets[0].Cells[rowstr - 1, 9].Text = joindate.ToString();
                                fpsalary.Sheets[0].Cells[rowstr - 1, 9].Locked = true;

                                fpsalary.Sheets[0].Cells[rowstr - 1, 3].Text = designation.ToString();
                                fpsalary.Sheets[0].Cells[rowstr - 1, 7].Text = category.ToString();
                                fpsalary.Sheets[0].Cells[rowstr - 1, 7].Locked = true;

                                allowance = dr24["allowances"].ToString();
                                int h = 0;

                                double grosspaylop = 0;
                                string[] allowanmce_arr1;
                                string alowancesplit;
                                double dblallowact2 = 0;
                                allowanmce_arr1 = allowance.Split('\\');
                                for (int i = 0; i < allowanmce_arr1.GetUpperBound(0); i++)
                                {
                                    alowancesplit = allowanmce_arr1[i];
                                    string[] allowanceda;
                                    allowanceda = alowancesplit.Split(';');
                                    string da;
                                    string da3;
                                    string da2;
                                    double ds2 = 0;
                                    double ds3 = 0;
                                    string dblallowact;
                                    double dblallowact1 = 0;
                                    dblallowact2 = 0;

                                    da = allowanceda[0];
                                    da3 = allowanceda[3];
                                    da2 = allowanceda[2];
                                    dblallowact = allowanceda[3];

                                    // ds3 = Convert.ToDouble(da3);
                                    ds3 = Math.Round(ds3, 0);
                                    string[] spval = da2.Split('-');
                                    da2 = spval[0];
                                    if (da2.Trim() == "" || da2 == null)
                                    {
                                        da2 = "0";
                                    }
                                    ds2 = Convert.ToDouble(da2);
                                    ds2 = Math.Round(ds2, 0);
                                    dblallowact1 = Convert.ToDouble(dblallowact);
                                    dblallowact1 = Math.Round(dblallowact1, 0);
                                    dblallowact2 = dblallowact2 + (ds3 - dblallowact1);
                                    int all = 0;
                                    da = da.ToUpper();
                                    for (int k = 13; k <= colcount1 - 2; k++)
                                    {
                                        string headval = fpsalary.Sheets[0].ColumnHeader.Cells[1, k].Text;//Modified by Manikandan 02/08/2013                                    
                                        headval = headval.ToUpper();
                                        //fpsalary.Sheets[0].Cells[rowstr - 1, k].Text = all.ToString();
                                        //Mahesh
                                        //fpsalary.Sheets[0].Cells[rowstr - 1, k].HorizontalAlign = HorizontalAlign.Right;

                                        if (da == "I.T.DED")
                                        {
                                            all = 5;
                                        }
                                        fpsalary.Sheets[0].Cells[rowstr - 1, k].Locked = true;
                                        if (da == headval)
                                        {
                                            fpsalary.Sheets[0].Cells[rowstr - 1, k].Text = da2.ToString();
                                            fpsalary.Sheets[0].Cells[rowstr - 1, k].Locked = true;

                                            grosspaylop = Convert.ToDouble(ds2) + grosspaylop;

                                            all++;
                                            // dblallowtotal[] = dblallowtotal[i] + Convert.ToDouble(da3);
                                            //Mahesh
                                            //fpsalary.Sheets[0].Cells[rowstr - 1, k].HorizontalAlign = HorizontalAlign.Right;

                                            if (allowanceda[1] == "Percent")
                                            {
                                                fpsalary.Sheets[0].Cells[rowstr - 1, 21].Text = allowanceda[2];

                                                fpsalary.Sheets[0].Cells[rowstr - 1, 21].Locked = true;

                                            }
                                            k = colcount1;

                                        }
                                        if (da == "INCENTIVE")
                                        {
                                            splall = 2;
                                        }
                                    }
                                    int o = 0;
                                    if (all == 0)
                                    {
                                        for (int k = colspl; k <= fpsalary.Sheets[0].ColumnCount - 2; k++)
                                        {
                                            string headval = "";
                                            if (splall > o)
                                            {
                                                headval = Convert.ToString(fpsalary.Sheets[0].ColumnHeader.Cells[0, k].Tag);
                                                headval = headval.ToUpper();
                                                o++;

                                            }
                                            //fpsalary.Sheets[0].Cells[rowstr - 1, k].Text = all.ToString();
                                            //Mahesh
                                            //fpsalary.Sheets[0].Cells[rowstr - 1, k].HorizontalAlign = HorizontalAlign.Right;


                                            fpsalary.Sheets[0].Cells[rowstr - 1, k].Locked = true;
                                            if (da == headval)
                                            {
                                                fpsalary.Sheets[0].Cells[rowstr - 1, k].Text = ds3.ToString();
                                                fpsalary.Sheets[0].Cells[rowstr - 1, k].Locked = true;

                                                // dblallowtotal[] = dblallowtotal[i] + Convert.ToDouble(da3);
                                                //Mahesh
                                                //fpsalary.Sheets[0].Cells[rowstr - 1, k].HorizontalAlign = HorizontalAlign.Right;

                                            }
                                        }
                                    }
                                }
                                double BasicLOP1 = 0;
                                double dblGross = 0;
                                double dblNetadd = 0;
                                double totalded1 = 0;
                                BasicLOP1 = Convert.ToDouble(BasicLOP);
                                BasicLOP1 = Math.Round(BasicLOP1, 0);
                                dblallowact2 = dblallowact2 + BasicLOP1;
                                deduction = dr24["deductions"].ToString();
                                dblNetadd = Convert.ToDouble(netadd);
                                dblGross = dblallowact2 + dblNetadd;
                                totalded1 = Convert.ToDouble(totalded);
                                totalded1 = totalded1 + dblallowact2;

                                string[] deduction_arr1; ;
                                string deductionsplit1;
                                deduction_arr1 = deduction.Split('\\');
                                for (int sp = 0; sp < deduction_arr1.GetUpperBound(0); sp++)
                                {
                                    deductionsplit1 = deduction_arr1[sp];
                                    string[] deductionda;
                                    deductionda = deductionsplit1.Split(';');
                                    string de;
                                    string de3;
                                    //int i=0;
                                    de = deductionda[0];
                                    de = de.ToUpper();
                                    de3 = deductionda[3];
                                    for (int p = 12; p <= colcount1 - 1; p++)
                                    {
                                        string headval2 = fpsalary.Sheets[0].ColumnHeader.Cells[1, p].Text;//Modified by Manikandan 02/08/2013                                    
                                        headval2 = headval2.ToUpper();
                                        if (de == headval2)
                                        {
                                            fpsalary.Sheets[0].Cells[rowstr - 1, p].Text = de3;
                                            fpsalary.Sheets[0].Cells[rowstr - 1, p].Locked = true;
                                            fpsalary.Sheets[0].Cells[rowstr - 1, p].HorizontalAlign = HorizontalAlign.Right;
                                        }

                                    }
                                }
                                if (bascic != "")
                                {
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 15].Text = bascic.ToString();
                                }
                                else
                                {
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 15].Text = "0";
                                }
                                if (AGP != "")
                                {
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 16].Text = AGP.ToString();
                                }
                                else
                                {
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 16].Text = "0";
                                }
                                if (Increment != "")
                                {
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 18].Text = Increment.ToString();
                                }
                                else
                                {
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 18].Text = "0";
                                }
                                if (Incrementtime != "")
                                {
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 17].Text = Incrementtime.ToString();
                                }
                                else
                                {
                                    fpsalary.Sheets[0].Cells[rowstr - 1, 17].Text = "0";
                                }
                                fpsalary.Sheets[0].Cells[rowstr - 1, 20].Text = basicpay.ToString();
                                fpsalary.Sheets[0].Cells[rowstr - 1, 20].Locked = true;
                                fpsalary.Sheets[0].Cells[rowstr - 1, 20].HorizontalAlign = HorizontalAlign.Right;
                                fpsalary.Sheets[0].Cells[rowstr - 1, 19].Text = actu_basicpay.ToString();
                                fpsalary.Sheets[0].Cells[rowstr - 1, 19].Locked = true;
                                fpsalary.Sheets[0].Cells[rowstr - 1, 19].HorizontalAlign = HorizontalAlign.Right;


                                grosspaylop = Convert.ToDouble(actu_basicpay) + grosspaylop;
                                string actgrosspay = dr24["netaddact"].ToString();
                                if (actgrosspay.Trim() != "" && actgrosspay != null)
                                {
                                    fpsalary.Sheets[0].Cells[rowstr - 1, colgross - 2].Text = Convert.ToString(Math.Round(Convert.ToDouble(actgrosspay), 0, MidpointRounding.AwayFromZero));
                                }
                                else
                                {
                                    fpsalary.Sheets[0].Cells[rowstr - 1, colgross - 2].Text = grosspaylop.ToString();
                                }

                                fpsalary.Sheets[0].Cells[rowstr - 1, colgross - 2].Locked = true;
                                fpsalary.Sheets[0].Cells[rowstr - 1, colgross - 2].HorizontalAlign = HorizontalAlign.Right;

                                // fpsalary.Sheets[0].Cells[rowstr - 1, colheder - 2].Text = dblGross.ToString();


                                fpsalary.Sheets[0].Cells[rowstr - 1, colgross - 1].Text = dr24["netadd"].ToString();
                                fpsalary.Sheets[0].Cells[rowstr - 1, colgross - 1].Locked = true;
                                fpsalary.Sheets[0].Cells[rowstr - 1, colgross - 1].HorizontalAlign = HorizontalAlign.Right;
                                ////////////

                                fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_pf_number - 1].Text = BasicLOP.ToString();
                                fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_pf_number - 1].Locked = true;
                                fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_pf_number - 1].HorizontalAlign = HorizontalAlign.Right;

                                // to add lop amount


                                //fpsalary.Sheets[0].Cells[rowstr - 1, colheder - 1].Text = dblallowact2.ToString();
                                // fpsalary.Sheets[0].Cells[rowstr - 1, colheder - 1].Text = dblallowact2.ToString();
                                fpsalary.Sheets[0].Cells[rowstr - 1, colheder - 1].Text = dr24["pfnumber"].ToString();
                                fpsalary.Sheets[0].Cells[rowstr - 1, colheder - 1].Locked = true;
                                fpsalary.Sheets[0].Cells[rowstr - 1, colheder - 1].HorizontalAlign = HorizontalAlign.Right;
                                //


                                // fpsalary.Sheets[0].Cells[rowstr - 1, colcount1 - 4].Text = totalded1.ToString();
                                fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 1].Text = dr24["netded"].ToString();
                                fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 1].Locked = true;
                                fpsalary.Sheets[0].Cells[rowstr - 1, colcnt_total_deduction - 1].HorizontalAlign = HorizontalAlign.Right;
                                fpsalary.Sheets[0].Cells[rowstr - 1, colcount1 - 2].Text = netpay.ToString();
                                fpsalary.Sheets[0].Cells[rowstr - 1, colcount1 - 2].Locked = true;
                                fpsalary.Sheets[0].Cells[rowstr - 1, colcount1 - 3].HorizontalAlign = HorizontalAlign.Center;
                                fpsalary.Sheets[0].Cells[rowstr - 1, colcount1 - 2].HorizontalAlign = HorizontalAlign.Right;
                                fpsalary.Sheets[0].Cells[rowstr - 1, colcount1 - 3].Text = dr24["bankaccount"].ToString();
                                fpsalary.Sheets[0].Cells[rowstr - 1, colcount1 - 3].Locked = true;
                                // fpsalary.Sheets[0].Cells[rowstr - 1, colcount1 - 2].HorizontalAlign = HorizontalAlign.Right;

                                fpsalary.Sheets[0].Columns[2].Visible = false;
                                fpsalary.Sheets[0].Columns[3].Visible = false;
                                fpsalary.Sheets[0].Columns[4].Visible = false;
                                fpsalary.Sheets[0].Columns[5].Visible = false;
                                fpsalary.Sheets[0].Columns[6].Visible = false;
                                fpsalary.Sheets[0].Columns[7].Visible = false;
                                fpsalary.Sheets[0].Columns[1].Visible = false;
                                fpsalary.Sheets[0].Columns[8].Visible = false;
                                fpsalary.Sheets[0].Columns[9].Visible = false;
                                fpsalary.Sheets[0].Columns[10].Visible = false;
                                fpsalary.Sheets[0].Columns[11].Visible = false;
                                fpsalary.Sheets[0].Columns[12].Visible = false;
                                fpsalary.Sheets[0].Columns[13].Visible = false;
                                fpsalary.Sheets[0].Columns[14].Visible = false;
                                fpsalary.Sheets[0].Columns[15].Visible = false;
                                fpsalary.Sheets[0].Columns[16].Visible = false;
                                fpsalary.Sheets[0].Columns[17].Visible = false;
                                fpsalary.Sheets[0].Columns[18].Visible = false;
                                fpsalary.Sheets[0].Columns[19].Visible = false;
                                fpsalary.Sheets[0].Columns[20].Visible = false;
                                fpsalary.Sheets[0].Columns[21].Visible = false;

                                fpsalary.Sheets[0].Columns[colgross - 2].Visible = false;
                                fpsalary.Sheets[0].Columns[colgross - 1].Visible = false;
                                fpsalary.Sheets[0].Columns[colcnt_pf_number - 1].Visible = false;
                                fpsalary.Sheets[0].Columns[colheder - 1].Visible = false;
                                fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 3].Visible = false;

                                if (cblsearch.Items[0].Selected == true)
                                {
                                    fpsalary.Sheets[0].Columns[2].Visible = true;
                                }
                                if (cblsearch.Items[1].Selected == true)
                                {
                                    fpsalary.Sheets[0].Columns[3].Visible = true;
                                }
                                if (cblsearch.Items[2].Selected == true)
                                {
                                    fpsalary.Sheets[0].Columns[4].Visible = true;
                                }
                                if (cblsearch.Items[3].Selected == true)
                                {
                                    fpsalary.Sheets[0].Columns[5].Visible = true;
                                }
                                if (cblsearch.Items[4].Selected == true)
                                {
                                    fpsalary.Sheets[0].Columns[6].Visible = true;
                                }
                                if (cblsearch.Items[5].Selected == true)
                                {
                                    fpsalary.Sheets[0].Columns[7].Visible = true;
                                }
                                if (cblsearch.Items[6].Selected == true)
                                {
                                    if (monthname1 == monthnamenum)
                                    {
                                        fpsalary.Sheets[0].Columns[11].Visible = true;
                                    }
                                    else
                                    {
                                        fpsalary.Sheets[0].Columns[11].Visible = true;
                                        fpsalary.Sheets[0].Columns[12].Visible = true;

                                    }
                                }
                                if (cblsearch.Items[7].Selected == true)
                                {

                                    fpsalary.Sheets[0].Columns[14].Visible = true;
                                }
                                if (cblsearch.Items[8].Selected == true)
                                {

                                    fpsalary.Sheets[0].Columns[9].Visible = true;
                                }
                                if (cblsearch.Items[9].Selected == true)
                                {

                                    fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 3].Visible = true;
                                }
                                if (cblsearch.Items[10].Selected == true)
                                {

                                    fpsalary.Sheets[0].Columns[19].Visible = true;
                                }
                                if (cblsearch.Items[11].Selected == true)
                                {
                                    fpsalary.Sheets[0].Columns[colcnt_pf_number - 1].Visible = true;

                                }
                                if (cblsearch.Items[12].Selected == true)
                                {
                                    fpsalary.Sheets[0].Columns[colheder - 1].Visible = true;

                                }
                                if (cblsearch.Items[13].Selected == true)
                                {

                                    fpsalary.Sheets[0].Columns[21].Visible = true;
                                }

                                if (cblsearch.Items[14].Selected == true)
                                {

                                    fpsalary.Sheets[0].Columns[1].Visible = true;
                                }
                                if (cblsearch.Items[15].Selected == true)
                                {
                                    fpsalary.Sheets[0].Columns[8].Visible = true;
                                }
                                if (cblsearch.Items[16].Selected == true)
                                {
                                    fpsalary.Sheets[0].Columns[15].Visible = true;
                                }
                                if (cblsearch.Items[17].Selected == true)
                                {

                                    fpsalary.Sheets[0].Columns[16].Visible = true;
                                }
                                if (cblsearch.Items[18].Selected == true)
                                {

                                    fpsalary.Sheets[0].Columns[17].Visible = true;
                                }
                                if (cblsearch.Items[19].Selected == true)
                                {

                                    fpsalary.Sheets[0].Columns[18].Visible = true;
                                }
                                if (cblsearch.Items[20].Selected == true)
                                {

                                    fpsalary.Sheets[0].Columns[10].Visible = true;
                                }

                                if (cblsearch.Items[21].Selected == true)
                                {

                                    fpsalary.Sheets[0].Columns[20].Visible = true;
                                }
                                if (cblsearch.Items[22].Selected == true)
                                {

                                    fpsalary.Sheets[0].Columns[colgross - 2].Visible = true;
                                }
                                if (cblsearch.Items[23].Selected == true)
                                {

                                    fpsalary.Sheets[0].Columns[colgross - 1].Visible = true;

                                }
                            }
                        }
                        if (rk == 0)
                        {
                            fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 2;
                        }

                        if (cblsearch.Items[26].Selected == true)
                        {
                            if (rk == 0)
                            {
                                fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 3].Visible = true;
                                fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 3].Text = "Check No";
                                //    

                                fpsalary.ActiveSheetView.Columns[fpsalary.Sheets[0].ColumnCount - 3].Font.Size = FontUnit.Large;
                                fpsalary.ActiveSheetView.Columns[fpsalary.Sheets[0].ColumnCount - 3].Font.Name = "Book Antiqua";
                                fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 3].HorizontalAlign = HorizontalAlign.Center;
                                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsalary.Sheets[0].ColumnCount - 3, 2, 1);
                                fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 3].Locked = true;
                                rk++;
                            }
                        }
                        //else
                        //{
                        //    fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 3].Visible = false;
                        //}



                        for (int i = 0; i < fpsalary.Sheets[0].RowCount; i++)
                        {
                            if (fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 2].Text.ToString().Trim() == "")
                            {
                                fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 2].Text = "                                                                                                                                                                                                                                                                                                                                           ";
                            }
                        }
                        if (cblsearch.Items[27].Selected == true)
                        {
                            if (sk == 0)
                            {
                                fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 2].Visible = true;
                                fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 2].Text = "Signature";
                                fpsalary.ActiveSheetView.Columns[fpsalary.Sheets[0].ColumnCount - 2].Font.Size = FontUnit.Large;
                                fpsalary.ActiveSheetView.Columns[fpsalary.Sheets[0].ColumnCount - 2].Font.Name = "Book Antiqua";
                                fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Center;
                                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsalary.Sheets[0].ColumnCount - 2, 2, 1);
                                fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 2].Locked = true;
                                sk++;
                            }
                            //else
                            //{
                            //    fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 2].Visible = true;
                            //}
                        }
                        //else
                        //{
                        //    fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 2].Visible = false;
                        //}
                        //if (tk == 0)
                        //{
                        //    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Text = "Remarks";
                        //    tk++;
                        //    fpsalary.ActiveSheetView.Columns[fpsalary.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Large;
                        //    fpsalary.ActiveSheetView.Columns[fpsalary.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                        //    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                        //    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, fpsalary.Sheets[0].ColumnCount - 1, 2, 1);
                        //    fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 1].Locked = true;
                        //}


                        if (deptvalflga == true)
                        {
                            FarPoint.Web.Spread.TextCellType txt1 = new FarPoint.Web.Spread.TextCellType();
                            if (fpsalary.Sheets[0].RowCount - 1 > 0)
                            {
                                fpsalary.Sheets[0].RowCount++;

                                fpsalary.Sheets[0].Rows[fpsalary.Sheets[0].RowCount - 1].Font.Bold = true;
                                fpsalary.Sheets[0].Rows[fpsalary.Sheets[0].RowCount - 1].HorizontalAlign = HorizontalAlign.Right;
                                //  fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 1, 0, 1, 2);
                                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Large;
                                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Font.Bold = true;
                                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Text = "Total";
                                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Right;
                                fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 1, 0, 1, 14);
                                for (int intColCtr = 13; intColCtr < fpsalary.Sheets[0].ColumnCount - 2; intColCtr++)
                                {
                                    if ((intColCtr != fpsalary.Sheets[0].ColumnCount - 2) && (intColCtr != 15) && (intColCtr != colheder - 1) && (intColCtr != colcount1 - 3))
                                    {
                                        IntMTotal = 0;
                                        for (int IntRowCtr = rc; IntRowCtr < fpsalary.Sheets[0].RowCount - 1; IntRowCtr++)
                                        {
                                            IntMTemp = 0;
                                            if (fpsalary.Sheets[0].Cells[IntRowCtr, 0].Text != "Total")
                                            {
                                                if (fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text != "-")
                                                {
                                                    if (fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text != "")
                                                    {
                                                        Double.TryParse(Convert.ToString(fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text), out IntMTemp);
                                                    }
                                                    else
                                                    {
                                                        IntMTemp = 0;
                                                    }
                                                }
                                                else
                                                {
                                                    IntMTemp = 0;
                                                }
                                                IntMTotal = IntMTemp + IntMTotal;
                                            }
                                        }
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].Font.Size = FontUnit.Large;
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].Font.Bold = true;
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].Text = IntMTotal > 0 ? IntMTotal + "" : "-";
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].CellType = txt1;
                                    }
                                }
                                fpsalary.Sheets[0].RowCount++;

                                fpsalary.Sheets[0].Rows[fpsalary.Sheets[0].RowCount - 1].Font.Bold = true;
                                fpsalary.Sheets[0].Rows[fpsalary.Sheets[0].RowCount - 1].HorizontalAlign = HorizontalAlign.Right;
                                //  fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 1, 0, 1, 2);
                                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Large;
                                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Font.Bold = true;
                                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Text = "Department Total";
                                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Right;
                                fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 1, 0, 1, 14);
                                for (int intColCtr = 13; intColCtr < fpsalary.Sheets[0].ColumnCount - 2; intColCtr++)
                                {
                                    if ((intColCtr != fpsalary.Sheets[0].ColumnCount - 2) && (intColCtr != 15) && (intColCtr != colheder - 1) && (intColCtr != colcount1 - 3))
                                    {
                                        IntMTotal = 0;
                                        for (int IntRowCtr = depatrow; IntRowCtr < fpsalary.Sheets[0].RowCount - 1; IntRowCtr++)
                                        {
                                            IntMTemp = 0;
                                            if (fpsalary.Sheets[0].Cells[IntRowCtr, 0].Text != "Total")
                                            {
                                                if (fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text != "-")
                                                {
                                                    if (fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text != "")
                                                    {
                                                        Double.TryParse(Convert.ToString(fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text), out IntMTemp);
                                                    }
                                                    else
                                                    {
                                                        IntMTemp = 0;
                                                    }
                                                }
                                                else
                                                {
                                                    IntMTemp = 0;
                                                }
                                                IntMTotal = IntMTemp + IntMTotal;
                                            }
                                        }
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].HorizontalAlign = HorizontalAlign.Right;
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].Font.Size = FontUnit.Large;
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].Font.Bold = true;
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].Text = IntMTotal > 0 ? IntMTotal + "" : "-";
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].CellType = txt1;
                                    }
                                }
                            }
                        }
                    }
                }
                if (setflga == false)
                {
                    btnexcel.Visible = false;
                    txtexcel.Visible = false;
                    lblexcel.Visible = false;
                    fpsalary.Visible = false;
                    btnprintmaster.Visible = false;
                    Button3.Visible = false;
                    Printcontrol.Visible = false;
                    GridPrintmaster.Visible = false;
                    lblnorec.Visible = true;
                    emailpanel.Visible = false;
                    txtsms.Visible = false;
                    btnsendsms.Visible = false;
                    lblnorec.Text = "No Records Found";
                    // added by sridhar 17 sep 2014 -------------------Start
                    lblpurpose1.Visible = false;
                    ddlpurpose.Visible = false;
                    FpSpread2.Visible = false;
                    btnaddtemplate.Visible = false;
                    btndeletetemplate.Visible = false;
                    // added by sridhar 17 sep 2014 -------------------End
                }
                else
                {
                    btnexcel.Visible = true;
                    txtexcel.Visible = true;
                    lblexcel.Visible = true;
                    btnprintmaster.Visible = true;
                    Button3.Visible = true;
                }
                fpsalary.Sheets[0].Columns[1].Width = 50;
                fpsalary.Sheets[0].Columns[0].Width = 50;
            }
            else
            {
                fpsalary.Visible = false;
                btnprintmaster.Visible = false;
                Button3.Visible = false;
                btnprintmaster.Visible = false;
                Printcontrol.Visible = false;
                GridPrintmaster.Visible = false;
                lbldeppt.Visible = true;
            }
            try
            {
                string setvalue = "";
                for (int sv = 0; sv < cblsearch.Items.Count; sv++)
                {
                    if (cblsearch.Items[sv].Selected == true)
                    {
                        if (setvalue == "")
                        {
                            setvalue = "" + sv + "";
                        }
                        else
                        {
                            setvalue = setvalue + "," + sv + "";
                        }
                    }
                }

                string strquery = "if exists (select * from Master_Settings where settings='Salary1 report') update Master_Settings set value='" + setvalue + "' where settings='Salary1 report' else insert into Master_Settings (settings,value) values('Salary1 report','" + setvalue + "')";
                int insert = d2.update_method_wo_parameter(strquery, "Text");
            }
            catch
            {
            }
            if (fpsalary.Sheets[0].RowCount - 1 > 0)
            {
                FarPoint.Web.Spread.TextCellType txt1 = new FarPoint.Web.Spread.TextCellType();
                fpsalary.Sheets[0].RowCount++;

                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Font.Bold = true;
                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Right;
                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Large;
                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Font.Bold = true;
                //  fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 1, 0, 1, 2);
                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Text = " Grand Total";
                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Right;
                fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 1, 0, 1, 14);
                string totalval = "0";
                for (int intColCtr = 13; intColCtr < fpsalary.Sheets[0].ColumnCount - 3; intColCtr++)
                {
                    if ((intColCtr != fpsalary.Sheets[0].ColumnCount - 2) && (intColCtr != 15) && (intColCtr != colheder - 1) && (intColCtr != colcount1 - 3))
                    {
                        IntMTotal = 0;
                        for (int IntRowCtr = 0; IntRowCtr < fpsalary.Sheets[0].RowCount - 1; IntRowCtr++)
                        {
                            if (Convert.ToString(fpsalary.Sheets[0].Cells[IntRowCtr, 0].Text) != "Total" && Convert.ToString(fpsalary.Sheets[0].Cells[IntRowCtr, 0].Text) != "Department Total")
                            {
                                IntMTemp = 0;

                                if (fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text != "-")
                                {
                                    if (fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text != "")
                                    {
                                        Double.TryParse(Convert.ToString(fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text), out IntMTotal);
                                    }
                                    else
                                    {
                                        IntMTemp = 0;
                                    }
                                }
                                else
                                {
                                    IntMTemp = 0;
                                }
                                IntMTotal = IntMTemp + IntMTotal;
                            }
                        }
                        if (intColCtr == colcount1 - 2)
                        {
                            totalval = IntMTotal.ToString();
                        }
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].Font.Size = FontUnit.Large;
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].Font.Bold = true;
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].HorizontalAlign = HorizontalAlign.Right;
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].Text = IntMTotal > 0 ? IntMTotal + "" : "-";
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].CellType = txt1;
                    }
                }
                if (Convert.ToDouble(totalval) > 0)
                {
                    fpsalary.Sheets[0].RowCount++;
                    string[] spvla = totalval.Split('.');
                    string words = "";
                    for (int sp = 0; sp <= spvla.GetUpperBound(0); sp++)
                    {
                        string setval = NumToText(Convert.ToInt32(spvla[sp].ToString()));
                        if (words == "")
                        {
                            words = setval;
                        }
                        else
                        {
                            words = words + " Rupees and " + setval + " Paise"; ;
                        }
                    }
                    words = words.ToUpper();
                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Text = words;
                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Font.Bold = true;
                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Large;
                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 1, 0, 1, fpsalary.Sheets[0].ColumnCount);
                }
            }
            for (int k = 0; k < fpsalary.Sheets[0].ColumnCount; k++)
            {
                fpsalary.Sheets[0].Columns[k].Locked = true;
            }
            fpsalary.SaveChanges();
            //DropDownListpage.Items.Clear();Hided by Manikandan 03/08/2013
            Double totalRows = 0;
            totalRows = Convert.ToInt32(fpsalary.Sheets[0].RowCount);
            //DropDownListpage.Items.Clear();Hided by Manikandan 03/08/2013
            if (totalRows >= 10)
            {
                fpsalary.Sheets[0].PageSize = Convert.ToInt32(totalRows);
                //start=======Hided by Manikandan 03/08/2013
                //for (int k = 0; k < Convert.ToInt32(totalRows); k = k + 10)
                //{
                //    //DropDownListpage.Items.Add((k + 10).ToString());
                //}
                // DropDownListpage.Items.Add("Others");
                //DropDownListpage.SelectedIndex = DropDownListpage.Items.Count - 2;

                //End==============================================

                //fpsalary.Height = 350;
                fpsalary.VerticalScrollBarPolicy = FarPoint.Web.Spread.ScrollBarPolicy.AsNeeded;
                fpsalary.HorizontalScrollBarPolicy = FarPoint.Web.Spread.ScrollBarPolicy.AsNeeded;

            }
            else if (totalRows == 0)
            {
                // DropDownListpage.Items.Add("0");
                //fpsalary.Height = 300;
            }
            else
            {
                fpsalary.Sheets[0].PageSize = Convert.ToInt32(totalRows);
                //DropDownListpage.Items.Add(fpsalary.Sheets[0].PageSize.ToString());
                //fpsalary.Height = 75 + (75 * Convert.ToInt32(totalRows));
            }
            fpsalary.Height = 300 + (fpsalary.Sheets[0].RowCount * 20);


            Session["totalPages"] = (int)Math.Ceiling(totalRows / fpsalary.Sheets[0].PageSize);
            // Buttontotal.Text = "Records : " + totalRows + "          Pages : " + Session["totalPages"];
        }
        catch (Exception ex)
        {
            lblnorec.Visible = true;
            lblnorec.Text = ex.ToString();
        }
    }

    public int getmaxdays(int mno, int year)
    {

        int maxdays = 0;
        if ((mno == 2) && (year % 4 == 0))
        {
            maxdays = 29;
            return maxdays;
        }


        else if ((mno == 1) || (mno == 3) || (mno == 5) || (mno == 7) || (mno == 8) || (mno == 10) || (mno == 12))
        {
            maxdays = 31;
            return maxdays;
        }
        else if ((mno == 4) || (mno == 6) || (mno == 9) || (mno == 11))
        {
            maxdays = 30;
            return maxdays;
        }

        else if ((mno == 2) || (year % 4) != 0)
        {
            maxdays = 28;
            return maxdays;
        }
        return maxdays;
    }

    protected void cblallowance_SelectedIndexChanged(object sender, EventArgs e)
    {
        Pallowance.Focus();
        // cbldepttype.Focus();
        int allowancecount = 0;
        string value = "";
        string code = "";
        // LinkButtonallownce . Visible = true;

        for (int i = 0; i < cblallowance.Items.Count; i++)
        {
            if (cblallowance.Items[i].Selected == true)
            {
                value = cblallowance.Items[i].Text;
                code = cblallowance.Items[i].Value.ToString();
                allowancecount = allowancecount + 1;
                txtallowance.Text = "Allowance(" + allowancecount.ToString() + ")";
            }

        }

        if (allowancecount == 0)
            txtallowance.Text = "---Select---";
        else
        {

            //ib.Click += new ImageClickEventHandler(allowanceimage_Click);
        }
        allowancecnt = allowancecount;

    }

    protected void cbldeduction_SelectedIndexChanged(object sender, EventArgs e)
    {
        Pdeduction.Focus();
        // cbldepttype.Focus();
        int deductioncount = 0;
        string value = "";
        string code = "";


        for (int i = 0; i < cbldeduction.Items.Count; i++)
        {
            if (cbldeduction.Items[i].Selected == true)
            {
                value = cbldeduction.Items[i].Text;
                code = cbldeduction.Items[i].Value.ToString();
                deductioncount = deductioncount + 1;
                txtdeduction.Text = "Deduction(" + deductioncount.ToString() + ")";
            }

        }

        if (deductioncount == 0)
            txtdeduction.Text = "---Select---";
        else
        {
        }


        deductioncnt = deductioncount;
    }

    protected void Txtentryfrom_TextChanged(object sender, EventArgs e)
    {
        //string[] split13 = Txtentryfrom.Text.Split(new char[] { '/ ' });
        string[] split154 = Txtentryfrom.Text.Split(new Char[] { '/' });
        string today1 = split154[1].ToString() + "/" + split154[0].ToString() + "/" + split154[2].ToString();
        //Txtentryfrom.Text = today1;

        string datefrom6;
        DateTime stdate6;
        string today10 = "";
        datefrom6 = Txtentryfrom.Text;

        string datefrom1 = "";
        string dateto = "";
        string dateto5 = "";
        DateTime strdate7;
        DateTime dtaefrom2;
        dtaefrom2 = Convert.ToDateTime(today1);
        DateTime stdate1;
        datefrom1 = Txtentryfrom.Text;
        //stdate1= dtaefrom2.AddDays(30);
        // datefrom1 = stdate1.Date.ToShortDateString();
        string[] split14 = datefrom1.Split(new Char[] { '/' });
        today10 = split14[1].ToString() + "/" + split14[0].ToString() + "/" + split14[2].ToString();
        stdate1 = Convert.ToDateTime(today10);
        //stdate6 = stdate1.AddDays (29);
        stdate6 = stdate1.AddMonths(1);
        strdate7 = stdate6.AddDays(-1);
        dateto = strdate7.ToString();
        string[] split13 = dateto.Split(new char[] { ' ' });
        string[] split22 = split13[0].Split(new Char[] { '/' });
        dateto5 = split22[1].ToString() + "/" + split22[0].ToString() + "/" + split22[2].ToString();
        Txtentryto.Text = dateto5.ToString();

    }

    public void func_format2()//'----------------------------new
    {
        //lblpages.Visible = true;//Hided by Manikandan 03/08/2013
        //ddlpage.Visible = true;
        try
        {
            fpsalary.Sheets[0].SheetName = " ";
            //lblexceedpage.Visible = false;//Hided by Manikandan 03/08/2013
            fpsalary.Sheets[0].AutoPostBack = false;
            fpsalary.Visible = false;
            btnprintmaster.Visible = false;
            Button3.Visible = false;
            btnprintmaster.Visible = false;
            Printcontrol.Visible = false;
            GridPrintmaster.Visible = false;
            emailpanel.Visible = false;
            //txtsms.Visible = true;
            btnsendsms.Visible = false;
            fpsalary.Visible = true;

            btnprintmaster.Visible = true;
            Button3.Visible = true;//Added by Manikandan 01/08/2013
            btnprintmaster.Visible = false;
            Printcontrol.Visible = false;
            GridPrintmaster.Visible = false;
            fpsalary.Sheets[0].ColumnCount = 0;
            fpsalary.Sheets[0].RowCount = 0;
            fpsalary.Sheets[0].ColumnCount = 12;
            fpsalary.CommandBar.Visible = true;

            //start==========Hided by Manikandan 03/08/2013
            //Buttontotal.Visible = true;
            //DropDownListpage.Visible = true;
            //TextBoxpage.Visible = true;
            //lblrecord.Visible = true;
            //lblrecord.Visible = true;
            //lblpage.Visible = true;
            //End==============================

            lblnorec.Visible = false;
            // fpsalary.Sheets[0].FrozenColumnCount = 4;   
            fpsalary.Sheets[0].PageSize = 11;
            fpsalary.Pager.Position = FarPoint.Web.Spread.PagerPosition.Bottom;
            fpsalary.Pager.Mode = FarPoint.Web.Spread.PagerMode.Both;
            fpsalary.Pager.Align = HorizontalAlign.Right;
            // fpsalary.Sheets[0].SheetCorner.Cells[6, 0].Text = "S.No";
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].Font.Name = "Book Antiqua";
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].Font.Bold = true;
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].Font.Size = FontUnit.Large;
            darkstyle.Font.Bold = true;
            darkstyle.Font.Name = "Book Antiqua";
            darkstyle.Font.Size = FontUnit.Medium;
            darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
            darkstyle.ForeColor = Color.Black;
            darkstyle.HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.DefaultStyle = darkstyle;
            fpsalary.Pager.Font.Bold = true;
            fpsalary.Pager.Font.Name = "Arial";
            fpsalary.Pager.ForeColor = Color.DarkGreen;
            fpsalary.Pager.BackColor = Color.AliceBlue;
            fpsalary.Pager.PageCount = 5;
            fpsalary.Sheets[0].ColumnCount = 14;
            fpsalary.Sheets[0].SetColumnWidth(1, 200);
            fpsalary.Width = 1700;
            fpsalary.Sheets[0].SetColumnWidth(0, 50);
            fpsalary.Sheets[0].SetColumnWidth(1, 50);
            fpsalary.Sheets[0].SetColumnWidth(2, 300);
            fpsalary.CommandBar.Visible = false;
            //fpsalary.Sheets[0].SetColumnWidth(4, 150);
            //fpsalary.Sheets[0].SetColumnWidth(5, 150);
            //fpsalary.Sheets[0].SetColumnWidth(6, 150);

            /////////////////s.No///////////////////
            fpsalary.Sheets[0].SheetCorner.Columns[0].Visible = false;

            ////////////////////////////////////////

            fpsalary.Sheets[0].SheetCorner.RowCount = 3;
            //fpsalary.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";//===================

            //fpsalary.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;//=================


            ////check box button add
            //  fpsalary.Sheets[0].ColumnCount = FpEntry.Sheets[0].ColumnCount + 1;

            //=====================================================
            //fpsalary.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
            //fpsalary.Sheets[0].Columns[0, 1].Width = 50;
            //=====================================================

            FarPoint.Web.Spread.CheckBoxCellType chkcell = new FarPoint.Web.Spread.CheckBoxCellType();

            Dictionary<string, Double> hatco = new Dictionary<string, Double>();
            Dictionary<string, Double> hatbf = new Dictionary<string, Double>();
            hatbf.Clear();
            hatco.Clear();

            string datefrom;
            string dateto;
            string date1;
            string date2;


            fpsalary.Visible = true;
            //Start=====Added by Manikandan 01/08/2013        
            btnprintmaster.Visible = true;//Added by Manikandan 01/08/2013
            btnprintmaster.Visible = false;
            Button3.Visible = false;
            Printcontrol.Visible = false;
            GridPrintmaster.Visible = false;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
            //End=======

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Staff Name, Dept Acronym, Design Acronym";
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 2, 3, 1);
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].SetColumnMerge(2, FarPoint.Web.Spread.Model.MergePolicy.Always);
            fpsalary.Sheets[0].SetColumnMerge(0, FarPoint.Web.Spread.Model.MergePolicy.Always);
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;

            //'-----------------------------------------------new
            fpsalary.Sheets[0].ColumnHeader.Cells[2, 2].Text = "Design Acronym";

            fpsalary.Sheets[0].ColumnHeader.Cells[1, 2].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[1, 2].Text = "Dept Acronym";

            fpsalary.Sheets[0].ColumnHeader.Cells[2, 2].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.Cells[2, 5].Text = "Dept Acronym";

            fpsalary.Sheets[0].ColumnHeader.Cells[2, 5].HorizontalAlign = HorizontalAlign.Center;
            //  fpsalary.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Dept Acronym";
            fpsalary.Sheets[0].ColumnHeader.Cells[2, 6].Text = "Design Acronym";
            fpsalary.Sheets[0].ColumnHeader.Cells[2, 6].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[2, 7].Text = "Category";
            fpsalary.Sheets[0].ColumnHeader.Cells[2, 7].HorizontalAlign = HorizontalAlign.Center;


            fpsalary.Sheets[0].ColumnHeader.Cells[0, 13].Text = "Basic Pay";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 13].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[1, 13].Text = "Grade Pay";
            fpsalary.Sheets[0].ColumnHeader.Cells[1, 13].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(1, 13, 2, 1);

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 8].Text = "Date of Joining ";

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 8].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 9].Text = "LOP Days";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 9].HorizontalAlign = HorizontalAlign.Center;


            fpsalary.Sheets[0].ColumnHeader.Cells[0, 10].Text = "Previous Month LOP Days";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 11].Text = "Current Month LOP Days";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 12].Text = "LOP Date(s) ";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 12].HorizontalAlign = HorizontalAlign.Center;

            hatbf.Add("Pay Band", 0);// added by sridhar 18 sep 2014
            hatbf.Add("Basic Pay", 0);
            hatbf.Add("Grade Pay", 0);
            hatco.Add("Pay Band", 0);// added by sridhar 18 sep 2014
            hatco.Add("Basic Pay", 0);
            hatco.Add("Grade Pay", 0);

            fpsalary.ActiveSheetView.Columns[0].Font.Name = "Book Antiqua";
            fpsalary.ActiveSheetView.Columns[1].Font.Name = "Book Antiqua";
            // fpsalary.ActiveSheetView.Columns[1].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[1].Font.Name = "Book Antiqua";
            // fpsalary.ActiveSheetView.Columns[2].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[2].Font.Name = "Book Antiqua";
            // fpsalary.ActiveSheetView.Columns[3].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[3].Font.Name = "Book Antiqua";
            //fpsalary.ActiveSheetView.Columns[4].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[4].Font.Name = "Book Antiqua";
            // fpsalary.ActiveSheetView.Columns[5].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[5].Font.Name = "Book Antiqua";
            // fpsalary.ActiveSheetView.Columns[6].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[6].Font.Name = "Book Antiqua";
            // fpsalary.ActiveSheetView.Columns[7].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[7].Font.Name = "Book Antiqua";
            // fpsalary.ActiveSheetView.Columns[8].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[8].Font.Name = "Book Antiqua";
            // fpsalary.ActiveSheetView.Columns[9].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[9].Font.Name = "Book Antiqua";
            // fpsalary.ActiveSheetView.Columns[10].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[10].Font.Name = "Book Antiqua";
            // fpsalary.ActiveSheetView.Columns[11].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[11].Font.Name = "Book Antiqua";
            // fpsalary.ActiveSheetView.Columns[12].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[12].Font.Name = "Book Antiqua";
            // fpsalary.ActiveSheetView.Columns[13].Font.Size = FontUnit.Large;
            fpsalary.ActiveSheetView.Columns[13].Font.Name = "Book Antiqua";

            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 3, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 3, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 9, 3, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 10, 3, 1);

            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 8, 3, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 11, 3, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 12, 3, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 5, 3, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 4, 3, 1);


            //CalculateTotalPages();//Hided by Manikandan 03/08/2013
            int colcount1;
            int coldivide = 0;
            colcount1 = 14;
            int sa = 0;
            sql1 = "select * from incentives_master where college_code=" + Session["collegecode"] + "";
            con1.Open();
            SqlCommand cmd2 = new SqlCommand(sql1, con1);
            SqlDataReader drrow;
            drrow = cmd2.ExecuteReader();
            while (drrow.Read())
            {
                btnexcel.Visible = true;
                txtexcel.Visible = true;
                lblexcel.Visible = true;
                {
                    string allowncweshead;

                    string detuctionheader;
                    allowncweshead = drrow["allowances"].ToString();
                    string[] allown2;
                    int getval;
                    if (allowncweshead != "")//added by srinath 5/1/13
                    {
                        allown2 = allowncweshead.Split(';');
                        getval = allown2.GetUpperBound(0);
                        //'-------------------------------------new
                        getval = 0;
                        for (int t = 0; t < cblallowance.Items.Count; t++)
                        {
                            if (cblallowance.Items[t].Selected == true)
                            {
                                getval = getval + 1;
                            }
                        }
                        coldivide = getval / 2;
                        if (getval % 2 > 0)
                        {
                            coldivide = coldivide + 1;
                        }
                        fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + coldivide;//''''new getval
                        colcount1 = 13;
                        if (colcount1 > fpsalary.Sheets[0].ColumnCount - 1)
                        {
                            colcount1 = fpsalary.Sheets[0].ColumnCount - 1;
                        }
                        //    fpsalary.Sheets[0].ColumnHeader.Cells[6, colcount1].Text = "Allowances";
                        fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1].HorizontalAlign = HorizontalAlign.Center;
                        //     fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(6, colcount1, 1, coldivide);
                        int itemcount = 0;
                        int count = 0;
                        string strallowan;
                        count = allown2.GetUpperBound(0);
                        if (coldivide > 0)
                        {
                            //fpsalary.Sheets[0].ColumnHeader.Cells[0, 14].Text = "Allowance";
                            fpsalary.Sheets[0].ColumnHeader.Cells[0, 14].Text = "Earning";
                            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 14, 1, coldivide);
                            fpsalary.ActiveSheetView.Columns[14].Font.Size = FontUnit.Large;
                            fpsalary.ActiveSheetView.Columns[14].Font.Name = "Book Antiqua";
                            fpsalary.Sheets[0].ColumnHeader.Cells[0, 14].HorizontalAlign = HorizontalAlign.Center;
                        }
                        for (int i = 1; i <= coldivide; i++)//'''''new i < allown2.GetUpperBound(0); 
                        {
                            for (int j = 1; j < 3; j++)
                            {
                                if (sa < (count))
                                {
                                    if (cblallowance.Items[sa].Selected == true)
                                    {
                                        fpsalary.Sheets[0].Columns[colcount1 + i].Visible = true;
                                        fpsalary.Sheets[0].Columns[colcount1 + i].HorizontalAlign = HorizontalAlign.Center;
                                        fpsalary.Sheets[0].Columns[colcount1 + i].Visible = true;
                                        string allo2 = "";
                                        allo2 = allown2[sa];
                                        string[] splitallo3 = allo2.Split('\\');
                                        allo2 = splitallo3[0];
                                        //fpsalary.Sheets[0].ColumnHeader.Cells[j, colcount1 + i].Locked = true;
                                        fpsalary.Sheets[0].ColumnHeader.Cells[j, colcount1 + i].Text = allo2.ToString();

                                        if (!hatbf.ContainsKey(allo2))
                                        {
                                            hatbf.Add(allo2, 0);
                                            hatco.Add(allo2, 0);
                                        }
                                        //fpsalary.Sheets[0].ColumnHeader.Cells[1, colcount1 + i].Text = allown2[i];
                                        fpsalary.ActiveSheetView.Columns[colcount1 + i].Font.Size = FontUnit.Large;
                                        fpsalary.ActiveSheetView.Columns[colcount1 + i].Font.Name = "Book Antiqua";
                                        fpsalary.Sheets[0].ColumnHeader.Cells[j, colcount1 + i].HorizontalAlign = HorizontalAlign.Center;
                                        if (coldivide == i)
                                        {
                                            if (getval % 2 > 0)
                                            {
                                                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(j, colcount1 + i, 2, 1);
                                            }
                                        }

                                        sa++;
                                    }
                                    else
                                    {
                                        sa++;
                                        j--;

                                        fpsalary.Sheets[0].Columns[colcount1 + i].HorizontalAlign = HorizontalAlign.Center;
                                    }

                                }
                            }

                        }
                    }
                    fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 1;
                    colheder = fpsalary.Sheets[0].ColumnCount;

                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colheder - 1].Text = "Gross Pay";
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colheder - 1, 3, 1);
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colheder - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].Columns[colheder - 1].VerticalAlign = VerticalAlign.Middle;

                    hatbf.Add("Gross Pay", 0);
                    hatco.Add("Gross Pay", 0);

                    fpsalary.ActiveSheetView.Columns[colheder - 1].Font.Size = FontUnit.Large;
                    fpsalary.ActiveSheetView.Columns[colheder - 1].Font.Name = "Book Antiqua";


                    detuctionheader = drrow["deductions"].ToString();
                    string[] deduct2;
                    int getval2;
                    deduct2 = detuctionheader.Split(';');
                    getval2 = deduct2.GetUpperBound(0);
                    getval2 = 0;
                    for (int t = 0; t < cbldeduction.Items.Count; t++)
                    {
                        if (cbldeduction.Items[t].Selected == true)
                        {
                            getval2 = getval2 + 1;
                        }
                    }
                    double deducount = Convert.ToDouble(getval2) / 2;
                    // deducount = Math.Round(deducount);

                    deducount = Math.Round(deducount, MidpointRounding.AwayFromZero);

                    col = fpsalary.Sheets[0].ColumnCount;
                    int dasa = 0;
                    // col = col + 1;
                    fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + Convert.ToInt32(deducount);
                    colcount1 = fpsalary.Sheets[0].ColumnCount + 1;
                    // fpsalary.Sheets[0].ColumnHeader.Cells[6, col].Text = "Deductions";
                    // fpsalary.Sheets[0].ColumnHeader.Cells[6, colheder - 1].Text = "Deductions";

                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colheder - 1].HorizontalAlign = HorizontalAlign.Center;
                    // fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(6, col - 1, 1, getval2 + 1);

                    //old==================================
                    //Edited by sankar july'2013
                    if (deducount > 0)
                    {
                        fpsalary.Sheets[0].ColumnHeader.Cells[0, col].Text = "Deduction";
                        fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, col, 1, Convert.ToInt32(deducount));
                        fpsalary.ActiveSheetView.Columns[col].Font.Size = FontUnit.Large;
                        fpsalary.ActiveSheetView.Columns[col].Font.Name = "Book Antiqua";
                        fpsalary.Sheets[0].ColumnHeader.Cells[0, col].HorizontalAlign = HorizontalAlign.Center;
                    }
                    for (int i = 0; i < deducount; i++)
                    {
                        for (int da = 1; da < 3; da++)
                        {
                            if (dasa < getval2)
                            {
                                if (cbldeduction.Items[i].Selected == true)
                                {
                                    fpsalary.Sheets[0].Columns[col + i].Visible = true;

                                    string[] deduct2spilt = deduct2[dasa].Split(new char[] { '\\' });//modified by srinath 31/1/13
                                    string deduction = deduct2spilt[0].ToString();

                                    fpsalary.Sheets[0].ColumnHeader.Cells[da, col + i].Text = deduction;

                                    if (!hatbf.ContainsKey(deduction))
                                    {
                                        hatbf.Add(deduction, 0);
                                        hatco.Add(deduction, 0);
                                    }
                                    fpsalary.Sheets[0].ColumnHeader.Cells[da, col].HorizontalAlign = HorizontalAlign.Center;
                                    fpsalary.ActiveSheetView.Columns[da, col + i].Font.Size = FontUnit.Large;
                                    fpsalary.ActiveSheetView.Columns[da, col + i].Font.Name = "Book Antiqua";
                                    if (i == deducount - 1)
                                    {
                                        if (getval2 % 2 > 0)
                                        {
                                            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(da, col + i, 2, 1);
                                        }
                                    }
                                    //fpsalary.Sheets[0].ColumnHeader.Rows[col+i].Font.Bold = true;
                                    //fpsalary.Sheets[0].ColumnHeader.Rows[col + i].Font.Size = FontUnit.Large;
                                    //  fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(1, col + i, 2, 1);
                                    dasa++;

                                }
                                else
                                {
                                    //fpsalary.Sheets[0].Columns[col + i].Visible = false;
                                    fpsalary.Sheets[0].ColumnHeader.Cells[da, col + i].Text = deduct2[dasa];
                                    fpsalary.Sheets[0].ColumnHeader.Cells[da, col + i].HorizontalAlign = HorizontalAlign.Center;
                                }
                            }
                        }
                    }
                    fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 3;
                    colcount1 = fpsalary.Sheets[0].ColumnCount;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 3].Text = "Total Deduction";
                    fpsalary.ActiveSheetView.Columns[colcount1 - 3].Font.Size = FontUnit.Large;
                    fpsalary.ActiveSheetView.Columns[colcount1 - 3].Font.Name = "Book Antiqua";

                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 3].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount1 - 3, 3, 1);


                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 2].Text = "Net Pay";
                    fpsalary.ActiveSheetView.Columns[colcount1 - 2].Font.Size = FontUnit.Large;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 2].Column.Width = 200;
                    fpsalary.ActiveSheetView.Columns[colcount1 - 2].Font.Name = "Book Antiqua";

                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 2].HorizontalAlign = HorizontalAlign.Center; ;
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount1 - 2, 3, 1);
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 1].Text = "Signature";
                    fpsalary.ActiveSheetView.Columns[colcount1 - 1].Font.Size = FontUnit.Large;
                    fpsalary.ActiveSheetView.Columns[colcount1 - 1].Font.Name = "Book Antiqua";

                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount1 - 1, 3, 1);

                    hatbf.Add("Total Deduction", 0);
                    hatbf.Add("Net Pay", 0);
                    hatco.Add("Total Deduction", 0);
                    hatco.Add("Net Pay", 0);
                }
            }


            for (int i = 0; i < fpsalary.Sheets[0].RowCount; i++)
            {
                if (fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 1].Text.ToString().Trim() == "")
                {
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 1].Text = "                                                                                                                                                                                                                                                 ";
                }
            }
            //////////////////////////////////////////////////////////////////////////
            FarPoint.Web.Spread.StyleInfo style = new FarPoint.Web.Spread.StyleInfo();
            style.Font.Size = 10;
            style.Font.Bold = true;
            fpsalary.Sheets[0].SheetCornerStyle = new FarPoint.Web.Spread.StyleInfo(style);
            //fpsalary.Sheets[0].ColumnHeader.DefaultStyle = new FarPoint.Web.Spread.StyleInfo(style);
            fpsalary.Sheets[0].AllowTableCorner = true;
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].Text = "S.No";
            //   fpsalary.Sheets[0].SheetCorner.Cells[6, 0].BackColor = Color.AliceBlue;
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].Border.BorderColorRight = Color.White;
            fpsalary.Sheets[0].SheetCornerSpanModel.Add(0, 0, 3, 1);

            int head = 1;
            int headerset = 1;
            if (cblsearch.Items[14].Selected == true)
            {
                //headerset = headerset + 1;
                //head = 1;
            }

            else
            {

                headerset = headerset + 1;
                head = 1;
            }

            // fpsalary.Sheets[0].ColumnHeader.Cells[0, headerset].Text = coll_name;
            int spancol = headerset + head;

            //modified by senthil(25.06.15)
            sql1 = "select distinct CONVERT(VARCHAR(10),from_date,103) as from_date,convert(VARCHAR(10),to_date,103) as to_date from hrpaymonths where paymonthnum='" + cblmonth.SelectedItem.Value.ToString() + "'and PayYear='" + ddlyear2.SelectedItem.Text.ToString() + "' and college_Code=" + Session["collegecode"].ToString() + ""; // Added by jairam 13-11-2014 
            SqlDataAdapter da1 = new SqlDataAdapter(sql1, con);
            DataSet ds1 = new DataSet();
            da1.Fill(ds1);
            string fromdate = "";
            string todate = "";

            if (ds1.Tables[0].Rows.Count > 0)
            {
                fromdate = ds1.Tables[0].Rows[0]["from_date"].ToString();
                Txtentryfrom.Text = fromdate;
                todate = ds1.Tables[0].Rows[0]["to_date"].ToString();
                Txtentryto.Text = todate;

            }


            date1 = Txtentryfrom.Text.ToString();
            string[] split = date1.Split(new Char[] { '/' });
            datefrom = split[1].ToString() + "/" + split[0].ToString() + "/" + split[2].ToString();
            date2 = Txtentryto.Text.ToString();
            string[] split1 = date2.Split(new Char[] { '/' });
            dateto = split1[1].ToString() + "/" + split1[0].ToString() + "/" + split1[2].ToString();



            fpsalary.Sheets[0].SetColumnWidth(fpsalary.Sheets[0].ColumnCount - 1, 100);




            fpsalary.Sheets[0].ColumnHeader.Rows[0].Font.Bold = true;
            fpsalary.Sheets[0].ColumnHeader.Rows[0].Font.Size = FontUnit.Large;



            fpsalary.Sheets[0].ColumnHeader.Rows[1].Font.Bold = true;
            fpsalary.Sheets[0].ColumnHeader.Rows[1].Font.Size = FontUnit.Large;
            fpsalary.Sheets[0].ColumnHeader.Rows[2].Font.Bold = true;
            fpsalary.Sheets[0].ColumnHeader.Rows[2].Font.Size = FontUnit.Large;


            fpsalary.Sheets[0].ColumnHeader.Rows[1].Font.Bold = true;
            fpsalary.Sheets[0].ColumnHeader.Rows[1].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.Rows[2].HorizontalAlign = HorizontalAlign.Center;

            //fpsalary.Sheets[0].ColumnHeader.Rows[0].BackColor = Color.FromArgb(214, 235, 255);
            //fpsalary.Sheets[0].ColumnHeader.Rows[1].BackColor = Color.FromArgb(214, 235, 255);
            //fpsalary.Sheets[0].ColumnHeader.Rows[2].BackColor = Color.FromArgb(214, 235, 255);

            fpsalary.Sheets[0].ColumnHeader.Rows[0].Font.Bold = true;
            fpsalary.Sheets[0].ColumnHeader.Rows[0].Font.Size = FontUnit.Large;

            fpsalary.Sheets[0].ColumnHeader.Rows[1].Font.Bold = true;
            fpsalary.Sheets[0].ColumnHeader.Rows[1].Font.Size = FontUnit.Large;

            fpsalary.Sheets[0].ColumnHeader.Rows[1].Border.BorderColorBottom = Color.Black;
            fpsalary.Sheets[0].ColumnHeader.Rows[2].Font.Bold = true;
            fpsalary.Sheets[0].ColumnHeader.Rows[2].Font.Size = FontUnit.Large;
            goto l10;
        ////////////////////////////////////collname/.///////////////////////

  //l10: sql = " SELECT monthlypay.*,desig_master.priority,dept_acronym,staff_name,bankaccount,pfnumber,CONVERT(VARCHAR(10),staffmaster.join_date,103) as joindate,monthlypay.pay_band,monthlypay.grade_pay,desig_master.desig_acronym,monthlypay.LOP,hrdept_master.dept_name as deptname,desig_master.desig_name as designame,staffmaster.resign from monthlypay,desig_master,stafftrans,staffmaster,hrdept_master Where hrdept_master.dept_code=stafftrans.dept_code and stafftrans.staff_code=monthlypay.staff_code and stafftrans.latestrec=1 and desig_master.desig_code=stafftrans.desig_code and monthlypay.fdate ='" + datefrom + "' and monthlypay.tdate ='" + dateto + "'and monthlypay.college_code=" + Session["collegecode"] + " and desig_master.collegecode=" + Session["collegecode"] + " and staffmaster.staff_code=monthlypay.staff_code and ((staffmaster.resign=0 or staffmaster.settled=0) or(staffmaster.resign=1 and staffmaster.relieve_date>='" + dateto + "') or (staffmaster.resign=1 and staffmaster.relieve_date between '" + datefrom + "' and '" + dateto + "'))  "; // added by srinath 3/1/2015
        l10: sql = " SELECT monthlypay.*,desig_master.priority,dept_acronym,staff_name,bankaccount,pfnumber,CONVERT(VARCHAR(10),staffmaster.join_date,103) as joindate,monthlypay.pay_band,monthlypay.grade_pay,desig_master.desig_acronym,monthlypay.LOP,hrdept_master.dept_name as deptname,desig_master.desig_name as designame,staffmaster.resign from monthlypay,desig_master,stafftrans,staffmaster,hrdept_master Where hrdept_master.dept_code=stafftrans.dept_code and stafftrans.staff_code=monthlypay.staff_code and stafftrans.latestrec=1 and desig_master.desig_code=stafftrans.desig_code and monthlypay.PayYear='" + ddlyear2.SelectedValue.ToString() + "' and monthlypay.PayMonth='" + cblmonth.SelectedValue.ToString() + "' and monthlypay.college_code=" + Session["collegecode"] + " and desig_master.collegecode=" + Session["collegecode"] + " and staffmaster.staff_code=monthlypay.staff_code and ((staffmaster.resign=0 or staffmaster.settled=0) or(staffmaster.resign=1 and staffmaster.relieve_date>='" + dateto + "') or (staffmaster.resign=1 and staffmaster.relieve_date between '" + datefrom + "' and '" + dateto + "'))  "; // added by srinath 3/1/2015

            if (tbseattype.Text != "---Select---")
            {
                int itemcount = 0;


                for (itemcount = 0; itemcount < cbldepttype.Items.Count; itemcount++)
                {
                    if (cbldepttype.Items[itemcount].Selected == true)
                    {
                        if (strdept == "")
                            strdept = "'" + cbldepttype.Items[itemcount].Value.ToString() + "'";
                        else
                            strdept = strdept + "," + "'" + cbldepttype.Items[itemcount].Value.ToString() + "'";
                    }
                }


                if (strdept != "")
                {
                    strdept = " in(" + strdept + ")";
                }
                sql = sql + " and hrdept_master.dept_code " + strdept + "";
            }
            if (tbblood.Text != "---Select---")
            {


                int itemcount1 = 0;

                for (itemcount1 = 0; itemcount1 < cblcategory.Items.Count; itemcount1++)
                {
                    if (cblcategory.Items[itemcount1].Selected == true)
                    {
                        if (strcategory == "")
                            strcategory = "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                        else
                            strcategory = strcategory + "," + "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                    }
                }


                if (strcategory != "")
                {
                    strcategory = " in (" + strcategory + ")";
                }
                sql = sql + "  and stafftrans.category_code" + strcategory + "";
            }

            if (ddlpfcategory.SelectedItem.Text != "All")
            {
                sql = sql + " and isnull(staffmaster.is_pf,0)=" + ddlpfcategory.SelectedItem.Value.ToString() + "";
            }

            if (cb_hold.Checked == true)//delsi 1002
            {
                sql = sql + " and isnull(monthlypay.staffholdSet,'') in('','1','2')";
            }
            else
            {
                sql = sql + " and isnull(monthlypay.staffholdSet,'') in('','2')";
            }
            //sql = sql + "order by stafftrans.stftype desc,hrdept_master.priority,desig_master.priority,staffmaster.join_date";
            if (ddlorder.SelectedItem.Text.ToString() == "Priority")
            {
                sql = sql + " order by hrdept_master.priority,desig_master.priority,hrdept_master.dept_name,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code ";//Modified By Srinath 28/3/2014
            }
            //*************Modified By Subburaj 16.08.2014************//
            else if (ddlorder.SelectedItem.Text.ToString() == "Print Priority-1")
            {
                sql = sql + " order by hrdept_master.priority, desig_Master.priority,  staffmaster.PrintPriority,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code";
            }
            else if (ddlorder.SelectedItem.Text.ToString() == "Print Priority-2")
            {
                sql = sql + " order by hrdept_master.priority1,  desig_master.print_pri, staffmaster.PrintPriority,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code";
            }

                //******************************end**************************//
            else if (ddlorder.SelectedItem.Text.ToString() == "Account No")
            {
                sql = sql + " order by case when staffmaster.bankaccount is null then 1 else 0 end,len(staffmaster.bankaccount), staffmaster.bankaccount";
            }
            else if (ddlorder.SelectedItem.Text.ToString() == "Staff Wise Priority")// added by sridhar 22 sep 2014
            {
                sql = sql + "order by isnull(staffmaster.PrintPriority,0) desc";
            }
            else
            {
                sql = sql + " order by hrdept_master.dept_name,len(staffmaster.staff_code),staffmaster.staff_code";//Modified By Srinath 28/3/2014
            }
            string date3 = Txtentryfrom.Text.ToString();
            string date4 = Txtentryto.Text.ToString();
            string[] spf = date3.Split('/');
            string[] spt = date4.Split('/');
            int fmonv = Convert.ToInt16(spf[1].ToString());
            int ftmonv = Convert.ToInt16(spt[1].ToString());
            sql = sql + "; select * from staff_attnd where mon_year between '" + fmonv + '/' + spf[2] + "' and '" + ftmonv + '/' + spt[2] + "'";
            sql = sql + "  select shortname  from leave_category where status ='comp' and college_code =" + Session["collegecode"] + "";

            string query = " select allowances,deductions,staff_code from stafftrans";
            DataSet all_dedDs = new DataSet();
            all_dedDs = d2.select_method_wo_parameter(query, "text");

            int rowstr;
            DataSet dscnt = d2.select_method_wo_parameter(sql, "Text");
            DataView dvdet = new DataView();

            Boolean flag = false;
            FarPoint.Web.Spread.CheckBoxCellType chkcell1 = new FarPoint.Web.Spread.CheckBoxCellType();
            chkcell1.AutoPostBack = true;
            fpsalary.Sheets[0].RowCount = fpsalary.Sheets[0].RowCount + 2;
            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 1].CellType = chkcell1;
            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 1].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 1].VerticalAlign = VerticalAlign.Middle;
            fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 2, 1, 2, 1);
            fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 2, 0, 2, 1);
            int colcount;
            colcount = 13;
            int total_row_count = 0;
            int sno = 0;
            int staffcount = 0;
            int no_of_staff = Convert.ToInt32(txt_staff.Text);
            ArrayList addleave = new ArrayList();
            if (dscnt.Tables[0].Rows.Count > 0)
            {
                if (dscnt.Tables[2].Rows.Count > 0)
                {
                    for (int leave = 0; leave < dscnt.Tables[2].Rows.Count; leave++)
                    {
                        addleave.Add(dscnt.Tables[2].Rows[leave]["shortname"].ToString());
                    }
                }


                for (int stcnt = 0; stcnt < dscnt.Tables[0].Rows.Count; stcnt++)
                {

                    //if ((flag == false) && (staffcount == 0))
                    //{
                    //    int rwcnt = fpsalary.Sheets[0].RowCount++;

                    //}
                    if ((flag == true) && (staffcount == 0))
                    {
                        //int rwcnt = fpsalary.Sheets[0].RowCount++;
                        //fpsalary.Sheets[0].Rows[fpsalary.Sheets[0].RowCount - 1].Font.Bold = true;
                        //fpsalary.Sheets[0].Rows[fpsalary.Sheets[0].RowCount - 1].Font.Size = FontUnit.Large;
                        //fpsalary.Sheets[0].Rows[fpsalary.Sheets[0].RowCount - 1].HorizontalAlign = HorizontalAlign.Right;
                        //fpsalary.Sheets[0].AddSpanCell(fpsalary.Sheets[0].RowCount - 1, 0, 1, 3);
                        //fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Text = "B/F";
                        //fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Right;
                        //foreach (DictionaryEntry parameter in hsamount)
                        //{

                        //    int strpar = Convert.ToInt32(parameter.Key);
                        //    for (int colcomnt = 13; colcomnt < fpsalary.Sheets[0].ColumnCount - 1; colcomnt++)
                        //    {
                        //        if (colcomnt == strpar)
                        //        {
                        //            // string[] CatHead = strpar.Split(new char[] { '/' });



                        //            fpsalary.Sheets[0].Cells[rwcnt, colcomnt].Text = parameter.Value.ToString();
                        //            fpsalary.Sheets[0].Cells[rwcnt, colcomnt].HorizontalAlign = HorizontalAlign.Right;
                        //            colcomnt = fpsalary.Sheets[0].ColumnCount;
                        //        }
                        //    }
                        //}
                        int rwcnt = fpsalary.Sheets[0].RowCount + 2;
                        fpsalary.Sheets[0].RowCount = fpsalary.Sheets[0].RowCount + 2;
                        fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 2, 0, 2, 13);
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Text = "B/F";
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Text = "B/F";
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Font.Bold = true;
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Font.Size = FontUnit.Large;
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].HorizontalAlign = HorizontalAlign.Right;
                        for (int gk = 0; gk <= 2; gk++)
                        {
                            for (int k = 13; k <= colcount1 - 1; k++)
                            {
                                int rowset = 0;
                                if (gk == 0)
                                {
                                    rowset = 2;
                                }
                                else
                                {
                                    rowset = 3 - gk;
                                }

                                string headval = fpsalary.Sheets[0].ColumnHeader.Cells[gk, k].Text.Trim();
                                if (headval.Trim() != "" && headval != null)
                                {
                                    if (hatbf.ContainsKey(headval))
                                    {
                                        if (headval == "Grade Pay")
                                        {
                                            rowset = 1;
                                        }
                                        string values = hatbf[headval].ToString();
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, k].Text = values.ToString();
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, k].Font.Bold = true;
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, k].Font.Size = FontUnit.Large;
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, k].HorizontalAlign = HorizontalAlign.Right;
                                    }
                                }
                            }
                        }

                    }
                    // if ((staffcount == 0)||(staffcount<=10))
                    //  {
                    if (staffcount < no_of_staff)
                    {
                        staffcount++;
                        //modified by srinath 28/4/2014
                        //  fpsalary.Sheets[0].RowCount += 3;//''''''new
                        fpsalary.Sheets[0].RowCount += 2;//''''''new
                        rowstr = Convert.ToInt32(fpsalary.Sheets[0].RowCount);
                        tn_format2.Visible = true;
                        // btnslip.Visible = true;
                        chkactual.Visible = true;
                        //string staffcode = "";
                        string staffname = "";

                        string joindate = "";

                        string dept = "";
                        string dept_acrronym = "";
                        string designation = "";
                        string allowance = "";
                        string deduction = "";
                        string basicpay = "";
                        string category = "";
                        string netadd = "";
                        string totalded = "";
                        string netpay = "";
                        string desig_acronym = "";
                        string design_acc = "";
                        string staffcode1 = "";
                        string BasicLOP, Baicpayarr = ""; ;
                        fpsalary.Sheets[0].SetColumnWidth(2, 300);
                        fpsalary.Sheets[0].SetColumnWidth(3, 150);
                        fpsalary.Sheets[0].SetColumnWidth(4, 150);
                        fpsalary.Sheets[0].SetColumnWidth(5, 100);
                        fpsalary.Sheets[0].SetColumnWidth(6, 150);
                        fpsalary.Sheets[0].SetColumnWidth(9, 50);
                        fpsalary.Sheets[0].SetColumnWidth(10, 75);
                        fpsalary.Sheets[0].SetColumnWidth(11, 75);
                        fpsalary.Sheets[0].SetColumnWidth(fpsalary.Sheets[0].ColumnCount - 1, 120);
                        string datefrom3;
                        int monthname1;
                        date3 = Txtentryfrom.Text.ToString();
                        string monthname2 = "";
                        int monthnamenum;
                        string yearto = "";
                        string monyearto = "";
                        string[] split5 = date3.Split(new Char[] { '/' });
                        staffcode1 = dscnt.Tables[0].Rows[stcnt]["staff_code"].ToString();
                        joindate = dscnt.Tables[0].Rows[stcnt]["joindate"].ToString();
                        //////////////////////////
                        fpsalary.Sheets[0].AddSpanCell(rowstr - 2, 1, 2, 1);
                        fpsalary.Sheets[0].AddSpanCell(rowstr - 2, 0, 2, 1);
                        string monyear;
                        int dayfrm = 0;
                        string dayto;
                        int daytonum;
                        int year3;

                        datefrom3 = split5[1].ToString() + "/" + split5[0].ToString() + "/" + split5[2].ToString();
                        year3 = Convert.ToInt16(split5[2]);
                        date4 = Txtentryto.Text.ToString();


                        string[] split6 = date4.Split(new Char[] { '/' });

                        string dateto4 = split6[1].ToString() + "/" + split6[0].ToString() + "/" + split6[2].ToString();

                        monthname2 = split6[0].ToString();
                        monthnamenum = Convert.ToInt32(monthname2.ToString());
                        yearto = split1[2].ToString();
                        ///////
                        int fromday = 0;
                        fromday = Convert.ToInt16(split6[0].ToString());
                        string mnmae = split5[1].ToString();
                        monthname1 = Convert.ToInt16(mnmae);
                        monthname2 = split1[1].ToString();
                        monthnamenum = Convert.ToInt16(monthname2);
                        string year = split5[2].ToString();

                        monyear = monthname1.ToString() + "/" + year;
                        monyearto = monthnamenum.ToString() + "/" + yearto;

                        string dayfrom;
                        int today = 0;
                        today = Convert.ToInt16(split6[0].ToString());

                        dayfrom = split5[0].ToString();
                        dayfrm = Convert.ToInt32(dayfrom);
                        dayto = split6[0].ToString();
                        daytonum = Convert.ToInt32(dayto);

                        double lopdaysmor = 0;
                        double lopdayseveg = 0;
                        double totlop = 0;
                        string date = "";
                        int maxdays = getmaxdays(monthname1, year3);


                        if (monthname1 == monthnamenum)  // Modity by jairam ************************** 10-12-2014 *********************
                        {
                            dscnt.Tables[1].DefaultView.RowFilter = "staff_code='" + staffcode1 + "' and mon_year='" + monyear + "'";
                            all_dedDs.Tables[0].DefaultView.RowFilter = "staff_code='" + staffcode1 + "'";
                            DataView dvstaffattn = dscnt.Tables[1].DefaultView;
                            if (dvstaffattn.Count > 0)
                            {
                                for (int day = dayfrm; dayfrm <= daytonum; dayfrm++)
                                {
                                    int boll4 = 0;
                                    int day5 = 0;
                                    day5 = 0 + dayfrm;

                                    //sql1 = "select * from staff_attnd where mon_year between '" + monyear + "' and '" + monyearto + "' and staff_code='" + staffcode1 + "'";
                                    //con1.Close();
                                    //con1.Open();
                                    //SqlCommand cmd100 = new SqlCommand(sql1, con1);
                                    //SqlDataReader dr100 = cmd100.ExecuteReader();
                                    //while (dr100.Read())
                                    //{
                                    // if (dr100.HasRows == true)

                                    int day6;
                                    string attnda = "";
                                    day6 = 3 + day5;
                                    // attnda = dr100[day6].ToString();
                                    attnda = dvstaffattn[0][day6].ToString();
                                    if (attnda != "")
                                    {
                                        string[] split100 = attnda.Split(new char[] { '-' });
                                        string mor = "";
                                        string eve = "";
                                        mor = split100[0].ToString();
                                        eve = split100[1].ToString();
                                        //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = leavetype[l].ToString();
                                        if ((mor == "A"))
                                        {
                                            //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = levatype + "(" + countmor++ + ")";
                                            lopdaysmor = lopdaysmor + 0.5;
                                            boll4 = 1;
                                            //  date = dayfrm + monyear + date;
                                        }
                                        else
                                        {
                                            if (addleave.Count > 0)
                                            {
                                                if (addleave.Contains(mor) == true)
                                                {
                                                    lopdaysmor = lopdaysmor + 0.5;
                                                    boll4 = 1;
                                                }
                                            }
                                        }
                                        if ((eve == "A"))
                                        {
                                            lopdayseveg = lopdayseveg + 0.5;
                                            boll4 = 1;

                                        }
                                        else
                                        {
                                            if (addleave.Count > 0)
                                            {
                                                if (addleave.Contains(eve) == true)
                                                {
                                                    lopdayseveg = lopdayseveg + 0.5;
                                                    boll4 = 1;
                                                }
                                            }
                                        }

                                        if (boll4 == 1)
                                        {
                                            if (date == "")
                                            {
                                                date = day5 + "/" + dayfrm;
                                            }
                                            else
                                            {
                                                date = date + "," + day5 + "/" + dayfrm;
                                            }

                                        }
                                        string[] lave = new string[15];

                                    }

                                }
                                // }

                            }
                            //totlop = lopdayseveg + lopdayseveg;
                            //fpsalary.Sheets[0].Columns[10].Visible = false;
                            //fpsalary.Sheets[0].Columns[11].Visible = false;
                            //fpsalary.Sheets[0].Columns[9].Visible = true;
                            //fpsalary.Sheets[0].Cells[rowstr - 1, 9].Text = totlop.ToString();
                            //fpsalary.Sheets[0].Cells[rowstr - 1, 9].HorizontalAlign = HorizontalAlign.Center;

                            ////totlop = lopdaysmor + lopdayseveg;
                            //fpsalary.Sheets[0].Cells[rowstr - 1, 9].Text = totlop.ToString();
                            //if (date != "")
                            //{
                            //    date = date.Substring(1, date.Length - 1);
                            //}
                            fpsalary.Sheets[0].Cells[rowstr - 1, 12].Text = date;
                            fpsalary.Sheets[0].Cells[rowstr - 1, 12].HorizontalAlign = HorizontalAlign.Left;
                        }
                        else
                        {

                            ///////
                            dscnt.Tables[1].DefaultView.RowFilter = "staff_code='" + staffcode1 + "' and mon_year='" + monyear + "'";
                            DataView dvstaffattn = dscnt.Tables[1].DefaultView;
                            if (dvstaffattn.Count > 0)
                            {
                                for (int day = dayfrm; dayfrm <= maxdays; dayfrm++)
                                {
                                    fpsalary.Sheets[0].Columns[10].Visible = true;
                                    fpsalary.Sheets[0].Columns[11].Visible = true;
                                    fpsalary.Sheets[0].Columns[9].Visible = false;
                                    int day5 = 0;
                                    day5 = 0 + dayfrm;

                                    //sql1 = "select * from staff_attnd where mon_year= '" + monyear + "' and staff_code='" + staffcode1 + "'";
                                    //con1.Close();
                                    //con1.Open();
                                    //SqlCommand cmd100 = new SqlCommand(sql1, con1);
                                    //SqlDataReader dr100 = cmd100.ExecuteReader();
                                    //while (dr100.Read())
                                    //{
                                    // if (dr100.HasRows == true)

                                    int bol = 0;
                                    int day6;
                                    string attnda = "";
                                    day6 = 3 + day5;
                                    // attnda = dr100[day6].ToString();
                                    attnda = dvstaffattn[0][day6].ToString();
                                    if (attnda != "")
                                    {
                                        string[] split100 = attnda.Split(new char[] { '-' });
                                        string mor = "";
                                        string eve = "";
                                        mor = split100[0].ToString();
                                        eve = split100[1].ToString();
                                        //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = leavetype[l].ToString();
                                        if ((mor == "A'"))
                                        {
                                            //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = levatype + "(" + countmor++ + ")";
                                            lopdaysmor = lopdaysmor + 0.5;
                                            //date = dayfrm + monyear + date;
                                            bol = 1;
                                        }
                                        else
                                        {
                                            if (addleave.Count > 0)
                                            {
                                                if (addleave.Contains(mor) == true)
                                                {
                                                    lopdaysmor = lopdaysmor + 0.5;
                                                    bol = 1;
                                                }
                                            }
                                        }
                                        if ((eve == "A"))
                                        {
                                            lopdayseveg = lopdayseveg + 0.5;
                                            // date = dayfrm + monyear + date;
                                            bol = 1;
                                        }
                                        else
                                        {
                                            if (addleave.Count > 0)
                                            {
                                                if (addleave.Contains(mor) == true)
                                                {
                                                    lopdayseveg = lopdayseveg + 0.5;
                                                    bol = 1;
                                                }
                                            }
                                        }
                                        if (bol == 1)
                                        {
                                            if (date == "")
                                            {
                                                date = day5 + "/" + monyear;
                                            }
                                            else
                                            {
                                                date = date + "," + day5 + "/" + monyear;
                                            }
                                        }
                                    }
                                }
                                //}
                                //totlop = lopdayseveg + lopdaysmor;
                                //fpsalary.Sheets[0].Cells[rowstr - 1, 10].Text = totlop.ToString();
                                //fpsalary.Sheets[0].Cells[rowstr - 1, 10].HorizontalAlign = HorizontalAlign.Center;

                            }
                            lopdayseveg = 0;
                            lopdaysmor = 0;
                            dscnt.Tables[1].DefaultView.RowFilter = "staff_code='" + staffcode1 + "' and mon_year='" + monyearto + "'";
                            dvstaffattn = dscnt.Tables[1].DefaultView;
                            if (dvstaffattn.Count > 0)
                            {
                                for (int day = 1; day <= today; day++)
                                {
                                    int day5 = 0;

                                    day5 = 0 + day;
                                    //sql1 = "select * from staff_attnd where mon_year= '" + monyearto + "' and staff_code='" + staffcode1 + "'";
                                    //con1.Close();
                                    //con1.Open();
                                    //SqlCommand cmd100 = new SqlCommand(sql1, con1);
                                    //SqlDataReader dr100 = cmd100.ExecuteReader();

                                    //while (dr100.Read())
                                    //{
                                    //    if (dr100.HasRows == true)

                                    int day6;
                                    int bol2 = 0;
                                    string attnda = "";
                                    day6 = 3 + day5;
                                    //attnda = dr100[day6].ToString();
                                    attnda = dvstaffattn[0][day6].ToString();
                                    if (attnda != "")
                                    {
                                        string[] split100 = attnda.Split(new char[] { '-' });
                                        string mor = "";
                                        string eve = "";
                                        mor = split100[0].ToString();
                                        eve = split100[1].ToString();
                                        //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = leavetype[l].ToString();
                                        if ((mor == "A'"))
                                        {
                                            //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = levatype + "(" + countmor++ + ")";
                                            lopdaysmor = lopdaysmor + 0.5;
                                            bol2 = 1;

                                        }
                                        else
                                        {
                                            if (addleave.Count > 0)
                                            {
                                                if (addleave.Contains(mor) == true)
                                                {
                                                    lopdayseveg = lopdayseveg + 0.5;
                                                    bol2 = 1;
                                                }
                                            }
                                        }
                                        if ((eve == "A"))
                                        {
                                            lopdayseveg = lopdayseveg + 0.5;
                                            bol2 = 1;

                                        }
                                        else
                                        {
                                            if (addleave.Count > 0)
                                            {
                                                if (addleave.Contains(mor) == true)
                                                {
                                                    lopdayseveg = lopdayseveg + 0.5;
                                                    bol2 = 1;
                                                }
                                            }
                                        }
                                        // string[] lave = new string[15];

                                        if (bol2 == 1)
                                        {
                                            if (date == "")
                                            {
                                                date = day5 + "/" + monyearto;
                                            }
                                            else
                                            {
                                                date = date + "," + day5 + "/" + monyearto;
                                            }
                                        }

                                    }

                                }
                                //}

                            }
                            //totlop = lopdaysmor + lopdayseveg;
                            //fpsalary.Sheets[0].Cells[rowstr - 1, 11].Text = totlop.ToString();
                            ////fpsalary.Sheets[0].Cells[rowstr - 1, 11].Locked = true;
                            //fpsalary.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center;
                            //if (date != "")
                            //{
                            //    date = date.Substring(1, date.Length - 1);
                            //}
                            fpsalary.Sheets[0].Cells[rowstr - 1, 12].Text = date;
                            fpsalary.Sheets[0].Cells[rowstr - 1, 12].HorizontalAlign = HorizontalAlign.Left;
                        }

                        string current_lop = dscnt.Tables[0].Rows[stcnt]["Cur_Lop"].ToString();
                        string periv_lop = dscnt.Tables[0].Rows[stcnt]["Pre_Lop"].ToString();
                        double total_lop = Convert.ToDouble(current_lop) + Convert.ToDouble(periv_lop);

                        fpsalary.Sheets[0].Cells[rowstr - 1, 11].Text = Convert.ToString(current_lop);
                        fpsalary.Sheets[0].Cells[rowstr - 1, 11].HorizontalAlign = HorizontalAlign.Center;

                        fpsalary.Sheets[0].Cells[rowstr - 1, 10].Text = Convert.ToString(periv_lop);
                        fpsalary.Sheets[0].Cells[rowstr - 1, 10].HorizontalAlign = HorizontalAlign.Center;

                        fpsalary.Sheets[0].Cells[rowstr - 1, 9].Text = Convert.ToString(total_lop);
                        fpsalary.Sheets[0].Cells[rowstr - 1, 9].HorizontalAlign = HorizontalAlign.Center;

                        // ********************************************* End *****************************************

                        // fpsalary.Sheets[0].Cells[rowstr - 1, 9].Text = Convert.ToString(total_lop);



                        fpsalary.Sheets[0].Cells[rowstr - 2, 1].CellType = chkcell;
                        ////////////
                        netadd = dscnt.Tables[0].Rows[stcnt]["netadd"].ToString();
                        totalded = dscnt.Tables[0].Rows[stcnt]["netded"].ToString();
                        netpay = dscnt.Tables[0].Rows[stcnt]["netsal"].ToString();

                        BasicLOP = dscnt.Tables[0].Rows[stcnt]["LOP"].ToString();
                        double dblallowact2 = 0;
                        staffname = dscnt.Tables[0].Rows[stcnt]["staff_name"].ToString();
                        double BasicLOP1 = 0;
                        double dblGross = 0;
                        double dblNetadd = 0;
                        double totalded1 = 0;
                        BasicLOP1 = Convert.ToDouble(BasicLOP);
                        BasicLOP1 = Math.Round(BasicLOP1, 0);
                        dblallowact2 = dblallowact2 + BasicLOP1;
                        deduction = dscnt.Tables[0].Rows[stcnt]["deductions"].ToString();
                        dblNetadd = Convert.ToDouble(netadd);
                        dblGross = dblallowact2 + dblNetadd;//references

                        double lopamount = 0;
                        double.TryParse(Convert.ToString(dscnt.Tables[0].Rows[stcnt]["Tot_lop"]), out lopamount);
                        Double lopamt = 0;
                        Double dedamount = 0; // 
                        if (cblsearch.Items[11].Selected == true)//barath 20.01.18
                        {
                            lopamt = Convert.ToDouble(lopamount);
                            lopamt = Math.Round(lopamt, 2, MidpointRounding.AwayFromZero);
                            dedamount = Convert.ToDouble(lopamt) + Convert.ToDouble(totalded) - Convert.ToDouble(lopamt);
                        }
                        else
                        {
                            lopamt = Convert.ToDouble(lopamount);
                            lopamt = Math.Round(lopamt, 2, MidpointRounding.AwayFromZero);
                            dedamount = Convert.ToDouble(totalded) - Convert.ToDouble(lopamt);
                        }
                        //totalded1 = Convert.ToDouble(totalded);//barath 20.01.18
                        totalded1 = dedamount;

                        //   totalded1 = totalded1 + dblallowact2;//hidden by srinath 23/1/2014
                        Baicpayarr = dscnt.Tables[0].Rows[stcnt]["bsalary"].ToString();//Added by srinath 26/12/2013

                        sno = sno + 1;

                        dept = dscnt.Tables[0].Rows[stcnt]["deptname"].ToString(); // added by jairam 13-11-2014
                        designation = dscnt.Tables[0].Rows[stcnt]["designame"].ToString(); // added by jairam 13-11-2014
                        dept_acrronym = dscnt.Tables[0].Rows[stcnt]["dept_acronym"].ToString();

                        desig_acronym = dscnt.Tables[0].Rows[stcnt]["desig_acronym"].ToString();
                        basicpay = dscnt.Tables[0].Rows[stcnt]["Actual_Basic"].ToString();
                        category = dscnt.Tables[0].Rows[stcnt]["stftype"].ToString();
                        string gradepay = dscnt.Tables[0].Rows[stcnt]["g_pay"].ToString();


                        fpsalary.Sheets[0].Rows[rowstr - 3].Height = 40;
                        fpsalary.Sheets[0].Rows[rowstr - 2].Height = 40;
                        fpsalary.Sheets[0].Rows[rowstr - 1].Height = 40;

                        string regisin = dscnt.Tables[0].Rows[stcnt]["resign"].ToString();
                        if (regisin.Trim().ToLower() == "true" || regisin.Trim() == "1")
                        {
                            fpsalary.Sheets[0].Rows[rowstr - 1].BackColor = Color.Pink;
                            fpsalary.Sheets[0].Rows[rowstr - 2].BackColor = Color.Pink;
                        }

                        //modified by srinath 28/4/2014
                        // fpsalary.Sheets[0].Cells[rowstr - 3, 0].Text = sno.ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 2, 0].Text = sno.ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 1, 0].Text = sno.ToString();
                        // fpsalary.Sheets[0].Cells[rowstr - 3, 0].Tag = dept.ToString();
                        //fpsalary.Sheets[0].Cells[rowstr - 3, 0].Note = designation.ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 2, 0].Tag = dept.ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 2, 0].Note = designation.ToString();

                        //fpsalary.Sheets[0].Cells[rowstr - 3, 0].HorizontalAlign = HorizontalAlign.Center;
                        //fpsalary.Sheets[0].Cells[rowstr - 3, 1].HorizontalAlign = HorizontalAlign.Center;
                        //fpsalary.Sheets[0].Cells[rowstr - 3, 2].Text = staffname.ToString();
                        //fpsalary.Sheets[0].Cells[rowstr - 3, 2].Font.Bold = true;
                        //fpsalary.Sheets[0].Cells[rowstr - 3, 2].Locked = true;
                        fpsalary.Sheets[0].Cells[rowstr - 3, 2].Tag = staffcode1.ToString();

                        fpsalary.Sheets[0].Cells[rowstr - 2, 0].HorizontalAlign = HorizontalAlign.Center;
                        fpsalary.Sheets[0].Cells[rowstr - 2, 1].HorizontalAlign = HorizontalAlign.Center;
                        fpsalary.Sheets[0].Cells[rowstr - 2, 2].Text = staffname.ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 2, 2].Font.Bold = true;
                        //fpsalary.Sheets[0].Cells[rowstr - 2, 2].Locked = true;
                        fpsalary.Sheets[0].Cells[rowstr - 2, 2].Tag = staffcode1.ToString();

                        // fpsalary.Sheets[0].Cells[rowstr - 2, 2].Text = dept_acrronym.ToString();
                        // fpsalary.Sheets[0].Cells[rowstr - 2, 2].Locked = true;
                        // fpsalary.Sheets[0].Cells[rowstr - 2, 2].Text = dept_acrronym.ToString();
                        //  fpsalary.Sheets[0].Cells[rowstr - 2, 2].Locked = true;
                        //  fpsalary.Sheets[0].Cells[rowstr - 1, 2].Text = desig_acronym.ToString();
                        //  fpsalary.Sheets[0].Cells[rowstr - 1, 2].Locked = true;

                        fpsalary.Sheets[0].Cells[rowstr - 1, 8].Text = joindate.ToString();
                        // fpsalary.Sheets[0].Cells[rowstr - 1, 8].Locked = true;

                        string curlop = string.Empty;
                        string prelop = string.Empty;

                        // SqlCommand cmdlop = new SqlCommand("select cur_lop,pre_lop from monthlypay where staff_code='" + staffcode1 + "' and tdate='" + dateto + "' ", myconn1);
                        dscnt.Tables[0].DefaultView.RowFilter = "staff_code='" + staffcode1 + "' and tdate='" + dateto + "'";
                        dvdet = dscnt.Tables[0].DefaultView;
                        if (dvdet.Count > 0)
                        {
                            curlop = dvdet[0]["cur_lop"].ToString();
                            prelop = dvdet[0]["pre_lop"].ToString();
                        }

                        string basicpay56 = string.Empty;
                        string gradepay56 = string.Empty;
                        string daamtpay = string.Empty;
                        string bsichra = string.Empty;
                        // SqlCommand cmdpay = new SqlCommand("select basic_alone,grade_pay,daamt from monthlypay where staff_code='" + staffcode1 + "' and tdate='" + dateto + "' ", myconn1);
                        // dscnt.Tables[0].DefaultView.RowFilter = "staff_code='" + staffcode1 + "' and tdate='" + dateto + "'";
                        dscnt.Tables[0].DefaultView.RowFilter = "staff_code='" + staffcode1 + "' and PayYear='" + ddlyear2.SelectedValue.ToString() + "' and PayMonth='" + cblmonth.SelectedValue.ToString() + "'";
                        dvdet = dscnt.Tables[0].DefaultView;
                        if (dvdet.Count > 0)
                        {
                            basicpay56 = dvdet[0]["basic_alone"].ToString();
                            gradepay56 = dvdet[0]["grade_pay"].ToString();
                            daamtpay = dvdet[0]["daamt"].ToString();
                            bsichra = dvdet[0]["daamt"].ToString();
                        }

                        string dacount56 = string.Empty;
                        string hracount56 = string.Empty;
                        string scactcount56 = string.Empty;
                        string caAmt = string.Empty;

                        string dearestallow = string.Empty;
                        string hraallow = string.Empty;
                        string caallow = string.Empty;
                        string scaallow = string.Empty;

                        string teaching = "";
                        string nonteaching = "";
                        double tecamnt = 0;
                        double tecamnts = 0;
                        DataView dvall_dec = new DataView();
                        allowance = dscnt.Tables[0].Rows[stcnt]["allowances"].ToString();
                        string textallow = Convert.ToString(dscnt.Tables[0].Rows[stcnt]["Allowances"]);
                        all_dedDs.Tables[0].DefaultView.RowFilter = "staff_code='" + staffcode1 + "'";
                        dvall_dec = all_dedDs.Tables[0].DefaultView;
                        string allow = Convert.ToString(dvall_dec[0]["allowances"]);
                        string dedut = Convert.ToString(dvall_dec[0]["deductions"]);




                        string[] allowprocessone = textallow.Split(new Char[] { '\\' });

                        getdictvaltecnontec();
                        for (int v = 0; v <= allowprocessone.GetUpperBound(0); v++)
                        {
                            tecamnt = 0;
                            if (allowprocessone[v] != null && allowprocessone[v] != "")
                            {
                                string[] aloowcheck = allowprocessone[v].Split(';');
                                if (aloowcheck.GetUpperBound(0) >= 2)
                                {
                                    if (category.Trim().ToLower() == "teaching" && dictgetsettec.Count > 0)
                                    {
                                        if (dictgetsettec.ContainsKey(Convert.ToString(aloowcheck[0])))
                                        {
                                            dictgetsettec.Remove(Convert.ToString(aloowcheck[0]));
                                            Double.TryParse(Convert.ToString(aloowcheck[3]), out tecamnt);
                                            tecamnt = Math.Round(tecamnt, 0, MidpointRounding.AwayFromZero);
                                            dictgetsettec.Add(Convert.ToString(aloowcheck[0]), tecamnt);
                                        }
                                    }
                                    else if (category.Trim().ToLower() == "non teaching" && dictgetsetnontec.Count > 0)
                                    {
                                        if (dictgetsetnontec.ContainsKey(Convert.ToString(aloowcheck[0])))
                                        {
                                            dictgetsetnontec.Remove(Convert.ToString(aloowcheck[0]));
                                            Double.TryParse(Convert.ToString(aloowcheck[3]), out tecamnt);
                                            tecamnt = Math.Round(tecamnt, 0, MidpointRounding.AwayFromZero);
                                            dictgetsetnontec.Add(Convert.ToString(aloowcheck[0]), tecamnt);
                                        }
                                    }
                                    else
                                    {
                                        if (aloowcheck[0] == "DA" || aloowcheck[0].Trim().ToLower() == "dearness allowance")
                                        {
                                            dacount56 = Convert.ToString(aloowcheck[3]);

                                        }
                                        else
                                            if (aloowcheck[0] == "HRA")
                                            {
                                                if (aloowcheck[1].Trim() != "Amount") // Slap or %
                                                {
                                                    if (aloowcheck[2].Trim().Contains('-'))
                                                    {
                                                        hracount56 = Convert.ToString(aloowcheck[2].Split('-')[1]);
                                                        bsichra = Convert.ToString(aloowcheck[2].Split('-')[1]);
                                                    }
                                                    else
                                                    {
                                                        hracount56 = Convert.ToString(aloowcheck[3]);
                                                        bsichra = Convert.ToString(aloowcheck[3]);
                                                    }
                                                }
                                                else
                                                {
                                                    if (aloowcheck[2].Trim().Contains('-'))
                                                    {
                                                        hracount56 = Convert.ToString(aloowcheck[2].Split('-')[0]);
                                                        bsichra = Convert.ToString(aloowcheck[2].Split('-')[0]);
                                                    }
                                                    else
                                                    {
                                                        hracount56 = Convert.ToString(aloowcheck[3]);
                                                        bsichra = Convert.ToString(aloowcheck[3]);
                                                    }
                                                }
                                            }
                                            else
                                                if (aloowcheck[0].ToUpper() == "SCA" || aloowcheck[0].ToUpper() == "SA")
                                                {
                                                    scactcount56 = Convert.ToString(aloowcheck[3]);
                                                }
                                                else if (aloowcheck[0].ToUpper() == "CA" || aloowcheck[0].ToUpper() == "CCA")
                                                    caAmt = Convert.ToString(aloowcheck[3]);

                                    }
                                }
                            }
                        }

                        string[] newallow = allow.Split(new Char[] { '\\' });
                        getdictvaltecnontecs();

                        for (int vs = 0; vs <= newallow.GetUpperBound(0); vs++)
                        {
                            tecamnts = 0;
                            if (newallow[vs] != null && newallow[vs] != "")
                            {
                                string[] aloowchecks = newallow[vs].Split(';');
                                if (aloowchecks.GetUpperBound(0) >= 2)
                                {
                                    if (category.Trim().ToLower() == "teaching" && dictgetsettecs.Count > 0)
                                    {
                                        if (dictgetsettecs.ContainsKey(Convert.ToString(aloowchecks[0])))
                                        {
                                            dictgetsettecs.Remove(Convert.ToString(aloowchecks[0]));
                                            Double.TryParse(Convert.ToString(aloowchecks[3]), out tecamnts);
                                            tecamnts = Math.Round(tecamnts, 0, MidpointRounding.AwayFromZero);
                                            dictgetsettecs.Add(Convert.ToString(aloowchecks[0]), tecamnts);
                                        }
                                    }
                                    else if (category.Trim().ToLower() == "non teaching" && dictgetsetnontec.Count > 0)
                                    {
                                        if (dictgetsetnontecs.ContainsKey(Convert.ToString(aloowchecks[0])))
                                        {
                                            dictgetsetnontecs.Remove(Convert.ToString(aloowchecks[0]));
                                            Double.TryParse(Convert.ToString(aloowchecks[3]), out tecamnts);
                                            tecamnts = Math.Round(tecamnt, 0, MidpointRounding.AwayFromZero);
                                            dictgetsetnontecs.Add(Convert.ToString(aloowchecks[0]), tecamnts);
                                        }
                                    }
                                    else
                                    {
                                        if (aloowchecks[0] == "DA" || aloowchecks[0].Trim().ToLower() == "dearness allowance")
                                        {
                                            dearestallow = Convert.ToString(aloowchecks[3]);

                                        }
                                        else
                                            if (aloowchecks[0] == "HRA")
                                            {
                                                if (aloowchecks[1].Trim() != "Amount") // Slap or %
                                                {
                                                    if (aloowchecks[2].Trim().Contains('-'))
                                                    {
                                                        hraallow = Convert.ToString(aloowchecks[3].Split('-')[1]);
                                                        bsichra = Convert.ToString(aloowchecks[3].Split('-')[1]);
                                                    }
                                                    else
                                                    {
                                                        hraallow = Convert.ToString(aloowchecks[2]);
                                                        bsichra = Convert.ToString(aloowchecks[2]);
                                                    }
                                                }
                                                else
                                                {
                                                    if (aloowchecks[2].Trim().Contains('-'))
                                                    {
                                                        hraallow = Convert.ToString(aloowchecks[2].Split('-')[0]);
                                                        bsichra = Convert.ToString(aloowchecks[2].Split('-')[0]);
                                                    }
                                                    else
                                                    {
                                                        hraallow = Convert.ToString(aloowchecks[2]);
                                                        bsichra = Convert.ToString(aloowchecks[2]);
                                                    }
                                                }
                                            }
                                            else
                                                if (aloowchecks[0].ToUpper() == "SCA" || aloowchecks[0].ToUpper() == "SA")
                                                {
                                                    scaallow = Convert.ToString(aloowchecks[2]);
                                                }
                                                else if (aloowchecks[0].ToUpper() == "CA" || aloowchecks[0].ToUpper() == "CCA")
                                                    caallow = Convert.ToString(aloowchecks[2]);

                                    }
                                }
                            }
                        }


                        if (dearestallow == "")//delsis1603
                        {
                            dearestallow = "+" + "0";

                        }
                        else
                        {
                            dearestallow = "+" + dearestallow;
                        }

                        if (hraallow == "")//delsis1603
                        {
                            hraallow = "+" + "0";

                        }
                        else
                        {
                            hraallow = "+" + hraallow;
                        }

                        if (scaallow == "")//delsis1603
                        {
                            scaallow = "+" + "0";

                        }
                        else
                        {
                            scaallow = "+" + scaallow;
                        }

                        if (caallow == "")//delsis1603
                        {
                            caallow = "+" + "0";

                        }
                        else
                        {
                            caallow = "+" + caallow;
                        }

                        if (dacount56 == "")
                        {
                            dacount56 = "+" + "0";

                        }
                        else
                        {
                            dacount56 = "+" + dacount56;
                        }
                        if (hracount56 == "")
                        {
                            hracount56 = "+" + "0";
                        }
                        else
                        {
                            hracount56 = "+" + hracount56;
                        }
                        if (scactcount56 == "")
                        {
                            scactcount56 = "+" + "0";
                        }
                        else
                        {
                            scactcount56 = "+" + scactcount56;
                        }
                        if (bsichra == "")
                        {
                            bsichra = "+" + "0";
                        }
                        else
                        {
                            bsichra = "+" + bsichra;
                        }
                        if (caAmt == "")
                            caAmt = "+" + "0";
                        else
                            caAmt = "+" + caAmt;

                        int gross = Convert.ToInt32(dblGross);
                        double gradepay57 = Convert.ToDouble(gradepay56);
                        double daamtpay56 = Convert.ToDouble(daamtpay);
                        double basic = Convert.ToDouble(basicpay);
                        string vaule = "";

                        //fpsalary.Sheets[0].Cells[rowstr - 3, 2]
                        //delsi1603
                        //if (gross >= basic)
                        //{
                        //    if (category.Trim().ToLower() == "teaching" && dictgetsettec.Count > 0)
                        //    {
                        //        foreach (KeyValuePair<string, double> dr in dictgetsettec)
                        //        {
                        //            if (teaching.Trim() == "")
                        //                teaching = Convert.ToString(dr.Value);
                        //            else
                        //                teaching = teaching + "+" + Convert.ToString(dr.Value);
                        //        }
                        //        vaule = "Pay @" + basic + "+" + gradepay57 + "+" + teaching + ",  " + " " + "PLLP" + ":" + prelop + " " + "," + "CLLP" + ":" + curlop;
                        //    }
                        //    else if (category.Trim().ToLower() == "non teaching" && dictgetsetnontec.Count > 0)
                        //    {
                        //        foreach (KeyValuePair<string, double> dr in dictgetsetnontec)
                        //        {
                        //            if (nonteaching.Trim() == "")
                        //                nonteaching = Convert.ToString(dr.Value);
                        //            else
                        //                nonteaching = nonteaching + "+" + Convert.ToString(dr.Value);
                        //        }
                        //        vaule = "Pay @" + basic + "+" + gradepay57 + "+" + nonteaching + ",  " + " " + "PLLP" + ":" + prelop + " " + "," + "CLLP" + ":" + curlop;
                        //    }
                        //    else
                        //    {
                        //        vaule = "Pay @" + basic + "+" + gradepay57 + "+" + daamtpay56 + bsichra + scactcount56 + caAmt + ",  " + " " + "PLLP" + ":" + prelop + " " + "," + "CLLP" + ":" + curlop;
                        //    }
                        //    //fpsalary.Sheets[0].Cells[rowstr - 1, 2].Text = desig_acronym.ToString() + "-" + "   " + "Pay @" + basic + "+" + gradepay57 + "+" + daamtpay56 + bsichra + scactcount56 + ",  " + " " + "PLLP" + ":" + prelop + " " + "," + "CLLP" + ":" + curlop;
                        //}
                        //else if (gross < basic)
                        //{
                        //    //vaule = "Pay @" + dblGross.ToString() + "," + "  " + "PLLP" + ":" + prelop + "," + "  " + "CLLP" + ":" + curlop;//delsi1701
                        //    vaule = "Pay @" + basic + "+" + gradepay57 + "+" + daamtpay56 + bsichra + scactcount56 + caAmt + ",  " + " " + "PLLP" + ":" + prelop + " " + "," + "CLLP" + ":" + curlop;
                        //    //fpsalary.Sheets[0].Cells[rowstr - 1, 2].Text = desig_acronym.ToString() + "-" + "   " + "Pay @" + dblGross.ToString() + "," + "  " + "PLLP" + ":" + prelop + "," + "  " + "CLLP" + ":" + curlop;
                        //}
                        //delsi1603



                        if (gross >= basic)
                        {
                            if (category.Trim().ToLower() == "teaching" && dictgetsettec.Count > 0)
                            {
                                foreach (KeyValuePair<string, double> dr in dictgetsettec)
                                {
                                    if (teaching.Trim() == "")
                                        teaching = Convert.ToString(dr.Value);
                                    else
                                        teaching = teaching + "+" + Convert.ToString(dr.Value);
                                }
                                vaule = "Pay @" + basic + "+" + gradepay57 + "+" + teaching + ",  " + " " + "PLLP" + ":" + prelop + " " + "," + "CLLP" + ":" + curlop;
                            }
                            else if (category.Trim().ToLower() == "non teaching" && dictgetsetnontec.Count > 0)
                            {
                                foreach (KeyValuePair<string, double> dr in dictgetsetnontec)
                                {
                                    if (nonteaching.Trim() == "")
                                        nonteaching = Convert.ToString(dr.Value);
                                    else
                                        nonteaching = nonteaching + "+" + Convert.ToString(dr.Value);
                                }
                                vaule = "Pay @" + basic + "+" + gradepay57 + "+" + nonteaching + ",  " + " " + "PLLP" + ":" + prelop + " " + "," + "CLLP" + ":" + curlop;
                            }
                            else
                            {
                                vaule = "Pay @" + basic + "+" + gradepay57 + dacount56 + bsichra + scaallow + caallow + ",  " + " " + "PLLP" + ":" + prelop + " " + "," + "CLLP" + ":" + curlop;
                            }
                            //fpsalary.Sheets[0].Cells[rowstr - 1, 2].Text = desig_acronym.ToString() + "-" + "   " + "Pay @" + basic + "+" + gradepay57 + "+" + daamtpay56 + bsichra + scactcount56 + ",  " + " " + "PLLP" + ":" + prelop + " " + "," + "CLLP" + ":" + curlop;
                        }
                        else if (gross < basic)
                        {
                            //vaule = "Pay @" + dblGross.ToString() + "," + "  " + "PLLP" + ":" + prelop + "," + "  " + "CLLP" + ":" + curlop;//delsi1701
                            vaule = "Pay @" + basic + "+" + gradepay57 + dacount56 + bsichra + scaallow + caallow + ",  " + " " + "PLLP" + ":" + prelop + " " + "," + "CLLP" + ":" + curlop;
                            //fpsalary.Sheets[0].Cells[rowstr - 1, 2].Text = desig_acronym.ToString() + "-" + "   " + "Pay @" + dblGross.ToString() + "," + "  " + "PLLP" + ":" + prelop + "," + "  " + "CLLP" + ":" + curlop;
                        }
                        if (desig_acronym.Trim() != "" && desig_acronym != null)
                        {
                            vaule = desig_acronym.ToString() + "-" + "   " + vaule;
                        }
                        vaule = staffname + " , " + dept_acrronym + " , " + vaule;
                        //modified by srinath 28/4/2014
                        //  fpsalary.Sheets[0].Cells[rowstr - 3, 2].Text = vaule;
                        fpsalary.Sheets[0].Cells[rowstr - 2, 2].VerticalAlign = VerticalAlign.Middle;
                        fpsalary.Sheets[0].Cells[rowstr - 2, 1].VerticalAlign = VerticalAlign.Middle;
                        fpsalary.Sheets[0].Cells[rowstr - 2, 0].VerticalAlign = VerticalAlign.Middle;
                        fpsalary.Sheets[0].Cells[rowstr - 2, 2].Text = vaule;
                        fpsalary.Sheets[0].Cells[rowstr - 1, 2].Text = vaule;
                        // fpsalary.Sheets[0].Cells[rowstr - 1, 2].Text = vaule;
                        fpsalary.Sheets[0].Cells[rowstr - 1, 7].Text = category.ToString();
                        // fpsalary.Sheets[0].Cells[rowstr - 1, 7].Locked = true;
                        //Added by srinath 26/12/2013
                        if (cblsearch.Items[10].Selected == true)
                        {//modified by srinath 28/4/2014
                            //fpsalary.Sheets[0].Cells[rowstr - 3, 13].Text = basicpay.ToString();
                            if (basicpay.Trim() != "0" && basicpay.Trim() != "0.00")
                            {
                                //if (gross < basic)//delsi1701 added if condition fpsalary.Sheets[0].Cells[rowstr - 2, 13].Text = basicpay.ToString();
                                //{
                                fpsalary.Sheets[0].Cells[rowstr - 2, 13].Text = basicpay.ToString(); //netpay.ToString();
                                //}
                                //else
                                //{
                                // fpsalary.Sheets[0].Cells[rowstr - 2, 13].Text = basicpay.ToString();
                                //}
                                if (hatbf.ContainsKey("Basic Pay"))
                                {
                                    Double getvel = Convert.ToDouble(hatbf["Basic Pay"]);
                                    getvel = getvel + Convert.ToDouble(basicpay);
                                    hatbf["Basic Pay"] = getvel;
                                    getvel = 0;
                                    getvel = Convert.ToDouble(hatco["Basic Pay"]);
                                    getvel = getvel + Convert.ToDouble(basicpay);
                                    hatco["Basic Pay"] = getvel;
                                }
                            }
                        }
                        else
                        {//modified by srinath 28/4/2014
                            // fpsalary.Sheets[0].Cells[rowstr - 3, 13].Text = Baicpayarr.ToString();
                            if (Baicpayarr.Trim() != "0" && Baicpayarr.Trim() != "0.00")
                            {
                                fpsalary.Sheets[0].Cells[rowstr - 2, 13].Text = Baicpayarr.ToString();
                                if (hatbf.ContainsKey("Basic Pay"))
                                {
                                    Double getvel = Convert.ToDouble(hatbf["Basic Pay"]);
                                    getvel = getvel + Convert.ToDouble(Baicpayarr);
                                    hatbf["Basic Pay"] = getvel;
                                    getvel = 0;
                                    getvel = Convert.ToDouble(hatco["Basic Pay"]);
                                    getvel = getvel + Convert.ToDouble(Baicpayarr);
                                    hatco["Basic Pay"] = getvel;
                                }
                            }
                        }
                        //  fpsalary.Sheets[0].Cells[rowstr - 3, 13].Locked = true;
                        //fpsalary.Sheets[0].Cells[rowstr - 3, 13].HorizontalAlign = HorizontalAlign.Right;

                        //     fpsalary.Sheets[0].Cells[rowstr - 2, 13].Locked = true;
                        fpsalary.Sheets[0].Cells[rowstr - 2, 13].HorizontalAlign = HorizontalAlign.Right;
                        if (gradepay.Trim() != "0" && gradepay.Trim() != "0.00")
                        {
                            fpsalary.Sheets[0].Cells[rowstr - 1, 13].Text = gradepay.ToString();
                            if (hatbf.ContainsKey("Grade Pay"))
                            {
                                Double getvel = Convert.ToDouble(hatbf["Grade Pay"]);
                                getvel = getvel + Convert.ToDouble(gradepay);
                                hatbf["Grade Pay"] = getvel;
                                getvel = 0;
                                getvel = Convert.ToDouble(hatco["Grade Pay"]);
                                getvel = getvel + Convert.ToDouble(gradepay);
                                hatco["Grade Pay"] = getvel;
                            }
                        }
                        fpsalary.Sheets[0].Cells[rowstr - 1, 13].HorizontalAlign = HorizontalAlign.Right;
                        fpsalary.Sheets[0].Cells[rowstr - 1, 13].Font.Size = FontUnit.Large;

                        fpsalary.Sheets[0].Cells[rowstr - 2, 13].HorizontalAlign = HorizontalAlign.Right;
                        fpsalary.Sheets[0].Cells[rowstr - 2, 13].Font.Size = FontUnit.Large;

                        allowance = dscnt.Tables[0].Rows[stcnt]["allowances"].ToString();
                        int h = 0;
                        string[] allowanmce_arr1;
                        string alowancesplit;

                        allowanmce_arr1 = allowance.Split('\\');
                        for (int i = 0; i < allowanmce_arr1.GetUpperBound(0); i++)
                        {
                            alowancesplit = allowanmce_arr1[i];
                            string[] allowanceda;
                            allowanceda = alowancesplit.Split(';');
                            string da;
                            string da3;
                            double ds3 = 0;
                            string dblallowact;
                            double dblallowact1 = 0;
                            dblallowact2 = 0;

                            da = allowanceda[0];
                            da3 = allowanceda[3];
                            dblallowact = allowanceda[3];
                            ds3 = Convert.ToDouble(da3);

                            string[] spval = allowanceda[2].Split('-');//barath 18.01.18
                            if (spval.Length == 2)
                            {
                                if (allowanceda[1].Trim().ToUpper() == "PERCENT")
                                    double.TryParse(Convert.ToString(spval[1]), out ds3);
                                else
                                    double.TryParse(Convert.ToString(spval[0]), out ds3);
                            }
                            else
                            {
                                double.TryParse(Convert.ToString(allowanceda[3]), out ds3);
                            }
                            ds3 = Math.Round(ds3, 0);

                            dblallowact1 = Convert.ToDouble(dblallowact);
                            dblallowact1 = Math.Round(dblallowact1, 0);
                            dblallowact2 = dblallowact2 + (ds3 - dblallowact1);
                            int all = 0;
                            //modified by srinath 3 to 2
                            int rowcnt = 2;

                            for (int k = 14; k <= colcount1 - 2; k++)
                            {
                                rowcnt = 2;

                                for (int gk = 1; gk <= 2; gk++)
                                {
                                    string headval = fpsalary.Sheets[0].ColumnHeader.Cells[gk, k].Text;

                                    fpsalary.Sheets[0].Cells[rowstr - 1, k].HorizontalAlign = HorizontalAlign.Right;
                                    //modified by srinath 28/4/2014
                                    //fpsalary.Sheets[0].Cells[rowstr - 3, 14].Text = gradepay.ToString();
                                    //fpsalary.Sheets[0].Cells[rowstr - 3, 14].HorizontalAlign = HorizontalAlign.Right;
                                    //fpsalary.Sheets[0].Cells[rowstr - 3, 14].Font.Size = FontUnit.Large;
                                    //fpsalary.Sheets[0].Cells[rowstr - 1, 14].Text = gradepay.ToString();
                                    //fpsalary.Sheets[0].Cells[rowstr - 1, 14].HorizontalAlign = HorizontalAlign.Right;
                                    //fpsalary.Sheets[0].Cells[rowstr - 1, 14].Font.Size = FontUnit.Large;
                                    //  fpsalary.Sheets[0].Cells[rowstr - 1, k].Locked = true;
                                    if (da == headval)
                                    {
                                        //rowcnt = 3;
                                        if (ds3 > 0)
                                        {
                                            fpsalary.Sheets[0].Cells[rowstr - rowcnt, k].Text = ds3.ToString();
                                        }
                                        if (hatbf.ContainsKey(headval))
                                        {
                                            Double getvel = Convert.ToDouble(hatbf[headval]);
                                            getvel = getvel + Convert.ToDouble(ds3);
                                            hatbf[headval] = getvel;
                                            getvel = 0;
                                            getvel = Convert.ToDouble(hatco[headval]);
                                            getvel = getvel + Convert.ToDouble(ds3);
                                            hatco[headval] = getvel;
                                        }
                                        // fpsalary.Sheets[0].Cells[rowstr - rowcnt, k].Locked = true;
                                        fpsalary.Sheets[0].Cells[rowstr - rowcnt, k].Font.Size = FontUnit.Large;
                                        // dblallowtotal[] = dblallowtotal[i] + Convert.ToDouble(da3);
                                        fpsalary.Sheets[0].Cells[rowstr - rowcnt, k].HorizontalAlign = HorizontalAlign.Right;

                                    }
                                    else
                                    {
                                        rowcnt--;
                                    }

                                }
                            }
                        }
                        //modified by srinath 3 to 2
                        //   int deductcnt = 3;
                        int deductcnt = 2;

                        string[] deduction_arr1; ;
                        string deductionsplit1;
                        deduction_arr1 = deduction.Split('\\');
                        for (int sp = 0; sp < deduction_arr1.GetUpperBound(0); sp++)
                        {
                            deductionsplit1 = deduction_arr1[sp];
                            string[] deductionda;
                            deductionda = deductionsplit1.Split(';');
                            string de;
                            double de3 = 0;
                            //int i=0;
                            de = deductionda[0];
                            double.TryParse(Convert.ToString(deductionda[3]), out de3);

                            string[] spval = deductionda[2].Split('-');//barath 18.01.18
                            if (spval.Length == 2)
                            {
                                if (deductionda[1].Trim().ToUpper() == "PERCENT")
                                    double.TryParse(Convert.ToString(spval[1]), out de3);
                                else
                                    double.TryParse(Convert.ToString(spval[0]), out de3);
                            }
                            else
                            {
                                double.TryParse(Convert.ToString(deductionda[3]), out de3);
                            }
                            de3 = Math.Round(de3, 0);


                            for (int p = 12; p <= colcount1 - 1; p++)
                            { //modified by srinath 3 to 2
                                deductcnt = 3;
                                deductcnt = 2;
                                //sankar july'2013
                                for (int decnt = 1; decnt <= 2; decnt++)
                                {
                                    string headval2 = fpsalary.Sheets[0].ColumnHeader.Cells[decnt, p].Text;

                                    if (de == headval2)
                                    {
                                        double de3val = Math.Round(Convert.ToDouble(de3), 0);
                                        if (de3val > 0)
                                        {
                                            fpsalary.Sheets[0].Cells[rowstr - deductcnt, p].Text = de3val.ToString();
                                        }
                                        if (hatbf.ContainsKey(headval2))
                                        {
                                            Double getvel = Convert.ToDouble(hatbf[headval2]);
                                            getvel = getvel + Convert.ToDouble(de3val);
                                            hatbf[headval2] = getvel;
                                            getvel = 0;
                                            getvel = Convert.ToDouble(hatco[headval2]);
                                            getvel = getvel + Convert.ToDouble(de3val);
                                            hatco[headval2] = getvel;
                                        }
                                        // fpsalary.Sheets[0].Cells[rowstr - deductcnt, p].Locked = true;
                                        fpsalary.Sheets[0].Cells[rowstr - deductcnt, p].Font.Size = FontUnit.Large;
                                        fpsalary.Sheets[0].Cells[rowstr - deductcnt, p].HorizontalAlign = HorizontalAlign.Right;
                                    }
                                    else
                                    {
                                        deductcnt--;
                                    }
                                }

                            }
                        }
                        //added by srinath 28/4/2014
                        // fpsalary.Sheets[0].AddSpanCell(rowstr - 3, colheder - 1, 3, 1);
                        fpsalary.Sheets[0].AddSpanCell(rowstr - 2, colheder - 1, 2, 1);

                        //added by srinath 30/12/2013
                        if (cblsearch.Items[22].Selected == true)
                        {//added by srinath 28/4/2014
                            // fpsalary.Sheets[0].Cells[rowstr - 3, colheder - 1].Text = dblGross.ToString();
                            fpsalary.Sheets[0].Cells[rowstr - 2, colheder - 1].Text = dblGross.ToString();

                            if (hatbf.ContainsKey("Gross Pay"))
                            {
                                Double getvel = Convert.ToDouble(hatbf["Gross Pay"]);
                                getvel = getvel + Convert.ToDouble(dblGross);
                                hatbf["Gross Pay"] = getvel;
                                getvel = 0;
                                getvel = Convert.ToDouble(hatco["Gross Pay"]);
                                getvel = getvel + Convert.ToDouble(dblGross);
                                hatco["Gross Pay"] = getvel;
                            }
                        }
                        else
                        {//added by srinath 28/4/2014
                            //fpsalary.Sheets[0].Cells[rowstr - 3, colheder - 1].Text = netadd.ToString();
                            fpsalary.Sheets[0].Cells[rowstr - 2, colheder - 1].Text = netadd.ToString();
                            if (hatbf.ContainsKey("Gross Pay"))
                            {
                                Double getvel = Convert.ToDouble(hatbf["Gross Pay"]);
                                getvel = getvel + Convert.ToDouble(netadd);
                                hatbf["Gross Pay"] = getvel;
                                getvel = 0;
                                getvel = Convert.ToDouble(hatco["Gross Pay"]);
                                getvel = getvel + Convert.ToDouble(netadd);
                                hatco["Gross Pay"] = getvel;
                            }
                        }
                        // fpsalary.Sheets[0].Cells[rowstr - 2, colheder - 1].Locked = true;
                        fpsalary.Sheets[0].Cells[rowstr - 2, colheder - 1].HorizontalAlign = HorizontalAlign.Right;

                        //fpsalary.Sheets[0].AddSpanCell(rowstr - 3, colcount1 - 3, 3, 1);
                        //fpsalary.Sheets[0].AddSpanCell(rowstr - 3, colcount1 - 2, 3, 1);
                        //fpsalary.Sheets[0].AddSpanCell(rowstr - 3, colcount1 - 1, 3, 1);

                        fpsalary.Sheets[0].AddSpanCell(rowstr - 2, colcount1 - 3, 2, 1);
                        fpsalary.Sheets[0].AddSpanCell(rowstr - 2, colcount1 - 2, 2, 1);
                        fpsalary.Sheets[0].AddSpanCell(rowstr - 2, colcount1 - 1, 2, 1);

                        //fpsalary.Sheets[0].Cells[rowstr - 3, colcount1 - 3].Text = totalded1.ToString();
                        //fpsalary.Sheets[0].Cells[rowstr - 3, colcount1 - 3].Locked = true;
                        //fpsalary.Sheets[0].Cells[rowstr - 3, colcount1 - 3].HorizontalAlign = HorizontalAlign.Right;
                        //fpsalary.Sheets[0].Cells[rowstr - 3, colcount1 - 2].Text = netpay.ToString();
                        //fpsalary.Sheets[0].Cells[rowstr - 3, colcount1 - 2].Locked = true;
                        //fpsalary.Sheets[0].Cells[rowstr - 3, colcount1 - 2].HorizontalAlign = HorizontalAlign.Right;

                        fpsalary.Sheets[0].Cells[rowstr - 2, colcount1 - 3].Text = totalded1.ToString();

                        if (hatbf.ContainsKey("Total Deduction"))
                        {
                            Double getvel = Convert.ToDouble(hatbf["Total Deduction"]);
                            getvel = getvel + Convert.ToDouble(totalded1);
                            hatbf["Total Deduction"] = getvel;
                            getvel = 0;
                            getvel = Convert.ToDouble(hatco["Total Deduction"]);
                            getvel = getvel + Convert.ToDouble(totalded1);
                            hatco["Total Deduction"] = getvel;
                        }
                        //  fpsalary.Sheets[0].Cells[rowstr - 2, colcount1 - 3].Locked = true;
                        fpsalary.Sheets[0].Cells[rowstr - 2, colcount1 - 3].HorizontalAlign = HorizontalAlign.Right;
                        fpsalary.Sheets[0].Cells[rowstr - 2, colcount1 - 2].Text = netpay.ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 2, colcount1 - 2].VerticalAlign = VerticalAlign.Middle;
                        if (hatbf.ContainsKey("Net Pay"))
                        {
                            Double getvel = Convert.ToDouble(hatbf["Net Pay"]);
                            getvel = getvel + Convert.ToDouble(netpay);
                            hatbf["Net Pay"] = getvel;
                            getvel = 0;
                            getvel = Convert.ToDouble(hatco["Net Pay"]);
                            getvel = getvel + Convert.ToDouble(netpay);
                            hatco["Net Pay"] = getvel;
                        }
                        fpsalary.Sheets[0].Cells[rowstr - 2, colcount1 - 2].Locked = true;
                        fpsalary.Sheets[0].Cells[rowstr - 2, colcount1 - 2].HorizontalAlign = HorizontalAlign.Right;


                        fpsalary.Sheets[0].Columns[2].Visible = true;
                        fpsalary.Sheets[0].Columns[3].Visible = false;
                        fpsalary.Sheets[0].Columns[4].Visible = false;
                        fpsalary.Sheets[0].Columns[5].Visible = false;
                        fpsalary.Sheets[0].Columns[6].Visible = false;
                        fpsalary.Sheets[0].Columns[7].Visible = false;

                        fpsalary.Sheets[0].Columns[8].Visible = false;
                        fpsalary.Sheets[0].Columns[9].Visible = true;
                        fpsalary.Sheets[0].Columns[10].Visible = true;
                        fpsalary.Sheets[0].Columns[11].Visible = false;
                        fpsalary.Sheets[0].Columns[12].Visible = false;
                        fpsalary.Sheets[0].Columns[1].Visible = false;

                        if (cblsearch.Items[5].Selected == true)
                        {
                            fpsalary.Sheets[0].Columns[7].Visible = true;
                        }

                        if (cblsearch.Items[6].Selected == true)
                        {
                            if (monthname1 == monthnamenum)
                            {
                                fpsalary.Sheets[0].Columns[9].Visible = true;
                                fpsalary.Sheets[0].Columns[10].Visible = false;
                                fpsalary.Sheets[0].Columns[11].Visible = false;
                            }
                            else
                            {

                                fpsalary.Sheets[0].Columns[9].Visible = true;
                                fpsalary.Sheets[0].Columns[10].Visible = true;
                                fpsalary.Sheets[0].Columns[11].Visible = true;
                            }


                        }
                        else
                        {
                            fpsalary.Sheets[0].Columns[9].Visible = false;
                            fpsalary.Sheets[0].Columns[10].Visible = false;
                            fpsalary.Sheets[0].Columns[11].Visible = false;
                        }

                        if (cblsearch.Items[7].Selected == true)
                        {
                            fpsalary.Sheets[0].Columns[12].Visible = true;
                        }

                        if (cblsearch.Items[7].Selected == false)
                        {
                            fpsalary.Sheets[0].Columns[12].Visible = false;
                        }


                        if (cblsearch.Items[8].Selected == true)
                        {

                            fpsalary.Sheets[0].Columns[8].Visible = true;
                        }



                        if (cblsearch.Items[14].Selected == true)
                        {

                            fpsalary.Sheets[0].Columns[1].Visible = true;
                        }

                        if ((staffcount == 1) && (flag = false))
                        {
                            //int rwspn = fpsalary.Sheets[0].RowCount++;
                            //fpsalary.Sheets[0].AddSpanCell(rwspn, 0, 1, fpsalary.Sheets[0].ColumnCount - 1);
                        }
                        if (staffcount == no_of_staff)
                        {


                        }
                        else
                        {
                            //int rwspn = fpsalary.Sheets[0].RowCount++;
                            //fpsalary.Sheets[0].AddSpanCell(rwspn, 0, 1, fpsalary.Sheets[0].ColumnCount - 1);
                        }

                    }
                    else
                    {
                        ////////////
                        //if (fpsalary.Sheets[0].RowCount - 1 > 0)
                        //{
                        //    flag = true;
                        //    staffcount = 0;
                        //    fpsalary.Sheets[0].RowCount++;


                        //    fpsalary.Sheets[0].Rows[fpsalary.Sheets[0].RowCount - 1].Font.Bold = true;
                        //    fpsalary.Sheets[0].Rows[fpsalary.Sheets[0].RowCount - 1].Font.Size = FontUnit.Large;

                        //    fpsalary.Sheets[0].Rows[fpsalary.Sheets[0].RowCount - 1].HorizontalAlign = HorizontalAlign.Right;
                        //    fpsalary.Sheets[0].AddSpanCell(fpsalary.Sheets[0].RowCount - 1, 0, 1, 3);
                        //    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Text = "C/O";
                        //    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Font.Bold = true;
                        //    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Large;
                        //    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Right;
                        //    for (int intColCtr = 13; intColCtr < fpsalary.Sheets[0].ColumnCount - 1; intColCtr++)
                        //    {
                        //        IntMTotal = 0;
                        //        for (int IntRowCtr = total_row_count; IntRowCtr < fpsalary.Sheets[0].RowCount - 1; IntRowCtr++)
                        //        {
                        //            IntMTemp = 0;
                        //            if (fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text != "-")
                        //            {
                        //                if (fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text != "")
                        //                {
                        //                    string calval = fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text.ToString();
                        //                    Double num = 0;
                        //                    if (Double.TryParse(calval, out num))
                        //                    {
                        //                        IntMTemp = Convert.ToDouble(fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text);
                        //                    }
                        //                }
                        //                else
                        //                {
                        //                    IntMTemp = 0;
                        //                }
                        //            }
                        //            else
                        //            {
                        //                IntMTemp = 0;
                        //            }
                        //            IntMTotal = IntMTemp + IntMTotal;
                        //        }
                        //        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].Text = IntMTotal > 0 ? IntMTotal + "" : "0";
                        //        if (hsamount.Contains(intColCtr))
                        //        {
                        //            double amount = Convert.ToDouble(GetCorrespondingKey(intColCtr, hsamount));
                        //            amount = amount + IntMTotal;
                        //            hsamount[intColCtr] = IntMTotal;

                        //        }
                        //        else
                        //        {
                        //            hsamount.Add(intColCtr, IntMTotal);
                        //        }
                        //    }
                        //}
                        if (fpsalary.Sheets[0].RowCount - 1 > 0)
                        {
                            flag = true;
                            staffcount = 0;
                            fpsalary.Sheets[0].RowCount = fpsalary.Sheets[0].RowCount + 2;
                            fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 2, 0, 2, 13);
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Text = "C/O";
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Text = "C/O";
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Font.Bold = true;
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Font.Size = FontUnit.Large;
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].HorizontalAlign = HorizontalAlign.Right;
                            for (int decnt = 0; decnt <= 2; decnt++)
                            {
                                for (int p = 13; p <= colcount1 - 1; p++)
                                {
                                    string headval2 = fpsalary.Sheets[0].ColumnHeader.Cells[decnt, p].Text.Trim();
                                    if (headval2.Trim() != "" && headval2 != null)
                                    {
                                        if (hatco.ContainsKey(headval2))
                                        {
                                            int rowset = 0;
                                            if (decnt == 0)
                                            {
                                                rowset = 2;
                                            }
                                            else
                                            {
                                                rowset = 3 - decnt;
                                            }
                                            if (headval2 == "Grade Pay")
                                            {
                                                rowset = 1;
                                            }
                                            string gettot = hatco[headval2].ToString();
                                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, p].Text = gettot;
                                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, p].Font.Bold = true;
                                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, p].Font.Size = FontUnit.Large;
                                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, p].HorizontalAlign = HorizontalAlign.Right;
                                            hatco[headval2] = 0;
                                        }
                                    }
                                }
                            }
                        }
                        total_row_count = fpsalary.Sheets[0].RowCount;
                        stcnt--;
                    }
                }
                {
                    if (fpsalary.Sheets[0].RowCount - 1 > 0)
                    {
                        fpsalary.Sheets[0].RowCount = fpsalary.Sheets[0].RowCount + 2;
                        fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 2, 0, 2, 13);
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Text = "C/O";
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Text = "C/O";
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Font.Bold = true;
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Font.Size = FontUnit.Large;
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].HorizontalAlign = HorizontalAlign.Right;
                        for (int decnt = 0; decnt <= 2; decnt++)
                        {
                            for (int p = 12; p <= colcount1 - 1; p++)
                            {
                                string headval2 = fpsalary.Sheets[0].ColumnHeader.Cells[decnt, p].Text;
                                if (headval2.Trim() != "" && headval2 != null)
                                {
                                    if (hatco.ContainsKey(headval2))
                                    {
                                        int rowset = 0;
                                        if (decnt == 0)
                                        {
                                            rowset = 2;
                                        }
                                        else
                                        {
                                            rowset = 3 - decnt;
                                        }
                                        if (headval2 == "Grade Pay")
                                        {
                                            rowset = 1;
                                        }
                                        string gettot = hatco[headval2].ToString();
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, p].Text = gettot;
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, p].Font.Bold = true;
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, p].Font.Size = FontUnit.Large;
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, p].HorizontalAlign = HorizontalAlign.Right;
                                        hatco[headval2] = 0;
                                    }
                                }
                            }
                        }
                        fpsalary.Sheets[0].RowCount = fpsalary.Sheets[0].RowCount + 2;
                        fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 2, 0, 2, 13);
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Text = "TOTAL";
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Text = "TOTAL";
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Font.Bold = true;
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Font.Size = FontUnit.Large;
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].HorizontalAlign = HorizontalAlign.Right;
                        for (int gk = 0; gk <= 2; gk++)
                        {
                            for (int k = 13; k <= colcount1 - 1; k++)
                            {
                                int rowset = 0;
                                if (gk == 0)
                                {
                                    rowset = 2;
                                }
                                else
                                {
                                    rowset = 3 - gk;
                                }
                                string headval = fpsalary.Sheets[0].ColumnHeader.Cells[gk, k].Text;
                                if (headval.Trim() != "" && headval != null)
                                {
                                    if (hatbf.ContainsKey(headval))
                                    {
                                        if (headval == "Grade Pay")
                                        {
                                            rowset = 1;
                                        }
                                        string values = hatbf[headval].ToString();
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, k].Text = values.ToString();
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, k].Font.Bold = true;
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, k].Font.Size = FontUnit.Large;
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, k].HorizontalAlign = HorizontalAlign.Right;
                                    }
                                }
                            }
                        }

                    }
                    //fpsalary.Sheets[0].RowCount++;

                    //fpsalary.Sheets[0].Rows[fpsalary.Sheets[0].RowCount - 1].Font.Bold = true;
                    //fpsalary.Sheets[0].Rows[fpsalary.Sheets[0].RowCount - 1].Font.Size = FontUnit.Large;
                    //fpsalary.Sheets[0].Rows[fpsalary.Sheets[0].RowCount - 1].HorizontalAlign = HorizontalAlign.Right;
                    //fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Text = "Total";
                    //fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Font.Bold = true;
                    //fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                    //fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Large;
                    //fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 1, 0, 1, 13);
                    //for (int intColCtr = 13; intColCtr < fpsalary.Sheets[0].ColumnCount - 1; intColCtr++)
                    //{
                    //    IntMTotal = 0;
                    //    for (int IntRowCtr = total_row_count; IntRowCtr < fpsalary.Sheets[0].RowCount - 1; IntRowCtr++)
                    //    {
                    //        IntMTemp = 0;
                    //        if (fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text != "-")
                    //        {
                    //            if (fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text != "")
                    //            {
                    //                string calval = fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text.ToString();
                    //                Double num = 0;
                    //                if (Double.TryParse(calval, out num))
                    //                {
                    //                    IntMTemp = Convert.ToDouble(fpsalary.Sheets[0].Cells[IntRowCtr, intColCtr].Text);
                    //                }
                    //            }
                    //            else
                    //            {
                    //                IntMTemp = 0;
                    //            }
                    //        }
                    //        else
                    //        {
                    //            IntMTemp = 0;
                    //        }
                    //        IntMTotal = IntMTemp + IntMTotal;
                    //    }
                    //    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, intColCtr].Text = IntMTotal > 0 ? IntMTotal + "" : "0";
                    //}
                }
                for (int l = 0; l < fpsalary.Sheets[0].ColumnCount; l++)
                {
                    if (l != 1)
                    {
                        fpsalary.Sheets[0].Columns[l].Locked = true;
                    }
                }
                btnpayslip.Visible = true;
                salcer.Visible = true;
                chkdays.Visible = true;
                lblexcel.Visible = true;
                txtexcel.Visible = true;
                btnexcel.Visible = true;
                btnprintmaster.Visible = true;
                Button3.Visible = true;
            }
            else
            {
                lblexcel.Visible = false;
                txtexcel.Visible = false;
                btnexcel.Visible = false;
                fpsalary.Visible = false;
                btnprintmaster.Visible = false;
                Button3.Visible = false;
                Printcontrol.Visible = false;
                GridPrintmaster.Visible = false;

                lblnorec.Visible = true;
                emailpanel.Visible = false;
                txtsms.Visible = false;
                btnsendsms.Visible = false;
                lblnorec.Text = "No Records Found";
                // added by sridhar 17 sep 2014 -------------------Start
                lblpurpose1.Visible = false;
                ddlpurpose.Visible = false;
                FpSpread2.Visible = false;
                btnaddtemplate.Visible = false;
                btndeletetemplate.Visible = false;
                // added by sridhar 17 sep 2014 -------------------End
            }
            fpsalary.Sheets[0].PageSize = fpsalary.Sheets[0].RowCount;
            if (fpsalary.Sheets[0].RowCount > 20)
            {
                fpsalary.Height = 300 + (fpsalary.Sheets[0].RowCount * 20);

            }
            try
            {
                string setvalue = "";
                for (int sv = 0; sv < cblsearch.Items.Count; sv++)
                {
                    if (cblsearch.Items[sv].Selected == true)
                    {
                        if (setvalue == "")
                        {
                            setvalue = "" + sv + "";
                        }
                        else
                        {
                            setvalue = setvalue + "," + sv + "";
                        }
                    }
                }

                string strquery = "if exists (select * from Master_Settings where settings='Salary1 report') update Master_Settings set value='" + setvalue + "' where settings='Salary1 report' else insert into Master_Settings (settings,value) values('Salary1 report','" + setvalue + "')";
                int insert = d2.update_method_wo_parameter(strquery, "Text");
            }
            catch
            {
            }
        }
        catch (Exception ex)
        {
            lblnorec.Visible = true;
            lblnorec.Text = ex.ToString();
        }
    }

    public void new_format4() // added by sridhar 14 oct 2014 start
    {
        try
        {
            fpsalary.Sheets[0].RowCount = 0;
            fpsalary.Sheets[0].ColumnCount = 0;
            fpsalary.Sheets[0].ColumnHeader.RowCount = 1;
            darkstyle.Font.Bold = true;
            darkstyle.Font.Name = "Book Antiqua";
            darkstyle.Font.Size = FontUnit.Medium;
            darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
            darkstyle.ForeColor = Color.Black;
            darkstyle.HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.DefaultStyle = darkstyle;
            ArrayList col_allowns = new ArrayList();
            ArrayList col_deducts = new ArrayList();
            Hashtable position_hash = new Hashtable();
            Hashtable position_hash1 = new Hashtable(); // Modify by jairam 05-12-2014 
            position_hash.Clear();
            Hashtable col_tol_position = new Hashtable();
            Hashtable column_count = new Hashtable();
            ArrayList hide_columns = new ArrayList();
            FarPoint.Web.Spread.TextCellType txt = new FarPoint.Web.Spread.TextCellType();
            int count_allowns = 0;
            int count_deducts = 0;
            int overall_count = 0;
            col_allowns.Clear();
            col_deducts.Clear();
            int countdeducts = 0;
            for (int i = 0; i < cblallowance.Items.Count; i++)
            {
                if (cblallowance.Items[i].Selected == true)
                {
                    ccountforallow++;
                    col_allowns.Add(cblallowance.Items[i].ToString());

                }
            }
            for (int i = 0; i < cbldeduction.Items.Count; i++)
            {
                if (cbldeduction.Items[i].Selected == true)
                {
                    countdeducts++;
                    col_deducts.Add(cbldeduction.Items[i].ToString());
                }
            }

            if (cblsearch.Items[1].Selected == false)
            {
                hide_columns.Add(6);
            }
            if (cblsearch.Items[2].Selected == false)
            {
                hide_columns.Add(4);
            }
            if (cblsearch.Items[3].Selected == false)
            {
                hide_columns.Add(5);
            }
            if (cblsearch.Items[4].Selected == false)
            {
                hide_columns.Add(7);
            }
            //if (cblsearch.Items[5].Selected == false)
            //{
            //    hide_columns.Add(6);
            //}
            if (cblsearch.Items[30].Selected == false)
            {
                hide_columns.Add(2);
            }



            fpsalary.Sheets[0].AutoPostBack = false;

            fpsalary.Sheets[0].RowCount = 0;
            fpsalary.Sheets[0].RowHeader.Visible = false;
            fpsalary.CommandBar.Visible = false;
            fpsalary.Visible = false;
            fpsalary.Sheets[0].ColumnCount = 14;

            count_allowns = col_allowns.Count;
            if (count_allowns > 0)
            {
                count_allowns--;
            }
            else
            {

            }

            //count_deducts = col_deducts.Count;
            //overall_count = count_allowns + count_deducts + 3;

            //fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + overall_count + 2;

            fpsalary.Sheets[0].DefaultStyle.Font.Name = "Book Antiqua";
            fpsalary.Sheets[0].DefaultStyle.Font.Size = FontUnit.Medium;
            fpsalary.Sheets[0].DefaultStyle.Font.Bold = true;
            fpsalary.Sheets[0].DefaultStyle.Locked = true;
            fpsalary.Height = 600;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Left;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Staff Name";
            fpsalary.Sheets[0].Columns[2].Width = 130;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;


            fpsalary.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Staff Code";
            fpsalary.Sheets[0].Columns[2].Width = 130;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;




            fpsalary.Sheets[0].ColumnHeader.Cells[0, 3].Text = "SB NO";
            fpsalary.Sheets[0].Columns[2].CellType = txt;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Dept";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Dept Acronym";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 5].Font.Size = FontUnit.Medium;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 5].Font.Name = "Book Antiqua";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 5].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 5].Font.Bold = true;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Designation";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 6].Font.Size = FontUnit.Medium;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 6].Font.Name = "Book Antiqua";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 6].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 6].Font.Bold = true;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 7].Text = "Design Acronym";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 7].Font.Size = FontUnit.Medium;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 7].Font.Name = "Book Antiqua";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 7].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 7].Font.Bold = true;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 8].Text = "Basic Pay";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 8].Font.Size = FontUnit.Medium;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 8].Font.Name = "Book Antiqua";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 8].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 8].Font.Bold = true;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 9].Text = "Grade Pay";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 9].Font.Size = FontUnit.Medium;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 9].Font.Name = "Book Antiqua";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 9].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 9].Font.Bold = true;


            fpsalary.Sheets[0].ColumnHeader.Cells[0, 10].Text = "Pay + GP";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 10].Font.Size = FontUnit.Medium;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 10].Font.Name = "Book Antiqua";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 10].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 10].Font.Bold = true;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 11].Text = "DA";
            position_hash.Add("DA", 11);
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 11].Font.Size = FontUnit.Medium;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 11].Font.Name = "Book Antiqua";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 11].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 11].Font.Bold = true;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 12].Text = "PFSAL";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 12].Font.Size = FontUnit.Medium;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 12].Font.Name = "Book Antiqua";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 12].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 12].Font.Bold = true;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 13].Text = "TOT 1";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 13].Font.Size = FontUnit.Medium;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 13].Font.Name = "Book Antiqua";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 13].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 13].Font.Bold = true;
            int check_allowns_deducts_count = 0;
            int current_column = 14;
            fpsalary.Width = 960;
            fpsalary.Sheets[0].GridLineColor = Color.Black;

            //  fpsalary.Sheets[0].FrozenColumnCount = 7;

            for (int i = 0; i < col_allowns.Count; i++)
            {
                string col_allowns_name = col_allowns[i].ToString();
                if (col_allowns_name != "DA")
                {
                    fpsalary.Sheets[0].ColumnCount++;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Text = col_allowns_name;
                    position_hash.Add(col_allowns_name, fpsalary.Sheets[0].ColumnCount - 1);
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Bold = true;
                    current_column++;
                    check_allowns_deducts_count++;
                }

            }

            fpsalary.Sheets[0].ColumnCount++;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Text = "TOT 2";
            col_tol_position.Add("tot2", fpsalary.Sheets[0].ColumnCount - 1);
            if (count_allowns == 0)
            {
                hide_columns.Add(fpsalary.Sheets[0].ColumnCount - 1);
            }
            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Bold = true;

            fpsalary.Sheets[0].ColumnCount++;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Text = "FPF";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Bold = true;
            column_count.Add("FPF", fpsalary.Sheets[0].ColumnCount - 1);
            fpsalary.Sheets[0].ColumnCount++;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Text = "Difference";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Bold = true;
            column_count.Add("Difference", fpsalary.Sheets[0].ColumnCount - 1);
            current_column++;

            for (int i = 0; i < col_deducts.Count; i++)
            {
                string col_deducts_name = col_deducts[i].ToString();
                fpsalary.Sheets[0].ColumnCount++;
                fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Text = col_deducts_name;
                position_hash1.Add(col_deducts_name, fpsalary.Sheets[0].ColumnCount - 1);
                fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Bold = true;
                count_deducts++;

                current_column++;
            }

            fpsalary.Sheets[0].ColumnCount++;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Text = "TOT 3";
            col_tol_position.Add("tot3", fpsalary.Sheets[0].ColumnCount - 1);
            if (count_deducts == 0)
            {
                hide_columns.Add(fpsalary.Sheets[0].ColumnCount - 1);
            }
            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Bold = true;

            fpsalary.Sheets[0].ColumnCount++;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Text = "Net Salary";
            //if (count_deducts == 0 && count_allowns == 0) 
            //{
            //    hide_columns.Add(current_column);
            //}

            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.Cells[0, fpsalary.Sheets[0].ColumnCount - 1].Font.Bold = true;

            fpsalary.Visible = true;

            sql1 = "select * from incentives_master where college_code=" + Session["collegecode"] + "";
            sql1 = sql1 + " ;select CONVERT(VARCHAR(10),from_date,103) as from_date,convert(VARCHAR(10),to_date,103) as to_date from hrpaymonths where paymonthnum='" + cblmonth.SelectedItem.Value.ToString() + "' and college_Code=" + Session["collegecode"].ToString() + ""; // Added by jairam 13-11-2014 
            sql1 = sql1 + " ;select isnull(collname, ' ') as collname,isnull(address1, ' ') as address1,isnull(address2,' ') as address2,isnull(address3, ' ') as address3,isnull(pincode,' ') as pincode from collinfo where college_code='" + Session["collegecode"].ToString() + "'";
            sql1 = sql1 + " ;select shortname from leave_category where status<>'pres' and college_code='" + Session["collegecode"] + "'";
            DataSet dsset = d2.select_method_wo_parameter(sql1, "Text");

            string fromdate = "";
            string todate = "";
            if (dsset.Tables[1].Rows.Count > 0)
            {
                fromdate = dsset.Tables[1].Rows[0]["from_date"].ToString();
                Txtentryfrom.Text = fromdate;
                todate = dsset.Tables[1].Rows[0]["to_date"].ToString();
                Txtentryto.Text = todate;
            }
            string datefrom;
            string dateto;
            string date1;
            string date2;


            date1 = Txtentryfrom.Text.ToString();
            string[] split = date1.Split(new Char[] { '/' });
            datefrom = split[1].ToString() + "/" + split[0].ToString() + "/" + split[2].ToString();
            date2 = Txtentryto.Text.ToString();
            string[] split1 = date2.Split(new Char[] { '/' });
            dateto = split1[1].ToString() + "/" + split1[0].ToString() + "/" + split1[2].ToString();

            // sql = " SELECT monthlypay.*,desig_master.priority,dept_acronym,staff_name,bankaccount,pfnumber,CONVERT(VARCHAR(10),staffmaster.join_date,103) as joindate,monthlypay.pay_band,monthlypay.grade_pay,desig_master.desig_acronym,monthlypay.LOP,len(staffmaster.staff_code),staffmaster.staff_code,desig_master.print_pri,monthlypay.PF_Salary,monthlypay.ESI_Salary,hrdept_master.dept_name as deptname,desig_master.desig_name as designame,stafftrans.deductions as deduct,staffmaster.resign  from monthlypay,desig_master,stafftrans,staffmaster,hrdept_master Where hrdept_master.dept_code=stafftrans.dept_code and stafftrans.staff_code=monthlypay.staff_code and stafftrans.latestrec=1 and desig_master.desig_code=stafftrans.desig_code and monthlypay.fdate ='" + datefrom + "' and monthlypay.tdate ='" + dateto + "'and monthlypay.college_code=" + Session["collegecode"] + " and desig_master.collegecode=" + Session["collegecode"] + " and staffmaster.staff_code=monthlypay.staff_code   and ((staffmaster.resign=0 or staffmaster.settled=0) or(staffmaster.resign=1 and staffmaster.relieve_date>='" + dateto + "') or (staffmaster.resign=1 and staffmaster.relieve_date between '" + datefrom + "' and '" + dateto + "'))  "; // added by srinath 3/1/2015
            sql = " SELECT monthlypay.*,desig_master.priority,dept_acronym,staff_name,bankaccount,pfnumber,CONVERT(VARCHAR(10),staffmaster.join_date,103) as joindate,monthlypay.pay_band,monthlypay.grade_pay,desig_master.desig_acronym,monthlypay.LOP,len(staffmaster.staff_code),staffmaster.staff_code,desig_master.print_pri,monthlypay.PF_Salary,monthlypay.ESI_Salary,hrdept_master.dept_name as deptname,desig_master.desig_name as designame,stafftrans.deductions as deduct,staffmaster.resign  from monthlypay,desig_master,stafftrans,staffmaster,hrdept_master Where hrdept_master.dept_code=stafftrans.dept_code and stafftrans.staff_code=monthlypay.staff_code and stafftrans.latestrec=1 and desig_master.desig_code=stafftrans.desig_code and monthlypay.PayYear='" + ddlyear2.SelectedValue.ToString() + "' and monthlypay.PayMonth='" + cblmonth.SelectedValue.ToString() + "' and monthlypay.college_code=" + Session["collegecode"] + " and desig_master.collegecode=" + Session["collegecode"] + " and staffmaster.staff_code=monthlypay.staff_code   and ((staffmaster.resign=0 or staffmaster.settled=0) or(staffmaster.resign=1 and staffmaster.relieve_date>='" + dateto + "') or (staffmaster.resign=1 and staffmaster.relieve_date between '" + datefrom + "' and '" + dateto + "'))  "; // added by srinath 3/1/2015
            if (tbseattype.Text != "---Select---")
            {
                int itemcount = 0;
                for (itemcount = 0; itemcount < cbldepttype.Items.Count; itemcount++)
                {
                    if (cbldepttype.Items[itemcount].Selected == true)
                    {
                        if (strdept == "")
                            strdept = "'" + cbldepttype.Items[itemcount].Value.ToString() + "'";
                        else
                            strdept = strdept + "," + "'" + cbldepttype.Items[itemcount].Value.ToString() + "'";
                    }
                }


                if (strdept != "")
                {
                    strdept = " in(" + strdept + ")";
                }
                sql = sql + " and hrdept_master.dept_code " + strdept + "";
            }
            if (tbblood.Text != "---Select---")
            {


                int itemcount1 = 0;

                for (itemcount1 = 0; itemcount1 < cblcategory.Items.Count; itemcount1++)
                {
                    if (cblcategory.Items[itemcount1].Selected == true)
                    {
                        if (strcategory == "")
                            strcategory = "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                        else
                            strcategory = strcategory + "," + "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                    }
                }


                if (strcategory != "")
                {
                    strcategory = " in (" + strcategory + ")";
                }
                sql = sql + "  and stafftrans.category_code" + strcategory + "";
            }
            if (ddlpfcategory.SelectedItem.Text != "All")
            {
                sql = sql + " and isnull(staffmaster.is_pf,0)=" + ddlpfcategory.SelectedItem.Value.ToString() + "";
            }
            if (cb_hold.Checked == true)//delsi 1002
            {
                sql = sql + " and isnull(monthlypay.staffholdSet,'') in('','1','2')";
            }
            else
            {
                sql = sql + " and isnull(monthlypay.staffholdSet,'') in('','2')";
            }
            //if (ddlorder.SelectedItem.Text.ToString() == "Priority")
            //{
            //    sql = sql + " order by hrdept_master.priority,desig_master.priority,hrdept_master.dept_name,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code ";//Modified By Srinath 28/3/2014
            //}
            //else
            //{
            //    sql = sql + " order by hrdept_master.dept_name,len(staffmaster.staff_code),staffmaster.staff_code";//Modified By Srinath 28/3/2014
            //}
            if (ddlorder.SelectedItem.Text.ToString() == "Priority")
            {
                sql = sql + " order by hrdept_master.priority,desig_master.priority,hrdept_master.dept_name,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code ";//Modified By Srinath 28/3/2014
            }
            //******************Modified By Subburaj 16.08.2014***********//
            else if (ddlorder.SelectedItem.Text.ToString() == "Print Priority-1")
            {
                sql = sql + " order by hrdept_master.priority,  desig_Master.priority,  staffmaster.PrintPriority,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code";
            }
            else if (ddlorder.SelectedItem.Text.ToString() == "Print Priority-2")
            {
                sql = sql + " order by hrdept_master.priority1, desig_master.print_pri,  staffmaster.PrintPriority,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code";
            }
            //*******************************End*****************************// 
            else if (ddlorder.SelectedItem.Text.ToString() == "Account No")
            {
                sql = sql + " order by case when staffmaster.bankaccount is null then 1 else 0 end,len(staffmaster.bankaccount), staffmaster.bankaccount";
            }
            else if (ddlorder.SelectedItem.Text.ToString() == "Staff Wise Priority")// added by sridhar 22 sep 2014
            {
                sql = sql + "order by isnull(staffmaster.PrintPriority,0) ";
            }
            else
            {
                sql = sql + " order by hrdept_master.dept_name,len(staffmaster.staff_code),staffmaster.staff_code";//Modified By Srinath 28/3/2014
            }
            //sql = sql + " select sa.per_mobileno,sa.email,sm.staff_code from staff_appl_master sa,staffmaster sm where sm.appl_no=sa.appl_no and sm.settled=0 and sm.resign=0";
            //modified by srinath 5/4/2014
            dsset.Reset();
            dsset.Dispose();
            dsset = d2.select_method_wo_parameter(sql, "Text");
            if (dsset.Tables[0].Rows.Count > 0)
            {
                int sno = 0;
                for (int sal = 0; sal < dsset.Tables[0].Rows.Count; sal++)
                {
                    fpsalary.Sheets[0].RowCount++;
                    sno++;
                    double totalamount_1 = 0, totalamount_2 = 0, totalamount_3 = 0;
                    string staffname = "";
                    int final_allowancecol = 0;
                    string joindate = "";
                    double bpay = 0;
                    double gpay = 0;
                    double bgpay = 0;

                    string dept = "";
                    string dept_acrronym = "";
                    string designation = "";
                    string allowance = "";
                    string deduction = "";
                    string basicpay = "";
                    string bascic = "";
                    string AGP = "";
                    string Increment = "";
                    string Incrementtime = "";
                    string category = "";
                    string netadd = "";
                    string totalded = "";
                    string netpay = "";
                    string desig_acronym = "";
                    string design_acc = "";
                    string staffcode1 = "";
                    string BasicLOP;
                    double max_cal_amount = 0;
                    string deduction_iscallamount = dsset.Tables[0].Rows[sal]["deduct"].ToString();
                    string[] split_main = deduction_iscallamount.Split('\\');
                    if (split_main.Length > 0)
                    {
                        for (int count = 0; count <= split_main.GetUpperBound(0); count++)
                        {
                            string secondvlaue = Convert.ToString(split_main[count]);
                            if (secondvlaue.Trim() != "")
                            {
                                string[] second_split_value = secondvlaue.Split(';');
                                if (second_split_value.Length > 0)
                                {
                                    string type = Convert.ToString(second_split_value[0]);
                                    if (type.Trim().ToUpper() == "PF")
                                    {
                                        string is_max_cal_amount = Convert.ToString(second_split_value[12]);
                                        if (is_max_cal_amount.Trim() == "1")
                                        {
                                            max_cal_amount = Convert.ToDouble(second_split_value[13]);
                                        }
                                    }
                                }
                            }
                        }
                    }


                    fpsalary.Sheets[0].Cells[sal, 0].Text = Convert.ToString(sal + 1);
                    fpsalary.Sheets[0].Cells[sal, 0].HorizontalAlign = HorizontalAlign.Center;

                    string staffcode = dsset.Tables[0].Rows[sal]["staff_code"].ToString();
                    staffname = dsset.Tables[0].Rows[sal]["staff_name"].ToString();



                    fpsalary.Sheets[0].Cells[sal, 1].Text = staffname;
                    fpsalary.Sheets[0].Cells[sal, 1].Tag = staffcode;
                    fpsalary.Sheets[0].Cells[sal, 1].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].Cells[sal, 1].VerticalAlign = VerticalAlign.Middle;


                    fpsalary.Sheets[0].Cells[sal, 2].Text = staffcode;
                    fpsalary.Sheets[0].Cells[sal, 2].CellType = txt;
                    fpsalary.Sheets[0].Cells[sal, 2].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].Cells[sal, 2].VerticalAlign = VerticalAlign.Middle;

                    string banaccount = dsset.Tables[0].Rows[sal]["bankaccount"].ToString();





                    fpsalary.Sheets[0].Cells[sal, 3].Text = Convert.ToString(banaccount);
                    fpsalary.Sheets[0].Cells[sal, 3].CellType = txt;



                    fpsalary.Sheets[0].Cells[sal, 3].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].Cells[sal, 3].VerticalAlign = VerticalAlign.Middle;

                    dept = dsset.Tables[0].Rows[sal]["deptname"].ToString(); // added by jairam 13-11-2014
                    fpsalary.Sheets[0].Cells[sal, 4].Text = dept;
                    fpsalary.Sheets[0].Cells[sal, 4].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].Cells[sal, 4].VerticalAlign = VerticalAlign.Middle;

                    dept_acrronym = dsset.Tables[0].Rows[sal]["dept_acronym"].ToString();
                    fpsalary.Sheets[0].Cells[sal, 5].Text = dept_acrronym;
                    fpsalary.Sheets[0].Cells[sal, 5].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].Cells[sal, 5].VerticalAlign = VerticalAlign.Middle;

                    designation = dsset.Tables[0].Rows[sal]["designame"].ToString(); // added by jairam 13-11-2014
                    fpsalary.Sheets[0].Cells[sal, 6].Text = designation;
                    fpsalary.Sheets[0].Cells[sal, 6].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].Cells[sal, 6].VerticalAlign = VerticalAlign.Middle;

                    desig_acronym = dsset.Tables[0].Rows[sal]["desig_acronym"].ToString();
                    fpsalary.Sheets[0].Cells[sal, 7].Text = desig_acronym;
                    fpsalary.Sheets[0].Cells[sal, 7].HorizontalAlign = HorizontalAlign.Left;
                    fpsalary.Sheets[0].Cells[sal, 7].VerticalAlign = VerticalAlign.Middle;

                    string regisin = dsset.Tables[0].Rows[sal]["resign"].ToString();
                    if (regisin.Trim().ToLower() == "true" || regisin.Trim() == "1")
                    {
                        fpsalary.Sheets[0].Rows[sal].BackColor = Color.Pink;
                    }

                    basicpay = dsset.Tables[0].Rows[sal]["bsalary"].ToString();
                    if (basicpay.Trim() != "")
                    {
                        bpay = Convert.ToDouble(basicpay);
                    }
                    else
                    {
                        bpay = 0;
                    }
                    fpsalary.Sheets[0].Cells[sal, 8].Text = Convert.ToString(Math.Round(Convert.ToDouble(basicpay), 0, MidpointRounding.AwayFromZero)); ;
                    fpsalary.Sheets[0].Cells[sal, 8].HorizontalAlign = HorizontalAlign.Right;
                    fpsalary.Sheets[0].Cells[sal, 8].VerticalAlign = VerticalAlign.Middle;

                    string gradepay = dsset.Tables[0].Rows[sal]["G_Pay"].ToString();

                    if (gradepay.Trim() != "")
                    {
                        gpay = Convert.ToDouble(gradepay);
                    }
                    else
                    {
                        gpay = 0;
                    }


                    fpsalary.Sheets[0].Cells[sal, 9].Text = gradepay;
                    fpsalary.Sheets[0].Cells[sal, 9].HorizontalAlign = HorizontalAlign.Right;
                    fpsalary.Sheets[0].Cells[sal, 9].VerticalAlign = VerticalAlign.Middle;

                    bgpay = bpay + gpay;
                    fpsalary.Sheets[0].Cells[sal, 10].Text = Convert.ToString(Math.Round(bgpay, 0, MidpointRounding.AwayFromZero));
                    fpsalary.Sheets[0].Cells[sal, 10].HorizontalAlign = HorizontalAlign.Right;
                    fpsalary.Sheets[0].Cells[sal, 10].VerticalAlign = VerticalAlign.Middle;

                    string pfsalary = dsset.Tables[0].Rows[sal]["PF_Salary"].ToString();
                    if (pfsalary.Trim() == "")
                    {
                        pfsalary = "0";
                    }



                    totalamount_1 = bgpay + gpay;

                    allowance = dsset.Tables[0].Rows[sal]["allowances"].ToString();

                    string[] split_allowancess = allowance.Split('\\');
                    for (int j = 0; j < split_allowancess.GetUpperBound(0); j++)
                    {
                        string parts_allowances = split_allowancess[j];
                        string[] newallow_split = parts_allowances.Split(';');
                        if (newallow_split.GetUpperBound(0) > 0)
                        {
                            string allowstitle = newallow_split[0];
                            double amt_allowns = Convert.ToDouble(newallow_split[3]);
                            if (position_hash.Contains(allowstitle) == true)
                            {
                                int rowval_allowns = Convert.ToInt32(position_hash[allowstitle]);
                                fpsalary.Sheets[0].Cells[sal, rowval_allowns].Text = Convert.ToString(Math.Round(Convert.ToDouble(amt_allowns), 0, MidpointRounding.AwayFromZero));
                                fpsalary.Sheets[0].Cells[sal, rowval_allowns].HorizontalAlign = HorizontalAlign.Right;
                                fpsalary.Sheets[0].Cells[sal, rowval_allowns].VerticalAlign = VerticalAlign.Middle;
                                //final_allowancecol = rowval_allowns;
                                if (allowstitle.Trim() == "DA")
                                {
                                    totalamount_1 = totalamount_1 + amt_allowns;
                                }
                                else
                                {

                                    totalamount_2 = totalamount_2 + amt_allowns;

                                }

                            }

                        }
                    }

                    if (max_cal_amount < totalamount_1)
                    {
                        fpsalary.Sheets[0].Cells[sal, 12].Text = Convert.ToString(Math.Round(Convert.ToDouble(max_cal_amount), 0, MidpointRounding.AwayFromZero));
                        fpsalary.Sheets[0].Cells[sal, 12].HorizontalAlign = HorizontalAlign.Right;
                        fpsalary.Sheets[0].Cells[sal, 12].VerticalAlign = VerticalAlign.Middle;
                    }
                    else if (max_cal_amount > totalamount_1)
                    {
                        fpsalary.Sheets[0].Cells[sal, 12].Text = Convert.ToString(Math.Round(Convert.ToDouble(totalamount_1), 0, MidpointRounding.AwayFromZero));
                        fpsalary.Sheets[0].Cells[sal, 12].HorizontalAlign = HorizontalAlign.Right;
                        fpsalary.Sheets[0].Cells[sal, 12].VerticalAlign = VerticalAlign.Middle;
                    }



                    fpsalary.Sheets[0].Cells[sal, 13].Text = Convert.ToString(Math.Round(totalamount_1, 0, MidpointRounding.AwayFromZero));
                    fpsalary.Sheets[0].Cells[sal, 13].HorizontalAlign = HorizontalAlign.Right;
                    fpsalary.Sheets[0].Cells[sal, 13].VerticalAlign = VerticalAlign.Middle;







                    int position1 = Convert.ToInt32(col_tol_position["tot2"]);
                    double tot2_amount = totalamount_2 + totalamount_1;
                    fpsalary.Sheets[0].Cells[sal, position1].Text = Convert.ToString(Math.Round(tot2_amount, 0, MidpointRounding.AwayFromZero));
                    fpsalary.Sheets[0].Cells[sal, position1].HorizontalAlign = HorizontalAlign.Right;
                    fpsalary.Sheets[0].Cells[sal, position1].VerticalAlign = VerticalAlign.Middle;



                    deduction = dsset.Tables[0].Rows[sal]["deductions"].ToString();
                    int finaldeductionrow = 0;

                    string[] split_deductsx = deduction.Split('\\');
                    for (int j = 0; j < split_deductsx.GetUpperBound(0); j++)
                    {
                        string parts_deducts = split_deductsx[j];
                        string[] newdeducts_split = parts_deducts.Split(';');
                        if (newdeducts_split.GetUpperBound(0) > 0)
                        {
                            string deductstitle = newdeducts_split[0];
                            double amt_deducts = Convert.ToDouble(newdeducts_split[3]);
                            if (position_hash1.Contains(deductstitle) == true)
                            {
                                int rowval_deducts = Convert.ToInt32(position_hash1[deductstitle]);
                                fpsalary.Sheets[0].Cells[sal, rowval_deducts].Text = Convert.ToString(Math.Round(amt_deducts, 0, MidpointRounding.AwayFromZero));
                                fpsalary.Sheets[0].Cells[sal, rowval_deducts].HorizontalAlign = HorizontalAlign.Right;
                                fpsalary.Sheets[0].Cells[sal, rowval_deducts].VerticalAlign = VerticalAlign.Middle;

                                finaldeductionrow = rowval_deducts;
                                totalamount_3 = totalamount_3 + amt_deducts;
                            }

                        }
                    }

                    if (column_count.Count > 0)
                    {
                        int position_fpf = Convert.ToInt32(column_count["FPF"]);
                        double fpf_amount = Convert.ToDouble(dsset.Tables[0].Rows[sal]["fpf"]);
                        fpsalary.Sheets[0].Cells[sal, position_fpf].Text = Convert.ToString(Math.Round(fpf_amount, 0, MidpointRounding.AwayFromZero));
                        fpsalary.Sheets[0].Cells[sal, position_fpf].HorizontalAlign = HorizontalAlign.Right;
                        fpsalary.Sheets[0].Cells[sal, position_fpf].VerticalAlign = VerticalAlign.Middle;

                        int position_diff = Convert.ToInt32(column_count["Difference"]);

                        double differe_amount = Convert.ToDouble(dsset.Tables[0].Rows[sal]["pf"]) - fpf_amount;
                        fpsalary.Sheets[0].Cells[sal, position_diff].Text = Convert.ToString(Math.Round(differe_amount, 0, MidpointRounding.AwayFromZero));
                        fpsalary.Sheets[0].Cells[sal, position_diff].HorizontalAlign = HorizontalAlign.Right;
                        fpsalary.Sheets[0].Cells[sal, position_diff].VerticalAlign = VerticalAlign.Middle;
                    }


                    //if (count_deducts == 0 && count_allowns == 0)
                    //{
                    //    netpay = dsset.Tables[0].Rows[sal]["netsal"].ToString();
                    //    fpsalary.Sheets[0].Cells[sal, 15].Text = Convert.ToString(netpay);
                    //    fpsalary.Sheets[0].Cells[sal, 15].HorizontalAlign = HorizontalAlign.Right;
                    //    fpsalary.Sheets[0].Cells[sal, 15].VerticalAlign = VerticalAlign.Middle;
                    //}


                    //if (finaldeductionrow > 0)
                    //{

                    int position = Convert.ToInt32(col_tol_position["tot3"]);

                    fpsalary.Sheets[0].Cells[sal, position].Text = Convert.ToString(Math.Round(totalamount_3, 0, MidpointRounding.AwayFromZero));
                    fpsalary.Sheets[0].Cells[sal, position].HorizontalAlign = HorizontalAlign.Right;
                    fpsalary.Sheets[0].Cells[sal, position].VerticalAlign = VerticalAlign.Middle;
                    finaldeductionrow++;

                    netpay = Convert.ToString(Convert.ToDouble(tot2_amount) - Convert.ToDouble(totalamount_3));
                    fpsalary.Sheets[0].Cells[sal, position + 1].Text = Convert.ToString(Math.Round(Convert.ToDouble(netpay), 0, MidpointRounding.AwayFromZero));
                    fpsalary.Sheets[0].Cells[sal, position + 1].HorizontalAlign = HorizontalAlign.Right;
                    fpsalary.Sheets[0].Cells[sal, position + 1].VerticalAlign = VerticalAlign.Middle;

                    //}
                    //else if (count_deducts == 0 && count_allowns == 0)
                    //{
                    //    netpay = dsset.Tables[0].Rows[sal]["netsal"].ToString();
                    //    fpsalary.Sheets[0].Cells[sal, 15].Text = Convert.ToString(netpay);
                    //    fpsalary.Sheets[0].Cells[sal, 15].HorizontalAlign = HorizontalAlign.Right;
                    //    fpsalary.Sheets[0].Cells[sal, 15].VerticalAlign = VerticalAlign.Middle;
                    //}
                    //else if (final_allowancecol > 0)
                    //{
                    //    final_allowancecol = final_allowancecol + 2;
                    //    netpay = dsset.Tables[0].Rows[sal]["netsal"].ToString();
                    //    fpsalary.Sheets[0].Cells[sal, final_allowancecol].Text = Convert.ToString(netpay);
                    //    fpsalary.Sheets[0].Cells[sal, final_allowancecol].HorizontalAlign = HorizontalAlign.Right;
                    //    fpsalary.Sheets[0].Cells[sal, final_allowancecol].VerticalAlign = VerticalAlign.Middle;

                    //}





                    //  string actu_basicpay = dsset.Tables[0].Rows[sal]["basic_alone"].ToString();
                    // category = dsset.Tables[0].Rows[sal]["stftype"].ToString();
                    // netadd = dsset.Tables[0].Rows[sal]["netadd"].ToString();
                    // totalded = dsset.Tables[0].Rows[sal]["netded"].ToString();

                    //  BasicLOP = dsset.Tables[0].Rows[sal]["LOP"].ToString();
                    // string payband = dsset.Tables[0].Rows[sal]["pay_band"].ToString();

                    //bascic = dsset.Tables[0].Rows[sal]["Basic"].ToString();
                    //  AGP = dsset.Tables[0].Rows[sal]["AGP"].ToString();
                    // Increment = dsset.Tables[0].Rows[sal]["IncrementAmt"].ToString();
                    //  Incrementtime = dsset.Tables[0].Rows[sal]["IncrementTime"].ToString();



                    // string esisalary = dsset.Tables[0].Rows[sal]["ESI_Salary"].ToString();

                    //if (cblsearch.Items[30].Selected == true)
                    //{
                    //    fpsalary.Sheets[0].Columns[3].Visible = true;
                    //}
                    //else
                    //{
                    //    fpsalary.Sheets[0].Columns[3].Visible = false;

                    //}

                }

            }

            for (int j = 0; j < hide_columns.Count; j++)
            {
                int hide = Convert.ToInt32(hide_columns[j].ToString());
                fpsalary.Sheets[0].Columns[hide].Visible = false;

            }
            if (fpsalary.Sheets[0].RowCount > 0)
            {
                lblexcel.Visible = true;
                txtexcel.Visible = true;
                btnexcel.Visible = true;
                fpsalary.Visible = true;
                btnprintmaster.Visible = true;
                Button3.Visible = true;
            }
            else
            {
                lblexcel.Visible = false;
                txtexcel.Visible = false;
                btnexcel.Visible = false;
                btnprintmaster.Visible = false;
                Button3.Visible = false;
                fpsalary.Visible = false;
                lblnorec.Visible = true;
            }


            fpsalary.Sheets[0].PageSize = fpsalary.Sheets[0].RowCount;
        }
        catch (Exception ex)
        {
            lblnorec.Visible = true;
            lblnorec.Text = ex.ToString();
        }
    }// added by sridhar 14 oct 2014 end

    void load_slip2()
    {
        try
        {

            lblselect.Visible = true;

            string staffcode3 = "";
            string department3 = "";
            string staffname3 = "";
            string designation = "";
            string dept_name = "";
            string date3 = Txtentryfrom.Text.ToString();
            string datefrom3;
            int monthname1;
            string monyear;
            string monthname2 = "";
            int monthnamenum;
            string yearto = "";
            string monyearto = "";
            string[] split = date3.Split(new Char[] { '/' });
            FpSpread1.Sheets[0].SheetName = " ";
            //////////////page

            FpSpread1.Sheets[0].PageSize = 11;
            FpSpread1.Pager.Position = FarPoint.Web.Spread.PagerPosition.Bottom;
            FpSpread1.Pager.Mode = FarPoint.Web.Spread.PagerMode.Both;
            FpSpread1.Pager.Align = HorizontalAlign.Right;

            FpSpread1.Pager.ForeColor = Color.DarkGreen;
            FpSpread1.Pager.BackColor = Color.AliceBlue;
            FpSpread1.Pager.PageCount = 5;
            FpSpread1.Pager.Font.Bold = true;
            FpSpread1.Pager.Font.Name = "Arial";
            FpSpread1.Pager.ForeColor = Color.DarkGreen;
            FpSpread1.Pager.BackColor = Color.AliceBlue;


            //////////////////////////////////


            datefrom3 = split[1].ToString() + "/" + split[0].ToString() + "/" + split[2].ToString();

            string date4 = Txtentryto.Text.ToString();
            int year3 = Convert.ToInt16(split[2].ToString());


            string[] split1 = date4.Split(new Char[] { '/' });

            string dateto4 = split1[1].ToString() + "/" + split1[0].ToString() + "/" + split1[2].ToString();

            monthname2 = split1[0].ToString();
            monthnamenum = Convert.ToInt32(monthname2.ToString());
            yearto = split1[2].ToString();
            ///////

            string mnmae = split[1].ToString();
            monthname1 = Convert.ToInt16(mnmae);
            monthname2 = split1[1].ToString();
            monthnamenum = Convert.ToInt16(monthname2);

            string year = split[2].ToString();

            monyear = monthname1.ToString() + "/" + year;
            monyearto = monthnamenum.ToString() + "/" + yearto;

            string dayfrom;


            int count = 0;
            int count2 = 0;
            int count3 = 0;


            int rowstr = 0;
            FpSpread1.Sheets[0].RowCount = 0;
            FpSpread1.Sheets[0].PageSize = 30;

            fpsalary.SaveChanges();

            FpSpread1.Sheets[0].AutoPostBack = false;





            for (int res = 1; res <= Convert.ToInt32(fpsalary.Sheets[0].RowCount) - 1; res++)
            {


                int dayfrm = 0;
                string dayto;
                int daytonum;

                dayfrom = split[0].ToString();
                dayfrm = Convert.ToInt32(dayfrom);
                dayto = split1[0].ToString();
                daytonum = Convert.ToInt32(dayto);
                int isval = 0;
                isval = Convert.ToInt32(fpsalary.Sheets[0].Cells[res, 1].Value);

                if (isval == 1)
                {
                    Button2.Visible = true;
                    lblselect.Visible = false;
                    string monname = getmonth(monthname2);
                    staffcode3 = Convert.ToString(fpsalary.Sheets[0].Cells[res, 2].Tag);
                    staffname3 = Convert.ToString(fpsalary.Sheets[0].Cells[res, 2].Text);

                    if (staffcode3.Trim() != "")
                    {
                        // fpsalary.Sheets[0].Cells[rowstr - 3, 0].Tag = dept.ToString();
                        // fpsalary.Sheets[0].Cells[rowstr - 3, 0].Note = designation.ToString();


                        designation = Convert.ToString(fpsalary.Sheets[0].Cells[res, 0].Tag);
                        dept_name = Convert.ToString(fpsalary.Sheets[0].Cells[res, 0].Note);

                        FpSpread1.Sheets[0].RowCount = FpSpread1.Sheets[0].RowCount + 30;
                        FpSpread1.Visible = true;
                        // FpSpread1.Sheets[0].AutoPostBack = false;
                        FpSpread1.Sheets[0].ColumnHeaderVisible = false;
                        FpSpread1.Sheets[0].RowHeaderVisible = false;

                        rowstr = Convert.ToInt32(FpSpread1.Sheets[0].RowCount + 1);
                        FpSpread1.Sheets[0].ColumnCount = 6;

                        ////////////setcolumn width
                        FpSpread1.Sheets[0].Columns[0].Width = 150;
                        // FpSpread1.Sheets[0].Columns[2].Width = 150;
                        FpSpread1.Sheets[0].Columns[1].Width = 160;
                        FpSpread1.Sheets[0].Columns[3].Width = 160;
                        FpSpread1.Sheets[0].Columns[5].Width = 150;

                        FpSpread1.Sheets[0].Columns[0].Locked = true;
                        FpSpread1.Sheets[0].Columns[1].Locked = true;
                        FpSpread1.Sheets[0].Columns[2].Locked = true;
                        FpSpread1.Sheets[0].Columns[3].Locked = true;
                        FpSpread1.Sheets[0].Columns[4].Locked = true;
                        FpSpread1.Sheets[0].Columns[5].Locked = true;
                        // FpSpread1.Sheets[0].Columns[4].Width = 150;
                        FpSpread1.Width = 1500;
                        FpSpread1.Height = 750;
                        /////////end columnwidth

                        string str = "select isnull(collname, ' ') as collname,isnull(address1, ' ') as address1,isnull(address2,' ') as address2,isnull(address3, ' ') as address3,isnull(pincode,' ') as pincode from collinfo where college_code='" + Session["collegecode"].ToString() + "'";

                        DataSet dscoll = d2.select_method_wo_parameter(str, "Text");
                        if (dscoll.Tables[0].Rows.Count > 0)
                        {
                            string collname = "";
                            string address1 = "";
                            string address2 = "";
                            string address3 = "";
                            string pincode = "";
                            string address = "";
                            collname = dscoll.Tables[0].Rows[0]["collname"].ToString();
                            address1 = dscoll.Tables[0].Rows[0]["address1"].ToString();
                            address2 = dscoll.Tables[0].Rows[0]["address2"].ToString();
                            address3 = dscoll.Tables[0].Rows[0]["address3"].ToString();
                            pincode = dscoll.Tables[0].Rows[0]["pincode"].ToString();
                            address = address1 + "," + "  " + address2 + "," + "  " + address3 + "," + "  " + pincode;
                            FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 0, 3, 1);


                            //  FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 4, 3, 1);
                            //FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 1, 1, 3);
                            FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 1, 1, 4);
                            FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 5, 3, 1);

                            FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 0, 3, 1);

                            FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 29, 1, 1, 4);
                            FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 29, 1, 1, 4);
                            FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 28, 1, 1, 4);


                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].Text = collname;

                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].HorizontalAlign = HorizontalAlign.Center;

                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].Font.Bold = true;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].Border.BorderColorBottom = Color.White;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].Font.Name = "Book Antiqua";
                            //FpSpread1.Sheets[0].SpanModel.Add(1, 1, 1, 3);
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 29, 1].Text = address;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 29, 1].HorizontalAlign = HorizontalAlign.Center;

                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 29, 1].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 29, 1].Font.Name = "Book Antiqua";
                            ////FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount-29, 1].Border.BorderColorBottom = Color.White;

                            // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount-29, 1].Border.BorderColorBottom = Color.White;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 29, 1].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].Font.Name = "Book Antiqua";
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].Text = "Pay Slip For The Month Of " + cblmonth.SelectedItem.Text + "," + "  " + year + "";
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].Font.Bold = true;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].HorizontalAlign = HorizontalAlign.Center;

                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].Font.Name = "Book Antiqua";

                            MyImg mi = new MyImg();
                            mi.ImageUrl = "../images/10BIT001.jpeg";
                            mi.ImageUrl = "Handler/Handler2.ashx?";

                            MyImg mi2 = new MyImg();
                            mi2.ImageUrl = "../images/10BIT001.jpeg";
                            mi2.ImageUrl = "Handler/Handler5.ashx?";
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 0].CellType = mi;
                            // FpSpread1.Sheets[0].SetColumnWidth(FpSpread1.Sheets[0].RowCount - 30, 100);
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 5].CellType = mi2;
                            //Start=======Added by Manikandan 02/08/2013
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 5].BackColor = Color.White;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 0].HorizontalAlign = HorizontalAlign.Center;//Added by Manikandan 03/08/2013
                            FpSpread1.Sheets[0].Columns[4].BackColor = Color.White;
                            FpSpread1.Sheets[0].Columns[5].BackColor = Color.White;

                            //End=========
                            ////////////////////////////////cahenges
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 0].Text = "Staff Code";
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 1].Text = ":" + "  " + staffcode3.ToString();

                            FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 26, 4, 1, 2);
                            FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 25, 4, 1, 2);

                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 3].Text = "Department";
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 4].Text = ":" + "   " + dept_name.ToString();
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 4].Column.Width = 350;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 3].Text = "Designation";
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 4].Text = ":" + "   " + designation.ToString();


                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 3].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 3].Font.Name = "Book Antiqua";


                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 4].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 4].Font.Name = "Book Antiqua";


                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 3].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 3].Font.Name = "Book Antiqua";

                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 4].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 4].Font.Name = "Book Antiqua";

                            FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 25, 1, 1, 2);
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 0].Text = "Staff Name";
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Text = ":" + " " + staffname3.ToString();

                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 0].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 0].Font.Name = "Book Antiqua";

                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Font.Name = "Book Antiqua";


                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 0].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 0].Font.Name = "Book Antiqua";
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 0].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 0].Font.Name = "Book Antiqua";
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 1].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 1].Font.Name = "Book Antiqua";
                            // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 27, 1].Border.BorderColorBottom = Color.White;

                        }


                        ///////////////////////////////////////////settings

                        string getlink = d2.GetFunction("select linkvalue from inssettings where linkname='Calculate LOP from Attendance' and college_code='" + Session["collegecode"] + "'");
                        ///

                        if (getlink == "0")
                        {

                        }
                        ///////////get maxdate//

                        int splcount = 0;

                        int maxdays = getmaxdays(monthname1, year3);

                        //////////////////get attendance
                        int l = 0;
                        int cl = 0;

                        string[] leavetype = new string[50];
                        double[] clleave = new double[50];
                        double countmor = 0;
                        double counteve = 0;

                        if (monthname1 == monthnamenum)
                        {

                            for (int day = dayfrm; dayfrm <= daytonum; dayfrm++)
                            {

                                int day5 = 0;
                                day5 = 0 + dayfrm;
                                sql = "select shortname from leave_category where college_code=" + Session["collegecode"] + "";
                                SqlCommand cmd90 = new SqlCommand(sql, con);
                                con.Close();
                                con.Open();

                                l = 0;
                                cl = 0;


                                SqlDataReader dr90 = cmd90.ExecuteReader();
                            lbl: while (dr90.Read())
                                {
                                    l = l + 1;
                                    cl = cl + 1;



                                    if (dr90.HasRows == true)
                                    {
                                        string levatype = "";
                                        levatype = dr90["shortname"].ToString();
                                        leavetype[l] = levatype;
                                        sql1 = "select * from staff_attnd where mon_year between '" + monyear + "' and '" + monyearto + "' and staff_code='" + staffcode3 + "'";
                                        con1.Close();
                                        con1.Open();
                                        SqlCommand cmd100 = new SqlCommand(sql1, con1);
                                        SqlDataReader dr100 = cmd100.ExecuteReader();
                                        while (dr100.Read())
                                        {
                                            if (dr100.HasRows == true)
                                            {
                                                int day6;
                                                string attnda = "";
                                                day6 = 3 + day5;
                                                attnda = dr100[day6].ToString();
                                                if (attnda != "")
                                                {
                                                    string[] split100 = attnda.Split(new char[] { '-' });
                                                    string mor = "";
                                                    string eve = "";
                                                    mor = split100[0].ToString();
                                                    eve = split100[1].ToString();
                                                    //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = leavetype[l].ToString();
                                                    if (mor == levatype)
                                                    {
                                                        //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = levatype + "(" + countmor++ + ")";
                                                        clleave[cl] = clleave[cl] + 0.5;
                                                    }
                                                    if (eve == levatype)
                                                    {
                                                        clleave[cl] = clleave[cl] + 0.5;

                                                    }
                                                    string[] lave = new string[15];



                                                }
                                                goto lbl;
                                            }
                                        }

                                    }
                                }



                            }
                            string stl = "";
                            for (int p = 1; p <= l; p++)
                            {
                                for (int h = p; h <= p; h++)
                                {
                                    if (leavetype[p] != "LA")
                                    {
                                        if (clleave[h] != 0)
                                        {
                                            stl = stl + leavetype[p] + "-" + clleave[h] + ", ";
                                        }
                                    }
                                }
                            }
                            if (stl != "")
                            {
                                stl = stl.Substring(0, stl.Length - 2);
                            }
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Text = ":" + "  " + stl.ToString();
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Size = FontUnit.Large;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Name = "Book Antiqua";

                            ///////////////clear the arry
                            Array.Clear(leavetype, 0, leavetype.Length);
                            Array.Clear(clleave, 0, clleave.Length);
                        }
                        else
                        {
                            for (int day = dayfrm; dayfrm <= maxdays; dayfrm++)
                            {

                                int day5 = 0;
                                day5 = 0 + dayfrm;
                                sql = "select shortname from leave_category where college_code=" + Session["collegecode"] + "";
                                SqlCommand cmd90 = new SqlCommand(sql, con);
                                con.Close();
                                con.Open();

                                l = 0;
                                cl = 0;


                                SqlDataReader dr90 = cmd90.ExecuteReader();
                            lbl: while (dr90.Read())
                                {
                                    l = l + 1;
                                    cl = cl + 1;



                                    if (dr90.HasRows == true)
                                    {
                                        string levatype = "";
                                        levatype = dr90["shortname"].ToString();
                                        leavetype[l] = levatype;
                                        sql1 = "select * from staff_attnd where mon_year ='" + monyear + "'  and staff_code='" + staffcode3 + "'";
                                        con1.Close();
                                        con1.Open();
                                        SqlCommand cmd100 = new SqlCommand(sql1, con1);
                                        SqlDataReader dr100 = cmd100.ExecuteReader();
                                        while (dr100.Read())
                                        {
                                            if (dr100.HasRows == true)
                                            {
                                                int day6;
                                                string attnda = "";
                                                day6 = 3 + day5;
                                                attnda = dr100[day6].ToString();
                                                if (attnda != "")
                                                {
                                                    string[] split100 = attnda.Split(new char[] { '-' });
                                                    string mor = "";
                                                    string eve = "";
                                                    mor = split100[0].ToString();
                                                    eve = split100[1].ToString();
                                                    //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = leavetype[l].ToString();
                                                    if (mor == levatype)
                                                    {
                                                        //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = levatype + "(" + countmor++ + ")";
                                                        clleave[cl] = clleave[cl] + 0.5;
                                                    }
                                                    if (eve == levatype)
                                                    {
                                                        clleave[cl] = clleave[cl] + 0.5;

                                                    }
                                                    string[] lave = new string[15];



                                                }
                                                goto lbl;
                                            }
                                        }

                                    }
                                }



                            }
                            string stl = "";
                            for (int p = 1; p <= l; p++)
                            {
                                for (int h = p; h <= p; h++)
                                {
                                    if (leavetype[p] != "LA")
                                    {
                                        if (clleave[h] != 0)
                                        {
                                            //stl = stl + leavetype[p] + "-" + clleave[h] + ", ";
                                        }
                                    }
                                }
                            }


                            for (int day = 1; day <= daytonum; day++)
                            {

                                int day5 = 0;
                                day5 = 0 + day;
                                sql = "select shortname from leave_category where  college_code=" + Session["collegecode"] + "";
                                SqlCommand cmd90 = new SqlCommand(sql, con);
                                con.Close();
                                con.Open();

                                l = 0;
                                cl = 0;


                                SqlDataReader dr90 = cmd90.ExecuteReader();
                            lbl: while (dr90.Read())
                                {
                                    l = l + 1;
                                    cl = cl + 1;



                                    if (dr90.HasRows == true)
                                    {
                                        string levatype = "";
                                        levatype = dr90["shortname"].ToString();
                                        leavetype[l] = levatype;
                                        sql1 = "select * from staff_attnd where mon_year='" + monyearto + "' and staff_code='" + staffcode3 + "'";
                                        con1.Close();
                                        con1.Open();
                                        SqlCommand cmd100 = new SqlCommand(sql1, con1);
                                        SqlDataReader dr100 = cmd100.ExecuteReader();
                                        while (dr100.Read())
                                        {
                                            if (dr100.HasRows == true)
                                            {
                                                int day6;
                                                string attnda = "";
                                                day6 = 3 + day5;
                                                attnda = dr100[day6].ToString();
                                                if (attnda != "")
                                                {
                                                    string[] split100 = attnda.Split(new char[] { '-' });
                                                    string mor = "";
                                                    string eve = "";
                                                    mor = split100[0].ToString();
                                                    eve = split100[1].ToString();
                                                    //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = leavetype[l].ToString();
                                                    if (mor == levatype)
                                                    {
                                                        //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = levatype + "(" + countmor++ + ")";
                                                        clleave[cl] = clleave[cl] + 0.5;
                                                    }
                                                    if (eve == levatype)
                                                    {
                                                        clleave[cl] = clleave[cl] + 0.5;

                                                    }
                                                    string[] lave = new string[15];



                                                }
                                                goto lbl;
                                            }
                                        }

                                    }
                                }



                            }
                            //string stl = "";
                            for (int p = 1; p <= l; p++)
                            {
                                for (int h = p; h <= p; h++)
                                {
                                    if (leavetype[p] != "LA")
                                    {
                                        if (clleave[h] != 0)
                                        {
                                            stl = stl + leavetype[p] + "-" + clleave[h] + ", ";
                                        }
                                    }
                                }
                            }

                            if (stl != "")
                            {
                                stl = stl.Substring(0, stl.Length - 2);
                            }
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Text = ":" + "  " + stl.ToString();
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Name = "Book Antiqua";

                            ///////////////clear the arry

                        }
                        Array.Clear(leavetype, 0, leavetype.Length);
                        Array.Clear(clleave, 0, clleave.Length);



                        sql1 = "select * from staffmaster where staff_code='" + staffcode3 + "' and college_code='" + Session["collegecode"] + "'";
                        SqlCommand cmd70 = new SqlCommand(sql1, con1);
                        con1.Close();
                        con1.Open();
                        SqlDataReader dr70;
                        dr70 = cmd70.ExecuteReader();
                        dr70.Read();
                        string bankacc = "";
                        string pfnumber = "";
                        if (dr70.HasRows)
                        {
                            bankacc = dr70["bankaccount"].ToString();
                            pfnumber = dr70["pfnumber"].ToString();
                        }
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 3].Text = "Bank A/c No";

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 3].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 3].Font.Name = "Book Antiqua";

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 4].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 4].Font.Name = "Book Antiqua";


                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 4].Text = ":" + " " + bankacc.ToString();


                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 0].Text = "PF A/C No";
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 1].Text = ":" + "   " + pfnumber.ToString();


                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 0].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 0].Font.Name = "Book Antiqua";
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 1].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 1].Font.Name = "Book Antiqua";


                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 0].Text = "No Of Days Present";
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Text = "No Of Leave Taken";

                        // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 1].Text = pfnumber.ToString();

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Text = "No Of working Days:";
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Text = "No Of Days Leave";


                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Name = "Book Antiqua";
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Font.Name = "Book Antiqua";
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Font.Name = "Book Antiqua";
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 0].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 0].Font.Name = "Book Antiqua";


                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 0].Text = "Earning";

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 0].Font.Bold = true;


                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 1].Font.Bold = true;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Text = " Amount ";
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].HorizontalAlign = HorizontalAlign.Right;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Font.Bold = true;


                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 1].HorizontalAlign = HorizontalAlign.Right;

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 0].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 0].Font.Name = "Book Antiqua";
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Font.Name = "Book Antiqua";


                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Font.Name = "Book Antiqua";


                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Text = "Deduction";

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].HorizontalAlign = HorizontalAlign.Right;

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Font.Bold = true;

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].Text = "Amount  ";
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].Font.Bold = true;

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Font.Name = "Book Antiqua";


                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].HorizontalAlign = HorizontalAlign.Right;


                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 1].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 1].Font.Name = "Book Antiqua";
                        count3 = Convert.ToInt32(FpSpread1.Sheets[0].RowCount - 19);
                        count = Convert.ToInt32(FpSpread1.Sheets[0].RowCount - 19);
                        count2 = Convert.ToInt32(FpSpread1.Sheets[0].RowCount - 19);
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 1].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 1].Font.Name = "Book Antiqua";

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 2].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 2].Font.Name = "Book Antiqua";

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2].Font.Name = "Book Antiqua";

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 0].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 0].Font.Name = "Book Antiqua";


                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 0].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 0].Font.Name = "Book Antiqua";

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2].Font.Name = "Book Antiqua";

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].Font.Name = "Book Antiqua";
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 3].HorizontalAlign = HorizontalAlign.Right; ;

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 3].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 3].Font.Name = "Book Antiqua";


                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 4].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 4].Font.Name = "Book Antiqua";
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 0].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 0].Font.Name = "Book Antiqua";

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 2].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 2].Font.Name = "Book Antiqua";


                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 1].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 1].Font.Name = "Book Antiqua";

                        ////////////////////////////////////////

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 0].Border.BorderColorBottom = Color.White;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 0].Border.BorderColorBottom = Color.White;

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Border.BorderColorBottom = Color.White;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 4].Border.BorderColorBottom = Color.White;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Border.BorderColorBottom = Color.White;

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 0].Border.BorderColorBottom = Color.White;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 0].Border.BorderColorBottom = Color.White;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Border.BorderColorBottom = Color.White;

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Border.BorderColorRight = Color.White;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 21, 1].Border.BorderColorRight = Color.White;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Border.BorderColorRight = Color.White;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 1].Border.BorderColorRight = Color.White;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Border.BorderColorRight = Color.White;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 27, 1].Border.BorderColorRight = Color.White;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Border.BorderColorRight = Color.White;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Border.BorderColorRight = Color.White;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 0].Border.BorderColorRight = Color.White;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Border.BorderColorRight = Color.White;

                        int rowcount1 = 0;
                        if (chkactual.Checked == true)
                        {
                            sql1 = "select * from individual_incentives where staff_code='" + staffcode3 + "'";
                            SqlCommand cmd200 = new SqlCommand(sql1, con1);
                            con1.Close();
                            con1.Open();
                            SqlDataReader dr200 = cmd200.ExecuteReader();
                            dr200.Read();
                            if (dr200.HasRows == true)
                            {

                                string payband5 = "";
                                string gradepay5 = "";
                                string acbasic = "";

                                double payband6 = 0;
                                double gradepay7 = 0;
                                double acbasic7 = 0;
                                string allowance4 = "";
                                acbasic = dr200["bsalary"].ToString();
                                payband5 = dr200["pay_band"].ToString();
                                gradepay5 = dr200["grade_pay"].ToString();

                                acbasic7 = Convert.ToDouble(acbasic);
                                if (payband5 != "")
                                {
                                    payband6 = Convert.ToDouble(payband5);
                                }
                                else
                                {
                                    payband6 = 0;
                                }
                                if (gradepay5 != "")
                                {

                                    gradepay7 = Convert.ToDouble(payband5);
                                }
                                else
                                {
                                    gradepay7 = 0;
                                }



                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 1].Font.Size = FontUnit.XLarge;
                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 1].Font.Name = "Book Antiqua";

                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 1].Font.Size = FontUnit.XLarge;
                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 1].Font.Name = "Book Antiqua";


                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 1].Text = "Actual Amount ";

                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 1].HorizontalAlign = HorizontalAlign.Right;


                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 1].HorizontalAlign = HorizontalAlign.Right;
                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 1].HorizontalAlign = HorizontalAlign.Right;
                                if (payband6 != 0)
                                {
                                    FpSpread1.Sheets[0].Cells[count3, 0].Text = "Pay Band";
                                    FpSpread1.Sheets[0].Cells[count3, 1].Text = payband5.ToString();
                                    count3++;
                                }
                                if (gradepay7 != 0)
                                {
                                    FpSpread1.Sheets[0].Cells[count3, 0].Text = "Pay Band";

                                    FpSpread1.Sheets[0].Cells[count3, 1].Text = gradepay5.ToString();
                                }

                                FpSpread1.Sheets[0].Cells[count3, 1].Text = acbasic.ToString();
                                count3++;

                                int f = 0;

                                allowance4 = dr200["allowances"].ToString();
                                int cp = 0;
                                int rowcount = 0;
                                int rowcount3 = 0;

                                string[] allowanmce_arr1;

                                string alowancesplit;


                                allowanmce_arr1 = allowance4.Split('\\');

                                for (int i = cp; i < allowanmce_arr1.GetUpperBound(0); i++)
                                {

                                    alowancesplit = allowanmce_arr1[i];

                                    string[] allowanceda;

                                    allowanceda = alowancesplit.Split(';');

                                    string da;

                                    string da3;
                                    string da1;
                                    string dblAllowLOP;


                                    da = allowanceda[0];
                                    da1 = allowanceda[1];
                                    da3 = allowanceda[2];
                                    if (da1 == "Percent")
                                    {
                                        da3 = da3 + "%";
                                    }
                                    if ((da3 != "") && (da3 != "0"))
                                    {
                                        if (spll_alll_tag_arry.GetUpperBound(0) >= f)
                                        {
                                            if (da != spll_alll_tag_arry[f])
                                            {
                                                FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Text = da.ToString();
                                                FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Text = da3.ToString();



                                                FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Font.Size = FontUnit.XLarge;
                                                FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Font.Name = "Book Antiqua";

                                                FpSpread1.Sheets[0].Cells[(count3 + cp), 1].HorizontalAlign = HorizontalAlign.Right;

                                                FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Font.Size = FontUnit.XLarge;
                                                FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Font.Name = "Book Antiqua";
                                                rowcount1 = Convert.ToInt16(count3 + cp);

                                                cp = cp + 1;
                                            }

                                            else
                                            {
                                                f++;

                                            }
                                        }
                                    }

                                }
                            }
                        }







                        /////////



                        sql = "select * from monthlypay where staff_code='" + staffcode3 + "' and monthlypay.fdate ='" + datefrom3 + "' and monthlypay.tdate ='" + dateto4 + "'";

                        con.Close();
                        con.Open();

                        SqlCommand cmd80 = new SqlCommand(sql, con);
                        SqlDataReader dr80 = cmd80.ExecuteReader();
                        dr80.Read();
                        if (dr80.HasRows == true)
                        {
                            double payband = 0;
                            double gradepay = 0;
                            double basic_pay3 = 0;
                            string allowance3 = "";
                            string deduction3 = "";
                            double lop = 0;
                            double lopd = 0;
                            double bassicd = 0;
                            double DblAllowLOP = 0;
                            double DblAllowLOP1 = 0;

                            payband = Convert.ToDouble(dr80["pay_band"].ToString());
                            double payband1;
                            gradepay = Convert.ToDouble(dr80["grade_pay"].ToString());
                            basic_pay3 = Convert.ToDouble(dr80["basic_alone"].ToString());
                            lop = Convert.ToDouble(dr80["lop"].ToString());
                            if (lop != 0)
                            {
                                lopd = Convert.ToDouble(lop);
                            }
                            else
                            {
                                lopd = 0;
                            }
                            bassicd = Convert.ToDouble(basic_pay3);
                            bassicd = bassicd - lopd;
                            if (payband != 0)
                            {
                                // payband1 = Convert.ToDouble(payband);
                                FpSpread1.Sheets[0].Cells[count, 0].Text = "Pay Band";
                                FpSpread1.Sheets[0].Cells[count, 2].Text = payband.ToString();
                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 2].HorizontalAlign = HorizontalAlign.Right;
                                count++;
                            }



                            if (gradepay != 0)
                            {
                                FpSpread1.Sheets[0].Cells[count, 0].Text = "Grade Pay";
                                FpSpread1.Sheets[0].Cells[count, 2].Text = gradepay.ToString();
                                count++;
                            }

                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2].HorizontalAlign = HorizontalAlign.Right;

                            FpSpread1.Sheets[0].Cells[count, 0].Text = "Basic";
                            FpSpread1.Sheets[0].Cells[count, 2].Text = bassicd.ToString();
                            FpSpread1.Sheets[0].Cells[count, 2].HorizontalAlign = HorizontalAlign.Right;
                            count++;

                            //if (lop != 0)
                            //    lop = lop + DblAllowLOP;
                            // {
                            //    FpSpread1.Sheets[0].Cells[count2, 3].Text = "Loss Of Pay";
                            //   FpSpread1.Sheets[0].Cells[count2, 4].Text = lop.ToString();
                            //  count2++;
                            //}

                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 4].HorizontalAlign = HorizontalAlign.Right;

                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 2].HorizontalAlign = HorizontalAlign.Right;
                            //FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 3].Border.BorderColorRight = Color.Black;


                            int r = 0;
                            allowance3 = dr80["allowances"].ToString();

                            int rowcount = 0;

                            int rowcount3 = 0;
                            int c = 0;

                            string[] allowanmce_arr1;

                            string alowancesplit;
                            int exatval = 0;

                            allowanmce_arr1 = allowance3.Split('\\');

                            for (int i = c; i < allowanmce_arr1.GetUpperBound(0); i++)
                            {
                                exatval = allowanmce_arr1.GetUpperBound(0);

                                alowancesplit = allowanmce_arr1[i];

                                string[] allowanceda;

                                allowanceda = alowancesplit.Split(';');

                                string da;

                                string da3;
                                double ds3 = 0;
                                DblAllowLOP = 0;
                                DblAllowLOP1 = 0;
                                string DblAllowActVal;
                                string DblAllowVal;

                                DblAllowVal = allowanceda[3];
                                DblAllowActVal = allowanceda[2];
                                DblAllowLOP = (Convert.ToDouble(DblAllowActVal) - Convert.ToDouble(DblAllowVal));
                                DblAllowLOP = Math.Round(DblAllowLOP);
                                DblAllowLOP1 = DblAllowLOP1 + DblAllowLOP;
                                da = allowanceda[0];

                                da3 = allowanceda[3];
                                rowcount = Convert.ToInt16(count + c);
                                ds3 = Convert.ToDouble(da3);
                                ds3 = Math.Round(ds3, 0);
                                if (ds3 != 0)
                                {
                                    if (spll_alll_tag_arry.GetUpperBound(0) >= r)
                                    {
                                        if (spll_alll_tag_arry[r] != da)
                                        {


                                            FpSpread1.Sheets[0].Cells[(count + c), 0].Text = da.ToString();
                                            FpSpread1.Sheets[0].Cells[(count + c), 2].Text = ds3.ToString();



                                            FpSpread1.Sheets[0].Cells[(count + c), 0].Font.Size = FontUnit.XLarge;
                                            FpSpread1.Sheets[0].Cells[(count + c), 0].Font.Name = "Book Antiqua";

                                            FpSpread1.Sheets[0].Cells[(count + c), 2].HorizontalAlign = HorizontalAlign.Right;

                                            FpSpread1.Sheets[0].Cells[(count + c), 2].Font.Size = FontUnit.XLarge;
                                            FpSpread1.Sheets[0].Cells[(count + c), 2].Font.Name = "Book Antiqua";
                                            FpSpread1.Sheets[0].Cells[(count + c), 0].Border.BorderColorBottom = Color.White;
                                            FpSpread1.Sheets[0].Cells[(count + c), 1].Border.BorderColorBottom = Color.White;

                                            FpSpread1.Sheets[0].Cells[(count + c), 2].Border.BorderColorBottom = Color.White;
                                            FpSpread1.Sheets[0].Cells[(count + c), 3].Border.BorderColorBottom = Color.White;
                                            FpSpread1.Sheets[0].Cells[(count + c), 4].Border.BorderColorBottom = Color.White;



                                            // FpSpread1.Sheets[0].Cells[(FpSpread1.Sheets[0].RowCount - 16 + i), 2].Border.BorderColorRight = Color.Black;
                                            //FpSpread1.Sheets[0].Cells[(FpSpread1.Sheets[0].RowCount - 16 + i), 4].Border.BorderColorRight = Color.Black;

                                            rowcount = Convert.ToInt16(count + c);
                                            c = c + 1;
                                        }
                                        else
                                        {

                                            if (splallow.Contains(da))
                                            {
                                                splallow[da] = da3.ToString();
                                            }
                                            else
                                            {
                                                splcount++;
                                                r++;
                                                splallow.Add(da, da3);
                                            }
                                        }
                                    }
                                }

                            }

                            if (lop != 0)
                                lop = lop + DblAllowLOP1;
                            //lop = DblAllowLOP; 
                            {
                                //FpSpread1.Sheets[0].Cells[count2, 3].Text = "Loss Of Pay";
                                //FpSpread1.Sheets[0].Cells[count2, 4].Text = lop.ToString();
                                //count2++;
                            }

                            string nettadd = "";
                            nettadd = dr80["netadd"].ToString();
                            //FpSpread1.Sheets[0].Cells[rowcount , 0].Border.BorderColorBottom = Color.Black;
                            //FpSpread1.Sheets[0].Cells[rowcount, 1].Border.BorderColorBottom = Color.Black;
                            //////////set col
                            /// FpSpread1.Sheets[0].Cells[rowcount+1, 2].Border.BorderColorBottom = Color.Black;
                            ///FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Border.BorderColorBottom = Color.Black;
                            /////////////////////////////////////////////////////////////////////////////////////////
                            //FpSpread1.Sheets[0].Cells[rowcount, 3].Border.BorderColorBottom = Color.Black;
                            //FpSpread1.Sheets[0].Cells[rowcount, 4].Border.BorderColorBottom = Color.Black;
                            if (chkactual.Checked == false)
                            {

                                FpSpread1.Sheets[0].Cells[rowcount + 2, 0].Text = "Gross Total";
                                string nesal3 = "";
                                nesal3 = dr80["netsal"].ToString();

                                if (splcount != 0)
                                {
                                    int li = 0;

                                    foreach (DictionaryEntry parameter1 in splallow)
                                    {
                                        string getsplallow = parameter1.Key.ToString();
                                        string getfeeamount = parameter1.Value.ToString();



                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Text = "Special Allowance";
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 3].HorizontalAlign = HorizontalAlign.Right;
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Bold = true;
                                        FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 3].Text = getsplallow.ToString();
                                        FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 4].Text = getfeeamount.ToString();
                                        FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 3].HorizontalAlign = HorizontalAlign.Right;
                                        FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 4].HorizontalAlign = HorizontalAlign.Right;
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Text = "Amount";
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 4].HorizontalAlign = HorizontalAlign.Right;
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Font.Bold = true;
                                        FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Text = "Net Paid";

                                        FpSpread1.Sheets[0].Cells[rowcount + 10, 3].Text = nesal3.ToString();
                                        FpSpread1.Sheets[0].Cells[rowcount + 10, 3].Font.Bold = true;
                                        FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Font.Bold = true;

                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Font.Size = FontUnit.XLarge;
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Font.Name = "Book Antiqua";
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Size = FontUnit.XLarge;
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Name = "Book Antiqua";

                                        FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 4].Font.Size = FontUnit.XLarge;
                                        FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 4].Font.Name = "Book Antiqua";


                                        FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 3].Font.Size = FontUnit.XLarge;
                                        FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 3].Font.Name = "Book Antiqua";

                                        FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Font.Size = FontUnit.XLarge;
                                        FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Font.Name = "Book Antiqua";

                                        FpSpread1.Sheets[0].Cells[rowcount + 10, 3].Font.Size = FontUnit.XLarge;
                                        FpSpread1.Sheets[0].Cells[rowcount + 10, 3].Font.Name = "Book Antiqua";
                                    }
                                }
                                else
                                {
                                    FpSpread1.Sheets[0].SpanModel.Add(rowcount + 5, 1, 1, 2);

                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Text = "Net Paid ";

                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Text = ": " + nesal3.ToString();
                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Bold = true;
                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Font.Bold = true;

                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Font.Size = FontUnit.XLarge;
                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Font.Name = "Book Antiqua";

                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Size = FontUnit.XLarge;
                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Name = "Book Antiqua";
                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 1].HorizontalAlign = HorizontalAlign.Right;

                                }


                                FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Font.Size = FontUnit.XLarge;
                                FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Font.Name = "Book Antiqua";


                                FpSpread1.Sheets[0].Cells[rowcount + 2, 0].Font.Bold = true;

                                FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Text = nettadd.ToString();
                                FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Font.Bold = true;
                                FpSpread1.Sheets[0].Cells[rowcount + 2, 2].HorizontalAlign = HorizontalAlign.Right;

                                FpSpread1.Sheets[0].Cells[rowcount + 2, 0].Font.Size = FontUnit.XLarge;
                                FpSpread1.Sheets[0].Cells[rowcount + 2, 0].Font.Name = "Book Antiqua";

                                FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Font.Size = FontUnit.XLarge;
                                FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Font.Name = "Book Antiqua";
                                FpSpread1.Sheets[0].Cells[rowcount + 2, 0].Font.Bold = true;
                            }
                            else
                            {
                                string nesal3 = "";
                                nesal3 = dr80["netsal"].ToString();


                                if (rowcount1 == 0)
                                {
                                    FpSpread1.Sheets[0].Cells[rowcount + 2, 0].Text = "Gross Total";

                                    if (splcount != 0)
                                    {
                                        int li = 0;

                                        foreach (DictionaryEntry parameter1 in splallow)
                                        {
                                            string getsplallow = parameter1.Key.ToString();
                                            string getfeeamount = parameter1.Value.ToString();


                                            FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 3].HorizontalAlign = HorizontalAlign.Right;
                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Text = "Special Allowance";
                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 3].HorizontalAlign = HorizontalAlign.Right;
                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Bold = true;
                                            FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 3].Text = getsplallow.ToString();
                                            FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 4].Text = getfeeamount.ToString();
                                            FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 4].HorizontalAlign = HorizontalAlign.Right;
                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Text = "Amount";
                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 4].HorizontalAlign = HorizontalAlign.Right;
                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Font.Bold = true;
                                            FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Text = "Net Paid";

                                            FpSpread1.Sheets[0].Cells[rowcount + 10, 3].Text = nesal3.ToString();
                                            FpSpread1.Sheets[0].Cells[rowcount + 10, 3].Font.Bold = true;
                                            FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Font.Bold = true;

                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Font.Size = FontUnit.XLarge;
                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Font.Name = "Book Antiqua";
                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Size = FontUnit.XLarge;
                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Name = "Book Antiqua";

                                            FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 4].Font.Size = FontUnit.XLarge;
                                            FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 4].Font.Name = "Book Antiqua";


                                            FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 3].Font.Size = FontUnit.XLarge;
                                            FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 3].Font.Name = "Book Antiqua";

                                            FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Font.Size = FontUnit.XLarge;
                                            FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Font.Name = "Book Antiqua";

                                            FpSpread1.Sheets[0].Cells[rowcount + 10, 3].Font.Size = FontUnit.XLarge;
                                            FpSpread1.Sheets[0].Cells[rowcount + 10, 3].Font.Name = "Book Antiqua";
                                        }
                                    }

                                    else
                                    {
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Text = "Net Paid";
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Bold = true;
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Size = FontUnit.XLarge;
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Name = "Book Antiqua";

                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Size = FontUnit.XLarge;
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Name = "Book Antiqua";
                                        FpSpread1.Sheets[0].Cells[rowcount + 2, 0].Font.Bold = true;
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Text = nesal3.ToString();
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Bold = true;
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Bold = true;

                                    }

                                    FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Text = nettadd.ToString();
                                    FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Font.Bold = true;
                                    FpSpread1.Sheets[0].Cells[rowcount + 2, 2].HorizontalAlign = HorizontalAlign.Right;

                                    FpSpread1.Sheets[0].Cells[rowcount + 2, 0].Font.Size = FontUnit.XLarge;
                                    FpSpread1.Sheets[0].Cells[rowcount + 2, 0].Font.Name = "Book Antiqua";

                                    FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Font.Size = FontUnit.XLarge;
                                    FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Font.Name = "Book Antiqua";


                                }
                                else
                                {
                                    FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Text = "Gross Total";
                                    if (splcount != 0)
                                    {
                                        int li = 0;

                                        foreach (DictionaryEntry parameter1 in splallow)
                                        {
                                            string getsplallow = parameter1.Key.ToString();
                                            string getfeeamount = parameter1.Value.ToString();



                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Text = "Special Allowance";
                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 3].HorizontalAlign = HorizontalAlign.Right;
                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Bold = true;
                                            FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 3].Text = getsplallow.ToString();
                                            FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 4].Text = getfeeamount.ToString();
                                            FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 4].HorizontalAlign = HorizontalAlign.Right;
                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Text = "Amount";
                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 4].HorizontalAlign = HorizontalAlign.Right;
                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Font.Bold = true;
                                            FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Text = "Net Paid";
                                            FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Font.Bold = true;
                                            FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Font.Size = FontUnit.XLarge;
                                            FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 3].HorizontalAlign = HorizontalAlign.Right;
                                            FpSpread1.Sheets[0].Cells[rowcount + 10, 3].Text = nesal3.ToString();
                                            FpSpread1.Sheets[0].Cells[rowcount + 10, 3].Font.Bold = true;
                                            FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Font.Bold = true;

                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Font.Size = FontUnit.XLarge;
                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Font.Name = "Book Antiqua";
                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Size = FontUnit.XLarge;
                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Name = "Book Antiqua";

                                            FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 4].Font.Size = FontUnit.XLarge;
                                            FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 4].Font.Name = "Book Antiqua";


                                            FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 3].Font.Size = FontUnit.XLarge;
                                            FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 3].Font.Name = "Book Antiqua";

                                            FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Font.Size = FontUnit.XLarge;
                                            FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Font.Name = "Book Antiqua";

                                            FpSpread1.Sheets[0].Cells[rowcount + 10, 3].Font.Size = FontUnit.XLarge;
                                            FpSpread1.Sheets[0].Cells[rowcount + 10, 3].Font.Name = "Book Antiqua";
                                        }
                                    }

                                    else
                                    {
                                        FpSpread1.Sheets[0].Cells[rowcount1 + 5, 2].Text = "Net Paid";

                                        FpSpread1.Sheets[0].Cells[rowcount1 + 5, 3].Font.Size = FontUnit.XLarge;
                                        FpSpread1.Sheets[0].Cells[rowcount1 + 5, 3].Font.Name = "Book Antiqua";
                                        FpSpread1.Sheets[0].Cells[rowcount1 + 5, 2].Font.Bold = true;
                                        FpSpread1.Sheets[0].Cells[rowcount1 + 5, 3].Text = nesal3.ToString();
                                        FpSpread1.Sheets[0].Cells[rowcount1 + 5, 3].Font.Bold = true;
                                        FpSpread1.Sheets[0].Cells[rowcount1 + 5, 2].Font.Bold = true;
                                        FpSpread1.Sheets[0].Cells[rowcount1 + 5, 2].Font.Size = FontUnit.XLarge;
                                        FpSpread1.Sheets[0].Cells[rowcount1 + 5, 2].Font.Name = "Book Antiqua";
                                    }

                                    FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Text = nettadd.ToString();
                                    FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Font.Bold = true;
                                    FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].HorizontalAlign = HorizontalAlign.Right;

                                    FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Font.Size = FontUnit.XLarge;
                                    FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Font.Name = "Book Antiqua";

                                    FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Font.Size = FontUnit.XLarge;
                                    FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Font.Name = "Book Antiqua";

                                }







                                FpSpread1.Sheets[0].Cells[rowcount1 + 5, 3].Font.Size = FontUnit.XLarge;
                                FpSpread1.Sheets[0].Cells[rowcount1 + 5, 3].Font.Name = "Book Antiqua";

                                FpSpread1.Sheets[0].Cells[rowcount1 + 5, 2].Font.Size = FontUnit.XLarge;
                                FpSpread1.Sheets[0].Cells[rowcount1 + 5, 2].Font.Name = "Book Antiqua";


                                FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Font.Bold = true;


                            }

                            deduction3 = dr80["deductions"].ToString();

                            int gp = 0;

                            string[] deduction_arr1;

                            string deductionsplit1;

                            deduction_arr1 = deduction3.Split('\\');

                            for (int sp = gp; sp < deduction_arr1.GetUpperBound(0); sp++)
                            {

                                deductionsplit1 = deduction_arr1[sp];

                                string[] deductionda;

                                deductionda = deductionsplit1.Split(';');

                                string de;

                                string de3;
                                double de3d;

                                de = deductionda[0];

                                de3 = deductionda[3];
                                de3d = Convert.ToDouble(de3);
                                if (de3d != 0)
                                {

                                    FpSpread1.Sheets[0].Cells[(count2 + gp), 3].Text = de.ToString();
                                    FpSpread1.Sheets[0].Cells[(count2 + gp), 3].HorizontalAlign = HorizontalAlign.Right;

                                    FpSpread1.Sheets[0].Cells[(count2 + gp), 4].Text = de3.ToString();

                                    FpSpread1.Sheets[0].Cells[(count2 + gp), 4].HorizontalAlign = HorizontalAlign.Right;


                                    FpSpread1.Sheets[0].Cells[(count2 + gp), 3].Font.Size = FontUnit.XLarge;
                                    FpSpread1.Sheets[0].Cells[(count2 + gp), 3].Font.Name = "Book Antiqua";
                                    FpSpread1.Sheets[0].Cells[(count2 + gp), 4].Font.Size = FontUnit.XLarge;
                                    FpSpread1.Sheets[0].Cells[(count2 + gp), 4].Font.Name = "Book Antiqua";
                                    rowcount3 = Convert.ToInt16(count2 + gp);
                                    gp = gp + 1;
                                }



                            }
                            FarPoint.Web.Spread.TextCellType t = new FarPoint.Web.Spread.TextCellType();
                            string noofpresent = "";
                            string presnt = "";
                            string absent = "";
                            string workdays = "";
                            string leavedays = "";
                            noofpresent = dr80["leavedetail"].ToString();
                            string[] presplit = noofpresent.Split(';');
                            presnt = presplit[1].ToString();
                            workdays = presplit[0].ToString();
                            leavedays = presplit[2].ToString();
                            // workdays = ":"+"  " + workdays;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].CellType = t;
                            //FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text =":"+"  "+ presnt.ToString();

                            string get_pre_lop = dr80["pre_lop"].ToString();
                            string get_cur_lop = dr80["cur_lop"].ToString();
                            double get_pre = 0;
                            double get_cur = 0;
                            double tot_lop = 0;
                            if (get_pre_lop != "")
                            {
                                get_pre = Convert.ToDouble(get_pre_lop);
                            }
                            if (get_cur_lop != "")
                            {
                                get_cur = Convert.ToDouble(get_cur_lop);
                            }
                            tot_lop = get_pre + get_cur;
                            double totalpreset = Convert.ToDouble(workdays) - tot_lop;

                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Text = "No Of working Days";
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 3].Text = "No Of Days Absent/LOP";
                            FpSpread1.Sheets[0].Columns[3].Width = 200;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 4].Text = "";

                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 4].CellType = t;

                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 4].CellType = t;

                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 4].Text = ":" + workdays;

                            // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 4].Text =":"+"  "+ leavedays.ToString();
                            {

                                if (getlink != "0")
                                {
                                    if (lop != 0)
                                        lop = lop + DblAllowLOP1;

                                }
                                else
                                {
                                    lop = Math.Round(((Convert.ToDouble(nettadd) / Convert.ToDouble(workdays)) * (tot_lop)), 2);
                                }

                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 4].Text = ":" + "  " + tot_lop.ToString() + "/" + lop.ToString();
                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = ":" + "  " + totalpreset.ToString();

                            }
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 3].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 3].Font.Name = "Book Antiqua";

                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 4].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 4].Font.Name = "Book Antiqua";



                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Font.Name = "Book Antiqua";

                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 4].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 4].Font.Name = "Book Antiqua";


                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Font.Name = "Book Antiqua";


                            string netded3 = "";
                            double netded = 0;
                            netded3 = dr80["netded"].ToString();
                            netded = Convert.ToDouble(netded3);
                            netded = netded + lop;
                            // FpSpread1.Sheets[0].Cells[rowcount3 + 1, 4].Border.BorderColorBottom = Color.Black;

                            //  FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Border.BorderColorBottom = Color.Black;
                            if (rowcount3 == 0)
                            {
                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 3].Text = "Total Deduction";

                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 3].HorizontalAlign = HorizontalAlign.Right;
                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 3].Font.Bold = true;

                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 4].Text = netded.ToString();
                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 4].Font.Bold = true;



                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 4].HorizontalAlign = HorizontalAlign.Right;

                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 3].Font.Size = FontUnit.XLarge;
                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 3].Font.Name = "Book Antiqua";

                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 4].Font.Size = FontUnit.XLarge;
                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 4].Font.Name = "Book Antiqua";

                            }
                            else
                            {


                                FpSpread1.Sheets[0].Cells[rowcount3 + 2, 3].Text = "Total Deduction";
                                FpSpread1.Sheets[0].Cells[rowcount3 + 2, 3].HorizontalAlign = HorizontalAlign.Right;
                                FpSpread1.Sheets[0].Cells[rowcount3 + 2, 3].Font.Bold = true;

                                FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Text = netded.ToString();
                                FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Font.Bold = true;



                                FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].HorizontalAlign = HorizontalAlign.Right;

                                FpSpread1.Sheets[0].Cells[rowcount3 + 2, 3].Font.Size = FontUnit.XLarge;
                                FpSpread1.Sheets[0].Cells[rowcount3 + 2, 3].Font.Name = "Book Antiqua";

                                FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Font.Size = FontUnit.XLarge;
                                FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Font.Name = "Book Antiqua";
                            }



                            //Added by Manikandan 02/08/20132
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 5].BackColor = Color.White;
                            FpSpread1.SaveChanges();
                            //End
                            Panel4.Visible = true;
                            // ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('Please Click the Print Button To View The Report ')", true);

                        }


                    }
                }
            }

        }
        catch
        {

        }
    }

    protected void btnslip_Click(object sender, EventArgs e)
    {
        load_slip();
    }

    //void load_slip()
    //{
    //    try
    //    {
    //        lblselect.Visible = true;
    //        double net_amount = 0;
    //        Hashtable has_spl_act_amt = new Hashtable();
    //        Hashtable has_spl_amt = new Hashtable();

    //        string staffcode3 = "";
    //        string department3 = "";
    //        string staffname3 = "";
    //        string designation = "";
    //        string dept_name = "";
    //        string date3 = Txtentryfrom.Text.ToString();
    //        string datefrom3;
    //        int monthname1;
    //        string monyear;
    //        string monthname2 = "";
    //        int monthnamenum;
    //        string yearto = "";
    //        string monyearto = "";
    //        string[] split = date3.Split(new Char[] { '/' });

    //        //////////////page

    //        FpSpread1.Sheets[0].RowCount = 0;
    //        FpSpread1.Sheets[0].ColumnCount = 0;

    //        FpSpread1.Sheets[0].PageSize = 11;
    //        FpSpread1.Pager.Position = FarPoint.Web.Spread.PagerPosition.Bottom;
    //        FpSpread1.Pager.Mode = FarPoint.Web.Spread.PagerMode.Both;
    //        FpSpread1.Pager.Align = HorizontalAlign.Right;

    //        FpSpread1.Pager.ForeColor = Color.DarkGreen;
    //        FpSpread1.Pager.BackColor = Color.AliceBlue;
    //        FpSpread1.Pager.PageCount = 5;
    //        FpSpread1.Pager.Font.Bold = true;
    //        FpSpread1.Pager.Font.Name = "Arial";
    //        FpSpread1.Pager.ForeColor = Color.DarkGreen;
    //        FpSpread1.Pager.BackColor = Color.AliceBlue;
    //        //////////////////////////////////
    //        datefrom3 = split[1].ToString() + "/" + split[0].ToString() + "/" + split[2].ToString();

    //        string date4 = Txtentryto.Text.ToString();
    //        int year3 = Convert.ToInt16(split[2].ToString());

    //        string[] split1 = date4.Split(new Char[] { '/' });

    //        string dateto4 = split1[1].ToString() + "/" + split1[0].ToString() + "/" + split1[2].ToString();

    //        monthname2 = split1[0].ToString();
    //        monthnamenum = Convert.ToInt32(monthname2.ToString());
    //        yearto = split1[2].ToString();
    //        ///////

    //        string mnmae = split[1].ToString();
    //        monthname1 = Convert.ToInt16(mnmae);
    //        monthname2 = split1[1].ToString();
    //        monthnamenum = Convert.ToInt16(monthname2);

    //        string year = split[2].ToString();

    //        monyear = monthname1.ToString() + "/" + year;
    //        monyearto = monthnamenum.ToString() + "/" + yearto;

    //        string dayfrom;
    //        int count = 0;
    //        int count2 = 0;
    //        int count3 = 0;

    //        int rowstr = 0;
    //        FpSpread1.Sheets[0].RowCount = 0;
    //        FpSpread1.Sheets[0].PageSize = 60;

    //        fpsalary.SaveChanges();

    //        FpSpread1.Sheets[0].AutoPostBack = false;

    //        //----------------------get basic spl allowance
    //        string sallary_flag = "";
    //        Hashtable has_allowance = new Hashtable();
    //        con.Close();
    //        con.Open();
    //        string get_allow_type = "select allowances from incentives_master where college_code = " + Session["collegecode"] + "";
    //        SqlCommand cmd = new SqlCommand(get_allow_type, con);
    //        SqlDataAdapter da_sal_master = new SqlDataAdapter(cmd);
    //        DataSet ds = new DataSet();
    //        da_sal_master.Fill(ds);
    //        if (ds.Tables[0].Rows.Count > 0)
    //        {

    //            string[] master_alow_split = (ds.Tables[0].Rows[0][0].ToString()).Split(';');

    //            for (int sal_type = 0; sal_type <= master_alow_split.GetUpperBound(0); sal_type++)
    //            {
    //                if (master_alow_split[sal_type].ToString().Trim() != "")
    //                {
    //                    sallary_flag = master_alow_split[sal_type].ToString();
    //                    string[] get_flag_spl = sallary_flag.Split('\\');

    //                    if (!has_allowance.ContainsKey(get_flag_spl[0]))
    //                        has_allowance.Add(get_flag_spl[0].ToLower(), get_flag_spl[1]);
    //                }
    //            }


    //            //string[] master_alow_split = (ds.Tables[0].Rows[0][0].ToString()).Split(';');

    //            //for (int sal_type = 0; sal_type <= master_alow_split.GetUpperBound(0); sal_type++)
    //            //{
    //            //    if (master_alow_split[sal_type].ToString().Trim() != "")
    //            //    {
    //            //        try
    //            //        {
    //            //            sallary_flag = master_alow_split[sal_type].ToString();
    //            //            string[] get_flag_spl = (ds.Tables[0].Rows[0][0].ToString()).Split(';');

    //            //            if (!has_allowance.ContainsKey(get_flag_spl[1]))
    //            //            {
    //            //                has_allowance.Add(get_flag_spl[sal_type].ToLower(), get_flag_spl[sal_type]);
    //            //            }
    //            //        }
    //            //        catch
    //            //        {

    //            //        }
    //            //    }
    //            //}

    //        }
    //        FpSpread1.Sheets[0].RowCount = 0;
    //        for (int res = 0; res <= Convert.ToInt32(fpsalary.Sheets[0].RowCount) - 1; res++)
    //        {

    //            net_amount = 0;
    //            int dayfrm = 0;
    //            string dayto;
    //            int daytonum;

    //            dayfrom = split[0].ToString();
    //            dayfrm = Convert.ToInt32(dayfrom);
    //            dayto = split1[0].ToString();
    //            daytonum = Convert.ToInt32(dayto);
    //            int isval = 0;
    //            isval = Convert.ToInt32(fpsalary.Sheets[0].Cells[res, 1].Value);

    //            if (isval == 1)
    //            {
    //                Button2.Visible = true;
    //                lblselect.Visible = false;
    //                string monname = getmonth(monthname2);
    //                staffcode3 = Convert.ToString(fpsalary.Sheets[0].Cells[res, 2].Tag);
    //                staffname3 = Convert.ToString(fpsalary.Sheets[0].Cells[res, 2].Text);

    //                designation = Convert.ToString(fpsalary.Sheets[0].Cells[res, 3].Text);
    //                dept_name = Convert.ToString(fpsalary.Sheets[0].Cells[res, 4].Text);

    //                FpSpread1.Sheets[0].RowCount = FpSpread1.Sheets[0].RowCount + 30;
    //                FpSpread1.Visible = true;
    //                // FpSpread1.Sheets[0].AutoPostBack = false;
    //                FpSpread1.Sheets[0].ColumnHeaderVisible = false;
    //                FpSpread1.Sheets[0].RowHeaderVisible = false;

    //                rowstr = Convert.ToInt32(FpSpread1.Sheets[0].RowCount + 1);
    //                FpSpread1.Sheets[0].ColumnCount = 6;

    //                int totaladd = 0;
    //                ////////////setcolumn width
    //                FpSpread1.Sheets[0].Columns[0].Width = 150;
    //                FpSpread1.Sheets[0].Columns[2].Width = 100;
    //                FpSpread1.Sheets[0].Columns[1].Width = 150;
    //                FpSpread1.Sheets[0].Columns[3].Width = 200;
    //                FpSpread1.Sheets[0].Columns[4].Width = 100;
    //                FpSpread1.Sheets[0].Columns[5].Width = 150;
    //                FpSpread1.Sheets[0].Columns[0].Locked = true;
    //                FpSpread1.Sheets[0].Columns[1].Locked = true;
    //                FpSpread1.Sheets[0].Columns[2].Locked = true;
    //                FpSpread1.Sheets[0].Columns[3].Locked = true;
    //                FpSpread1.Sheets[0].Columns[4].Locked = true;
    //                FpSpread1.Sheets[0].Columns[5].Locked = true;
    //                //FpSpread1.Sheets[0].Columns[6].Locked = true;

    //                // FpSpread1.Sheets[0].Columns[4].Width = 150;
    //                FpSpread1.Width = 1100;
    //                FpSpread1.Height = 550;
    //                /////////end columnwidth

    //                string str = "select isnull(collname, ' ') as collname,isnull(address1, ' ') as address1,isnull(address2,' ') as address2,isnull(address3, ' ') as address3,isnull(pincode,' ') as pincode from collinfo where college_code='" + Session["collegecode"].ToString() + "'";
    //                myconn1.Close();
    //                myconn1.Open();
    //                SqlCommand cmd50 = new SqlCommand(str, myconn1);
    //                SqlDataReader dr50 = cmd50.ExecuteReader();
    //                while (dr50.Read())
    //                {
    //                    if (dr50.HasRows == true)
    //                    {
    //                        string collname = "";
    //                        string address1 = "";
    //                        string address2 = "";
    //                        string address3 = "";
    //                        string pincode = "";
    //                        string address = "";
    //                        collname = dr50["collname"].ToString();
    //                        address1 = dr50["address1"].ToString();
    //                        address2 = dr50["address2"].ToString();
    //                        address3 = dr50["address3"].ToString();
    //                        pincode = dr50["pincode"].ToString();
    //                        address = address1 + "," + "  " + address2 + "," + "  " + address3 + "," + "  " + pincode;
    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 0, 3, 1);
    //                        //  FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 4, 3, 1);
    //                        //FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 1, 1, 3);
    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 1, 1, 4);
    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 5, 3, 1);

    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 0, 3, 1);

    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 29, 1, 1, 4);
    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 29, 1, 1, 4);
    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 28, 1, 1, 4);


    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].Text = collname;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].HorizontalAlign = HorizontalAlign.Center;

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].Border.BorderColorBottom = Color.White;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].Font.Size = FontUnit.Large;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].Font.Name = "Book Antiqua";
    //                        //FpSpread1.Sheets[0].SpanModel.Add(1, 1, 1, 3);
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 29, 1].Text = address;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 29, 1].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 29, 1].HorizontalAlign = HorizontalAlign.Center;

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 29, 1].Font.Size = FontUnit.Large;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 29, 1].Font.Name = "Book Antiqua";
    //                        ////FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount-29, 1].Border.BorderColorBottom = Color.White;

    //                        // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount-29, 1].Border.BorderColorBottom = Color.White;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 29, 1].Font.Size = FontUnit.Large;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].Text = "Pay Slip For The Month Of " + cblmonth.SelectedItem.Text + "," + "  " + year + "";
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].Locked = true;

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].Font.Size = FontUnit.Large;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].Font.Name = "Book Antiqua";

    //                        MyImg mi = new MyImg();
    //                        mi.ImageUrl = "../images/10BIT001.jpeg";
    //                        mi.ImageUrl = "Handler/Handler2.ashx?";
    //                        MyImg mi2 = new MyImg();
    //                        mi2.ImageUrl = "../images/10BIT001.jpeg";
    //                        mi2.ImageUrl = "Handler/Handler5.ashx?";
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 0].CellType = mi;

    //                        // FpSpread1.Sheets[0].SetColumnWidth(FpSpread1.Sheets[0].RowCount - 30, 100);
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 5].CellType = mi2;

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 0].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 0].Locked = true;


    //                        ////////////////////////////////cahenges

    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 25, 1, 1, 2);
    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 26, 1, 1, 2);

    //                        //FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 1].Column.Width = 350;
    //                        //FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 3].Column.Width = 350;
    //                        //FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Column.Width = 350;
    //                        //FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 4].Column.Width = 450;
    //                        //FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 4].Column.Width = 450;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 0].Text = "Staff Code";
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 0].Locked = true;

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 1].Text = ":" + "  " + staffcode3.ToString();
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 1].Locked = true;
    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 26, 4, 1, 2);
    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 25, 4, 1, 2);


    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 3].Text = "Department";
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 4].Text = ":" + "   " + dept_name.ToString();
    //                        // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 4].Column.Width = 350;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 3].Text = "Designation";
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 4].Text = ":" + "   " + designation.ToString();

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 3].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 4].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 3].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 4].Locked = true;

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 3].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 3].Font.Name = "Book Antiqua";


    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 4].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 4].Font.Name = "Book Antiqua";


    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 3].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 3].Font.Name = "Book Antiqua";

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 4].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 4].Font.Name = "Book Antiqua";

    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 25, 1, 1, 2);

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 0].Text = "Staff Name";
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Text = ":" + "  " + staffname3.ToString();

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 0].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Locked = true;

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Font.Name = "Book Antiqua";

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 0].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 0].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 0].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 0].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 1].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 1].Font.Name = "Book Antiqua";
    //                        // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 27, 1].Border.BorderColorBottom = Color.White;

    //                    }
    //                }


    //                ///////////////////////////////////////////settings

    //                string getlink = GetFunction("select linkvalue from inssettings where linkname='Calculate LOP from Attendance' and college_code='" + Session["collegecode"] + "'");
    //                ///

    //                if (getlink == "0")
    //                {

    //                }
    //                ///////////get maxdate//

    //                int splcount = 0;

    //                int maxdays = getmaxdays(monthname1, year3);

    //                //////////////////get attendance
    //                int l = 0;
    //                int cl = 0;

    //                string[] leavetype = new string[50];
    //                double[] clleave = new double[50];
    //                double countmor = 0;
    //                double counteve = 0;

    //                if (monthname1 == monthnamenum)
    //                {

    //                    for (int day = dayfrm; dayfrm <= daytonum; dayfrm++)
    //                    {

    //                        int day5 = 0;
    //                        day5 = 0 + dayfrm;
    //                        sql = "select shortname from leave_category where college_code=" + Session["collegecode"] + "";
    //                        SqlCommand cmd90 = new SqlCommand(sql, con);
    //                        con.Close();
    //                        con.Open();

    //                        l = 0;
    //                        cl = 0;


    //                        SqlDataReader dr90 = cmd90.ExecuteReader();
    //                    lbl: while (dr90.Read())
    //                        {
    //                            l = l + 1;
    //                            cl = cl + 1;



    //                            if (dr90.HasRows == true)
    //                            {
    //                                string levatype = "";
    //                                levatype = dr90["shortname"].ToString();
    //                                leavetype[l] = levatype;
    //                                sql1 = "select * from staff_attnd where mon_year between '" + monyear + "' and '" + monyearto + "' and staff_code='" + staffcode3 + "'";
    //                                con1.Close();
    //                                con1.Open();
    //                                SqlCommand cmd100 = new SqlCommand(sql1, con1);
    //                                SqlDataReader dr100 = cmd100.ExecuteReader();
    //                                while (dr100.Read())
    //                                {
    //                                    if (dr100.HasRows == true)
    //                                    {
    //                                        int day6;
    //                                        string attnda = "";
    //                                        day6 = 3 + day5;
    //                                        attnda = dr100[day6].ToString();
    //                                        if (attnda != "")
    //                                        {
    //                                            string[] split100 = attnda.Split(new char[] { '-' });
    //                                            string mor = "";
    //                                            string eve = "";
    //                                            mor = split100[0].ToString();
    //                                            eve = split100[1].ToString();
    //                                            //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = leavetype[l].ToString();
    //                                            if (mor == levatype)
    //                                            {
    //                                                //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = levatype + "(" + countmor++ + ")";
    //                                                clleave[cl] = clleave[cl] + 0.5;
    //                                            }
    //                                            if (eve == levatype)
    //                                            {
    //                                                clleave[cl] = clleave[cl] + 0.5;

    //                                            }
    //                                            string[] lave = new string[15];
    //                                        }
    //                                        goto lbl;
    //                                    }
    //                                }

    //                            }
    //                        }
    //                    }
    //                    string stl = "";
    //                    for (int p = 1; p <= l; p++)
    //                    {
    //                        for (int h = p; h <= p; h++)
    //                        {
    //                            if (leavetype[p] != "LA")
    //                            {
    //                                if (clleave[h] != 0)
    //                                {
    //                                    stl = stl + leavetype[p] + "-" + clleave[h] + ", ";
    //                                }
    //                            }
    //                        }
    //                    }
    //                    if (stl != "")
    //                    {
    //                        stl = stl.Substring(0, stl.Length - 2);
    //                    }
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Text = ":" + "  " + stl.ToString();
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Size = FontUnit.XLarge;
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Locked = true;

    //                    ///////////////clear the arry
    //                    Array.Clear(leavetype, 0, leavetype.Length);
    //                    Array.Clear(clleave, 0, clleave.Length);
    //                }
    //                else
    //                {
    //                    for (int day = dayfrm; dayfrm <= maxdays; dayfrm++)
    //                    {

    //                        int day5 = 0;
    //                        day5 = 0 + dayfrm;
    //                        sql = "select shortname from leave_category where college_code=" + Session["collegecode"] + "";
    //                        SqlCommand cmd90 = new SqlCommand(sql, con);
    //                        con.Close();
    //                        con.Open();

    //                        l = 0;
    //                        cl = 0;


    //                        SqlDataReader dr90 = cmd90.ExecuteReader();
    //                    lbl: while (dr90.Read())
    //                        {
    //                            l = l + 1;
    //                            cl = cl + 1;



    //                            if (dr90.HasRows == true)
    //                            {
    //                                string levatype = "";
    //                                levatype = dr90["shortname"].ToString();
    //                                leavetype[l] = levatype;
    //                                sql1 = "select * from staff_attnd where mon_year ='" + monyear + "'  and staff_code='" + staffcode3 + "'";
    //                                con1.Close();
    //                                con1.Open();
    //                                SqlCommand cmd100 = new SqlCommand(sql1, con1);
    //                                SqlDataReader dr100 = cmd100.ExecuteReader();
    //                                while (dr100.Read())
    //                                {
    //                                    if (dr100.HasRows == true)
    //                                    {
    //                                        int day6;
    //                                        string attnda = "";
    //                                        day6 = 3 + day5;
    //                                        attnda = dr100[day6].ToString();
    //                                        if (attnda != "")
    //                                        {
    //                                            string[] split100 = attnda.Split(new char[] { '-' });
    //                                            string mor = "";
    //                                            string eve = "";
    //                                            mor = split100[0].ToString();
    //                                            eve = split100[1].ToString();
    //                                            //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = leavetype[l].ToString();
    //                                            if (mor == levatype)
    //                                            {
    //                                                //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = levatype + "(" + countmor++ + ")";
    //                                                clleave[cl] = clleave[cl] + 0.5;
    //                                            }
    //                                            if (eve == levatype)
    //                                            {
    //                                                clleave[cl] = clleave[cl] + 0.5;

    //                                            }
    //                                            string[] lave = new string[15];



    //                                        }
    //                                        goto lbl;
    //                                    }
    //                                }

    //                            }
    //                        }



    //                    }
    //                    string stl = "";
    //                    for (int p = 1; p <= l; p++)
    //                    {
    //                        for (int h = p; h <= p; h++)
    //                        {
    //                            if (leavetype[p] != "LA")
    //                            {
    //                                if (clleave[h] != 0)
    //                                {
    //                                    //stl = stl + leavetype[p] + "-" + clleave[h] + ", ";
    //                                }
    //                            }
    //                        }
    //                    }


    //                    for (int day = 1; day <= daytonum; day++)
    //                    {

    //                        int day5 = 0;
    //                        day5 = 0 + day;
    //                        sql = "select shortname from leave_category where  college_code=" + Session["collegecode"] + "";
    //                        SqlCommand cmd90 = new SqlCommand(sql, con);
    //                        con.Close();
    //                        con.Open();

    //                        l = 0;
    //                        cl = 0;


    //                        SqlDataReader dr90 = cmd90.ExecuteReader();
    //                    lbl: while (dr90.Read())
    //                        {
    //                            l = l + 1;
    //                            cl = cl + 1;



    //                            if (dr90.HasRows == true)
    //                            {
    //                                string levatype = "";
    //                                levatype = dr90["shortname"].ToString();
    //                                leavetype[l] = levatype;
    //                                sql1 = "select * from staff_attnd where mon_year='" + monyearto + "' and staff_code='" + staffcode3 + "'";
    //                                con1.Close();
    //                                con1.Open();
    //                                SqlCommand cmd100 = new SqlCommand(sql1, con1);
    //                                SqlDataReader dr100 = cmd100.ExecuteReader();
    //                                while (dr100.Read())
    //                                {
    //                                    if (dr100.HasRows == true)
    //                                    {
    //                                        int day6;
    //                                        string attnda = "";
    //                                        day6 = 3 + day5;
    //                                        attnda = dr100[day6].ToString();
    //                                        if (attnda != "")
    //                                        {
    //                                            string[] split100 = attnda.Split(new char[] { '-' });
    //                                            string mor = "";
    //                                            string eve = "";
    //                                            mor = split100[0].ToString();
    //                                            eve = split100[1].ToString();
    //                                            //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = leavetype[l].ToString();
    //                                            if (mor == levatype)
    //                                            {
    //                                                //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = levatype + "(" + countmor++ + ")";
    //                                                clleave[cl] = clleave[cl] + 0.5;
    //                                            }
    //                                            if (eve == levatype)
    //                                            {
    //                                                clleave[cl] = clleave[cl] + 0.5;

    //                                            }
    //                                            string[] lave = new string[15];



    //                                        }
    //                                        goto lbl;
    //                                    }
    //                                }

    //                            }
    //                        }



    //                    }
    //                    //string stl = "";
    //                    for (int p = 1; p <= l; p++)
    //                    {
    //                        for (int h = p; h <= p; h++)
    //                        {
    //                            if (leavetype[p] != "LA")
    //                            {
    //                                if (clleave[h] != 0)
    //                                {
    //                                    stl = stl + leavetype[p] + "-" + clleave[h] + ", ";
    //                                }
    //                            }
    //                        }
    //                    }

    //                    if (stl != "")
    //                    {
    //                        stl = stl.Substring(0, stl.Length - 2);
    //                    }
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Text = ":" + "  " + stl.ToString();
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Size = FontUnit.XLarge;
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Name = "Book Antiqua";

    //                    ///////////////clear the arry

    //                }
    //                Array.Clear(leavetype, 0, leavetype.Length);
    //                Array.Clear(clleave, 0, clleave.Length);



    //                sql1 = "select * from staffmaster where staff_code='" + staffcode3 + "' and college_code='" + Session["collegecode"] + "'";
    //                SqlCommand cmd70 = new SqlCommand(sql1, con1);
    //                con1.Close();
    //                con1.Open();
    //                SqlDataReader dr70;
    //                dr70 = cmd70.ExecuteReader();
    //                dr70.Read();
    //                string bankacc = "";
    //                string pfnumber = "";
    //                bankacc = dr70["bankaccount"].ToString();
    //                pfnumber = dr70["pfnumber"].ToString();
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 3].Text = "Bank A/c No";

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 3].Locked = true;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 3].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 3].Font.Name = "Book Antiqua";

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 4].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 4].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 4].Locked = true;

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 4].Text = ":" + " " + bankacc.ToString();
    //                FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 24, 4, 1, 2);
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 0].Locked = true;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 1].Locked = true;

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 0].Text = "PF A/C No";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 1].Text = ":" + "   " + pfnumber.ToString();


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 0].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 0].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 1].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 1].Font.Name = "Book Antiqua";


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 0].Text = "No.of Days Present";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Text = "No.of Leave Taken";

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 0].Locked = true;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Locked = true;
    //                // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 1].Text = pfnumber.ToString();
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Locked = true;


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Text = "No.of working Days";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Text = "No.of Days Leave";

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 0].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 0].Font.Name = "Book Antiqua";


    //                ///////////////////////////////////////////////
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Border.BorderColorRight = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].Border.BorderColorRight = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 2].Border.BorderColorRight = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 4].Border.BorderColorRight = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2].Border.BorderColorRight = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 4].Border.BorderColorRight = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 2].Border.BorderColorRight = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 4].Border.BorderColorRight = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 16, 2].Border.BorderColorRight = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 16, 4].Border.BorderColorRight = Color.Black;





    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 0].Text = "Earning";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 0].Locked = true;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 0].Font.Bold = true;


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 1].Font.Bold = true;

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Text = " Amount ";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Font.Bold = true;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Locked = true;


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 1].HorizontalAlign = HorizontalAlign.Right;

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 0].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 0].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Font.Name = "Book Antiqua";


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Font.Name = "Book Antiqua";


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Text = "Deduction";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Locked = true;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].HorizontalAlign = HorizontalAlign.Right;

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Font.Bold = true;


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].Text = "Amount  ";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].Font.Bold = true;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].Locked = true;

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Font.Name = "Book Antiqua";


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].HorizontalAlign = HorizontalAlign.Right;


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 1].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 1].Font.Name = "Book Antiqua";
    //                count3 = Convert.ToInt32(FpSpread1.Sheets[0].RowCount - 19);
    //                count = Convert.ToInt32(FpSpread1.Sheets[0].RowCount - 19);
    //                count2 = Convert.ToInt32(FpSpread1.Sheets[0].RowCount - 19);

    //                //FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 0].Text = "Pay Band";
    //                //FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 0].Text = "Grade Pay";

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 1].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 1].Font.Name = "Book Antiqua";

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 2].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 2].Font.Name = "Book Antiqua";




    //                // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2]
    //                //////////////////////////


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2].Font.Name = "Book Antiqua";

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 0].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 0].Font.Name = "Book Antiqua";


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 0].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 0].Font.Name = "Book Antiqua";

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2].Font.Name = "Book Antiqua";

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].Font.Name = "Book Antiqua";

    //                //FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 3].Text = "Loss Of Pay";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 3].HorizontalAlign = HorizontalAlign.Right; ;

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 3].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 3].Font.Name = "Book Antiqua";


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 4].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 4].Font.Name = "Book Antiqua";

    //                // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 0].Text = "Basic Pay";


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 0].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 0].Font.Name = "Book Antiqua";

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 2].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 2].Font.Name = "Book Antiqua";


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 1].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 1].Font.Name = "Book Antiqua";

    //                ////////////////////////////////////////

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 0].Border.BorderColorBottom = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 0].Border.BorderColorBottom = Color.White;

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Border.BorderColorBottom = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 4].Border.BorderColorBottom = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Border.BorderColorBottom = Color.White;

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 0].Border.BorderColorBottom = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 0].Border.BorderColorBottom = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Border.BorderColorBottom = Color.White;
    //                // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 21, 0].Border.BorderColorBottom = Color.White;


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Border.BorderColorRight = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 21, 1].Border.BorderColorRight = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Border.BorderColorRight = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 1].Border.BorderColorRight = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Border.BorderColorRight = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 27, 1].Border.BorderColorRight = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Border.BorderColorRight = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Border.BorderColorRight = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 0].Border.BorderColorRight = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Border.BorderColorRight = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 21, 0].Border.BorderColorBottom = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 21, 1].Border.BorderColorBottom = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 21, 2].Border.BorderColorBottom = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 21, 3].Border.BorderColorBottom = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 21, 4].Border.BorderColorBottom = Color.Black;

    //                int rowcount1 = 0;
    //                {
    //                    sql1 = "select * from individual_incentives where staff_code='" + staffcode3 + "'";
    //                    SqlCommand cmd200 = new SqlCommand(sql1, con1);
    //                    con1.Close();
    //                    con1.Open();
    //                    SqlDataReader dr200 = cmd200.ExecuteReader();
    //                    dr200.Read();
    //                    if (dr200.HasRows == true)
    //                    {


    //                        string payband5 = "";
    //                        string gradepay5 = "";
    //                        string acbasic = "";

    //                        double payband6 = 0;
    //                        double gradepay7 = 0;
    //                        double acbasic7 = 0;
    //                        string allowance4 = "";
    //                        double dblallowlop1;
    //                        acbasic = dr200["bsalary"].ToString();
    //                        payband5 = dr200["pay_band"].ToString();
    //                        gradepay5 = dr200["grade_pay"].ToString();

    //                        acbasic7 = Convert.ToDouble(acbasic);
    //                        if (payband5 != "")
    //                        {
    //                            payband6 = Convert.ToDouble(payband5);
    //                        }
    //                        else
    //                        {
    //                            payband6 = 0;
    //                        }
    //                        if (gradepay5 != "")
    //                        {

    //                            gradepay7 = Convert.ToDouble(payband5);
    //                        }
    //                        else
    //                        {
    //                            gradepay7 = 0;
    //                        }



    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 1].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 1].Font.Name = "Book Antiqua";

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 1].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 1].Font.Name = "Book Antiqua";

    //                        if (chkactual.Checked == true)
    //                        {

    //                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 1].Text = "Actual Amount ";
    //                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 1].Locked = true;
    //                        }
    //                        // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Column.Width = 100;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Text = "Amount ";
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 1].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 1].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 1].HorizontalAlign = HorizontalAlign.Right;
    //                        if (payband6 != 0)
    //                        {
    //                            FpSpread1.Sheets[0].Cells[count3, 0].Text = "Pay Band";
    //                            FpSpread1.Sheets[0].Cells[count3, 1].Text = payband5.ToString();
    //                            FpSpread1.Sheets[0].Cells[count3, 0].Locked = true;
    //                            FpSpread1.Sheets[0].Cells[count3, 1].Locked = true;
    //                            count3++;
    //                        }
    //                        if (gradepay7 != 0)
    //                        {
    //                            FpSpread1.Sheets[0].Cells[count3, 0].Text = "Pay Band";
    //                            FpSpread1.Sheets[0].Cells[count3, 1].Text = gradepay5.ToString();
    //                            FpSpread1.Sheets[0].Cells[count3, 1].Locked = true;
    //                            FpSpread1.Sheets[0].Cells[count3, 0].Locked = true;
    //                        }
    //                        if (chkactual.Checked == true)
    //                            FpSpread1.Sheets[0].Cells[count3, 1].Text = acbasic.ToString();
    //                        FpSpread1.Sheets[0].Cells[count3, 1].Locked = true;
    //                        count3++;
    //                        int f = 0;
    //                        allowance4 = dr200["allowances"].ToString();
    //                        int cp = 0;
    //                        int rowcount = 0;
    //                        int rowcount3 = 0;
    //                        string[] allowanmce_arr1;
    //                        string alowancesplit;
    //                        allowanmce_arr1 = allowance4.Split('\\');
    //                        for (int i = cp; i < allowanmce_arr1.GetUpperBound(0); i++)
    //                        {
    //                            alowancesplit = allowanmce_arr1[i];
    //                            string[] allowanceda;
    //                            allowanceda = alowancesplit.Split(';');
    //                            string da;
    //                            string da3;
    //                            string da1;
    //                            string dblAllowLOP;
    //                            da = allowanceda[0];
    //                            da1 = allowanceda[1];
    //                            da3 = allowanceda[2];
    //                            if (da1 == "Percent")
    //                            {
    //                                da3 = da3 + "%";
    //                            }

    //                            if ((da3 != "") && (da3 != "0"))
    //                            {
    //                                if (spll_alll_tag_arry.GetUpperBound(0) >= f)
    //                                {
    //                                    if (da != spll_alll_tag_arry[f])
    //                                    {
    //                                        totaladd = totaladd + 1;
    //                                        //  da = da.ToUpper();
    //                                        if (GetCorrespondingKey(da.ToLower(), has_allowance).ToString() == "0")
    //                                        {
    //                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Text = da.ToString();
    //                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Locked = true;
    //                                            if (chkactual.Checked == true)
    //                                                FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Text = da3.ToString();
    //                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Locked = true;



    //                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Font.Size = FontUnit.Large;
    //                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Font.Name = "Book Antiqua";

    //                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 1].HorizontalAlign = HorizontalAlign.Right;

    //                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Font.Size = FontUnit.Large;
    //                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Font.Name = "Book Antiqua";
    //                                            rowcount1 = Convert.ToInt16(count3 + cp);

    //                                            cp = cp + 1;
    //                                        }

    //                                        else
    //                                        {
    //                                            if (!has_spl_act_amt.ContainsKey(da.ToLower()))
    //                                            {
    //                                                has_spl_act_amt.Add(da.ToLower(), da3);
    //                                                splcount++;
    //                                            }
    //                                        }
    //                                    }
    //                                    if (GetCorrespondingKey(da.ToLower(), has_allowance).ToString() == "1")
    //                                    {
    //                                        FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Text = da.ToString();
    //                                        FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Locked = true;
    //                                        if (chkactual.Checked == true)
    //                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Text = da3.ToString();
    //                                        FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Locked = true;



    //                                        FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Font.Size = FontUnit.Large;
    //                                        FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Font.Name = "Book Antiqua";

    //                                        FpSpread1.Sheets[0].Cells[(count3 + cp), 1].HorizontalAlign = HorizontalAlign.Right;

    //                                        FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Font.Size = FontUnit.Large;
    //                                        FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Font.Name = "Book Antiqua";
    //                                        rowcount1 = Convert.ToInt16(count3 + cp);

    //                                        cp = cp + 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        f++;

    //                                    }
    //                                }
    //                            }

    //                        }
    //                    }
    //                }
    //                /////////
    //                sql = "select * from monthlypay where staff_code='" + staffcode3 + "' and monthlypay.fdate ='" + datefrom3 + "' and monthlypay.tdate ='" + dateto4 + "'";
    //                con.Close();
    //                con.Open();

    //                SqlCommand cmd80 = new SqlCommand(sql, con);
    //                SqlDataReader dr80 = cmd80.ExecuteReader();
    //                dr80.Read();
    //                if (dr80.HasRows == true)
    //                {
    //                    double payband = 0;
    //                    double gradepay = 0;
    //                    double basic_pay3 = 0;
    //                    string allowance3 = "";
    //                    string deduction3 = "";
    //                    double lop = 0;
    //                    double lopd = 0;
    //                    double bassicd = 0;
    //                    double DblAllowLOP = 0;
    //                    double DblAllowLOP1 = 0;
    //                    string bsalry = dr80["bsalary"].ToString();
    //                    payband = Convert.ToDouble(dr80["pay_band"].ToString());
    //                    double payband1;
    //                    gradepay = Convert.ToDouble(dr80["grade_pay"].ToString());
    //                    basic_pay3 = Convert.ToDouble(dr80["basic_alone"].ToString());
    //                    lop = Convert.ToDouble(dr80["lop"].ToString());
    //                    lop = Math.Round(lopd, 2);
    //                    if (lop != 0)
    //                    {
    //                        lopd = Convert.ToDouble(lop);

    //                    }
    //                    else
    //                    {
    //                        lopd = 0;
    //                    }
    //                    Double bascpgl = Convert.ToDouble(bsalry);
    //                    bascpgl = Convert.ToDouble(bascpgl);
    //                    bassicd = Convert.ToDouble(basic_pay3);
    //                    bassicd = bassicd - lopd;
    //                    if (payband != 0)
    //                    {
    //                        // payband1 = Convert.ToDouble(payband);
    //                        FpSpread1.Sheets[0].Cells[count, 0].Text = "Pay Band";
    //                        FpSpread1.Sheets[0].Cells[count, 2].Text = payband.ToString();
    //                        FpSpread1.Sheets[0].Cells[count, 0].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[count, 2].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 2].HorizontalAlign = HorizontalAlign.Right;
    //                        count++;
    //                    }



    //                    if (gradepay != 0)
    //                    {
    //                        FpSpread1.Sheets[0].Cells[count, 0].Text = "Grade Pay";
    //                        gradepay = Math.Round(gradepay, 2);
    //                        FpSpread1.Sheets[0].Cells[count, 2].Text = gradepay.ToString();
    //                        FpSpread1.Sheets[0].Cells[count, 0].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[count, 2].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[count, 0].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[count, 0].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].Cells[count, 0].HorizontalAlign = HorizontalAlign.Left;
    //                        FpSpread1.Sheets[0].Cells[count, 0].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[count, 0].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].Cells[count, 2].HorizontalAlign = HorizontalAlign.Right;
    //                        count++;
    //                    }

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Cells[count, 0].Text = "Basic";
    //                    FpSpread1.Sheets[0].Cells[count, 0].Font.Size = FontUnit.XLarge;
    //                    FpSpread1.Sheets[0].Cells[count, 0].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].Cells[count, 0].HorizontalAlign = HorizontalAlign.Left;
    //                    bassicd = Math.Round(bassicd, 2);
    //                    //FpSpread1.Sheets[0].Cells[count, 2].Text = bassicd.ToString();
    //                    FpSpread1.Sheets[0].Cells[count, 2].Text = bascpgl.ToString();
    //                    FpSpread1.Sheets[0].Cells[count, 0].Locked = true;
    //                    FpSpread1.Sheets[0].Cells[count, 0].Locked = true;
    //                    FpSpread1.Sheets[0].Cells[count, 2].HorizontalAlign = HorizontalAlign.Right;
    //                    count++;

    //                    //if (lop != 0)
    //                    //    lop = lop + DblAllowLOP;
    //                    // {
    //                    //    FpSpread1.Sheets[0].Cells[count2, 3].Text = "Loss Of Pay";
    //                    //   FpSpread1.Sheets[0].Cells[count2, 4].Text = lop.ToString();
    //                    //  count2++;
    //                    //}

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 4].HorizontalAlign = HorizontalAlign.Right;

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 2].HorizontalAlign = HorizontalAlign.Right;
    //                    //FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 3].Border.BorderColorRight = Color.Black;


    //                    int r = 0;
    //                    allowance3 = dr80["allowances"].ToString();

    //                    int rowcount = 0;

    //                    int rowcount3 = 0;
    //                    int c = 0;

    //                    string[] allowanmce_arr1;

    //                    string alowancesplit;
    //                    int exatval = 0;

    //                    allowanmce_arr1 = allowance3.Split('\\');

    //                    for (int i = c; i < allowanmce_arr1.GetUpperBound(0); i++)
    //                    {
    //                        exatval = allowanmce_arr1.GetUpperBound(0);

    //                        alowancesplit = allowanmce_arr1[i];

    //                        string[] allowanceda;

    //                        allowanceda = alowancesplit.Split(';');

    //                        string da;
    //                        string da2;
    //                        string da3;
    //                        double ds3 = 0;
    //                        DblAllowLOP = 0;
    //                        DblAllowLOP1 = 0;
    //                        string DblAllowActVal;
    //                        string DblAllowVal;

    //                        DblAllowVal = allowanceda[3];
    //                        DblAllowActVal = allowanceda[2];
    //                        DblAllowLOP = (Convert.ToDouble(DblAllowActVal) - Convert.ToDouble(DblAllowVal));
    //                        DblAllowLOP = Math.Round(DblAllowLOP);
    //                        DblAllowLOP1 = DblAllowLOP1 + DblAllowLOP;
    //                        da = allowanceda[0];
    //                        da2 = allowanceda[2];
    //                        da3 = allowanceda[3];
    //                        rowcount = Convert.ToInt16(count + c);
    //                        ds3 = Convert.ToDouble(da3);
    //                        ds3 = Math.Round(ds3, 0);
    //                        if (ds3 != 0)
    //                        {
    //                            if (spll_alll_tag_arry.GetUpperBound(0) >= r)
    //                            {
    //                                if (spll_alll_tag_arry[r] != da)
    //                                {

    //                                    if (GetCorrespondingKey(da.ToLower(), has_allowance).ToString() == "0")
    //                                    {
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 0].Text = da.ToString();
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 0].Locked = true;
    //                                        if (chkactual.Checked == true)
    //                                        {
    //                                            FpSpread1.Sheets[0].Cells[(count + c), 1].Text = da2.ToString();
    //                                            FpSpread1.Sheets[0].Cells[(count + c), 1].Locked = true;
    //                                        }
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 2].Text = ds3.ToString();
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 2].Locked = true;



    //                                        FpSpread1.Sheets[0].Cells[(count + c), 0].Font.Size = FontUnit.XLarge;
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 0].Font.Name = "Book Antiqua";

    //                                        FpSpread1.Sheets[0].Cells[(count + c), 1].HorizontalAlign = HorizontalAlign.Right;

    //                                        FpSpread1.Sheets[0].Cells[(count + c), 1].Font.Size = FontUnit.XLarge;
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 1].Font.Name = "Book Antiqua";
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 2].HorizontalAlign = HorizontalAlign.Right;

    //                                        FpSpread1.Sheets[0].Cells[(count + c), 2].Font.Size = FontUnit.XLarge;
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 2].Font.Name = "Book Antiqua";
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 0].Border.BorderColorBottom = Color.White;
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 1].Border.BorderColorBottom = Color.White;

    //                                        FpSpread1.Sheets[0].Cells[(count + c), 2].Border.BorderColorBottom = Color.White;
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 3].Border.BorderColorBottom = Color.White;
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 4].Border.BorderColorBottom = Color.White;


    //                                        rowcount = Convert.ToInt16(count + c);
    //                                        c = c + 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        if (!has_spl_amt.ContainsKey(da.ToLower()))
    //                                        {
    //                                            has_spl_amt.Add(da.ToLower(), da3);
    //                                            splcount++;
    //                                        }
    //                                    }
    //                                }
    //                            }
    //                        }
    //                    }

    //                    string nettadd = "";
    //                    nettadd = dr80["netadd"].ToString();
    //                    {
    //                        string nesal3 = "";
    //                        nesal3 = dr80["netsal"].ToString();


    //                        if (rowcount1 == 0)
    //                        {

    //                            //FpSpread1.Sheets[0].Cells[rowcount + 1, 0].Text = "Gross Total";
    //                            //FpSpread1.Sheets[0].Cells[rowcount + 1, 0].Font.Bold = true;
    //                            //FpSpread1.Sheets[0].Cells[rowcount + 1, 0].Font.Size = FontUnit.XLarge;
    //                            //FpSpread1.Sheets[0].Cells[rowcount + 1, 0].Font.Name = "Book Antiqua";
    //                            //FpSpread1.Sheets[0].Cells[rowcount + 1, 0].Locked = true;

    //                            //FpSpread1.Sheets[0].Cells[rowcount, 0].Border.BorderColorBottom = Color.Black;
    //                            //FpSpread1.Sheets[0].Cells[rowcount, 1].Border.BorderColorBottom = Color.Black;
    //                            //FpSpread1.Sheets[0].Cells[rowcount, 2].Border.BorderColorBottom = Color.Black;
    //                            //FpSpread1.Sheets[0].Cells[rowcount, 3].Border.BorderColorBottom = Color.Black;
    //                            //FpSpread1.Sheets[0].Cells[rowcount, 4].Border.BorderColorBottom = Color.Black;
    //                            //FpSpread1.Sheets[0].Cells[rowcount + 1, 0].Border.BorderColorBottom = Color.Black;
    //                            //FpSpread1.Sheets[0].Cells[rowcount + 1, 1].Border.BorderColorBottom = Color.Black;
    //                            //FpSpread1.Sheets[0].Cells[rowcount + 1, 2].Border.BorderColorBottom = Color.Black;
    //                            //FpSpread1.Sheets[0].Cells[rowcount + 1, 3].Border.BorderColorBottom = Color.Black;
    //                            //FpSpread1.Sheets[0].Cells[rowcount + 1, 4].Border.BorderColorBottom = Color.Black;

    //                            if (splcount != 0)
    //                            {
    //                                int li = 0;
    //                                FpSpread1.Sheets[0].SpanModel.Add(rowcount + 3, 0, 1, 2);
    //                                FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Text = "Special Allowance";
    //                                FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Font.Bold = true;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Font.Size = FontUnit.XLarge;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Locked = true;

    //                                foreach (DictionaryEntry parameter1 in has_spl_amt)
    //                                {
    //                                    string getsplallow = parameter1.Key.ToString();
    //                                    string getfeeamount = parameter1.Value.ToString();

    //                                    //string getamount = getsplallow;
    //                                    string getamount = GetCorrespondingKey(getsplallow, has_spl_act_amt).ToString();



    //                                    FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Text = getsplallow.ToString();
    //                                    if (chkactual.Checked == true)
    //                                    {
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 2].Text = getfeeamount.ToString();
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 1].Text = getfeeamount.ToString();
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 1].HorizontalAlign = HorizontalAlign.Right;
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 1].Font.Size = FontUnit.XLarge;
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 1].Font.Name = "Book Antiqua";
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 2].Locked = true;
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 1].Locked = true;
    //                                    }
    //                                    else
    //                                    {
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 2].Text = getfeeamount.ToString();
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 2].Locked = true;
    //                                    }
    //                                    net_amount = net_amount + Convert.ToDouble(getfeeamount);


    //                                    FpSpread1.Sheets[0].Cells[rowcount + 10, 3].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Font.Size = FontUnit.XLarge;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Font.Bold = true;

    //                                    FpSpread1.Sheets[0].Cells[rowcount + 4, 2].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 4, 2].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 4, 2].Font.Size = FontUnit.XLarge;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 4, 2].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Font.Size = FontUnit.Large;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Size = FontUnit.Large;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Name = "Book Antiqua";

    //                                    FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 4].Font.Size = FontUnit.Large;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 4].Font.Name = "Book Antiqua";


    //                                    FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 3].Font.Size = FontUnit.Large;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 3].Font.Name = "Book Antiqua";

    //                                    FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Font.Size = FontUnit.Large;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Font.Name = "Book Antiqua";

    //                                    FpSpread1.Sheets[0].Cells[rowcount + 10, 3].Font.Size = FontUnit.Large;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 10, 3].Font.Name = "Book Antiqua";
    //                                    rowcount++;
    //                                }
    //                            }

    //                            else
    //                            {
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Text = "Net Paid";
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Font.Size = FontUnit.XLarge;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Locked = true;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Font.Bold = true;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 1].HorizontalAlign = HorizontalAlign.Right;
    //                                FpSpread1.Sheets[0].SpanModel.Add(rowcount + 5, 1, 1, 2);

    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Size = FontUnit.XLarge;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Name = "Book Antiqua";

    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Font.Size = FontUnit.Large;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].Cells[rowcount + 2, 0].Font.Bold = true;
    //                                nesal3 = Math.Round(Convert.ToDouble(nesal3), 2).ToString(); ;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Text = nesal3.ToString();
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Bold = true;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Bold = true;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Locked = true;

    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Border.BorderColorBottom = Color.Black;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Border.BorderColorBottom = Color.Black;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Border.BorderColorBottom = Color.Black;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Border.BorderColorBottom = Color.Black;
    //                            }
    //                            net_amount = net_amount + Convert.ToDouble(nettadd);
    //                            //if (splcount != 0)
    //                            //{

    //                            //    FpSpread1.Sheets[0].Cells[rowcount + 1, 2].Text = nettadd.ToString();
    //                            //    FpSpread1.Sheets[0].Cells[rowcount + 1, 2].Font.Bold = true;
    //                            //    FpSpread1.Sheets[0].Cells[rowcount + 1, 2].HorizontalAlign = HorizontalAlign.Right;
    //                            //    FpSpread1.Sheets[0].Cells[rowcount + 1, 2].Font.Size = FontUnit.XLarge;
    //                            //    FpSpread1.Sheets[0].Cells[rowcount + 1, 2].Font.Name = "Book Antiqua";
    //                            //    FpSpread1.Sheets[0].Cells[rowcount + 1, 2].Locked = true;
    //                            //}
    //                            //else
    //                            //{
    //                            //    FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Text = nettadd.ToString();
    //                            //    FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Font.Bold = true;
    //                            //    FpSpread1.Sheets[0].Cells[rowcount + 2, 2].HorizontalAlign = HorizontalAlign.Right;
    //                            //    FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Font.Size = FontUnit.XLarge;
    //                            //    FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Font.Name = "Book Antiqua";
    //                            //    FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Locked = true;
    //                            //}



    //                            FpSpread1.Sheets[0].Cells[rowcount + 2, 0].Font.Size = FontUnit.XLarge;
    //                            FpSpread1.Sheets[0].Cells[rowcount + 2, 0].Font.Name = "Book Antiqua";


    //                        }
    //                        else
    //                        {

    //                            //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Border.BorderColorBottom = Color.Black;
    //                            //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 1].Border.BorderColorBottom = Color.Black;
    //                            //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Border.BorderColorBottom = Color.Black;
    //                            //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 3].Border.BorderColorBottom = Color.Black;
    //                            //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 4].Border.BorderColorBottom = Color.Black;

    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 4].Border.BorderColorRight = Color.Black;
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 1, 2].Border.BorderColorRight = Color.Black;
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 1, 4].Border.BorderColorRight = Color.Black;

    //                            //FpSpread1.Sheets[0].Cells[rowcount1 + 1, 0].Border.BorderColorBottom = Color.Black;
    //                            //FpSpread1.Sheets[0].Cells[rowcount1 + 1, 1].Border.BorderColorBottom = Color.Black;
    //                            //FpSpread1.Sheets[0].Cells[rowcount1 + 1, 2].Border.BorderColorBottom = Color.Black;


    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 1, 4].Border.BorderColorRight = Color.Black;
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 1, 2].Border.BorderColorRight = Color.Black;
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 1, 4].Border.BorderColorRight = Color.Black;

    //                            //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Text = "Gross Total";
    //                            //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Font.Name = "Book Antiqua";
    //                            //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Font.Size = FontUnit.XLarge;
    //                            //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Font.Bold = true;
    //                            //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Locked = true;

    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Border.BorderColorRight = Color.Black;
    //                            if (splcount != 0)
    //                            {
    //                                int li = 0;
    //                                FpSpread1.Sheets[0].SpanModel.Add(rowcount + 4, 0, 1, 2);
    //                                FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Text = "Special Allowance";
    //                                FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Font.Bold = true;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Font.Size = FontUnit.XLarge;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 4, 3].Border.BorderColorRight = Color.Black;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Locked = true;
    //                                foreach (DictionaryEntry parameter1 in has_spl_amt)
    //                                {
    //                                    string getsplallow = parameter1.Key.ToString();
    //                                    string getfeeamount = parameter1.Value.ToString();
    //                                    string getamount = getfeeamount;
    //                                    //string getamount = GetCorrespondingKey(getsplallow, has_spl_act_amt).ToString();



    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Text = getsplallow.ToString();
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Locked = true;
    //                                    if (chkactual.Checked == true)
    //                                    {
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Text = getfeeamount.ToString();
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Text = getfeeamount.ToString();
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Locked = true;
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Locked = true;
    //                                    }
    //                                    else
    //                                    {
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Text = getfeeamount.ToString();
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Locked = true;
    //                                    }
    //                                    net_amount = net_amount + Convert.ToDouble(getfeeamount);

    //                                    FpSpread1.Sheets[0].Cells[rowcount + 3, 0].HorizontalAlign = HorizontalAlign.Left;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Font.Size = FontUnit.XLarge;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Font.Size = FontUnit.XLarge;

    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 0].HorizontalAlign = HorizontalAlign.Left;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Font.Size = FontUnit.XLarge;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Font.Size = FontUnit.XLarge;

    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Font.Size = FontUnit.XLarge;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Font.Size = FontUnit.XLarge;

    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 2].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Size = FontUnit.XLarge;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Size = FontUnit.Large;
    //                                    rowcount++;
    //                                }


    //                            }

    //                            else
    //                            {

    //                            }

    //                            //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Text = nettadd.ToString();
    //                            //net_amount = net_amount + Convert.ToDouble(nettadd);
    //                            //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Font.Bold = true;
    //                            //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].HorizontalAlign = HorizontalAlign.Right;

    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Font.Size = FontUnit.XLarge;
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Font.Name = "Book Antiqua";
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Locked = true;
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Font.Size = FontUnit.XLarge;
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Font.Name = "Book Antiqua";

    //                        }

    //                        FpSpread1.Sheets[0].Cells[rowcount1 + 5, 3].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[rowcount1 + 5, 3].Font.Name = "Book Antiqua";

    //                        FpSpread1.Sheets[0].Cells[rowcount1 + 5, 2].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[rowcount1 + 5, 2].Font.Name = "Book Antiqua";


    //                        FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Font.Bold = true;


    //                    }

    //                    double netded = 0;

    //                    deduction3 = dr80["deductions"].ToString();

    //                    int gp = 0;

    //                    string[] deduction_arr1;

    //                    string deductionsplit1;

    //                    deduction_arr1 = deduction3.Split('\\');

    //                    for (int sp = gp; sp < deduction_arr1.GetUpperBound(0); sp++)
    //                    {

    //                        deductionsplit1 = deduction_arr1[sp];

    //                        string[] deductionda;

    //                        deductionda = deductionsplit1.Split(';');

    //                        string de;

    //                        string de3;
    //                        double de3d;

    //                        de = deductionda[0];

    //                        de3 = deductionda[3];
    //                        de3d = Convert.ToDouble(de3);
    //                        if (de3d != 0)
    //                        {
    //                            if (totaladd < sp + 1)
    //                            {
    //                                totaladd = totaladd + 1;
    //                            }
    //                            FpSpread1.Sheets[0].Cells[(count2 + gp), 3].Text = de.ToString();
    //                            FpSpread1.Sheets[0].Cells[(count2 + gp), 3].Locked = true;
    //                            FpSpread1.Sheets[0].Cells[(count2 + gp), 3].HorizontalAlign = HorizontalAlign.Right;

    //                            FpSpread1.Sheets[0].Cells[(count2 + gp), 4].Text = de3.ToString();
    //                            netded = netded + Convert.ToDouble(de3);
    //                            net_amount = net_amount - Convert.ToDouble(de3);
    //                            FpSpread1.Sheets[0].Cells[(count2 + gp), 4].HorizontalAlign = HorizontalAlign.Right;


    //                            FpSpread1.Sheets[0].Cells[(count2 + gp), 3].Font.Size = FontUnit.XLarge;
    //                            FpSpread1.Sheets[0].Cells[(count2 + gp), 3].Font.Name = "Book Antiqua";
    //                            FpSpread1.Sheets[0].Cells[(count2 + gp), 4].Font.Size = FontUnit.XLarge;
    //                            FpSpread1.Sheets[0].Cells[(count2 + gp), 4].Font.Name = "Book Antiqua";
    //                            rowcount3 = Convert.ToInt16(count2 + gp);
    //                            gp = gp + 1;
    //                        }
    //                    }
    //                    //Added by srinath 18/6/2014 ==========Start=================
    //                    if (lop > 0)
    //                    {
    //                        if (gp > 0)
    //                        {
    //                            rowcount3 = Convert.ToInt16(count2 + gp);
    //                        }
    //                        FpSpread1.Sheets[0].Cells[(count2 + gp), 3].Text = "LOP";
    //                        FpSpread1.Sheets[0].Cells[(count2 + gp), 3].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[(count2 + gp), 3].HorizontalAlign = HorizontalAlign.Right;

    //                        FpSpread1.Sheets[0].Cells[(count2 + gp), 4].Text = lop.ToString();
    //                        FpSpread1.Sheets[0].Cells[(count2 + gp), 4].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].Cells[(count2 + gp), 3].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[(count2 + gp), 3].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].Cells[(count2 + gp), 4].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[(count2 + gp), 4].Font.Name = "Book Antiqua";
    //                    }
    //                    //==================End
    //                    FarPoint.Web.Spread.TextCellType t = new FarPoint.Web.Spread.TextCellType();
    //                    string noofpresent = "";
    //                    string presnt = "";
    //                    string absent = "";
    //                    string workdays = "";
    //                    string leavedays = "";
    //                    noofpresent = dr80["leavedetail"].ToString();
    //                    string[] presplit = noofpresent.Split(';');
    //                    presnt = presplit[1].ToString();
    //                    workdays = presplit[0].ToString();
    //                    leavedays = presplit[2].ToString();

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].CellType = t;

    //                    string get_pre_lop = dr80["pre_lop"].ToString();
    //                    string get_cur_lop = dr80["cur_lop"].ToString();
    //                    double get_pre = 0;
    //                    double get_cur = 0;
    //                    double tot_lop = 0;

    //                    if (get_pre_lop != "")
    //                    {
    //                        get_pre = Convert.ToDouble(get_pre_lop);
    //                    }
    //                    if (get_cur_lop != "")
    //                    {
    //                        get_cur = Convert.ToDouble(get_cur_lop);
    //                    }
    //                    tot_lop = get_pre + get_cur;
    //                    double totalpreset = Convert.ToDouble(workdays) - tot_lop;

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 3].Font.Size = FontUnit.XLarge;
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Font.Size = FontUnit.XLarge;

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Text = "No.of working Days";
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 3].Text = "No.of Days Absent/LOP";
    //                    //FpSpread1.Sheets[0].Columns[3].Width = 200;

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 4].Text = "";

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 4].CellType = t;

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 4].CellType = t;

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 4].Text = ":" + " " + workdays;

    //                    if (getlink != "0")
    //                    {
    //                        if (lop != 0)
    //                            lop = lop + DblAllowLOP1;

    //                    }
    //                    else
    //                    {
    //                        lop = Math.Round(((Convert.ToDouble(nettadd) / Convert.ToDouble(workdays)) * (tot_lop)), 2);
    //                    }

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 4].Text = ":" + "  " + tot_lop.ToString() + "/" + lop.ToString();

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = ":" + "  " + totalpreset.ToString();

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 3].Font.Size = FontUnit.XLarge;
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 3].Font.Name = "Book Antiqua";

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 4].Font.Size = FontUnit.XLarge;
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 4].Font.Name = "Book Antiqua";



    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Font.Size = FontUnit.XLarge;
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Font.Name = "Book Antiqua";

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 4].Font.Size = FontUnit.XLarge;
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 4].Font.Name = "Book Antiqua";


    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Font.Size = FontUnit.XLarge;
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Font.Name = "Book Antiqua";
    //                    int detrow = FpSpread1.Sheets[0].RowCount - 17;
    //                    if (rowcount3 == 0)
    //                    {//Modified by srinath 18/6/2014

    //                        if (rowcount1 + 2 > detrow)
    //                        {
    //                            detrow = rowcount1 + 2;
    //                        }
    //                        //Modified by srinath 18/6/2014============Start===============
    //                        FpSpread1.Sheets[0].Cells[detrow, 0].Text = "Gross Total";
    //                        FpSpread1.Sheets[0].Cells[detrow, 0].Font.Bold = true;
    //                        FpSpread1.Sheets[0].Cells[detrow, 0].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[detrow, 0].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].Cells[detrow, 0].Locked = true;

    //                        FpSpread1.Sheets[0].Cells[rowcount, 0].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[rowcount, 1].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[rowcount, 2].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[rowcount, 3].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[rowcount, 4].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[detrow, 0].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[detrow, 1].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[detrow, 2].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[detrow, 3].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[detrow, 4].Border.BorderColorBottom = Color.Black;


    //                        FpSpread1.Sheets[0].Cells[detrow, 2].Text = nettadd.ToString();
    //                        FpSpread1.Sheets[0].Cells[detrow, 2].Font.Bold = true;
    //                        FpSpread1.Sheets[0].Cells[detrow, 2].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].Cells[detrow, 2].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[detrow, 2].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].Cells[detrow, 2].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[detrow, 2].Border.BorderColorRight = Color.Black;
    //                        //==============End

    //                        FpSpread1.Sheets[0].Cells[detrow, 3].Text = "Total Deduction";

    //                        FpSpread1.Sheets[0].Cells[detrow, 3].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].Cells[detrow, 3].Font.Bold = true;


    //                        Double totde = netded + lop;
    //                        totde = Math.Round(totde, 2);
    //                        //FpSpread1.Sheets[0].Cells[detrow, 4].Text = netded.ToString();
    //                        FpSpread1.Sheets[0].Cells[detrow, 4].Text = totde.ToString();
    //                        FpSpread1.Sheets[0].Cells[detrow, 4].Font.Bold = true;



    //                        FpSpread1.Sheets[0].Cells[detrow, 4].HorizontalAlign = HorizontalAlign.Right;

    //                        FpSpread1.Sheets[0].Cells[detrow, 3].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[detrow, 3].Font.Name = "Book Antiqua";

    //                        FpSpread1.Sheets[0].Cells[detrow, 4].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[detrow, 4].Font.Name = "Book Antiqua";

    //                    }
    //                    else
    //                    {
    //                        if (rowcount1 > rowcount3)
    //                        {
    //                            rowcount3 = rowcount1;
    //                        }
    //                        detrow = rowcount3;
    //                        Double totde = netded + lop;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 3].Text = "Total Deduction";
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 3].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 3].Font.Bold = true;

    //                        totde = Math.Round(totde, 2);

    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Text = totde.ToString();
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Font.Bold = true;

    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 3].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 1, 3].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 1, 4].Border.BorderColorBottom = Color.Black;

    //                        //Added By SRinath 18/6/2014=======STart=======

    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 0].Text = "Gross Total";
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 0].Font.Bold = true;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 0].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 0].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 0].Locked = true;

    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 1, 0].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 1, 1].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 1, 2].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 1, 3].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 1, 4].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 0].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 1].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 2].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 3].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Border.BorderColorBottom = Color.Black;



    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 2].Text = nettadd.ToString();
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 2].Font.Bold = true;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 2].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 2].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 2].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 2].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 2].Border.BorderColorRight = Color.Black;

    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].HorizontalAlign = HorizontalAlign.Right;

    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 3].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 4, 3].Font.Name = "Book Antiqua";

    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Border.BorderColorRight = Color.Black;
    //                        //==========================End
    //                    }
    //                    for (int v = count2; v < detrow; v++)
    //                    {
    //                        FpSpread1.Sheets[0].Cells[v, 2].Border.BorderColorRight = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[v, 4].Border.BorderColorRight = Color.Black;
    //                    }
    //                    FpSpread1.Sheets[0].Cells[detrow + 1, 4].Border.BorderColorRight = Color.Black;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Text = "Net Paid";
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Font.Size = FontUnit.XLarge;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Locked = true;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Font.Bold = true;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 1].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].SpanModel.Add(rowcount + 5, 1, 1, 2);

    //                    net_amount = Math.Round(net_amount, 2, MidpointRounding.AwayFromZero);//ADdded by srinath 20/6/2014
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Text = ":" + " " + net_amount.ToString();
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Bold = true;

    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Border.BorderColorBottom = Color.Black;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Border.BorderColorBottom = Color.Black;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Border.BorderColorBottom = Color.Black;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Border.BorderColorBottom = Color.Black;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Border.BorderColorBottom = Color.Black;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Border.BorderColorBottom = Color.Black;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 4, 4].Border.BorderColorRight = Color.Black;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 3, 4].Border.BorderColorRight = Color.Black;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Border.BorderColorRight = Color.Black;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 2, 3].HorizontalAlign = HorizontalAlign.Right;

    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Size = FontUnit.XLarge;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Name = "Book Antiqua";

    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Size = FontUnit.XLarge;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Name = "Book Antiqua";


    //                    FpSpread1.Sheets[0].SetRowVisible(FpSpread1.Sheets[0].RowCount, true);
    //                    FpSpread1.Sheets[0].SetRowVisible(FpSpread1.Sheets[0].RowCount - 1, true);
    //                    FpSpread1.Sheets[0].SetRowVisible(FpSpread1.Sheets[0].RowCount - 2, true);
    //                    FpSpread1.Sheets[0].SetRowVisible(FpSpread1.Sheets[0].RowCount - 3, true);
    //                    FpSpread1.Sheets[0].SetRowVisible(FpSpread1.Sheets[0].RowCount - 4, true);
    //                    FpSpread1.Sheets[0].SetRowVisible(FpSpread1.Sheets[0].RowCount - 5, true);
    //                    if (totaladd > 5)
    //                    {
    //                        int extra = FpSpread1.Sheets[0].RowCount % 30;
    //                        extra = 30 - extra;
    //                        int getva = FpSpread1.Sheets[0].RowCount / 30;
    //                        if (getva % 2 == 0)
    //                        {
    //                            extra = extra + 30;
    //                        }
    //                        FpSpread1.Sheets[0].RowCount = FpSpread1.Sheets[0].RowCount + extra;
    //                    }

    //                    has_spl_act_amt.Clear();
    //                    has_spl_amt.Clear();
    //                    FpSpread1.Visible = true;
    //                    Panel4.Visible = true;
    //                    //   ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('Please Click the Print Button To View The Report ')", true);


    //                }

    //            }
    //        }
    //        //Start============Added by Manikandan 28/08/2013============
    //        FpSpread1.Sheets[0].Columns[0].BackColor = Color.White;
    //        FpSpread1.Sheets[0].Columns[1].BackColor = Color.White;
    //        FpSpread1.Sheets[0].Columns[2].BackColor = Color.White;
    //        FpSpread1.Sheets[0].Columns[3].BackColor = Color.White;
    //        FpSpread1.Sheets[0].Columns[4].BackColor = Color.White;
    //        FpSpread1.Sheets[0].Columns[5].BackColor = Color.White;
    //        //FpSpread1.Sheets[0].Columns[6].BackColor = Color.White;
    //        //==========================End==============================
    //        FpSpread1.Sheets[0].AutoPostBack = false;
    //        FpSpread1.Sheets[0].PageSize = 60;
    //        FpSpread1.SaveChanges();
    //    }
    //    catch
    //    {

    //    }
    //}

    void load_slip()
    {
        try
        {
            lblselect.Visible = true;
            double net_amount = 0;
            Hashtable has_spl_act_amt = new Hashtable();
            Hashtable has_spl_amt = new Hashtable();

            string staffcode3 = "";
            string department3 = "";
            string staffname3 = "";
            string designation = "";
            string dept_name = "";
            string date3 = Txtentryfrom.Text.ToString();
            string datefrom3;
            int monthname1;
            string monyear;
            string monthname2 = "";
            int monthnamenum;
            string yearto = "";
            string monyearto = "";
            string[] split = date3.Split(new Char[] { '/' });

            //////////////page

            FpSpread1.Sheets[0].RowCount = 0;
            FpSpread1.Sheets[0].ColumnCount = 0;

            FpSpread1.Sheets[0].PageSize = 11;
            FpSpread1.Pager.Position = FarPoint.Web.Spread.PagerPosition.Bottom;
            FpSpread1.Pager.Mode = FarPoint.Web.Spread.PagerMode.Both;
            FpSpread1.Pager.Align = HorizontalAlign.Right;

            FpSpread1.Pager.ForeColor = Color.DarkGreen;
            FpSpread1.Pager.BackColor = Color.AliceBlue;
            FpSpread1.Pager.PageCount = 5;
            FpSpread1.Pager.Font.Bold = true;
            FpSpread1.Pager.Font.Name = "Arial";
            FpSpread1.Pager.ForeColor = Color.DarkGreen;
            FpSpread1.Pager.BackColor = Color.AliceBlue;
            //////////////////////////////////
            datefrom3 = split[1].ToString() + "/" + split[0].ToString() + "/" + split[2].ToString();

            string date4 = Txtentryto.Text.ToString();
            int year3 = Convert.ToInt16(split[2].ToString());

            string[] split1 = date4.Split(new Char[] { '/' });

            string dateto4 = split1[1].ToString() + "/" + split1[0].ToString() + "/" + split1[2].ToString();

            monthname2 = split1[0].ToString();
            monthnamenum = Convert.ToInt32(monthname2.ToString());
            yearto = split1[2].ToString();
            ///////

            string mnmae = split[1].ToString();
            monthname1 = Convert.ToInt16(mnmae);
            monthname2 = split1[1].ToString();
            monthnamenum = Convert.ToInt16(monthname2);

            string year = split[2].ToString();

            monyear = monthname1.ToString() + "/" + year;
            monyearto = monthnamenum.ToString() + "/" + yearto;

            string dayfrom;
            int count = 0;
            int count2 = 0;
            int count3 = 0;

            int rowstr = 0;
            FpSpread1.Sheets[0].RowCount = 0;
            FpSpread1.Sheets[0].PageSize = 60;

            fpsalary.SaveChanges();

            FpSpread1.Sheets[0].AutoPostBack = false;

            //----------------------get basic spl allowance
            string sallary_flag = "";
            Hashtable has_allowance = new Hashtable();
            con.Close();
            con.Open();
            string get_allow_type = "select allowances from incentives_master where college_code = " + Session["collegecode"] + "";
            SqlCommand cmd = new SqlCommand(get_allow_type, con);
            SqlDataAdapter da_sal_master = new SqlDataAdapter(cmd);
            DataSet ds = new DataSet();
            da_sal_master.Fill(ds);
            if (ds.Tables[0].Rows.Count > 0)
            {

                string[] master_alow_split = (ds.Tables[0].Rows[0][0].ToString()).Split(';');

                for (int sal_type = 0; sal_type <= master_alow_split.GetUpperBound(0); sal_type++)
                {
                    if (master_alow_split[sal_type].ToString().Trim() != "")
                    {
                        sallary_flag = master_alow_split[sal_type].ToString();
                        string[] get_flag_spl = sallary_flag.Split('\\');

                        if (!has_allowance.ContainsKey(get_flag_spl[0]))
                            has_allowance.Add(get_flag_spl[0].ToLower(), get_flag_spl[1]);
                    }
                }


                //string[] master_alow_split = (ds.Tables[0].Rows[0][0].ToString()).Split(';');

                //for (int sal_type = 0; sal_type <= master_alow_split.GetUpperBound(0); sal_type++)
                //{
                //    if (master_alow_split[sal_type].ToString().Trim() != "")
                //    {
                //        try
                //        {
                //            sallary_flag = master_alow_split[sal_type].ToString();
                //            string[] get_flag_spl = (ds.Tables[0].Rows[0][0].ToString()).Split(';');

                //            if (!has_allowance.ContainsKey(get_flag_spl[1]))
                //            {
                //                has_allowance.Add(get_flag_spl[sal_type].ToLower(), get_flag_spl[sal_type]);
                //            }
                //        }
                //        catch
                //        {

                //        }
                //    }
                //}

            }

            for (int res = 1; res <= Convert.ToInt32(fpsalary.Sheets[0].RowCount) - 1; res++)
            {

                net_amount = 0;
                int dayfrm = 0;
                string dayto;
                int daytonum;

                dayfrom = split[0].ToString();
                dayfrm = Convert.ToInt32(dayfrom);
                dayto = split1[0].ToString();
                daytonum = Convert.ToInt32(dayto);
                int isval = 0;
                isval = Convert.ToInt32(fpsalary.Sheets[0].Cells[res, 1].Value);

                if (isval == 1)
                {
                    int totaladd = 0;
                    Button2.Visible = true;
                    lblselect.Visible = false;
                    string monname = getmonth(monthname2);
                    staffcode3 = Convert.ToString(fpsalary.Sheets[0].Cells[res, 2].Tag);
                    staffname3 = Convert.ToString(fpsalary.Sheets[0].Cells[res, 2].Text);

                    designation = Convert.ToString(fpsalary.Sheets[0].Cells[res, 3].Text);
                    dept_name = Convert.ToString(fpsalary.Sheets[0].Cells[res, 4].Text);

                    FpSpread1.Sheets[0].RowCount = FpSpread1.Sheets[0].RowCount + 30;
                    FpSpread1.Visible = true;
                    // FpSpread1.Sheets[0].AutoPostBack = false;
                    FpSpread1.Sheets[0].ColumnHeaderVisible = false;
                    FpSpread1.Sheets[0].RowHeaderVisible = false;

                    rowstr = Convert.ToInt32(FpSpread1.Sheets[0].RowCount + 1);
                    FpSpread1.Sheets[0].ColumnCount = 6;

                    ////////////setcolumn width
                    FpSpread1.Sheets[0].Columns[0].Width = 150;
                    // FpSpread1.Sheets[0].Columns[2].Width = 150;
                    FpSpread1.Sheets[0].Columns[1].Width = 160;
                    FpSpread1.Sheets[0].Columns[3].Width = 160;
                    FpSpread1.Sheets[0].Columns[5].Width = 150;
                    FpSpread1.Sheets[0].Columns[0].Locked = true;
                    FpSpread1.Sheets[0].Columns[1].Locked = true;
                    FpSpread1.Sheets[0].Columns[2].Locked = true;
                    FpSpread1.Sheets[0].Columns[3].Locked = true;
                    FpSpread1.Sheets[0].Columns[4].Locked = true;
                    FpSpread1.Sheets[0].Columns[5].Locked = true;
                    //FpSpread1.Sheets[0].Columns[6].Locked = true;

                    // FpSpread1.Sheets[0].Columns[4].Width = 150;
                    FpSpread1.Width = 1100;
                    FpSpread1.Height = 550;
                    /////////end columnwidth

                    string str = "select isnull(collname, ' ') as collname,isnull(address1, ' ') as address1,isnull(address2,' ') as address2,isnull(address3, ' ') as address3,isnull(pincode,' ') as pincode from collinfo where college_code='" + Session["collegecode"].ToString() + "'";
                    DataSet dscoll = d2.select_method_wo_parameter(str, "Text");
                    if (dscoll.Tables[0].Rows.Count > 0)
                    {
                        string collname = "";
                        string address1 = "";
                        string address2 = "";
                        string address3 = "";
                        string pincode = "";
                        string address = "";
                        collname = dscoll.Tables[0].Rows[0]["collname"].ToString();
                        address1 = dscoll.Tables[0].Rows[0]["address1"].ToString();
                        address2 = dscoll.Tables[0].Rows[0]["address2"].ToString();
                        address3 = dscoll.Tables[0].Rows[0]["address3"].ToString();
                        pincode = dscoll.Tables[0].Rows[0]["pincode"].ToString();
                        address = address1 + "," + "  " + address2 + "," + "  " + address3 + "," + "  " + pincode;
                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 0, 3, 1);
                        //  FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 4, 3, 1);
                        //FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 1, 1, 3);
                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 1, 1, 4);
                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 5, 3, 1);

                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 0, 3, 1);

                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 29, 1, 1, 4);
                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 29, 1, 1, 4);
                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 28, 1, 1, 4);


                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].Text = collname;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].Locked = true;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].HorizontalAlign = HorizontalAlign.Center;

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].Font.Bold = true;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].Border.BorderColorBottom = Color.White;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].Font.Size = FontUnit.Large;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].Font.Name = "Book Antiqua";
                        //FpSpread1.Sheets[0].SpanModel.Add(1, 1, 1, 3);
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 29, 1].Text = address;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 29, 1].Locked = true;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 29, 1].HorizontalAlign = HorizontalAlign.Center;

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 29, 1].Font.Size = FontUnit.Large;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 29, 1].Font.Name = "Book Antiqua";
                        ////FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount-29, 1].Border.BorderColorBottom = Color.White;

                        // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount-29, 1].Border.BorderColorBottom = Color.White;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 29, 1].Font.Size = FontUnit.Large;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].Font.Name = "Book Antiqua";
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].Text = "Pay Slip For The Month Of " + cblmonth.SelectedItem.Text + "," + "  " + year + "";
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].Font.Bold = true;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].HorizontalAlign = HorizontalAlign.Center;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].Locked = true;

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].Font.Size = FontUnit.Large;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].Font.Name = "Book Antiqua";

                        MyImg mi = new MyImg();
                        mi.ImageUrl = "../images/10BIT001.jpeg";
                        mi.ImageUrl = "Handler/Handler2.ashx?";
                        MyImg mi2 = new MyImg();
                        mi2.ImageUrl = "../images/10BIT001.jpeg";
                        mi2.ImageUrl = "Handler/Handler5.ashx?";
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 0].CellType = mi;

                        // FpSpread1.Sheets[0].SetColumnWidth(FpSpread1.Sheets[0].RowCount - 30, 100);
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 5].CellType = mi2;

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 0].Locked = true;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 0].Locked = true;


                        ////////////////////////////////cahenges

                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 25, 1, 1, 2);
                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 26, 1, 1, 2);

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 1].Column.Width = 350;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 3].Column.Width = 350;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Column.Width = 350;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 4].Column.Width = 450;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 4].Column.Width = 450;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 0].Text = "Staff Code";
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 0].Locked = true;

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 1].Text = ":" + "  " + staffcode3.ToString();
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 1].Locked = true;
                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 26, 4, 1, 2);
                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 25, 4, 1, 2);


                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 3].Text = "Department";
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 4].Text = ":" + "   " + dept_name.ToString();
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 4].Column.Width = 350;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 3].Text = "Designation";
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 4].Text = ":" + "   " + designation.ToString();

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 3].Locked = true;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 4].Locked = true;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 3].Locked = true;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 4].Locked = true;




                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 3].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 3].Font.Name = "Book Antiqua";


                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 4].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 4].Font.Name = "Book Antiqua";


                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 3].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 3].Font.Name = "Book Antiqua";

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 4].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 4].Font.Name = "Book Antiqua";

                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 25, 1, 1, 2);

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 0].Text = "Staff Name";
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Text = ":" + "  " + staffname3.ToString();

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 0].Locked = true;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Locked = true;

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Font.Name = "Book Antiqua";

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 0].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 0].Font.Name = "Book Antiqua";
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 0].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 0].Font.Name = "Book Antiqua";
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 1].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 1].Font.Name = "Book Antiqua";
                        // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 27, 1].Border.BorderColorBottom = Color.White;
                    }

                    ///////////////////////////////////////////settings

                    string getlink = d2.GetFunction("select linkvalue from inssettings where linkname='Calculate LOP from Attendance' and college_code='" + Session["collegecode"] + "'");
                    ///

                    if (getlink == "0")
                    {

                    }
                    ///////////get maxdate//

                    int splcount = 0;

                    int maxdays = getmaxdays(monthname1, year3);

                    //////////////////get attendance
                    int l = 0;
                    int cl = 0;

                    string[] leavetype = new string[50];
                    double[] clleave = new double[50];
                    double countmor = 0;
                    double counteve = 0;

                    if (monthname1 == monthnamenum)
                    {

                        for (int day = dayfrm; dayfrm <= daytonum; dayfrm++)
                        {

                            int day5 = 0;
                            day5 = 0 + dayfrm;
                            sql = "select shortname from leave_category where college_code=" + Session["collegecode"] + "";
                            SqlCommand cmd90 = new SqlCommand(sql, con);
                            con.Close();
                            con.Open();

                            l = 0;
                            cl = 0;


                            SqlDataReader dr90 = cmd90.ExecuteReader();
                        lbl: while (dr90.Read())
                            {
                                l = l + 1;
                                cl = cl + 1;



                                if (dr90.HasRows == true)
                                {
                                    string levatype = "";
                                    levatype = dr90["shortname"].ToString();
                                    leavetype[l] = levatype;
                                    sql1 = "select * from staff_attnd where mon_year between '" + monyear + "' and '" + monyearto + "' and staff_code='" + staffcode3 + "'";
                                    con1.Close();
                                    con1.Open();
                                    SqlCommand cmd100 = new SqlCommand(sql1, con1);
                                    SqlDataReader dr100 = cmd100.ExecuteReader();
                                    while (dr100.Read())
                                    {
                                        if (dr100.HasRows == true)
                                        {
                                            int day6;
                                            string attnda = "";
                                            day6 = 3 + day5;
                                            attnda = dr100[day6].ToString();
                                            if (attnda != "")
                                            {
                                                string[] split100 = attnda.Split(new char[] { '-' });
                                                string mor = "";
                                                string eve = "";
                                                mor = split100[0].ToString();
                                                eve = split100[1].ToString();
                                                //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = leavetype[l].ToString();
                                                if (mor == levatype)
                                                {
                                                    //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = levatype + "(" + countmor++ + ")";
                                                    clleave[cl] = clleave[cl] + 0.5;
                                                }
                                                if (eve == levatype)
                                                {
                                                    clleave[cl] = clleave[cl] + 0.5;

                                                }
                                                string[] lave = new string[15];
                                            }
                                            goto lbl;
                                        }
                                    }

                                }
                            }



                        }
                        string stl = "";
                        for (int p = 1; p <= l; p++)
                        {
                            for (int h = p; h <= p; h++)
                            {
                                if (leavetype[p] != "LA")
                                {
                                    if (clleave[h] != 0)
                                    {
                                        stl = stl + leavetype[p] + "-" + clleave[h] + ", ";
                                    }
                                }
                            }
                        }
                        if (stl != "")
                        {
                            stl = stl.Substring(0, stl.Length - 2);
                        }
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Text = ":" + "  " + stl.ToString();
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Name = "Book Antiqua";
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Locked = true;

                        ///////////////clear the arry
                        Array.Clear(leavetype, 0, leavetype.Length);
                        Array.Clear(clleave, 0, clleave.Length);
                    }
                    else
                    {
                        for (int day = dayfrm; dayfrm <= maxdays; dayfrm++)
                        {

                            int day5 = 0;
                            day5 = 0 + dayfrm;
                            sql = "select shortname from leave_category where college_code=" + Session["collegecode"] + "";
                            SqlCommand cmd90 = new SqlCommand(sql, con);
                            con.Close();
                            con.Open();

                            l = 0;
                            cl = 0;


                            SqlDataReader dr90 = cmd90.ExecuteReader();
                        lbl: while (dr90.Read())
                            {
                                l = l + 1;
                                cl = cl + 1;



                                if (dr90.HasRows == true)
                                {
                                    string levatype = "";
                                    levatype = dr90["shortname"].ToString();
                                    leavetype[l] = levatype;
                                    sql1 = "select * from staff_attnd where mon_year ='" + monyear + "'  and staff_code='" + staffcode3 + "'";
                                    con1.Close();
                                    con1.Open();
                                    SqlCommand cmd100 = new SqlCommand(sql1, con1);
                                    SqlDataReader dr100 = cmd100.ExecuteReader();
                                    while (dr100.Read())
                                    {
                                        if (dr100.HasRows == true)
                                        {
                                            int day6;
                                            string attnda = "";
                                            day6 = 3 + day5;
                                            attnda = dr100[day6].ToString();
                                            if (attnda != "")
                                            {
                                                string[] split100 = attnda.Split(new char[] { '-' });
                                                string mor = "";
                                                string eve = "";
                                                mor = split100[0].ToString();
                                                eve = split100[1].ToString();
                                                //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = leavetype[l].ToString();
                                                if (mor == levatype)
                                                {
                                                    //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = levatype + "(" + countmor++ + ")";
                                                    clleave[cl] = clleave[cl] + 0.5;
                                                }
                                                if (eve == levatype)
                                                {
                                                    clleave[cl] = clleave[cl] + 0.5;

                                                }
                                                string[] lave = new string[15];



                                            }
                                            goto lbl;
                                        }
                                    }

                                }
                            }



                        }
                        string stl = "";
                        for (int p = 1; p <= l; p++)
                        {
                            for (int h = p; h <= p; h++)
                            {
                                if (leavetype[p] != "LA")
                                {
                                    if (clleave[h] != 0)
                                    {
                                        //stl = stl + leavetype[p] + "-" + clleave[h] + ", ";
                                    }
                                }
                            }
                        }


                        for (int day = 1; day <= daytonum; day++)
                        {

                            int day5 = 0;
                            day5 = 0 + day;
                            sql = "select shortname from leave_category where  college_code=" + Session["collegecode"] + "";
                            SqlCommand cmd90 = new SqlCommand(sql, con);
                            con.Close();
                            con.Open();

                            l = 0;
                            cl = 0;


                            SqlDataReader dr90 = cmd90.ExecuteReader();
                        lbl: while (dr90.Read())
                            {
                                l = l + 1;
                                cl = cl + 1;



                                if (dr90.HasRows == true)
                                {
                                    string levatype = "";
                                    levatype = dr90["shortname"].ToString();
                                    leavetype[l] = levatype;
                                    sql1 = "select * from staff_attnd where mon_year='" + monyearto + "' and staff_code='" + staffcode3 + "'";
                                    con1.Close();
                                    con1.Open();
                                    SqlCommand cmd100 = new SqlCommand(sql1, con1);
                                    SqlDataReader dr100 = cmd100.ExecuteReader();
                                    while (dr100.Read())
                                    {
                                        if (dr100.HasRows == true)
                                        {
                                            int day6;
                                            string attnda = "";
                                            day6 = 3 + day5;
                                            attnda = dr100[day6].ToString();
                                            if (attnda != "")
                                            {
                                                string[] split100 = attnda.Split(new char[] { '-' });
                                                string mor = "";
                                                string eve = "";
                                                mor = split100[0].ToString();
                                                eve = split100[1].ToString();
                                                //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = leavetype[l].ToString();
                                                if (mor == levatype)
                                                {
                                                    //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = levatype + "(" + countmor++ + ")";
                                                    clleave[cl] = clleave[cl] + 0.5;
                                                }
                                                if (eve == levatype)
                                                {
                                                    clleave[cl] = clleave[cl] + 0.5;

                                                }
                                                string[] lave = new string[15];



                                            }
                                            goto lbl;
                                        }
                                    }

                                }
                            }



                        }
                        //string stl = "";
                        for (int p = 1; p <= l; p++)
                        {
                            for (int h = p; h <= p; h++)
                            {
                                if (leavetype[p] != "LA")
                                {
                                    if (clleave[h] != 0)
                                    {
                                        stl = stl + leavetype[p] + "-" + clleave[h] + ", ";
                                    }
                                }
                            }
                        }

                        if (stl != "")
                        {
                            stl = stl.Substring(0, stl.Length - 2);
                        }
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Text = ":" + "  " + stl.ToString();
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Name = "Book Antiqua";

                        ///////////////clear the arry

                    }
                    Array.Clear(leavetype, 0, leavetype.Length);
                    Array.Clear(clleave, 0, clleave.Length);



                    sql1 = "select * from staffmaster where staff_code='" + staffcode3 + "' and college_code='" + Session["collegecode"] + "'";
                    SqlCommand cmd70 = new SqlCommand(sql1, con1);
                    con1.Close();
                    con1.Open();
                    SqlDataReader dr70;
                    dr70 = cmd70.ExecuteReader();
                    dr70.Read();
                    string bankacc = "";
                    string pfnumber = "";
                    bankacc = dr70["bankaccount"].ToString();
                    pfnumber = dr70["pfnumber"].ToString();
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 3].Text = "Bank A/c No";

                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 3].Locked = true;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 3].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 3].Font.Name = "Book Antiqua";

                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 4].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 4].Font.Name = "Book Antiqua";
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 4].Locked = true;

                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 4].Text = ":" + " " + bankacc.ToString();

                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 0].Locked = true;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 1].Locked = true;

                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 0].Text = "PF A/C No";
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 1].Text = ":" + "   " + pfnumber.ToString();


                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 0].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 0].Font.Name = "Book Antiqua";
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 1].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 1].Font.Name = "Book Antiqua";


                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 0].Text = "No.of Days Present";
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Text = "No.of Leave Taken";

                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 0].Locked = true;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Locked = true;
                    // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 1].Text = pfnumber.ToString();
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Locked = true;


                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Text = "No.of working Days";
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Text = "No.of Days Leave";

                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Name = "Book Antiqua";
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Font.Name = "Book Antiqua";
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Font.Name = "Book Antiqua";
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 0].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 0].Font.Name = "Book Antiqua";


                    ///////////////////////////////////////////////
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Border.BorderColorRight = Color.Black;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].Border.BorderColorRight = Color.Black;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 2].Border.BorderColorRight = Color.Black;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 4].Border.BorderColorRight = Color.Black;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2].Border.BorderColorRight = Color.Black;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 4].Border.BorderColorRight = Color.Black;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 2].Border.BorderColorRight = Color.Black;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 4].Border.BorderColorRight = Color.Black;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 16, 2].Border.BorderColorRight = Color.Black;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 16, 4].Border.BorderColorRight = Color.Black;





                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 0].Text = "Earning";
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 0].Locked = true;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 0].Font.Bold = true;


                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 1].Font.Bold = true;

                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Text = " Amount ";
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].HorizontalAlign = HorizontalAlign.Right;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Font.Bold = true;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Locked = true;


                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 1].HorizontalAlign = HorizontalAlign.Right;

                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 0].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 0].Font.Name = "Book Antiqua";
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Font.Name = "Book Antiqua";


                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Font.Name = "Book Antiqua";


                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Text = "Deduction";
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Locked = true;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].HorizontalAlign = HorizontalAlign.Right;

                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Font.Bold = true;


                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].Text = "Amount  ";
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].Font.Bold = true;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].Locked = true;

                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Font.Name = "Book Antiqua";


                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].HorizontalAlign = HorizontalAlign.Right;


                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 1].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 1].Font.Name = "Book Antiqua";
                    count3 = Convert.ToInt32(FpSpread1.Sheets[0].RowCount - 19);
                    count = Convert.ToInt32(FpSpread1.Sheets[0].RowCount - 19);
                    count2 = Convert.ToInt32(FpSpread1.Sheets[0].RowCount - 19);

                    //FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 0].Text = "Pay Band";
                    //FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 0].Text = "Grade Pay";

                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 1].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 1].Font.Name = "Book Antiqua";

                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 2].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 2].Font.Name = "Book Antiqua";




                    // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2]
                    //////////////////////////


                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2].Font.Name = "Book Antiqua";

                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 0].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 0].Font.Name = "Book Antiqua";


                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 0].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 0].Font.Name = "Book Antiqua";

                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2].Font.Name = "Book Antiqua";

                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].Font.Name = "Book Antiqua";

                    //FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 3].Text = "Loss Of Pay";
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 3].HorizontalAlign = HorizontalAlign.Right; ;

                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 3].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 3].Font.Name = "Book Antiqua";


                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 4].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 4].Font.Name = "Book Antiqua";

                    // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 0].Text = "Basic Pay";


                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 0].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 0].Font.Name = "Book Antiqua";

                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 2].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 2].Font.Name = "Book Antiqua";


                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 1].Font.Size = FontUnit.XLarge;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 1].Font.Name = "Book Antiqua";

                    ////////////////////////////////////////

                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 0].Border.BorderColorBottom = Color.White;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 0].Border.BorderColorBottom = Color.White;

                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Border.BorderColorBottom = Color.White;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 4].Border.BorderColorBottom = Color.White;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Border.BorderColorBottom = Color.White;

                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 0].Border.BorderColorBottom = Color.White;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 0].Border.BorderColorBottom = Color.White;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Border.BorderColorBottom = Color.White;
                    // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 21, 0].Border.BorderColorBottom = Color.White;


                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Border.BorderColorRight = Color.White;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 21, 1].Border.BorderColorRight = Color.White;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Border.BorderColorRight = Color.White;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 1].Border.BorderColorRight = Color.White;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Border.BorderColorRight = Color.White;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 27, 1].Border.BorderColorRight = Color.White;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Border.BorderColorRight = Color.White;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Border.BorderColorRight = Color.White;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 0].Border.BorderColorRight = Color.White;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Border.BorderColorRight = Color.White;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 21, 0].Border.BorderColorBottom = Color.Black;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 21, 1].Border.BorderColorBottom = Color.Black;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 21, 2].Border.BorderColorBottom = Color.Black;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 21, 3].Border.BorderColorBottom = Color.Black;
                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 21, 4].Border.BorderColorBottom = Color.Black;

                    int rowcount1 = 0;


                    {
                        sql1 = "select * from individual_incentives where staff_code='" + staffcode3 + "'";
                        SqlCommand cmd200 = new SqlCommand(sql1, con1);
                        con1.Close();
                        con1.Open();
                        SqlDataReader dr200 = cmd200.ExecuteReader();
                        dr200.Read();
                        if (dr200.HasRows == true)
                        {


                            string payband5 = "";
                            string gradepay5 = "";
                            string acbasic = "";

                            double payband6 = 0;
                            double gradepay7 = 0;
                            double acbasic7 = 0;
                            string allowance4 = "";
                            double dblallowlop1;
                            acbasic = dr200["bsalary"].ToString();
                            payband5 = dr200["pay_band"].ToString();
                            gradepay5 = dr200["grade_pay"].ToString();

                            acbasic7 = Convert.ToDouble(acbasic);
                            if (payband5 != "")
                            {
                                payband6 = Convert.ToDouble(payband5);
                            }
                            else
                            {
                                payband6 = 0;
                            }
                            if (gradepay5 != "")
                            {

                                gradepay7 = Convert.ToDouble(payband5);
                            }
                            else
                            {
                                gradepay7 = 0;
                            }



                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 1].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 1].Font.Name = "Book Antiqua";

                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 1].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 1].Font.Name = "Book Antiqua";

                            if (chkactual.Checked == true)
                            {

                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 1].Text = "Actual Amount ";
                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 1].Locked = true;
                            }
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Column.Width = 100;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Text = "Amount ";
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 1].HorizontalAlign = HorizontalAlign.Right;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 1].HorizontalAlign = HorizontalAlign.Right;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 1].HorizontalAlign = HorizontalAlign.Right;
                            if (payband6 != 0)
                            {
                                FpSpread1.Sheets[0].Cells[count3, 0].Text = "Pay Band";
                                FpSpread1.Sheets[0].Cells[count3, 1].Text = payband5.ToString();
                                FpSpread1.Sheets[0].Cells[count3, 0].Locked = true;
                                FpSpread1.Sheets[0].Cells[count3, 1].Locked = true;
                                count3++;
                            }
                            if (gradepay7 != 0)
                            {
                                FpSpread1.Sheets[0].Cells[count3, 0].Text = "Pay Band";
                                FpSpread1.Sheets[0].Cells[count3, 1].Text = gradepay5.ToString();
                                FpSpread1.Sheets[0].Cells[count3, 1].Locked = true;
                                FpSpread1.Sheets[0].Cells[count3, 0].Locked = true;
                            }
                            if (chkactual.Checked == true)
                                FpSpread1.Sheets[0].Cells[count3, 1].Text = acbasic.ToString();
                            FpSpread1.Sheets[0].Cells[count3, 1].Locked = true;
                            count3++;
                            int f = 0;
                            allowance4 = dr200["allowances"].ToString();
                            int cp = 0;
                            int rowcount = 0;
                            int rowcount3 = 0;
                            string[] allowanmce_arr1;
                            string alowancesplit;
                            allowanmce_arr1 = allowance4.Split('\\');
                            for (int i = cp; i < allowanmce_arr1.GetUpperBound(0); i++)
                            {
                                alowancesplit = allowanmce_arr1[i];
                                string[] allowanceda;
                                allowanceda = alowancesplit.Split(';');
                                string da;
                                string da3;
                                string da1;
                                string dblAllowLOP;
                                da = allowanceda[0];
                                da1 = allowanceda[1];
                                da3 = allowanceda[2];
                                if (da1 == "Percent")
                                {
                                    da3 = da3 + "%";
                                }
                                if ((da3 != "") && (da3 != "0"))
                                {
                                    if (spll_alll_tag_arry.GetUpperBound(0) >= f)
                                    {
                                        if (da != spll_alll_tag_arry[f])
                                        {
                                            totaladd = totaladd + 1;
                                            //  da = da.ToUpper();
                                            if (GetCorrespondingKey(da.ToLower(), has_allowance).ToString() == "0")
                                            {
                                                FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Text = da.ToString();
                                                FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Locked = true;
                                                if (chkactual.Checked == true)
                                                    FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Text = da3.ToString();
                                                FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Locked = true;



                                                FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Font.Size = FontUnit.Large;
                                                FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Font.Name = "Book Antiqua";

                                                FpSpread1.Sheets[0].Cells[(count3 + cp), 1].HorizontalAlign = HorizontalAlign.Right;

                                                FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Font.Size = FontUnit.Large;
                                                FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Font.Name = "Book Antiqua";
                                                rowcount1 = Convert.ToInt16(count3 + cp);

                                                cp = cp + 1;
                                            }

                                            else
                                            {
                                                if (!has_spl_act_amt.ContainsKey(da.ToLower()))
                                                {
                                                    has_spl_act_amt.Add(da.ToLower(), da3);
                                                    splcount++;
                                                }
                                            }
                                        }
                                        if (GetCorrespondingKey(da.ToLower(), has_allowance).ToString() == "1")
                                        {
                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Text = da.ToString();
                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Locked = true;
                                            if (chkactual.Checked == true)
                                                FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Text = da3.ToString();
                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Locked = true;



                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Font.Size = FontUnit.Large;
                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Font.Name = "Book Antiqua";

                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 1].HorizontalAlign = HorizontalAlign.Right;

                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Font.Size = FontUnit.Large;
                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Font.Name = "Book Antiqua";
                                            rowcount1 = Convert.ToInt16(count3 + cp);

                                            cp = cp + 1;
                                        }
                                        else
                                        {
                                            f++;

                                        }
                                    }
                                }

                            }
                        }
                    }







                    /////////



                    sql = "select * from monthlypay where staff_code='" + staffcode3 + "' and monthlypay.fdate ='" + datefrom3 + "' and monthlypay.tdate ='" + dateto4 + "'";

                    con.Close();
                    con.Open();

                    SqlCommand cmd80 = new SqlCommand(sql, con);
                    SqlDataReader dr80 = cmd80.ExecuteReader();
                    dr80.Read();
                    if (dr80.HasRows == true)
                    {
                        double payband = 0;
                        double gradepay = 0;
                        double basic_pay3 = 0;
                        string allowance3 = "";
                        string deduction3 = "";
                        double lop = 0;
                        double lopd = 0;
                        double bassicd = 0;
                        double DblAllowLOP = 0;
                        double DblAllowLOP1 = 0;
                        string bsalry = dr80["bsalary"].ToString();
                        payband = Convert.ToDouble(dr80["pay_band"].ToString());
                        double payband1;
                        gradepay = Convert.ToDouble(dr80["grade_pay"].ToString());
                        basic_pay3 = Convert.ToDouble(dr80["basic_alone"].ToString());
                        lop = Convert.ToDouble(dr80["lop"].ToString());
                        lop = Math.Round(lopd, 2);
                        if (lop != 0)
                        {
                            lopd = Convert.ToDouble(lop);

                        }
                        else
                        {
                            lopd = 0;
                        }
                        Double bascpgl = Convert.ToDouble(bsalry);
                        bascpgl = Convert.ToDouble(bascpgl);
                        bassicd = Convert.ToDouble(basic_pay3);
                        bassicd = bassicd - lopd;
                        if (payband != 0)
                        {
                            // payband1 = Convert.ToDouble(payband);
                            FpSpread1.Sheets[0].Cells[count, 0].Text = "Pay Band";
                            FpSpread1.Sheets[0].Cells[count, 2].Text = payband.ToString();
                            FpSpread1.Sheets[0].Cells[count, 0].Locked = true;
                            FpSpread1.Sheets[0].Cells[count, 2].Locked = true;
                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 2].HorizontalAlign = HorizontalAlign.Right;
                            count++;
                        }



                        if (gradepay != 0)
                        {
                            FpSpread1.Sheets[0].Cells[count, 0].Text = "Grade Pay";
                            gradepay = Math.Round(gradepay, 2);
                            FpSpread1.Sheets[0].Cells[count, 2].Text = gradepay.ToString();
                            FpSpread1.Sheets[0].Cells[count, 0].Locked = true;
                            FpSpread1.Sheets[0].Cells[count, 2].Locked = true;
                            FpSpread1.Sheets[0].Cells[count, 0].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[count, 0].Font.Name = "Book Antiqua";
                            FpSpread1.Sheets[0].Cells[count, 0].HorizontalAlign = HorizontalAlign.Left;
                            FpSpread1.Sheets[0].Cells[count, 0].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[count, 0].Font.Name = "Book Antiqua";
                            FpSpread1.Sheets[0].Cells[count, 2].HorizontalAlign = HorizontalAlign.Right;
                            count++;
                        }

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2].HorizontalAlign = HorizontalAlign.Right;
                        FpSpread1.Sheets[0].Cells[count, 0].Text = "Basic";
                        FpSpread1.Sheets[0].Cells[count, 0].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[count, 0].Font.Name = "Book Antiqua";
                        FpSpread1.Sheets[0].Cells[count, 0].HorizontalAlign = HorizontalAlign.Left;
                        bassicd = Math.Round(bassicd, 2);
                        //FpSpread1.Sheets[0].Cells[count, 2].Text = bassicd.ToString();
                        FpSpread1.Sheets[0].Cells[count, 2].Text = bascpgl.ToString();
                        FpSpread1.Sheets[0].Cells[count, 0].Locked = true;
                        FpSpread1.Sheets[0].Cells[count, 0].Locked = true;
                        FpSpread1.Sheets[0].Cells[count, 2].HorizontalAlign = HorizontalAlign.Right;
                        count++;

                        //if (lop != 0)
                        //    lop = lop + DblAllowLOP;
                        // {
                        //    FpSpread1.Sheets[0].Cells[count2, 3].Text = "Loss Of Pay";
                        //   FpSpread1.Sheets[0].Cells[count2, 4].Text = lop.ToString();
                        //  count2++;
                        //}

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 4].HorizontalAlign = HorizontalAlign.Right;

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 2].HorizontalAlign = HorizontalAlign.Right;
                        //FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 3].Border.BorderColorRight = Color.Black;


                        int r = 0;
                        allowance3 = dr80["allowances"].ToString();

                        int rowcount = 0;

                        int rowcount3 = 0;
                        int c = 0;

                        string[] allowanmce_arr1;

                        string alowancesplit;
                        int exatval = 0;

                        allowanmce_arr1 = allowance3.Split('\\');

                        for (int i = c; i < allowanmce_arr1.GetUpperBound(0); i++)
                        {
                            exatval = allowanmce_arr1.GetUpperBound(0);

                            alowancesplit = allowanmce_arr1[i];

                            string[] allowanceda;

                            allowanceda = alowancesplit.Split(';');

                            string da;
                            string da2;
                            string da3;
                            double ds3 = 0;
                            DblAllowLOP = 0;
                            DblAllowLOP1 = 0;
                            string DblAllowActVal;
                            string DblAllowVal;

                            DblAllowVal = allowanceda[3];
                            DblAllowActVal = allowanceda[2];
                            DblAllowLOP = (Convert.ToDouble(DblAllowActVal) - Convert.ToDouble(DblAllowVal));
                            DblAllowLOP = Math.Round(DblAllowLOP);
                            DblAllowLOP1 = DblAllowLOP1 + DblAllowLOP;
                            da = allowanceda[0];
                            da2 = allowanceda[2];
                            da3 = allowanceda[3];
                            rowcount = Convert.ToInt16(count + c);
                            ds3 = Convert.ToDouble(da3);
                            ds3 = Math.Round(ds3, 0);
                            if (ds3 != 0)
                            {
                                if (spll_alll_tag_arry.GetUpperBound(0) >= r)
                                {
                                    if (spll_alll_tag_arry[r] != da)
                                    {

                                        if (GetCorrespondingKey(da.ToLower(), has_allowance).ToString() == "0")
                                        {
                                            FpSpread1.Sheets[0].Cells[(count + c), 0].Text = da.ToString();
                                            FpSpread1.Sheets[0].Cells[(count + c), 0].Locked = true;
                                            if (chkactual.Checked == true)
                                            {
                                                FpSpread1.Sheets[0].Cells[(count + c), 1].Text = da2.ToString();
                                                FpSpread1.Sheets[0].Cells[(count + c), 1].Locked = true;
                                            }
                                            FpSpread1.Sheets[0].Cells[(count + c), 2].Text = ds3.ToString();
                                            FpSpread1.Sheets[0].Cells[(count + c), 2].Locked = true;



                                            FpSpread1.Sheets[0].Cells[(count + c), 0].Font.Size = FontUnit.XLarge;
                                            FpSpread1.Sheets[0].Cells[(count + c), 0].Font.Name = "Book Antiqua";

                                            FpSpread1.Sheets[0].Cells[(count + c), 1].HorizontalAlign = HorizontalAlign.Right;

                                            FpSpread1.Sheets[0].Cells[(count + c), 1].Font.Size = FontUnit.XLarge;
                                            FpSpread1.Sheets[0].Cells[(count + c), 1].Font.Name = "Book Antiqua";
                                            FpSpread1.Sheets[0].Cells[(count + c), 2].HorizontalAlign = HorizontalAlign.Right;

                                            FpSpread1.Sheets[0].Cells[(count + c), 2].Font.Size = FontUnit.XLarge;
                                            FpSpread1.Sheets[0].Cells[(count + c), 2].Font.Name = "Book Antiqua";
                                            FpSpread1.Sheets[0].Cells[(count + c), 0].Border.BorderColorBottom = Color.White;
                                            FpSpread1.Sheets[0].Cells[(count + c), 1].Border.BorderColorBottom = Color.White;

                                            FpSpread1.Sheets[0].Cells[(count + c), 2].Border.BorderColorBottom = Color.White;
                                            FpSpread1.Sheets[0].Cells[(count + c), 3].Border.BorderColorBottom = Color.White;
                                            FpSpread1.Sheets[0].Cells[(count + c), 4].Border.BorderColorBottom = Color.White;


                                            rowcount = Convert.ToInt16(count + c);
                                            c = c + 1;
                                        }
                                        else
                                        {
                                            if (!has_spl_amt.ContainsKey(da.ToLower()))
                                            {
                                                has_spl_amt.Add(da.ToLower(), da3);
                                                splcount++;
                                            }
                                        }

                                    }

                                }
                            }

                        }



                        string nettadd = "";
                        nettadd = dr80["netadd"].ToString();

                        {
                            string nesal3 = "";
                            nesal3 = dr80["netsal"].ToString();


                            if (rowcount1 == 0)
                            {

                                //FpSpread1.Sheets[0].Cells[rowcount + 1, 0].Text = "Gross Total";
                                //FpSpread1.Sheets[0].Cells[rowcount + 1, 0].Font.Bold = true;
                                //FpSpread1.Sheets[0].Cells[rowcount + 1, 0].Font.Size = FontUnit.XLarge;
                                //FpSpread1.Sheets[0].Cells[rowcount + 1, 0].Font.Name = "Book Antiqua";
                                //FpSpread1.Sheets[0].Cells[rowcount + 1, 0].Locked = true;

                                //FpSpread1.Sheets[0].Cells[rowcount, 0].Border.BorderColorBottom = Color.Black;
                                //FpSpread1.Sheets[0].Cells[rowcount, 1].Border.BorderColorBottom = Color.Black;
                                //FpSpread1.Sheets[0].Cells[rowcount, 2].Border.BorderColorBottom = Color.Black;
                                //FpSpread1.Sheets[0].Cells[rowcount, 3].Border.BorderColorBottom = Color.Black;
                                //FpSpread1.Sheets[0].Cells[rowcount, 4].Border.BorderColorBottom = Color.Black;
                                //FpSpread1.Sheets[0].Cells[rowcount + 1, 0].Border.BorderColorBottom = Color.Black;
                                //FpSpread1.Sheets[0].Cells[rowcount + 1, 1].Border.BorderColorBottom = Color.Black;
                                //FpSpread1.Sheets[0].Cells[rowcount + 1, 2].Border.BorderColorBottom = Color.Black;
                                //FpSpread1.Sheets[0].Cells[rowcount + 1, 3].Border.BorderColorBottom = Color.Black;
                                //FpSpread1.Sheets[0].Cells[rowcount + 1, 4].Border.BorderColorBottom = Color.Black;

                                if (splcount != 0)
                                {
                                    int li = 0;



                                    FpSpread1.Sheets[0].SpanModel.Add(rowcount + 3, 0, 1, 2);
                                    FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Text = "Special Allowance";
                                    FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Font.Bold = true;
                                    FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Font.Size = FontUnit.XLarge;
                                    FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Font.Name = "Book Antiqua";
                                    FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Locked = true;

                                    foreach (DictionaryEntry parameter1 in has_spl_amt)
                                    {
                                        string getsplallow = parameter1.Key.ToString();
                                        string getfeeamount = parameter1.Value.ToString();

                                        //string getamount = getsplallow;
                                        string getamount = GetCorrespondingKey(getsplallow, has_spl_act_amt).ToString();



                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Text = getsplallow.ToString();
                                        if (chkactual.Checked == true)
                                        {
                                            FpSpread1.Sheets[0].Cells[rowcount + 4, 2].Text = getfeeamount.ToString();
                                            FpSpread1.Sheets[0].Cells[rowcount + 4, 1].Text = getfeeamount.ToString();
                                            FpSpread1.Sheets[0].Cells[rowcount + 4, 1].HorizontalAlign = HorizontalAlign.Right;
                                            FpSpread1.Sheets[0].Cells[rowcount + 4, 1].Font.Size = FontUnit.XLarge;
                                            FpSpread1.Sheets[0].Cells[rowcount + 4, 1].Font.Name = "Book Antiqua";
                                            FpSpread1.Sheets[0].Cells[rowcount + 4, 2].Locked = true;
                                            FpSpread1.Sheets[0].Cells[rowcount + 4, 1].Locked = true;
                                        }
                                        else
                                        {
                                            FpSpread1.Sheets[0].Cells[rowcount + 4, 2].Text = getfeeamount.ToString();
                                            FpSpread1.Sheets[0].Cells[rowcount + 4, 2].Locked = true;
                                        }
                                        net_amount = net_amount + Convert.ToDouble(getfeeamount);


                                        FpSpread1.Sheets[0].Cells[rowcount + 10, 3].Font.Bold = true;
                                        FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Font.Bold = true;
                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Font.Size = FontUnit.XLarge;
                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Font.Name = "Book Antiqua";
                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Font.Bold = true;

                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 2].Font.Bold = true;
                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 2].HorizontalAlign = HorizontalAlign.Right;
                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 2].Font.Size = FontUnit.XLarge;
                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 2].Font.Name = "Book Antiqua";
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Font.Size = FontUnit.Large;
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Font.Name = "Book Antiqua";
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Size = FontUnit.Large;
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Name = "Book Antiqua";

                                        FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 4].Font.Size = FontUnit.Large;
                                        FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 4].Font.Name = "Book Antiqua";


                                        FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 3].Font.Size = FontUnit.Large;
                                        FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 3].Font.Name = "Book Antiqua";

                                        FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Font.Size = FontUnit.Large;
                                        FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Font.Name = "Book Antiqua";

                                        FpSpread1.Sheets[0].Cells[rowcount + 10, 3].Font.Size = FontUnit.Large;
                                        FpSpread1.Sheets[0].Cells[rowcount + 10, 3].Font.Name = "Book Antiqua";
                                        rowcount++;
                                    }
                                }

                                else
                                {
                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Text = "Net Paid";
                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Locked = true;
                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Size = FontUnit.XLarge;
                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Name = "Book Antiqua";

                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Size = FontUnit.Large;
                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Name = "Book Antiqua";
                                    FpSpread1.Sheets[0].Cells[rowcount + 2, 0].Font.Bold = true;
                                    nesal3 = Math.Round(Convert.ToDouble(nesal3), 2).ToString(); ;
                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Text = nesal3.ToString();
                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Bold = true;
                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Bold = true;
                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Locked = true;

                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Border.BorderColorBottom = Color.Black;
                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Border.BorderColorBottom = Color.Black;
                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Border.BorderColorBottom = Color.Black;
                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Border.BorderColorBottom = Color.Black;
                                }
                                net_amount = net_amount + Convert.ToDouble(nettadd);
                                //if (splcount != 0)
                                //{

                                //    FpSpread1.Sheets[0].Cells[rowcount + 1, 2].Text = nettadd.ToString();
                                //    FpSpread1.Sheets[0].Cells[rowcount + 1, 2].Font.Bold = true;
                                //    FpSpread1.Sheets[0].Cells[rowcount + 1, 2].HorizontalAlign = HorizontalAlign.Right;
                                //    FpSpread1.Sheets[0].Cells[rowcount + 1, 2].Font.Size = FontUnit.XLarge;
                                //    FpSpread1.Sheets[0].Cells[rowcount + 1, 2].Font.Name = "Book Antiqua";
                                //    FpSpread1.Sheets[0].Cells[rowcount + 1, 2].Locked = true;
                                //}
                                //else
                                //{
                                //    FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Text = nettadd.ToString();
                                //    FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Font.Bold = true;
                                //    FpSpread1.Sheets[0].Cells[rowcount + 2, 2].HorizontalAlign = HorizontalAlign.Right;
                                //    FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Font.Size = FontUnit.XLarge;
                                //    FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Font.Name = "Book Antiqua";
                                //    FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Locked = true;
                                //}



                                FpSpread1.Sheets[0].Cells[rowcount + 2, 0].Font.Size = FontUnit.XLarge;
                                FpSpread1.Sheets[0].Cells[rowcount + 2, 0].Font.Name = "Book Antiqua";


                            }
                            else
                            {

                                //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Border.BorderColorBottom = Color.Black;
                                //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 1].Border.BorderColorBottom = Color.Black;
                                //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Border.BorderColorBottom = Color.Black;
                                //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 3].Border.BorderColorBottom = Color.Black;
                                //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 4].Border.BorderColorBottom = Color.Black;

                                FpSpread1.Sheets[0].Cells[rowcount1 + 2, 4].Border.BorderColorRight = Color.Black;
                                FpSpread1.Sheets[0].Cells[rowcount1 + 1, 2].Border.BorderColorRight = Color.Black;
                                FpSpread1.Sheets[0].Cells[rowcount1 + 1, 4].Border.BorderColorRight = Color.Black;

                                //FpSpread1.Sheets[0].Cells[rowcount1 + 1, 0].Border.BorderColorBottom = Color.Black;
                                //FpSpread1.Sheets[0].Cells[rowcount1 + 1, 1].Border.BorderColorBottom = Color.Black;
                                //FpSpread1.Sheets[0].Cells[rowcount1 + 1, 2].Border.BorderColorBottom = Color.Black;


                                FpSpread1.Sheets[0].Cells[rowcount1 + 1, 4].Border.BorderColorRight = Color.Black;
                                FpSpread1.Sheets[0].Cells[rowcount1 + 1, 2].Border.BorderColorRight = Color.Black;
                                FpSpread1.Sheets[0].Cells[rowcount1 + 1, 4].Border.BorderColorRight = Color.Black;

                                //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Text = "Gross Total";
                                //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Font.Name = "Book Antiqua";
                                //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Font.Size = FontUnit.XLarge;
                                //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Font.Bold = true;
                                //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Locked = true;

                                FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Border.BorderColorRight = Color.Black;
                                if (splcount != 0)
                                {
                                    int li = 0;
                                    FpSpread1.Sheets[0].SpanModel.Add(rowcount + 4, 0, 1, 2);
                                    FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Text = "Special Allowance";
                                    FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Font.Bold = true;
                                    FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Font.Name = "Book Antiqua";
                                    FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Font.Size = FontUnit.XLarge;
                                    FpSpread1.Sheets[0].Cells[rowcount + 4, 3].Border.BorderColorRight = Color.Black;
                                    FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Locked = true;
                                    foreach (DictionaryEntry parameter1 in has_spl_amt)
                                    {
                                        string getsplallow = parameter1.Key.ToString();
                                        string getfeeamount = parameter1.Value.ToString();
                                        string getamount = getfeeamount;
                                        //string getamount = GetCorrespondingKey(getsplallow, has_spl_act_amt).ToString();



                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Text = getsplallow.ToString();
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Locked = true;
                                        if (chkactual.Checked == true)
                                        {
                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Text = getfeeamount.ToString();
                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Text = getfeeamount.ToString();
                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Locked = true;
                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Locked = true;
                                        }
                                        else
                                        {
                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Text = getfeeamount.ToString();
                                            FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Locked = true;
                                        }
                                        net_amount = net_amount + Convert.ToDouble(getfeeamount);

                                        FpSpread1.Sheets[0].Cells[rowcount + 3, 0].HorizontalAlign = HorizontalAlign.Left;
                                        FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Font.Bold = true;
                                        FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Font.Size = FontUnit.XLarge;
                                        FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Font.Name = "Book Antiqua";
                                        FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Font.Size = FontUnit.XLarge;

                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 0].HorizontalAlign = HorizontalAlign.Left;
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Font.Size = FontUnit.XLarge;
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Font.Bold = true;
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Font.Name = "Book Antiqua";
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Font.Size = FontUnit.XLarge;

                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 1].HorizontalAlign = HorizontalAlign.Right;
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Font.Size = FontUnit.XLarge;
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Font.Name = "Book Antiqua";
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Font.Size = FontUnit.XLarge;

                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 2].HorizontalAlign = HorizontalAlign.Right;
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Size = FontUnit.XLarge;
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Name = "Book Antiqua";
                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Size = FontUnit.Large;
                                        rowcount++;
                                    }


                                }

                                else
                                {

                                }

                                //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Text = nettadd.ToString();
                                //net_amount = net_amount + Convert.ToDouble(nettadd);
                                //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Font.Bold = true;
                                //FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].HorizontalAlign = HorizontalAlign.Right;

                                FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Font.Size = FontUnit.XLarge;
                                FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Font.Name = "Book Antiqua";
                                FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Locked = true;
                                FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Font.Size = FontUnit.XLarge;
                                FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Font.Name = "Book Antiqua";

                            }

                            FpSpread1.Sheets[0].Cells[rowcount1 + 5, 3].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[rowcount1 + 5, 3].Font.Name = "Book Antiqua";

                            FpSpread1.Sheets[0].Cells[rowcount1 + 5, 2].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[rowcount1 + 5, 2].Font.Name = "Book Antiqua";


                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Font.Bold = true;


                        }

                        double netded = 0;

                        deduction3 = dr80["deductions"].ToString();

                        int gp = 0;

                        string[] deduction_arr1;

                        string deductionsplit1;

                        deduction_arr1 = deduction3.Split('\\');

                        for (int sp = gp; sp < deduction_arr1.GetUpperBound(0); sp++)
                        {

                            deductionsplit1 = deduction_arr1[sp];

                            string[] deductionda;

                            deductionda = deductionsplit1.Split(';');

                            string de;

                            string de3;
                            double de3d;

                            de = deductionda[0];

                            de3 = deductionda[3];
                            de3d = Convert.ToDouble(de3);
                            if (de3d != 0)
                            {
                                if (sp + 1 > totaladd)
                                {
                                    totaladd = totaladd + 1;
                                }
                                FpSpread1.Sheets[0].Cells[(count2 + gp), 3].Text = de.ToString();
                                FpSpread1.Sheets[0].Cells[(count2 + gp), 3].Locked = true;
                                FpSpread1.Sheets[0].Cells[(count2 + gp), 3].HorizontalAlign = HorizontalAlign.Right;

                                FpSpread1.Sheets[0].Cells[(count2 + gp), 4].Text = de3.ToString();
                                netded = netded + Convert.ToDouble(de3);
                                net_amount = net_amount - Convert.ToDouble(de3);
                                FpSpread1.Sheets[0].Cells[(count2 + gp), 4].HorizontalAlign = HorizontalAlign.Right;


                                FpSpread1.Sheets[0].Cells[(count2 + gp), 3].Font.Size = FontUnit.XLarge;
                                FpSpread1.Sheets[0].Cells[(count2 + gp), 3].Font.Name = "Book Antiqua";
                                FpSpread1.Sheets[0].Cells[(count2 + gp), 4].Font.Size = FontUnit.XLarge;
                                FpSpread1.Sheets[0].Cells[(count2 + gp), 4].Font.Name = "Book Antiqua";
                                rowcount3 = Convert.ToInt16(count2 + gp);
                                gp = gp + 1;
                            }
                        }
                        //Added by srinath 18/6/2014 ==========Start=================
                        if (lop > 0)
                        {
                            if (gp > 0)
                            {
                                rowcount3 = Convert.ToInt16(count2 + gp);
                            }
                            FpSpread1.Sheets[0].Cells[(count2 + gp), 3].Text = "LOP";
                            FpSpread1.Sheets[0].Cells[(count2 + gp), 3].Locked = true;
                            FpSpread1.Sheets[0].Cells[(count2 + gp), 3].HorizontalAlign = HorizontalAlign.Right;

                            FpSpread1.Sheets[0].Cells[(count2 + gp), 4].Text = lop.ToString();
                            FpSpread1.Sheets[0].Cells[(count2 + gp), 4].HorizontalAlign = HorizontalAlign.Right;
                            FpSpread1.Sheets[0].Cells[(count2 + gp), 3].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[(count2 + gp), 3].Font.Name = "Book Antiqua";
                            FpSpread1.Sheets[0].Cells[(count2 + gp), 4].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[(count2 + gp), 4].Font.Name = "Book Antiqua";
                        }
                        //==================End
                        FarPoint.Web.Spread.TextCellType t = new FarPoint.Web.Spread.TextCellType();
                        string noofpresent = "";
                        string presnt = "";
                        string absent = "";
                        string workdays = "";
                        string leavedays = "";
                        noofpresent = dr80["leavedetail"].ToString();
                        string[] presplit = noofpresent.Split(';');
                        presnt = presplit[1].ToString();
                        workdays = presplit[0].ToString();
                        leavedays = presplit[2].ToString();

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].CellType = t;

                        string get_pre_lop = dr80["pre_lop"].ToString();
                        string get_cur_lop = dr80["cur_lop"].ToString();
                        double get_pre = 0;
                        double get_cur = 0;
                        double tot_lop = 0;

                        if (get_pre_lop != "")
                        {
                            get_pre = Convert.ToDouble(get_pre_lop);
                        }
                        if (get_cur_lop != "")
                        {
                            get_cur = Convert.ToDouble(get_cur_lop);
                        }
                        tot_lop = get_pre + get_cur;
                        double totalpreset = Convert.ToDouble(workdays) - tot_lop;

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 3].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Font.Size = FontUnit.XLarge;

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Text = "No.of working Days";
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 3].Text = "No.of Days Absent/LOP";
                        FpSpread1.Sheets[0].Columns[3].Width = 200;

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 4].Text = "";

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 4].CellType = t;

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 4].CellType = t;

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 4].Text = ":" + " " + workdays;

                        if (getlink != "0")
                        {
                            if (lop != 0)
                                lop = lop + DblAllowLOP1;

                        }
                        else
                        {
                            lop = Math.Round(((Convert.ToDouble(nettadd) / Convert.ToDouble(workdays)) * (tot_lop)), 2);
                        }

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 4].Text = ":" + "  " + tot_lop.ToString() + "/" + lop.ToString();

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = ":" + "  " + totalpreset.ToString();

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 3].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 3].Font.Name = "Book Antiqua";

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 4].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 4].Font.Name = "Book Antiqua";



                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Font.Name = "Book Antiqua";

                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 4].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 4].Font.Name = "Book Antiqua";


                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Font.Name = "Book Antiqua";
                        int detrow = FpSpread1.Sheets[0].RowCount - 17;
                        if (rowcount3 == 0)
                        {//Modified by srinath 18/6/2014

                            if (rowcount1 + 2 > detrow)
                            {
                                detrow = rowcount1 + 2;
                            }
                            //Modified by srinath 18/6/2014============Start===============
                            FpSpread1.Sheets[0].Cells[detrow, 0].Text = "Gross Total";
                            FpSpread1.Sheets[0].Cells[detrow, 0].Font.Bold = true;
                            FpSpread1.Sheets[0].Cells[detrow, 0].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[detrow, 0].Font.Name = "Book Antiqua";
                            FpSpread1.Sheets[0].Cells[detrow, 0].Locked = true;

                            FpSpread1.Sheets[0].Cells[rowcount, 0].Border.BorderColorBottom = Color.Black;
                            FpSpread1.Sheets[0].Cells[rowcount, 1].Border.BorderColorBottom = Color.Black;
                            FpSpread1.Sheets[0].Cells[rowcount, 2].Border.BorderColorBottom = Color.Black;
                            FpSpread1.Sheets[0].Cells[rowcount, 3].Border.BorderColorBottom = Color.Black;
                            FpSpread1.Sheets[0].Cells[rowcount, 4].Border.BorderColorBottom = Color.Black;
                            FpSpread1.Sheets[0].Cells[detrow, 0].Border.BorderColorBottom = Color.Black;
                            FpSpread1.Sheets[0].Cells[detrow, 1].Border.BorderColorBottom = Color.Black;
                            FpSpread1.Sheets[0].Cells[detrow, 2].Border.BorderColorBottom = Color.Black;
                            FpSpread1.Sheets[0].Cells[detrow, 3].Border.BorderColorBottom = Color.Black;
                            FpSpread1.Sheets[0].Cells[detrow, 4].Border.BorderColorBottom = Color.Black;


                            FpSpread1.Sheets[0].Cells[detrow, 2].Text = nettadd.ToString();
                            FpSpread1.Sheets[0].Cells[detrow, 2].Font.Bold = true;
                            FpSpread1.Sheets[0].Cells[detrow, 2].HorizontalAlign = HorizontalAlign.Right;
                            FpSpread1.Sheets[0].Cells[detrow, 2].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[detrow, 2].Font.Name = "Book Antiqua";
                            FpSpread1.Sheets[0].Cells[detrow, 2].Locked = true;
                            FpSpread1.Sheets[0].Cells[detrow, 2].Border.BorderColorRight = Color.Black;
                            //==============End

                            FpSpread1.Sheets[0].Cells[detrow, 3].Text = "Total Deduction";

                            FpSpread1.Sheets[0].Cells[detrow, 3].HorizontalAlign = HorizontalAlign.Right;
                            FpSpread1.Sheets[0].Cells[detrow, 3].Font.Bold = true;


                            Double totde = netded + lop;
                            totde = Math.Round(totde, 2);
                            //FpSpread1.Sheets[0].Cells[detrow, 4].Text = netded.ToString();
                            FpSpread1.Sheets[0].Cells[detrow, 4].Text = totde.ToString();
                            FpSpread1.Sheets[0].Cells[detrow, 4].Font.Bold = true;



                            FpSpread1.Sheets[0].Cells[detrow, 4].HorizontalAlign = HorizontalAlign.Right;

                            FpSpread1.Sheets[0].Cells[detrow, 3].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[detrow, 3].Font.Name = "Book Antiqua";

                            FpSpread1.Sheets[0].Cells[detrow, 4].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[detrow, 4].Font.Name = "Book Antiqua";

                        }
                        else
                        {
                            if (rowcount1 > rowcount3)
                            {
                                rowcount3 = rowcount1;
                            }
                            detrow = rowcount3;
                            Double totde = netded + lop;
                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 3].Text = "Total Deduction";
                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 3].HorizontalAlign = HorizontalAlign.Right;
                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 3].Font.Bold = true;

                            totde = Math.Round(totde, 2);

                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Text = totde.ToString();
                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Font.Bold = true;

                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 3].Border.BorderColorBottom = Color.Black;
                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Border.BorderColorBottom = Color.Black;
                            FpSpread1.Sheets[0].Cells[rowcount3 + 1, 3].Border.BorderColorBottom = Color.Black;
                            FpSpread1.Sheets[0].Cells[rowcount3 + 1, 4].Border.BorderColorBottom = Color.Black;

                            //Added By SRinath 18/6/2014=======STart=======

                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 0].Text = "Gross Total";
                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 0].Font.Bold = true;
                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 0].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 0].Font.Name = "Book Antiqua";
                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 0].Locked = true;

                            FpSpread1.Sheets[0].Cells[rowcount3 + 1, 0].Border.BorderColorBottom = Color.Black;
                            FpSpread1.Sheets[0].Cells[rowcount3 + 1, 1].Border.BorderColorBottom = Color.Black;
                            FpSpread1.Sheets[0].Cells[rowcount3 + 1, 2].Border.BorderColorBottom = Color.Black;
                            FpSpread1.Sheets[0].Cells[rowcount3 + 1, 3].Border.BorderColorBottom = Color.Black;
                            FpSpread1.Sheets[0].Cells[rowcount3 + 1, 4].Border.BorderColorBottom = Color.Black;
                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 0].Border.BorderColorBottom = Color.Black;
                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 1].Border.BorderColorBottom = Color.Black;
                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 2].Border.BorderColorBottom = Color.Black;
                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 3].Border.BorderColorBottom = Color.Black;
                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Border.BorderColorBottom = Color.Black;



                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 2].Text = nettadd.ToString();
                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 2].Font.Bold = true;
                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 2].HorizontalAlign = HorizontalAlign.Right;
                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 2].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 2].Font.Name = "Book Antiqua";
                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 2].Locked = true;
                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 2].Border.BorderColorRight = Color.Black;

                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].HorizontalAlign = HorizontalAlign.Right;

                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 3].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[rowcount3 + 4, 3].Font.Name = "Book Antiqua";

                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Font.Size = FontUnit.XLarge;
                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Font.Name = "Book Antiqua";
                            FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Border.BorderColorRight = Color.Black;
                            //==========================End
                        }
                        for (int v = count2; v < detrow; v++)
                        {
                            FpSpread1.Sheets[0].Cells[v, 2].Border.BorderColorRight = Color.Black;
                            FpSpread1.Sheets[0].Cells[v, 4].Border.BorderColorRight = Color.Black;
                        }
                        FpSpread1.Sheets[0].Cells[detrow + 1, 4].Border.BorderColorRight = Color.Black;
                        FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Text = "Net Paid";
                        FpSpread1.Sheets[0].Cells[rowcount + 5, 2].HorizontalAlign = HorizontalAlign.Right;
                        FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Bold = true;

                        net_amount = Math.Round(net_amount, 2, MidpointRounding.AwayFromZero);//ADdded by srinath 20/6/2014
                        FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Text = ":" + " " + net_amount.ToString();
                        FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Bold = true;

                        FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Border.BorderColorBottom = Color.Black;
                        FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Border.BorderColorBottom = Color.Black;
                        FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Border.BorderColorBottom = Color.Black;
                        FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Border.BorderColorBottom = Color.Black;
                        FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Border.BorderColorBottom = Color.Black;
                        FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Border.BorderColorBottom = Color.Black;
                        FpSpread1.Sheets[0].Cells[rowcount + 4, 4].Border.BorderColorRight = Color.Black;
                        FpSpread1.Sheets[0].Cells[rowcount + 3, 4].Border.BorderColorRight = Color.Black;
                        FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Border.BorderColorRight = Color.Black;
                        FpSpread1.Sheets[0].Cells[rowcount + 2, 3].HorizontalAlign = HorizontalAlign.Right;

                        FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Name = "Book Antiqua";

                        FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Size = FontUnit.XLarge;
                        FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Name = "Book Antiqua";


                        //FpSpread1.Sheets[0].SetRowVisible(FpSpread1.Sheets[0].RowCount, false);
                        //FpSpread1.Sheets[0].SetRowVisible(FpSpread1.Sheets[0].RowCount - 1, false);
                        //FpSpread1.Sheets[0].SetRowVisible(FpSpread1.Sheets[0].RowCount - 2, false);
                        //FpSpread1.Sheets[0].SetRowVisible(FpSpread1.Sheets[0].RowCount - 3, false);
                        //FpSpread1.Sheets[0].SetRowVisible(FpSpread1.Sheets[0].RowCount - 4, false);
                        //FpSpread1.Sheets[0].SetRowVisible(FpSpread1.Sheets[0].RowCount - 5, false);
                        if (totaladd > 5)
                        {
                            int extra = FpSpread1.Sheets[0].RowCount % 30;
                            extra = 30 - extra;
                            int getva = FpSpread1.Sheets[0].RowCount / 30;
                            if (getva % 2 == 0)
                            {
                                extra = extra + 30;
                            }
                            FpSpread1.Sheets[0].RowCount = FpSpread1.Sheets[0].RowCount + extra;
                        }

                        has_spl_act_amt.Clear();
                        has_spl_amt.Clear();
                        FpSpread1.Visible = true;
                        Panel4.Visible = true;
                        //   ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('Please Click the Print Button To View The Report ')", true);


                    }

                }
            }
            //Start============Added by Manikandan 28/08/2013============
            FpSpread1.Sheets[0].Columns[0].BackColor = Color.White;
            FpSpread1.Sheets[0].Columns[1].BackColor = Color.White;
            FpSpread1.Sheets[0].Columns[2].BackColor = Color.White;
            FpSpread1.Sheets[0].Columns[3].BackColor = Color.White;
            FpSpread1.Sheets[0].Columns[4].BackColor = Color.White;
            FpSpread1.Sheets[0].Columns[5].BackColor = Color.White;
            //FpSpread1.Sheets[0].Columns[6].BackColor = Color.White;
            //==========================End==============================
            FpSpread1.Sheets[0].AutoPostBack = false;
            FpSpread1.SaveChanges();
        }
        catch
        {

        }
    }

    public string getmonth(string mname)
    {
        string month = "";
        if (mname == "01")
        {
            month = "January";
            return month;
        }
        else if (mname == "02")
        {
            month = "February";

        }
        else if (mname == "03")
        {
            month = "March";

        }
        else if (mname == "04")
        {
            month = "April";

        }
        else if (mname == "05")
        {
            month = "May";

        }
        else if (mname == "06")
        {
            month = "June";

        }
        else if (mname == "07")
        {
            month = "July";

        }
        else if (mname == "08")
        {
            month = "August";

        }
        else if (mname == "09")
        {
            month = "September";
        }
        else if (mname == "10")
        {
            month = "October";
        }
        else if (mname == "11")
        {
            month = "November";

        }
        else if (mname == "12")
        {
            month = "December";

        }
        return month;
    }

    //void load_slip()
    //{
    //    try
    //    {
    //        lblselect.Visible = true;
    //        double net_amount = 0;
    //        Hashtable has_spl_act_amt = new Hashtable();
    //        Hashtable has_spl_amt = new Hashtable();

    //        string staffcode3 = "";
    //        string department3 = "";
    //        string staffname3 = "";
    //        string designation = "";
    //        string dept_name = "";
    //        string date3 = Txtentryfrom.Text.ToString();
    //        string datefrom3;
    //        int monthname1;
    //        string monyear;
    //        string monthname2 = "";
    //        int monthnamenum;
    //        string yearto = "";
    //        string monyearto = "";
    //        string[] split = date3.Split(new Char[] { '/' });

    //        //////////////page

    //        FpSpread1.Sheets[0].RowCount = 0;
    //        FpSpread1.Sheets[0].ColumnCount = 0;

    //        FpSpread1.Sheets[0].PageSize = 11;
    //        FpSpread1.Pager.Position = FarPoint.Web.Spread.PagerPosition.Bottom;
    //        FpSpread1.Pager.Mode = FarPoint.Web.Spread.PagerMode.Both;
    //        FpSpread1.Pager.Align = HorizontalAlign.Right;

    //        FpSpread1.Pager.ForeColor = Color.DarkGreen;
    //        FpSpread1.Pager.BackColor = Color.AliceBlue;
    //        FpSpread1.Pager.PageCount = 5;
    //        FpSpread1.Pager.Font.Bold = true;
    //        FpSpread1.Pager.Font.Name = "Arial";
    //        FpSpread1.Pager.ForeColor = Color.DarkGreen;
    //        FpSpread1.Pager.BackColor = Color.AliceBlue;
    //        //////////////////////////////////
    //        datefrom3 = split[1].ToString() + "/" + split[0].ToString() + "/" + split[2].ToString();

    //        string date4 = Txtentryto.Text.ToString();
    //        int year3 = Convert.ToInt16(split[2].ToString());

    //        string[] split1 = date4.Split(new Char[] { '/' });

    //        string dateto4 = split1[1].ToString() + "/" + split1[0].ToString() + "/" + split1[2].ToString();

    //        monthname2 = split1[0].ToString();
    //        monthnamenum = Convert.ToInt32(monthname2.ToString());
    //        yearto = split1[2].ToString();
    //        ///////

    //        string mnmae = split[1].ToString();
    //        monthname1 = Convert.ToInt16(mnmae);
    //        monthname2 = split1[1].ToString();
    //        monthnamenum = Convert.ToInt16(monthname2);

    //        string year = split[2].ToString();

    //        monyear = monthname1.ToString() + "/" + year;
    //        monyearto = monthnamenum.ToString() + "/" + yearto;

    //        string dayfrom;
    //        int count = 0;
    //        int count2 = 0;
    //        int count3 = 0;

    //        int rowstr = 0;
    //        FpSpread1.Sheets[0].RowCount = 0;
    //        FpSpread1.Sheets[0].PageSize = 60;

    //        fpsalary.SaveChanges();

    //        FpSpread1.Sheets[0].AutoPostBack = false;

    //        //----------------------get basic spl allowance
    //        string sallary_flag = "";
    //        Hashtable has_allowance = new Hashtable();
    //        con.Close();
    //        con.Open();
    //        string get_allow_type = "select allowances from incentives_master where college_code = " + Session["collegecode"] + "";
    //        SqlCommand cmd = new SqlCommand(get_allow_type, con);
    //        SqlDataAdapter da_sal_master = new SqlDataAdapter(cmd);
    //        DataSet ds = new DataSet();
    //        da_sal_master.Fill(ds);
    //        if (ds.Tables[0].Rows.Count > 0)
    //        {

    //            string[] master_alow_split = (ds.Tables[0].Rows[0][0].ToString()).Split(';');

    //            for (int sal_type = 0; sal_type <= master_alow_split.GetUpperBound(0); sal_type++)
    //            {
    //                if (master_alow_split[sal_type].ToString().Trim() != "")
    //                {
    //                    sallary_flag = master_alow_split[sal_type].ToString();
    //                    string[] get_flag_spl = sallary_flag.Split('\\');

    //                    if (!has_allowance.ContainsKey(get_flag_spl[0]))
    //                        has_allowance.Add(get_flag_spl[0].ToLower(), get_flag_spl[1]);
    //                }
    //            }


    //            //string[] master_alow_split = (ds.Tables[0].Rows[0][0].ToString()).Split(';');

    //            //for (int sal_type = 0; sal_type <= master_alow_split.GetUpperBound(0); sal_type++)
    //            //{
    //            //    if (master_alow_split[sal_type].ToString().Trim() != "")
    //            //    {
    //            //        try
    //            //        {
    //            //            sallary_flag = master_alow_split[sal_type].ToString();
    //            //            string[] get_flag_spl = (ds.Tables[0].Rows[0][0].ToString()).Split(';');

    //            //            if (!has_allowance.ContainsKey(get_flag_spl[1]))
    //            //            {
    //            //                has_allowance.Add(get_flag_spl[sal_type].ToLower(), get_flag_spl[sal_type]);
    //            //            }
    //            //        }
    //            //        catch
    //            //        {

    //            //        }
    //            //    }
    //            //}

    //        }

    //        for (int res = 0; res <= Convert.ToInt32(fpsalary.Sheets[0].RowCount) - 1; res++)
    //        {

    //            net_amount = 0;
    //            int dayfrm = 0;
    //            string dayto;
    //            int daytonum;

    //            dayfrom = split[0].ToString();
    //            dayfrm = Convert.ToInt32(dayfrom);
    //            dayto = split1[0].ToString();
    //            daytonum = Convert.ToInt32(dayto);
    //            int isval = 0;
    //            isval = Convert.ToInt32(fpsalary.Sheets[0].Cells[res, 1].Value);

    //            if (isval == 1)
    //            {
    //                Button2.Visible = true;
    //                lblselect.Visible = false;
    //                string monname = getmonth(monthname2);
    //                staffcode3 = Convert.ToString(fpsalary.Sheets[0].Cells[res, 2].Tag);
    //                staffname3 = Convert.ToString(fpsalary.Sheets[0].Cells[res, 2].Text);

    //                designation = Convert.ToString(fpsalary.Sheets[0].Cells[res, 3].Text);
    //                dept_name = Convert.ToString(fpsalary.Sheets[0].Cells[res, 4].Text);

    //                FpSpread1.Sheets[0].RowCount = FpSpread1.Sheets[0].RowCount + 30;
    //                FpSpread1.Visible = true;
    //                // FpSpread1.Sheets[0].AutoPostBack = false;
    //                FpSpread1.Sheets[0].ColumnHeaderVisible = false;
    //                FpSpread1.Sheets[0].RowHeaderVisible = false;

    //                rowstr = Convert.ToInt32(FpSpread1.Sheets[0].RowCount + 1);
    //                FpSpread1.Sheets[0].ColumnCount = 6;

    //                ////////////setcolumn width
    //                FpSpread1.Sheets[0].Columns[0].Width = 150;
    //                // FpSpread1.Sheets[0].Columns[2].Width = 150;
    //                FpSpread1.Sheets[0].Columns[1].Width = 160;
    //                FpSpread1.Sheets[0].Columns[3].Width = 160;
    //                FpSpread1.Sheets[0].Columns[5].Width = 150;
    //                FpSpread1.Sheets[0].Columns[0].Locked = true;
    //                FpSpread1.Sheets[0].Columns[1].Locked = true;
    //                FpSpread1.Sheets[0].Columns[2].Locked = true;
    //                FpSpread1.Sheets[0].Columns[3].Locked = true;
    //                FpSpread1.Sheets[0].Columns[4].Locked = true;
    //                FpSpread1.Sheets[0].Columns[5].Locked = true;
    //                //FpSpread1.Sheets[0].Columns[6].Locked = true;

    //                // FpSpread1.Sheets[0].Columns[4].Width = 150;
    //                FpSpread1.Width = 1100;
    //                FpSpread1.Height = 550;
    //                /////////end columnwidth

    //                string str = "select isnull(collname, ' ') as collname,isnull(address1, ' ') as address1,isnull(address2,' ') as address2,isnull(address3, ' ') as address3,isnull(pincode,' ') as pincode from collinfo where college_code='" + Session["collegecode"].ToString() + "'";
    //                myconn1.Close();
    //                myconn1.Open();
    //                SqlCommand cmd50 = new SqlCommand(str, myconn1);
    //                SqlDataReader dr50 = cmd50.ExecuteReader();
    //                while (dr50.Read())
    //                {
    //                    if (dr50.HasRows == true)
    //                    {
    //                        string collname = "";
    //                        string address1 = "";
    //                        string address2 = "";
    //                        string address3 = "";
    //                        string pincode = "";
    //                        string address = "";
    //                        collname = dr50["collname"].ToString();
    //                        address1 = dr50["address1"].ToString();
    //                        address2 = dr50["address2"].ToString();
    //                        address3 = dr50["address3"].ToString();
    //                        pincode = dr50["pincode"].ToString();
    //                        address = address1 + "," + "  " + address2 + "," + "  " + address3 + "," + "  " + pincode;
    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 0, 3, 1);
    //                        //  FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 4, 3, 1);
    //                        //FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 1, 1, 3);
    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 1, 1, 4);
    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 5, 3, 1);

    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 30, 0, 3, 1);

    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 29, 1, 1, 4);
    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 29, 1, 1, 4);
    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 28, 1, 1, 4);


    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].Text = collname;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].HorizontalAlign = HorizontalAlign.Center;

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].Border.BorderColorBottom = Color.White;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].Font.Size = FontUnit.Large;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 1].Font.Name = "Book Antiqua";
    //                        //FpSpread1.Sheets[0].SpanModel.Add(1, 1, 1, 3);
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 29, 1].Text = address;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 29, 1].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 29, 1].HorizontalAlign = HorizontalAlign.Center;

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 29, 1].Font.Size = FontUnit.Large;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 29, 1].Font.Name = "Book Antiqua";
    //                        ////FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount-29, 1].Border.BorderColorBottom = Color.White;

    //                        // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount-29, 1].Border.BorderColorBottom = Color.White;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 29, 1].Font.Size = FontUnit.Large;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].Text = "Pay Slip For The Month Of " + cblmonth.SelectedItem.Text + "," + "  " + year + "";
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].Font.Bold = true;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].HorizontalAlign = HorizontalAlign.Center;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].Locked = true;

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].Font.Size = FontUnit.Large;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 28, 1].Font.Name = "Book Antiqua";

    //                        MyImg mi = new MyImg();
    //                        mi.ImageUrl = "../images/10BIT001.jpeg";
    //                        mi.ImageUrl = "Handler/Handler2.ashx?";
    //                        MyImg mi2 = new MyImg();
    //                        mi2.ImageUrl = "../images/10BIT001.jpeg";
    //                        mi2.ImageUrl = "Handler/Handler5.ashx?";
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 0].CellType = mi;

    //                        // FpSpread1.Sheets[0].SetColumnWidth(FpSpread1.Sheets[0].RowCount - 30, 100);
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 5].CellType = mi2;

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 0].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 30, 0].Locked = true;


    //                        ////////////////////////////////cahenges

    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 25, 1, 1, 2);
    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 26, 1, 1, 2);

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 1].Column.Width = 350;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 3].Column.Width = 350;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Column.Width = 350;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 4].Column.Width = 450;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 4].Column.Width = 450;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 0].Text = "Staff Code";
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 0].Locked = true;

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 1].Text = ":" + "  " + staffcode3.ToString();
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 1].Locked = true;
    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 26, 4, 1, 2);
    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 25, 4, 1, 2);


    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 3].Text = "Department";
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 4].Text = ":" + "   " + dept_name.ToString();
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 4].Column.Width = 350;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 3].Text = "Designation";
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 4].Text = ":" + "   " + designation.ToString();

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 3].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 4].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 3].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 4].Locked = true;




    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 3].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 3].Font.Name = "Book Antiqua";


    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 4].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 4].Font.Name = "Book Antiqua";


    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 3].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 3].Font.Name = "Book Antiqua";

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 4].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 4].Font.Name = "Book Antiqua";

    //                        FpSpread1.Sheets[0].SpanModel.Add(FpSpread1.Sheets[0].RowCount - 25, 1, 1, 2);

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 0].Text = "Staff Name";
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Text = ":" + "  " + staffname3.ToString();

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 0].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Locked = true;

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Font.Name = "Book Antiqua";

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 0].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 0].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 0].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 0].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 1].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 1].Font.Name = "Book Antiqua";
    //                        // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 27, 1].Border.BorderColorBottom = Color.White;

    //                    }
    //                }


    //                ///////////////////////////////////////////settings

    //                string getlink = GetFunction("select linkvalue from inssettings where linkname='Calculate LOP from Attendance' and college_code='" + Session["collegecode"] + "'");
    //                ///

    //                if (getlink == "0")
    //                {

    //                }
    //                ///////////get maxdate//

    //                int splcount = 0;

    //                int maxdays = getmaxdays(monthname1, year3);

    //                //////////////////get attendance
    //                int l = 0;
    //                int cl = 0;

    //                string[] leavetype = new string[50];
    //                double[] clleave = new double[50];
    //                double countmor = 0;
    //                double counteve = 0;

    //                if (monthname1 == monthnamenum)
    //                {

    //                    for (int day = dayfrm; dayfrm <= daytonum; dayfrm++)
    //                    {

    //                        int day5 = 0;
    //                        day5 = 0 + dayfrm;
    //                        sql = "select shortname from leave_category where college_code=" + Session["collegecode"] + "";
    //                        SqlCommand cmd90 = new SqlCommand(sql, con);
    //                        con.Close();
    //                        con.Open();

    //                        l = 0;
    //                        cl = 0;


    //                        SqlDataReader dr90 = cmd90.ExecuteReader();
    //                    lbl: while (dr90.Read())
    //                        {
    //                            l = l + 1;
    //                            cl = cl + 1;



    //                            if (dr90.HasRows == true)
    //                            {
    //                                string levatype = "";
    //                                levatype = dr90["shortname"].ToString();
    //                                leavetype[l] = levatype;
    //                                sql1 = "select * from staff_attnd where mon_year between '" + monyear + "' and '" + monyearto + "' and staff_code='" + staffcode3 + "'";
    //                                con1.Close();
    //                                con1.Open();
    //                                SqlCommand cmd100 = new SqlCommand(sql1, con1);
    //                                SqlDataReader dr100 = cmd100.ExecuteReader();
    //                                while (dr100.Read())
    //                                {
    //                                    if (dr100.HasRows == true)
    //                                    {
    //                                        int day6;
    //                                        string attnda = "";
    //                                        day6 = 3 + day5;
    //                                        attnda = dr100[day6].ToString();
    //                                        if (attnda != "")
    //                                        {
    //                                            string[] split100 = attnda.Split(new char[] { '-' });
    //                                            string mor = "";
    //                                            string eve = "";
    //                                            mor = split100[0].ToString();
    //                                            eve = split100[1].ToString();
    //                                            //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = leavetype[l].ToString();
    //                                            if (mor == levatype)
    //                                            {
    //                                                //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = levatype + "(" + countmor++ + ")";
    //                                                clleave[cl] = clleave[cl] + 0.5;
    //                                            }
    //                                            if (eve == levatype)
    //                                            {
    //                                                clleave[cl] = clleave[cl] + 0.5;

    //                                            }
    //                                            string[] lave = new string[15];
    //                                        }
    //                                        goto lbl;
    //                                    }
    //                                }

    //                            }
    //                        }



    //                    }
    //                    string stl = "";
    //                    for (int p = 1; p <= l; p++)
    //                    {
    //                        for (int h = p; h <= p; h++)
    //                        {
    //                            if (leavetype[p] != "LA")
    //                            {
    //                                if (clleave[h] != 0)
    //                                {
    //                                    stl = stl + leavetype[p] + "-" + clleave[h] + ", ";
    //                                }
    //                            }
    //                        }
    //                    }
    //                    if (stl != "")
    //                    {
    //                        stl = stl.Substring(0, stl.Length - 2);
    //                    }
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Text = ":" + "  " + stl.ToString();
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Size = FontUnit.XLarge;
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Name = "Book Antiqua";
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Locked = true;

    //                    ///////////////clear the arry
    //                    Array.Clear(leavetype, 0, leavetype.Length);
    //                    Array.Clear(clleave, 0, clleave.Length);
    //                }
    //                else
    //                {
    //                    for (int day = dayfrm; dayfrm <= maxdays; dayfrm++)
    //                    {

    //                        int day5 = 0;
    //                        day5 = 0 + dayfrm;
    //                        sql = "select shortname from leave_category where college_code=" + Session["collegecode"] + "";
    //                        SqlCommand cmd90 = new SqlCommand(sql, con);
    //                        con.Close();
    //                        con.Open();

    //                        l = 0;
    //                        cl = 0;


    //                        SqlDataReader dr90 = cmd90.ExecuteReader();
    //                    lbl: while (dr90.Read())
    //                        {
    //                            l = l + 1;
    //                            cl = cl + 1;



    //                            if (dr90.HasRows == true)
    //                            {
    //                                string levatype = "";
    //                                levatype = dr90["shortname"].ToString();
    //                                leavetype[l] = levatype;
    //                                sql1 = "select * from staff_attnd where mon_year ='" + monyear + "'  and staff_code='" + staffcode3 + "'";
    //                                con1.Close();
    //                                con1.Open();
    //                                SqlCommand cmd100 = new SqlCommand(sql1, con1);
    //                                SqlDataReader dr100 = cmd100.ExecuteReader();
    //                                while (dr100.Read())
    //                                {
    //                                    if (dr100.HasRows == true)
    //                                    {
    //                                        int day6;
    //                                        string attnda = "";
    //                                        day6 = 3 + day5;
    //                                        attnda = dr100[day6].ToString();
    //                                        if (attnda != "")
    //                                        {
    //                                            string[] split100 = attnda.Split(new char[] { '-' });
    //                                            string mor = "";
    //                                            string eve = "";
    //                                            mor = split100[0].ToString();
    //                                            eve = split100[1].ToString();
    //                                            //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = leavetype[l].ToString();
    //                                            if (mor == levatype)
    //                                            {
    //                                                //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = levatype + "(" + countmor++ + ")";
    //                                                clleave[cl] = clleave[cl] + 0.5;
    //                                            }
    //                                            if (eve == levatype)
    //                                            {
    //                                                clleave[cl] = clleave[cl] + 0.5;

    //                                            }
    //                                            string[] lave = new string[15];



    //                                        }
    //                                        goto lbl;
    //                                    }
    //                                }

    //                            }
    //                        }



    //                    }
    //                    string stl = "";
    //                    for (int p = 1; p <= l; p++)
    //                    {
    //                        for (int h = p; h <= p; h++)
    //                        {
    //                            if (leavetype[p] != "LA")
    //                            {
    //                                if (clleave[h] != 0)
    //                                {
    //                                    //stl = stl + leavetype[p] + "-" + clleave[h] + ", ";
    //                                }
    //                            }
    //                        }
    //                    }


    //                    for (int day = 1; day <= daytonum; day++)
    //                    {

    //                        int day5 = 0;
    //                        day5 = 0 + day;
    //                        sql = "select shortname from leave_category where  college_code=" + Session["collegecode"] + "";
    //                        SqlCommand cmd90 = new SqlCommand(sql, con);
    //                        con.Close();
    //                        con.Open();

    //                        l = 0;
    //                        cl = 0;


    //                        SqlDataReader dr90 = cmd90.ExecuteReader();
    //                    lbl: while (dr90.Read())
    //                        {
    //                            l = l + 1;
    //                            cl = cl + 1;



    //                            if (dr90.HasRows == true)
    //                            {
    //                                string levatype = "";
    //                                levatype = dr90["shortname"].ToString();
    //                                leavetype[l] = levatype;
    //                                sql1 = "select * from staff_attnd where mon_year='" + monyearto + "' and staff_code='" + staffcode3 + "'";
    //                                con1.Close();
    //                                con1.Open();
    //                                SqlCommand cmd100 = new SqlCommand(sql1, con1);
    //                                SqlDataReader dr100 = cmd100.ExecuteReader();
    //                                while (dr100.Read())
    //                                {
    //                                    if (dr100.HasRows == true)
    //                                    {
    //                                        int day6;
    //                                        string attnda = "";
    //                                        day6 = 3 + day5;
    //                                        attnda = dr100[day6].ToString();
    //                                        if (attnda != "")
    //                                        {
    //                                            string[] split100 = attnda.Split(new char[] { '-' });
    //                                            string mor = "";
    //                                            string eve = "";
    //                                            mor = split100[0].ToString();
    //                                            eve = split100[1].ToString();
    //                                            //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = leavetype[l].ToString();
    //                                            if (mor == levatype)
    //                                            {
    //                                                //  FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = levatype + "(" + countmor++ + ")";
    //                                                clleave[cl] = clleave[cl] + 0.5;
    //                                            }
    //                                            if (eve == levatype)
    //                                            {
    //                                                clleave[cl] = clleave[cl] + 0.5;

    //                                            }
    //                                            string[] lave = new string[15];



    //                                        }
    //                                        goto lbl;
    //                                    }
    //                                }

    //                            }
    //                        }



    //                    }
    //                    //string stl = "";
    //                    for (int p = 1; p <= l; p++)
    //                    {
    //                        for (int h = p; h <= p; h++)
    //                        {
    //                            if (leavetype[p] != "LA")
    //                            {
    //                                if (clleave[h] != 0)
    //                                {
    //                                    stl = stl + leavetype[p] + "-" + clleave[h] + ", ";
    //                                }
    //                            }
    //                        }
    //                    }

    //                    if (stl != "")
    //                    {
    //                        stl = stl.Substring(0, stl.Length - 2);
    //                    }
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Text = ":" + "  " + stl.ToString();
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Size = FontUnit.XLarge;
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Name = "Book Antiqua";

    //                    ///////////////clear the arry

    //                }
    //                Array.Clear(leavetype, 0, leavetype.Length);
    //                Array.Clear(clleave, 0, clleave.Length);



    //                sql1 = "select * from staffmaster where staff_code='" + staffcode3 + "' and college_code='" + Session["collegecode"] + "'";
    //                SqlCommand cmd70 = new SqlCommand(sql1, con1);
    //                con1.Close();
    //                con1.Open();
    //                SqlDataReader dr70;
    //                dr70 = cmd70.ExecuteReader();
    //                dr70.Read();
    //                string bankacc = "";
    //                string pfnumber = "";
    //                bankacc = dr70["bankaccount"].ToString();
    //                pfnumber = dr70["pfnumber"].ToString();
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 3].Text = "Bank A/c No";

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 3].Locked = true;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 3].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 3].Font.Name = "Book Antiqua";

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 4].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 4].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 4].Locked = true;

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 4].Text = ":" + " " + bankacc.ToString();

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 0].Locked = true;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 1].Locked = true;

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 0].Text = "PF A/C No";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 1].Text = ":" + "   " + pfnumber.ToString();


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 0].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 0].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 1].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 1].Font.Name = "Book Antiqua";


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 0].Text = "No.of Days Present";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Text = "No.of Leave Taken";

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 0].Locked = true;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Locked = true;
    //                // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 1].Text = pfnumber.ToString();
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Locked = true;


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Text = "No.of working Days";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Text = "No.of Days Leave";

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 0].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 0].Font.Name = "Book Antiqua";


    //                ///////////////////////////////////////////////
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Border.BorderColorRight = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].Border.BorderColorRight = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 2].Border.BorderColorRight = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 4].Border.BorderColorRight = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2].Border.BorderColorRight = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 4].Border.BorderColorRight = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 2].Border.BorderColorRight = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 4].Border.BorderColorRight = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 16, 2].Border.BorderColorRight = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 16, 4].Border.BorderColorRight = Color.Black;





    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 0].Text = "Earning";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 0].Locked = true;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 0].Font.Bold = true;


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 1].Font.Bold = true;

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Text = " Amount ";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].HorizontalAlign = HorizontalAlign.Right;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Font.Bold = true;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Locked = true;


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 1].HorizontalAlign = HorizontalAlign.Right;

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 0].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 0].Font.Name = "Book Antiqua";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Font.Name = "Book Antiqua";


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Font.Name = "Book Antiqua";


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Text = "Deduction";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Locked = true;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].HorizontalAlign = HorizontalAlign.Right;

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Font.Bold = true;


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].Text = "Amount  ";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].Font.Bold = true;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].Locked = true;

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 3].Font.Name = "Book Antiqua";


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].HorizontalAlign = HorizontalAlign.Right;


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 1].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 1].Font.Name = "Book Antiqua";
    //                count3 = Convert.ToInt32(FpSpread1.Sheets[0].RowCount - 19);
    //                count = Convert.ToInt32(FpSpread1.Sheets[0].RowCount - 19);
    //                count2 = Convert.ToInt32(FpSpread1.Sheets[0].RowCount - 19);

    //                //FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 0].Text = "Pay Band";
    //                //FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 0].Text = "Grade Pay";

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 1].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 1].Font.Name = "Book Antiqua";

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 2].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 2].Font.Name = "Book Antiqua";




    //                // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2]
    //                //////////////////////////


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2].Font.Name = "Book Antiqua";

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 0].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 0].Font.Name = "Book Antiqua";


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 0].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 0].Font.Name = "Book Antiqua";

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2].Font.Name = "Book Antiqua";

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 4].Font.Name = "Book Antiqua";

    //                //FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 3].Text = "Loss Of Pay";
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 3].HorizontalAlign = HorizontalAlign.Right; ;

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 3].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 3].Font.Name = "Book Antiqua";


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 4].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 4].Font.Name = "Book Antiqua";

    //                // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 0].Text = "Basic Pay";


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 0].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 0].Font.Name = "Book Antiqua";

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 2].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 2].Font.Name = "Book Antiqua";


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 1].Font.Size = FontUnit.XLarge;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 1].Font.Name = "Book Antiqua";

    //                ////////////////////////////////////////

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 0].Border.BorderColorBottom = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 0].Border.BorderColorBottom = Color.White;

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Border.BorderColorBottom = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 4].Border.BorderColorBottom = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Border.BorderColorBottom = Color.White;

    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 24, 0].Border.BorderColorBottom = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 0].Border.BorderColorBottom = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Border.BorderColorBottom = Color.White;
    //                // FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 21, 0].Border.BorderColorBottom = Color.White;


    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Border.BorderColorRight = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 21, 1].Border.BorderColorRight = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Border.BorderColorRight = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 26, 1].Border.BorderColorRight = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 25, 1].Border.BorderColorRight = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 27, 1].Border.BorderColorRight = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Border.BorderColorRight = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 1].Border.BorderColorRight = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 0].Border.BorderColorRight = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 0].Border.BorderColorRight = Color.White;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 21, 0].Border.BorderColorBottom = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 21, 1].Border.BorderColorBottom = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 21, 2].Border.BorderColorBottom = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 21, 3].Border.BorderColorBottom = Color.Black;
    //                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 21, 4].Border.BorderColorBottom = Color.Black;

    //                int rowcount1 = 0;


    //                {
    //                    sql1 = "select * from individual_incentives where staff_code='" + staffcode3 + "'";
    //                    SqlCommand cmd200 = new SqlCommand(sql1, con1);
    //                    con1.Close();
    //                    con1.Open();
    //                    SqlDataReader dr200 = cmd200.ExecuteReader();
    //                    dr200.Read();
    //                    if (dr200.HasRows == true)
    //                    {


    //                        string payband5 = "";
    //                        string gradepay5 = "";
    //                        string acbasic = "";

    //                        double payband6 = 0;
    //                        double gradepay7 = 0;
    //                        double acbasic7 = 0;
    //                        string allowance4 = "";
    //                        double dblallowlop1;
    //                        acbasic = dr200["bsalary"].ToString();
    //                        payband5 = dr200["pay_band"].ToString();
    //                        gradepay5 = dr200["grade_pay"].ToString();

    //                        acbasic7 = Convert.ToDouble(acbasic);
    //                        if (payband5 != "")
    //                        {
    //                            payband6 = Convert.ToDouble(payband5);
    //                        }
    //                        else
    //                        {
    //                            payband6 = 0;
    //                        }
    //                        if (gradepay5 != "")
    //                        {

    //                            gradepay7 = Convert.ToDouble(payband5);
    //                        }
    //                        else
    //                        {
    //                            gradepay7 = 0;
    //                        }



    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 1].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 1].Font.Name = "Book Antiqua";

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 1].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 1].Font.Name = "Book Antiqua";

    //                        if (chkactual.Checked == true)
    //                        {

    //                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 1].Text = "Actual Amount ";
    //                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 1].Locked = true;
    //                        }
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Column.Width = 100;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 20, 2].Text = "Amount ";
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 1].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 1].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 1].HorizontalAlign = HorizontalAlign.Right;
    //                        if (payband6 != 0)
    //                        {
    //                            FpSpread1.Sheets[0].Cells[count3, 0].Text = "Pay Band";
    //                            FpSpread1.Sheets[0].Cells[count3, 1].Text = payband5.ToString();
    //                            FpSpread1.Sheets[0].Cells[count3, 0].Locked = true;
    //                            FpSpread1.Sheets[0].Cells[count3, 1].Locked = true;
    //                            count3++;
    //                        }
    //                        if (gradepay7 != 0)
    //                        {
    //                            FpSpread1.Sheets[0].Cells[count3, 0].Text = "Pay Band";
    //                            FpSpread1.Sheets[0].Cells[count3, 1].Text = gradepay5.ToString();
    //                            FpSpread1.Sheets[0].Cells[count3, 1].Locked = true;
    //                            FpSpread1.Sheets[0].Cells[count3, 0].Locked = true;
    //                        }
    //                        if (chkactual.Checked == true)
    //                            FpSpread1.Sheets[0].Cells[count3, 1].Text = acbasic.ToString();
    //                        FpSpread1.Sheets[0].Cells[count3, 1].Locked = true;
    //                        count3++;
    //                        int f = 0;
    //                        allowance4 = dr200["allowances"].ToString();
    //                        int cp = 0;
    //                        int rowcount = 0;
    //                        int rowcount3 = 0;
    //                        string[] allowanmce_arr1;
    //                        string alowancesplit;
    //                        allowanmce_arr1 = allowance4.Split('\\');
    //                        for (int i = cp; i < allowanmce_arr1.GetUpperBound(0); i++)
    //                        {
    //                            alowancesplit = allowanmce_arr1[i];
    //                            string[] allowanceda;
    //                            allowanceda = alowancesplit.Split(';');
    //                            string da;
    //                            string da3;
    //                            string da1;
    //                            string dblAllowLOP;
    //                            da = allowanceda[0];
    //                            da1 = allowanceda[1];
    //                            da3 = allowanceda[2];
    //                            if (da1 == "Percent")
    //                            {
    //                                da3 = da3 + "%";
    //                            }
    //                            if ((da3 != "") && (da3 != "0"))
    //                            {
    //                                if (spll_alll_tag_arry.GetUpperBound(0) >= f)
    //                                {
    //                                    if (da != spll_alll_tag_arry[f])
    //                                    {
    //                                        //  da = da.ToUpper();
    //                                        if (GetCorrespondingKey(da.ToLower(), has_allowance).ToString() == "0")
    //                                        {
    //                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Text = da.ToString();
    //                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Locked = true;
    //                                            if (chkactual.Checked == true)
    //                                                FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Text = da3.ToString();
    //                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Locked = true;



    //                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Font.Size = FontUnit.Large;
    //                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Font.Name = "Book Antiqua";

    //                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 1].HorizontalAlign = HorizontalAlign.Right;

    //                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Font.Size = FontUnit.Large;
    //                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Font.Name = "Book Antiqua";
    //                                            rowcount1 = Convert.ToInt16(count3 + cp);

    //                                            cp = cp + 1;
    //                                        }

    //                                        else
    //                                        {
    //                                            if (!has_spl_act_amt.ContainsKey(da.ToLower()))
    //                                            {
    //                                                has_spl_act_amt.Add(da.ToLower(), da3);
    //                                                splcount++;
    //                                            }
    //                                        }
    //                                    }
    //                                    if (GetCorrespondingKey(da.ToLower(), has_allowance).ToString() == "1")
    //                                    {
    //                                        FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Text = da.ToString();
    //                                        FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Locked = true;
    //                                        if (chkactual.Checked == true)
    //                                            FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Text = da3.ToString();
    //                                        FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Locked = true;



    //                                        FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Font.Size = FontUnit.Large;
    //                                        FpSpread1.Sheets[0].Cells[(count3 + cp), 0].Font.Name = "Book Antiqua";

    //                                        FpSpread1.Sheets[0].Cells[(count3 + cp), 1].HorizontalAlign = HorizontalAlign.Right;

    //                                        FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Font.Size = FontUnit.Large;
    //                                        FpSpread1.Sheets[0].Cells[(count3 + cp), 1].Font.Name = "Book Antiqua";
    //                                        rowcount1 = Convert.ToInt16(count3 + cp);

    //                                        cp = cp + 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        f++;

    //                                    }
    //                                }
    //                            }

    //                        }
    //                    }
    //                }







    //                /////////



    //                sql = "select * from monthlypay where staff_code='" + staffcode3 + "' and monthlypay.fdate ='" + datefrom3 + "' and monthlypay.tdate ='" + dateto4 + "'";

    //                con.Close();
    //                con.Open();

    //                SqlCommand cmd80 = new SqlCommand(sql, con);
    //                SqlDataReader dr80 = cmd80.ExecuteReader();
    //                dr80.Read();
    //                if (dr80.HasRows == true)
    //                {
    //                    double payband = 0;
    //                    double gradepay = 0;
    //                    double basic_pay3 = 0;
    //                    string allowance3 = "";
    //                    string deduction3 = "";
    //                    double lop = 0;
    //                    double lopd = 0;
    //                    double bassicd = 0;
    //                    double DblAllowLOP = 0;
    //                    double DblAllowLOP1 = 0;

    //                    payband = Convert.ToDouble(dr80["pay_band"].ToString());
    //                    double payband1;
    //                    gradepay = Convert.ToDouble(dr80["grade_pay"].ToString());
    //                    basic_pay3 = Convert.ToDouble(dr80["basic_alone"].ToString());
    //                    lop = Convert.ToDouble(dr80["lop"].ToString());
    //                    if (lop != 0)
    //                    {
    //                        lopd = Convert.ToDouble(lop);
    //                    }
    //                    else
    //                    {
    //                        lopd = 0;
    //                    }
    //                    bassicd = Convert.ToDouble(basic_pay3);
    //                    bassicd = bassicd - lopd;
    //                    if (payband != 0)
    //                    {
    //                        // payband1 = Convert.ToDouble(payband);
    //                        FpSpread1.Sheets[0].Cells[count, 0].Text = "Pay Band";
    //                        FpSpread1.Sheets[0].Cells[count, 2].Text = payband.ToString();
    //                        FpSpread1.Sheets[0].Cells[count, 0].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[count, 2].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 2].HorizontalAlign = HorizontalAlign.Right;
    //                        count++;
    //                    }



    //                    if (gradepay != 0)
    //                    {
    //                        FpSpread1.Sheets[0].Cells[count, 0].Text = "Grade Pay";
    //                        FpSpread1.Sheets[0].Cells[count, 2].Text = gradepay.ToString();
    //                        FpSpread1.Sheets[0].Cells[count, 0].Locked = true;
    //                        FpSpread1.Sheets[0].Cells[count, 2].Locked = true;
    //                        count++;
    //                    }

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 18, 2].HorizontalAlign = HorizontalAlign.Right;

    //                    FpSpread1.Sheets[0].Cells[count, 0].Text = "Basic";
    //                    FpSpread1.Sheets[0].Cells[count, 2].Text = bassicd.ToString();
    //                    FpSpread1.Sheets[0].Cells[count, 0].Locked = true;
    //                    FpSpread1.Sheets[0].Cells[count, 0].Locked = true;
    //                    FpSpread1.Sheets[0].Cells[count, 2].HorizontalAlign = HorizontalAlign.Right;
    //                    count++;

    //                    //if (lop != 0)
    //                    //    lop = lop + DblAllowLOP;
    //                    // {
    //                    //    FpSpread1.Sheets[0].Cells[count2, 3].Text = "Loss Of Pay";
    //                    //   FpSpread1.Sheets[0].Cells[count2, 4].Text = lop.ToString();
    //                    //  count2++;
    //                    //}

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 19, 4].HorizontalAlign = HorizontalAlign.Right;

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 2].HorizontalAlign = HorizontalAlign.Right;
    //                    //FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 3].Border.BorderColorRight = Color.Black;


    //                    int r = 0;
    //                    allowance3 = dr80["allowances"].ToString();

    //                    int rowcount = 0;

    //                    int rowcount3 = 0;
    //                    int c = 0;

    //                    string[] allowanmce_arr1;

    //                    string alowancesplit;
    //                    int exatval = 0;

    //                    allowanmce_arr1 = allowance3.Split('\\');

    //                    for (int i = c; i < allowanmce_arr1.GetUpperBound(0); i++)
    //                    {
    //                        exatval = allowanmce_arr1.GetUpperBound(0);

    //                        alowancesplit = allowanmce_arr1[i];

    //                        string[] allowanceda;

    //                        allowanceda = alowancesplit.Split(';');

    //                        string da;
    //                        string da2;
    //                        string da3;
    //                        double ds3 = 0;
    //                        DblAllowLOP = 0;
    //                        DblAllowLOP1 = 0;
    //                        string DblAllowActVal;
    //                        string DblAllowVal;

    //                        DblAllowVal = allowanceda[3];
    //                        DblAllowActVal = allowanceda[2];
    //                        DblAllowLOP = (Convert.ToDouble(DblAllowActVal) - Convert.ToDouble(DblAllowVal));
    //                        DblAllowLOP = Math.Round(DblAllowLOP);
    //                        DblAllowLOP1 = DblAllowLOP1 + DblAllowLOP;
    //                        da = allowanceda[0];
    //                        da2 = allowanceda[2];
    //                        da3 = allowanceda[3];
    //                        rowcount = Convert.ToInt16(count + c);
    //                        ds3 = Convert.ToDouble(da3);
    //                        ds3 = Math.Round(ds3, 0);
    //                        if (ds3 != 0)
    //                        {
    //                            if (spll_alll_tag_arry.GetUpperBound(0) >= r)
    //                            {
    //                                if (spll_alll_tag_arry[r] != da)
    //                                {

    //                                    if (GetCorrespondingKey(da.ToLower(), has_allowance).ToString() == "0")
    //                                    {
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 0].Text = da.ToString();
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 0].Locked = true;
    //                                        if (chkactual.Checked == true)
    //                                        {
    //                                            FpSpread1.Sheets[0].Cells[(count + c), 1].Text = da2.ToString();
    //                                            FpSpread1.Sheets[0].Cells[(count + c), 1].Locked = true;
    //                                        }
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 2].Text = ds3.ToString();
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 2].Locked = true;



    //                                        FpSpread1.Sheets[0].Cells[(count + c), 0].Font.Size = FontUnit.XLarge;
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 0].Font.Name = "Book Antiqua";

    //                                        FpSpread1.Sheets[0].Cells[(count + c), 1].HorizontalAlign = HorizontalAlign.Right;

    //                                        FpSpread1.Sheets[0].Cells[(count + c), 1].Font.Size = FontUnit.XLarge;
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 1].Font.Name = "Book Antiqua";
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 2].HorizontalAlign = HorizontalAlign.Right;

    //                                        FpSpread1.Sheets[0].Cells[(count + c), 2].Font.Size = FontUnit.XLarge;
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 2].Font.Name = "Book Antiqua";
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 0].Border.BorderColorBottom = Color.White;
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 1].Border.BorderColorBottom = Color.White;

    //                                        FpSpread1.Sheets[0].Cells[(count + c), 2].Border.BorderColorBottom = Color.White;
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 3].Border.BorderColorBottom = Color.White;
    //                                        FpSpread1.Sheets[0].Cells[(count + c), 4].Border.BorderColorBottom = Color.White;


    //                                        rowcount = Convert.ToInt16(count + c);
    //                                        c = c + 1;
    //                                    }
    //                                    else
    //                                    {
    //                                        if (!has_spl_amt.ContainsKey(da.ToLower()))
    //                                        {
    //                                            has_spl_amt.Add(da.ToLower(), da3);
    //                                            splcount++;
    //                                        }
    //                                    }

    //                                }

    //                            }
    //                        }

    //                    }



    //                    string nettadd = "";
    //                    nettadd = dr80["netadd"].ToString();

    //                    {
    //                        string nesal3 = "";
    //                        nesal3 = dr80["netsal"].ToString();


    //                        if (rowcount1 == 0)
    //                        {

    //                            FpSpread1.Sheets[0].Cells[rowcount + 1, 0].Text = "Gross Total";
    //                            FpSpread1.Sheets[0].Cells[rowcount + 1, 0].Font.Bold = true;
    //                            FpSpread1.Sheets[0].Cells[rowcount + 1, 0].Font.Size = FontUnit.XLarge;
    //                            FpSpread1.Sheets[0].Cells[rowcount + 1, 0].Font.Name = "Book Antiqua";
    //                            FpSpread1.Sheets[0].Cells[rowcount + 1, 0].Locked = true;

    //                            FpSpread1.Sheets[0].Cells[rowcount, 0].Border.BorderColorBottom = Color.Black;
    //                            FpSpread1.Sheets[0].Cells[rowcount, 1].Border.BorderColorBottom = Color.Black;
    //                            FpSpread1.Sheets[0].Cells[rowcount, 2].Border.BorderColorBottom = Color.Black;
    //                            FpSpread1.Sheets[0].Cells[rowcount, 3].Border.BorderColorBottom = Color.Black;
    //                            FpSpread1.Sheets[0].Cells[rowcount, 4].Border.BorderColorBottom = Color.Black;
    //                            FpSpread1.Sheets[0].Cells[rowcount + 1, 0].Border.BorderColorBottom = Color.Black;
    //                            FpSpread1.Sheets[0].Cells[rowcount + 1, 1].Border.BorderColorBottom = Color.Black;
    //                            FpSpread1.Sheets[0].Cells[rowcount + 1, 2].Border.BorderColorBottom = Color.Black;
    //                            FpSpread1.Sheets[0].Cells[rowcount + 1, 3].Border.BorderColorBottom = Color.Black;
    //                            FpSpread1.Sheets[0].Cells[rowcount + 1, 4].Border.BorderColorBottom = Color.Black;

    //                            if (splcount != 0)
    //                            {
    //                                int li = 0;



    //                                FpSpread1.Sheets[0].SpanModel.Add(rowcount + 3, 0, 1, 2);
    //                                FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Text = "Special Allowance";
    //                                FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Font.Bold = true;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Font.Size = FontUnit.XLarge;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Locked = true;

    //                                foreach (DictionaryEntry parameter1 in has_spl_amt)
    //                                {
    //                                    string getsplallow = parameter1.Key.ToString();
    //                                    string getfeeamount = parameter1.Value.ToString();

    //                                    //string getamount = getsplallow;
    //                                    string getamount = GetCorrespondingKey(getsplallow, has_spl_act_amt).ToString();



    //                                    FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Text = getsplallow.ToString();
    //                                    if (chkactual.Checked == true)
    //                                    {
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 2].Text = getfeeamount.ToString();
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 1].Text = getfeeamount.ToString();
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 1].HorizontalAlign = HorizontalAlign.Right;
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 1].Font.Size = FontUnit.XLarge;
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 1].Font.Name = "Book Antiqua";
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 2].Locked = true;
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 1].Locked = true;
    //                                    }
    //                                    else
    //                                    {
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 2].Text = getfeeamount.ToString();
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 4, 2].Locked = true;
    //                                    }
    //                                    net_amount = net_amount + Convert.ToDouble(getfeeamount);


    //                                    FpSpread1.Sheets[0].Cells[rowcount + 10, 3].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Font.Size = FontUnit.XLarge;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Font.Bold = true;

    //                                    FpSpread1.Sheets[0].Cells[rowcount + 4, 2].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 4, 2].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 4, 2].Font.Size = FontUnit.XLarge;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 4, 2].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Font.Size = FontUnit.Large;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Size = FontUnit.Large;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Name = "Book Antiqua";

    //                                    FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 4].Font.Size = FontUnit.Large;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 4].Font.Name = "Book Antiqua";


    //                                    FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 3].Font.Size = FontUnit.Large;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 6 + li, 3].Font.Name = "Book Antiqua";

    //                                    FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Font.Size = FontUnit.Large;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 10, 2].Font.Name = "Book Antiqua";

    //                                    FpSpread1.Sheets[0].Cells[rowcount + 10, 3].Font.Size = FontUnit.Large;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 10, 3].Font.Name = "Book Antiqua";
    //                                    rowcount++;
    //                                }
    //                            }

    //                            else
    //                            {
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Text = "Net Paid";
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Locked = true;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Size = FontUnit.XLarge;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Name = "Book Antiqua";

    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Size = FontUnit.Large;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].Cells[rowcount + 2, 0].Font.Bold = true;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Text = nesal3.ToString();
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Bold = true;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Bold = true;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Locked = true;

    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Border.BorderColorBottom = Color.Black;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Border.BorderColorBottom = Color.Black;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Border.BorderColorBottom = Color.Black;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Border.BorderColorBottom = Color.Black;
    //                            }
    //                            net_amount = net_amount + Convert.ToDouble(nettadd);
    //                            if (splcount != 0)
    //                            {

    //                                FpSpread1.Sheets[0].Cells[rowcount + 1, 2].Text = nettadd.ToString();
    //                                FpSpread1.Sheets[0].Cells[rowcount + 1, 2].Font.Bold = true;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 1, 2].HorizontalAlign = HorizontalAlign.Right;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 1, 2].Font.Size = FontUnit.XLarge;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 1, 2].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].Cells[rowcount + 1, 2].Locked = true;
    //                            }
    //                            else
    //                            {
    //                                FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Text = nettadd.ToString();
    //                                FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Font.Bold = true;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 2, 2].HorizontalAlign = HorizontalAlign.Right;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Font.Size = FontUnit.XLarge;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].Cells[rowcount + 2, 2].Locked = true;
    //                            }



    //                            FpSpread1.Sheets[0].Cells[rowcount + 2, 0].Font.Size = FontUnit.XLarge;
    //                            FpSpread1.Sheets[0].Cells[rowcount + 2, 0].Font.Name = "Book Antiqua";


    //                        }
    //                        else
    //                        {

    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Border.BorderColorBottom = Color.Black;
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 1].Border.BorderColorBottom = Color.Black;
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Border.BorderColorBottom = Color.Black;
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 3].Border.BorderColorBottom = Color.Black;
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 4].Border.BorderColorBottom = Color.Black;

    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 4].Border.BorderColorRight = Color.Black;
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 1, 2].Border.BorderColorRight = Color.Black;
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 1, 4].Border.BorderColorRight = Color.Black;

    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 1, 0].Border.BorderColorBottom = Color.Black;
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 1, 1].Border.BorderColorBottom = Color.Black;
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 1, 2].Border.BorderColorBottom = Color.Black;


    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 1, 4].Border.BorderColorRight = Color.Black;
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 1, 2].Border.BorderColorRight = Color.Black;
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 1, 4].Border.BorderColorRight = Color.Black;

    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Text = "Gross Total";
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Font.Name = "Book Antiqua";
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Font.Size = FontUnit.XLarge;
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Font.Bold = true;
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Locked = true;

    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Border.BorderColorRight = Color.Black;
    //                            if (splcount != 0)
    //                            {
    //                                int li = 0;
    //                                FpSpread1.Sheets[0].SpanModel.Add(rowcount + 4, 0, 1, 2);
    //                                FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Text = "Special Allowance";
    //                                FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Font.Bold = true;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Font.Name = "Book Antiqua";
    //                                FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Font.Size = FontUnit.XLarge;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 4, 3].Border.BorderColorRight = Color.Black;
    //                                FpSpread1.Sheets[0].Cells[rowcount + 4, 0].Locked = true;
    //                                foreach (DictionaryEntry parameter1 in has_spl_amt)
    //                                {
    //                                    string getsplallow = parameter1.Key.ToString();
    //                                    string getfeeamount = parameter1.Value.ToString();
    //                                    string getamount = getfeeamount;
    //                                    //string getamount = GetCorrespondingKey(getsplallow, has_spl_act_amt).ToString();



    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Text = getsplallow.ToString();
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Locked = true;
    //                                    if (chkactual.Checked == true)
    //                                    {
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Text = getfeeamount.ToString();
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Text = getfeeamount.ToString();
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Locked = true;
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Locked = true;
    //                                    }
    //                                    else
    //                                    {
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Text = getfeeamount.ToString();
    //                                        FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Locked = true;
    //                                    }
    //                                    net_amount = net_amount + Convert.ToDouble(getfeeamount);

    //                                    FpSpread1.Sheets[0].Cells[rowcount + 3, 0].HorizontalAlign = HorizontalAlign.Left;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Font.Size = FontUnit.XLarge;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 3, 0].Font.Size = FontUnit.XLarge;

    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 0].HorizontalAlign = HorizontalAlign.Left;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Font.Size = FontUnit.XLarge;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Font.Bold = true;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Font.Size = FontUnit.XLarge;

    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 1].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Font.Size = FontUnit.XLarge;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Font.Size = FontUnit.XLarge;

    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 2].HorizontalAlign = HorizontalAlign.Right;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Size = FontUnit.XLarge;
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Name = "Book Antiqua";
    //                                    FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Size = FontUnit.Large;
    //                                    rowcount++;
    //                                }


    //                            }

    //                            else
    //                            {

    //                            }

    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Text = nettadd.ToString();
    //                            net_amount = net_amount + Convert.ToDouble(nettadd);
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Font.Bold = true;
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].HorizontalAlign = HorizontalAlign.Right;

    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Font.Size = FontUnit.XLarge;
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Font.Name = "Book Antiqua";
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Locked = true;
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Font.Size = FontUnit.XLarge;
    //                            FpSpread1.Sheets[0].Cells[rowcount1 + 2, 2].Font.Name = "Book Antiqua";

    //                        }

    //                        FpSpread1.Sheets[0].Cells[rowcount1 + 5, 3].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[rowcount1 + 5, 3].Font.Name = "Book Antiqua";

    //                        FpSpread1.Sheets[0].Cells[rowcount1 + 5, 2].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[rowcount1 + 5, 2].Font.Name = "Book Antiqua";


    //                        FpSpread1.Sheets[0].Cells[rowcount1 + 2, 0].Font.Bold = true;


    //                    }

    //                    double netded = 0;

    //                    deduction3 = dr80["deductions"].ToString();

    //                    int gp = 0;

    //                    string[] deduction_arr1;

    //                    string deductionsplit1;

    //                    deduction_arr1 = deduction3.Split('\\');

    //                    for (int sp = gp; sp < deduction_arr1.GetUpperBound(0); sp++)
    //                    {

    //                        deductionsplit1 = deduction_arr1[sp];

    //                        string[] deductionda;

    //                        deductionda = deductionsplit1.Split(';');

    //                        string de;

    //                        string de3;
    //                        double de3d;

    //                        de = deductionda[0];

    //                        de3 = deductionda[3];
    //                        de3d = Convert.ToDouble(de3);
    //                        if (de3d != 0)
    //                        {

    //                            FpSpread1.Sheets[0].Cells[(count2 + gp), 3].Text = de.ToString();
    //                            FpSpread1.Sheets[0].Cells[(count2 + gp), 3].Locked = true;
    //                            FpSpread1.Sheets[0].Cells[(count2 + gp), 3].HorizontalAlign = HorizontalAlign.Right;

    //                            FpSpread1.Sheets[0].Cells[(count2 + gp), 4].Text = de3.ToString();
    //                            netded = netded + Convert.ToDouble(de3);
    //                            net_amount = net_amount - Convert.ToDouble(de3);
    //                            FpSpread1.Sheets[0].Cells[(count2 + gp), 4].HorizontalAlign = HorizontalAlign.Right;


    //                            FpSpread1.Sheets[0].Cells[(count2 + gp), 3].Font.Size = FontUnit.XLarge;
    //                            FpSpread1.Sheets[0].Cells[(count2 + gp), 3].Font.Name = "Book Antiqua";
    //                            FpSpread1.Sheets[0].Cells[(count2 + gp), 4].Font.Size = FontUnit.XLarge;
    //                            FpSpread1.Sheets[0].Cells[(count2 + gp), 4].Font.Name = "Book Antiqua";
    //                            rowcount3 = Convert.ToInt16(count2 + gp);
    //                            gp = gp + 1;
    //                        }



    //                    }
    //                    FarPoint.Web.Spread.TextCellType t = new FarPoint.Web.Spread.TextCellType();
    //                    string noofpresent = "";
    //                    string presnt = "";
    //                    string absent = "";
    //                    string workdays = "";
    //                    string leavedays = "";
    //                    noofpresent = dr80["leavedetail"].ToString();
    //                    string[] presplit = noofpresent.Split(';');
    //                    presnt = presplit[1].ToString();
    //                    workdays = presplit[0].ToString();
    //                    leavedays = presplit[2].ToString();

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].CellType = t;

    //                    string get_pre_lop = dr80["pre_lop"].ToString();
    //                    string get_cur_lop = dr80["cur_lop"].ToString();
    //                    double get_pre = 0;
    //                    double get_cur = 0;
    //                    double tot_lop = 0;

    //                    if (get_pre_lop != "")
    //                    {
    //                        get_pre = Convert.ToDouble(get_pre_lop);
    //                    }
    //                    if (get_cur_lop != "")
    //                    {
    //                        get_cur = Convert.ToDouble(get_cur_lop);
    //                    }
    //                    tot_lop = get_pre + get_cur;
    //                    double totalpreset = Convert.ToDouble(workdays) - tot_lop;

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 3].Font.Size = FontUnit.XLarge;
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Font.Size = FontUnit.XLarge;

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Text = "No.of working Days";
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 3].Text = "No.of Days Absent/LOP";
    //                    FpSpread1.Sheets[0].Columns[3].Width = 200;

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 4].Text = "";

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 4].CellType = t;

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 4].CellType = t;

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 4].Text = ":" + " " + workdays;

    //                    {
    //                        if (getlink != "0")
    //                        {
    //                            if (lop != 0)
    //                                lop = lop + DblAllowLOP1;

    //                        }
    //                        else
    //                        {
    //                            lop = Math.Round(((Convert.ToDouble(nettadd) / Convert.ToDouble(workdays)) * (tot_lop)), 2);
    //                        }

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 4].Text = ":" + "  " + tot_lop.ToString() + "/" + lop.ToString();

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Text = ":" + "  " + totalpreset.ToString();

    //                    }
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 3].Font.Size = FontUnit.XLarge;
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 3].Font.Name = "Book Antiqua";

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 4].Font.Size = FontUnit.XLarge;
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 22, 4].Font.Name = "Book Antiqua";



    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Font.Size = FontUnit.XLarge;
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 3].Font.Name = "Book Antiqua";

    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 4].Font.Size = FontUnit.XLarge;
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 4].Font.Name = "Book Antiqua";


    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Font.Size = FontUnit.XLarge;
    //                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 23, 1].Font.Name = "Book Antiqua";

    //                    if (rowcount3 == 0)
    //                    {
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 3].Text = "Total Deduction";

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 3].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 3].Font.Bold = true;

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 4].Text = netded.ToString();
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 4].Font.Bold = true;



    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 4].HorizontalAlign = HorizontalAlign.Right;

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 3].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 3].Font.Name = "Book Antiqua";

    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 4].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 17, 4].Font.Name = "Book Antiqua";

    //                    }
    //                    else
    //                    {
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 3].Text = "Total Deduction";
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 3].HorizontalAlign = HorizontalAlign.Right;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 3].Font.Bold = true;

    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Text = netded.ToString();
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Font.Bold = true;

    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 3].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 1, 3].Border.BorderColorBottom = Color.Black;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 1, 4].Border.BorderColorBottom = Color.Black;


    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].HorizontalAlign = HorizontalAlign.Right;

    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 3].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 4, 3].Font.Name = "Book Antiqua";

    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Font.Size = FontUnit.XLarge;
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Font.Name = "Book Antiqua";
    //                        FpSpread1.Sheets[0].Cells[rowcount3 + 2, 4].Border.BorderColorRight = Color.Black;
    //                    }
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Text = "Net Paid";
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 2].HorizontalAlign = HorizontalAlign.Right;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Bold = true;

    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Text = ":" + " " + net_amount.ToString();
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Bold = true;

    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 0].Border.BorderColorBottom = Color.Black;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 1].Border.BorderColorBottom = Color.Black;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Border.BorderColorBottom = Color.Black;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Border.BorderColorBottom = Color.Black;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Border.BorderColorBottom = Color.Black;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Border.BorderColorBottom = Color.Black;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 4, 4].Border.BorderColorRight = Color.Black;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 3, 4].Border.BorderColorRight = Color.Black;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 4].Border.BorderColorRight = Color.Black;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 2, 3].HorizontalAlign = HorizontalAlign.Right;

    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Size = FontUnit.XLarge;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 3].Font.Name = "Book Antiqua";

    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Size = FontUnit.XLarge;
    //                    FpSpread1.Sheets[0].Cells[rowcount + 5, 2].Font.Name = "Book Antiqua";


    //                    FpSpread1.Sheets[0].SetRowVisible(FpSpread1.Sheets[0].RowCount, false);
    //                    FpSpread1.Sheets[0].SetRowVisible(FpSpread1.Sheets[0].RowCount - 1, false);
    //                    FpSpread1.Sheets[0].SetRowVisible(FpSpread1.Sheets[0].RowCount - 2, false);
    //                    FpSpread1.Sheets[0].SetRowVisible(FpSpread1.Sheets[0].RowCount - 3, false);
    //                    FpSpread1.Sheets[0].SetRowVisible(FpSpread1.Sheets[0].RowCount - 4, false);
    //                    FpSpread1.Sheets[0].SetRowVisible(FpSpread1.Sheets[0].RowCount - 5, false);


    //                    has_spl_act_amt.Clear();
    //                    has_spl_amt.Clear();
    //                    FpSpread1.Visible = true;
    //                    Panel4.Visible = true;
    //                    //   ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('Please Click the Print Button To View The Report ')", true);


    //                }

    //            }
    //        }
    //        //Start============Added by Manikandan 28/08/2013============
    //        FpSpread1.Sheets[0].Columns[0].BackColor = Color.White;
    //        FpSpread1.Sheets[0].Columns[1].BackColor = Color.White;
    //        FpSpread1.Sheets[0].Columns[2].BackColor = Color.White;
    //        FpSpread1.Sheets[0].Columns[3].BackColor = Color.White;
    //        FpSpread1.Sheets[0].Columns[4].BackColor = Color.White;
    //        FpSpread1.Sheets[0].Columns[5].BackColor = Color.White;
    //        //FpSpread1.Sheets[0].Columns[6].BackColor = Color.White;
    //        //==========================End==============================
    //        FpSpread1.Sheets[0].AutoPostBack = false;
    //        FpSpread1.SaveChanges();
    //    }
    //    catch
    //    {

    //    }
    //}

    protected void Txtentryto_TextChanged(object sender, EventArgs e)
    {

    }

    protected void chkselect_CheckedChanged(object sender, EventArgs e)
    {
        //if (chkselect.Checked == true)
        //{
        //    foreach (ListItem li in cbldepttype.Items)
        //    {
        //        li.Selected = true;
        //        tbseattype.Text = "Department(" + (cbldepttype.Items.Count) + ")";
        //    }
        //}
        //else
        //{
        //    foreach (ListItem li in cbldepttype.Items)
        //    {
        //        li.Selected = false;
        //        tbseattype.Text = "--Select--";
        //    }
        //}
    }

    protected void chkselect_CheckedChanged1(object sender, EventArgs e)
    {
        if (chkselect.Checked == true)
        {
            for (int i = 0; i < cbldepttype.Items.Count; i++)
            {
                cbldepttype.Items[i].Selected = true;
                tbseattype.Text = "Department(" + (cbldepttype.Items.Count) + ")";
            }
        }
        else
        {
            for (int i = 0; i < cbldepttype.Items.Count; i++)
            {
                cbldepttype.Items[i].Selected = false;
                tbseattype.Text = "---Select---";
            }
        }
    }

    protected void chkcategory_CheckedChanged(object sender, EventArgs e)
    {
        if (chkcategory.Checked == true)
        {
            for (int i = 0; i < cblcategory.Items.Count; i++)
            {
                cblcategory.Items[i].Selected = true;
                tbblood.Text = "Category(" + (cblcategory.Items.Count) + ")";
            }
        }
        else
        {
            for (int i = 0; i < cblcategory.Items.Count; i++)
            {
                cblcategory.Items[i].Selected = false;
                tbblood.Text = "---Select---";
            }
        }
    }

    protected void CheckBox1_CheckedChanged(object sender, EventArgs e)
    {

    }

    protected void CheckBox1_CheckedChanged1(object sender, EventArgs e)
    {
        if (CheckBox1.Checked == true)
        {
            for (int i = 0; i < cblallowance.Items.Count; i++)
            {
                cblallowance.Items[i].Selected = true;
                txtallowance.Text = "Allowance(" + (cblallowance.Items.Count) + ")";
            }
        }
        else
        {
            for (int i = 0; i < cblallowance.Items.Count; i++)
            {
                cblallowance.Items[i].Selected = false;
                txtallowance.Text = "---Select---";
            }
        }

    }

    protected void chkdeduc_CheckedChanged(object sender, EventArgs e)
    {
        if (chkdeduc.Checked == true)
        {
            for (int i = 0; i < cbldeduction.Items.Count; i++)
            {
                cbldeduction.Items[i].Selected = true;
                txtdeduction.Text = "Deduction(" + (cbldeduction.Items.Count) + ")";
            }
        }
        else
        {
            for (int i = 0; i < cbldeduction.Items.Count; i++)
            {
                cbldeduction.Items[i].Selected = false;
                txtdeduction.Text = "---Select---";
            }
        }

    }

    protected void cblsearch_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (cblsearch.Items[27].Selected == true)// Added by sridharan april 30 2015
        {
            cblsearch.Items[39].Enabled = true;
        }
        else
        {
            cblsearch.Items[39].Enabled = false;
        }

        //if (cblsearch.Items[6].Selected == true)
        //{
        //    cblsearch.Items[7].Selected = false;
        //}
        // if (cblsearch.Items[7].Selected == true)
        //{
        //    cblsearch.Items[6].Selected = false;
        //}
    }

    protected void ddlreport_SelectedIndexChanged(object sender, EventArgs e)
    {
        clear();
        chkEmail.Visible = false;
        chksms.Visible = false;
        lblsmstype.Visible = false;
        ddlsmstype.Visible = false;
        cbAllowdeduc.Visible = false;
        //cblsearch.ClearSelection(); //commented by poo 12.12.17
        cbRound.Visible = false;
        if (ddlreport.SelectedItem.Text.ToString() == "Format 1")
        {
            //rddept.Visible = true;
            chkcontribution.Visible = true;
            chkactual.Visible = true;
            lblstaffcnt.Visible = false;
            txt_staff.Visible = false;
            tn_format2.Visible = false;
            txtsms.Visible = false;
            btnsendsms.Visible = false;
            cbrupesinwords.Visible = false;
            cbincludeBasicpay.Visible = false;
            cbdateofjoin.Visible = false;
            cbAuthor.Visible = false;
            txt_author.Visible = false;
            lblauthor.Visible = false;
            lblstaffcnt.Visible = true;
            txt_staff.Visible = true;
            btn_salarynew.Visible = false;

        }
        if (ddlreport.SelectedItem.Text.ToString() == "Format 2")
        {
            rddept.Visible = false;
            lblstaffcnt.Visible = true;
            txt_staff.Visible = true;
            tn_format2.Visible = true;
            chkcontribution.Visible = false;
            chkactual.Visible = false;
            txtsms.Visible = false;
            btnsendsms.Visible = false;
            cbrupesinwords.Visible = false;
            cbdateofjoin.Visible = false;
            cbAuthor.Visible = false;
            txt_author.Visible = false;
            cbincludeBasicpay.Visible = false;
            lblauthor.Visible = false;
            chkEmail.Visible = true;
            chksms.Visible = true;
            btn_salarynew.Visible = false;

        }
        if (ddlreport.SelectedItem.Text.ToString() == "Format 3")
        {
            chkcontribution.Visible = false;
            lblstaffcnt.Visible = true;
            txt_staff.Visible = true;
            tn_format2.Visible = true;
            chkactual.Visible = false;
            txtsms.Visible = false;
            btnsendsms.Visible = false;
            cbAuthor.Visible = false;
            txt_author.Visible = false;
            lblauthor.Visible = false;
            chkEmail.Visible = true;
            chksms.Visible = true;
            cbincludeBasicpay.Visible = false;
            cbAllowdeduc.Visible = true;
            btn_salarynew.Visible = true;
        }
        if (ddlreport.SelectedItem.Text.ToString() == "Department")
        {
            chkcontribution.Visible = false;
            lblstaffcnt.Visible = false;
            txt_staff.Visible = false;
            tn_format2.Visible = false;
            chkactual.Visible = false;
            txtsms.Visible = false;
            btnsendsms.Visible = false;
            cbrupesinwords.Visible = false;
            cbdateofjoin.Visible = false;
            cbAuthor.Visible = false;
            txt_author.Visible = false;
            lblauthor.Visible = false;
            cbincludeBasicpay.Visible = false;
            btn_salarynew.Visible = false;
        }

        if (ddlreport.SelectedItem.Text.ToString() == "Format 4")
        {
            chkcontribution.Visible = false;
            lblstaffcnt.Visible = false;
            txt_staff.Visible = false;
            tn_format2.Visible = false;
            chkactual.Visible = false;
            txtsms.Visible = false;
            btnsendsms.Visible = false;
            cbrupesinwords.Visible = false;
            cbdateofjoin.Visible = false;
            cbAuthor.Visible = false;
            txt_author.Visible = false;
            lblauthor.Visible = false;
            cbincludeBasicpay.Visible = false;
            btn_salarynew.Visible = false;
        }
        loadcolumns(sender, e);
        btnslip.Visible = false;
        tn_format2.Visible = false;
    }

    //protected void rdFormat1_CheckedChanged(object sender, EventArgs e)
    //{
    //    clear();
    //    btnslip.Visible = true;
    //    if (rdFormat1.Checked == true)
    //    {
    //        rddept.Visible = true;
    //        chkcontribution.Visible = true;
    //        chkEmail.Visible = true;
    //        chksms.Visible = true;
    //    }
    //}
    //protected void rdFormat2_CheckedChanged(object sender, EventArgs e)
    //{

    //    clear();
    //    if (rdFormat2.Checked == true)
    //    {
    //        lblstaffcnt.Visible = true;
    //        txt_staff.Visible = true;
    //        tn_format2.Visible = true;
    //        chkactual.Visible = true;
    //    }
    //}

    //Start================================Hided by Manikandan 03/08/2013
    //protected void ddlpage_SelectedIndexChanged(object sender, EventArgs e)
    //{
    //    for (int i = 0; i < fpsalary.Sheets[0].RowCount; i++)
    //    {
    //        fpsalary.Sheets[0].Rows[i].Visible = false;
    //    }
    //    int no_of_staf = Convert.ToInt16(txt_staff.Text);
    //    int start = Convert.ToInt32(ddlpage.SelectedValue.ToString());
    //    int end = start + (no_of_staf * 4); ;
    //    int rowstart = fpsalary.Sheets[0].RowCount - Convert.ToInt32(start);
    //    int endrow = 0;
    //    int rwwidth5 = 0;
    //    int rowend = fpsalary.Sheets[0].RowCount - Convert.ToInt32(end);
    //    for (int i = (Convert.ToInt32(start) - 1); i < Convert.ToInt32(end); i++)
    //    {

    //        int regularrowstart = fpsalary.Sheets[0].RowCount;
    //        if (i < regularrowstart)
    //        {
    //            regularrowstart = regularrowstart - i;
    //            fpsalary.Sheets[0].Rows[fpsalary.Sheets[0].RowCount - regularrowstart].Visible = true;
    //        }
    //        endrow = regularrowstart;
    //        rwwidth5++;
    //        fpsalary.Height = 300 + ((fpsalary.Sheets[0].RowCount - regularrowstart) * 20);
    //    }

    //    fpsalary.Height = 300 + (rwwidth5 * 20);
    //    //fpsalary.Sheets[0].RowCount++;
    //    fpsalary.Sheets[0].Rows[fpsalary.Sheets[0].RowCount - (endrow + 1)].Visible = true;
    //    //fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - (endrow + 1), 0].Text = "Total";



    //}

    //End=============================================================================

    protected void tn_format2_Click(object sender, EventArgs e)
    {
        load_slip2();
    }

    protected void txt_staff_TextChanged(object sender, EventArgs e)
    {

    }

    public string dblallowact { get; set; }

    protected void Button2_Click(object sender, EventArgs e)
    {

    }
    string SenderID = "", Password = "";
    string strmsg = "";

    protected void btnsendsms_Click(object sender, EventArgs e)
    {
        try
        {
            //==========Added by srinath 23/7/2014====================
            SendSMSCount = 0;
            string date3 = Txtentryfrom.Text.ToString();
            string datefrom3;
            int monthname1;
            string monyear;
            string monthname2 = "";
            int monthnamenum;
            string yearto = "";
            string monyearto = "";
            string[] split = date3.Split(new Char[] { '/' });
            datefrom3 = split[1].ToString() + "/" + split[0].ToString() + "/" + split[2].ToString();
            string date4 = Txtentryto.Text.ToString();
            int year3 = Convert.ToInt16(split[2].ToString());
            string[] split1 = date4.Split(new Char[] { '/' });
            string dateto4 = split1[1].ToString() + "/" + split1[0].ToString() + "/" + split1[2].ToString();
            monthname2 = split1[0].ToString();
            monthnamenum = Convert.ToInt32(monthname2.ToString());
            yearto = split1[2].ToString();
            string mnmae = split[1].ToString();
            monthname1 = Convert.ToInt16(mnmae);
            monthname2 = split1[1].ToString();
            monthnamenum = Convert.ToInt16(monthname2);
            string year = split[2].ToString();
            monyear = monthname1.ToString() + "/" + year;
            monyearto = monthnamenum.ToString() + "/" + yearto;
            string Dept_Code = string.Empty;
            DataView dvDept = new DataView();

            byte sms_settings = getSMSSettings(Convert.ToInt32(Convert.ToString(Session["collegecode"])));
            string ComDegCode = d2.GetFunction("select top 1 degree_code from Degree where college_code = '" + Convert.ToString(Session["collegecode"]) + "'");
            string user_id = d2.GetFunction("select SMS_User_ID from Track_Value where college_code = '" + Convert.ToString(Session["collegecode"]) + "'");

            string strsqlsms = " select isnull(collname, ' ') as collname,isnull(address1, ' ') as address1,isnull(address2,' ') as address2,isnull(address3, ' ') as address3,isnull(pincode,' ') as pincode,college_code from collinfo where college_code='" + Session["collegecode"].ToString() + "'";
            strsqlsms = strsqlsms + " select shortname,college_code from leave_category where college_code=" + Session["collegecode"] + " ;";
            //strsqlsms = strsqlsms + " select * from monthlypay where fdate ='" + datefrom3 + "' and tdate ='" + dateto4 + "' and college_code=" + Session["collegecode"] + " ;";
            strsqlsms = strsqlsms + " select * from monthlypay where PayYear='" + ddlyear2.SelectedValue.ToString() + "' and PayMonth='" + cblmonth.SelectedValue.ToString() + "'  and college_code=" + Session["collegecode"] + " ;";
            strsqlsms = strsqlsms + " select linkvalue,college_code from inssettings where linkname='Calculate LOP from Attendance' and college_code='" + Session["collegecode"] + "' ;";
            strsqlsms = strsqlsms + " select * from staff_attnd where mon_year between '" + monyear + "' and '" + monyearto + "';";
            strsqlsms = strsqlsms + " select sm.staff_name,sm.staff_code,hd.dept_name,dm.desig_name,sm.pfnumber,sm.bankaccount,ct.category_name,st.allowances as actallowance,st.dept_code,st.payscale as payscale  from staffmaster sm,stafftrans st,hrdept_master hd,desig_master dm,staffcategorizer ct where sm.staff_code=st.staff_code and hd.dept_code=st.dept_code and st.desig_code=dm.desig_code and st.category_code=ct.category_code and sm.resign=0 and sm.settled=0 and st.latestrec=1 and sm.college_code='" + Session["collegecode"] + "' ;";
            strsqlsms = strsqlsms + " select sm.staff_code,convert(nvarchar(15),sa.date_of_birth,103) as dob,convert(nvarchar(15),sm.relieve_date,103) as  retier,sm.staff_name,sa.email,sa.per_mobileno from staffmaster sm,staff_appl_master sa where sm.appl_no=sa.appl_no  ;";
            strsqlsms = strsqlsms + " select * from incentives_master where college_code='" + Session["collegecode"].ToString() + "'";
            dssmssalary.Reset();
            dssmssalary.Dispose();
            dssmssalary = d2.select_method_wo_parameter(strsqlsms, "Text");
            string strquery = d2.GetFunction("select Coll_acronymn from collinfo where college_code='" + Session["collegecode"].ToString() + "'");
            double strquery1 = 0;
            double strquery2 = 0;

            if (dssmssalary.Tables[7].Rows.Count > 0)
            {
                alloworder = dssmssalary.Tables[7].Rows[0]["allowances"].ToString();
                string deductval = dssmssalary.Tables[7].Rows[0]["deductions"].ToString();
                string[] spdet = deductval.Split(';');
                for (int d = 0; d <= spdet.GetUpperBound(0); d++)
                {
                    string[] spdedet = spdet[d].Split('\\');
                    if (spdedet.GetUpperBound(0) >= 1)
                    {
                        string val = spdedet[0];
                        string val1 = spdedet[1];
                        if (!deduct.ContainsKey(val))
                        {
                            deduct.Add(val, val1);
                        }
                    }
                }
            }
            fpsalary.SaveChanges();
            //====================End===================
            if (ddlreport.SelectedItem.Text != "Format 3")
            {
                if (chksms.Checked == true)
                {
                    bool selectflag = false;
                    for (int i = 2; i < fpsalary.Sheets[0].RowCount; i++)
                    {
                        bool va = Convert.ToBoolean(fpsalary.Sheets[0].Cells[i, 1].Value);
                        if (va == true)
                        {
                            Dept_Code = "";
                            string staffco = fpsalary.Sheets[0].Cells[i, 2].Tag.ToString();
                            dssmssalary.Tables[5].DefaultView.RowFilter = " staff_Code='" + staffco.ToString() + "'";
                            dvDept = dssmssalary.Tables[5].DefaultView;
                            if (dvDept.Count > 0)
                                Dept_Code = Convert.ToString(dvDept[0]["dept_code"]);
                            //dssmssalary.Tables[2].DefaultView.RowFilter = " fdate ='" + datefrom3 + "' and tdate ='" + dateto4 + "' and staff_code='" + staffco.ToString() + "'";
                            dssmssalary.Tables[2].DefaultView.RowFilter = " PayYear='" + ddlyear2.SelectedValue.ToString() + "' and PayMonth='" + cblmonth.SelectedValue.ToString() + "' and staff_code='" + staffco.ToString() + "'";
                            DataView dvnetsal = dssmssalary.Tables[2].DefaultView;
                            if (dvnetsal.Count > 0)
                            {
                                strquery1 = Convert.ToDouble(dvnetsal[0]["netsal"].ToString());
                            }
                            string year1 = string.Empty;
                            year1 = d2.GetFunction("select CONVERT(CHAR(4), to_date, 120) from hrpaymonths where paymonthnum='" + cblmonth.SelectedItem.Value.ToString() + "' and college_Code=" + Session["collegecode"].ToString() + ""); // Added by jairam 13-11-2014 
                            //txtsms.Text = "Your salary for the month of " + cblmonth.SelectedItem.Text + "- Rs." + strquery1 + " has been credited to your account-" + strquery + "";
                            //txtsms.Text = "Your Net Salary of Rs." + strquery1 + " for the month of " + cblmonth.SelectedItem.Text + " " + year + " has been credited to your S.B.account.";
                            //txtsms.Text = "";
                            //lblsmstechmsg.Text = "Do You Want to Send The SMS To Selected Staff?";
                            txtsms.Visible = true;
                            string mobileno = fpsalary.Sheets[0].Cells[i, fpsalary.Sheets[0].ColumnCount - 3].Text.ToString();
                            dssmssalary.Tables[6].DefaultView.RowFilter = " staff_code='" + staffco.ToString() + "'";
                            DataView dvemail = dssmssalary.Tables[6].DefaultView;
                            if (dvemail.Count > 0)
                            {
                                mobileno = dvemail[0]["per_mobileno"].ToString();
                            }
                            //modalpopupex1.Show();
                            string sql = txtsms.Text;
                            if (ddlsmstype.SelectedValue.ToString() == "Automatic")
                            {
                                sql = "Your Net Salary of Rs." + strquery1 + " for the month of " + cblmonth.SelectedItem.Text + " " + year + " has been credited to your S.B.account.-" + strquery + "";
                            }
                            else if (ddlsmstype.SelectedValue.ToString() == "Template With Salary")
                            {
                                sql = sql + ".Your Net Salary of Rs." + strquery1 + "";
                            }
                            int mySmsC = sendTextMessage(Convert.ToString(Session["collegecode"]), usercode, user_id, Dept_Code, mobileno, sql, "1", sms_settings);
                            if (mySmsC > 0)
                                SendSMSCount += 1;
                            //sendsms(mobileno, sql);
                            //txtsms.Text = "";
                        }
                    }
                    if (SendSMSCount > 0 && chkEmail.Checked == false)
                    {
                        img_div1.Visible = true;
                        lblsavealert.Text = "Message has been sent Successfully!";
                    }
                    else
                    {
                        img_div1.Visible = true;
                        lblsavealert.Text = "You Dont have enough Credits!";
                    }
                }
                if (chkEmail.Checked == true)
                {
                    bool emailflag = false;
                    for (int r = 2; r < fpsalary.Sheets[0].RowCount; r++)
                    {
                        bool isval = Convert.ToBoolean(fpsalary.Sheets[0].Cells[r, 1].Value);
                        if (isval == true)
                        {
                            btnsendsms.Visible = true;
                            btnsendsms.Focus();
                            string staffco = fpsalary.Sheets[0].Cells[r, 2].Tag.ToString();
                            //  dssmssalary.Tables[2].DefaultView.RowFilter = " fdate ='" + datefrom3 + "' and tdate ='" + dateto4 + "' and staff_code='" + staffco.ToString() + "'";
                            dssmssalary.Tables[2].DefaultView.RowFilter = " PayYear='" + ddlyear2.SelectedValue.ToString() + "' and PayMonth='" + cblmonth.SelectedValue.ToString() + "' and staff_code='" + staffco.ToString() + "'";
                            DataView dvnetsal = dssmssalary.Tables[2].DefaultView;
                            if (dvnetsal.Count > 0)
                            {
                                strquery1 = Convert.ToDouble(dvnetsal[0]["netsal"].ToString());
                            }
                            txtsubject.Text = "Your Net Salary of Rs." + strquery1 + " for the month of " + cblmonth.SelectedItem.Text + " " + year + " has been credited to your S.B.account.-" + strquery + "";

                            string email = fpsalary.Sheets[0].Cells[r, fpsalary.Sheets[0].ColumnCount - 2].Text.ToString();
                            dssmssalary.Tables[6].DefaultView.RowFilter = " staff_code='" + staffco.ToString() + "'";
                            DataView dvemail = dssmssalary.Tables[6].DefaultView;
                            if (dvemail.Count > 0)
                            {
                                email = dvemail[0]["email"].ToString();
                            }


                            string query = txtsubject.Text;
                            string staffcode = fpsalary.Sheets[0].Cells[r, 2].Tag.ToString();
                            string staffname = fpsalary.Sheets[0].Cells[r, 2].Text.ToString();
                            string[] sp = staffname.Split(',');
                            staffname = sp[0].ToString().Trim();
                            string details = staffname + staffcode;
                            details = details.Trim();
                            //==========Modified By Srinath 24/07/2014========Start============
                            if (email.Trim() != "" && email != null)
                            {
                                loadindstaffpayslip(staffcode);
                                sendemail(email, query, details);
                            }
                            //============End===================================================

                        }

                    }
                }
            }
            else
            {
                if (chksms.Checked == true)
                {
                    bool selectflag = false;
                    for (int i = 2; i < fpsalary.Sheets[0].RowCount - 1; i++)
                    {
                        bool va = Convert.ToBoolean(fpsalary.Sheets[0].Cells[i, 1].Value);
                        if (va == true)
                        {
                            string staffcode = fpsalary.Sheets[0].Cells[i, 2].Text.ToString();
                            Dept_Code = "";
                            dssmssalary.Tables[5].DefaultView.RowFilter = " staff_Code='" + staffcode.ToString() + "'";
                            dvDept = dssmssalary.Tables[5].DefaultView;
                            if (dvDept.Count > 0)
                                Dept_Code = Convert.ToString(dvDept[0]["dept_code"]);
                            string mobile = fpsalary.Sheets[0].Cells[i, fpsalary.Sheets[0].ColumnCount - 3].Text.ToString();
                            int num = 0;
                            if (!int.TryParse(mobile, out num))
                            {
                                // dssmssalary.Tables[2].DefaultView.RowFilter = " fdate ='" + datefrom3 + "' and tdate ='" + dateto4 + "' and staff_code='" + staffcode + "'";
                                dssmssalary.Tables[2].DefaultView.RowFilter = " PayYear='" + ddlyear2.SelectedValue.ToString() + "' and PayMonth='" + cblmonth.SelectedValue.ToString() + "' and staff_code='" + staffcode + "'";
                                DataView dvnetsal = dssmssalary.Tables[2].DefaultView;
                                if (dvnetsal.Count > 0)
                                {
                                    strquery1 = Convert.ToDouble(dvnetsal[0]["netsal"].ToString());
                                    strquery2 = Convert.ToDouble(dvnetsal[0]["netsal"].ToString());
                                }
                                txtsms.Visible = true;
                                //txtsms.Text = "Your Net Salary of Rs." + strquery1 + " for the month of " + cblmonth.SelectedItem.Text + " has been credited to your S.B.account.-" + strquery + "";
                                //txtsms.Text = "";
                                //settext = "Your salary for the month of " + cblmonth.SelectedItem.Text + " - "+year+"- Rs.$Salary$ has been credited to your account-$Account No$";
                                string mobileno = fpsalary.Sheets[0].Cells[i, fpsalary.Sheets[0].ColumnCount - 3].Text.ToString();
                                dssmssalary.Tables[6].DefaultView.RowFilter = " staff_code='" + staffcode.ToString() + "'";
                                DataView dvemail = dssmssalary.Tables[6].DefaultView;
                                if (dvemail.Count > 0)
                                {
                                    mobileno = dvemail[0]["per_mobileno"].ToString();
                                }
                                string sql = txtsms.Text;
                                if (ddlsmstype.SelectedValue.ToString() == "Automatic")
                                {
                                    sql = "Your Net Salary of Rs." + strquery1 + " for the month of " + cblmonth.SelectedItem.Text + " " + year + "  has been credited to your S.B.account.-" + strquery + "";
                                }
                                else if (ddlsmstype.SelectedValue.ToString() == "Template With Salary")
                                {
                                    sql = sql + ".Your Net Salary of Rs." + strquery1 + "";
                                }
                                // -------------- Added By Rajesh 03-06-2015 start
                                else if (ddlsmstype.SelectedValue.ToString() == "Template With LOP")
                                {
                                    string lopdatesss = "";
                                    if (fpsalary.Sheets[0].Cells[i + 1, 13].Text.ToString().Trim() != "")
                                    {
                                        lopdatesss = " - ( " + fpsalary.Sheets[0].Cells[i + 1, 13].Text.ToString() + " )";
                                    }
                                    string lopnooo = fpsalary.Sheets[0].Cells[i, 10].Text.ToString();

                                    sql = "Your salary for the month of " + cblmonth.SelectedItem.Text + " " + year + " is Rs." + strquery1 + " with " + lopnooo + " LOP(s) " + lopdatesss + ".";
                                }
                                // -------------- Added By Rajesh 03-06-2015 end
                                int SMSSC = sendTextMessage(Convert.ToString(Session["collegecode"]), usercode, user_id, Dept_Code, mobileno, sql, "1", sms_settings);
                                if (SMSSC > 0)
                                    SendSMSCount += 1;
                                //sendsms(mobileno, sql);
                            }
                        }
                    }
                    if (SendSMSCount > 0 && chkEmail.Checked == false)
                    {
                        img_div1.Visible = true;
                        lblsavealert.Text = "Message has been sent Successfully!";
                    }
                    else
                    {
                        img_div1.Visible = true;
                        lblsavealert.Text = "You Dont have enough Credits!";
                    }
                }
                if (chkEmail.Checked == true)
                {
                    bool emailflag = false;
                    for (int r = 2; r < fpsalary.Sheets[0].RowCount; r++)
                    {
                        bool isval = Convert.ToBoolean(fpsalary.Sheets[0].Cells[r, 1].Value);
                        if (isval == true)
                        {
                            btnsendsms.Visible = true;
                            btnsendsms.Focus();
                            string staffcode = fpsalary.Sheets[0].Cells[r, 2].Text.ToString();
                            if (staffcode.Trim() != "" && staffcode.Trim() != null)
                            {
                                // dssmssalary.Tables[2].DefaultView.RowFilter = " fdate ='" + datefrom3 + "' and tdate ='" + dateto4 + "' and staff_code='" + staffcode + "'";
                                dssmssalary.Tables[2].DefaultView.RowFilter = " PayYear='" + ddlyear2.SelectedValue.ToString() + "' and PayMonth='" + cblmonth.SelectedValue.ToString() + "' and staff_code='" + staffcode + "'";
                                DataView dvnetsal = dssmssalary.Tables[2].DefaultView;
                                if (dvnetsal.Count > 0)
                                {
                                    strquery1 = Convert.ToDouble(dvnetsal[0]["netsal"].ToString());
                                }
                                txtsubject.Text = "Your Net Salary of Rs." + strquery1 + " for the month of " + cblmonth.SelectedItem.Text + " " + year + " has been credited to your S.B.account.-" + strquery + "";
                                string email = fpsalary.Sheets[0].Cells[r, fpsalary.Sheets[0].ColumnCount - 2].Text.ToString();
                                dssmssalary.Tables[6].DefaultView.RowFilter = " staff_code='" + staffcode.ToString() + "'";
                                DataView dvemail = dssmssalary.Tables[6].DefaultView;
                                if (dvemail.Count > 0)
                                {
                                    email = dvemail[0]["email"].ToString();
                                }
                                string query = txtsubject.Text;
                                string staffname = fpsalary.Sheets[0].Cells[r, 4].Text.ToString().Trim();
                                string details = staffname + staffcode;
                                details = details.Trim();

                                if (email.Trim() != "" && email != null)
                                {
                                    loadindstaffpayslip(staffcode);
                                    sendemail(email, query, details);
                                }
                            }
                        }
                    }
                }
            }
        }
        catch
        {
        }
    }

    //public void sendsms(string mobile, string sms)
    //{
    //    try
    //    {
    //        lblsmserror.Visible = false;
    //        int smscount = 0;
    //        bool sendflag = false;
    //        string no = mobile;
    //        //strmsg = txtsms.Text;
    //        strmsg = sms;
    //        if (chksms.Checked == true)
    //        {
    //            string user_id = "";
    //            string strsenderquery = "select SMS_User_ID,college_code from Track_Value where college_code = '" + Session["collegecode"].ToString() + "'";
    //            ds.Dispose();
    //            ds.Reset();
    //            ds = d2.select_method_wo_parameter(strsenderquery, "Text");
    //            if (ds.Tables[0].Rows.Count > 0)
    //            {
    //                user_id = Convert.ToString(ds.Tables[0].Rows[0]["SMS_User_ID"]);
    //            }
    //            // user_id = "MPNMJS";
    //            //modified by srinath 1/8/2014
    //            //GetUserapi(user_id);
    //            string getval = d2.GetUserapi(user_id);
    //            string[] spret = getval.Split('-');
    //            if (spret.GetUpperBound(0) == 1)
    //            {

    //                SenderID = spret[0].ToString();
    //                Password = spret[0].ToString();
    //                Session["api"] = user_id;
    //                Session["senderid"] = SenderID;
    //            }
    //            int smssendingcount = 0;
    //            for (int i = 0; i < fpsalary.Sheets[0].RowCount; i++)
    //            {
    //                bool va = Convert.ToBoolean(fpsalary.Sheets[0].Cells[i, 1].Value);
    //                if (va == true)
    //                {
    //                    smssendingcount++;
    //                }
    //            }

    //            WebRequest request = WebRequest.Create("http://pr.airsmsmarketing.info/api/checkbalance.php?user=" + user_id + "&pass=" + Password + "");
    //            WebResponse response = request.GetResponse();
    //            Stream data = response.GetResponseStream();
    //            StreamReader sr = new StreamReader(data);
    //            string strvel = sr.ReadToEnd();

    //            int num = 0;
    //            if (int.TryParse(strvel, out num))
    //            {
    //                num = Convert.ToInt32(strvel);
    //                if (num > smssendingcount)
    //                {
    //                    sendflag = true;
    //                    smscount++;
    //                    if (no.Trim() != "" && no != null && no.Trim() != "0")
    //                    {
    //                        string strpath = "http://dnd.airsmsmarketing.info/api/sendmsg.php?user=" + user_id + "&pass=" + Password + "&sender=" + SenderID + "&phone=" + no + "&text=" + strmsg + "&priority=ndnd&stype=normal";
    //                        smsreport(strpath, no);
    //                    }
    //                }
    //                if (sendflag == true)
    //                {
    //                    ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert(' " + smscount + "  Message has been Sent')", true);
    //                }
    //                else
    //                {
    //                    ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('You Dont have enough Credits')", true);
    //                }
    //            }
    //            else
    //            {
    //                if (strvel != "")
    //                {
    //                    if (Convert.ToInt32(strvel.ToString()) > smssendingcount)
    //                    {
    //                        sendflag = true;
    //                        smscount++;
    //                        if (no.Trim() != "" && no != null && no.Trim() != "0")
    //                        {
    //                            string strpath = "http://dnd.airsmsmarketing.info/api/sendmsg.php?user=" + user_id + "&pass=" + Password + "&sender=" + SenderID + "&phone=" + no + "&text=" + strmsg + "&priority=ndnd&stype=normal";
    //                            smsreport(strpath, no);
    //                        }
    //                    }
    //                    if (sendflag == true)
    //                    {
    //                        //ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert(' " + smscount + "  Message has been Sent')", true);
    //                        ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert(' Message has been Sent Successfully')", true);
    //                    }
    //                    else
    //                    {
    //                        ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('You Dont have enough Credits')", true);
    //                    }
    //                }
    //                else
    //                {
    //                    ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('You Dont have enough Credits')", true);
    //                }
    //            }
    //        }
    //    }
    //    catch
    //    {
    //    }
    //}

    //public void smsreport(string uril, string mobilenos)
    //{
    //    try
    //    {
    //        string date = DateTime.Now.ToString("MM/dd/yyyy");
    //        WebRequest request = WebRequest.Create(uril);
    //        WebResponse response = request.GetResponse();
    //        Stream data = response.GetResponseStream();
    //        StreamReader sr = new StreamReader(data);
    //        string strvel = sr.ReadToEnd();

    //        string groupmsgid = "";
    //        groupmsgid = strvel.Trim().ToString(); //aruna 02oct2013 strvel;       

    //        int sms = 0;
    //        string smsreportinsert = "";

    //        string[] split_mobileno = mobilenos.Split(new Char[] { ',' });

    //        for (int icount = 0; icount <= split_mobileno.GetUpperBound(0); icount++)
    //        {
    //            smsreportinsert = "insert into smsdeliverytrackmaster (mobilenos,groupmessageid,message,college_code,isstaff,date,sender_id)values( '" + split_mobileno[icount] + "','" + groupmsgid + "','" + strmsg + "','" + Session["collegecode"].ToString() + "','1','" + date + "' ,'" + Session["UserCode"].ToString() + "')";// Added by jairam 21-11-2014
    //            sms = d2.update_method_wo_parameter(smsreportinsert, "Text");
    //        }

    //    }
    //    catch
    //    {
    //    }
    //}

    public void sendemail(string mail, string text, string staffdet)
    {
        try
        {
            bool mailflag = false;
            int countemail = 0;
            if (chkEmail.Checked == true)
            {
                string id = mail;
                string msg = text;
                string salary = "Salary";
                strmsg = "";
                string send_mail = "";
                string send_pw = "";
                string to_mail = "";
                string strstuname = "";
                bool flagstudent;
                string strquery = "select massemail,masspwd from collinfo where college_code = " + Session["collegecode"].ToString() + " ";
                ds.Dispose();
                ds.Reset();
                ds = d2.select_method_wo_parameter(strquery, "Text");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    send_mail = Convert.ToString(ds.Tables[0].Rows[0]["massemail"]);
                    send_pw = Convert.ToString(ds.Tables[0].Rows[0]["masspwd"]);
                }
                if (id.Trim() != "" && id != null && send_mail.Trim() != "" && send_mail != null && send_pw.Trim() != null && send_pw != null)
                {
                    mailflag = true;
                    SmtpClient Mail = new SmtpClient("smtp.gmail.com", 587);
                    MailMessage mailmsg = new MailMessage();
                    MailAddress mfrom = new MailAddress(send_mail);
                    mailmsg.From = mfrom;
                    mailmsg.To.Add(id);
                    mailmsg.Subject = salary;
                    mailmsg.IsBodyHtml = true;
                    mailmsg.Body = txtbodycontant.Text;
                    mailmsg.Body = mailmsg.Body + msg;
                    mailmsg.Body = mailmsg.Body + "<br><br>Thank You...";
                    string appPath = HttpContext.Current.Server.MapPath("~");
                    if (appPath != "")
                    {
                        string szPath = appPath + "/Report/";
                        string szFile = staffdet + DateTime.Now.ToString("ddMMyyyy") + ".pdf";
                        string attachementpath = szPath + szFile;
                        if (File.Exists(HttpContext.Current.Server.MapPath("~/Report/" + szFile + "")))
                        {
                            Attachment data = new Attachment(attachementpath);
                            mailmsg.Attachments.Add(data);
                        }
                    }
                    Mail.EnableSsl = true;
                    NetworkCredential credentials = new NetworkCredential(send_mail, send_pw);
                    Mail.UseDefaultCredentials = false;
                    Mail.Credentials = credentials;
                    Mail.Send(mailmsg);
                    flagstudent = true;
                    countemail++;
                }

                if (mailflag == true)
                {
                    img_div1.Visible = true;
                    if (SendSMSCount > 0)
                        lblsavealert.Text = "SMS and Mail has been Sent Successfully!";
                    else
                        lblsavealert.Text = "Mail has been Sent Successfully!";
                }
                lblsmserror.Visible = false;
            }
        }
        catch
        {
        }
    }

    #region SMS Settings Added by Jeyaprakash on Feb 17th,2017

    public int send_sms(string user_id, string collegecode, string usercode, string mobilenos, string message, string isstaff)
    {
        int smssend = 0;
        try
        {
            string SenderID = "";
            string Password = "";
            string getval = d2.GetUserapi(user_id);
            string[] spret = getval.Split('-');
            if (spret.GetUpperBound(0) == 1)
            {
                SenderID = spret[0].ToString();
                Password = spret[1].ToString();
            }

            string strpath = "  http://unicel.in/SendSMS/sendmsg.php?uname=" + user_id + "&pass=" + Password + "&send=" + SenderID + "&dest=" + mobilenos + "&msg=" + message + "";

            WebRequest request = WebRequest.Create(strpath);
            WebResponse response = request.GetResponse();
            Stream data = response.GetResponseStream();
            StreamReader sr = new StreamReader(data);
            string strvel = sr.ReadToEnd();

            string groupmsgid = "";
            groupmsgid = strvel;
            string date = DateTime.Now.ToString("MM/dd/yyyy");

            int sms = 0;
            string smsreportinsert = "";
            string[] split_mobileno = mobilenos.Split(new Char[] { ',' });
            string[] spmessp = strvel.Split(new Char[] { ',' });
            for (int icount = 0; icount <= split_mobileno.GetUpperBound(0); icount++)
            {
                smssend++;
                string smsid = "";
                if (spmessp.GetUpperBound(0) >= icount)
                {
                    smsid = spmessp[icount].ToString();
                }
                string mobile = split_mobileno[icount].ToString();
                smsreportinsert = "insert into smsdeliverytrackmaster (mobilenos,groupmessageid,message,college_code,isstaff,date,sender_id) values( '" + mobile + "','" + smsid + "','" + message + "','" + collegecode + "','" + isstaff + "','" + date + "','" + usercode.ToString() + "')";
                sms = d2.update_method_wo_parameter(smsreportinsert, "Text");
            }
        }
        catch { }
        return smssend;
    }

    public int sendNewSMS(string DegreeCode, string collegecode, string usercode, string mobilenos, string message, string isstaff)
    {
        int smssend = 0;
        try
        {
            string SMSURL = GetSMSURL(collegecode, DegreeCode);
            //string msg = HttpContext.Current.Server.UrlEncode(message);
            string msg = Uri.EscapeUriString(message);

            if (SMSURL.Length > 25)
            {
                string strpath = SMSURL + "&mno=" + mobilenos + "&cod1=1&msg=" + msg + "";
                //string strpath = SMSURL + "&adno1=" + mobilenos + "&msg1=" + message + "";

                WebRequest request = WebRequest.Create(strpath);
                WebResponse response = request.GetResponse();
                Stream data = response.GetResponseStream();
                StreamReader sr = new StreamReader(data);
                string strvel = sr.ReadToEnd();

                string groupmsgid = "";
                groupmsgid = strvel;
                string date = DateTime.Now.ToString("MM/dd/yyyy");

                int sms = 0;
                string smsreportinsert = "";
                string[] split_mobileno = mobilenos.Split(new Char[] { ',' });
                string[] spmessp = strvel.Split(new Char[] { ',' });
                for (int icount = 0; icount <= split_mobileno.GetUpperBound(0); icount++)
                {
                    smssend++;
                    string smsid = "";
                    if (spmessp.GetUpperBound(0) >= icount)
                    {
                        smsid = spmessp[icount].ToString();
                    }
                    string mobile = split_mobileno[icount].ToString();
                    smsreportinsert = "insert into smsdeliverytrackmaster (mobilenos,groupmessageid,message,college_code,isstaff,date,sender_id)values( '" + mobile + "','" + smsid + "',N'" + message + "','" + collegecode + "','" + isstaff + "','" + date + "','" + usercode.ToString() + "')";
                    sms = d2.update_method_wo_parameter(smsreportinsert, "Text");
                }
            }
        }
        catch { }
        return smssend;
    }

    public string GetSMSURL(string collegeCode, string DegreeCode)
    {
        string SMSURL = string.Empty;
        try
        {
            string selQuery = "SELECT SMSAPI_URL,USERID,SENDERID,PASSWORD FROM sms_mastersettings WHERE COLLEGECODE='" + collegeCode + "' AND DEGREECODE='" + DegreeCode + "'";
            DataSet dsUserDet = new DataSet();
            dsUserDet = d2.select_method_wo_parameter(selQuery, "Text");
            if (dsUserDet.Tables.Count > 0 && dsUserDet.Tables[0].Rows.Count > 0)
            {
                string UserID = Convert.ToString(dsUserDet.Tables[0].Rows[0]["USERID"]).Trim();
                string SenderID = Convert.ToString(dsUserDet.Tables[0].Rows[0]["SENDERID"]).Trim();
                string SenderPasswd = Convert.ToString(dsUserDet.Tables[0].Rows[0]["PASSWORD"]).Trim();
                string SMSLink = Convert.ToString(dsUserDet.Tables[0].Rows[0]["SMSAPI_URL"]).Trim();
                SMSURL = SMSLink + "?pinid1=78&un=" + UserID + "&pass=" + SenderPasswd;
            }
        }
        catch { SMSURL = string.Empty; }
        return SMSURL;
    }

    public int sendTextMessage(string collcode, string User_usercode, string User_login_id, string User_degreecode, string MobileNos, string Text_message, string IsStaff, byte sms_settings)
    {
        int sentMessages = 0;
        switch (sms_settings)
        {
            case 0:
                //Common SMS
                sentMessages = send_sms(User_login_id, Convert.ToString(collcode), User_usercode, MobileNos, Text_message, IsStaff);
                break;
            case 1:
                //Individual Department wise SMS
                sentMessages = sendNewSMS(Convert.ToString(User_degreecode), Convert.ToString(collcode), User_usercode, MobileNos, Text_message, IsStaff);
                break;
        }
        return sentMessages;
    }

    /// <summary>
    /// Get the settings for the College - Individual or Common
    /// </summary>
    /// <param name="collegeCode">Users's college code</param>
    /// <returns></returns>
    public byte getSMSSettings(int collegeCode)
    {
        byte settings = 0;
        byte.TryParse(d2.GetFunction("select LinkValue from New_InsSettings where LinkName='SMSSettingIndividualCommon'  and college_code ='" + collegeCode + "'"), out settings);
        return settings;
    }

    /// <summary>
    ///  Get the settings for the College - Individual or Common
    /// </summary>
    /// <param name="collegeCode">User's college code</param>
    /// <param name="userCode">User's User code</param>
    /// <returns></returns>
    public byte getSMSSettings(int collegeCode, string userCode)
    {
        byte settings = 0;
        byte.TryParse(d2.GetFunction("select LinkValue from New_InsSettings where LinkName='SMSSettingIndividualCommon' and user_code ='" + userCode + "' and college_code ='" + collegeCode + "'  "), out settings);
        return settings;
    }

    protected void btnupload_Click(object sender, EventArgs e)
    {
        try
        {
            string ofcseal = "ofc_seal.jpg";
            if (fileuploadbrowse.HasFile)
            {
                if (fileuploadbrowse.FileName.EndsWith(".jpg") || fileuploadbrowse.FileName.EndsWith(".JPG") || fileuploadbrowse.FileName.EndsWith(".jpeg") || fileuploadbrowse.FileName.EndsWith(".JPEG"))
                {
                    string stdphotopath = Server.MapPath("~/UploadFiles/Officeseal/") + ofcseal;
                    string stdphotoext = System.IO.Path.GetExtension(fileuploadbrowse.FileName);
                    fileuploadbrowse.SaveAs(stdphotopath);
                    string insphoto = "if exists (select officeseal from collinfo where college_code='" + Convert.ToString(Session["collegecode"]) + "')";
                    insphoto = insphoto + " update collinfo set officeseal=@photo where college_code='" + Convert.ToString(Session["collegecode"]) + "'";
                    insphoto = insphoto + " else insert into collinfo (college_code,officeseal) values('" + Convert.ToString(Session["collegecode"]) + "',@photo)";

                    int fileSize = fileuploadbrowse.PostedFile.ContentLength;
                    byte[] documentBinary = new byte[fileSize];
                    fileuploadbrowse.PostedFile.InputStream.Read(documentBinary, 0, fileSize);
                    SqlCommand cmd = new SqlCommand(insphoto, con);

                    SqlParameter uploadedsubject_name = new SqlParameter("@photo", SqlDbType.Binary, fileSize);
                    uploadedsubject_name.Value = documentBinary;
                    cmd.Parameters.Add(uploadedsubject_name);

                    con.Close();
                    con.Open();
                    cmd.ExecuteNonQuery();
                    con.Close();
                }
                else
                {
                    lblnorec.Visible = true;
                    lblnorec.Text = "File Format InCorrect!";
                }
            }
            else
            {
                lblnorec.Visible = true;
                lblnorec.Text = "Please Select a File!";
            }
        }
        catch (Exception ex) { }
    }

    #endregion

    //public void GetUserapi(string user_id)
    //{
    //    try
    //    {
    //        if (user_id == "AAACET")
    //        {
    //            SenderID = "AAACET";
    //            Password = "AAACET";
    //        }
    //        else if (user_id == "AALIME")
    //        {
    //            SenderID = "AALIME";
    //            Password = "AALIME";
    //        }
    //        else if (user_id == "ACETVM")
    //        {
    //            SenderID = "ACETVM";
    //            Password = "ACETVM";
    //        }
    //        else if (user_id == "AGNICT")
    //        {
    //            SenderID = "AGNICT";
    //            Password = "AGNICT";
    //        }
    //        else if (user_id == "AMSPTC")
    //        {
    //            SenderID = "AMSPTC";
    //            Password = "AMSPTC";
    //        }
    //        else if (user_id == "ANGE")
    //        {
    //            SenderID = "ANGE";
    //            Password = "ANGE";
    //        }
    //        else if (user_id == "ARASUU")
    //        {
    //            SenderID = "ARASUU";
    //            Password = "ARASUU";
    //        }
    //        else if (user_id == "DAVINC")
    //        {
    //            SenderID = "DAVINC";
    //            Password = "DAVINC";
    //        }
    //        else if (user_id == "EASACG")
    //        {
    //            SenderID = "EASACG";
    //            Password = "EASACG";
    //        }
    //        else if (user_id == "ECESMS")
    //        {
    //            SenderID = "ECESMS";
    //            Password = "ECESMS";
    //        }
    //        else if (user_id == "ESECED")
    //        {
    //            SenderID = "ESECED";
    //            Password = "ESECED";
    //        }
    //        else if (user_id == "ESENGG")
    //        {
    //            SenderID = "ESENGG";
    //            Password = "ESENGG";
    //        }
    //        else if (user_id == "ESEPTC")
    //        {
    //            SenderID = "ESEPTC";
    //            Password = "ESEPTC";
    //        }
    //        else if (user_id == "ESMSCH")
    //        {
    //            SenderID = "ESMSCH";
    //            Password = "ESMSCH";
    //        }
    //        else if (user_id == "GKMCET")
    //        {
    //            SenderID = "GKMCET";
    //            Password = "GKMCET";
    //        }
    //        else if (user_id == "IJAYAM")
    //        {
    //            SenderID = "IJAYAM";
    //            Password = "IJAYAM";
    //        }
    //        else if (user_id == "JJAAMC")
    //        {
    //            SenderID = "JJAAMC";
    //            Password = "JJAAMC";
    //        }

    //        else if (user_id == "KINGSE")
    //        {
    //            SenderID = "KINGSE";
    //            Password = "KINGSE";
    //        }
    //        else if (user_id == "KNMHSS")
    //        {
    //            SenderID = "KNMHSS";
    //            Password = "KNMHSS";
    //        }
    //        else if (user_id == "KSRIET")
    //        {
    //            SenderID = "KSRIET";
    //            Password = "KSRIET";
    //        }
    //        else if (user_id == "KTVRKP")
    //        {
    //            SenderID = "KTVRKP";
    //            Password = "KTVRKP";
    //        }
    //        else if (user_id == "MPNMJS")
    //        {
    //            SenderID = "MPNMJS";
    //            Password = "MPNMJS";
    //        }
    //        else if (user_id == "NANDHA")
    //        {
    //            SenderID = "NANDHA";
    //            Password = "NANDHA";
    //        }
    //        else if (user_id == "NECARE")
    //        {
    //            SenderID = "NECARE";
    //            Password = "NECARE";
    //        }
    //        else if (user_id == "NSNCET")
    //        {
    //            SenderID = "NSNCET";
    //            Password = "NSNCET";
    //        }
    //        else if (user_id == "PETENG")
    //        {
    //            SenderID = "PETENG";
    //            Password = "PETENG";
    //        }
    //        else if (user_id == "PMCTEC")
    //        {
    //            SenderID = "PMCTEC";
    //            Password = "PMCTEC";
    //        }
    //        else if (user_id == "PPGITS")
    //        {
    //            SenderID = "PPGITS";
    //            Password = "PPGITS";
    //        }
    //        else if (user_id == "PROFCL")
    //        {
    //            SenderID = "PROFCL";
    //            Password = "PROFCL";
    //        }
    //        else if (user_id == "PSVCET")
    //        {
    //            SenderID = "PSVCET";
    //            Password = "PSVCET";
    //        }
    //        else if (user_id == "SASTH")
    //        {
    //            SenderID = "SASTH";
    //            Password = "SASTH";
    //        }
    //        else if (user_id == "SCTSBS")
    //        {
    //            SenderID = "SCTSBS";
    //            Password = "SCTSBS";
    //        }
    //        else if (user_id == "SCTSCE")
    //        {
    //            SenderID = "SCTSCE";
    //            Password = "SCTSCE";
    //        }
    //        else if (user_id == "SCTSEC")
    //        {
    //            SenderID = "SCTSEC";
    //            Password = "SCTSEC";
    //        }
    //        else if (user_id == "SKCETC")
    //        {
    //            SenderID = "SKCETC";
    //            Password = "SKCETC";
    //        }
    //        else if (user_id == "SRECCG")
    //        {
    //            SenderID = "SRECCG";
    //            Password = "SRECCG";
    //        }
    //        else if (user_id == "SLAECT")
    //        {
    //            SenderID = "SLAECT";
    //            Password = "SLAECT";
    //        }
    //        else if (user_id == "SSCENG")
    //        {
    //            SenderID = "SSCENG";
    //            Password = "SSCENG";
    //        }
    //        else if (user_id == "SSMCEE")
    //        {
    //            SenderID = "SSMCEE";
    //            Password = "SSMCEE";
    //        }
    //        else if (user_id == "SVICET")
    //        {
    //            SenderID = "SVICET";
    //            Password = "SVICET";
    //        }
    //        else if (user_id == "SVCTCG")
    //        {
    //            SenderID = "SVCTCG";
    //            Password = "SVCTCG";
    //        }
    //        else if (user_id == "SVSCBE")
    //        {
    //            SenderID = "SVSCBE";
    //            Password = "SVSCBE";
    //        }
    //        else if (user_id == "TECENG")
    //        {
    //            SenderID = "TECENG";
    //            Password = "TECENG";
    //        }
    //        else if (user_id == "TJENGG")
    //        {
    //            SenderID = "TJENGG";
    //            Password = "TJENGG";
    //        }
    //        else if (user_id == "TSMJCT")
    //        {
    //            SenderID = "TSMJCT";
    //            Password = "TSMJCT";
    //        }
    //        else if (user_id == "VCWSMS")
    //        {
    //            SenderID = "VCWSMS";
    //            Password = "VCWSMS";
    //        }
    //        else if (user_id == "VRSCET")
    //        {
    //            SenderID = "VRSCET";
    //            Password = "VRSCET";
    //        }
    //        else if (user_id == "AUDIIT")
    //        {
    //            SenderID = "AUDIIT";
    //            Password = "AUDIIT";
    //        }
    //        else if (user_id == "SAENGG")
    //        {
    //            SenderID = "SAENGG";
    //            Password = "SAENGG";
    //        }

    //        else if (user_id == "STANE")
    //        {
    //            SenderID = "STANES";
    //            Password = "STANES";
    //        }

    //        else if (user_id == "MBCBSE")
    //        {
    //            SenderID = "MBCBSE";
    //            Password = "MBCBSE";
    //        }

    //        else if (user_id == "HIETPT")
    //        {
    //            SenderID = "HIETPT";
    //            Password = "HIETPT";
    //        }

    //        else if (user_id == "SVPITM")
    //        {
    //            SenderID = "SVPITM";
    //            Password = "SVPITM";
    //        }

    //        else if (user_id == "AUDCET")
    //        {
    //            SenderID = "AUDCET";
    //            Password = "AUDCET";
    //        }
    //        else if (user_id == "AUDWOM")
    //        {
    //            SenderID = "AUDWOM";
    //            Password = "AUDWOM";
    //        }

    //        else if (user_id == "AUDIPG")
    //        {
    //            SenderID = "AUDIPG";
    //            Password = "AUDIPG";
    //        }

    //        else if (user_id == "MCCDAY")
    //        {
    //            SenderID = "MCCDAY";
    //            Password = "MCCDAY";
    //        }

    //        else if (user_id == "MCCSFS")
    //        {
    //            SenderID = "MCCSFS";
    //            Password = "MCCSFS";
    //        }
    //        else if (user_id == "JMHRSS")
    //        {
    //            SenderID = "JMHRSS";
    //            Password = "JMHRSS";
    //        }
    //        else if (user_id == "JHSSCB")
    //        {
    //            SenderID = "JHSSCB";
    //            Password = "JHSSCB";
    //        } 
    //        Session["api"] = user_id;
    //        Session["senderid"] = SenderID;
    //    }
    //    catch (Exception ex)
    //    {
    //        throw ex;
    //    }
    //}
    protected void btnprintmaster_Click(object sender, EventArgs e)
    {

        string degreedetails = string.Empty;
        if (ddlreport.SelectedItem.Text.ToString() != "Format 3")
        {
            degreedetails = "Overall Monthly Salary Report@month : " + cblmonth.SelectedItem.ToString() + " and college_code = '" + Session["collegecode"].ToString() + "'";
            string year = ddlyear2.SelectedItem.Text;
            //d2.GetFunction("select CONVERT(CHAR(4), to_date, 120) from hrpaymonths where paymonthnum='" + cblmonth.SelectedItem.Value.ToString() + "' and college_Code=" + Session["collegecode"].ToString() + " and selstatus='1'"); // Added by jairam 13-11-2014 
            if (year.Trim() != "" && year != null && year.Trim() != "0")
            {
                degreedetails = "Overall Monthly Salary Report@ Year / Month : " + year + " / " + cblmonth.SelectedItem.ToString();
            }
            else
            {
                degreedetails = "Overall Monthly Salary Report@ Month : " + cblmonth.SelectedItem.ToString() + "";
            }
        }
        else
        {
            degreedetails = "Pay Bill for the month of " + cblmonth.SelectedItem.ToString() + " ";
            string year = ddlyear2.SelectedItem.Text;
            //d2.GetFunction("select CONVERT(CHAR(4), to_date, 120) from hrpaymonths where paymonthnum='" + cblmonth.SelectedItem.Value.ToString() + "' and college_Code=" + Session["collegecode"].ToString() + " and selstatus='1'"); // Added by jairam 13-11-2014 
            if (year.Trim() != "" && year != null && year.Trim() != "0")
            {
                degreedetails = degreedetails + year;
            }
        }
        if (ddlreport.SelectedItem.Text == "Format 1")//barath 01.02.18
        {
            if (chk_bf.Checked == true)
            {
                fpsalary.Sheets[0].Rows[0].Visible = false; //delsi 7/04
            }
            else
            {
                fpsalary.Sheets[0].Rows[0].Visible = true;

            }
            if (chk_bf.Checked == false && cbkincludeCarryTot.Checked == false)
            {
                fpsalary.Sheets[0].Rows[0].Visible = false;

            }

        }


        fpsalary.SaveChanges();
        GridPrintmaster.loadspreaddetails(fpsalary, "salary1.aspx", degreedetails);
        //fpsalary.Sheets[0].Rows[0].Visible = true;
        GridPrintmaster.Visible = true;


    }
    protected void btnButton3_Click(object sender, EventArgs e)
    {

        string degreedetails = string.Empty;
        if (ddlreport.SelectedItem.Text.ToString() != "Format 3")
        {
            degreedetails = "Overall Monthly Salary Report@month : " + cblmonth.SelectedItem.ToString() + " and college_code = '" + Session["collegecode"].ToString() + "'";
            string year = ddlyear2.SelectedItem.Text;
            //d2.GetFunction("select CONVERT(CHAR(4), to_date, 120) from hrpaymonths where paymonthnum='" + cblmonth.SelectedItem.Value.ToString() + "' and college_Code=" + Session["collegecode"].ToString() + " and selstatus='1'"); // Added by jairam 13-11-2014 
            if (year.Trim() != "" && year != null && year.Trim() != "0")
            {
                degreedetails = "Overall Monthly Salary Report@ Year / Month : " + year + " / " + cblmonth.SelectedItem.ToString();
            }
            else
            {
                degreedetails = "Overall Monthly Salary Report@ Month : " + cblmonth.SelectedItem.ToString() + "";
            }
        }
        else
        {
            degreedetails = "Pay Bill for the month of " + cblmonth.SelectedItem.ToString() + " ";
            string year = ddlyear2.SelectedItem.Text;
            //d2.GetFunction("select CONVERT(CHAR(4), to_date, 120) from hrpaymonths where paymonthnum='" + cblmonth.SelectedItem.Value.ToString() + "' and college_Code=" + Session["collegecode"].ToString() + " and selstatus='1'"); // Added by jairam 13-11-2014 
            if (year.Trim() != "" && year != null && year.Trim() != "0")
            {
                degreedetails = degreedetails + year;
            }
        }
        if (ddlreport.SelectedItem.Text == "Format 1")//barath 01.02.18
        {
            if (chk_bf.Checked == true)
            {
                fpsalary.Sheets[0].Rows[0].Visible = false; //delsi 7/04
            }
            else
            {
                fpsalary.Sheets[0].Rows[0].Visible = true;

            }

            if (chk_bf.Checked == false && cbkincludeCarryTot.Checked == false)
            {
                fpsalary.Sheets[0].Rows[0].Visible = false;

            }

        }
        //fpsalary.Sheets[0].Rows[0].Visible = false; delsi 2007

        fpsalary.SaveChanges();
        Printcontrol.loadspreaddetails(fpsalary, "salary1.aspx", degreedetails);
        //fpsalary.Sheets[0].Rows[0].Visible = true;
        Printcontrol.Visible = true;


    }
    protected void btnsmsok_Click(object sender, EventArgs e)
    {
        //sendsms();
    }
    protected void btnsmscancel_Click(object sender, EventArgs e)
    {
        modalpopupex1.Hide();
    }
    protected void btnemailok_Click(object sender, EventArgs e)
    {
        txtsubject.Text = "";
        txtbodycontant.Text = "";
    }
    protected void btnemailcancel_Click(object sender, EventArgs e)
    {
        modalpoppupemail.Hide();
    }
    protected string NumToText(double totamt)
    {

        int inputNo = Convert.ToInt32(totamt.ToString());

        if (inputNo == 0)
            return "Zero";

        int[] numbers = new int[4];
        int first = 0;
        int u, h, t;
        System.Text.StringBuilder strResult = new System.Text.StringBuilder();

        if (inputNo < 0)
        {
            strResult.Append("Minus ");
            inputNo = -inputNo;
        }

        string[] words0 = {"" ,"One ", "Two ", "Three ", "Four ",
            "Five " ,"Six ", "Seven ", "Eight ", "Nine "};
        string[] words1 = {"Ten ", "Eleven ", "Twelve ", "Thirteen ", "Fourteen ",
            "Fifteen ","Sixteen ","Seventeen ","Eighteen ", "Nineteen "};
        string[] words2 = {"Twenty ", "Thirty ", "Forty ", "Fifty ", "Sixty ",
            "Seventy ","Eighty ", "Ninety "};
        string[] words3 = { "Thousand ", "Lakh ", "Crore " };

        numbers[0] = inputNo % 1000; // units
        numbers[1] = inputNo / 1000;
        numbers[2] = inputNo / 100000;
        numbers[1] = numbers[1] - 100 * numbers[2]; // thousands
        numbers[3] = inputNo / 10000000; // crores
        numbers[2] = numbers[2] - 100 * numbers[3]; // lakhs

        for (int i = 3; i > 0; i--)
        {
            if (numbers[i] != 0)
            {
                first = i;
                break;
            }
        }
        for (int i = first; i >= 0; i--)
        {
            if (numbers[i] == 0) continue;
            u = numbers[i] % 10; // ones
            t = numbers[i] / 10;
            h = numbers[i] / 100; // hundreds
            t = t - 10 * h; // tens
            if (h > 0) strResult.Append(words0[h] + "Hundred ");
            if (u > 0 || t > 0)
            {
                if (h > 0 || i == 0) strResult.Append(" and ");
                if (t == 0)
                    strResult.Append(words0[u]);
                else if (t == 1)
                    strResult.Append(words1[u]);
                else
                    strResult.Append(words2[t - 2] + words0[u]);
            }
            if (i != 0) strResult.Append(words3[i - 1]);
        }

        string substring = "";
        substring = strResult.ToString();
        return substring.ToString().TrimEnd();

    }
    protected void btnpayslip_Click(object sender, EventArgs e)
    {
        fpsalary.SaveChanges();
        fpsalary.SaveChanges();
        loadpayslip();
    }
    //string lopdates = "";
    //string lopno = "";
    public void loadpayslip()
    {
        try
        {
            fpsalary.SaveChanges();
            string payscale = "";// added by sridhar 17 sep 2014
            string collname = "";
            string address1 = "";
            string address2 = "";
            string address3 = "";
            string pincode = "";
            string address = "";
            Font Fontbold = new Font("Book Antiqua", 16, FontStyle.Bold);
            Font Fontbold1 = new Font("Book Antiqua", 20, FontStyle.Bold);
            Font Fontsmall = new Font("Book Antiqua", 13, FontStyle.Regular);
            Font Fontsmall1 = new Font("Book Antiqua", 13, FontStyle.Bold);
            Gios.Pdf.PdfDocument mydocument = new Gios.Pdf.PdfDocument(PdfDocumentFormat.InCentimeters(30, 40));
            string str = "select isnull(collname, ' ') as collname,isnull(address1, ' ') as address1,isnull(address2,' ') as address2,isnull(address3, ' ') as address3,isnull(pincode,' ') as pincode from collinfo where college_code='" + Session["collegecode"].ToString() + "'";
            str = str + " ;select * from incentives_master where college_code='" + Session["collegecode"].ToString() + "'";
            DataSet ds = d2.select_method_wo_parameter(str, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                collname = ds.Tables[0].Rows[0]["collname"].ToString();
                address1 = ds.Tables[0].Rows[0]["address1"].ToString();
                address2 = ds.Tables[0].Rows[0]["address2"].ToString();
                address3 = ds.Tables[0].Rows[0]["address3"].ToString();
                pincode = ds.Tables[0].Rows[0]["pincode"].ToString();

                if (address1.Trim() != "" && address1 != null)
                {
                    address = address1;
                }
                if (address2.Trim() != "" && address1 != null)
                {
                    if (address != "")
                    {
                        address = address + ',' + address2;
                    }
                    else
                    {
                        address = address2;
                    }
                }
                if (address3.Trim() != "" && address1 != null)
                {
                    if (address != "")
                    {
                        address = address + ',' + address3;
                    }
                    else
                    {
                        address = address3;
                    }
                }
                if (pincode.Trim() != "" && pincode != null)
                {
                    if (address != "")
                    {
                        address = address + '-' + pincode;
                    }
                    else
                    {
                        address = pincode;
                    }
                }
                //address = address1 + "," + "  " + address2 + "," + "  " + address3 + "," + "  " + pincode;
            }
            string allowmaster = "";
            string deductmaster = "";
            if (ds.Tables[1].Rows.Count > 0)
            {
                allowmaster = ds.Tables[1].Rows[0]["allowances"].ToString();
                deductmaster = ds.Tables[1].Rows[0]["deductions"].ToString();
            }
            SortedDictionary<string, string> dict = new SortedDictionary<string, string>();
            string[] spdet = deductmaster.Split(';');
            for (int d = 0; d <= spdet.GetUpperBound(0); d++)
            {
                string[] spdedet = spdet[d].Split('\\');
                if (spdedet.GetUpperBound(0) >= 1)
                {
                    string val = spdedet[0];
                    string val1 = spdedet[1];
                    dict.Add(val, val1);
                }
            }

            string date3 = Txtentryfrom.Text.ToString();
            string datefrom3;
            int monthname1;
            string monyear;
            string monthname2 = "";
            int monthnamenum;
            string yearto = "";
            string monyearto = "";
            string[] split = date3.Split(new Char[] { '/' });
            int totlastaff = 0;
            int left1 = 20;
            int left1a = 135;
            int left2 = 145;
            int left3 = 423;
            int left4 = 570;
            int incrre = 1;
            if (ddlreport.SelectedItem.Text == "Format 2" || ddlreport.SelectedItem.Text == "Format 3")
            {
                incrre = 2;
            }
            for (int res = incrre; res <= Convert.ToInt32(fpsalary.Sheets[0].RowCount) - 1; res = res + incrre)
            {
                string text = fpsalary.Sheets[0].Cells[res, 2].Text.ToString();
                if (text != "" && text != null)
                {
                    int isval = Convert.ToInt32(fpsalary.Sheets[0].Cells[res, 1].Value);
                    if (isval == 1)
                    {
                        totlastaff++;
                    }
                }
            }

            datefrom3 = split[1].ToString() + "/" + split[0].ToString() + "/" + split[2].ToString();
            string date4 = Txtentryto.Text.ToString();
            int year3 = Convert.ToInt16(split[2].ToString());
            string[] split1 = date4.Split(new Char[] { '/' });
            string dateto4 = split1[1].ToString() + "/" + split1[0].ToString() + "/" + split1[2].ToString();
            monthname2 = split1[0].ToString();
            monthnamenum = Convert.ToInt32(monthname2.ToString());
            yearto = split1[2].ToString();
            string mnmae = split[1].ToString();
            monthname1 = Convert.ToInt16(mnmae);
            monthname2 = split1[1].ToString();
            monthnamenum = Convert.ToInt16(monthname2);
            string year = split[2].ToString();
            monyear = monthname1.ToString() + "/" + year;
            monyearto = monthnamenum.ToString() + "/" + yearto;
            Boolean getvalflag = false;


            int dayfrm = 0;
            string dayto;
            int daytonum;
            string dayfrom = split[0].ToString();


            string[] leavetype = new string[50];
            sql = "select shortname from leave_category where college_code=" + Session["collegecode"] + "";
            DataSet dsleave = d2.select_method_wo_parameter(sql, "Text");
            int lev = 0;
            for (int le = 0; le < dsleave.Tables[0].Rows.Count; le++)
            {
                lev++;
                string levatype = dsleave.Tables[0].Rows[le]["shortname"].ToString().Trim().ToLower();
                leavetype[lev] = levatype;
            }

            // sql = "select m.*,s.staff_name,s.pfnumber,s.bankaccount,s.pangirnumber ,st.payscale as pay_scalenew , st.allowances as actallowance,h.dept_name as deptname,d.desig_name as designame from monthlypay m,staffmaster s,stafftrans st,hrdept_master h,desig_master d where s.staff_code=m.staff_code and st.dept_code=h.dept_code and st.desig_code=d.desig_code and m.staff_code=st.staff_code and st.latestrec = 1 and m.fdate ='" + datefrom3 + "' and m.tdate ='" + dateto4 + "'";
            sql = "select m.*,s.staff_name,s.pfnumber,s.bankaccount,s.pangirnumber ,st.payscale as pay_scalenew , st.allowances as actallowance,h.dept_name as deptname,d.desig_name as designame from monthlypay m,staffmaster s,stafftrans st,hrdept_master h,desig_master d where s.staff_code=m.staff_code and st.dept_code=h.dept_code and st.desig_code=d.desig_code and m.staff_code=st.staff_code and st.latestrec = 1 and m.PayYear='" + ddlyear2.SelectedValue.ToString() + "' and m.PayMonth='" + cblmonth.SelectedValue.ToString() + "' ";
            sql = sql + " ; select convert(nvarchar(15),sa.date_of_birth,103) as dob,sm.staff_code,convert(nvarchar(15),sm.retr_date ,103) as retir,sm.staff_name,CONVERT(varchar(10),sm.join_date,103) as join_date from staff_appl_master sa,staffmaster sm where sa.appl_no=sm.appl_no ";
            DataSet dspay = d2.select_method_wo_parameter(sql, "text");
            DataTable dtpay = dspay.Tables[0];
            DataView dvpay = new DataView();
            DataView dvapp = new DataView();
            int gettop = 0;
            int rec = 0;
            Gios.Pdf.PdfPage mypdfpage = mydocument.NewPage();
            string getlink = d2.GetFunction("select linkvalue from inssettings where linkname='Calculate LOP from Attendance' and college_code='" + Session["collegecode"] + "'");

            sql1 = "select * from staff_attnd where mon_year between '" + monyear + "' and '" + monyearto + "' ";
            DataSet dsstaffattendance = d2.select_method_wo_parameter(sql1, "text");
            DataView dvstaffattendance = new DataView();

            //****************Added By Subburaj 12.10.2014************************//
            if (ddlreport.SelectedItem.Text == "Format 2")
            {

                for (int res = incrre; res <= Convert.ToInt32(fpsalary.Sheets[0].RowCount) - 1; res = res + incrre)
                {
                    string text = fpsalary.Sheets[0].Cells[res, 2].Text.ToString();
                    if (text != "" && text != null)
                    {
                        bool isval = Convert.ToBoolean(fpsalary.Sheets[0].Cells[res, 1].Value);

                        if (isval == true)
                        {
                            rec++;
                            getvalflag = true;
                            if (rec % 2 != 0)
                            {
                                if (rec != 1)
                                {
                                    mypdfpage = mydocument.NewPage();
                                }
                                gettop = 15;
                            }
                            else
                            {
                                if (gettop < 629)
                                {
                                    gettop = 630;
                                }
                                else
                                {
                                    mypdfpage = mydocument.NewPage();
                                    gettop = 15;
                                }
                            }

                            string staffcode = Convert.ToString(fpsalary.Sheets[0].Cells[res - 1, 2].Tag);
                            string designation = Convert.ToString(fpsalary.Sheets[0].Cells[res - 1, 0].Tag);
                            string deptname = Convert.ToString(fpsalary.Sheets[0].Cells[res - 1, 0].Note);
                            designation = Convert.ToString(fpsalary.Sheets[0].Cells[res - 1, 0].Note);
                            deptname = Convert.ToString(fpsalary.Sheets[0].Cells[res - 1, 0].Tag);
                            if (ddlreport.SelectedItem.Text == "Format 1")
                            {
                                staffcode = Convert.ToString(fpsalary.Sheets[0].Cells[res, 2].Tag);
                                designation = Convert.ToString(fpsalary.Sheets[0].Cells[res, 5].Text);
                                deptname = Convert.ToString(fpsalary.Sheets[0].Cells[res, 4].Text);
                            }
                            string staffname = "";
                            string bankno = "";
                            string pfno = "";
                            string panno = "";
                            string dob = "";

                            Double totdection = 0;
                            dtpay.DefaultView.RowFilter = " staff_code='" + staffcode + "'";
                            dvpay = dtpay.DefaultView;
                            if (dvpay.Count > 0)
                            {
                                staffname = dvpay[0]["staff_name"].ToString();
                                bankno = dvpay[0]["bankaccount"].ToString();
                                pfno = dvpay[0]["pfnumber"].ToString();
                                payscale = dvpay[0]["pay_scalenew"].ToString();// added by sridhar 17 sep 2014
                                panno = dvpay[0]["pangirnumber"].ToString();
                                designation = dvpay[0]["designame"].ToString();
                                deptname = dvpay[0]["deptname"].ToString();
                                if (pfno.Trim().ToLower() == "" || pfno == null || pfno.Trim() == "0")
                                {
                                    pfno = "-";
                                }
                                string noofpresent = "";
                                string presnt = "";
                                string workdays = "";
                                string leavedays = "";
                                noofpresent = dvpay[0]["leavedetail"].ToString();
                                string[] presplit = noofpresent.Split(';');
                                presnt = presplit[1].ToString();
                                workdays = presplit[0].ToString();
                                leavedays = presplit[2].ToString();
                                int starttop = gettop;
                                int coltop = gettop;
                                int rowspace = 15;
                                string actu_basicpay = dvpay[0]["basic_alone"].ToString();
                                string setyear = dvpay[0]["PayYear"].ToString();
                                if (setyear.Trim() == "" || setyear == null)
                                {
                                    setyear = yearto;
                                }
                                if (File.Exists(HttpContext.Current.Server.MapPath("~/college/Left_Logo.jpeg")))
                                {
                                    PdfImage LogoImage = mydocument.NewImage(HttpContext.Current.Server.MapPath("~/college/Left_Logo.jpeg"));
                                    mypdfpage.Add(LogoImage, 25, coltop + 10, 400);
                                }
                                if (File.Exists(HttpContext.Current.Server.MapPath("~/college/Right_Logo.jpeg")))
                                {
                                    PdfImage LogoImage = mydocument.NewImage(HttpContext.Current.Server.MapPath("~/college/Right_Logo.jpeg"));
                                    mypdfpage.Add(LogoImage, 750, coltop + 10, 450);
                                }

                                PdfTextArea ptc = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                                        new PdfArea(mydocument, 0, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleCenter, collname);

                                mypdfpage.Add(ptc);

                                coltop = coltop + rowspace;
                                PdfTextArea pts = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 0, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleCenter, address);
                                mypdfpage.Add(pts);

                                coltop = coltop + rowspace;
                                PdfTextArea ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, 0, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleCenter, "Pay Slip for the month of " + cblmonth.SelectedItem.Text + " " + "  " + setyear + "");
                                mypdfpage.Add(ptsp);
                                string stl = "";
                                Double lop = Convert.ToDouble(dvpay[0]["Tot_lop"].ToString());
                                string get_pre_lop = dvpay[0]["pre_lop"].ToString();
                                string get_cur_lop = dvpay[0]["cur_lop"].ToString();
                                double get_pre = 0;
                                double get_cur = 0;
                                double tot_lop = 0;
                                if (get_pre_lop != "")
                                {
                                    get_pre = Convert.ToDouble(get_pre_lop);
                                }
                                if (get_cur_lop != "")
                                {
                                    get_cur = Convert.ToDouble(get_cur_lop);
                                }
                                tot_lop = get_pre + get_cur;
                                double totalpreset = Convert.ToDouble(workdays) - tot_lop;
                                if (chkdays.Checked == true)
                                {
                                    //=====================================Leave Details Start====================================

                                    int maxdays = getmaxdays(monthname1, year3);
                                    //int l = 0;
                                    //int cl = 0;
                                    double[] clleave = new double[50];
                                    dayfrm = Convert.ToInt32(dayfrom);
                                    dayto = split1[0].ToString();
                                    daytonum = Convert.ToInt32(dayto);
                                    dsstaffattendance.Tables[0].DefaultView.RowFilter = " mon_year ='" + monyear + "'  and staff_code='" + staffcode + "'";
                                    dvstaffattendance = dsstaffattendance.Tables[0].DefaultView;
                                    if (monthname1 == monthnamenum)
                                    {
                                        for (int day = dayfrm; dayfrm <= daytonum; dayfrm++)
                                        {
                                            int day5 = 0;
                                            day5 = 0 + dayfrm;
                                            if (dsleave.Tables[0].Rows.Count > 0)
                                            {

                                                if (dvstaffattendance.Count > 0)
                                                {
                                                    int day6;
                                                    string attnda = "";
                                                    day6 = 3 + day5;
                                                    attnda = dvstaffattendance[0][day6].ToString();
                                                    if (attnda != "")
                                                    {
                                                        string[] split100 = attnda.Split(new char[] { '-' });
                                                        string mor = "";
                                                        string eve = "";
                                                        mor = Convert.ToString(split100[0]);
                                                        eve = Convert.ToString(split100[1]);
                                                        for (int le = 1; le <= dsleave.Tables[0].Rows.Count; le++)
                                                        {
                                                            string levatype = leavetype[le];
                                                            if (mor.Trim().ToLower() == levatype)
                                                            {
                                                                clleave[le] = clleave[le] + 0.5;
                                                            }
                                                            if (eve.Trim().ToLower() == levatype)
                                                            {
                                                                clleave[le] = clleave[le] + 0.5;

                                                            }
                                                        }
                                                        string[] lave = new string[15];
                                                    }
                                                }
                                            }
                                        }
                                        for (int le = 1; le <= dsleave.Tables[0].Rows.Count; le++)
                                        {
                                            if (leavetype[le] != "LA")
                                            {
                                                if (clleave[le] != 0)
                                                {
                                                    stl = stl + leavetype[le].ToUpper() + "-" + clleave[le] + ", ";
                                                }
                                            }
                                        }
                                        if (stl != "")
                                        {
                                            stl = stl.Substring(0, stl.Length - 2);
                                        }
                                        Array.Clear(clleave, 0, clleave.Length);
                                    }
                                    else
                                    {
                                        dsstaffattendance.Tables[0].DefaultView.RowFilter = " mon_year ='" + monyear + "'  and staff_code='" + staffcode + "'";
                                        dvstaffattendance = dsstaffattendance.Tables[0].DefaultView;
                                        for (int day = dayfrm; dayfrm <= maxdays; dayfrm++)
                                        {
                                            int day5 = 0;
                                            day5 = 0 + dayfrm;
                                            if (dsleave.Tables[0].Rows.Count > 0)
                                            {
                                                if (dvstaffattendance.Count > 0)
                                                {
                                                    int day6;
                                                    string attnda = "";
                                                    day6 = 3 + day5;
                                                    attnda = dvstaffattendance[0][day6].ToString();
                                                    if (attnda != "")
                                                    {
                                                        string[] split100 = attnda.Split(new char[] { '-' });
                                                        string mor = "";
                                                        string eve = "";
                                                        mor = Convert.ToString(split100[0]);
                                                        eve = Convert.ToString(split100[1]);
                                                        for (int le = 1; le <= dsleave.Tables[0].Rows.Count; le++)
                                                        {
                                                            string levatype = leavetype[le];
                                                            if (mor.Trim().ToLower() == levatype)
                                                            {
                                                                clleave[le] = clleave[le] + 0.5;
                                                            }
                                                            if (eve.Trim().ToLower() == levatype)
                                                            {
                                                                clleave[le] = clleave[le] + 0.5;

                                                            }
                                                        }
                                                        string[] lave = new string[15];
                                                    }
                                                }
                                            }
                                        }
                                        for (int le = 1; le <= dsleave.Tables[0].Rows.Count; le++)
                                        {
                                            if (leavetype[le] != "LA")
                                            {
                                                if (clleave[le] != 0)
                                                {
                                                    stl = stl + leavetype[le].ToUpper() + "-" + clleave[le] + ", ";
                                                }
                                            }
                                        }
                                        dsstaffattendance.Tables[0].DefaultView.RowFilter = " mon_year='" + monyearto + "' and staff_code='" + staffcode + "'";
                                        dvstaffattendance = dsstaffattendance.Tables[0].DefaultView;
                                        for (int day = 1; day <= daytonum; day++)
                                        {
                                            int day5 = 0;
                                            day5 = 0 + dayfrm;
                                            if (dsleave.Tables[0].Rows.Count > 0)
                                            {
                                                if (dvstaffattendance.Count > 0)
                                                {
                                                    int day6;
                                                    string attnda = "";
                                                    day6 = 3 + day5;
                                                    attnda = dvstaffattendance[0][day6].ToString();
                                                    if (attnda != "")
                                                    {
                                                        string[] split100 = attnda.Split(new char[] { '-' });
                                                        string mor = "";
                                                        string eve = "";
                                                        mor = Convert.ToString(split100[0]);
                                                        eve = Convert.ToString(split100[1]);
                                                        for (int le = 1; le <= dsleave.Tables[0].Rows.Count; le++)
                                                        {
                                                            string levatype = leavetype[le];
                                                            if (mor.Trim().ToLower() == levatype)
                                                            {
                                                                clleave[le] = clleave[le] + 0.5;
                                                            }
                                                            if (eve.Trim().ToLower() == levatype)
                                                            {
                                                                clleave[le] = clleave[le] + 0.5;

                                                            }
                                                        }
                                                        string[] lave = new string[15];
                                                    }
                                                }
                                            }
                                        }
                                        for (int le = 1; le <= dsleave.Tables[0].Rows.Count; le++)
                                        {
                                            if (leavetype[le] != "LA")
                                            {
                                                if (clleave[le] != 0)
                                                {
                                                    stl = stl + leavetype[le].ToUpper() + "-" + clleave[le] + ", ";
                                                }
                                            }
                                        }
                                        if (stl != "")
                                        {
                                            stl = stl.Substring(0, stl.Length - 2);
                                        }
                                    }
                                    Array.Clear(clleave, 0, clleave.Length);
                                    //=====================================Leave Details End====================================

                                }



                                coltop = coltop + 60;
                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Staff Code");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, staffcode);
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Department                    :");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, deptname);
                                mypdfpage.Add(ptsp);

                                coltop = coltop + rowspace;
                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "Staff Name");
                                mypdfpage.Add(ptsp);
                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall1, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, staffname);
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Designation                    :");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, designation);
                                mypdfpage.Add(ptsp);

                                coltop = coltop + rowspace;
                                //if (cblsearch.Items[33].Selected == true) // added by sridhar 16 sep 2014
                                //{
                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "EPF A/C No");
                                mypdfpage.Add(ptsp);


                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                                mypdfpage.Add(ptsp);


                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, pfno);
                                mypdfpage.Add(ptsp);
                                //}

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Bank A/C No                  :");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall1, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, bankno);
                                mypdfpage.Add(ptsp);

                                coltop = coltop + rowspace;
                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "D.O.B");
                                mypdfpage.Add(ptsp);



                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                                mypdfpage.Add(ptsp);
                                string dob1 = "select convert(nvarchar(15),sa.date_of_birth,103) as dob from staff_appl_master sa,staffmaster sm where sa.appl_no=sm.appl_no and sm.staff_code='" + staffcode + "'";
                                DataSet sk1 = new DataSet();
                                DAccess2 ddsd = new DAccess2();
                                sk1 = ddsd.select_method_wo_parameter(dob1, "Text");
                                string dob2 = sk1.Tables[0].Rows[0]["dob"].ToString();



                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, dob2);
                                mypdfpage.Add(ptsp);

                                if (cblsearch.Items[34].Selected == true)
                                {
                                    if (payscale != "")// added by sridhar 17 sep 2014
                                    {
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Pay Scale                      :");
                                        mypdfpage.Add(ptsp);

                                        ptsp = new PdfTextArea(Fontsmall1, System.Drawing.Color.Black,
                                                                           new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, payscale);
                                        mypdfpage.Add(ptsp);

                                    }
                                }
                                coltop = coltop + rowspace;


                                if (panno != "")
                                {
                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                 new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "PAN No                          :");
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall1, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, panno);
                                    mypdfpage.Add(ptsp);
                                }

                                if (chkdays.Checked == true)
                                {
                                    coltop = coltop + rowspace;
                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "No.of Days Present");
                                    mypdfpage.Add(ptsp);
                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                        new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, totalpreset.ToString());
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "No.of Working Days       :");
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, workdays.ToString());
                                    mypdfpage.Add(ptsp);

                                    coltop = coltop + rowspace;
                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "No.of Leave Taken");
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                 new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                        new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, stl);
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "No.of Days Absent/Lop  :");
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, tot_lop.ToString() + "/" + lop.ToString());
                                    mypdfpage.Add(ptsp);
                                }

                                coltop = coltop + rowspace + rowspace;
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "Earnings");
                                mypdfpage.Add(ptsp);

                                if (chkactual.Checked == true)
                                {
                                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 190, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "Actual Amount");
                                    mypdfpage.Add(ptsp);
                                }

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, 310, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Amount");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Deductions");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 760, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Amount");
                                mypdfpage.Add(ptsp);
                                int dedu = coltop + 10;
                                int allo = coltop + 10;
                                if (dvpay.Count > 0)
                                {
                                    double payband = 0;
                                    double gradepay = 0;
                                    double basic_pay3 = 0;
                                    string allowance3 = "";
                                    string deduction3 = "";
                                    double lopd = 0;
                                    double bassicd = 0;
                                    double DblAllowLOP = 0;
                                    double DblAllowLOP1 = 0;

                                    payband = Convert.ToDouble(dvpay[0]["pay_band"].ToString());
                                    gradepay = Convert.ToDouble(dvpay[0]["grade_pay"].ToString());
                                    basic_pay3 = Convert.ToDouble(dvpay[0]["bsalary"].ToString());
                                    Double actbasic = Convert.ToDouble(dvpay[0]["basic_alone"].ToString());
                                    lop = Convert.ToDouble(dvpay[0]["Tot_lop"].ToString());
                                    if (lop != 0)
                                    {
                                        lopd = Convert.ToDouble(lop);
                                    }
                                    else
                                    {
                                        lopd = 0;
                                    }
                                    bassicd = Convert.ToDouble(basic_pay3);
                                    // bassicd = bassicd - lopd;
                                    if (cbincludeBasicpay.Checked == false) // added by jairam 17-07-2015
                                    {
                                        if (bassicd != 0)
                                        {
                                            allo = allo + rowspace;
                                            ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                        new PdfArea(mydocument, left1, allo, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Basic Pay");
                                            mypdfpage.Add(ptsp);

                                            if (chkactual.Checked == true)
                                            {
                                                actbasic = Math.Round(actbasic, 2, MidpointRounding.AwayFromZero);
                                                string alowamount1 = actbasic.ToString();
                                                //if (!alowamount1.Contains('.'))
                                                //{
                                                //    alowamount1 = alowamount1 + ".00";
                                                //}
                                                //else
                                                //{
                                                //    string[] sp = alowamount1.Split('.');
                                                //    if (sp[1].Length < 2)
                                                //    {
                                                //        alowamount1 = alowamount1 + "0";
                                                //    }
                                                //}
                                                alowamount1 = String.Format("{0:0.00}", alowamount1);
                                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                        new PdfArea(mydocument, 230, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, actbasic.ToString());
                                                mypdfpage.Add(ptsp);
                                            }



                                            bassicd = Math.Round(bassicd, 2, MidpointRounding.AwayFromZero);
                                            string alowamount = bassicd.ToString();
                                            //if (!alowamount.Contains('.'))
                                            //{
                                            //    alowamount = alowamount + ".00";
                                            //}
                                            //else
                                            //{
                                            //    string[] sp = alowamount.Split('.');
                                            //    if (sp[1].Length < 2)
                                            //    {
                                            //        alowamount = alowamount + "0";
                                            //    }
                                            //}
                                            alowamount = String.Format("{0:0.00}", alowamount);
                                            ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                                            mypdfpage.Add(ptsp);
                                        }
                                    }
                                    if (gradepay != 0)
                                    {
                                        allo = allo + rowspace;
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left1, allo, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Grade Pay");
                                        mypdfpage.Add(ptsp);
                                        gradepay = Math.Round(gradepay, 2, MidpointRounding.AwayFromZero);
                                        string alowamount = gradepay.ToString();
                                        //if (!alowamount.Contains('.'))
                                        //{
                                        //    alowamount = alowamount + ".00";
                                        //}
                                        //else
                                        //{
                                        //    string[] sp = alowamount.Split('.');
                                        //    if (sp[1].Length < 2)
                                        //    {
                                        //        alowamount = alowamount + "0";
                                        //    }
                                        //}
                                        alowamount = String.Format("{0:0.00}", alowamount);
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                                        mypdfpage.Add(ptsp);
                                    }
                                    if (payband != 0)
                                    {
                                        allo = allo + rowspace;
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left1, allo, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Pay Band");
                                        mypdfpage.Add(ptsp);
                                        payband = Math.Round(payband, 2, MidpointRounding.AwayFromZero);
                                        string alowamount = payband.ToString();
                                        //if (!alowamount.Contains('.'))
                                        //{
                                        //    alowamount = alowamount + ".00";
                                        //}
                                        //else
                                        //{
                                        //    string[] sp = alowamount.Split('.');
                                        //    if (sp[1].Length < 2)
                                        //    {
                                        //        alowamount = alowamount + "0";
                                        //    }
                                        //}
                                        alowamount = String.Format("{0:0.00}", alowamount);
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                                        mypdfpage.Add(ptsp);
                                    }

                                    //******************************Added by srinath 12/1/2015*****************************
                                    Dictionary<string, string> dicactaloo = new Dictionary<string, string>();
                                    dspay.Tables[0].DefaultView.RowFilter = "staff_code='" + staffcode + "'";
                                    DataView dvallow = dspay.Tables[0].DefaultView;
                                    if (dvallow.Count > 0)
                                    {
                                        string actall = dvallow[0]["actallowance"].ToString();
                                        string[] spactalo = actall.Split('\\');
                                        for (int i = 0; i < spactalo.GetUpperBound(0); i++)
                                        {
                                            string getactal = spactalo[i];
                                            if (getactal.Trim() != "" && getactal != null)
                                            {
                                                string[] actallspv = getactal.Split(';');
                                                if (actallspv.GetUpperBound(0) >= 8)
                                                {
                                                    if (actallspv[1].ToString().Trim().ToLower() == "percent")
                                                    {
                                                        Double getrealsalry = 0;
                                                        Double getperce = 0;
                                                        string getval = "0";
                                                        if (actallspv[6].ToString().Trim() == "1")
                                                        {
                                                            if (actu_basicpay.Trim() != "" && actu_basicpay != null)
                                                            {
                                                                getrealsalry = Convert.ToDouble(actu_basicpay);
                                                            }
                                                            if (actallspv[2].ToString().Trim() != "" && actallspv[2].ToString() != null)
                                                            {
                                                                getperce = Convert.ToDouble(actallspv[2].ToString());
                                                            }
                                                            Double val = getrealsalry / 100 * getperce;
                                                            val = Math.Round(val, 0, MidpointRounding.AwayFromZero);
                                                            getval = val.ToString();
                                                        }
                                                        else if (actallspv[8].ToString().Trim() == "1")
                                                        {
                                                            if (actu_basicpay.Trim() != "" && actu_basicpay != null)
                                                            {
                                                                getrealsalry = Convert.ToDouble(actu_basicpay);
                                                            }
                                                            if (gradepay > 0)
                                                            {
                                                                getrealsalry = getrealsalry + Convert.ToDouble(gradepay);
                                                            }

                                                            if (actallspv[2].ToString().Trim() != "" && actallspv[2].ToString() != null)
                                                            {
                                                                getperce = Convert.ToDouble(actallspv[2].ToString());
                                                            }
                                                            Double val = getrealsalry / 100 * getperce;
                                                            val = Math.Round(val, 0, MidpointRounding.AwayFromZero);
                                                            getval = val.ToString();
                                                        }
                                                        if (!dicactaloo.ContainsKey(actallspv[0].ToString()))
                                                        {
                                                            dicactaloo.Add(actallspv[0].ToString().Trim().ToLower(), getval);
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    //*******************END********************************************************************

                                    string[] spallow = allowmaster.Split(';');
                                    for (int alo = 0; alo <= spallow.GetUpperBound(0); alo++)
                                    {
                                        string[] splalot = spallow[alo].Split('\\');
                                        if (splalot.GetUpperBound(0) >= 2)
                                        {
                                            string orallo = splalot[0].ToString();

                                            int r = 0;
                                            allowance3 = dvpay[0]["allowances"].ToString();
                                            int c = 0;
                                            string[] allowanmce_arr1;
                                            string alowancesplit;
                                            int exatval = 0;
                                            allowanmce_arr1 = allowance3.Split('\\');
                                            for (int i = c; i < allowanmce_arr1.GetUpperBound(0); i++)
                                            {
                                                exatval = allowanmce_arr1.GetUpperBound(0);
                                                alowancesplit = allowanmce_arr1[i];
                                                string[] allowanceda = alowancesplit.Split(';');
                                                if (allowanceda.GetUpperBound(0) >= 3)
                                                {
                                                    string da = allowanceda[0];
                                                    string daac = allowanceda[2];
                                                    string[] spval = daac.Split('-');
                                                    //daac = spval[0];
                                                    //if (daac.Trim() == "" || daac == null)
                                                    //{
                                                    //    daac = "0";
                                                    //}
                                                    //string da3 = allowanceda[3];

                                                    string da3 = string.Empty;
                                                    if (spval.Length == 2)//20.01.17 barath
                                                    {
                                                        if (Convert.ToString(allowanceda[1]).Trim().ToUpper() == "PERCENT")
                                                            da3 = Convert.ToString(spval[1]);
                                                        else
                                                            da3 = Convert.ToString(spval[0]);
                                                    }
                                                    else
                                                        da3 = Convert.ToString(allowanceda[3]);

                                                    double ds3 = Convert.ToDouble(da3);

                                                    ds3 = Math.Round(ds3, 2, MidpointRounding.AwayFromZero);
                                                    string DblAllowActVal = daac;
                                                    string[] spg = DblAllowActVal.Split('-');
                                                    DblAllowActVal = spg[0];
                                                    //string DblAllowVal = allowanceda[3];
                                                    //DblAllowLOP = (Convert.ToDouble(DblAllowActVal) - Convert.ToDouble(DblAllowVal));
                                                    string DblAllowVal = allowanceda[3];
                                                    DblAllowLOP = (Convert.ToDouble(DblAllowVal) - Convert.ToDouble(ds3));
                                                    DblAllowLOP = Math.Round(DblAllowLOP);
                                                    DblAllowLOP1 = DblAllowLOP1 + DblAllowLOP;

                                                    if (orallo.Trim().ToLower() == da.Trim().ToLower())
                                                    {
                                                        if (ds3 != 0)
                                                        {
                                                            if (spll_alll_tag_arry.GetUpperBound(0) >= r)
                                                            {
                                                                if (spll_alll_tag_arry[r] != da)
                                                                {
                                                                    allo = allo + rowspace;
                                                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                                new PdfArea(mydocument, left1, allo, 200, 50), System.Drawing.ContentAlignment.MiddleLeft, splalot[2].ToString());
                                                                    mypdfpage.Add(ptsp);
                                                                    if (chkactual.Checked == true)
                                                                    {
                                                                        if (dicactaloo.ContainsKey(splalot[2].ToString().Trim().ToLower()))
                                                                        {
                                                                            daac = dicactaloo[splalot[2].ToString().Trim().ToLower()];
                                                                        }
                                                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                                       new PdfArea(mydocument, 230, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, daac);
                                                                        mypdfpage.Add(ptsp);
                                                                    }
                                                                    string alowamount = ds3.ToString();
                                                                    //if (!alowamount.Contains('.'))
                                                                    //{
                                                                    //    alowamount = alowamount + ".00";
                                                                    //}
                                                                    //else
                                                                    //{
                                                                    //    string[] sp = alowamount.Split('.');
                                                                    //    if (sp[1].Length < 2)
                                                                    //    {
                                                                    //        alowamount = alowamount + "0";
                                                                    //    }
                                                                    //}
                                                                    alowamount = String.Format("{0:0.00}", alowamount);
                                                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                               new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                                                                    mypdfpage.Add(ptsp);
                                                                }
                                                                else
                                                                {

                                                                    if (splallow.Contains(da))
                                                                    {
                                                                        splallow[da] = da3.ToString();
                                                                    }
                                                                    //else
                                                                    //{
                                                                    //    splcount++;
                                                                    //    r++;
                                                                    //    splallow.Add(da, da3);
                                                                    //}
                                                                }
                                                            }
                                                        }
                                                        i = allowanmce_arr1.GetUpperBound(0);
                                                    }
                                                }
                                            }
                                        }
                                    }

                                    foreach (var kvp in dict)
                                    {
                                        string setval = kvp.Key.ToString();
                                        string setval1 = kvp.Value.ToString();
                                        deduction3 = dvpay[0]["deductions"].ToString();
                                        string[] deduction_arr1;
                                        string deductionsplit1;
                                        deduction_arr1 = deduction3.Split('\\');
                                        for (int sp = 0; sp < deduction_arr1.GetUpperBound(0); sp++)
                                        {
                                            deductionsplit1 = deduction_arr1[sp];
                                            string[] deductionda;
                                            deductionda = deductionsplit1.Split(';');
                                            if (deductionda.GetUpperBound(0) >= 3)
                                            {
                                                string de = deductionda[0];
                                                string de3 = deductionda[3];

                                                string daac = deductionda[2];//20.01.17 barath
                                                string[] spval = daac.Split('-');
                                                if (spval.Length == 2)
                                                {
                                                    if (Convert.ToString(deductionda[1]).Trim().ToUpper() == "PERCENT")
                                                        de3 = Convert.ToString(spval[1]);
                                                    else
                                                        de3 = Convert.ToString(spval[0]);
                                                }
                                                else
                                                    de3 = Convert.ToString(deductionda[3]);
                                                double de3d = Convert.ToDouble(de3);
                                                de3d = Math.Round(de3d, 2, MidpointRounding.AwayFromZero);
                                                if (setval == de)
                                                {
                                                    if (de3d != 0)
                                                    {
                                                        dedu = dedu + rowspace;
                                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                    new PdfArea(mydocument, left3, dedu, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, setval.ToString());
                                                        mypdfpage.Add(ptsp);
                                                        totdection = totdection + de3d;
                                                        string deamount = de3d.ToString();
                                                        //if (!deamount.Contains('.'))
                                                        //{
                                                        //    deamount = deamount + ".00";
                                                        //}
                                                        //else
                                                        //{
                                                        //    string[] spd = deamount.Split('.');
                                                        //    if (spd[1].Length < 2)
                                                        //    {
                                                        //        deamount = deamount + "0";
                                                        //    }
                                                        //}

                                                        deamount = String.Format("{0:0.00}", deamount);
                                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                   new PdfArea(mydocument, 770, dedu, 50, 50), System.Drawing.ContentAlignment.MiddleRight, deamount);
                                                        mypdfpage.Add(ptsp);
                                                    }

                                                    //if (lop != 0)
                                                    //    lop = lop + DblAllowLOP1;
                                                }
                                            }
                                        }
                                    }
                                }
                                if (allo > dedu)
                                {
                                    if (coltop < allo)
                                    {
                                        coltop = allo;
                                    }
                                }
                                else
                                {
                                    if (coltop < dedu)
                                    {
                                        coltop = dedu;
                                    }
                                }

                                coltop = coltop + rowspace + rowspace;
                                Double nesal3 = Convert.ToDouble(dvpay[0]["netsal"].ToString());
                                nesal3 = Math.Round(nesal3, 2, MidpointRounding.AwayFromZero);

                                Double totall = Convert.ToDouble(dvpay[0]["NetAddAct"].ToString());
                                totall = Math.Round(totall, 2, MidpointRounding.AwayFromZero);

                                double netded = Convert.ToDouble(dvpay[0]["netded"].ToString());
                                // netded = netded + lop;
                                netded = Math.Round(netded, 2, MidpointRounding.AwayFromZero);

                                string finalamount = totall.ToString();
                                //if (!finalamount.Contains('.'))
                                //{
                                //    finalamount = finalamount + ".00";
                                //}
                                //else
                                //{
                                //    string[] sp = finalamount.Split('.');
                                //    if (sp[1].Length < 2)
                                //    {
                                //        finalamount = finalamount + "0";
                                //    }
                                //}
                                finalamount = String.Format("{0:0.00}", finalamount);
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop, 100, 50), System.Drawing.ContentAlignment.MiddleLeft, "Gross Total");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, 320, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleRight, finalamount);
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Total Deduction");
                                mypdfpage.Add(ptsp);



                                Double lopamt = 0;//lopd
                                Double dedamount = 0; // barath 20.01.18
                                if (cblsearch.Items[11].Selected == true)
                                {
                                    lopamt = Convert.ToDouble(lop);
                                    lopamt = Math.Round(lopamt, 2, MidpointRounding.AwayFromZero);
                                    dedamount = Convert.ToDouble(lopamt) + Convert.ToDouble(netded) - Convert.ToDouble(lopamt);
                                }
                                else
                                {
                                    lopamt = Convert.ToDouble(lop);
                                    lopamt = Math.Round(lopamt, 2, MidpointRounding.AwayFromZero);
                                    dedamount = Convert.ToDouble(netded) - Convert.ToDouble(lopamt);
                                }
                                finalamount = Convert.ToString(dedamount);


                                //finalamount = (netded + lop).ToString();
                                //if (!finalamount.Contains('.'))
                                //{
                                //    finalamount = finalamount + ".00";
                                //}
                                //else
                                //{
                                //    string[] sp = finalamount.Split('.');
                                //    if (sp[1].Length < 2)
                                //    {
                                //        finalamount = finalamount + "0";
                                //    }
                                //}
                                finalamount = String.Format("{0:0.00}", finalamount);
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 770, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleRight, finalamount);
                                mypdfpage.Add(ptsp);

                                coltop = coltop + rowspace + rowspace;
                                finalamount = nesal3.ToString();
                                //if (!finalamount.Contains('.'))
                                //{
                                //    finalamount = finalamount + ".00";
                                //}
                                //else
                                //{
                                //    string[] sp = finalamount.Split('.');
                                //    if (sp[1].Length < 2)
                                //    {
                                //        finalamount = finalamount + "0";
                                //    }
                                //}
                                finalamount = String.Format("{0:0.00}", finalamount);
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                           new PdfArea(mydocument, left3, coltop, 500, 50), System.Drawing.ContentAlignment.MiddleLeft, "Net Pay : ");
                                mypdfpage.Add(ptsp);
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, 670, coltop, 150, 50), System.Drawing.ContentAlignment.MiddleRight, "Rs . " + finalamount);

                                mypdfpage.Add(ptsp);
                                //int amt = 0;
                                //int finalamt =Convert.ToInt32(finalamount);
                                //if (finalamt != amt)
                                //{
                                //    finalamt = Convert.ToInt32(finalamount);
                                //    string textvalue = "";
                                //    switch (finalamt)
                                //    {
                                //        case 0:
                                //            textvalue = "ZERO";
                                //            break;

                                //        case 1:
                                //            textvalue = "ONE";
                                //            break;

                                //        case 2:
                                //            textvalue = "TWO";
                                //            break;

                                //        case 3:
                                //            textvalue = "THREE";
                                //            break;

                                //        case 4:
                                //            textvalue = "FOUR";
                                //            break;

                                //        case 5:
                                //            textvalue = "FIVE";
                                //            break;

                                //        case 6:
                                //            textvalue = "SIX";
                                //            break;
                                //        case 7:
                                //            textvalue = "SEVEN";
                                //            break;

                                //        case 8:
                                //            textvalue = "EIGHT";
                                //            break;

                                //        case 9:
                                //            textvalue = "NINE";
                                //            break;

                                //        case 10:
                                //            textvalue = "TEN";
                                //            break;


                                //    }
                                //    return textvalue;
                                //}
                                if (rec % 2 != 0)
                                {
                                    PdfArea tete = new PdfArea(mydocument, 10, starttop, 830, coltop + 30);
                                    PdfRectangle pr1 = new PdfRectangle(mydocument, tete, Color.Black);
                                    mypdfpage.Add(pr1);
                                    if (totlastaff <= rec)
                                    {
                                        mypdfpage.SaveToDocument();
                                    }
                                }
                                else
                                {
                                    PdfArea tete = new PdfArea(mydocument, 10, starttop, 830, coltop - gettop + 50);
                                    PdfRectangle pr1 = new PdfRectangle(mydocument, tete, Color.Black);
                                    mypdfpage.Add(pr1);
                                    mypdfpage.SaveToDocument();
                                }

                                gettop = coltop + 100;

                            }
                        }
                    }
                }
            }
            if (ddlreport.SelectedItem.Text == "Format 3")
            {
                for (int res = 2; res <= Convert.ToInt32(fpsalary.Sheets[0].RowCount) - 1; res = res + 2)
                {
                    string text = fpsalary.Sheets[0].Cells[res, 2].Text.ToString();
                    if (text != "" && text != null)
                    {
                        int isval = Convert.ToInt32(fpsalary.Sheets[0].Cells[res, 1].Value);

                        if (isval == 1)
                        {
                            rec++;
                            getvalflag = true;
                            if (rec % 2 != 0)
                            {
                                if (rec != 1)
                                {
                                    mypdfpage = mydocument.NewPage();
                                }
                                gettop = 15;
                            }
                            else
                            {
                                if (gettop < 629)
                                {
                                    gettop = 630;
                                }
                                else
                                {
                                    mypdfpage = mydocument.NewPage();
                                    gettop = 15;
                                }
                            }

                            string staffcode = Convert.ToString(fpsalary.Sheets[0].Cells[res, 2].Tag);
                            string designation = Convert.ToString(fpsalary.Sheets[0].Cells[res, 0].Tag);
                            string deptname = Convert.ToString(fpsalary.Sheets[0].Cells[res, 0].Note);
                            designation = Convert.ToString(fpsalary.Sheets[0].Cells[res, 0].Note);
                            deptname = Convert.ToString(fpsalary.Sheets[0].Cells[res, 0].Tag);
                            string staffname = "";
                            string bankno = "";
                            string pfno = "";
                            string panno = "";
                            string dob = "";
                            string Dateofjoin = "";
                            string Allowances = "";
                            string lopamount = "";
                            string lopdates = "";
                            //string lopno = "";
                            //string name = "";
                            lopdates = fpsalary.Sheets[0].Cells[res, 13].Text.ToString();
                            //lopno = fpsalary.Sheets[0].Cells[res, 10].Text.ToString();
                            //name = fpsalary.Sheets[0].Cells[res, 5].Text.ToString();
                            Double totdection = 0;
                            dtpay.DefaultView.RowFilter = " staff_code='" + staffcode + "'";
                            dvpay = dtpay.DefaultView;
                            if (dvpay.Count > 0)
                            {
                                staffname = dvpay[0]["staff_name"].ToString();
                                bankno = dvpay[0]["bankaccount"].ToString();
                                pfno = dvpay[0]["pfnumber"].ToString();
                                payscale = dvpay[0]["pay_scalenew"].ToString();// added by sridhar 17 sep 2014
                                panno = dvpay[0]["pangirnumber"].ToString();
                                Allowances = dvpay[0]["allowances"].ToString();
                                lopamount = dvpay[0]["Tot_lop"].ToString();
                                designation = dvpay[0]["designame"].ToString();
                                deptname = dvpay[0]["deptname"].ToString();

                                if (pfno.Trim().ToLower() == "" || pfno == null || pfno.Trim() == "0")
                                {
                                    pfno = "-";
                                }
                                string setyear = dvpay[0]["PayYear"].ToString();
                                if (setyear.Trim() == "" || setyear == null)
                                {
                                    setyear = yearto;
                                }
                                string noofpresent = "";
                                string presnt = "";
                                string workdays = "";
                                string leavedays = "";
                                noofpresent = dvpay[0]["leavedetail"].ToString();
                                string[] presplit = noofpresent.Split(';');
                                presnt = presplit[1].ToString();
                                workdays = presplit[0].ToString();
                                leavedays = presplit[2].ToString();
                                int starttop = gettop;
                                int coltop = gettop;
                                int rowspace = 15;
                                if (File.Exists(HttpContext.Current.Server.MapPath("~/college/Left_Logo.jpeg")))
                                {
                                    PdfImage LogoImage = mydocument.NewImage(HttpContext.Current.Server.MapPath("~/college/Left_Logo.jpeg"));
                                    mypdfpage.Add(LogoImage, 25, coltop + 10, 400);
                                }
                                if (File.Exists(HttpContext.Current.Server.MapPath("~/college/Right_Logo.jpeg")))
                                {
                                    PdfImage LogoImage = mydocument.NewImage(HttpContext.Current.Server.MapPath("~/college/Right_Logo.jpeg"));
                                    mypdfpage.Add(LogoImage, 750, coltop + 10, 350);
                                }

                                PdfTextArea ptc = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                                        new PdfArea(mydocument, 0, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleCenter, collname);

                                mypdfpage.Add(ptc);

                                coltop = coltop + rowspace;
                                PdfTextArea pts = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 0, coltop + 10, 900, 50), System.Drawing.ContentAlignment.MiddleCenter, address);
                                mypdfpage.Add(pts);

                                coltop = coltop + rowspace;
                                PdfTextArea ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 0, coltop + 10, 900, 50), System.Drawing.ContentAlignment.MiddleCenter, "Pay Slip for the month of " + cblmonth.SelectedItem.Text + " " + "  " + setyear + "");
                                mypdfpage.Add(ptsp);
                                string stl = "";
                                Double lop = Convert.ToDouble(dvpay[0]["lop"].ToString());
                                double lop11 = lop;
                                string get_pre_lop = dvpay[0]["pre_lop"].ToString();
                                string get_cur_lop = dvpay[0]["cur_lop"].ToString();
                                double get_pre = 0;
                                double get_cur = 0;
                                double tot_lop = 0;
                                if (get_pre_lop != "")
                                {
                                    get_pre = Convert.ToDouble(get_pre_lop);
                                }
                                if (get_cur_lop != "")
                                {
                                    get_cur = Convert.ToDouble(get_cur_lop);
                                }
                                tot_lop = get_pre + get_cur;
                                double totalpreset = Convert.ToDouble(workdays) - tot_lop;
                                if (chkdays.Checked == true)
                                {
                                    //=====================================Leave Details Start====================================

                                    int maxdays = getmaxdays(monthname1, year3);
                                    //int l = 0;
                                    //int cl = 0;
                                    double[] clleave = new double[50];
                                    dayfrm = Convert.ToInt32(dayfrom);
                                    dayto = split1[0].ToString();
                                    daytonum = Convert.ToInt32(dayto);
                                    dsstaffattendance.Tables[0].DefaultView.RowFilter = " mon_year ='" + monyear + "'  and staff_code='" + staffcode + "'";
                                    dvstaffattendance = dsstaffattendance.Tables[0].DefaultView;
                                    if (monthname1 == monthnamenum)
                                    {
                                        for (int day = dayfrm; dayfrm <= daytonum; dayfrm++)
                                        {
                                            int day5 = 0;
                                            day5 = 0 + dayfrm;
                                            //l = 0;
                                            //cl = 0;
                                            if (dsleave.Tables[0].Rows.Count > 0)
                                            {
                                                ////l = l + 1;
                                                ////cl = cl + 1;
                                                if (dvstaffattendance.Count > 0)
                                                {
                                                    int day6;
                                                    string attnda = "";
                                                    day6 = 3 + day5;
                                                    attnda = dvstaffattendance[0][day6].ToString();
                                                    if (attnda != "")
                                                    {
                                                        string[] split100 = attnda.Split(new char[] { '-' });
                                                        string mor = "";
                                                        string eve = "";
                                                        mor = split100[0].ToString();
                                                        eve = split100[1].ToString();
                                                        for (int le = 1; le <= dsleave.Tables[0].Rows.Count; le++)
                                                        {
                                                            string levatype = leavetype[le];
                                                            if (mor.Trim().ToLower() == levatype)
                                                            {
                                                                clleave[le] = clleave[le] + 0.5;
                                                            }
                                                            if (eve.Trim().ToLower() == levatype)
                                                            {
                                                                clleave[le] = clleave[le] + 0.5;

                                                            }
                                                        }
                                                        string[] lave = new string[15];
                                                    }
                                                }
                                            }
                                        }
                                        for (int le = 1; le <= dsleave.Tables[0].Rows.Count; le++)
                                        {
                                            if (leavetype[le] != "LA")
                                            {
                                                if (clleave[le] != 0)
                                                {
                                                    stl = stl + leavetype[le].ToUpper() + "-" + clleave[le] + ", ";
                                                }
                                            }
                                        }
                                        if (stl != "")
                                        {
                                            stl = stl.Substring(0, stl.Length - 2);
                                        }
                                        Array.Clear(clleave, 0, clleave.Length);
                                    }
                                    else
                                    {
                                        dsstaffattendance.Tables[0].DefaultView.RowFilter = " mon_year ='" + monyear + "'  and staff_code='" + staffcode + "'";
                                        dvstaffattendance = dsstaffattendance.Tables[0].DefaultView;
                                        for (int day = dayfrm; dayfrm <= maxdays; dayfrm++)
                                        {
                                            int day5 = 0;
                                            day5 = 0 + dayfrm;
                                            if (dsleave.Tables[0].Rows.Count > 0)
                                            {
                                                if (dvstaffattendance.Count > 0)
                                                {
                                                    int day6;
                                                    string attnda = "";
                                                    day6 = 3 + day5;
                                                    attnda = dvstaffattendance[0][day6].ToString();
                                                    if (attnda != "")
                                                    {
                                                        string[] split100 = attnda.Split(new char[] { '-' });
                                                        string mor = "";
                                                        string eve = "";
                                                        mor = Convert.ToString(split100[0]); // added by jairam 01-12-2014
                                                        eve = Convert.ToString(split100[1]);
                                                        for (int le = 1; le <= dsleave.Tables[0].Rows.Count; le++)
                                                        {
                                                            string levatype = leavetype[le];
                                                            if (mor.Trim().ToLower() == levatype)
                                                            {
                                                                clleave[le] = clleave[le] + 0.5;
                                                            }
                                                            if (eve.Trim().ToLower() == levatype)
                                                            {
                                                                clleave[le] = clleave[le] + 0.5;

                                                            }
                                                        }
                                                        string[] lave = new string[15];
                                                    }
                                                }
                                            }
                                        }
                                        for (int le = 1; le <= dsleave.Tables[0].Rows.Count; le++)
                                        {
                                            if (leavetype[le] != "LA")
                                            {
                                                if (clleave[le] != 0)
                                                {
                                                    stl = stl + leavetype[le].ToUpper() + "-" + clleave[le] + ", ";
                                                }
                                            }
                                        }
                                        dsstaffattendance.Tables[0].DefaultView.RowFilter = " mon_year='" + monyearto + "' and staff_code='" + staffcode + "'";
                                        dvstaffattendance = dsstaffattendance.Tables[0].DefaultView;
                                        for (int day = 1; day <= daytonum; day++)
                                        {
                                            int day5 = 0;
                                            day5 = 0 + day;// added by jariam 
                                            if (dsleave.Tables[0].Rows.Count > 0)
                                            {
                                                if (dvstaffattendance.Count > 0)
                                                {
                                                    int day6;
                                                    string attnda = "";
                                                    day6 = 3 + day5;
                                                    attnda = dvstaffattendance[0][day6].ToString();
                                                    if (attnda != "")
                                                    {
                                                        string[] split100 = attnda.Split(new char[] { '-' });
                                                        string mor = "";
                                                        string eve = "";
                                                        mor = Convert.ToString(split100[0]); // added by jairam 01-12-2014
                                                        eve = Convert.ToString(split100[1]);
                                                        for (int le = 1; le <= dsleave.Tables[0].Rows.Count; le++)
                                                        {
                                                            string levatype = leavetype[le];
                                                            if (mor.Trim().ToLower() == levatype)
                                                            {
                                                                clleave[le] = clleave[le] + 0.5;
                                                            }
                                                            if (eve.Trim().ToLower() == levatype)
                                                            {
                                                                clleave[le] = clleave[le] + 0.5;

                                                            }
                                                        }
                                                        string[] lave = new string[15];
                                                    }
                                                }
                                            }
                                        }
                                        for (int le = 1; le <= dsleave.Tables[0].Rows.Count; le++)
                                        {
                                            if (leavetype[le] != "LA")
                                            {
                                                if (clleave[le] != 0)
                                                {
                                                    stl = stl + leavetype[le].ToUpper() + "-" + clleave[le] + ", ";
                                                }
                                            }
                                        }
                                        if (stl != "")
                                        {
                                            stl = stl.Substring(0, stl.Length - 2);
                                        }
                                    }
                                    Array.Clear(clleave, 0, clleave.Length);
                                    //=====================================Leave Details End====================================





                                }
                                coltop = coltop + 60;
                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Staff Code");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, staffcode);
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Department                    :");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, deptname);
                                mypdfpage.Add(ptsp);

                                coltop = coltop + rowspace;
                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "Staff Name");
                                mypdfpage.Add(ptsp);
                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall1, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, staffname);
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Designation                    :");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, designation);
                                mypdfpage.Add(ptsp);

                                coltop = coltop + rowspace;
                                //if (cblsearch.Items[33].Selected == true) // added by sridhar 16 sep 2014
                                //{
                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "EPF A/C No");
                                mypdfpage.Add(ptsp);



                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, pfno);
                                mypdfpage.Add(ptsp);
                                //}

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Bank A/C No                  :");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall1, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, bankno);
                                mypdfpage.Add(ptsp);
                                string dob1 = "select convert(nvarchar(15),sa.date_of_birth,103) as dob from staff_appl_master sa,staffmaster sm where sa.appl_no=sm.appl_no and sm.staff_code='" + staffcode + "'";
                                DataSet sk1 = new DataSet();
                                DAccess2 ddsd = new DAccess2();
                                sk1 = ddsd.select_method_wo_parameter(dob1, "Text");
                                string dob2 = sk1.Tables[0].Rows[0]["dob"].ToString();
                                coltop = coltop + rowspace;


                                string[] group_semi5 = lopdates.Split(',');

                                string doj8 = "";

                                for (int i = 0; i <= group_semi5.GetUpperBound(0); i++)
                                {
                                    string group_semi4 = group_semi5[i].ToString();
                                    string[] splitgroup_semi4 = group_semi4.Split('/');

                                    if (doj8 == "")
                                    {
                                        doj8 = splitgroup_semi4[0].ToString();
                                    }
                                    else
                                    {
                                        doj8 = doj8 + "," + splitgroup_semi4[0].ToString();
                                    }
                                }

                                if (cblsearch.Items[7].Selected == true)
                                {
                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "LOP DATES");
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                      new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                                    mypdfpage.Add(ptsp);

                                    if (lopdates != "")
                                    {
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, doj8);
                                    }
                                    else
                                    {
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "-");
                                    }
                                }
                                mypdfpage.Add(ptsp);

                                coltop = coltop + 20;

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "D.O.B");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, dob2);
                                mypdfpage.Add(ptsp);





                                string doj = "select join_date  from staffmaster where staff_code = '" + staffcode + "'";
                                DataSet sk2 = new DataSet();
                                DAccess2 ddsd2 = new DAccess2();

                                sk2 = ddsd2.select_method_wo_parameter(doj, "Text");
                                string doj2 = sk2.Tables[0].Rows[0]["join_date"].ToString();
                                string[] group_semi = doj2.Split('-');
                                string[] group_semi2 = doj2.Split(' ');
                                doj2 = group_semi2[0].ToString();
                                string[] group_semi3 = doj2.Split('/');
                                string doj3 = group_semi3[0].ToString();
                                string doj4 = group_semi3[1].ToString();
                                string doj5 = group_semi3[2].ToString();
                                string dojdate = doj4 + "/" + doj3 + "/" + doj5;
                                if (cbdateofjoin.Checked == true)
                                {
                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                 new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Date Of Join                   :");
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, dojdate);
                                    mypdfpage.Add(ptsp);
                                }

                                if (cblsearch.Items[34].Selected == true)
                                {
                                    if (payscale != "")// added by sridhar 17 sep 2014
                                    {
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Pay Scale                      :");
                                        mypdfpage.Add(ptsp);

                                        ptsp = new PdfTextArea(Fontsmall1, System.Drawing.Color.Black,
                                                                           new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, payscale);
                                        mypdfpage.Add(ptsp);

                                    }
                                }
                                coltop = coltop + rowspace;

                                if (panno != "")
                                {
                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                 new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "PAN No                          :");
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall1, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, panno);
                                    mypdfpage.Add(ptsp);
                                }

                                if (chkdays.Checked == true)
                                {
                                    coltop = coltop + rowspace;
                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "No.of Days Present");
                                    mypdfpage.Add(ptsp);
                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                        new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, totalpreset.ToString());
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "No.of Working Days       :");
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, workdays.ToString());
                                    mypdfpage.Add(ptsp);

                                    coltop = coltop + rowspace;
                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "No.of Leave Taken");
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                 new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                        new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, stl);
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "No.of Days Absent/Lop  :");
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, tot_lop.ToString() + "/" + lop.ToString());
                                    mypdfpage.Add(ptsp);
                                }

                                coltop = coltop + rowspace + rowspace;
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "Earnings");
                                mypdfpage.Add(ptsp);

                                if (chkactual.Checked == true)
                                {
                                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 190, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "Actual Amount");
                                    mypdfpage.Add(ptsp);
                                }

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, 310, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Amount");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Deductions");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 760, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Amount");
                                mypdfpage.Add(ptsp);
                                int dedu = coltop + 10;
                                int allo = coltop + 10;
                                if (dvpay.Count > 0)
                                {
                                    double payband = 0;
                                    double gradepay = 0;
                                    double basic_pay3 = 0;
                                    string allowance3 = "";
                                    string deduction3 = "";
                                    double lopd = 0;
                                    double bassicd = 0;
                                    double DblAllowLOP = 0;
                                    double DblAllowLOP1 = 0;
                                    double G_pay = 0;



                                    payband = Convert.ToDouble(dvpay[0]["pay_band"].ToString());
                                    gradepay = Convert.ToDouble(dvpay[0]["grade_pay"].ToString());
                                    basic_pay3 = Convert.ToDouble(dvpay[0]["bsalary"].ToString());
                                    G_pay = Convert.ToDouble(dvpay[0]["G_Pay"].ToString());
                                    Double actbasic = Convert.ToDouble(dvpay[0]["basic_alone"].ToString());
                                    lop = Convert.ToDouble(dvpay[0]["Tot_lop"].ToString());
                                    if (lop != 0)
                                    {
                                        lopd = Convert.ToDouble(lop);
                                    }
                                    else
                                    {
                                        lopd = 0;
                                    }
                                    bassicd = Convert.ToDouble(basic_pay3);
                                    // bassicd = bassicd - lopd;
                                    if (cbincludeBasicpay.Checked == false) // added by jairam 08-07-2015
                                    {
                                        if (bassicd != 0)
                                        {
                                            allo = allo + rowspace;
                                            ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                        new PdfArea(mydocument, left1, allo, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Basic Pay");
                                            mypdfpage.Add(ptsp);

                                            if (chkactual.Checked == true)
                                            {
                                                actbasic = Math.Round(actbasic, 2, MidpointRounding.AwayFromZero);
                                                string alowamount1 = actbasic.ToString();
                                                //if (!alowamount1.Contains('.'))
                                                //{
                                                //    alowamount1 = alowamount1 + ".00";
                                                //}
                                                //else
                                                //{
                                                //    string[] sp = alowamount1.Split('.');
                                                //    if (sp[1].Length < 2)
                                                //    {
                                                //        alowamount1 = alowamount1 + "0";
                                                //    }
                                                //}
                                                alowamount1 = String.Format("{0:0.00}", alowamount1);
                                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                        new PdfArea(mydocument, 230, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, actbasic.ToString());
                                                mypdfpage.Add(ptsp);
                                            }



                                            bassicd = Math.Round(bassicd, 2, MidpointRounding.AwayFromZero);
                                            string alowamount = bassicd.ToString();
                                            //if (!alowamount.Contains('.'))
                                            //{
                                            //    alowamount = alowamount + ".00";
                                            //}
                                            //else
                                            //{
                                            //    string[] sp = alowamount.Split('.');
                                            //    if (sp[1].Length < 2)
                                            //    {
                                            //        alowamount = alowamount + "0";
                                            //    }
                                            //}
                                            alowamount = String.Format("{0:0.00}", alowamount);
                                            ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                                            mypdfpage.Add(ptsp);
                                        }
                                    }
                                    if (gradepay != 0)
                                    {
                                        allo = allo + rowspace;
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left1, allo, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Grade Pay");
                                        mypdfpage.Add(ptsp);
                                        gradepay = Math.Round(gradepay, 2, MidpointRounding.AwayFromZero);
                                        string alowamount = gradepay.ToString();
                                        //if (!alowamount.Contains('.'))
                                        //{
                                        //    alowamount = alowamount + ".00";
                                        //}
                                        //else
                                        //{
                                        //    string[] sp = alowamount.Split('.');
                                        //    if (sp[1].Length < 2)
                                        //    {
                                        //        alowamount = alowamount + "0";
                                        //    }
                                        //}
                                        alowamount = String.Format("{0:0.00}", alowamount);
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                                        mypdfpage.Add(ptsp);
                                    }
                                    if (payband != 0)
                                    {
                                        allo = allo + rowspace;
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left1, allo, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Pay Band");
                                        mypdfpage.Add(ptsp);
                                        payband = Math.Round(payband, 2, MidpointRounding.AwayFromZero);
                                        string alowamount = payband.ToString();
                                        //if (!alowamount.Contains('.'))
                                        //{
                                        //    alowamount = alowamount + ".00";
                                        //}
                                        //else
                                        //{
                                        //    string[] sp = alowamount.Split('.');
                                        //    if (sp[1].Length < 2)
                                        //    {
                                        //        alowamount = alowamount + "0";
                                        //    }
                                        //}
                                        alowamount = String.Format("{0:0.00}", alowamount);
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                                        mypdfpage.Add(ptsp);
                                    }


                                    //******************************Added by srinath 12/1/2015*****************************
                                    Dictionary<string, string> dicactaloo = new Dictionary<string, string>();
                                    dspay.Tables[0].DefaultView.RowFilter = "staff_code='" + staffcode + "'";
                                    DataView dvallow = dspay.Tables[0].DefaultView;
                                    if (dvallow.Count > 0)
                                    {
                                        string actall = dvallow[0]["actallowance"].ToString();
                                        string[] spactalo = actall.Split('\\');
                                        for (int i = 0; i < spactalo.GetUpperBound(0); i++)
                                        {
                                            string getactal = spactalo[i];
                                            if (getactal.Trim() != "" && getactal != null)
                                            {
                                                string[] actallspv = getactal.Split(';');
                                                if (actallspv.GetUpperBound(0) >= 8)
                                                {
                                                    if (actallspv[1].ToString().Trim().ToLower() == "percent")
                                                    {
                                                        Double getrealsalry = 0;
                                                        Double getperce = 0;
                                                        string getval = "0";
                                                        if (actallspv[6].ToString().Trim() == "1")
                                                        {
                                                            if (actbasic > 0)
                                                            {
                                                                getrealsalry = Convert.ToDouble(actbasic);
                                                            }
                                                            if (actallspv[2].ToString().Trim() != "" && actallspv[2].ToString() != null)
                                                            {
                                                                getperce = Convert.ToDouble(actallspv[2].ToString());
                                                            }
                                                            Double val = getrealsalry / 100 * getperce;
                                                            val = Math.Round(val, 0, MidpointRounding.AwayFromZero);
                                                            getval = val.ToString();
                                                        }
                                                        else if (actallspv[8].ToString().Trim() == "1")
                                                        {
                                                            if (actbasic > 0)
                                                            {
                                                                getrealsalry = Convert.ToDouble(actbasic);
                                                            }
                                                            if (gradepay > 0)
                                                            {
                                                                getrealsalry = getrealsalry + Convert.ToDouble(gradepay);
                                                            }

                                                            if (actallspv[2].ToString().Trim() != "" && actallspv[2].ToString() != null)
                                                            {
                                                                getperce = Convert.ToDouble(actallspv[2].ToString());
                                                            }
                                                            Double val = getrealsalry / 100 * getperce;
                                                            val = Math.Round(val, 0, MidpointRounding.AwayFromZero);
                                                            getval = val.ToString();
                                                        }
                                                        if (!dicactaloo.ContainsKey(actallspv[0].ToString()))
                                                        {
                                                            dicactaloo.Add(actallspv[0].ToString().Trim().ToLower(), getval);
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    //*******************END********************************************************************

                                    string[] spallow = allowmaster.Split(';');
                                    for (int alo = 0; alo <= spallow.GetUpperBound(0); alo++)
                                    {
                                        string[] splalot = spallow[alo].Split('\\');
                                        if (splalot.GetUpperBound(0) >= 2)
                                        {
                                            string orallo = splalot[0].ToString();

                                            int r = 0;
                                            allowance3 = dvpay[0]["allowances"].ToString();
                                            int c = 0;
                                            string[] allowanmce_arr1;
                                            string alowancesplit;
                                            int exatval = 0;
                                            allowanmce_arr1 = allowance3.Split('\\');
                                            for (int i = c; i < allowanmce_arr1.GetUpperBound(0); i++)   // Modify By jairam 06-12-2014 
                                            {
                                                exatval = allowanmce_arr1.GetUpperBound(0);
                                                alowancesplit = allowanmce_arr1[i];
                                                string[] allowanceda = alowancesplit.Split(';');
                                                if (allowanceda.GetUpperBound(0) >= 3)
                                                {
                                                    string da = allowanceda[0];
                                                    string mode = Convert.ToString(allowanceda[1]);
                                                    string[] spval = allowanceda[2].Split('-');
                                                    string daac = spval[0];
                                                    if (daac.Trim() == "" || daac == null)
                                                    {
                                                        daac = "0";
                                                    }
                                                    string da3 = allowanceda[3];
                                                    double ds3 = Convert.ToDouble(da3);
                                                    ds3 = Math.Round(ds3, 2, MidpointRounding.AwayFromZero);
                                                    string DblAllowActVal = daac;
                                                    string DblAllowVal = allowanceda[3];
                                                    DblAllowLOP = (Convert.ToDouble(DblAllowActVal) - Convert.ToDouble(DblAllowVal));
                                                    DblAllowLOP = Math.Round(DblAllowLOP);
                                                    DblAllowLOP1 = DblAllowLOP1 + DblAllowLOP;

                                                    if (orallo.Trim().ToLower() == da.Trim().ToLower())
                                                    {
                                                        if (ds3 != 0)
                                                        {
                                                            if (spll_alll_tag_arry.GetUpperBound(0) >= r)
                                                            {
                                                                if (spll_alll_tag_arry[r] != da)
                                                                {
                                                                    allo = allo + rowspace;
                                                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                                new PdfArea(mydocument, left1, allo, 200, 50), System.Drawing.ContentAlignment.MiddleLeft, splalot[2].ToString());
                                                                    mypdfpage.Add(ptsp);
                                                                    if (chkactual.Checked == true)
                                                                    {
                                                                        if (mode.Trim().ToUpper() == "AMOUNT")
                                                                        {
                                                                            ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                                           new PdfArea(mydocument, 230, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, daac);
                                                                            mypdfpage.Add(ptsp);
                                                                        }
                                                                        else
                                                                        {
                                                                            if (dicactaloo.ContainsKey(da.ToString().Trim().ToLower()))
                                                                            {
                                                                                daac = dicactaloo[da.ToString().Trim().ToLower()];
                                                                            }
                                                                            ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                                      new PdfArea(mydocument, 230, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, daac);
                                                                            mypdfpage.Add(ptsp);
                                                                        }
                                                                    }
                                                                    string alowamount = ds3.ToString();
                                                                    //if (!alowamount.Contains('.'))
                                                                    //{
                                                                    //    alowamount = alowamount + ".00";
                                                                    //}
                                                                    //else
                                                                    //{
                                                                    //    string[] sp = alowamount.Split('.');
                                                                    //    if (sp[1].Length < 2)
                                                                    //    {
                                                                    //        alowamount = alowamount + "0";
                                                                    //    }
                                                                    //}
                                                                    alowamount = String.Format("{0:0.00}", alowamount);
                                                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                               new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                                                                    mypdfpage.Add(ptsp);
                                                                }
                                                                else
                                                                {

                                                                    if (splallow.Contains(da))
                                                                    {
                                                                        splallow[da] = da3.ToString();
                                                                    }
                                                                    //else
                                                                    //{
                                                                    //    splcount++;
                                                                    //    r++;
                                                                    //    splallow.Add(da, da3);
                                                                    //}
                                                                }
                                                            }
                                                        }
                                                        i = allowanmce_arr1.GetUpperBound(0);
                                                    }
                                                }
                                            }
                                        }
                                    }

                                    foreach (var kvp in dict)
                                    {
                                        string setval = kvp.Key.ToString();
                                        string setval1 = kvp.Value.ToString();
                                        deduction3 = dvpay[0]["deductions"].ToString();
                                        string[] deduction_arr1;
                                        string deductionsplit1;
                                        deduction_arr1 = deduction3.Split('\\');
                                        for (int sp = 0; sp < deduction_arr1.GetUpperBound(0); sp++)
                                        {
                                            deductionsplit1 = deduction_arr1[sp];
                                            string[] deductionda;
                                            deductionda = deductionsplit1.Split(';');
                                            if (deductionda.GetUpperBound(0) >= 3)
                                            {
                                                string de = deductionda[0];
                                                string de3 = deductionda[3];
                                                double de3d = Convert.ToDouble(de3);
                                                de3d = Math.Round(de3d, 2, MidpointRounding.AwayFromZero);
                                                if (setval == de)
                                                {
                                                    if (de3d != 0)
                                                    {
                                                        dedu = dedu + rowspace;
                                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                    new PdfArea(mydocument, left3, dedu, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, setval.ToString());
                                                        mypdfpage.Add(ptsp);
                                                        totdection = totdection + de3d;
                                                        string deamount = de3d.ToString();
                                                        //if (!deamount.Contains('.'))
                                                        //{
                                                        //    deamount = deamount + ".00";
                                                        //}
                                                        //else
                                                        //{
                                                        //    string[] spd = deamount.Split('.');
                                                        //    if (spd[1].Length < 2)
                                                        //    {
                                                        //        deamount = deamount + "0";
                                                        //    }
                                                        //}
                                                        deamount = String.Format("{0:0.00}", deamount);
                                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                   new PdfArea(mydocument, 770, dedu, 50, 50), System.Drawing.ContentAlignment.MiddleRight, deamount);
                                                        mypdfpage.Add(ptsp);
                                                    }

                                                    if (lop != 0)
                                                        lop = lop + DblAllowLOP1;
                                                }
                                            }
                                        }
                                    }
                                }

                                if (allo > dedu)
                                {
                                    if (coltop < allo)
                                    {
                                        coltop = allo;
                                    }
                                }
                                else
                                {
                                    if (coltop < dedu)
                                    {
                                        coltop = dedu;  // Adeeeeeeeeeee
                                    }
                                }


                                if (cblsearch.Items[11].Selected == true)
                                {
                                    if (lop != 0)
                                    {

                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                       new PdfArea(mydocument, left3, coltop + 15, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "LOP Amount");
                                        mypdfpage.Add(ptsp);
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                       new PdfArea(mydocument, 770, coltop + 15, 50, 50), System.Drawing.ContentAlignment.MiddleRight, Convert.ToString(lop11));

                                        mypdfpage.Add(ptsp);
                                        coltop = coltop + 20;
                                    }

                                }


                                coltop = coltop + rowspace + rowspace;
                                Double nesal3 = Convert.ToDouble(dvpay[0]["netsal"].ToString());
                                nesal3 = Math.Round(nesal3, 2, MidpointRounding.AwayFromZero);

                                Double totall = Convert.ToDouble(dvpay[0]["NetAddAct"].ToString());
                                totall = Math.Round(totall, 2, MidpointRounding.AwayFromZero);

                                double netded = Convert.ToDouble(dvpay[0]["netded"].ToString());
                                // netded = netded + lop;
                                netded = Math.Round(netded, 2, MidpointRounding.AwayFromZero);


                                Double lqw = Convert.ToDouble(lopamount);
                                lqw = Math.Round(totall, 2, MidpointRounding.AwayFromZero);


                                string finalamount = totall.ToString();
                                //if (!finalamount.Contains('.'))
                                //{
                                //    finalamount = finalamount + ".00";
                                //}
                                //else
                                //{
                                //    string[] sp = finalamount.Split('.');
                                //    if (sp[1].Length < 2)
                                //    {
                                //        finalamount = finalamount + "0";
                                //    }
                                //}
                                finalamount = String.Format("{0:0.00}", finalamount);
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop, 100, 50), System.Drawing.ContentAlignment.MiddleLeft, "Gross Total");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, 320, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleRight, finalamount);
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Total Deduction");
                                mypdfpage.Add(ptsp);

                                Double lopamt = Convert.ToDouble(lopamount);

                                lopamt = Math.Round(lopamt, 2, MidpointRounding.AwayFromZero);
                                int dedamount = Convert.ToInt32(lopamt) + Convert.ToInt32(netded);
                                //if (!finalamount.Contains('.'))
                                //{
                                //    finalamount = finalamount + ".00";
                                //}
                                //else
                                //{
                                //    string[] sp = finalamount.Split('.');
                                //    if (sp[1].Length < 2)
                                //    {
                                //        finalamount = finalamount + "0";
                                //    }
                                //}
                                finalamount = String.Format("{0:0.00}", finalamount);


                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 770, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleRight, dedamount.ToString());
                                mypdfpage.Add(ptsp);

                                coltop = coltop + rowspace + rowspace;
                                //finalamount = nesal3.ToString();

                                finalamount = String.Format("{0:0.00}", finalamount);
                                double totnet = 0;
                                totnet = Convert.ToDouble(finalamount) - dedamount;

                                if (cblsearch.Items[41].Selected == true)
                                {
                                    MemoryStream memoryStream = new MemoryStream();
                                    string filename = "ofc_seal";
                                    string selq = "select officeseal from collinfo where college_code='" + Convert.ToString(Session["collegecode"]) + "'";
                                    ds.Clear();
                                    ds = d2.select_method_wo_parameter(selq, "Text");
                                    if (ds.Tables.Count > 0)
                                    {
                                        if (!File.Exists(HttpContext.Current.Server.MapPath("~/UploadFiles/Officeseal/ofc_seal.jpg")))
                                        {
                                            if (ds.Tables[0].Rows.Count > 0)
                                            {
                                                byte[] file = (byte[])ds.Tables[0].Rows[0]["officeseal"];
                                                memoryStream.Write(file, 0, file.Length);
                                                if (file.Length > 0)
                                                {
                                                    System.Drawing.Image imgx = System.Drawing.Image.FromStream(memoryStream, true, true);
                                                    System.Drawing.Image thumb = imgx.GetThumbnailImage(400, 400, null, IntPtr.Zero);
                                                    thumb.Save(HttpContext.Current.Server.MapPath("~/UploadFiles/Officeseal/" + filename + ".jpg"), System.Drawing.Imaging.ImageFormat.Jpeg);
                                                }
                                                memoryStream.Dispose();
                                                memoryStream.Close();
                                            }
                                        }


                                    }


                                    if (File.Exists(HttpContext.Current.Server.MapPath("~/UploadFiles/Officeseal/ofc_seal.jpg")))
                                    {
                                        PdfImage LogoImage = mydocument.NewImage(HttpContext.Current.Server.MapPath("~/UploadFiles/Officeseal/ofc_seal.jpg"));
                                        //mypdfpage.Add(LogoImage, left3 + 275, coltop + 40, 400);
                                        mypdfpage.Add(LogoImage, left3 + 175, coltop, 210);
                                    }
                                }

                                if (cbAuthor.Checked == true)
                                {
                                    if (txt_author.Text.Trim() != "")
                                    {
                                        ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                          new PdfArea(mydocument, left3 + 90, coltop + 110, 250, 50), System.Drawing.ContentAlignment.MiddleRight, txt_author.Text.ToString());
                                        mypdfpage.Add(ptsp);
                                    }
                                }

                                if (cbrupesinwords.Checked == true)
                                {
                                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                              new PdfArea(mydocument, left1, coltop, 500, 50), System.Drawing.ContentAlignment.MiddleLeft, "Net Pay : ");
                                    mypdfpage.Add(ptsp);
                                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                      new PdfArea(mydocument, 50, coltop, 150, 50), System.Drawing.ContentAlignment.MiddleRight, "Rs . " + totnet.ToString());
                                    mypdfpage.Add(ptsp);

                                    string word = ConvertNumbertoWords(Convert.ToInt32(totnet)); // added by jairam 01-12-2014

                                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                     new PdfArea(mydocument, 150, coltop, 650, 50), System.Drawing.ContentAlignment.MiddleRight, " (Rupees " + word + " Only)");
                                    mypdfpage.Add(ptsp);
                                }
                                else
                                {

                                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                              new PdfArea(mydocument, left3, coltop, 500, 50), System.Drawing.ContentAlignment.MiddleLeft, "Net Pay : ");
                                    mypdfpage.Add(ptsp);
                                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                      new PdfArea(mydocument, 670, coltop, 150, 50), System.Drawing.ContentAlignment.MiddleRight, "Rs . " + totnet.ToString());
                                    mypdfpage.Add(ptsp);
                                }


                                if (rec % 2 != 0)
                                {
                                    PdfArea tete = new PdfArea(mydocument, 10, starttop, 830, coltop + 135);
                                    PdfRectangle pr1 = new PdfRectangle(mydocument, tete, Color.Black);
                                    mypdfpage.Add(pr1);
                                    if (totlastaff <= rec)
                                    {
                                        mypdfpage.SaveToDocument();
                                    }
                                }
                                else
                                {
                                    PdfArea tete = new PdfArea(mydocument, 10, starttop, 830, coltop - gettop + 140);
                                    PdfRectangle pr1 = new PdfRectangle(mydocument, tete, Color.Black);
                                    mypdfpage.Add(pr1);
                                    mypdfpage.SaveToDocument();
                                }
                                gettop = coltop + 100;

                            }
                        }
                    }
                }
            }

            if (ddlreport.SelectedItem.Text == "Format 1")
            {
                for (int res = 1; res <= Convert.ToInt32(fpsalary.Sheets[0].RowCount) - 1; res++)
                {
                    string text = fpsalary.Sheets[0].Cells[res, 2].Text.ToString();
                    if (text != "" && text != null)
                    {
                        int isval = Convert.ToInt32(fpsalary.Sheets[0].Cells[res, 1].Value);

                        if (isval == 1)
                        {
                            rec++;
                            getvalflag = true;
                            if (rec % 2 != 0)
                            {
                                if (rec != 1)
                                {
                                    mypdfpage = mydocument.NewPage();
                                }
                                gettop = 15;
                            }
                            else
                            {
                                if (gettop < 629)
                                {
                                    gettop = 630;
                                }
                                else
                                {
                                    mypdfpage = mydocument.NewPage();
                                    gettop = 15;
                                }
                            }

                            string staffcode = Convert.ToString(fpsalary.Sheets[0].Cells[res, 2].Tag);
                            string designation = Convert.ToString(fpsalary.Sheets[0].Cells[res, 0].Tag);
                            string deptname = Convert.ToString(fpsalary.Sheets[0].Cells[res, 0].Note);
                            designation = Convert.ToString(fpsalary.Sheets[0].Cells[res, 0].Note);
                            deptname = Convert.ToString(fpsalary.Sheets[0].Cells[res, 0].Tag);
                            string staffname = "";
                            string bankno = "";
                            string pfno = "";
                            string panno = "";
                            string dob = "";
                            string Dateofjoin = "";
                            string Allowances = "";
                            string lopamount = "";
                            string lopdates = "";
                            //string lopno = "";
                            //string name = "";
                            lopdates = fpsalary.Sheets[0].Cells[res, 13].Text.ToString();
                            //lopno = fpsalary.Sheets[0].Cells[res, 10].Text.ToString();
                            //name = fpsalary.Sheets[0].Cells[res, 5].Text.ToString();
                            Double totdection = 0;
                            dtpay.DefaultView.RowFilter = " staff_code='" + staffcode + "'";
                            dvpay = dtpay.DefaultView;
                            if (dvpay.Count > 0)
                            {
                                staffname = dvpay[0]["staff_name"].ToString();
                                bankno = dvpay[0]["bankaccount"].ToString();
                                pfno = dvpay[0]["pfnumber"].ToString();
                                payscale = dvpay[0]["pay_scalenew"].ToString();// added by sridhar 17 sep 2014
                                panno = dvpay[0]["pangirnumber"].ToString();
                                Allowances = dvpay[0]["allowances"].ToString();
                                lopamount = dvpay[0]["Tot_lop"].ToString();
                                designation = dvpay[0]["designame"].ToString();
                                deptname = dvpay[0]["deptname"].ToString();

                                if (pfno.Trim().ToLower() == "" || pfno == null || pfno.Trim() == "0")
                                {
                                    pfno = "-";
                                }
                                string setyear = dvpay[0]["PayYear"].ToString();
                                if (setyear.Trim() == "" || setyear == null)
                                {
                                    setyear = yearto;
                                }
                                string noofpresent = "";
                                string presnt = "";
                                string workdays = "";
                                string leavedays = "";
                                noofpresent = dvpay[0]["leavedetail"].ToString();
                                string[] presplit = noofpresent.Split(';');
                                presnt = presplit[1].ToString();
                                workdays = presplit[0].ToString();
                                leavedays = presplit[2].ToString();
                                int starttop = gettop;
                                int coltop = gettop;
                                int rowspace = 15;
                                if (File.Exists(HttpContext.Current.Server.MapPath("~/college/Left_Logo.jpeg")))
                                {
                                    PdfImage LogoImage = mydocument.NewImage(HttpContext.Current.Server.MapPath("~/college/Left_Logo.jpeg"));
                                    mypdfpage.Add(LogoImage, 25, coltop + 10, 400);
                                }
                                if (File.Exists(HttpContext.Current.Server.MapPath("~/college/Right_Logo.jpeg")))
                                {
                                    PdfImage LogoImage = mydocument.NewImage(HttpContext.Current.Server.MapPath("~/college/Right_Logo.jpeg"));
                                    mypdfpage.Add(LogoImage, 750, coltop + 10, 350);
                                }

                                PdfTextArea ptc = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                                        new PdfArea(mydocument, 0, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleCenter, collname);

                                mypdfpage.Add(ptc);

                                coltop = coltop + rowspace;
                                PdfTextArea pts = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 0, coltop + 10, 900, 50), System.Drawing.ContentAlignment.MiddleCenter, address);
                                mypdfpage.Add(pts);

                                coltop = coltop + rowspace;
                                PdfTextArea ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 0, coltop + 10, 900, 50), System.Drawing.ContentAlignment.MiddleCenter, "Pay Slip for the month of " + cblmonth.SelectedItem.Text + " " + "  " + setyear + "");
                                mypdfpage.Add(ptsp);
                                string stl = "";
                                Double lop = Convert.ToDouble(dvpay[0]["Tot_lop"].ToString());
                                double lop11 = lop;
                                string get_pre_lop = dvpay[0]["pre_lop"].ToString();
                                string get_cur_lop = dvpay[0]["cur_lop"].ToString();
                                double get_pre = 0;
                                double get_cur = 0;
                                double tot_lop = 0;
                                if (get_pre_lop != "")
                                {
                                    get_pre = Convert.ToDouble(get_pre_lop);
                                }
                                if (get_cur_lop != "")
                                {
                                    get_cur = Convert.ToDouble(get_cur_lop);
                                }
                                tot_lop = get_pre + get_cur;
                                double totalpreset = Convert.ToDouble(workdays) - tot_lop;
                                if (chkdays.Checked == true)
                                {
                                    //=====================================Leave Details Start====================================

                                    int maxdays = getmaxdays(monthname1, year3);
                                    //int l = 0;
                                    //int cl = 0;
                                    double[] clleave = new double[50];
                                    dayfrm = Convert.ToInt32(dayfrom);
                                    dayto = split1[0].ToString();
                                    daytonum = Convert.ToInt32(dayto);
                                    dsstaffattendance.Tables[0].DefaultView.RowFilter = " mon_year ='" + monyear + "'  and staff_code='" + staffcode + "'";
                                    dvstaffattendance = dsstaffattendance.Tables[0].DefaultView;
                                    if (monthname1 == monthnamenum)
                                    {
                                        for (int day = dayfrm; dayfrm <= daytonum; dayfrm++)
                                        {
                                            int day5 = 0;
                                            day5 = 0 + dayfrm;
                                            //l = 0;
                                            //cl = 0;
                                            if (dsleave.Tables[0].Rows.Count > 0)
                                            {
                                                ////l = l + 1;
                                                ////cl = cl + 1;
                                                if (dvstaffattendance.Count > 0)
                                                {
                                                    int day6;
                                                    string attnda = "";
                                                    day6 = 3 + day5;
                                                    attnda = dvstaffattendance[0][day6].ToString();
                                                    if (attnda != "")
                                                    {
                                                        string[] split100 = attnda.Split(new char[] { '-' });
                                                        string mor = "";
                                                        string eve = "";
                                                        mor = split100[0].ToString();
                                                        eve = split100[1].ToString();
                                                        for (int le = 1; le <= dsleave.Tables[0].Rows.Count; le++)
                                                        {
                                                            string levatype = leavetype[le];
                                                            if (mor.Trim().ToLower() == levatype)
                                                            {
                                                                clleave[le] = clleave[le] + 0.5;
                                                            }
                                                            if (eve.Trim().ToLower() == levatype)
                                                            {
                                                                clleave[le] = clleave[le] + 0.5;

                                                            }
                                                        }
                                                        string[] lave = new string[15];
                                                    }
                                                }
                                            }
                                        }
                                        for (int le = 1; le <= dsleave.Tables[0].Rows.Count; le++)
                                        {
                                            if (leavetype[le] != "LA")
                                            {
                                                if (clleave[le] != 0)
                                                {
                                                    stl = stl + leavetype[le].ToUpper() + "-" + clleave[le] + ", ";
                                                }
                                            }
                                        }
                                        if (stl != "")
                                        {
                                            stl = stl.Substring(0, stl.Length - 2);
                                        }
                                        Array.Clear(clleave, 0, clleave.Length);
                                    }
                                    else
                                    {
                                        dsstaffattendance.Tables[0].DefaultView.RowFilter = " mon_year ='" + monyear + "'  and staff_code='" + staffcode + "'";
                                        dvstaffattendance = dsstaffattendance.Tables[0].DefaultView;
                                        for (int day = dayfrm; dayfrm <= maxdays; dayfrm++)
                                        {
                                            int day5 = 0;
                                            day5 = 0 + dayfrm;
                                            if (dsleave.Tables[0].Rows.Count > 0)
                                            {
                                                if (dvstaffattendance.Count > 0)
                                                {
                                                    int day6;
                                                    string attnda = "";
                                                    day6 = 3 + day5;
                                                    attnda = dvstaffattendance[0][day6].ToString();
                                                    if (attnda != "")
                                                    {
                                                        string[] split100 = attnda.Split(new char[] { '-' });
                                                        string mor = "";
                                                        string eve = "";
                                                        mor = Convert.ToString(split100[0]); // added by jairam 01-12-2014
                                                        eve = Convert.ToString(split100[1]);
                                                        for (int le = 1; le <= dsleave.Tables[0].Rows.Count; le++)
                                                        {
                                                            string levatype = leavetype[le];
                                                            if (mor.Trim().ToLower() == levatype)
                                                            {
                                                                clleave[le] = clleave[le] + 0.5;
                                                            }
                                                            if (eve.Trim().ToLower() == levatype)
                                                            {
                                                                clleave[le] = clleave[le] + 0.5;

                                                            }
                                                        }
                                                        string[] lave = new string[15];
                                                    }
                                                }
                                            }
                                        }
                                        for (int le = 1; le <= dsleave.Tables[0].Rows.Count; le++)
                                        {
                                            if (leavetype[le] != "LA")
                                            {
                                                if (clleave[le] != 0)
                                                {
                                                    stl = stl + leavetype[le].ToUpper() + "-" + clleave[le] + ", ";
                                                }
                                            }
                                        }
                                        dsstaffattendance.Tables[0].DefaultView.RowFilter = " mon_year='" + monyearto + "' and staff_code='" + staffcode + "'";
                                        dvstaffattendance = dsstaffattendance.Tables[0].DefaultView;
                                        for (int day = 1; day <= daytonum; day++)
                                        {
                                            int day5 = 0;
                                            day5 = 0 + day;// added by jariam 
                                            if (dsleave.Tables[0].Rows.Count > 0)
                                            {
                                                if (dvstaffattendance.Count > 0)
                                                {
                                                    int day6;
                                                    string attnda = "";
                                                    day6 = 3 + day5;
                                                    attnda = dvstaffattendance[0][day6].ToString();
                                                    if (attnda != "")
                                                    {
                                                        string[] split100 = attnda.Split(new char[] { '-' });
                                                        string mor = "";
                                                        string eve = "";
                                                        mor = Convert.ToString(split100[0]); // added by jairam 01-12-2014
                                                        eve = Convert.ToString(split100[1]);
                                                        for (int le = 1; le <= dsleave.Tables[0].Rows.Count; le++)
                                                        {
                                                            string levatype = leavetype[le];
                                                            if (mor.Trim().ToLower() == levatype)
                                                            {
                                                                clleave[le] = clleave[le] + 0.5;
                                                            }
                                                            if (eve.Trim().ToLower() == levatype)
                                                            {
                                                                clleave[le] = clleave[le] + 0.5;

                                                            }
                                                        }
                                                        string[] lave = new string[15];
                                                    }
                                                }
                                            }
                                        }
                                        for (int le = 1; le <= dsleave.Tables[0].Rows.Count; le++)
                                        {
                                            if (leavetype[le] != "LA")
                                            {
                                                if (clleave[le] != 0)
                                                {
                                                    stl = stl + leavetype[le].ToUpper() + "-" + clleave[le] + ", ";
                                                }
                                            }
                                        }
                                        if (stl != "")
                                        {
                                            stl = stl.Substring(0, stl.Length - 2);
                                        }
                                    }
                                    Array.Clear(clleave, 0, clleave.Length);
                                    //=====================================Leave Details End====================================





                                }
                                coltop = coltop + 60;
                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Staff Code");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, staffcode);
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Department                    :");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, deptname);
                                mypdfpage.Add(ptsp);

                                coltop = coltop + rowspace;
                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "Staff Name");
                                mypdfpage.Add(ptsp);
                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall1, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, staffname);
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Designation                    :");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, designation);
                                mypdfpage.Add(ptsp);

                                coltop = coltop + rowspace;
                                //if (cblsearch.Items[33].Selected == true) // added by sridhar 16 sep 2014
                                //{
                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "EPF A/C No");
                                mypdfpage.Add(ptsp);



                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, pfno);
                                mypdfpage.Add(ptsp);
                                //}

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Bank A/C No                  :");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall1, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, bankno);
                                mypdfpage.Add(ptsp);
                                string dob1 = "select convert(nvarchar(15),sa.date_of_birth,103) as dob from staff_appl_master sa,staffmaster sm where sa.appl_no=sm.appl_no and sm.staff_code='" + staffcode + "'";
                                DataSet sk1 = new DataSet();
                                DAccess2 ddsd = new DAccess2();
                                sk1 = ddsd.select_method_wo_parameter(dob1, "Text");
                                string dob2 = sk1.Tables[0].Rows[0]["dob"].ToString();
                                coltop = coltop + rowspace;


                                string[] group_semi5 = lopdates.Split(',');

                                string doj8 = "";

                                for (int i = 0; i <= group_semi5.GetUpperBound(0); i++)
                                {
                                    string group_semi4 = group_semi5[i].ToString();
                                    string[] splitgroup_semi4 = group_semi4.Split('/');

                                    if (doj8 == "")
                                    {
                                        doj8 = splitgroup_semi4[0].ToString();
                                    }
                                    else
                                    {
                                        doj8 = doj8 + "," + splitgroup_semi4[0].ToString();
                                    }
                                }

                                if (cblsearch.Items[7].Selected == true)
                                {
                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "LOP DATES");
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                      new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                                    mypdfpage.Add(ptsp);

                                    if (lopdates != "")
                                    {
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, doj8);
                                    }
                                    else
                                    {
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "-");
                                    }
                                }
                                mypdfpage.Add(ptsp);

                                coltop = coltop + 20;

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "D.O.B");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, dob2);
                                mypdfpage.Add(ptsp);





                                string doj = "select join_date  from staffmaster where staff_code = '" + staffcode + "'";
                                DataSet sk2 = new DataSet();
                                DAccess2 ddsd2 = new DAccess2();

                                sk2 = ddsd2.select_method_wo_parameter(doj, "Text");
                                string doj2 = sk2.Tables[0].Rows[0]["join_date"].ToString();
                                string[] group_semi = doj2.Split('-');
                                string[] group_semi2 = doj2.Split(' ');
                                doj2 = group_semi2[0].ToString();
                                string[] group_semi3 = doj2.Split('/');
                                string doj3 = group_semi3[0].ToString();
                                string doj4 = group_semi3[1].ToString();
                                string doj5 = group_semi3[2].ToString();
                                string dojdate = doj4 + "/" + doj3 + "/" + doj5;
                                if (cbdateofjoin.Checked == true)
                                {
                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                 new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Date Of Join                   :");
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, dojdate);
                                    mypdfpage.Add(ptsp);
                                }

                                if (cblsearch.Items[34].Selected == true)
                                {
                                    if (payscale != "")// added by sridhar 17 sep 2014
                                    {
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Pay Scale                      :");
                                        mypdfpage.Add(ptsp);

                                        ptsp = new PdfTextArea(Fontsmall1, System.Drawing.Color.Black,
                                                                           new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, payscale);
                                        mypdfpage.Add(ptsp);

                                    }
                                }
                                coltop = coltop + rowspace;

                                if (panno != "")
                                {
                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                 new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "PAN No                          :");
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall1, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, panno);
                                    mypdfpage.Add(ptsp);
                                }

                                if (chkdays.Checked == true)
                                {
                                    coltop = coltop + rowspace;
                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "No.of Days Present");
                                    mypdfpage.Add(ptsp);
                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                        new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, totalpreset.ToString());
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "No.of Working Days       :");
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, workdays.ToString());
                                    mypdfpage.Add(ptsp);

                                    coltop = coltop + rowspace;
                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "No.of Leave Taken");
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                 new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                        new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, stl);
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "No.of Days Absent/Lop  :");
                                    mypdfpage.Add(ptsp);

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, tot_lop.ToString() + "/" + lop.ToString());
                                    mypdfpage.Add(ptsp);
                                }

                                coltop = coltop + rowspace + rowspace;
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "Earnings");
                                mypdfpage.Add(ptsp);

                                if (chkactual.Checked == true)
                                {
                                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 190, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "Actual Amount");
                                    mypdfpage.Add(ptsp);
                                }

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, 310, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Amount");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Deductions");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 760, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Amount");
                                mypdfpage.Add(ptsp);
                                int dedu = coltop + 10;
                                int allo = coltop + 10;
                                if (dvpay.Count > 0)
                                {
                                    double payband = 0;
                                    double gradepay = 0;
                                    double basic_pay3 = 0;
                                    string allowance3 = "";
                                    string deduction3 = "";
                                    double lopd = 0;
                                    double bassicd = 0;
                                    double DblAllowLOP = 0;
                                    double DblAllowLOP1 = 0;
                                    double G_pay = 0;



                                    payband = Convert.ToDouble(dvpay[0]["pay_band"].ToString());
                                    gradepay = Convert.ToDouble(dvpay[0]["grade_pay"].ToString());
                                    basic_pay3 = Convert.ToDouble(dvpay[0]["bsalary"].ToString());
                                    G_pay = Convert.ToDouble(dvpay[0]["G_Pay"].ToString());
                                    Double actbasic = Convert.ToDouble(dvpay[0]["basic_alone"].ToString());
                                    lop = Convert.ToDouble(dvpay[0]["lop"].ToString());
                                    if (lop != 0)
                                    {
                                        lopd = Convert.ToDouble(lop);
                                    }
                                    else
                                    {
                                        lopd = 0;
                                    }
                                    bassicd = Convert.ToDouble(basic_pay3);
                                    // bassicd = bassicd - lopd;
                                    if (cbincludeBasicpay.Checked == false) // added by jairam 08-07-2015
                                    {
                                        if (bassicd != 0)
                                        {
                                            allo = allo + rowspace;
                                            ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                        new PdfArea(mydocument, left1, allo, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Basic Pay");
                                            mypdfpage.Add(ptsp);

                                            if (chkactual.Checked == true)
                                            {
                                                actbasic = Math.Round(actbasic, 2, MidpointRounding.AwayFromZero);
                                                string alowamount1 = actbasic.ToString();
                                                //if (!alowamount1.Contains('.'))
                                                //{
                                                //    alowamount1 = alowamount1 + ".00";
                                                //}
                                                //else
                                                //{
                                                //    string[] sp = alowamount1.Split('.');
                                                //    if (sp[1].Length < 2)
                                                //    {
                                                //        alowamount1 = alowamount1 + "0";
                                                //    }
                                                //}
                                                alowamount1 = String.Format("{0:0.00}", alowamount1);
                                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                        new PdfArea(mydocument, 230, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, actbasic.ToString());
                                                mypdfpage.Add(ptsp);
                                            }



                                            bassicd = Math.Round(bassicd, 2, MidpointRounding.AwayFromZero);
                                            string alowamount = bassicd.ToString();
                                            //if (!alowamount.Contains('.'))
                                            //{
                                            //    alowamount = alowamount + ".00";
                                            //}
                                            //else
                                            //{
                                            //    string[] sp = alowamount.Split('.');
                                            //    if (sp[1].Length < 2)
                                            //    {
                                            //        alowamount = alowamount + "0";
                                            //    }
                                            //}
                                            alowamount = String.Format("{0:0.00}", alowamount);
                                            ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                       new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                                            mypdfpage.Add(ptsp);
                                        }
                                    }
                                    if (gradepay != 0)
                                    {
                                        allo = allo + rowspace;
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left1, allo, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Grade Pay");
                                        mypdfpage.Add(ptsp);
                                        gradepay = Math.Round(gradepay, 2, MidpointRounding.AwayFromZero);
                                        string alowamount = gradepay.ToString();
                                        //if (!alowamount.Contains('.'))
                                        //{
                                        //    alowamount = alowamount + ".00";
                                        //}
                                        //else
                                        //{
                                        //    string[] sp = alowamount.Split('.');
                                        //    if (sp[1].Length < 2)
                                        //    {
                                        //        alowamount = alowamount + "0";
                                        //    }
                                        //}
                                        alowamount = String.Format("{0:0.00}", alowamount);
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                                        mypdfpage.Add(ptsp);
                                    }
                                    if (payband != 0)
                                    {
                                        allo = allo + rowspace;
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left1, allo, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Pay Band");
                                        mypdfpage.Add(ptsp);
                                        payband = Math.Round(payband, 2, MidpointRounding.AwayFromZero);
                                        string alowamount = payband.ToString();
                                        //if (!alowamount.Contains('.'))
                                        //{
                                        //    alowamount = alowamount + ".00";
                                        //}
                                        //else
                                        //{
                                        //    string[] sp = alowamount.Split('.');
                                        //    if (sp[1].Length < 2)
                                        //    {
                                        //        alowamount = alowamount + "0";
                                        //    }
                                        //}
                                        alowamount = String.Format("{0:0.00}", alowamount);
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                                        mypdfpage.Add(ptsp);
                                    }


                                    //******************************Added by srinath 12/1/2015*****************************
                                    Dictionary<string, string> dicactaloo = new Dictionary<string, string>();
                                    dspay.Tables[0].DefaultView.RowFilter = "staff_code='" + staffcode + "'";
                                    DataView dvallow = dspay.Tables[0].DefaultView;
                                    if (dvallow.Count > 0)
                                    {
                                        string actall = dvallow[0]["actallowance"].ToString();
                                        string[] spactalo = actall.Split('\\');
                                        for (int i = 0; i < spactalo.GetUpperBound(0); i++)
                                        {
                                            string getactal = spactalo[i];
                                            if (getactal.Trim() != "" && getactal != null)
                                            {
                                                string[] actallspv = getactal.Split(';');
                                                if (actallspv.GetUpperBound(0) >= 8)
                                                {
                                                    if (actallspv[1].ToString().Trim().ToLower() == "percent")
                                                    {
                                                        Double getrealsalry = 0;
                                                        Double getperce = 0;
                                                        string getval = "0";
                                                        if (actallspv[6].ToString().Trim() == "1")
                                                        {
                                                            if (actbasic > 0)
                                                            {
                                                                getrealsalry = Convert.ToDouble(actbasic);
                                                            }
                                                            if (actallspv[2].ToString().Trim() != "" && actallspv[2].ToString() != null)
                                                            {
                                                                getperce = Convert.ToDouble(actallspv[2].ToString());
                                                            }
                                                            Double val = getrealsalry / 100 * getperce;
                                                            val = Math.Round(val, 0, MidpointRounding.AwayFromZero);
                                                            getval = val.ToString();
                                                        }
                                                        else if (actallspv[8].ToString().Trim() == "1")
                                                        {
                                                            if (actbasic > 0)
                                                            {
                                                                getrealsalry = Convert.ToDouble(actbasic);
                                                            }
                                                            if (gradepay > 0)
                                                            {
                                                                getrealsalry = getrealsalry + Convert.ToDouble(gradepay);
                                                            }

                                                            if (actallspv[2].ToString().Trim() != "" && actallspv[2].ToString() != null)
                                                            {
                                                                getperce = Convert.ToDouble(actallspv[2].ToString());
                                                            }
                                                            Double val = getrealsalry / 100 * getperce;
                                                            val = Math.Round(val, 0, MidpointRounding.AwayFromZero);
                                                            getval = val.ToString();
                                                        }
                                                        if (!dicactaloo.ContainsKey(actallspv[0].ToString()))
                                                        {
                                                            dicactaloo.Add(actallspv[0].ToString().Trim().ToLower(), getval);
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    //*******************END********************************************************************

                                    string[] spallow = allowmaster.Split(';');
                                    for (int alo = 0; alo <= spallow.GetUpperBound(0); alo++)
                                    {
                                        string[] splalot = spallow[alo].Split('\\');
                                        if (splalot.GetUpperBound(0) >= 2)
                                        {
                                            string orallo = splalot[0].ToString();

                                            int r = 0;
                                            allowance3 = dvpay[0]["allowances"].ToString();
                                            int c = 0;
                                            string[] allowanmce_arr1;
                                            string alowancesplit;
                                            int exatval = 0;
                                            allowanmce_arr1 = allowance3.Split('\\');
                                            for (int i = c; i < allowanmce_arr1.GetUpperBound(0); i++)   // Modify By jairam 06-12-2014 
                                            {
                                                exatval = allowanmce_arr1.GetUpperBound(0);
                                                alowancesplit = allowanmce_arr1[i];
                                                string[] allowanceda = alowancesplit.Split(';');
                                                if (allowanceda.GetUpperBound(0) >= 3)
                                                {
                                                    string da = allowanceda[0];
                                                    string mode = Convert.ToString(allowanceda[1]);
                                                    string[] spval = allowanceda[2].Split('-');
                                                    string daac = spval[0];
                                                    if (daac.Trim() == "" || daac == null)
                                                    {
                                                        daac = "0";
                                                    }
                                                    string da3 = allowanceda[3];
                                                    double ds3 = Convert.ToDouble(da3);
                                                    ds3 = Math.Round(ds3, 2, MidpointRounding.AwayFromZero);
                                                    string DblAllowActVal = daac;
                                                    string DblAllowVal = allowanceda[3];
                                                    DblAllowLOP = (Convert.ToDouble(DblAllowActVal) - Convert.ToDouble(DblAllowVal));
                                                    DblAllowLOP = Math.Round(DblAllowLOP);
                                                    DblAllowLOP1 = DblAllowLOP1 + DblAllowLOP;

                                                    if (orallo.Trim().ToLower() == da.Trim().ToLower())
                                                    {
                                                        if (ds3 != 0)
                                                        {
                                                            if (spll_alll_tag_arry.GetUpperBound(0) >= r)
                                                            {
                                                                if (spll_alll_tag_arry[r] != da)
                                                                {
                                                                    allo = allo + rowspace;
                                                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                                new PdfArea(mydocument, left1, allo, 200, 50), System.Drawing.ContentAlignment.MiddleLeft, splalot[2].ToString());
                                                                    mypdfpage.Add(ptsp);
                                                                    if (chkactual.Checked == true)
                                                                    {
                                                                        if (mode.Trim().ToUpper() == "AMOUNT")
                                                                        {
                                                                            ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                                           new PdfArea(mydocument, 230, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, daac);
                                                                            mypdfpage.Add(ptsp);
                                                                        }
                                                                        else
                                                                        {
                                                                            if (dicactaloo.ContainsKey(da.ToString().Trim().ToLower()))
                                                                            {
                                                                                daac = dicactaloo[da.ToString().Trim().ToLower()];
                                                                            }
                                                                            ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                                      new PdfArea(mydocument, 230, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, daac);
                                                                            mypdfpage.Add(ptsp);
                                                                        }
                                                                    }
                                                                    string alowamount = ds3.ToString();
                                                                    //if (!alowamount.Contains('.'))
                                                                    //{
                                                                    //    alowamount = alowamount + ".00";
                                                                    //}
                                                                    //else
                                                                    //{
                                                                    //    string[] sp = alowamount.Split('.');
                                                                    //    if (sp[1].Length < 2)
                                                                    //    {
                                                                    //        alowamount = alowamount + "0";
                                                                    //    }
                                                                    //}
                                                                    alowamount = String.Format("{0:0.00}", alowamount);
                                                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                               new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                                                                    mypdfpage.Add(ptsp);
                                                                }
                                                                else
                                                                {

                                                                    if (splallow.Contains(da))
                                                                    {
                                                                        splallow[da] = da3.ToString();
                                                                    }
                                                                    //else
                                                                    //{
                                                                    //    splcount++;
                                                                    //    r++;
                                                                    //    splallow.Add(da, da3);
                                                                    //}
                                                                }
                                                            }
                                                        }
                                                        i = allowanmce_arr1.GetUpperBound(0);
                                                    }
                                                }
                                            }
                                        }
                                    }

                                    foreach (var kvp in dict)
                                    {
                                        string setval = kvp.Key.ToString();
                                        string setval1 = kvp.Value.ToString();
                                        deduction3 = dvpay[0]["deductions"].ToString();
                                        string[] deduction_arr1;
                                        string deductionsplit1;
                                        deduction_arr1 = deduction3.Split('\\');
                                        for (int sp = 0; sp < deduction_arr1.GetUpperBound(0); sp++)
                                        {
                                            deductionsplit1 = deduction_arr1[sp];
                                            string[] deductionda;
                                            deductionda = deductionsplit1.Split(';');
                                            if (deductionda.GetUpperBound(0) >= 3)
                                            {
                                                string de = deductionda[0];
                                                string de3 = deductionda[3];
                                                double de3d = Convert.ToDouble(de3);
                                                de3d = Math.Round(de3d, 2, MidpointRounding.AwayFromZero);
                                                if (setval == de)
                                                {
                                                    if (de3d != 0)
                                                    {
                                                        dedu = dedu + rowspace;
                                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                    new PdfArea(mydocument, left3, dedu, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, setval.ToString());
                                                        mypdfpage.Add(ptsp);
                                                        totdection = totdection + de3d;
                                                        string deamount = de3d.ToString();
                                                        //if (!deamount.Contains('.'))
                                                        //{
                                                        //    deamount = deamount + ".00";
                                                        //}
                                                        //else
                                                        //{
                                                        //    string[] spd = deamount.Split('.');
                                                        //    if (spd[1].Length < 2)
                                                        //    {
                                                        //        deamount = deamount + "0";
                                                        //    }
                                                        //}
                                                        deamount = String.Format("{0:0.00}", deamount);
                                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                   new PdfArea(mydocument, 770, dedu, 50, 50), System.Drawing.ContentAlignment.MiddleRight, deamount);
                                                        mypdfpage.Add(ptsp);
                                                    }

                                                    if (lop != 0)
                                                        lop = lop + DblAllowLOP1;
                                                }
                                            }
                                        }
                                    }
                                }

                                if (allo > dedu)
                                {
                                    if (coltop < allo)
                                    {
                                        coltop = allo;
                                    }
                                }
                                else
                                {
                                    if (coltop < dedu)
                                    {
                                        coltop = dedu;  // Adeeeeeeeeeee
                                    }
                                }


                                if (cblsearch.Items[11].Selected == true)
                                {
                                    if (lop != 0)
                                    {

                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                       new PdfArea(mydocument, left3, coltop + 15, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "LOP Amount");
                                        mypdfpage.Add(ptsp);
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                       new PdfArea(mydocument, 770, coltop + 15, 50, 50), System.Drawing.ContentAlignment.MiddleRight, Convert.ToString(lop11));

                                        mypdfpage.Add(ptsp);
                                        coltop = coltop + 20;
                                    }

                                }


                                coltop = coltop + rowspace + rowspace;
                                Double nesal3 = Convert.ToDouble(dvpay[0]["netsal"].ToString());
                                nesal3 = Math.Round(nesal3, 2, MidpointRounding.AwayFromZero);

                                Double totall = Convert.ToDouble(dvpay[0]["NetAddAct"].ToString());
                                totall = Math.Round(totall, 2, MidpointRounding.AwayFromZero);

                                double netded = Convert.ToDouble(dvpay[0]["netded"].ToString());
                                // netded = netded + lop;
                                netded = Math.Round(netded, 2, MidpointRounding.AwayFromZero);


                                Double lqw = Convert.ToDouble(lopamount);
                                lqw = Math.Round(totall, 2, MidpointRounding.AwayFromZero);


                                string finalamount = totall.ToString();
                                //if (!finalamount.Contains('.'))
                                //{
                                //    finalamount = finalamount + ".00";
                                //}
                                //else
                                //{
                                //    string[] sp = finalamount.Split('.');
                                //    if (sp[1].Length < 2)
                                //    {
                                //        finalamount = finalamount + "0";
                                //    }
                                //}
                                finalamount = String.Format("{0:0.00}", finalamount);
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop, 100, 50), System.Drawing.ContentAlignment.MiddleLeft, "Gross Total");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, 320, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleRight, finalamount);
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Total Deduction");
                                mypdfpage.Add(ptsp);

                                Double lopamt = Convert.ToDouble(lopamount);

                                lopamt = Math.Round(lopamt, 2, MidpointRounding.AwayFromZero);
                                // int dedamount = Convert.ToInt32(lopamt) + Convert.ToInt32(netded);
                                int dedamount = Convert.ToInt32(netded);//delsi1304

                                //if (!finalamount.Contains('.'))
                                //{
                                //    finalamount = finalamount + ".00";
                                //}
                                //else
                                //{
                                //    string[] sp = finalamount.Split('.');
                                //    if (sp[1].Length < 2)
                                //    {
                                //        finalamount = finalamount + "0";
                                //    }
                                //}
                                finalamount = String.Format("{0:0.00}", finalamount);


                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 770, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleRight, dedamount.ToString());
                                mypdfpage.Add(ptsp);

                                coltop = coltop + rowspace + rowspace;
                                //finalamount = nesal3.ToString();

                                finalamount = String.Format("{0:0.00}", finalamount);
                                int totnet = 0;
                                totnet = Convert.ToInt32(finalamount) - dedamount;
                                if (cbrupesinwords.Checked == true)
                                {
                                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                              new PdfArea(mydocument, left1, coltop, 500, 50), System.Drawing.ContentAlignment.MiddleLeft, "Net Pay : ");
                                    mypdfpage.Add(ptsp);
                                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                      new PdfArea(mydocument, 50, coltop, 150, 50), System.Drawing.ContentAlignment.MiddleRight, "Rs . " + totnet.ToString());
                                    mypdfpage.Add(ptsp);

                                    string word = ConvertNumbertoWords(Convert.ToInt32(totnet)); // added by jairam 01-12-2014

                                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                     new PdfArea(mydocument, 150, coltop, 650, 50), System.Drawing.ContentAlignment.MiddleRight, " (Rupees " + word + " Only)");
                                    mypdfpage.Add(ptsp);
                                }
                                else
                                {

                                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                              new PdfArea(mydocument, left3, coltop, 500, 50), System.Drawing.ContentAlignment.MiddleLeft, "Net Pay : ");
                                    mypdfpage.Add(ptsp);
                                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                      new PdfArea(mydocument, 670, coltop, 150, 50), System.Drawing.ContentAlignment.MiddleRight, "Rs . " + totnet.ToString());
                                    mypdfpage.Add(ptsp);
                                }

                                //if (cbAuthor.Checked == true)
                                //{
                                //    if (txt_author.Text.Trim() != "")
                                //    {

                                //        ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                //                                          new PdfArea(mydocument, left3 + 130, coltop + 110, 250, 50), System.Drawing.ContentAlignment.MiddleRight, txt_author.Text.ToString());
                                //        mypdfpage.Add(ptsp);
                                //    }
                                //}

                                if (cbAuthor.Checked == true)
                                {
                                    if (txt_author.Text.Trim() != "")
                                    {

                                        ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                          new PdfArea(mydocument, left3 + 130, coltop + 110, 250, 50), System.Drawing.ContentAlignment.MiddleRight, txt_author.Text.ToString());
                                        mypdfpage.Add(ptsp);
                                    }
                                }


                                if (rec % 2 != 0)
                                {
                                    PdfArea tete = new PdfArea(mydocument, 10, starttop, 830, coltop + 30);
                                    PdfRectangle pr1 = new PdfRectangle(mydocument, tete, Color.Black);
                                    mypdfpage.Add(pr1);
                                    if (totlastaff <= rec)
                                    {
                                        mypdfpage.SaveToDocument();
                                    }
                                }
                                else
                                {
                                    PdfArea tete = new PdfArea(mydocument, 10, starttop, 830, coltop - gettop + 50);
                                    PdfRectangle pr1 = new PdfRectangle(mydocument, tete, Color.Black);
                                    mypdfpage.Add(pr1);
                                    mypdfpage.SaveToDocument();
                                }

                                gettop = coltop + 100;
                            }
                        }
                    }
                }
            }

            //*****************End****************************//
            if (getvalflag == true)
            {
                string appPath = HttpContext.Current.Server.MapPath("~");
                if (appPath != "")
                {
                    string szPath = appPath + "/Report/";
                    string szFile = DateTime.Now.ToString("ddMMyyyyhhmmsstt") + "PaySlip.pdf";
                    mydocument.SaveToFile(szPath + szFile);
                    Response.ClearHeaders();
                    Response.AddHeader("Content-Disposition", "attachment; filename=" + szFile);
                    Response.ContentType = "application/pdf";
                    Response.WriteFile(szPath + szFile);
                }
            }
            else
            {
                ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('Please Select Staff and then Proceed')", true);
            }
        }
        catch (Exception ex)
        {
            lblnorec.Visible = true;
            lblnorec.Text = ex.ToString();
        }
    }
    //protected void fpsalary_OnButtonCommand(object sender, FarPoint.Web.Spread.SpreadCommandEventArgs e)
    //{
    //    try
    //    {
    //        string activerow = fpsalary.ActiveSheetView.ActiveRow.ToString();
    //        string activecol = fpsalary.ActiveSheetView.ActiveColumn.ToString();
    //        if (activerow == "0" && activecol == "1")
    //        {
    //            int val = 0;
    //            string getval = e.EditValues[1].ToString();
    //            if (getval.Trim().ToLower() == "true")
    //            {
    //                val = 1;
    //            }
    //            for (int i = 1; i < fpsalary.Sheets[0].RowCount - 1; i++)
    //            {
    //                fpsalary.Sheets[0].Cells[i, 1].Value = val;
    //            }
    //        }
    //    }
    //    catch (Exception ex)
    //    {
    //    }
    //}
    protected void fpsalary_UpdateCommand(object sender, FarPoint.Web.Spread.SpreadCommandEventArgs e)
    {
        try
        {
            string activerow = fpsalary.ActiveSheetView.ActiveRow.ToString();
            string activecol = fpsalary.ActiveSheetView.ActiveColumn.ToString();
            if (activerow == "0" && activecol == "1")
            {
                int isval = 0;
                isval = Convert.ToInt32(fpsalary.Sheets[0].Cells[0, 1].Value);
                int val = 0;
                //string seltext = fpsalary.Sheets[0].Cells[0, 0].Value.ToString();
                //string getval = e.EditValues[1].ToString();
                // if (getval.Trim().ToLower() == "true")
                if (isval == 1)
                {
                    val = 1;
                }
                for (int i = 1; i < fpsalary.Sheets[0].RowCount - 1; i++)
                {
                    fpsalary.Sheets[0].Cells[i, 1].Value = val;
                }
            }
        }
        catch
        {
        }
    }
    //protected void fpsalary_UpdateCommand(object sender, FarPoint.Web.Spread.SpreadCommandEventArgs e)
    //{
    //    try
    //    {
    //        string activerow = fpsalary.ActiveSheetView.ActiveRow.ToString();
    //        string activecol = fpsalary.ActiveSheetView.ActiveColumn.ToString();
    //        if (activerow == "0" && activecol == "1")
    //        {
    //            int val = 0;
    //            string getval = e.EditValues[1].ToString();
    //            if (getval.Trim().ToLower() == "true")
    //            {
    //                val = 1;
    //            }
    //            FarPoint.Web.Spread.CheckBoxCellType chk = new FarPoint.Web.Spread.CheckBoxCellType();
    //            for (int i = 1; i < fpsalary.Sheets[0].RowCount; i++)
    //            {
    //                string text = fpsalary.Sheets[0].Cells[i, 2].Text.ToString();
    //                if (text != "" && text != null)
    //                {
    //                    fpsalary.Sheets[0].Cells[i, 1].Value = val;
    //                }
    //            }
    //        }
    //    }
    //    catch
    //    {
    //    }
    //}
    public void loadindstaffpayslip(string staffcode)
    {
        try
        {
            DataView dvdetails = new DataView();
            DataView dvholi = new DataView();
            DataView dvstaffattendance = new DataView();
            DataView dvstaffdet = new DataView();
            DataView dvmonthlpayt = new DataView();
            DataView dvpay = new DataView();
            DataView dvdate = new DataView();
            DateTime dtTest = new DateTime();
            string collname = "";
            string address1 = "";
            string address2 = "";
            string address3 = "";
            string pincode = "";
            string address = "";
            string designation = "";
            string deptname = "";
            string staffname = "";
            string bankno = "";
            string pfno = "";
            string payscal = "";

            Font Fontbold = new Font("Book Antiqua", 16, FontStyle.Bold);
            Font Fontbold1 = new Font("Book Antiqua", 20, FontStyle.Bold);
            Font Fontsmall = new Font("Book Antiqua", 13, FontStyle.Regular);
            Font Fontsmall1 = new Font("Book Antiqua", 13, FontStyle.Bold);

            Gios.Pdf.PdfDocument mydocument = new Gios.Pdf.PdfDocument(PdfDocumentFormat.InCentimeters(30, 40));

            dssmssalary.Tables[0].DefaultView.RowFilter = "college_code='" + Session["collegecode"].ToString() + "'";
            dvdetails = dssmssalary.Tables[0].DefaultView;
            if (dvdetails.Count > 0)
            {
                collname = dvdetails[0]["collname"].ToString();
                address1 = dvdetails[0]["address1"].ToString();
                address2 = dvdetails[0]["address2"].ToString();
                address3 = dvdetails[0]["address3"].ToString();
                pincode = dvdetails[0]["pincode"].ToString();
                //address = address1 + "," + "  " + address2 + "," + "  " + address3 + "," + "  " + pincode;
                if (address1.Trim() != "" && address1 != null)
                {
                    address = address1;
                }
                if (address2.Trim() != "" && address1 != null)
                {
                    if (address != "")
                    {
                        address = address + ',' + address2;
                    }
                    else
                    {
                        address = address2;
                    }
                }
                if (address3.Trim() != "" && address1 != null)
                {
                    if (address != "")
                    {
                        address = address + ',' + address3;
                    }
                    else
                    {
                        address = address3;
                    }
                }
                if (pincode.Trim() != "" && pincode != null)
                {
                    if (address != "")
                    {
                        address = address + '-' + pincode;
                    }
                    else
                    {
                        address = pincode;
                    }
                }
            }

            string date3 = Txtentryfrom.Text.ToString();
            string datefrom3;
            int monthname1;
            string monyear;
            string monthname2 = "";
            int monthnamenum;
            string yearto = "";
            string monyearto = "";
            string[] split = date3.Split(new Char[] { '/' });
            int totlastaff = 0;
            int left1 = 20;
            int left2 = 145;
            int left3 = 423;
            int left4 = 570;
            int left1a = 135;

            datefrom3 = split[1].ToString() + "/" + split[0].ToString() + "/" + split[2].ToString();
            string date4 = Txtentryto.Text.ToString();
            int year3 = Convert.ToInt16(split[2].ToString());
            string[] split1 = date4.Split(new Char[] { '/' });
            string dateto4 = split1[1].ToString() + "/" + split1[0].ToString() + "/" + split1[2].ToString();
            monthname2 = split1[0].ToString();
            monthnamenum = Convert.ToInt32(monthname2.ToString());
            yearto = split1[2].ToString();
            string mnmae = split[1].ToString();
            monthname1 = Convert.ToInt16(mnmae);
            monthname2 = split1[1].ToString();
            monthnamenum = Convert.ToInt16(monthname2);
            string year = split[2].ToString();
            monyear = monthname1.ToString() + "/" + year;
            monyearto = monthnamenum.ToString() + "/" + yearto;

            monyear = Convert.ToString(cblmonth.SelectedValue) + "/" + Convert.ToString(ddlyear2.SelectedValue);
            if (Convert.ToString(cblmonth.SelectedValue).Length == 1)
                dtTest = Convert.ToDateTime(Convert.ToString("0" + cblmonth.SelectedValue) + "/01/" + Convert.ToString(ddlyear2.SelectedValue));
            else
                dtTest = Convert.ToDateTime(Convert.ToString(cblmonth.SelectedValue) + "/01/" + Convert.ToString(ddlyear2.SelectedValue));
            int TestMon = 0;
            int TestYear = 0;
            Int32.TryParse(Convert.ToString(dtTest.AddMonths(1).Month), out TestMon);
            if (TestMon == 1)
                Int32.TryParse(Convert.ToString(dtTest.AddYears(1).Year), out TestYear);
            else
                Int32.TryParse(Convert.ToString(dtTest.Year), out TestYear);
            monyearto = Convert.ToString(TestMon) + "/" + Convert.ToString(TestYear);
            int dayfrm = 0;
            string dayto;
            int daytonum;
            string dayfrom = split[0].ToString();

            string[] leavetype = new string[50];
            dssmssalary.Tables[1].DefaultView.RowFilter = "college_code='" + Session["collegecode"].ToString() + "'";
            dvholi = dssmssalary.Tables[1].DefaultView;
            int lev = 0;
            for (int le = 0; le < dvholi.Count; le++)
            {
                lev++;
                string levatype = dvholi[le]["shortname"].ToString().Trim().ToLower();
                leavetype[lev] = levatype;
            }

            dssmssalary.Tables[2].DefaultView.RowFilter = "PayYear='" + ddlyear2.SelectedValue.ToString() + "' and PayMonth='" + cblmonth.SelectedValue.ToString() + "' and staff_code='" + staffcode + "'";
            //  fdate ='" + datefrom3 + "' and tdate ='" + dateto4 + "'
            dvmonthlpayt = dssmssalary.Tables[2].DefaultView;

            int gettop = 0;
            int rec = 0;
            Gios.Pdf.PdfPage mypdfpage = mydocument.NewPage();

            string getlink = "";
            dssmssalary.Tables[3].DefaultView.RowFilter = "college_code='" + Session["collegecode"].ToString() + "'";
            dvdetails = dssmssalary.Tables[3].DefaultView;
            if (dvdetails.Count > 0)
            {
                getlink = dvdetails[0]["linkvalue"].ToString();
            }

            if (dvmonthlpayt.Count > 0)
            {
                gettop = 15;
                mypdfpage = mydocument.NewPage();
                dssmssalary.Tables[5].DefaultView.RowFilter = "staff_code='" + staffcode + "'";
                dvstaffdet = dssmssalary.Tables[5].DefaultView;

                if (dvstaffdet.Count > 0)
                {
                    designation = dvstaffdet[0]["desig_name"].ToString();
                    deptname = dvstaffdet[0]["dept_name"].ToString();
                    staffname = dvstaffdet[0]["staff_name"].ToString().TrimEnd(' ');
                    bankno = dvstaffdet[0]["bankaccount"].ToString();
                    pfno = dvstaffdet[0]["pfnumber"].ToString();
                    payscal = Convert.ToString(dvstaffdet[0]["payscale"]);//delsi 2707
                    if (pfno.Trim() == "" || pfno == null)
                    {
                        pfno = " - ";
                    }
                    if (bankno.Trim() == "" || bankno == null)
                    {
                        bankno = " - ";
                    }
                }


                Double totdection = 0;
                dssmssalary.Tables[4].DefaultView.RowFilter = " staff_code='" + staffcode + "'";
                dvpay = dssmssalary.Tables[4].DefaultView;
                if (dvmonthlpayt.Count > 0)
                {
                    string noofpresent = "";
                    string presnt = "";
                    string workdays = "";
                    string leavedays = "";
                    noofpresent = dvmonthlpayt[0]["leavedetail"].ToString();
                    string[] presplit = noofpresent.Split(';');
                    presnt = presplit[1].ToString();
                    workdays = presplit[0].ToString();
                    leavedays = presplit[2].ToString();
                    int starttop = gettop;
                    int coltop = gettop;
                    int rowspace = 15;

                    string setyear = dvmonthlpayt[0]["PayYear"].ToString();
                    if (setyear.Trim() == "" || setyear == null)
                    {
                        setyear = yearto;
                    }
                    if (File.Exists(HttpContext.Current.Server.MapPath("~/college/Left_Logo.jpeg")))
                    {
                        PdfImage LogoImage = mydocument.NewImage(HttpContext.Current.Server.MapPath("~/college/Left_Logo.jpeg"));
                        mypdfpage.Add(LogoImage, 25, coltop + 10, 400);
                    }
                    if (File.Exists(HttpContext.Current.Server.MapPath("~/college/Right_Logo.jpeg")))
                    {
                        PdfImage LogoImage = mydocument.NewImage(HttpContext.Current.Server.MapPath("~/college/Right_Logo.jpeg"));
                        mypdfpage.Add(LogoImage, 750, coltop + 10, 400);
                    }

                    PdfTextArea ptc = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                            new PdfArea(mydocument, 0, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleCenter, collname);

                    mypdfpage.Add(ptc);

                    coltop = coltop + rowspace;
                    PdfTextArea pts = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                       new PdfArea(mydocument, 0, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleCenter, address);
                    mypdfpage.Add(pts);

                    coltop = coltop + rowspace;
                    PdfTextArea ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                       new PdfArea(mydocument, 0, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleCenter, "Pay Slip for the month of " + cblmonth.SelectedItem.Text + " " + "  " + setyear + "");
                    mypdfpage.Add(ptsp);
                    string stl = "";
                    Double lop = Convert.ToDouble(dvmonthlpayt[0]["lop"].ToString());
                    string get_pre_lop = dvmonthlpayt[0]["pre_lop"].ToString();
                    string get_cur_lop = dvmonthlpayt[0]["cur_lop"].ToString();
                    double get_pre = 0;
                    double get_cur = 0;
                    double tot_lop = 0;
                    if (get_pre_lop != "")
                    {
                        get_pre = Convert.ToDouble(get_pre_lop);
                    }
                    if (get_cur_lop != "")
                    {
                        get_cur = Convert.ToDouble(get_cur_lop);
                    }
                    tot_lop = get_pre + get_cur;
                    double totalpreset = Convert.ToDouble(workdays) - tot_lop;
                    if (chkdays.Checked == true)
                    {
                        //=====================================Leave Details Start====================================

                        int maxdays = getmaxdays(monthname1, year3);
                        //int l = 0;
                        //int cl = 0;
                        double[] clleave = new double[50];
                        dayfrm = Convert.ToInt32(dayfrom);
                        dayto = split1[0].ToString();
                        daytonum = Convert.ToInt32(dayto);
                        dssmssalary.Tables[4].DefaultView.RowFilter = " mon_year ='" + monyear + "'  and staff_code='" + staffcode + "'";
                        dvstaffattendance = dssmssalary.Tables[4].DefaultView;
                        if (monthname1 == monthnamenum)
                        {
                            for (int day = dayfrm; dayfrm <= daytonum; dayfrm++)
                            {
                                int day5 = 0;
                                day5 = 0 + dayfrm;
                                if (dvholi.Count > 0)
                                {
                                    if (dvstaffattendance.Count > 0)
                                    {
                                        int day6;
                                        string attnda = "";
                                        day6 = 3 + day5;
                                        attnda = dvstaffattendance[0][day6].ToString();
                                        if (attnda != "")
                                        {
                                            string[] split100 = attnda.Split(new char[] { '-' });
                                            string mor = "";
                                            string eve = "";
                                            mor = split100[0].ToString();
                                            eve = split100[1].ToString();
                                            for (int le = 1; le <= dvholi.Count; le++)
                                            {
                                                string levatype = leavetype[le];
                                                if (mor.Trim().ToLower() == levatype)
                                                {
                                                    clleave[le] = clleave[le] + 0.5;
                                                }
                                                if (eve.Trim().ToLower() == levatype)
                                                {
                                                    clleave[le] = clleave[le] + 0.5;
                                                }
                                            }
                                            string[] lave = new string[15];
                                        }
                                    }
                                }
                            }
                            for (int le = 1; le <= dvholi.Count; le++)
                            {
                                if (leavetype[le] != "LA")
                                {
                                    if (clleave[le] != 0)
                                    {
                                        stl = stl + leavetype[le].ToUpper() + "-" + clleave[le] + ", ";
                                    }
                                }
                            }
                            if (stl != "")
                            {
                                stl = stl.Substring(0, stl.Length - 2);
                            }
                            Array.Clear(clleave, 0, clleave.Length);
                        }
                        else
                        {
                            dssmssalary.Tables[4].DefaultView.RowFilter = " mon_year ='" + monyear + "'  and staff_code='" + staffcode + "'";
                            dvstaffattendance = dssmssalary.Tables[4].DefaultView;
                            for (int day = dayfrm; dayfrm <= maxdays; dayfrm++)
                            {
                                int day5 = 0;
                                day5 = 0 + dayfrm;
                                if (dvholi.Count > 0)
                                {
                                    if (dvstaffattendance.Count > 0)
                                    {
                                        int day6;
                                        string attnda = "";
                                        day6 = 3 + day5;
                                        attnda = dvstaffattendance[0][day6].ToString();
                                        if (attnda != "")
                                        {
                                            string[] split100 = attnda.Split(new char[] { '-' });
                                            string mor = "";
                                            string eve = "";
                                            mor = split100[0].ToString();
                                            eve = split100[1].ToString();
                                            for (int le = 1; le <= dvholi.Count; le++)
                                            {
                                                string levatype = leavetype[le];
                                                if (mor.Trim().ToLower() == levatype)
                                                {
                                                    clleave[le] = clleave[le] + 0.5;
                                                }
                                                if (eve.Trim().ToLower() == levatype)
                                                {
                                                    clleave[le] = clleave[le] + 0.5;

                                                }
                                            }
                                            string[] lave = new string[15];
                                        }
                                    }
                                }
                            }
                            for (int le = 1; le <= dvholi.Count; le++)
                            {
                                if (leavetype[le] != "LA")
                                {
                                    if (clleave[le] != 0)
                                    {
                                        stl = stl + leavetype[le].ToUpper() + "-" + clleave[le] + ", ";
                                    }
                                }
                            }
                            dssmssalary.Tables[4].DefaultView.RowFilter = " mon_year='" + monyearto + "' and staff_code='" + staffcode + "'";
                            dvstaffattendance = dssmssalary.Tables[4].DefaultView;
                            for (int day = 1; day <= daytonum; day++)
                            {
                                int day5 = 0;
                                day5 = 0 + dayfrm;
                                if (dvholi.Count > 0)
                                {
                                    if (dvstaffattendance.Count > 0)
                                    {
                                        int day6;
                                        string attnda = "";
                                        day6 = 3 + day5;
                                        attnda = dvstaffattendance[0][day6].ToString();
                                        if (attnda != "")
                                        {
                                            string[] split100 = attnda.Split(new char[] { '-' });
                                            string mor = "";
                                            string eve = "";
                                            mor = split100[0].ToString();
                                            eve = split100[1].ToString();
                                            for (int le = 1; le <= dvholi.Count; le++)
                                            {
                                                string levatype = leavetype[le];
                                                if (mor.Trim().ToLower() == levatype)
                                                {
                                                    clleave[le] = clleave[le] + 0.5;
                                                }
                                                if (eve.Trim().ToLower() == levatype)
                                                {
                                                    clleave[le] = clleave[le] + 0.5;

                                                }
                                            }
                                            string[] lave = new string[15];
                                        }
                                    }
                                }
                            }
                            for (int le = 1; le <= dvholi.Count; le++)
                            {
                                if (leavetype[le] != "LA")
                                {
                                    if (clleave[le] != 0)
                                    {
                                        stl = stl + leavetype[le].ToUpper() + "-" + clleave[le] + ", ";
                                    }
                                }
                            }
                            if (stl != "")
                            {
                                stl = stl.Substring(0, stl.Length - 2);
                            }
                        }
                        Array.Clear(clleave, 0, clleave.Length);
                        //=====================================Leave Details End====================================
                    }

                    coltop = coltop + 60;
                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                       new PdfArea(mydocument, left1, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Staff Code");
                    mypdfpage.Add(ptsp);

                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                    mypdfpage.Add(ptsp);

                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                       new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, staffcode);
                    mypdfpage.Add(ptsp);

                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                       new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Department                    :");
                    mypdfpage.Add(ptsp);

                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                       new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, deptname);
                    mypdfpage.Add(ptsp);

                    coltop = coltop + rowspace;
                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                       new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "Staff Name");
                    mypdfpage.Add(ptsp);

                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                    mypdfpage.Add(ptsp);

                    ptsp = new PdfTextArea(Fontsmall1, System.Drawing.Color.Black,
                                                        new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, staffname);
                    mypdfpage.Add(ptsp);

                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                       new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Designation                    :");
                    mypdfpage.Add(ptsp);

                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                       new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, designation);
                    mypdfpage.Add(ptsp);

                    coltop = coltop + rowspace;
                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                       new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "PF A/C No");
                    mypdfpage.Add(ptsp);

                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                    mypdfpage.Add(ptsp);

                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                        new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, pfno);
                    mypdfpage.Add(ptsp);

                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                       new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Bank A/C No                  :");
                    mypdfpage.Add(ptsp);

                    ptsp = new PdfTextArea(Fontsmall1, System.Drawing.Color.Black,
                                                       new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, bankno);
                    mypdfpage.Add(ptsp);

                    coltop = coltop + rowspace;//delsi 2707

                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                     new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Pay Scale                  :");
                    mypdfpage.Add(ptsp);

                    ptsp = new PdfTextArea(Fontsmall1, System.Drawing.Color.Black,
                                                       new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, payscal);
                    mypdfpage.Add(ptsp);//delsi 2707



                    coltop = coltop + rowspace;
                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                       new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "D.O.B");
                    mypdfpage.Add(ptsp);

                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydocument, left1a, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleLeft, ":");
                    mypdfpage.Add(ptsp);

                    string dob = "-";
                    dssmssalary.Tables[6].DefaultView.RowFilter = "staff_code='" + staffcode + "'";
                    dvdate = dssmssalary.Tables[6].DefaultView;
                    if (dvdate.Count > 0)
                    {
                        dob = dvdate[0]["dob"].ToString();
                    }

                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                        new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, dob);
                    mypdfpage.Add(ptsp);


                    if (chkdays.Checked == true)
                    {
                        coltop = coltop + rowspace;
                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                           new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "No.of Days Present  :");
                        mypdfpage.Add(ptsp);

                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                            new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, totalpreset.ToString());
                        mypdfpage.Add(ptsp);

                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                           new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "No.of Working Days       :");
                        mypdfpage.Add(ptsp);

                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                           new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, workdays.ToString());
                        mypdfpage.Add(ptsp);

                        coltop = coltop + rowspace;
                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                           new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "No.of Leave Taken   :");
                        mypdfpage.Add(ptsp);

                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                            new PdfArea(mydocument, left2, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, stl);
                        mypdfpage.Add(ptsp);

                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                           new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "No.of Days Absent/Lop  :");
                        mypdfpage.Add(ptsp);

                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                           new PdfArea(mydocument, left4, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, tot_lop.ToString() + "/" + lop.ToString());
                        mypdfpage.Add(ptsp);
                    }
                    coltop = coltop + rowspace + rowspace;
                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                       new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "Earning");
                    mypdfpage.Add(ptsp);

                    if (chkactual.Checked == true)
                    {
                        ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                       new PdfArea(mydocument, 190, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "Actual Amount");
                        mypdfpage.Add(ptsp);
                    }

                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                        new PdfArea(mydocument, 310, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Amount");
                    mypdfpage.Add(ptsp);

                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                       new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Deduction");
                    mypdfpage.Add(ptsp);

                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                       new PdfArea(mydocument, 760, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Amount");
                    mypdfpage.Add(ptsp);
                    int dedu = coltop + 10;
                    int allo = coltop + 10;
                    double payband = 0;
                    double gradepay = 0;
                    double basic_pay3 = 0;
                    string allowance3 = "";
                    string deduction3 = "";
                    double lopd = 0;
                    double bassicd = 0;
                    double DblAllowLOP = 0;
                    double DblAllowLOP1 = 0;

                    payband = Convert.ToDouble(dvmonthlpayt[0]["pay_band"].ToString());
                    gradepay = Convert.ToDouble(dvmonthlpayt[0]["grade_pay"].ToString());
                    basic_pay3 = Convert.ToDouble(dvmonthlpayt[0]["bsalary"].ToString());
                    double actbasic = Convert.ToDouble(dvmonthlpayt[0]["basic_alone"].ToString());
                    lop = Convert.ToDouble(dvmonthlpayt[0]["lop"].ToString());
                    if (lop != 0)
                    {
                        lopd = Convert.ToDouble(lop);
                    }
                    else
                    {
                        lopd = 0;
                    }
                    bassicd = Convert.ToDouble(basic_pay3);
                    //bassicd = bassicd - lopd;
                    if (bassicd != 0)
                    {
                        allo = allo + rowspace;
                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                    new PdfArea(mydocument, left1, allo, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Basic Pay");
                        mypdfpage.Add(ptsp);

                        if (chkactual.Checked == true)
                        {
                            actbasic = Math.Round(actbasic, 2, MidpointRounding.AwayFromZero);
                            string alowamount1 = actbasic.ToString();
                            if (!alowamount1.Contains('.'))
                            {
                                alowamount1 = alowamount1 + ".00";
                            }
                            else
                            {
                                string[] sp = alowamount1.Split('.');
                                if (sp[1].Length < 2)
                                {
                                    alowamount1 = alowamount1 + "0";
                                }
                            }
                            ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                    new PdfArea(mydocument, 230, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, actbasic.ToString());
                            mypdfpage.Add(ptsp);
                        }


                        bassicd = Math.Round(bassicd, 2, MidpointRounding.AwayFromZero);
                        string alowamount = bassicd.ToString();
                        if (!alowamount.Contains('.'))
                        {
                            alowamount = alowamount + ".00";
                        }
                        else
                        {
                            string[] sp = alowamount.Split('.');
                            if (sp[1].Length < 2)
                            {
                                alowamount = alowamount + "0";
                            }
                        }
                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                   new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                        mypdfpage.Add(ptsp);
                    }
                    if (gradepay != 0)
                    {
                        allo = allo + rowspace;
                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                    new PdfArea(mydocument, left1, allo, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Grade Pay");
                        mypdfpage.Add(ptsp);
                        gradepay = Math.Round(gradepay, 2, MidpointRounding.AwayFromZero);
                        string alowamount = gradepay.ToString();
                        if (!alowamount.Contains('.'))
                        {
                            alowamount = alowamount + ".00";
                        }
                        else
                        {
                            string[] sp = alowamount.Split('.');
                            if (sp[1].Length < 2)
                            {
                                alowamount = alowamount + "0";
                            }
                        }
                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                   new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                        mypdfpage.Add(ptsp);
                    }
                    if (payband != 0)
                    {
                        allo = allo + rowspace;
                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                    new PdfArea(mydocument, left1, allo, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Pay Band");
                        mypdfpage.Add(ptsp);
                        payband = Math.Round(payband, 2, MidpointRounding.AwayFromZero);
                        string alowamount = payband.ToString();
                        if (!alowamount.Contains('.'))
                        {
                            alowamount = alowamount + ".00";
                        }
                        else
                        {
                            string[] sp = alowamount.Split('.');
                            if (sp[1].Length < 2)
                            {
                                alowamount = alowamount + "0";
                            }
                        }
                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                   new PdfArea(mydocument, 310, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                        mypdfpage.Add(ptsp);
                    }

                    //******************************Added by srinath 12/1/2015*****************************
                    Dictionary<string, string> dicactaloo = new Dictionary<string, string>();
                    dssmssalary.Tables[5].DefaultView.RowFilter = "staff_code='" + staffcode + "'";
                    DataView dvallow = dssmssalary.Tables[5].DefaultView;
                    if (dvallow.Count > 0)
                    {
                        string actall = dvallow[0]["actallowance"].ToString();
                        string[] spactalo = actall.Split('\\');
                        for (int i = 0; i < spactalo.GetUpperBound(0); i++)
                        {
                            string getactal = spactalo[i];
                            if (getactal.Trim() != "" && getactal != null)
                            {
                                string[] actallspv = getactal.Split(';');
                                if (actallspv.GetUpperBound(0) >= 8)
                                {
                                    if (actallspv[1].ToString().Trim().ToLower() == "percent")
                                    {
                                        Double getrealsalry = 0;
                                        Double getperce = 0;
                                        string getval = "0";
                                        if (actallspv[6].ToString().Trim() == "1")
                                        {
                                            if (actbasic > 0)
                                            {
                                                getrealsalry = Convert.ToDouble(actbasic);
                                            }
                                            if (actallspv[2].ToString().Trim() != "" && actallspv[2].ToString() != null)
                                            {
                                                getperce = Convert.ToDouble(actallspv[2].ToString());
                                            }
                                            Double val = getrealsalry / 100 * getperce;
                                            val = Math.Round(val, 0, MidpointRounding.AwayFromZero);
                                            getval = val.ToString();
                                        }
                                        else if (actallspv[8].ToString().Trim() == "1")
                                        {
                                            if (actbasic > 0)
                                            {
                                                getrealsalry = Convert.ToDouble(actbasic);
                                            }
                                            if (gradepay > 0)
                                            {
                                                getrealsalry = getrealsalry + Convert.ToDouble(gradepay);
                                            }

                                            if (actallspv[2].ToString().Trim() != "" && actallspv[2].ToString() != null)
                                            {
                                                getperce = Convert.ToDouble(actallspv[2].ToString());
                                            }
                                            Double val = getrealsalry / 100 * getperce;
                                            val = Math.Round(val, 0, MidpointRounding.AwayFromZero);
                                            getval = val.ToString();
                                        }
                                        if (!dicactaloo.ContainsKey(actallspv[0].ToString()))
                                        {
                                            dicactaloo.Add(actallspv[0].ToString().Trim().ToLower(), getval);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    //*******************END********************************************************************

                    string[] spallow = alloworder.Split(';');
                    for (int alo = 0; alo <= spallow.GetUpperBound(0); alo++)
                    {
                        string[] splalot = spallow[alo].Split('\\');
                        if (splalot.GetUpperBound(0) >= 2)
                        {
                            string orallo = splalot[0].ToString();
                            string setvalu = splalot[2].ToString();
                            int r = 0;
                            allowance3 = dvmonthlpayt[0]["allowances"].ToString();
                            int c = 0;
                            string[] allowanmce_arr1;
                            string alowancesplit;
                            int exatval = 0;
                            allowanmce_arr1 = allowance3.Split('\\');
                            for (int i = c; i <= allowanmce_arr1.GetUpperBound(0); i++)
                            {
                                exatval = allowanmce_arr1.GetUpperBound(0);
                                alowancesplit = allowanmce_arr1[i];
                                string[] allowanceda = alowancesplit.Split(';');
                                if (allowanceda.GetUpperBound(0) >= 3)
                                {
                                    string da = allowanceda[0];
                                    if (da.Trim().ToLower() == orallo.Trim().ToLower())
                                    {
                                        string daac = allowanceda[2];
                                        string[] spval = daac.Split('-');
                                        daac = spval[0];
                                        if (daac.Trim() == "" || daac == null)
                                        {
                                            daac = "0";
                                        }
                                        string da3 = allowanceda[3];

                                        double ds3 = Convert.ToDouble(da3);
                                        ds3 = Math.Round(ds3, 2, MidpointRounding.AwayFromZero);
                                        string DblAllowActVal = daac;
                                        string DblAllowVal = allowanceda[3];
                                        DblAllowLOP = (Convert.ToDouble(DblAllowActVal) - Convert.ToDouble(DblAllowVal));
                                        DblAllowLOP = Math.Round(DblAllowLOP);
                                        DblAllowLOP1 = DblAllowLOP1 + DblAllowLOP;
                                        if (ds3 != 0)
                                        {
                                            if (spll_alll_tag_arry.GetUpperBound(0) >= r)
                                            {
                                                if (spll_alll_tag_arry[r] != da)
                                                {
                                                    allo = allo + rowspace;
                                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                new PdfArea(mydocument, left1, allo, 200, 50), System.Drawing.ContentAlignment.MiddleLeft, setvalu.ToString());
                                                    mypdfpage.Add(ptsp);
                                                    if (chkactual.Checked == true)
                                                    {
                                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                       new PdfArea(mydocument, 230, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, daac);
                                                        mypdfpage.Add(ptsp);
                                                    }
                                                    string alowamount = ds3.ToString();
                                                    if (!alowamount.Contains('.'))
                                                    {
                                                        alowamount = alowamount + ".00";
                                                    }
                                                    else
                                                    {
                                                        string[] sp = alowamount.Split('.');
                                                        if (sp[1].Length < 2)
                                                        {
                                                            alowamount = alowamount + "0";
                                                        }
                                                    }
                                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                               new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                                                    mypdfpage.Add(ptsp);
                                                }
                                                else
                                                {
                                                    if (splallow.Contains(da))
                                                    {
                                                        splallow[da] = da3.ToString();
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }

                    deduction3 = dvmonthlpayt[0]["deductions"].ToString();
                    foreach (var kvp in deduct)
                    {
                        string setval = kvp.Key.ToString();
                        string setvalva = kvp.Value.ToString();
                        string[] deduction_arr1;
                        string deductionsplit1;
                        deduction_arr1 = deduction3.Split('\\');
                        for (int sp = 0; sp <= deduction_arr1.GetUpperBound(0); sp++)
                        {
                            deductionsplit1 = deduction_arr1[sp];
                            string[] deductionda;
                            deductionda = deductionsplit1.Split(';');
                            if (deductionda.GetUpperBound(0) >= 3)
                            {
                                string de = deductionda[0];
                                string de3 = deductionda[3];
                                double de3d = Convert.ToDouble(de3);
                                de3d = Math.Round(de3d, 2, MidpointRounding.AwayFromZero);
                                if (setval.Trim().ToLower() == de.Trim().ToLower())
                                {
                                    if (de3d != 0)
                                    {
                                        dedu = dedu + rowspace;
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left3, dedu, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, setvalva.ToString());
                                        mypdfpage.Add(ptsp);
                                        totdection = totdection + de3d;
                                        string deamount = de3d.ToString();
                                        if (!deamount.Contains('.'))
                                        {
                                            deamount = deamount + ".00";
                                        }
                                        else
                                        {
                                            string[] spd = deamount.Split('.');
                                            if (spd[1].Length < 2)
                                            {
                                                deamount = deamount + "0";
                                            }
                                        }
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 770, dedu, 50, 50), System.Drawing.ContentAlignment.MiddleRight, deamount);
                                        mypdfpage.Add(ptsp);
                                    }
                                    sp = deduction_arr1.GetUpperBound(0) + 1;
                                }
                            }
                        }
                    }

                    if (lop != 0)
                        lop = lop + DblAllowLOP1;
                    if (allo > dedu)
                    {
                        if (coltop < allo)
                        {
                            coltop = allo;
                        }
                    }
                    else
                    {
                        if (coltop < dedu)
                        {
                            coltop = dedu;
                        }
                    }

                    coltop = coltop + rowspace + rowspace;
                    Double nesal3 = Convert.ToDouble(dvmonthlpayt[0]["netsal"].ToString());
                    nesal3 = Math.Round(nesal3, 2, MidpointRounding.AwayFromZero);

                    Double totall = Convert.ToDouble(dvmonthlpayt[0]["netadd"].ToString());
                    totall = Math.Round(totall, 2, MidpointRounding.AwayFromZero);

                    double netded = Convert.ToDouble(dvmonthlpayt[0]["netded"].ToString());
                    //netded = netded + lop;
                    netded = Math.Round(netded, 2, MidpointRounding.AwayFromZero);

                    string finalamount = totall.ToString();
                    if (!finalamount.Contains('.'))
                    {
                        finalamount = finalamount + ".00";
                    }
                    else
                    {
                        string[] sp = finalamount.Split('.');
                        if (sp[1].Length < 2)
                        {
                            finalamount = finalamount + "0";
                        }
                    }
                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                       new PdfArea(mydocument, left1, coltop, 100, 50), System.Drawing.ContentAlignment.MiddleLeft, "Gross Total");
                    mypdfpage.Add(ptsp);

                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                        new PdfArea(mydocument, 320, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleRight, finalamount);
                    mypdfpage.Add(ptsp);

                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                       new PdfArea(mydocument, left3, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Total Deduction");
                    mypdfpage.Add(ptsp);
                    finalamount = netded.ToString();
                    if (!finalamount.Contains('.'))
                    {
                        finalamount = finalamount + ".00";
                    }
                    else
                    {
                        string[] sp = finalamount.Split('.');
                        if (sp[1].Length < 2)
                        {
                            finalamount = finalamount + "0";
                        }
                    }

                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                       new PdfArea(mydocument, 770, coltop, 50, 50), System.Drawing.ContentAlignment.MiddleRight, finalamount);
                    mypdfpage.Add(ptsp);

                    coltop = coltop + rowspace + rowspace;
                    finalamount = nesal3.ToString();
                    if (!finalamount.Contains('.'))
                    {
                        finalamount = finalamount + ".00";
                    }
                    else
                    {
                        string[] sp = finalamount.Split('.');
                        if (sp[1].Length < 2)
                        {
                            finalamount = finalamount + "0";
                        }
                    }
                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                      new PdfArea(mydocument, left3, coltop, 500, 50), System.Drawing.ContentAlignment.MiddleLeft, "Net Pay : ");
                    mypdfpage.Add(ptsp);
                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                              new PdfArea(mydocument, 670, coltop, 150, 50), System.Drawing.ContentAlignment.MiddleRight, "Rs : " + finalamount);

                    mypdfpage.Add(ptsp);
                    //int fin_amount = Convert.ToInt32(finalamount);

                    if (cblsearch.Items[41].Selected == true)   //prabha on march 3 2018
                    {
                        MemoryStream memoryStream = new MemoryStream();
                        string filename = "ofc_seal";
                        string selq = "select officeseal from collinfo where college_code='" + Convert.ToString(Session["collegecode"]) + "'";
                        ds.Clear();
                        ds = d2.select_method_wo_parameter(selq, "Text");
                        if (ds.Tables.Count > 0)
                        {
                            if (!File.Exists(HttpContext.Current.Server.MapPath("~/UploadFiles/Officeseal/ofc_seal.jpg")))
                            {

                                if (ds.Tables[0].Rows.Count > 0)
                                {
                                    byte[] file = (byte[])ds.Tables[0].Rows[0]["officeseal"];
                                    memoryStream.Write(file, 0, file.Length);
                                    if (file.Length > 0)
                                    {
                                        System.Drawing.Image imgx = System.Drawing.Image.FromStream(memoryStream, true, true);
                                        System.Drawing.Image thumb = imgx.GetThumbnailImage(400, 400, null, IntPtr.Zero);
                                        thumb.Save(HttpContext.Current.Server.MapPath("~/UploadFiles/Officeseal/" + filename + ".jpg"), System.Drawing.Imaging.ImageFormat.Jpeg);
                                    }
                                    memoryStream.Dispose();
                                    memoryStream.Close();
                                }
                            }
                        }

                        if (File.Exists(HttpContext.Current.Server.MapPath("~/UploadFiles/Officeseal/ofc_seal.jpg")))
                        {
                            PdfImage LogoImage = mydocument.NewImage(HttpContext.Current.Server.MapPath("~/UploadFiles/Officeseal/ofc_seal.jpg"));
                            mypdfpage.Add(LogoImage, left3 + 150, coltop, 210);
                        }

                        if (cbAuthor.Checked == true)
                        {
                            if (txt_author.Text.Trim() != "")
                            {
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, left3 + 90, coltop + 110, 250, 50), System.Drawing.ContentAlignment.MiddleRight, txt_author.Text.ToString());
                                mypdfpage.Add(ptsp);
                            }
                        }


                        string word = ConvertNumbertoWords(Convert.ToInt32(nesal3));//delsis  //prabha on march 3 2018
                        ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                new PdfArea(mydocument, 400, coltop + 40, 450, 50), System.Drawing.ContentAlignment.MiddleLeft, "(" + word + ")");

                        mypdfpage.Add(ptsp);

                    }
                    if (rec % 2 != 0)
                    {
                        PdfArea tete = new PdfArea(mydocument, 10, starttop, 830, coltop + 130);
                        PdfRectangle pr1 = new PdfRectangle(mydocument, tete, Color.Black);
                        mypdfpage.Add(pr1);
                        if (totlastaff <= rec)
                        {
                            mypdfpage.SaveToDocument();
                        }
                    }
                    else
                    {
                        PdfArea tete = new PdfArea(mydocument, 10, starttop, 830, coltop - gettop + 145);
                        PdfRectangle pr1 = new PdfRectangle(mydocument, tete, Color.Black);
                        mypdfpage.Add(pr1);
                        mypdfpage.SaveToDocument();
                    }
                    //if (rec % 2 != 0)
                    //{
                    //    PdfArea tete = new PdfArea(mydocument, 10, starttop, 830, coltop + 30);
                    //    PdfRectangle pr1 = new PdfRectangle(mydocument, tete, Color.Black);
                    //    mypdfpage.Add(pr1);
                    //    if (totlastaff <= rec)
                    //    {
                    //        mypdfpage.SaveToDocument();
                    //    }
                    //}
                    //else
                    //{
                    //    PdfArea tete = new PdfArea(mydocument, 10, starttop, 830, coltop - gettop + 50);
                    //    PdfRectangle pr1 = new PdfRectangle(mydocument, tete, Color.Black);
                    //    mypdfpage.Add(pr1);
                    //    mypdfpage.SaveToDocument();
                    //}
                }
            }
            string appPath = HttpContext.Current.Server.MapPath("~");
            if (appPath != "")
            {
                string szPath = appPath + "/Report/";
                string szFile = staffname.Trim() + staffcode.Trim() + DateTime.Now.ToString("ddMMyyyy") + ".pdf";
                mydocument.SaveToFile(szPath + szFile);
                //Response.ClearHeaders();
                //Response.AddHeader("Content-Disposition", "attachment; filename=" + szFile);
                //Response.ContentType = "application/pdf";
                //Response.WriteFile(szPath + szFile);
            }

        }
        catch
        {
        }
    }
    protected void rbfromat3_CheckedChanged(object sender, EventArgs e)
    {
        clear();
    }
    public void func_Format4()
    {
        try
        {
            txtsms.Visible = false;
            btnsendsms.Visible = false;
            fpsalary.Sheets[0].SheetName = " ";
            fpsalary.Sheets[0].AutoPostBack = false;
            fpsalary.Visible = true;
            int sk = 0;
            btnprintmaster.Visible = true;
            Button3.Visible = false;
            btnprintmaster.Visible = false;
            Printcontrol.Visible = false;
            GridPrintmaster.Visible = false;
            fpsalary.Sheets[0].ColumnCount = 0;
            fpsalary.Sheets[0].RowCount = 0;
            fpsalary.Sheets[0].ColumnCount = 13;
            fpsalary.CommandBar.Visible = true;
            lblnorec.Visible = false;
            fpsalary.Sheets[0].PageSize = 11;
            fpsalary.Pager.Position = FarPoint.Web.Spread.PagerPosition.Bottom;
            fpsalary.Pager.Mode = FarPoint.Web.Spread.PagerMode.Both;
            fpsalary.Pager.Align = HorizontalAlign.Right;
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].Font.Name = "Book Antiqua";
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].Font.Bold = true;
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].Font.Size = FontUnit.Large;
            darkstyle.Font.Bold = true;
            darkstyle.Font.Name = "Book Antiqua";
            darkstyle.Font.Size = FontUnit.Medium;
            darkstyle.BackColor = ColorTranslator.FromHtml("#0CA6CA");
            darkstyle.ForeColor = Color.Black;
            darkstyle.HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].ColumnHeader.DefaultStyle = darkstyle;
            fpsalary.Pager.Font.Bold = true;
            fpsalary.Pager.Font.Name = "Arial";
            fpsalary.Pager.ForeColor = Color.DarkGreen;
            fpsalary.Pager.BackColor = Color.AliceBlue;
            fpsalary.Pager.PageCount = 5;
            fpsalary.Sheets[0].ColumnCount = 16;
            fpsalary.Width = 1700;
            fpsalary.Sheets[0].SheetCorner.Columns[0].Visible = false;
            fpsalary.Sheets[0].SheetCorner.RowCount = 3;
            fpsalary.CommandBar.Visible = false;
            FarPoint.Web.Spread.CheckBoxCellType chkcell = new FarPoint.Web.Spread.CheckBoxCellType();


            string datefrom;
            string dateto;
            string date1;
            string date2;
            Hashtable hatco = new Hashtable();
            Hashtable hatbf = new Hashtable();
            hatbf.Clear();
            hatco.Clear();
            fpsalary.Visible = true;
            btnprintmaster.Visible = true;
            Button3.Visible = false;
            btnprintmaster.Visible = false;
            Printcontrol.Visible = false;
            GridPrintmaster.Visible = false;
            string isprfcolumn = "";

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Staff Code";
            fpsalary.Sheets[0].ColumnHeader.Cells[1, 2].Text = "D.O.A";
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(2, 2, 2, 1);
            fpsalary.Sheets[0].Columns[2].Width = 100;
            fpsalary.Sheets[0].Columns[0].Width = 50;
            fpsalary.Sheets[0].Columns[1].Width = 50;
            fpsalary.Sheets[0].SetColumnMerge(2, FarPoint.Web.Spread.Model.MergePolicy.Always);
            fpsalary.Sheets[0].SetColumnMerge(0, FarPoint.Web.Spread.Model.MergePolicy.Always);

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 3].Text = "D.O.B";
            fpsalary.Sheets[0].ColumnHeader.Cells[1, 3].Text = "D.O.R";
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(1, 3, 2, 1);
            fpsalary.Sheets[0].Columns[3].Width = 100;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 4].Text = "Staff Name";
            fpsalary.Sheets[0].ColumnHeader.Cells[1, 4].Text = "Designation";
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(1, 4, 2, 1);
            fpsalary.Sheets[0].Columns[4].Width = 250;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 5].Text = "Date of Join";
            fpsalary.Sheets[0].ColumnHeader.Cells[1, 5].Text = "Date of Retire";
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(1, 5, 2, 1);
            fpsalary.Sheets[0].Columns[5].Width = 100;

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 6].Text = "Dept Name";
            if (cblsearch.Items[35].Selected == true)
            {
                fpsalary.Sheets[0].ColumnHeader.Cells[1, 6].Text = "Pay Scale";
            }
            else
            {
                fpsalary.Sheets[0].ColumnHeader.Cells[1, 6].Text = "Designation";
            }
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(1, 6, 2, 1);

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 7].Text = "Dept Acronym";
            fpsalary.Sheets[0].ColumnHeader.Cells[1, 7].Text = "Design Acronym";
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(1, 7, 2, 1);
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 8].Text = "Pay Scale";  // added by jairam 13-11-2014
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 8, 3, 1);

            fpsalary.Sheets[0].ColumnHeader.Cells[0, 9].Text = "Category";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 10].Text = "LOP Days ";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 11].Text = "Previous Month LOP Days";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 12].Text = "Current Month LOP Days";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 13].Text = "LOP Date(s) ";
            fpsalary.Sheets[0].ColumnHeader.Cells[0, 14].Text = "Pay Band";
            fpsalary.Sheets[0].ColumnHeader.Cells[1, 15].Text = "Basic Pay";
            fpsalary.Sheets[0].ColumnHeader.Cells[2, 15].Text = "Grade Pay";
            hatbf.Add("Pay Band", 0);// added by sridhar 18 sep 2014
            hatbf.Add("Basic Pay", 0);
            hatbf.Add("Grade Pay", 0);
            hatco.Add("Pay Band", 0);// added by sridhar 18 sep 2014
            hatco.Add("Basic Pay", 0);
            hatco.Add("Grade Pay", 0);


            fpsalary.Sheets[0].Columns[9].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].Columns[10].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].Columns[11].HorizontalAlign = HorizontalAlign.Center;
            // fpsalary.Sheets[0].Columns[13].HorizontalAlign = HorizontalAlign.Right;

            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 0, 3, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 1, 3, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 10, 3, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 11, 3, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 9, 3, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 12, 3, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 13, 3, 1);
            fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 14, 3, 1);

            int colcount1;
            int coldivide = 0;
            colcount1 = 15;
            int sa = 0;
            int pfea = 0;
            sql1 = "select * from incentives_master where college_code=" + Session["collegecode"] + "";
            sql1 = sql1 + " ;select distinct CONVERT(VARCHAR(10),from_date,103) as from_date,convert(VARCHAR(10),to_date,103) as to_date from hrpaymonths where paymonthnum='" + cblmonth.SelectedItem.Value.ToString() + "'and PayYear='" + ddlyear2.SelectedItem.Text.ToString() + "' and college_Code=" + Session["collegecode"].ToString() + ""; // Added by jairam 13-11-2014 
            DataSet dssett = d2.select_method_wo_parameter(sql1, "Text");
            if (dssett.Tables[0].Rows.Count > 0)
            {

                btnexcel.Visible = true;
                txtexcel.Visible = true;
                lblexcel.Visible = true;
                string allowncweshead;
                string detuctionheader;
                allowncweshead = dssett.Tables[0].Rows[0]["allowances"].ToString();
                string[] allown2;
                int getval;
                if (allowncweshead != "")
                {
                    allown2 = allowncweshead.Split(';');
                    getval = allown2.GetUpperBound(0);
                    getval = 0;
                    for (int t = 0; t < cblallowance.Items.Count; t++)
                    {
                        if (cblallowance.Items[t].Selected == true)
                        {
                            getval = getval + 1;
                        }
                    }


                    coldivide = getval / 2;
                    if (getval % 2 == 1)
                    {
                        coldivide = coldivide + 1;
                    }
                    fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + coldivide;//''''new getval
                    colcount1 = 15;
                    if (colcount1 > fpsalary.Sheets[0].ColumnCount - 1)
                    {
                        colcount1 = fpsalary.Sheets[0].ColumnCount - 1;
                    }
                    int count = 0;
                    count = allown2.GetUpperBound(0);

                    fpsalary.Sheets[0].ColumnHeader.Cells[0, 15].Text = "EARNINGS";
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, 15, 1, coldivide + 1);

                    for (int i = 1; i <= coldivide; i++)
                    {
                        for (int j = 1; j < 3; j++)
                        {
                            if (sa < (count))
                            {
                                if (cblallowance.Items[sa].Selected == true)
                                {
                                    fpsalary.Sheets[0].Columns[colcount1 + i].Visible = true;
                                    string allo2 = allown2[sa];
                                    string[] splitallo3 = allo2.Split('\\');
                                    if (splitallo3.Length > 0)
                                    {
                                        allo2 = splitallo3[0];
                                        string allotcol = "";
                                        if (splitallo3.Length >= 3)
                                        {
                                            allotcol = splitallo3[2];
                                        }
                                        if (cbAllowdeduc.Checked == true) // Modify by jairam 02-08-2017
                                        {
                                            fpsalary.Sheets[0].ColumnHeader.Cells[j, colcount1 + i].Text = allotcol.ToString();
                                        }
                                        else
                                        {
                                            fpsalary.Sheets[0].ColumnHeader.Cells[j, colcount1 + i].Text = allo2.ToString();
                                        }
                                        fpsalary.Sheets[0].ColumnHeader.Cells[j, colcount1 + i].Note = allotcol.ToString();
                                        fpsalary.Sheets[0].Columns[colcount1 + i].HorizontalAlign = HorizontalAlign.Right;
                                        if (!hatbf.Contains(allotcol))
                                        {
                                            hatbf.Add(allo2, 0);
                                            hatco.Add(allo2, 0);
                                        }
                                        if (coldivide == i)
                                        {
                                            if (getval % 2 > 0)
                                            {
                                                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(j, colcount1 + i, 2, 1);
                                            }
                                        }
                                        sa++;
                                    }
                                }
                                else
                                {
                                    sa++;
                                    j--;
                                }
                            }
                        }
                    }
                }


                fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 1;
                colheder = fpsalary.Sheets[0].ColumnCount;
                fpsalary.Sheets[0].ColumnHeader.Cells[0, colheder - 1].Text = "GROSS PAY";
                hatbf.Add("GROSS PAY", 0);
                hatco.Add("GROSS PAY", 0);
                fpsalary.Sheets[0].Columns[colheder - 1].HorizontalAlign = HorizontalAlign.Right;
                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colheder - 1, 3, 1);
                if (cblsearch.Items[23].Selected == true)
                {
                    fpsalary.Sheets[0].Columns[colheder - 1].Visible = true;
                }
                else
                {
                    fpsalary.Sheets[0].Columns[colheder - 1].Visible = false;
                }
                fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 1;
                pfea = fpsalary.Sheets[0].ColumnCount - 1;
                fpsalary.Sheets[0].ColumnHeader.Cells[0, pfea].Text = "Provident Fund Earning";
                hatbf.Add("Provident Fund Earning", 0);
                hatco.Add("Provident Fund Earning", 0);
                fpsalary.Sheets[0].Columns[pfea].HorizontalAlign = HorizontalAlign.Right;
                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, pfea, 3, 1);
                if (cblsearch.Items[37].Selected == true)
                {
                    fpsalary.Sheets[0].Columns[pfea].Visible = true;
                }
                else
                {
                    fpsalary.Sheets[0].Columns[pfea].Visible = false;
                }

                SortedDictionary<string, string> dict = new SortedDictionary<string, string>();
                detuctionheader = dssett.Tables[0].Rows[0]["deductions"].ToString();
                string[] deduct2;
                int getval2;
                deduct2 = detuctionheader.Split(';');
                getval2 = deduct2.GetUpperBound(0);
                for (int def = 0; def <= deduct2.GetUpperBound(0); def++)
                {
                    string[] actdedcut = deduct2[def].Split('\\');
                    if (actdedcut.GetUpperBound(0) >= 1)
                    {
                        string getdeduct = actdedcut[1].ToString();
                        string getdeduct1 = actdedcut[0].ToString();
                        if (actdedcut.GetUpperBound(0) >= 2)
                        {
                            string strpfdeduction = actdedcut[2].ToString();
                            if (strpfdeduction.Trim().ToLower() == "pf")
                            {
                                isprfcolumn = getdeduct1;
                            }
                        }
                        if (!dict.ContainsKey(getdeduct1))
                        {
                            dict.Add(getdeduct1, getdeduct);
                        }
                    }
                }
                getval2 = deduct2.GetUpperBound(0);
                getval2 = 0;
                Hashtable hatseldeduct = new Hashtable();
                for (int t = 0; t < cbldeduction.Items.Count; t++)
                {
                    if (cbldeduction.Items[t].Selected == true)
                    {
                        getval2 = getval2 + 1;
                        string dedva = cbldeduction.Items[t].Text.ToString();
                        if (!hatseldeduct.Contains(dedva))
                        {
                            hatseldeduct.Add(dedva, dedva);
                        }
                    }
                }
                double deducount = Convert.ToDouble(getval2) / 2;
                deducount = Math.Round(deducount, MidpointRounding.AwayFromZero);
                col = fpsalary.Sheets[0].ColumnCount;
                fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + Convert.ToInt32(deducount);
                colcount1 = fpsalary.Sheets[0].ColumnCount + 1;
                if (deducount > 0)
                {
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, col].Text = "DEDUCTIONS";
                    fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, col, 1, Convert.ToInt32(deducount));
                }
                int da = 1;
                int dec = 0;
                int colval = 0;
                foreach (var kvp in dict)
                {
                    string setval = kvp.Key.ToString();
                    string setvalk = kvp.Value.ToString();
                    if (hatseldeduct.ContainsKey(setval))
                    {
                        for (int v = 0; v <= deduct2.GetUpperBound(0); v++)
                        {
                            string[] deduct2spilt = deduct2[v].Split(new char[] { '\\' });
                            string deduction = deduct2spilt[1].ToString();
                            string deductmatch = deduct2spilt[0].ToString();
                            if (setval == deductmatch)
                            {
                                dec++;
                                if (dec > 2)
                                {
                                    if (dec % 2 == 1)
                                    {
                                        colval++;
                                        da = 1;
                                    }
                                    else
                                    {
                                        da = 2;
                                    }
                                }
                                else
                                {
                                    da = dec;
                                }

                                if (cbAllowdeduc.Checked == true) // Modify by jairam 02-08-2017
                                {
                                    fpsalary.Sheets[0].ColumnHeader.Cells[da, col + colval].Text = deduction;
                                }
                                else
                                {
                                    fpsalary.Sheets[0].ColumnHeader.Cells[da, col + colval].Text = deductmatch;
                                }
                                fpsalary.Sheets[0].ColumnHeader.Cells[da, col + colval].Note = deduction;
                                fpsalary.Sheets[0].Columns[col + colval].HorizontalAlign = HorizontalAlign.Right;
                                if (!hatbf.Contains(deduction))
                                {
                                    hatbf.Add(deductmatch, 0);
                                    hatco.Add(deductmatch, 0);
                                }

                                if (deducount - 1 == colval)
                                {
                                    if (getval2 % 2 == 1)
                                    {
                                        fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(da, col + colval, 2, 1);

                                    }
                                }
                                v = deduct2.GetUpperBound(0) + 1;
                            }
                        }
                    }
                }
                fpsalary.Sheets[0].ColumnCount = fpsalary.Sheets[0].ColumnCount + 7;
                colcount1 = fpsalary.Sheets[0].ColumnCount;



                fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 7].Text = "TOTAL DEDUCTIONS";//TOTAL DEDUCTIONS
                fpsalary.Sheets[0].Columns[colcount1 - 7].Width = 50;
                fpsalary.Sheets[0].Columns[colcount1 - 7].HorizontalAlign = HorizontalAlign.Right;
                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount1 - 7, 3, 1);
                hatbf.Add("TOTAL DEDUCTIONS", 0);
                hatco.Add("TOTAL DEDUCTIONS", 0);

                fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 6].Text = "LOP Amounts";
                fpsalary.Sheets[0].Columns[colcount1 - 6].HorizontalAlign = HorizontalAlign.Right;
                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount1 - 6, 3, 1);

                fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 5].Text = "Account No";
                fpsalary.ActiveSheetView.Columns[colcount1 - 5].Font.Name = "Book Antiqua";
                fpsalary.Sheets[0].Columns[colcount1 - 5].HorizontalAlign = HorizontalAlign.Center;
                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount1 - 5, 3, 1);

                fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 4].Text = "NET PAY";
                fpsalary.ActiveSheetView.Columns[colcount1 - 4].Font.Name = "Book Antiqua";
                fpsalary.Sheets[0].Columns[colcount1 - 4].HorizontalAlign = HorizontalAlign.Right;
                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount1 - 4, 3, 1);
                hatbf.Add("NET PAY", 0);
                hatco.Add("NET PAY", 0);
                fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 3].Text = "Mobile No";
                fpsalary.ActiveSheetView.Columns[colcount1 - 3].Font.Name = "Book Antiqua";
                fpsalary.Sheets[0].Columns[colcount1 - 3].HorizontalAlign = HorizontalAlign.Left;
                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount1 - 3, 3, 1);

                if (chksms.Checked == true)
                {
                    fpsalary.Sheets[0].Columns[colcount1 - 3].Visible = true;
                }
                else
                {
                    fpsalary.Sheets[0].Columns[colcount1 - 3].Visible = false;
                }

                fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 2].Text = "EMail Id";
                fpsalary.ActiveSheetView.Columns[colcount1 - 2].Font.Name = "Book Antiqua";
                fpsalary.Sheets[0].Columns[colcount1 - 2].HorizontalAlign = HorizontalAlign.Left;
                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount1 - 2, 3, 1);
                if (chkEmail.Checked == true)
                {
                    fpsalary.Sheets[0].Columns[colcount1 - 2].Visible = true;
                }
                else
                {
                    fpsalary.Sheets[0].Columns[colcount1 - 2].Visible = false;
                }

                fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 1].Text = "Signature";
                fpsalary.ActiveSheetView.Columns[colcount1 - 1].Font.Name = "Book Antiqua";
                fpsalary.Sheets[0].Columns[colcount1 - 1].HorizontalAlign = HorizontalAlign.Left;
                fpsalary.Sheets[0].ColumnHeaderSpanModel.Add(0, colcount1 - 1, 3, 1);
                //fpsalary.Sheets[0].SetColumnMerge(colcount1 - 1, FarPoint.Web.Spread.Model.MergePolicy.Always);
            }

            for (int i = 0; i < fpsalary.Sheets[0].RowCount; i++)
            {
                if (fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 1].Text.ToString().Trim() == "")
                {
                    fpsalary.Sheets[0].ColumnHeader.Cells[0, colcount1 - 1].Text = "                                                                                                                                                                                                         ";
                }
            }
            FarPoint.Web.Spread.StyleInfo style = new FarPoint.Web.Spread.StyleInfo();
            style.Font.Size = 10;
            style.Font.Bold = true;
            fpsalary.Sheets[0].SheetCornerStyle = new FarPoint.Web.Spread.StyleInfo(style);
            //fpsalary.Sheets[0].ColumnHeader.DefaultStyle = new FarPoint.Web.Spread.StyleInfo(style);
            fpsalary.Sheets[0].AllowTableCorner = true;
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].Text = "S.No";
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].SheetCorner.Cells[0, 0].Border.BorderColorRight = Color.White;
            fpsalary.Sheets[0].SheetCornerSpanModel.Add(0, 0, 3, 1);


            int head = 1;
            int headerset = 1;
            if (cblsearch.Items[14].Selected == true)
            {
            }
            else
            {
                headerset = headerset + 1;
                head = 1;
            }
            int spancol = headerset + head;

            string fromdate = "";
            string todate = "";
            if (dssett.Tables[1].Rows.Count > 0)
            {
                fromdate = dssett.Tables[1].Rows[0]["from_date"].ToString();
                Txtentryfrom.Text = fromdate;
                todate = dssett.Tables[1].Rows[0]["to_date"].ToString();
                Txtentryto.Text = todate;
            }
            date1 = Txtentryfrom.Text.ToString();
            string[] split = date1.Split(new Char[] { '/' });
            datefrom = split[1].ToString() + "/" + split[0].ToString() + "/" + split[2].ToString();
            date2 = Txtentryto.Text.ToString();
            string[] split1 = date2.Split(new Char[] { '/' });
            dateto = split1[1].ToString() + "/" + split1[0].ToString() + "/" + split1[2].ToString();

            fpsalary.Sheets[0].ColumnHeader.Rows[0].Font.Bold = true;
            fpsalary.Sheets[0].ColumnHeader.Rows[0].Font.Size = FontUnit.Large;
            fpsalary.Sheets[0].ColumnHeader.Rows[0].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Rows[1].Font.Bold = true;
            fpsalary.Sheets[0].ColumnHeader.Rows[1].Font.Size = FontUnit.Large;
            fpsalary.Sheets[0].ColumnHeader.Rows[1].HorizontalAlign = HorizontalAlign.Center;

            fpsalary.Sheets[0].ColumnHeader.Rows[2].Font.Bold = true;
            fpsalary.Sheets[0].ColumnHeader.Rows[2].Font.Size = FontUnit.Large;
            fpsalary.Sheets[0].ColumnHeader.Rows[2].HorizontalAlign = HorizontalAlign.Center;

            //fpsalary.Sheets[0].ColumnHeader.Rows[0].BackColor = Color.FromArgb(214, 235, 255);
            //fpsalary.Sheets[0].ColumnHeader.Rows[1].BackColor = Color.FromArgb(214, 235, 255);
            //fpsalary.Sheets[0].ColumnHeader.Rows[2].BackColor = Color.FromArgb(214, 235, 255);

            fpsalary.Sheets[0].Columns[0].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].Columns[1].HorizontalAlign = HorizontalAlign.Center;
            FarPoint.Web.Spread.TextCellType txt = new FarPoint.Web.Spread.TextCellType();
            for (int i = 0; i < fpsalary.Sheets[0].ColumnCount; i++)
            {
                fpsalary.Sheets[0].Columns[i].Font.Name = "Book Antiqua";
                fpsalary.Sheets[0].Columns[i].Font.Size = FontUnit.Medium;
                fpsalary.Sheets[0].Columns[i].VerticalAlign = VerticalAlign.Middle;
                fpsalary.Sheets[0].Columns[i].Font.Size = FontUnit.Large;
                if (i != 1)
                {
                    fpsalary.Sheets[0].Columns[i].Locked = true;
                    fpsalary.Sheets[0].Columns[i].CellType = txt;
                }

            }

            if (cblsearch.Items[30].Selected == true)
            {
                fpsalary.Sheets[0].Columns[2].Visible = true;
            }
            else
            {
                fpsalary.Sheets[0].Columns[2].Visible = false;
            }
            if (cblsearch.Items[0].Selected == true)
            {
                fpsalary.Sheets[0].Columns[4].Visible = true;
            }
            else
            {
                fpsalary.Sheets[0].Columns[4].Visible = false;
            }
            if (cblsearch.Items[14].Selected == true)
            {
                fpsalary.Sheets[0].Columns[1].Visible = true;
            }
            else
            {
                fpsalary.Sheets[0].Columns[1].Visible = false;
            }
            if (cblsearch.Items[3].Selected == true || cblsearch.Items[4].Selected == true)
            {
                fpsalary.Sheets[0].Columns[7].Visible = true;
            }
            else
            {
                fpsalary.Sheets[0].Columns[7].Visible = false;
            }
            if (cblsearch.Items[1].Selected == true || cblsearch.Items[2].Selected == true)
            {
                fpsalary.Sheets[0].Columns[6].Visible = true;
            }
            else
            {
                fpsalary.Sheets[0].Columns[6].Visible = false;
            }
            if (cblsearch.Items[5].Selected == true)
            {
                fpsalary.Sheets[0].Columns[9].Visible = true;
            }
            else
            {
                fpsalary.Sheets[0].Columns[9].Visible = false;
            }
            if (cblsearch.Items[6].Selected == true)
            {
                fpsalary.Sheets[0].Columns[10].Visible = true;
                fpsalary.Sheets[0].Columns[11].Visible = true;
                fpsalary.Sheets[0].Columns[12].Visible = true;
            }
            else
            {
                fpsalary.Sheets[0].Columns[10].Visible = false;
                fpsalary.Sheets[0].Columns[11].Visible = false;
                fpsalary.Sheets[0].Columns[12].Visible = false;
            }
            if (cblsearch.Items[7].Selected == true)
            {
                fpsalary.Sheets[0].Columns[13].Visible = true;
            }
            else
            {
                fpsalary.Sheets[0].Columns[13].Visible = false;
            }

            if (cblsearch.Items[8].Selected == true)
            {
                fpsalary.Sheets[0].Columns[5].Visible = true;
            }
            else
            {
                fpsalary.Sheets[0].Columns[5].Visible = false;
            }

            if (cblsearch.Items[9].Selected == true)
            {
                fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 5].Visible = true;
            }
            else
            {
                fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 5].Visible = false;
            }
            if (cblsearch.Items[28].Selected == true)
            {
                fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 6].Visible = true;
            }
            else
            {
                fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 6].Visible = false;
            }
            if (cblsearch.Items[27].Selected == true)
            {
                if (sk == 0)
                {
                    fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 1].Visible = true;
                    sk++;
                }

            }
            else
            {
                fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 1].Visible = false;
            }

            if (cblsearch.Items[31].Selected == true) // added by sridhar 18 sep 2014
            {
                fpsalary.Sheets[0].Columns[14].Visible = true;
            }
            else
            {
                fpsalary.Sheets[0].Columns[14].Visible = false;
            }

            if (cblsearch.Items[34].Selected == true)  // added by jairam 13-11-2014
            {
                fpsalary.Sheets[0].Columns[8].Visible = true;
            }
            else
            {
                fpsalary.Sheets[0].Columns[8].Visible = false;
            }


            string datefrom3;
            int monthname1;
            string date3 = Txtentryfrom.Text.ToString();
            string monthname2 = "";
            int monthnamenum;
            string yearto = "";
            string monyearto = "";
            string[] split5 = date3.Split(new Char[] { '/' });

            string monyear;
            int dayfrm = 0;
            string dayto;
            int daytonum;
            int year3;

            datefrom3 = split5[1].ToString() + "/" + split5[0].ToString() + "/" + split5[2].ToString();
            year3 = Convert.ToInt16(split5[2]);
            string date4 = Txtentryto.Text.ToString();


            string[] split6 = date4.Split(new Char[] { '/' });

            string dateto4 = split6[1].ToString() + "/" + split6[0].ToString() + "/" + split6[2].ToString();

            monthname2 = split6[0].ToString();
            monthnamenum = Convert.ToInt32(monthname2.ToString());
            yearto = split1[2].ToString();
            ///////
            int fromday = 0;
            fromday = Convert.ToInt16(split6[0].ToString());
            string mnmae = split5[1].ToString();
            monthname1 = Convert.ToInt16(mnmae);
            monthname2 = split1[1].ToString();
            monthnamenum = Convert.ToInt16(monthname2);
            string year = split5[2].ToString();

            monyear = monthname1.ToString() + "/" + year;
            monyearto = monthnamenum.ToString() + "/" + yearto;

            string dayfrom;
            int today = 0;
            today = Convert.ToInt16(split6[0].ToString());

            dayfrom = split5[0].ToString();
            dayfrm = Convert.ToInt32(dayfrom);
            dayto = split6[0].ToString();
            daytonum = Convert.ToInt32(dayto);

            double lopdaysmor = 0;
            double lopdayseveg = 0;
            double totlop = 0;
            string date = "";
            int maxdays = getmaxdays(monthname1, year3);

            goto l10;

       // l10: sql = " SELECT monthlypay.*,desig_master.priority,dept_acronym,staff_name,title,bankaccount,pfnumber,CONVERT(VARCHAR(10),staffmaster.join_date,103) as joindate,monthlypay.pay_band,monthlypay.grade_pay,desig_master.desig_acronym,monthlypay.LOP,CONVERT(VARCHAR(10),staffmaster.retr_date,103) as retierdate,stafftrans.payscale as staffpaysclae,hrdept_master.dept_name as deptname,desig_master.desig_name as designame,stafftrans.deductions as pfdeduction,staffmaster.resign from staff_appl_master sf, monthlypay,desig_master,stafftrans,staffmaster,hrdept_master Where sf.appl_no=staffmaster.appl_no and hrdept_master.dept_code=stafftrans.dept_code and stafftrans.staff_code=monthlypay.staff_code and stafftrans.latestrec=1 and desig_master.desig_code=stafftrans.desig_code and monthlypay.fdate ='" + datefrom + "' and monthlypay.tdate ='" + dateto + "'and monthlypay.college_code=" + Session["collegecode"] + " and desig_master.collegecode=" + Session["collegecode"] + " and staffmaster.staff_code=monthlypay.staff_code   and ((staffmaster.resign=0 or staffmaster.settled=0) or(staffmaster.resign=1 and staffmaster.relieve_date>='" + dateto + "') or (staffmaster.resign=1 and staffmaster.relieve_date between '" + datefrom + "' and '" + dateto + "'))"; // added by Srinath 3-1-2015
        l10: sql = " SELECT monthlypay.*,desig_master.priority,dept_acronym,staff_name,title,bankaccount,pfnumber,CONVERT(VARCHAR(10),staffmaster.join_date,103) as joindate,monthlypay.pay_band,monthlypay.grade_pay,desig_master.desig_acronym,monthlypay.LOP,CONVERT(VARCHAR(10),staffmaster.retr_date,103) as retierdate,stafftrans.payscale as staffpaysclae,hrdept_master.dept_name as deptname,desig_master.desig_name as designame,stafftrans.deductions as pfdeduction,staffmaster.resign from staff_appl_master sf, monthlypay,desig_master,stafftrans,staffmaster,hrdept_master Where sf.appl_no=staffmaster.appl_no and hrdept_master.dept_code=stafftrans.dept_code and stafftrans.staff_code=monthlypay.staff_code and stafftrans.latestrec=1 and desig_master.desig_code=stafftrans.desig_code and monthlypay.PayYear='" + ddlyear2.SelectedValue.ToString() + "' and monthlypay.PayMonth='" + cblmonth.SelectedValue.ToString() + "' and monthlypay.college_code=" + Session["collegecode"] + " and desig_master.collegecode=" + Session["collegecode"] + " and staffmaster.staff_code=monthlypay.staff_code  and ((staffmaster.resign=0 or staffmaster.settled=0) or (staffmaster.resign=1 or staffmaster.settled=1) or (staffmaster.relieve_date between '" + datefrom + "' and '" + dateto + "'))  "; // added by jairam 02-08-2017
            // added by Srinath 3-1-2015   and ((staffmaster.resign=0 or staffmaster.settled=0) or(staffmaster.resign=1 and staffmaster.relieve_date>='" + dateto + "') or (staffmaster.resign=1 and staffmaster.relieve_date between '" + datefrom + "' and '" + dateto + "'))
            if (tbseattype.Text != "---Select---")
            {
                int itemcount = 0;
                for (itemcount = 0; itemcount < cbldepttype.Items.Count; itemcount++)
                {
                    if (cbldepttype.Items[itemcount].Selected == true)
                    {
                        if (strdept == "")
                            strdept = "'" + cbldepttype.Items[itemcount].Value.ToString() + "'";
                        else
                            strdept = strdept + "," + "'" + cbldepttype.Items[itemcount].Value.ToString() + "'";
                    }
                }
                if (strdept != "")
                {
                    strdept = " in(" + strdept + ")";
                }
                sql = sql + " and hrdept_master.dept_code " + strdept + "";
            }
            if (tbblood.Text != "---Select---")
            {
                int itemcount1 = 0;

                for (itemcount1 = 0; itemcount1 < cblcategory.Items.Count; itemcount1++)
                {
                    if (cblcategory.Items[itemcount1].Selected == true)
                    {
                        if (strcategory == "")
                            strcategory = "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                        else
                            strcategory = strcategory + "," + "'" + cblcategory.Items[itemcount1].Value.ToString() + "'";
                    }
                }


                if (strcategory != "")
                {
                    strcategory = " in (" + strcategory + ")";
                }
                sql = sql + "  and stafftrans.category_code" + strcategory + "";
            }

            if (ddlpfcategory.SelectedItem.Text != "All")
            {
                sql = sql + " and isnull(staffmaster.is_pf,0)=" + ddlpfcategory.SelectedItem.Value.ToString() + "";
            }
            if (cb_hold.Checked == true)//delsi 1002
            {
                sql = sql + " and isnull(monthlypay.staffholdSet,'') in('','1','2')";
            }
            else
            {
                sql = sql + " and isnull(monthlypay.staffholdSet,'') in('','2')";
            }

            if (ddlorder.SelectedItem.Text.ToString() == "Priority")
            {
                sql = sql + " order by hrdept_master.priority,desig_master.priority,hrdept_master.dept_name,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code ";//Modified By Srinath 28/3/2014
            }
            //*************Modified By Subburaj 16.08.2014************//
            else if (ddlorder.SelectedItem.Text.ToString() == "Print Priority-1")
            {
                sql = sql + " order by hrdept_master.priority, desig_Master.priority,desig_master.print_pri,  staffmaster.PrintPriority,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code";
            }
            else if (ddlorder.SelectedItem.Text.ToString() == "Print Priority-2")
            {
                sql = sql + " order by hrdept_master.priority1,desig_master.print_pri,  staffmaster.PrintPriority,staffmaster.join_date,len(staffmaster.staff_code),staffmaster.staff_code";
            }
            //**************************end************************//
            else if (ddlorder.SelectedItem.Text.ToString() == "Account No")
            {
                sql = sql + " order by case when staffmaster.bankaccount is null then 1 else 0 end,len(staffmaster.bankaccount), staffmaster.bankaccount";
            }
            else if (ddlorder.SelectedItem.Text.ToString() == "Staff Wise Priority")// added by sridhar 22 sep 2014
            {
                sql = sql + "order by isnull(staffmaster.PrintPriority,0)";
            }
            else
            {
                sql = sql + " order by hrdept_master.dept_name,len(staffmaster.staff_code),staffmaster.staff_code";//Modified By Srinath 28/3/2014
            }


            sql = sql + "; select * from staff_attnd where mon_year between '" + monyear + "' and '" + monyearto + "'";
            sql = sql + "; select sm.staff_code,Convert(nvarchar(15),sa.date_of_birth,103) as dob,per_mobileno,email,com_mobileno from staff_appl_master sa,staffmaster sm where sm.appl_no=sa.appl_no and sm.college_code='" + Session["collegecode"] + "'";
            sql = sql + "  select shortname  from leave_category where status ='comp' and college_code =" + Session["collegecode"] + "";
            DataSet dscnt = d2.select_method_wo_parameter(sql, "Text");
            DataView dvstaffatt = new DataView();
            ArrayList array = new ArrayList();
            if (dscnt.Tables[3].Rows.Count > 0)
            {
                for (int add = 0; add < dscnt.Tables[3].Rows.Count; add++)
                {
                    array.Add(Convert.ToString(dscnt.Tables[3].Rows[add][0]));
                }
            }


            int rowstr;
            Boolean flag = false;
            FarPoint.Web.Spread.CheckBoxCellType chkcell1 = new FarPoint.Web.Spread.CheckBoxCellType();
            chkcell1.AutoPostBack = true;
            fpsalary.Sheets[0].RowCount++;
            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 1].CellType = chkcell1;
            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 1].Locked = false;
            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 1].VerticalAlign = VerticalAlign.Middle;

            fpsalary.Sheets[0].RowCount++;
            //fpsalary.Sheets[0].Cells[0, 2].Text = "s";
            //fpsalary.Sheets[0].Cells[1, 2].Text = "s";
            //fpsalary.Sheets[0].Cells[0, 2].ForeColor = Color.White;
            //fpsalary.Sheets[0].Cells[1, 2].ForeColor = Color.White;

            fpsalary.Sheets[0].SpanModel.Add(0, 2, 2, fpsalary.Sheets[0].ColumnCount - 3);
            // fpsalary.Sheets[0].SpanModel.Add(1, 2, 1, fpsalary.Sheets[0].ColumnCount - 5);
            fpsalary.Sheets[0].SpanModel.Add(0, 0, 2, 1);
            fpsalary.Sheets[0].SpanModel.Add(0, 1, 2, 1);
            // fpsalary.Sheets[0].SpanModel.Add(1, 2, 1, fpsalary.Sheets[0].ColumnCount);

            int total_row_count = 0;
            int sno = 0;
            int staffcount = 0;
            int no_of_staff = Convert.ToInt16(txt_staff.Text);

            if (dscnt.Tables[0].Rows.Count > 0)
            {
                txtexcel.Visible = true;
                lblexcel.Visible = true;
                btnprintmaster.Visible = true;
                Button3.Visible = true;
                btnexcel.Visible = true;
                if (chksms.Checked == true || chkEmail.Checked == true)
                {
                    txtsms.Visible = true;
                    btnsendsms.Visible = true;
                }
                fpsalary.Sheets[0].Columns[fpsalary.Sheets[0].ColumnCount - 4].Visible = true;
                for (int stcnt = 0; stcnt < dscnt.Tables[0].Rows.Count; stcnt++)
                {
                    date = "";
                    dayfrm = Convert.ToInt32(dayfrom); // modify by jairam 05-12-2014
                    if ((flag == true) && (staffcount == 0))
                    {
                        fpsalary.Sheets[0].RowCount = fpsalary.Sheets[0].RowCount + 2;
                        fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 2, 0, 2, 13);
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Text = "B/F";
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Text = "B/F";
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Font.Bold = true;
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Font.Size = FontUnit.Large;
                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].HorizontalAlign = HorizontalAlign.Right;
                        for (int gk = 0; gk <= 2; gk++)
                        {
                            for (int k = 13; k <= colcount1 - 1; k++)
                            {
                                int rowset = 0;
                                if (gk == 0)
                                {
                                    rowset = 2;
                                }
                                else
                                {
                                    rowset = 3 - gk;
                                }

                                string headval = fpsalary.Sheets[0].ColumnHeader.Cells[gk, k].Text;
                                if (hatbf.Contains(headval))
                                {
                                    string values = hatbf[headval].ToString();
                                    double nettot = Convert.ToDouble(values.ToString()); // added by jairam 19-11-2014
                                    nettot = Math.Round(nettot, 0, MidpointRounding.AwayFromZero);
                                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, k].Text = nettot.ToString();
                                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, k].Font.Bold = true;
                                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, k].Font.Size = FontUnit.Large;
                                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, k].VerticalAlign = VerticalAlign.Middle;//barath 09.01.18
                                    fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, k].HorizontalAlign = HorizontalAlign.Right;

                                }
                            }
                        }
                    }
                    if (staffcount < no_of_staff)
                    {
                        staffcount++;
                        fpsalary.Sheets[0].RowCount += 2;
                        rowstr = Convert.ToInt32(fpsalary.Sheets[0].RowCount);
                        tn_format2.Visible = true;
                        chkactual.Visible = true;
                        string staffcode1 = dscnt.Tables[0].Rows[stcnt]["staff_code"].ToString();

                        fpsalary.Sheets[0].AddSpanCell(rowstr - 2, 1, 2, 1);
                        fpsalary.Sheets[0].AddSpanCell(rowstr - 2, 0, 2, 1);

                        if (monthname1 == monthnamenum)
                        {
                            dscnt.Tables[1].DefaultView.RowFilter = " mon_year ='" + monyear + "' and staff_code='" + staffcode1 + "'";
                            dvstaffatt = dscnt.Tables[1].DefaultView;
                            if (dvstaffatt.Count > 0)
                            {
                                for (int day = dayfrm; dayfrm <= daytonum; dayfrm++)
                                {
                                    int boll4 = 0;
                                    int day5 = 0;
                                    day5 = 0 + dayfrm;
                                    //sql1 = "select * from staff_attnd where mon_year between '" + monyear + "' and '" + monyearto + "' and staff_code='" + staffcode1 + "'";

                                    int day6;
                                    string attnda = "";
                                    day6 = 3 + day5;
                                    attnda = dvstaffatt[0][day6].ToString();
                                    if (attnda != "")
                                    {
                                        string[] split100 = attnda.Split(new char[] { '-' });
                                        string mor = "";
                                        string eve = "";
                                        mor = split100[0].ToString();
                                        eve = split100[1].ToString();

                                        if (mor != "A")
                                        {
                                            if (array.Count > 0)
                                            {

                                                if (array.Contains(mor) == true)
                                                {
                                                    lopdaysmor = lopdaysmor + 0.5;
                                                    boll4 = 1;
                                                }

                                            }
                                        }
                                        else
                                        {
                                            lopdaysmor = lopdaysmor + 0.5;
                                            boll4 = 1;
                                        }
                                        if (eve != "A")
                                        {
                                            if (array.Count > 0)
                                            {
                                                if (array.Contains(eve) == true)
                                                {
                                                    lopdayseveg = lopdayseveg + 0.5;
                                                    boll4 = 1;
                                                }
                                            }
                                        }
                                        else
                                        {
                                            lopdaysmor = lopdaysmor + 0.5;
                                            boll4 = 1;
                                        }

                                        if (boll4 == 1)
                                        {
                                            if (date == "")
                                            {
                                                date = day5 + "/" + monyearto;
                                            }
                                            else
                                            {
                                                date = date + "," + day5 + "/" + monyear;  // Added by jairam 05-12-2014
                                            }
                                        }
                                        string[] lave = new string[15];
                                    }
                                }
                            }
                            totlop = lopdayseveg + lopdayseveg;
                            fpsalary.Sheets[0].Cells[rowstr - 2, 10].Text = totlop.ToString();
                            fpsalary.Sheets[0].Cells[rowstr - 2, 10].HorizontalAlign = HorizontalAlign.Center;
                            fpsalary.Sheets[0].Cells[rowstr - 2, 10].Text = totlop.ToString();

                            fpsalary.Sheets[0].Cells[rowstr - 2, 13].Text = date;
                            fpsalary.Sheets[0].Cells[rowstr - 1, 13].HorizontalAlign = HorizontalAlign.Left;
                        }
                        else
                        {
                            dscnt.Tables[1].DefaultView.RowFilter = " mon_year= '" + monyear + "' and staff_code='" + staffcode1 + "'";
                            dvstaffatt = dscnt.Tables[1].DefaultView;
                            if (dvstaffatt.Count > 0)
                            {
                                for (int day = dayfrm; dayfrm <= maxdays; dayfrm++)
                                {
                                    int day5 = 0;
                                    day5 = 0 + dayfrm;
                                    // sql1 = "select * from staff_attnd where mon_year= '" + monyear + "' and staff_code='" + staffcode1 + "'";

                                    int bol = 0;
                                    int day6;
                                    string attnda = "";
                                    day6 = 3 + day5;
                                    attnda = dvstaffatt[0][day6].ToString();
                                    if (attnda != "")
                                    {
                                        string[] split100 = attnda.Split(new char[] { '-' });
                                        string mor = "";
                                        string eve = "";
                                        mor = split100[0].ToString();
                                        eve = split100[1].ToString();
                                        //if ((mor == "LOP") || (mor == "A'"))
                                        //{
                                        //    lopdaysmor = lopdaysmor + 0.5;
                                        //    bol = 1;
                                        //}
                                        //if ((eve == "LOP") || (eve == "A"))
                                        //{
                                        //    lopdayseveg = lopdayseveg + 0.5;
                                        //    bol = 1;
                                        //}
                                        if (mor != "A")
                                        {
                                            if (array.Count > 0)
                                            {
                                                if (array.Contains(mor) == true)
                                                {
                                                    lopdaysmor = lopdaysmor + 0.5;
                                                    bol = 1;
                                                }

                                            }

                                        }
                                        else
                                        {
                                            lopdaysmor = lopdaysmor + 0.5;
                                            bol = 1;
                                        }

                                        if (eve != "A")
                                        {
                                            if (array.Count > 0)
                                            {
                                                if (array.Contains(eve) == true)
                                                {
                                                    lopdayseveg = lopdayseveg + 0.5;
                                                    bol = 1;
                                                }
                                            }
                                        }
                                        else
                                        {
                                            lopdayseveg = lopdayseveg + 0.5;
                                            bol = 1;
                                        }



                                        if (bol == 1)
                                        {
                                            if (date == "")
                                            {
                                                date = day5 + "/" + monyear;
                                            }
                                            else
                                            {
                                                date = date + "," + day5 + "/" + monyear;  // Added by jairam 05-12-2014
                                            }
                                        }
                                    }
                                }
                                totlop = lopdayseveg + lopdaysmor;
                                fpsalary.Sheets[0].Cells[rowstr - 2, 11].Text = totlop.ToString();
                                fpsalary.Sheets[0].Cells[rowstr - 2, 11].HorizontalAlign = HorizontalAlign.Center;

                            }
                            lopdayseveg = 0;
                            lopdaysmor = 0;
                            dscnt.Tables[1].DefaultView.RowFilter = " mon_year= '" + monyearto + "' and staff_code='" + staffcode1 + "'";
                            dvstaffatt = dscnt.Tables[1].DefaultView;
                            if (dvstaffatt.Count > 0)
                            {
                                for (int day = 1; day <= today; day++)
                                {
                                    int day5 = 0;
                                    day5 = 0 + day;
                                    // sql1 = "select * from staff_attnd where mon_year= '" + monyearto + "' and staff_code='" + staffcode1 + "'";

                                    int day6;
                                    int bol2 = 0;
                                    string attnda = "";
                                    day6 = 3 + day5;
                                    attnda = dvstaffatt[0][day6].ToString();
                                    if (attnda != "")
                                    {
                                        string[] split100 = attnda.Split(new char[] { '-' });
                                        string mor = "";
                                        string eve = "";
                                        mor = split100[0].ToString();
                                        eve = split100[1].ToString();
                                        //if ((mor == "LOP") || (mor == "A'"))
                                        //{
                                        //    lopdaysmor = lopdaysmor + 0.5;
                                        //    bol2 = 1;
                                        //}
                                        //if ((eve == "LOP") || (eve == "A"))
                                        //{
                                        //    lopdayseveg = lopdayseveg + 0.5;
                                        //    bol2 = 1;
                                        //}
                                        if (mor != "A")
                                        {
                                            if (array.Count > 0)
                                            {
                                                if (array.Contains(mor) == true)
                                                {
                                                    lopdaysmor = lopdaysmor + 0.5;
                                                    bol2 = 1;
                                                }

                                            }
                                        }
                                        else
                                        {
                                            lopdaysmor = lopdaysmor + 0.5;
                                            bol2 = 1;
                                        }

                                        if (eve != "A")
                                        {
                                            if (array.Count > 0)
                                            {
                                                if (array.Contains(eve) == true)
                                                {
                                                    lopdayseveg = lopdayseveg + 0.5;
                                                    bol2 = 1;
                                                }
                                            }
                                        }
                                        else
                                        {
                                            lopdayseveg = lopdayseveg + 0.5;
                                            bol2 = 1;
                                        }

                                        if (bol2 == 1)
                                        {
                                            if (date == "")
                                            {
                                                date = day5 + "/" + monyearto;
                                            }
                                            else
                                            {
                                                date = date + "," + day5 + "/" + monyearto;  // Added by jairam 05-12-2014
                                            }
                                        }
                                    }
                                }
                            }
                            totlop = lopdaysmor + lopdayseveg;
                            double lop11 = Convert.ToDouble(totlop);
                            FarPoint.Web.Spread.TextCellType txt1 = new FarPoint.Web.Spread.TextCellType();
                            fpsalary.Sheets[0].Cells[rowstr - 2, 12].Text = Convert.ToString(lop11);
                            fpsalary.Sheets[0].Cells[rowstr - 2, 12].CellType = txt1;
                            fpsalary.Sheets[0].Cells[rowstr - 2, 12].HorizontalAlign = HorizontalAlign.Center;
                            //if (date != "")
                            //{
                            //    date = date.Substring(1, date.Length - 1);
                            //}

                            fpsalary.Sheets[0].Cells[rowstr - 1, 13].Text = date;
                            fpsalary.Sheets[0].Cells[rowstr - 1, 13].HorizontalAlign = HorizontalAlign.Left;
                        }
                        string title = "";
                        string staffname = dscnt.Tables[0].Rows[stcnt]["staff_name"].ToString();
                        if (cblsearch.Items[36].Selected == true)
                        {
                            title = dscnt.Tables[0].Rows[stcnt]["title"].ToString();
                        }
                        string dept = dscnt.Tables[0].Rows[stcnt]["deptname"].ToString(); // added by jairam 13-11-2014
                        string dept_acrronym = dscnt.Tables[0].Rows[stcnt]["dept_acronym"].ToString();
                        string designation = dscnt.Tables[0].Rows[stcnt]["designame"].ToString(); // added by jairam 13-11-2014
                        string deduction = dscnt.Tables[0].Rows[stcnt]["deductions"].ToString();
                        string basicpay = dscnt.Tables[0].Rows[stcnt]["basic_alone"].ToString();
                        string category = dscnt.Tables[0].Rows[stcnt]["stftype"].ToString();
                        string netpay = dscnt.Tables[0].Rows[stcnt]["netsal"].ToString();
                        string totalded = dscnt.Tables[0].Rows[stcnt]["netded"].ToString();
                        string netadd = dscnt.Tables[0].Rows[stcnt]["netadd"].ToString();
                        string desig_acronym = dscnt.Tables[0].Rows[stcnt]["desig_acronym"].ToString();
                        string BasicLOP = dscnt.Tables[0].Rows[stcnt]["LOP"].ToString();
                        string Baicpayarr = dscnt.Tables[0].Rows[stcnt]["bsalary"].ToString();
                        string joindate = dscnt.Tables[0].Rows[stcnt]["joindate"].ToString();
                        string gradepay = dscnt.Tables[0].Rows[stcnt]["g_pay"].ToString();
                        string accountno = dscnt.Tables[0].Rows[stcnt]["bankaccount"].ToString();
                        string retierdate = dscnt.Tables[0].Rows[stcnt]["retierdate"].ToString();

                        string paybandnew = dscnt.Tables[0].Rows[stcnt]["pay_band"].ToString();// added by sridhar 18 sep 2014
                        string payscale = dscnt.Tables[0].Rows[stcnt]["staffpaysclae"].ToString();// added by sridhar 15 Oct 2014
                        Hashtable hatpfdeduction = new Hashtable();
                        Double pdfdeductionamount = 0;
                        string pfduction = dscnt.Tables[0].Rows[stcnt]["pfdeduction"].ToString();// added by sridhar 15 Oct 2014
                        if (cblsearch.Items[37].Selected == true)
                        {
                            string[] sppfdu = pfduction.Split('\\');
                            for (int inpfdect = 0; inpfdect <= sppfdu.GetUpperBound(0); inpfdect++)
                            {
                                string[] spsing = sppfdu[inpfdect].Split(';');
                                if (spsing[0] == isprfcolumn)
                                {
                                    if (spsing.GetUpperBound(0) >= 17)
                                    {
                                        if (spsing[17].ToString().Trim() != "" && spsing[17] != null)
                                        {
                                            string[] spfingetpf = spsing[17].Split('+');
                                            for (int finpf = 0; finpf <= spfingetpf.GetUpperBound(0); finpf++)
                                            {
                                                string strgetpfdecc = spfingetpf[finpf].ToString();
                                                if (strgetpfdecc.Trim() != "" && strgetpfdecc != null)
                                                {
                                                    if (!hatpfdeduction.Contains(strgetpfdecc))
                                                    {
                                                        hatpfdeduction.Add(strgetpfdecc, strgetpfdecc);
                                                    }
                                                    if (strgetpfdecc.Trim().ToLower() == "basic")
                                                    {
                                                        pdfdeductionamount = pdfdeductionamount + Convert.ToDouble(Baicpayarr);
                                                        pdfdeductionamount = Math.Round(pdfdeductionamount, 0, MidpointRounding.AwayFromZero);
                                                    }
                                                    if (strgetpfdecc.Trim().ToLower() == "gradepay")
                                                    {
                                                        pdfdeductionamount = pdfdeductionamount + Convert.ToDouble(gradepay);
                                                        pdfdeductionamount = Math.Round(pdfdeductionamount, 0, MidpointRounding.AwayFromZero);
                                                    }
                                                }
                                            }

                                        }
                                    }
                                    inpfdect = sppfdu.GetUpperBound(0) + 2;
                                }
                            }

                        }


                        //staffname = staffname + "                                                                                                                                                                                                                                                                                                                                                        ";
                        string regisin = dscnt.Tables[0].Rows[stcnt]["resign"].ToString();
                        if (regisin.Trim().ToLower() == "true" || regisin.Trim() == "1")
                        {
                            fpsalary.Sheets[0].Rows[rowstr - 1].BackColor = Color.Pink;
                            fpsalary.Sheets[0].Rows[rowstr - 2].BackColor = Color.Pink;
                        }

                        double dblallowact2 = 0;
                        double BasicLOP1 = Convert.ToDouble(BasicLOP);
                        double dblGross = 0;
                        netadd = Convert.ToString(Math.Round(Convert.ToDouble(netadd), 0, MidpointRounding.AwayFromZero));
                        double dblNetadd = Convert.ToDouble(netadd);
                        double totalded1 = 0;

                        //BasicLOP1 = Math.Round(BasicLOP1, 0);
                        BasicLOP1 = Math.Round(Convert.ToDouble(BasicLOP1), 0, MidpointRounding.AwayFromZero);
                        dblallowact2 = dblallowact2 + BasicLOP1;
                        dblNetadd = Math.Round(Convert.ToDouble(dblNetadd), 0, MidpointRounding.AwayFromZero);
                        dblGross = dblallowact2 + dblNetadd;
                        totalded1 = Convert.ToDouble(totalded);

                        sno = sno + 1;


                        fpsalary.Sheets[0].Cells[rowstr - 2, 1].CellType = chkcell;
                        fpsalary.Sheets[0].Cells[rowstr - 2, 1].Locked = false;
                        fpsalary.Sheets[0].Rows[rowstr - 3].Height = 40;
                        fpsalary.Sheets[0].Rows[rowstr - 2].Height = 40;
                        fpsalary.Sheets[0].Rows[rowstr - 1].Height = 40;

                        fpsalary.Sheets[0].Cells[rowstr - 2, 0].Text = sno.ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 1, 0].Text = sno.ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 2, 0].Tag = dept.ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 2, 0].Note = designation.ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 2, 2].Text = staffcode1.ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 1, 2].CellType = txt;
                        fpsalary.Sheets[0].Cells[rowstr - 1, 2].Text = joindate + "                                                             ";
                        fpsalary.Sheets[0].Cells[rowstr - 2, 2].Tag = staffcode1.ToString();
                        if (cblsearch.Items[36].Selected == true)
                        {
                            fpsalary.Sheets[0].Cells[rowstr - 2, 4].Text = title.ToString() + " " + staffname.ToString();
                        }
                        else
                        {
                            fpsalary.Sheets[0].Cells[rowstr - 2, 4].Text = staffname.ToString();
                        }
                        fpsalary.Sheets[0].Cells[rowstr - 1, 4].Text = designation.ToString() + "                                                             ";
                        fpsalary.Sheets[0].Cells[rowstr - 2, 5].Text = joindate.ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 1, 6].Text = payscale;// designation;barath 09.01.18
                        fpsalary.Sheets[0].Cells[rowstr - 1, 7].Text = desig_acronym.ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 2, 6].Text = dept + "                                                             ";
                        fpsalary.Sheets[0].Cells[rowstr - 2, 7].Text = dept_acrronym.ToString();

                        fpsalary.Sheets[0].Cells[rowstr - 2, 8].Text = payscale; // added by jairam 13-11-2014
                        fpsalary.Sheets[0].Cells[rowstr - 2, 7].Text = dept_acrronym.ToString();

                        if (cblsearch.Items[35].Selected == true && payscale.Trim() != "" && payscale != null)
                        {
                            fpsalary.Sheets[0].Cells[rowstr - 1, 6].Text = payscale;
                            fpsalary.Sheets[0].Cells[rowstr - 2, 7].Text = dept_acrronym.ToString();
                        }
                        else
                        {
                            fpsalary.Sheets[0].Cells[rowstr - 2, 6].Text = dept;
                            fpsalary.Sheets[0].Cells[rowstr - 2, 7].Text = dept_acrronym.ToString();
                        }
                        //==============End==================
                        fpsalary.Sheets[0].Cells[rowstr - 2, 9].Text = category.ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 2, fpsalary.Sheets[0].ColumnCount - 1].Text = "                                                     ";
                        fpsalary.Sheets[0].Cells[rowstr - 1, fpsalary.Sheets[0].ColumnCount - 1].Text = "                                                     ";
                        fpsalary.Sheets[0].Cells[rowstr - 1, fpsalary.Sheets[0].ColumnCount - 1].BackColor = Color.White;
                        fpsalary.Sheets[0].Cells[rowstr - 1, fpsalary.Sheets[0].ColumnCount - 1].ForeColor = Color.White;
                        fpsalary.Sheets[0].Cells[rowstr - 2, fpsalary.Sheets[0].ColumnCount - 1].ForeColor = Color.White;
                        fpsalary.Sheets[0].Cells[rowstr - 2, fpsalary.Sheets[0].ColumnCount - 1].BackColor = Color.White;

                        string mobile = "";
                        string email = "";
                        dscnt.Tables[2].DefaultView.RowFilter = " staff_code='" + staffcode1 + "'";
                        dvstaffatt = dscnt.Tables[2].DefaultView;
                        if (dvstaffatt.Count > 0)
                        {
                            string dob = dvstaffatt[0]["dob"].ToString();
                            fpsalary.Sheets[0].Cells[rowstr - 2, 3].CellType = txt;
                            fpsalary.Sheets[0].Cells[rowstr - 1, 3].CellType = txt;
                            fpsalary.Sheets[0].Cells[rowstr - 2, 3].Text = dob.ToString();

                            fpsalary.Sheets[0].Cells[rowstr - 1, 3].Text = retierdate.ToString();
                            mobile = dvstaffatt[0]["per_mobileno"].ToString();
                            email = dvstaffatt[0]["email"].ToString();
                            if (mobile.Trim() != null && mobile.Trim() != "" && mobile.Trim().ToLower() != "nil")
                            {
                                fpsalary.Sheets[0].Cells[rowstr - 2, fpsalary.Sheets[0].ColumnCount - 3].Text = mobile.ToString();
                            }
                            if (email.Trim() != null && email.Trim() != "" && email.Trim().ToLower() != "nil")
                            {
                                fpsalary.Sheets[0].Cells[rowstr - 2, fpsalary.Sheets[0].ColumnCount - 2].Text = email.ToString();
                            }
                        }
                        //fpsalary.Sheets[0].SpanModel.Add(rowstr - 2, 3, 2, 1);
                        fpsalary.Sheets[0].SpanModel.Add(rowstr - 2, fpsalary.Sheets[0].ColumnCount - 2, 2, 1);
                        fpsalary.Sheets[0].SpanModel.Add(rowstr - 2, fpsalary.Sheets[0].ColumnCount - 3, 2, 1);
                        fpsalary.Sheets[0].Cells[rowstr - 1, 5].Text = retierdate.ToString();
                        string curlop = string.Empty;
                        string prelop = string.Empty;
                        double totallop1 = 0;
                        dscnt.Tables[0].DefaultView.RowFilter = "staff_code='" + staffcode1 + "' and PayYear='" + ddlyear2.SelectedValue.ToString() + "' and PayMonth='" + cblmonth.SelectedValue.ToString() + "'";
                        dvstaffatt = dscnt.Tables[0].DefaultView;
                        if (dvstaffatt.Count > 0)
                        {
                            curlop = dvstaffatt[0]["cur_lop"].ToString();
                            prelop = dvstaffatt[0]["pre_lop"].ToString();
                            totallop1 = Convert.ToDouble(curlop) + Convert.ToDouble(prelop); // modify by jairam 05-12-2014
                        }

                        string basicpay56 = string.Empty;
                        string gradepay56 = string.Empty;
                        string daamtpay = string.Empty;
                        string bsichra = string.Empty;
                        dscnt.Tables[0].DefaultView.RowFilter = "staff_code='" + staffcode1 + "' and PayYear='" + ddlyear2.SelectedValue.ToString() + "' and PayMonth='" + cblmonth.SelectedValue.ToString() + "'";
                        dvstaffatt = dscnt.Tables[0].DefaultView;
                        if (dvstaffatt.Count > 0)
                        {
                            basicpay56 = dvstaffatt[0]["basic_alone"].ToString();
                            gradepay56 = dvstaffatt[0]["grade_pay"].ToString();
                            daamtpay = dvstaffatt[0]["daamt"].ToString();
                            bsichra = dvstaffatt[0]["daamt"].ToString();
                        }

                        string dacount56 = string.Empty;
                        string hracount56 = string.Empty;
                        string scactcount56 = string.Empty;

                        string allowance = dscnt.Tables[0].Rows[stcnt]["allowances"].ToString();
                        string textallow = Convert.ToString(dscnt.Tables[0].Rows[stcnt]["Allowances"]);

                        string[] allowprocessone = textallow.Split(new Char[] { '\\' });
                        for (int v = 0; v <= allowprocessone.GetUpperBound(0); v++)
                        {
                            if (allowprocessone[v] != null && allowprocessone[v] != "")
                            {
                                string[] aloowcheck = allowprocessone[v].Split(';');
                                if (aloowcheck.GetUpperBound(0) >= 2)
                                {
                                    if (aloowcheck[0] == "DA" || aloowcheck[0].Trim().ToLower() == "dearness allowance")
                                    {
                                        dacount56 = Convert.ToString(aloowcheck[3]);
                                        dacount56 = Convert.ToString(Math.Round(Convert.ToDouble(dacount56), 0, MidpointRounding.AwayFromZero));//barath 06.06.17
                                    }
                                    else
                                        if (aloowcheck[0] == "HRA")
                                        {
                                            hracount56 = Convert.ToString(aloowcheck[3]);
                                            hracount56 = Convert.ToString(Math.Round(Convert.ToDouble(hracount56), 0, MidpointRounding.AwayFromZero));//barath 06.06.17
                                            bsichra = Convert.ToString(aloowcheck[2]);
                                        }
                                        else
                                            if (aloowcheck[0] == "SCA")
                                            {
                                                scactcount56 = Convert.ToString(aloowcheck[3]);
                                            }
                                }
                            }
                        }
                        if (dacount56 == "")
                        {
                            dacount56 = "+" + "0";
                        }
                        else
                        {
                            dacount56 = "+" + dacount56;
                        }
                        if (hracount56 == "")
                        {
                            hracount56 = "+" + "0";
                        }
                        else
                        {
                            hracount56 = "+" + hracount56;
                        }
                        if (scactcount56 == "")
                        {
                            scactcount56 = "+" + "0";
                        }
                        else
                        {
                            scactcount56 = "+" + scactcount56;
                        }
                        if (bsichra == "")
                        {
                            bsichra = "+" + "0";
                        }
                        else
                        {
                            bsichra = "+" + bsichra;
                        }
                        int gross = Convert.ToInt32(dblGross);
                        double gradepay57 = Convert.ToDouble(gradepay56);
                        double daamtpay56 = Convert.ToDouble(daamtpay);
                        double basic = Convert.ToDouble(basicpay);

                        if (cblsearch.Items[10].Selected == true)
                        {
                            if (basicpay.ToString().Trim() != "0")
                            {
                                Double basicpayvalues = Convert.ToDouble(basicpay);
                                basicpayvalues = Math.Round(basicpayvalues, 0, MidpointRounding.AwayFromZero);
                                fpsalary.Sheets[0].Cells[rowstr - 2, 15].Text = basicpayvalues.ToString();
                                string headval = "Basic Pay";
                                if (hatbf.Contains("Basic Pay"))
                                {
                                    Double getvel = Convert.ToDouble(hatbf[headval]);
                                    getvel = getvel + Convert.ToDouble(basicpay);
                                    hatbf[headval] = getvel;
                                    getvel = 0;
                                    getvel = Convert.ToDouble(hatco[headval]);
                                    getvel = getvel + Convert.ToDouble(basicpay);
                                    hatco[headval] = getvel;
                                }
                            }
                        }
                        else
                        {
                            if (Baicpayarr.ToString().Trim() != "0")
                            {
                                Double basicpayvalues = Convert.ToDouble(Baicpayarr);
                                basicpayvalues = Math.Round(basicpayvalues, 0, MidpointRounding.AwayFromZero);
                                fpsalary.Sheets[0].Cells[rowstr - 2, 15].Text = basicpayvalues.ToString();
                                string headval = "Basic Pay";
                                if (hatbf.Contains("Basic Pay"))
                                {
                                    Double getvel = Convert.ToDouble(hatbf[headval]);
                                    getvel = getvel + Convert.ToDouble(Baicpayarr);
                                    hatbf[headval] = getvel;
                                    getvel = 0;
                                    getvel = Convert.ToDouble(hatco[headval]);
                                    getvel = getvel + Convert.ToDouble(Baicpayarr);
                                    hatco[headval] = getvel;
                                }
                            }
                        }
                        fpsalary.Sheets[0].Cells[rowstr - 2, 10].Text = Convert.ToString(totallop1); // modify by jairam 05-12-2014
                        fpsalary.Sheets[0].Cells[rowstr - 2, 11].Text = prelop.ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 2, 12].Text = curlop.ToString();
                        if (gradepay.ToString().Trim() != "0" && gradepay.ToString().Trim() != "0.00")
                        {
                            Double gradepayvalues = Convert.ToDouble(gradepay);
                            gradepayvalues = Math.Round(gradepayvalues, 0, MidpointRounding.AwayFromZero);
                            fpsalary.Sheets[0].Cells[rowstr - 1, 15].Text = gradepayvalues.ToString();
                            string headval = "Grade Pay";
                            if (hatbf.Contains(headval))
                            {
                                Double getvel = Convert.ToDouble(hatbf[headval]);
                                getvel = getvel + Convert.ToDouble(gradepay);
                                getvel = Math.Round(getvel, 0, MidpointRounding.AwayFromZero);
                                hatbf[headval] = getvel;
                                getvel = 0;
                                getvel = Convert.ToDouble(hatco[headval]);
                                getvel = getvel + Convert.ToDouble(gradepay);
                                getvel = Math.Round(getvel, 0, MidpointRounding.AwayFromZero);
                                hatco[headval] = getvel;
                            }
                        }
                        allowance = dscnt.Tables[0].Rows[stcnt]["allowances"].ToString();
                        string alowancesplit;
                        string[] allowanmce_arr1 = allowance.Split('\\');
                        for (int i = 0; i < allowanmce_arr1.GetUpperBound(0); i++)
                        {
                            alowancesplit = allowanmce_arr1[i];
                            string[] allowanceda;
                            allowanceda = alowancesplit.Split(';');
                            string da;
                            string da3;
                            double ds3 = 0;
                            string dblallowact;
                            double dblallowact1 = 0;
                            dblallowact2 = 0;

                            da = allowanceda[0];
                            da3 = allowanceda[3];
                            dblallowact = allowanceda[3];
                            ds3 = Convert.ToDouble(da3);
                            //ds3 = Math.Round(ds3, 0);
                            if (cbRound.Checked)//31.01.18
                                ds3 = Math.Round(Convert.ToDouble(da3), 0, MidpointRounding.AwayFromZero);//barath 06.06.17
                            dblallowact1 = Convert.ToDouble(dblallowact);
                            dblallowact1 = Math.Round(dblallowact1, 0);
                            dblallowact2 = dblallowact2 + (ds3 - dblallowact1);
                            int rowcnt = 2;
                            for (int k = 14; k <= colcount1 - 2; k++)
                            {
                                rowcnt = 2;
                                for (int gk = 1; gk <= 2; gk++)
                                {
                                    string headvalte = fpsalary.Sheets[0].ColumnHeader.Cells[gk, k].Text;
                                    string headval = fpsalary.Sheets[0].ColumnHeader.Cells[gk, k].Note;
                                    if (da == headvalte)
                                    {
                                        if (ds3.ToString().Trim() != "0")
                                        {
                                            if (hatbf.Contains(headvalte))
                                            {
                                                Double getvel = Convert.ToDouble(hatbf[headvalte]);
                                                getvel = getvel + ds3;
                                                hatbf[headvalte] = getvel;
                                                getvel = 0;
                                                getvel = Convert.ToDouble(hatco[headvalte]);
                                                getvel = getvel + ds3;
                                                hatco[headvalte] = getvel;
                                            }
                                            if (hatpfdeduction.Contains(headvalte))
                                            {
                                                pdfdeductionamount = pdfdeductionamount + Convert.ToDouble(ds3);
                                            }
                                            fpsalary.Sheets[0].Cells[rowstr - rowcnt, k].Text = ds3.ToString();
                                        }
                                    }
                                    else
                                    {
                                        rowcnt--;
                                    }
                                }
                            }
                        }
                        int deductcnt = 2;
                        string[] deduction_arr1; ;
                        string deductionsplit1;
                        deduction_arr1 = deduction.Split('\\');
                        for (int sp = 0; sp < deduction_arr1.GetUpperBound(0); sp++)
                        {
                            deductionsplit1 = deduction_arr1[sp];
                            string[] deductionda;
                            deductionda = deductionsplit1.Split(';');
                            string de;
                            string de3;
                            de = deductionda[0];
                            de3 = deductionda[3];
                            for (int p = 12; p <= colcount1 - 1; p++)
                            {
                                deductcnt = 3;
                                deductcnt = 2;
                                for (int decnt = 1; decnt <= 2; decnt++)
                                {
                                    string headval2t = fpsalary.Sheets[0].ColumnHeader.Cells[decnt, p].Text;
                                    string headval2 = fpsalary.Sheets[0].ColumnHeader.Cells[decnt, p].Note;
                                    if (de == headval2t)
                                    {
                                        //double de3val = Math.Round(Convert.ToDouble(de3), 0);
                                        double de3val = 0;
                                        double.TryParse(de3, out de3val);
                                        if (cbRound.Checked)//31.01.18
                                            de3val = Math.Round(Convert.ToDouble(de3), 0, MidpointRounding.AwayFromZero);//barath 06.06.17
                                        if (de3.ToString().Trim() != "0")
                                        {
                                            if (hatbf.Contains(headval2t))
                                            {
                                                Double getvel = Convert.ToDouble(hatbf[headval2t]);
                                                getvel = getvel + de3val;
                                                hatbf[headval2t] = getvel;
                                                getvel = 0;
                                                getvel = Convert.ToDouble(hatco[headval2t]);
                                                getvel = getvel + de3val;
                                                hatco[headval2t] = getvel;
                                            }
                                            fpsalary.Sheets[0].Cells[rowstr - deductcnt, p].Text = de3val.ToString();
                                        }
                                    }
                                    else
                                    {
                                        deductcnt--;
                                    }
                                }
                            }
                        }
                        fpsalary.Sheets[0].AddSpanCell(rowstr - 2, 14, 2, 1);// added by sridhar 18 sep 2014
                        if (cblsearch.Items[36].Selected == true)
                        {
                            pdfdeductionamount = Math.Round(pdfdeductionamount, 0, MidpointRounding.AwayFromZero);
                            fpsalary.Sheets[0].Cells[rowstr - 2, pfea].Text = pdfdeductionamount.ToString();
                            fpsalary.Sheets[0].AddSpanCell(rowstr - 2, pfea, 2, 1);
                            if (hatbf.Contains("Provident Fund Earning"))
                            {
                                Double getvel = Convert.ToDouble(hatbf["Provident Fund Earning"]);
                                getvel = getvel + Convert.ToDouble(pdfdeductionamount);
                                getvel = Math.Round(getvel, 0, MidpointRounding.AwayFromZero);
                                hatbf["Provident Fund Earning"] = getvel;
                                getvel = 0;
                                getvel = Convert.ToDouble(hatco["Provident Fund Earning"]);
                                getvel = getvel + Convert.ToDouble(pdfdeductionamount);
                                getvel = Math.Round(getvel, 0, MidpointRounding.AwayFromZero);
                                hatco["Provident Fund Earning"] = getvel;
                            }
                        }
                        Double pay_band = Convert.ToDouble(paybandnew);// added by sridhar 18 sep 2014  start


                        pay_band = Math.Round(pay_band, 0, MidpointRounding.AwayFromZero);
                        fpsalary.Sheets[0].Cells[rowstr - 2, 14].Text = pay_band.ToString();
                        string headxse = "Pay Band";


                        if (hatbf.Contains(headxse))
                        {
                            Double getvel = Convert.ToDouble(hatbf[headxse]);
                            getvel = getvel + Convert.ToDouble(paybandnew);
                            getvel = Math.Round(getvel, 0, MidpointRounding.AwayFromZero);
                            hatbf[headxse] = getvel;
                            getvel = 0;
                            getvel = Convert.ToDouble(hatco[headxse]);
                            getvel = getvel + Convert.ToDouble(paybandnew);
                            getvel = Math.Round(getvel, 0, MidpointRounding.AwayFromZero);
                            hatco[headxse] = getvel;
                        }

                        // added by sridhar 18 sep 2014  end





                        fpsalary.Sheets[0].AddSpanCell(rowstr - 2, colheder - 1, 2, 1);
                        //if (cblsearch.Items[22].Selected == true)
                        //{
                        //fpsalary.Sheets[0].Cells[rowstr - 2, colheder - 1].Text = dblGross.ToString();

                        //}
                        //else
                        //{
                        Double grossvalue = Convert.ToDouble(netadd);
                        grossvalue = Math.Round(grossvalue, 0, MidpointRounding.AwayFromZero);
                        fpsalary.Sheets[0].Cells[rowstr - 2, colheder - 1].Text = grossvalue.ToString();
                        string headval1 = "GROSS PAY";
                        if (hatbf.Contains(headval1))
                        {
                            Double getvel = Convert.ToDouble(hatbf[headval1]);
                            //getvel = Math.Round(getvel, 0, MidpointRounding.AwayFromZero);
                            getvel = getvel + Convert.ToDouble(netadd);
                            hatbf[headval1] = getvel;
                            getvel = 0;
                            getvel = Convert.ToDouble(hatco[headval1]);
                            //getvel = Math.Round(getvel, 0, MidpointRounding.AwayFromZero);
                            getvel = getvel + Convert.ToDouble(netadd);
                            hatco[headval1] = getvel;
                        }
                        //}
                        fpsalary.Sheets[0].AddSpanCell(rowstr - 2, colcount1 - 3, 2, 1);
                        fpsalary.Sheets[0].AddSpanCell(rowstr - 2, colcount1 - 2, 2, 1);
                        fpsalary.Sheets[0].AddSpanCell(rowstr - 2, colcount1 - 1, 2, 1);

                        totalded1 = Math.Round(totalded1, 0, MidpointRounding.AwayFromZero); // Importent jairam
                        fpsalary.Sheets[0].Cells[rowstr - 2, colcount1 - 7].Text = totalded1.ToString();

                        if (cblsearch.Items[11].Selected == true)
                        {

                            double lopamount = Convert.ToDouble(dscnt.Tables[0].Rows[stcnt]["lop"]);  // Added By  jairam 06-12-2014 
                            lopamount = Math.Round(lopamount, 0);
                            fpsalary.Sheets[0].Cells[rowstr - 2, colcount1 - 6].Text = lopamount.ToString();
                            fpsalary.Sheets[0].Columns[colcount1 - 6].Visible = true;
                        }
                        else
                        {
                            fpsalary.Sheets[0].Columns[colcount1 - 6].Visible = false;
                        }

                        headval1 = "TOTAL DEDUCTIONS";
                        if (hatbf.Contains(headval1))
                        {
                            Double getvel = Convert.ToDouble(hatbf[headval1]);
                            getvel = getvel + Convert.ToDouble(totalded1);
                            getvel = Math.Round(getvel, 0, MidpointRounding.AwayFromZero);
                            hatbf[headval1] = getvel;
                            getvel = 0;
                            getvel = Convert.ToDouble(hatco[headval1]);
                            getvel = getvel + Convert.ToDouble(totalded1);
                            getvel = Math.Round(getvel, 0, MidpointRounding.AwayFromZero);
                            hatco[headval1] = getvel;
                        }
                        fpsalary.Sheets[0].AddSpanCell(rowstr - 2, colcount1 - 6, 2, 1);
                        fpsalary.Sheets[0].AddSpanCell(rowstr - 2, colcount1 - 4, 2, 1);
                        Double netsal = Convert.ToDouble(netpay);
                        netsal = Math.Round(netsal, 0, MidpointRounding.AwayFromZero);
                        fpsalary.Sheets[0].Cells[rowstr - 2, colcount1 - 4].Text = netsal.ToString();// +"                                                             ";//barath 09.01.18
                        fpsalary.Sheets[0].Cells[rowstr - 2, colcount1 - 1].Text = "                                                                                                                        ";//barath 09.01.18
                        fpsalary.Sheets[0].Cells[rowstr - 2, colcount1 - 4].VerticalAlign = VerticalAlign.Middle;
                        fpsalary.Sheets[0].Cells[rowstr - 2, colcount1 - 5].Text = accountno.ToString();
                        fpsalary.Sheets[0].Cells[rowstr - 2, colcount1 - 5].CellType = txt;
                        if (hatbf.Contains("NET PAY"))
                        {
                            Double getvel = Convert.ToDouble(hatbf["NET PAY"]);
                            getvel = getvel + Convert.ToDouble(netpay);
                            getvel = Math.Round(getvel, 0, MidpointRounding.AwayFromZero);
                            hatbf["NET PAY"] = getvel;
                            getvel = 0;
                            getvel = Convert.ToDouble(hatco["NET PAY"]);
                            getvel = getvel + Convert.ToDouble(netpay);
                            getvel = Math.Round(getvel, 0, MidpointRounding.AwayFromZero);
                            hatco["NET PAY"] = getvel;
                        }
                    }
                    else
                    {
                        if (fpsalary.Sheets[0].RowCount - 1 > 0)
                        {
                            flag = true;
                            staffcount = 0;
                            fpsalary.Sheets[0].RowCount = fpsalary.Sheets[0].RowCount + 2;
                            fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 2, 0, 2, 13);
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Text = "C/O";
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Text = "C/O";
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Font.Bold = true;
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Font.Size = FontUnit.Large;
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].HorizontalAlign = HorizontalAlign.Right;
                            for (int decnt = 0; decnt <= 2; decnt++)
                            {
                                for (int p = 12; p <= colcount1 - 1; p++)
                                {
                                    string headval2 = fpsalary.Sheets[0].ColumnHeader.Cells[decnt, p].Text;


                                    //if (fpsalary.Sheets[0].ColumnHeader.Cells[decnt, p].Note != null)
                                    //{
                                    //    if (fpsalary.Sheets[0].ColumnHeader.Cells[decnt, p].Note.ToString() != "")
                                    //    {
                                    //        headval2 = fpsalary.Sheets[0].ColumnHeader.Cells[decnt, p].Note;
                                    //    }
                                    //}





                                    if (hatco.Contains(headval2))
                                    {
                                        int rowset = 0;
                                        if (decnt == 0)
                                        {
                                            rowset = 2;
                                        }
                                        else
                                        {
                                            rowset = 3 - decnt;
                                        }
                                        string gettot = hatco[headval2].ToString();
                                        double nettot = Convert.ToDouble(gettot.ToString()); // added by jairam 19-11-2014
                                        nettot = Math.Round(nettot, 0, MidpointRounding.AwayFromZero);
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, p].Text = Convert.ToString(nettot);
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, p].Font.Bold = true;
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, p].Font.Size = FontUnit.Large;
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, p].VerticalAlign = VerticalAlign.Middle;//barath 09.01.18
                                        fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, p].HorizontalAlign = HorizontalAlign.Right;

                                        hatco[headval2] = 0;
                                    }

                                }
                            }
                        }
                        total_row_count = fpsalary.Sheets[0].RowCount;
                        stcnt--;
                    }
                }
                btnpayslip.Visible = true;
                salcer.Visible = true;
                chkdays.Visible = true;

                for (int cl = 0; cl < fpsalary.Sheets[0].ColumnCount; cl++)
                {
                    if (cl != 1)
                    {
                    }
                    else
                    {
                    }
                }
            }
            else
            {
                lblexcel.Visible = false;
                txtexcel.Visible = false;
                btnexcel.Visible = false;
                fpsalary.Visible = false;
                btnprintmaster.Visible = false;
                Button3.Visible = false;
                btnprintmaster.Visible = false;
                Printcontrol.Visible = false;
                GridPrintmaster.Visible = false;
                lblnorec.Visible = true;
                emailpanel.Visible = false;
                txtsms.Visible = true;
                btnsendsms.Visible = false;
            }
            if (fpsalary.Sheets[0].RowCount - 1 > 0)
            {
                fpsalary.Sheets[0].RowCount = fpsalary.Sheets[0].RowCount + 2;
                fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 2, 0, 2, 13);
                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Text = "C/O";
                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Text = "C/O";
                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Font.Bold = true;
                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Font.Size = FontUnit.Large;
                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].HorizontalAlign = HorizontalAlign.Right;
                for (int decnt = 0; decnt <= 2; decnt++)
                {
                    for (int p = 12; p <= colcount1 - 1; p++)
                    {
                        string headval2 = fpsalary.Sheets[0].ColumnHeader.Cells[decnt, p].Text;
                        //if (fpsalary.Sheets[0].ColumnHeader.Cells[decnt, p].Note != null)
                        //{
                        //    if (fpsalary.Sheets[0].ColumnHeader.Cells[decnt, p].Note.ToString() != "")
                        //    {
                        //        headval2 = fpsalary.Sheets[0].ColumnHeader.Cells[decnt, p].Note;
                        //    }
                        //}
                        if (hatco.Contains(headval2))
                        {
                            int rowset = 0;
                            if (decnt == 0)
                            {
                                rowset = 2;
                            }
                            else
                            {
                                rowset = 3 - decnt;
                            }
                            string gettot = hatco[headval2].ToString();
                            // added by Srinath 19-11-2014
                            double nettot = Convert.ToDouble(gettot.ToString());
                            nettot = Math.Round(nettot, 0, MidpointRounding.AwayFromZero);
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, p].Text = nettot.ToString();
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, p].Font.Bold = true;
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, p].Font.Size = FontUnit.Large;
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, p].HorizontalAlign = HorizontalAlign.Right;
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, p].VerticalAlign = VerticalAlign.Middle;//barath 09.01.18
                            hatco[headval2] = 0;
                        }

                    }
                }
                fpsalary.Sheets[0].RowCount = fpsalary.Sheets[0].RowCount + 2;
                fpsalary.Sheets[0].SpanModel.Add(fpsalary.Sheets[0].RowCount - 2, 0, 2, 13);
                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Text = "TOTAL";
                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 1, 0].Text = "TOTAL";
                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Font.Bold = true;
                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].Font.Size = FontUnit.Large;
                fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - 2, 0].HorizontalAlign = HorizontalAlign.Right;
                for (int gk = 0; gk <= 2; gk++)
                {
                    for (int k = 13; k <= colcount1 - 1; k++)
                    {
                        int rowset = 0;
                        if (gk == 0)
                        {
                            rowset = 2;
                        }
                        else
                        {
                            rowset = 3 - gk;
                        }
                        string headval = fpsalary.Sheets[0].ColumnHeader.Cells[gk, k].Text;
                        //if (fpsalary.Sheets[0].ColumnHeader.Cells[gk, k].Note != null)
                        //{
                        //    if (fpsalary.Sheets[0].ColumnHeader.Cells[gk, k].Note.ToString() != "")
                        //    {
                        //        headval = fpsalary.Sheets[0].ColumnHeader.Cells[gk, k].Note;
                        //    }
                        //}
                        if (hatbf.Contains(headval))
                        {
                            string values = hatbf[headval].ToString();
                            double nettot = Convert.ToDouble(values.ToString());
                            nettot = Math.Round(nettot, 0, MidpointRounding.AwayFromZero);
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, k].Text = nettot.ToString();
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, k].Font.Bold = true;
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, k].Font.Size = FontUnit.Large;
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, k].HorizontalAlign = HorizontalAlign.Right;
                            fpsalary.Sheets[0].Cells[fpsalary.Sheets[0].RowCount - rowset, k].VerticalAlign = VerticalAlign.Middle;//barath 09.01.18

                        }
                    }
                }

            }

            if (fpsalary.Sheets[0].RowCount > 10)
            {
                fpsalary.Height = 800;
            }
            else
            {
                fpsalary.Height = 400;
            }


            fpsalary.Sheets[0].PageSize = fpsalary.Sheets[0].RowCount;
            try
            {
                string setvalue = "";
                for (int sv = 0; sv < cblsearch.Items.Count; sv++)
                {
                    if (cblsearch.Items[sv].Selected == true)
                    {
                        if (setvalue == "")
                        {
                            setvalue = "" + sv + "";
                        }
                        else
                        {
                            setvalue = setvalue + "," + sv + "";
                        }
                    }
                }

                string strquery = "if exists (select * from Master_Settings where settings='Salary1 report') update Master_Settings set value='" + setvalue + "' where settings='Salary1 report' else insert into Master_Settings (settings,value) values('Salary1 report','" + setvalue + "')";
                int insert = d2.update_method_wo_parameter(strquery, "Text");
            }
            catch
            {
            }
        }
        catch (Exception ex)
        {
            lblnorec.Visible = true;
            lblnorec.Text = ex.ToString();
        }
    }
    public void clear()
    {
        btnpayslip.Visible = false;
        salcer.Visible = false;
        chkdays.Visible = false;
        Panel4.Visible = false;
        btnprintmaster.Visible = false;
        Button3.Visible = false;
        btnprintmaster.Visible = false;
        Printcontrol.Visible = false;
        GridPrintmaster.Visible = false;
        fpsalary.Visible = false;
        btnprintmaster.Visible = false;
        btnprintmaster.Visible = false;
        Printcontrol.Visible = false;
        btnexcel.Visible = false;
        lblexcel.Visible = false;
        txtexcel.Visible = false;
        btnexcel.Visible = false;
        txtexcel.Visible = false;
        lblexcel.Visible = false;
        fpsalary.Visible = false;
        btnslip.Visible = false;
        txtexcel.Text = "";
        txtexcel.Text = "";
        lblnorec.Visible = false;
        rddept.Visible = false;
        Button2.Visible = false;
        tn_format2.Visible = false;
        btnslip.Visible = false;
    }
    // added by sridhar 16 sep 2014
    protected void btnaddtemplate_Click(object sender, EventArgs e)
    {
        try
        {
            FpSpread2.Visible = true;
            // UpdatePanel1.Visible = true;
            // UpdatePanel2.Visible = true;
            templatepanel.Visible = true;
            lblpurpose.Visible = true;
            btnplus.Visible = true;
            btnminus.Visible = true;
            ddlpurpose.Visible = true;
            txtpurposemsg.Visible = true;
            btnsave.Visible = true;
            btnexit.Visible = true;
            lblerror.Visible = false;
            Dropdownload();
        }
        catch
        {

        }
    }
    protected void btnplus_Click(object sender, EventArgs e)
    {
        try
        {
            templatepanel.Enabled = false;
            purposepanel.Visible = true;
            lblpurposecaption.Visible = true;
            txtpurposecaption.Visible = true;
            btnpurposeadd.Visible = true;
            btnpurposeexit.Visible = true;
        }
        catch
        {
        }
    }
    protected void btnminus_Click(object sender, EventArgs e)
    {
        try
        {
            int i = 0;
            string strdelpurpose = "Delete from sms_purpose where temp_code = '" + ddlpurposemsg.SelectedValue + "'";
            i = d2.insert_method(strdelpurpose, hat, "Text");
            if (i == 1)
            {
                lblerror.Text = "Purpose deleted Successfully";
                lblerror.Visible = true;
                Dropdownload();
            }
            else
            {
                lblerror.Text = "Purpose deleted Failed";
                lblerror.Visible = true;
            }
        }
        catch
        {

        }
    }
    protected void btndeletetemplate_Click(object sender, EventArgs e)
    {
        try
        {
            Cellclick = true;

            if (Cellclick == true)
            {
                string activerow = "";
                string activecol = "";
                activerow = FpSpread2.ActiveSheetView.ActiveRow.ToString();
                activecol = FpSpread2.ActiveSheetView.ActiveColumn.ToString();
                int ar;
                int ac;
                ar = Convert.ToInt32(activerow.ToString());
                ac = Convert.ToInt32(activecol.ToString());
                if (ar != -1)
                {
                    string msg = FpSpread2.Sheets[0].GetText(ar, 1);
                    string strdeletequery = "delete   sms_template where Template='" + msg + "'";
                    int vvv = d2.insert_method(strdeletequery, hat, "");

                    if (vvv == 1)
                    {
                        lblerror.Visible = true;
                        lblerror.Text = "Delete Template Succefully";
                    }
                    else
                    {
                        lblerror.Text = "Delete Template  failed";
                    }
                }
                Spread2Go();
                Cellclick = false;
            }
        }
        catch
        {

        }
    }

    protected void ddlpurpose_SelectedIndexChanged(object sender, EventArgs e)
    {
        // Spread2Go();

        FpSpread2.Visible = true;

        try
        {

            FpSpread2.Sheets[0].ColumnHeaderVisible = false;
            FpSpread2.Sheets[0].SheetCorner.Columns[0].Visible = false;
            FpSpread2.Visible = true;

            //lblpurpose1.Visible = true;
            ddlpurpose.Visible = true;
            FpSpread2.Sheets[0].RowCount = 1;
            FpSpread2.Sheets[0].ColumnCount = 2;
            FpSpread2.Columns[1].Width = 900;

            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Text = "S.No";
            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Locked = true;

            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Font.Bold = true;
            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Text = "Template";
            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Locked = true;
            string gfg = ddlpurpose.SelectedValue.ToString();
            string gfvgj = ddlpurposemsg.Text;


            if (gfg == " ")
            {
                ds.Dispose();
                ds.Reset();

                string spread2query = "select ROW_NUMBER() OVER (ORDER BY  Template) as SrNo,Template from sms_template";
                ds = d2.select_method(spread2query, hat, "Text");
            }
            else
            {
                string spread2query1 = "select ROW_NUMBER() OVER (ORDER BY  Template) as SrNo,Template from sms_template where temp_code = " + ddlpurpose.SelectedValue + "";
                ds = d2.select_method(spread2query1, hat, "Text");
            }


            if (ds.Tables[0].Rows.Count > 0)
            {
                for (int dscnt = 0; dscnt < ds.Tables[0].Rows.Count; dscnt++)
                {
                    FpSpread2.Sheets[0].RowCount++;
                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(ds.Tables[0].Rows[dscnt]["SrNo"]);

                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Text = Convert.ToString(ds.Tables[0].Rows[dscnt]["Template"]);
                }
            }
            FpSpread2.Sheets[0].PageSize = FpSpread2.Sheets[0].RowCount;
            FpSpread2.SaveChanges();
        }
        catch
        {

        }
    }


    public void Dropdownload()
    {
        try
        {
            ds1.Dispose();
            ds1.Reset();
            string strpurposename = "select purpose,temp_code from sms_purpose where college_code = '" + Session["collegecode"].ToString() + "'";
            ds1 = d2.select_method(strpurposename, hat, "Text");
            if (ds1.Tables[0].Rows.Count > 0)
            {
                ddlpurpose.DataSource = ds1;
                ddlpurpose.DataTextField = "Purpose";
                ddlpurpose.DataValueField = "temp_code";
                ddlpurpose.DataBind();
                ddlpurpose.Items.Add(" ");
                ddlpurpose.Text = " ";

                ddlpurposemsg.DataSource = ds1;
                ddlpurposemsg.DataTextField = "Purpose";
                ddlpurposemsg.DataValueField = "temp_code";
                ddlpurposemsg.DataBind();
                ddlpurposemsg.Items.Add(" ");
                ddlpurposemsg.Text = " ";

            }
        }
        catch
        {

        }
    }


    protected void FpSpread2_CellClick(object sender, EventArgs e)
    {
        try
        {
            Cellclick = true;
        }
        catch
        {
        }
    }


    protected void FpSpread2_SelectedIndexChanged(Object sender, EventArgs e)
    {
        try
        {
            // Cellclick = true;

            if (Cellclick == true)
            {
                string activerow = "";
                string activecol = "";
                activerow = FpSpread2.ActiveSheetView.ActiveRow.ToString();
                activecol = FpSpread2.ActiveSheetView.ActiveColumn.ToString();
                int ar;
                int ac;
                ar = Convert.ToInt32(activerow.ToString());
                ac = Convert.ToInt32(activecol.ToString());
                if (ar != -1)
                {
                    txtsms.Text = FpSpread2.Sheets[0].GetText(ar, 1);
                }
                Cellclick = false;
            }
        }
        catch
        {
        }
    }

    protected void txtpurposemsg_TextChanged(object sender, EventArgs e)
    {

    }

    protected void btnsave_Click(object sender, EventArgs e)
    {
        try
        {
            int i = 0;
            string strsavequery = "insert into sms_template (temp_code,Template,college_code)values( '" + ddlpurposemsg.SelectedValue.ToString() + "','" + txtpurposemsg.Text.ToString() + "','" + Session["collegecode"].ToString() + "')";
            i = d2.insert_method(strsavequery, hat, "Text");
            if (i == 1)
            {
                lblerror.Visible = true;
                lblerror.Text = "Template added Succefully";
                Dropdownload();
            }
            else
            {
                lblerror.Text = "Template added failed";
            }
        }

        //Spread2Go();
        catch
        {
        }

    }


    protected void btnexit_Click(object sender, EventArgs e)
    {
        try
        {
            templatepanel.Visible = false;
            purposepanel.Visible = false;
            Dropdownload();
        }
        catch
        {
        }
    }


    protected void btnpurposeadd_Click(object sender, EventArgs e)
    {
        try
        {
            int i = 0;
            string strtxtpurpose = string.Empty;
            strtxtpurpose = txtpurposecaption.Text;
            if (strtxtpurpose != "")
            {
                string strinsertpurpose = "insert into sms_purpose (Purpose,college_code) values ( '" + strtxtpurpose + "','" + Session["collegecode"].ToString() + "')";
                i = d2.insert_method(strinsertpurpose, hat, "Text");
                //  txtpurposecaption.Text = "";
                if (i == 1)
                {
                    lblerror.Text = "Purpose added Successfully";
                    lblerror.Visible = true;
                    Dropdownload();
                    ddlpurposemsg.SelectedIndex = ddlpurposemsg.Items.IndexOf(ddlpurposemsg.Items.FindByText(txtpurposecaption.Text.Trim()));
                    ddlpurpose.SelectedIndex = ddlpurposemsg.Items.IndexOf(ddlpurposemsg.Items.FindByText(txtpurposecaption.Text.Trim()));
                    // purposepanel.Visible = false;
                }
                else
                {
                    lblerror.Text = "Purpose added failed";
                    lblerror.Visible = true;
                }
            }
            else
            {
                //lblsendmail.Text = "Please Enter the Purpose";
                //lblsendmail.Visible = true;
            }
            txtpurposecaption.Text = "";
            Spread2Go();
        }
        catch
        {
        }

    }
    protected void btnpurposeexit_Click(object sender, EventArgs e)
    {
        try
        {
            templatepanel.Enabled = true;
            purposepanel.Visible = false;
        }
        catch
        {
        }
    }


    public void Spread2Go()
    {
        try
        {
            FpSpread2.Sheets[0].ColumnHeaderVisible = false;

            FpSpread2.Sheets[0].SheetCorner.Columns[0].Visible = false;
            //FpSpread2.Visible = true;

            //lblpurpose1.Visible = true;
            //ddlpurpose.Visible = true;
            FpSpread2.Sheets[0].RowCount = 1;
            FpSpread2.Sheets[0].ColumnCount = 2;
            FpSpread2.Columns[1].Width = 900;

            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Font.Bold = true;
            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Text = "S.No";
            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Locked = true;
            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Font.Bold = true;
            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Text = "Template";
            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Locked = true;


            string spread2query1 = "select ROW_NUMBER() OVER (ORDER BY  Template) as SrNo,Template from sms_template where college_code='" + Session["collegecode"].ToString() + "'";
            ds = d2.select_method(spread2query1, hat, "Text");

            if (ds.Tables[0].Rows.Count > 0)
            {
                for (int dscnt = 0; dscnt < ds.Tables[0].Rows.Count; dscnt++)
                {
                    FpSpread2.Sheets[0].RowCount++;
                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(ds.Tables[0].Rows[dscnt]["SrNo"]);

                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Text = Convert.ToString(ds.Tables[0].Rows[dscnt]["Template"]);
                }
            }
            FpSpread2.Sheets[0].PageSize = FpSpread2.Sheets[0].RowCount;
            FpSpread2.SaveChanges();
        }
        catch
        {

        }
    }


    // added by sridhar END 16 sep 2014
    protected void ddlsmstype_SelectedIndexChanged(object sender, EventArgs e)
    {
        string settext = "";
        if (ddlsmstype.SelectedValue == "Automatic")
        {
            lblpurpose1.Visible = false;
            ddlpurpose.Visible = false;
            FpSpread2.Visible = false;
            btnaddtemplate.Visible = false;
            btndeletetemplate.Visible = false;
            string year = d2.GetFunction("select CONVERT(CHAR(4), to_date, 120) from hrpaymonths where paymonthnum='" + cblmonth.SelectedItem.Value.ToString() + "' and college_Code=" + Session["collegecode"].ToString() + ""); // Added by jairam 13-11-2014 
            settext = "Your salary for the month of " + cblmonth.SelectedItem.Text + " - " + year + "- Rs.$Salary$ has been credited to your account-$Account No$";
            txtsms.Enabled = false;
        }
        else if (ddlsmstype.SelectedValue == "Template With Salary")
        {
            lblpurpose1.Visible = true;
            ddlpurpose.Visible = true;
            FpSpread2.Visible = true;
            btnaddtemplate.Visible = true;
            btndeletetemplate.Visible = true;
            txtsms.Enabled = true;
        }
        else if (ddlsmstype.SelectedValue == "Template With Out Salary")
        {
            lblpurpose1.Visible = true;
            ddlpurpose.Visible = true;
            FpSpread2.Visible = true;
            btnaddtemplate.Visible = true;
            btndeletetemplate.Visible = true;
            txtsms.Enabled = true;
        }
        else if (ddlsmstype.SelectedValue == "Template With LOP")
        {
            lblpurpose1.Visible = false;
            ddlpurpose.Visible = false;
            FpSpread2.Visible = false;
            btnaddtemplate.Visible = false;
            btndeletetemplate.Visible = false;
            string year = d2.GetFunction("select CONVERT(CHAR(4), to_date, 120) from hrpaymonths where paymonthnum='" + cblmonth.SelectedItem.Value.ToString() + "' and college_Code=" + Session["collegecode"].ToString() + "");
            settext = "Your salary for the month of " + cblmonth.SelectedItem.Text + " - " + year + " is Rs. $Salary$ with  $ Lop Days $ LOP(s) - (LOP Date(s)).";
            txtsms.Enabled = false;
        }
        txtsms.Text = settext;
    }

    //protected void cbinclude_checkedchanged(object sender, EventArgs e)
    //{
    //    try
    //    {
    //        txt_slipinclude.Text = "--Select--";
    //        if (cbinclude.Checked == true)
    //        {

    //            for (int i = 0; i < cblinclude.Items.Count; i++)
    //            {
    //                cblinclude.Items[i].Selected = true;
    //                txt_slipinclude.Text = "Include(" + (cblinclude.Items.Count) + ")";
    //            }
    //        }
    //        else
    //        {
    //            for (int i = 0; i < cblinclude.Items.Count; i++)
    //            {
    //                cblinclude.Items[i].Selected = false;

    //            }
    //            txt_slipinclude.Text = "--Select--";
    //        }
    //    }
    //    catch
    //    {
    //    }
    //}
    //protected void cblinclude_selectedchanged(object sender, EventArgs e)
    //{
    //    int ddlcount = 0;
    //    try
    //    {
    //        txt_slipinclude.Text = "--Select--";

    //        string value = "";
    //        string code = "";
    //        for (int i = 0; i < cblinclude.Items.Count; i++)
    //        {

    //            if (cblinclude.Items[i].Selected == true)
    //            {

    //                value = cblinclude.Items[i].Text;
    //                code = cblinclude.Items[i].Value.ToString();
    //                ddlcount = ddlcount + 1;
    //                txt_slipinclude.Text = "Include(" + ddlcount.ToString() + ")";
    //            }



    //        }
    //        if (ddlcount == 0)
    //            txt_slipinclude.Text = "---Select---";
    //    }
    //    catch
    //    {

    //    }
    //}

    public static string ConvertNumbertoWords(int number)  // Added by jairam 12-12-2014
    {
        if (number == 0)
            return "Zero";
        if (number < 0)
            return "minus " + ConvertNumbertoWords(Math.Abs(number));
        string words = "";
        if ((number / 100000) > 0)
        {
            words += ConvertNumbertoWords(number / 100000) + " Lakhs";
            number %= 100000;
        }
        if ((number / 1000) > 0)
        {
            words += ConvertNumbertoWords(number / 1000) + " Thousand ";
            number %= 1000;
        }
        if ((number / 100) > 0)
        {
            words += ConvertNumbertoWords(number / 100) + "  Hundred ";
            number %= 100;
        }
        if (number > 0)
        {
            if (words != "")
                words += "And ";
            var unitsMap = new[] { "Zero", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen" };
            var tensMap = new[] { "Zero", "Ten", "Twenty", "Thirty", "Fourty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety" };

            if (number < 20)
                words += unitsMap[number];
            else
            {
                words += tensMap[number / 10];
                if ((number % 10) > 0)
                    words += " " + unitsMap[number % 10];
            }
        }
        return words;
    }

    protected void cbAuthor_CheckedChanged(object sender, EventArgs e)
    {
        try
        {
            if (cbAuthor.Checked == true)
            {
                txt_author.Enabled = true;
            }
            else
            {
                txt_author.Enabled = false;
            }
        }
        catch
        {
        }
    }

    //***************Added by senthil 09-04-2015***************
    protected void salcer_Click(object sender, EventArgs e)//delsityni
    {
        try
        {
            DataSet ds = new DataSet();
            fpsalary.SaveChanges();
            Font Fontbold = new Font("Book Antiqua", 18, FontStyle.Bold);
            Font Fontbold1 = new Font("Book Antiqua", 20, FontStyle.Bold);
            Font Fontsmall = new Font("Book Antiqua", 16, FontStyle.Regular);
            Font Fontsmall1 = new Font("Book Antiqua", 13, FontStyle.Bold);
            Gios.Pdf.PdfDocument mydocument = new Gios.Pdf.PdfDocument(PdfDocumentFormat.InCentimeters(30, 40));
            string str = "select * from incentives_master where college_code='" + Session["collegecode"].ToString() + "'";
            ds = d2.select_method_wo_parameter(str, "Text");
            string allowmaster = "";
            string deductmaster = "";
            if (ds.Tables[0].Rows.Count > 0)
            {
                allowmaster = ds.Tables[0].Rows[0]["allowances"].ToString();
                deductmaster = ds.Tables[0].Rows[0]["deductions"].ToString();
            }
            SortedDictionary<string, string> dict = new SortedDictionary<string, string>();
            string[] spdet = deductmaster.Split(';');
            for (int d = 0; d <= spdet.GetUpperBound(0); d++)
            {
                string[] spdedet = spdet[d].Split('\\');
                if (spdedet.GetUpperBound(0) >= 1)
                {
                    string val = spdedet[0];
                    string val1 = spdedet[1];
                    dict.Add(val, val1);
                }
            }
            string date3 = Txtentryfrom.Text.ToString();
            string datefrom3;
            int monthname1;
            string monyear;
            string monthname2 = "";
            int monthnamenum;
            string yearto = "";
            string monyearto = "";
            string[] split = date3.Split(new Char[] { '/' });
            int totlastaff = 0;
            int left1 = 70;
            int left3 = 423;
            int incrre = 1;
            for (int res = incrre; res <= Convert.ToInt32(fpsalary.Sheets[0].RowCount) - 1; res = res + incrre)
            {
                string text = fpsalary.Sheets[0].Cells[res, 2].Text.ToString();
                if (text != "" && text != null)
                {
                    int isval = Convert.ToInt32(fpsalary.Sheets[0].Cells[res, 1].Value);
                    if (isval == 1)
                    {
                        totlastaff++;
                    }
                }
            }
            datefrom3 = split[1].ToString() + "/" + split[0].ToString() + "/" + split[2].ToString();
            string date4 = Txtentryto.Text.ToString();
            int year3 = Convert.ToInt16(split[2].ToString());
            string[] split1 = date4.Split(new Char[] { '/' });
            string dateto4 = split1[1].ToString() + "/" + split1[0].ToString() + "/" + split1[2].ToString();
            monthname2 = split1[0].ToString();
            monthnamenum = Convert.ToInt32(monthname2.ToString());
            yearto = split1[2].ToString();
            string mnmae = split[1].ToString();
            monthname1 = Convert.ToInt16(mnmae);
            monthname2 = split1[1].ToString();
            monthnamenum = Convert.ToInt16(monthname2);
            string year = split[2].ToString();
            monyear = monthname1.ToString() + "/" + year;
            monyearto = monthnamenum.ToString() + "/" + yearto;
            Boolean getvalflag = false;
            int dayfrm = 0;
            string dayto;
            int daytonum;
            string dayfrom = split[0].ToString();

            sql = "select m.*,s.staff_name,s.pfnumber,s.bankaccount,s.pangirnumber ,st.payscale as pay_scalenew , st.allowances as actallowance,h.dept_name as deptname,d.desig_name as designame from monthlypay m,staffmaster s,stafftrans st,hrdept_master h,desig_master d where s.staff_code=m.staff_code and st.dept_code=h.dept_code and st.desig_code=d.desig_code and m.staff_code=st.staff_code and st.latestrec = 1 and m.fdate ='" + datefrom3 + "' and m.tdate ='" + dateto4 + "'";
            DataSet dspay = d2.select_method_wo_parameter(sql, "text");   //and m.PayMonth ='" + Convert.ToString(cblmonth.SelectedItem.Value) + "' and m.PayYear ='" + Convert.ToString(ddlyear2.SelectedItem.Text) + "'
            DataTable dtpay = dspay.Tables[0];
            DataView dvpay = new DataView();
            DataView dvapp = new DataView();
            int gettop = 0;
            int rec = 0;
            Gios.Pdf.PdfPage mypdfpage = mydocument.NewPage();
            DataView dvstaffattendance = new DataView();
            if (ddlreport.SelectedItem.Text == "Format 1")
            {
                for (int res = incrre; res <= Convert.ToInt32(fpsalary.Sheets[0].RowCount) - 1; res = res + incrre)
                {
                    string text = fpsalary.Sheets[0].Cells[res, 2].Text.ToString();
                    if (text != "" && text != null)
                    {
                        bool isval = Convert.ToBoolean(fpsalary.Sheets[0].Cells[res, 1].Value);

                        if (isval == true)
                        {
                            mypdfpage = mydocument.NewPage();
                            rec++;
                            getvalflag = true;
                            gettop = 15;
                            int coltop = gettop;
                            int incval = 200;
                            string staffcode = Convert.ToString(fpsalary.Sheets[0].Cells[res - 1, 2].Tag);
                            string designation = Convert.ToString(fpsalary.Sheets[0].Cells[res - 1, 0].Tag);
                            string deptname = Convert.ToString(fpsalary.Sheets[0].Cells[res - 1, 0].Note);
                            if (ddlreport.SelectedItem.Text == "Format 1")
                            {
                                staffcode = Convert.ToString(fpsalary.Sheets[0].Cells[res, 2].Tag);
                                designation = Convert.ToString(fpsalary.Sheets[0].Cells[res, 5].Text);
                                deptname = Convert.ToString(fpsalary.Sheets[0].Cells[res, 4].Text);
                            }
                            string staffname = "";
                            Double totdection = 0;
                            dtpay.DefaultView.RowFilter = " staff_code='" + staffcode + "'";
                            dvpay = dtpay.DefaultView;
                            if (dvpay.Count > 0)
                            {
                                staffname = dvpay[0]["staff_name"].ToString();
                                designation = dvpay[0]["designame"].ToString();
                                deptname = dvpay[0]["deptname"].ToString();
                                int starttop = gettop;
                                int rowspace = 15;
                                // string actu_basicpay = dvpay[0]["basic_alone"].ToString();
                                string setyear = dvpay[0]["PayYear"].ToString();
                                coltop = coltop + rowspace;
                                PdfTextArea ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 0, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleCenter, "SALARY CERTIFICATE ");
                                mypdfpage.Add(ptsp);
                                // string stl = "";
                                //if (chkdays.Checked == true)
                                //{
                                //    int maxdays = getmaxdays(monthname1, year3);
                                //    double[] clleave = new double[50];
                                //    dayfrm = Convert.ToInt32(dayfrom);
                                //    dayto = split1[0].ToString();
                                //    daytonum = Convert.ToInt32(dayto);
                                //    if (monthname1 == monthnamenum)
                                //    {
                                //        for (int day = dayfrm; dayfrm <= daytonum; dayfrm++)
                                //        {
                                //            int day5 = 0;
                                //            day5 = 0 + dayfrm;
                                //        }
                                //        if (stl != "")
                                //        {
                                //            stl = stl.Substring(0, stl.Length - 2);
                                //        }
                                //        Array.Clear(clleave, 0, clleave.Length);
                                //    }

                                //    Array.Clear(clleave, 0, clleave.Length);
                                //}
                                coltop = coltop + 60;
                                coltop = coltop + rowspace;
                                coltop = coltop + rowspace + rowspace;
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "EARNINGS");
                                mypdfpage.Add(ptsp);


                                if (chkactual.Checked == true)
                                {
                                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 190, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "Actual Amount");
                                    mypdfpage.Add(ptsp);
                                }
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, 310, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "AMOUNT");
                                mypdfpage.Add(ptsp);



                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, left1, coltop + 160, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "DEDUCTIONS");
                                mypdfpage.Add(ptsp);


                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 310, coltop + 160, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "AMOUNT");
                                mypdfpage.Add(ptsp);



                                int dedu = coltop + 10;
                                int allo = coltop + 10;
                                if (dvpay.Count > 0)
                                {
                                    double payband = 0;
                                    double gradepay = 0;

                                    string allowance3 = "";
                                    string deduction3 = "";

                                    payband = Convert.ToDouble(dvpay[0]["pay_band"].ToString());
                                    //// gradepay = Convert.ToDouble(dvpay[0]["grade_pay"].ToString());
                                    // if (gradepay != 0)
                                    // {
                                    //     allo = allo + rowspace;
                                    //     //ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                    //     //                            new PdfArea(mydocument, left1, allo, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Grade Pay");
                                    //     //mypdfpage.Add(ptsp);
                                    //     gradepay = Math.Round(gradepay, 2, MidpointRounding.AwayFromZero);
                                    //     string alowamount = gradepay.ToString();
                                    //     if (!alowamount.Contains('.'))
                                    //     {
                                    //         alowamount = alowamount + ".00";
                                    //     }
                                    //     else
                                    //     {
                                    //         string[] sp = alowamount.Split('.');
                                    //         if (sp[1].Length < 2)
                                    //         {
                                    //             alowamount = alowamount + "0";
                                    //         }
                                    //     }
                                    //     ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                    //                                new PdfArea(mydocument, 40, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                                    //     mypdfpage.Add(ptsp);
                                    //     allo += 10;
                                    // }
                                    Dictionary<string, string> dicactaloo = new Dictionary<string, string>();
                                    string[] spallow = allowmaster.Split(';');
                                    string da = "";
                                    string daac = "";
                                    for (int alo = 0; alo <= spallow.GetUpperBound(0); alo++)
                                    {
                                        string[] splalot = spallow[alo].Split('\\');
                                        if (splalot.GetUpperBound(0) >= 2)
                                        {
                                            string orallo = splalot[0].ToString();

                                            int r = 0;
                                            allowance3 = dvpay[0]["allowances"].ToString();
                                            int c = 0;
                                            string[] allowanmce_arr1;
                                            string alowancesplit;
                                            int exatval = 0;
                                            allowanmce_arr1 = allowance3.Split('\\');
                                            for (int i = c; i <= allowanmce_arr1.GetUpperBound(0); i++)
                                            {
                                                exatval = allowanmce_arr1.GetUpperBound(0);
                                                alowancesplit = allowanmce_arr1[i];
                                                string[] allowanceda = alowancesplit.Split(';');

                                                if (allowanceda.GetUpperBound(0) >= 3)
                                                {
                                                    da = allowanceda[0];
                                                    string mode = Convert.ToString(allowanceda[1]);
                                                    daac = allowanceda[2];
                                                    string[] spval = daac.Split('-');
                                                    daac = spval[0];
                                                    if (daac.Trim() == "" || daac == null)
                                                    {
                                                        daac = "0";
                                                    }
                                                    if (orallo.Trim().ToLower() == da.Trim().ToLower())
                                                    {
                                                        string alowamount = "";
                                                        if (spll_alll_tag_arry.GetUpperBound(0) >= r)
                                                        {
                                                            if (spll_alll_tag_arry[r] != da)
                                                            {
                                                                allo = allo + rowspace;
                                                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                            new PdfArea(mydocument, left1, allo, 200, 50), System.Drawing.ContentAlignment.MiddleLeft, splalot[2].ToString());
                                                                mypdfpage.Add(ptsp);
                                                                if (chkactual.Checked == true)
                                                                {
                                                                    if (mode.Trim().ToUpper() == "AMOUNT")
                                                                    {
                                                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                                       new PdfArea(mydocument, 230, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, daac);
                                                                        mypdfpage.Add(ptsp);
                                                                    }
                                                                    else
                                                                    {
                                                                        if (dicactaloo.ContainsKey(da.ToString().Trim().ToLower()))
                                                                        {
                                                                            daac = dicactaloo[da.ToString().Trim().ToLower()];
                                                                        }
                                                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                                  new PdfArea(mydocument, 230, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, daac);
                                                                        mypdfpage.Add(ptsp);
                                                                    }
                                                                }

                                                                if (!alowamount.Contains('.'))
                                                                {
                                                                    alowamount = alowamount + ".00";
                                                                }
                                                                else
                                                                {
                                                                    string[] sp = alowamount.Split('.');
                                                                    if (sp[1].Length < 2)
                                                                    {
                                                                        alowamount = alowamount + "0";
                                                                    }
                                                                }
                                                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                           new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, daac);
                                                                mypdfpage.Add(ptsp);
                                                                //string total = daac;
                                                                //int taotal = Convert.ToInt32(total) + taotal;
                                                            }

                                                        }

                                                        i = allowanmce_arr1.GetUpperBound(0);
                                                    }
                                                }
                                            }
                                        }
                                    }

                                    foreach (var kvp in dict)
                                    {
                                        string setval = kvp.Key.ToString();
                                        string setval1 = kvp.Value.ToString();
                                        deduction3 = dvpay[0]["deductions"].ToString();
                                        string[] deduction_arr1;
                                        string deductionsplit1;
                                        deduction_arr1 = deduction3.Split('\\');
                                        for (int sp = 0; sp <= deduction_arr1.GetUpperBound(0); sp++)
                                        {
                                            deductionsplit1 = deduction_arr1[sp];
                                            string[] deductionda;
                                            deductionda = deductionsplit1.Split(';');
                                            if (deductionda.GetUpperBound(0) >= 3)
                                            {
                                                string de = deductionda[0];
                                                string de3 = deductionda[3];
                                                double de3d = Convert.ToDouble(de3);
                                                de3d = Math.Round(de3d, 2, MidpointRounding.AwayFromZero);
                                                if (setval == de)
                                                {
                                                    if (de3d != 0)
                                                    {
                                                        dedu = dedu + rowspace;
                                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                    new PdfArea(mydocument, left1, coltop + incval, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, setval.ToString());
                                                        mypdfpage.Add(ptsp);
                                                        totdection = totdection + de3d;
                                                        string deamount = de3d.ToString();
                                                        if (!deamount.Contains('.'))
                                                        {
                                                            deamount = deamount + ".00";
                                                        }
                                                        else
                                                        {
                                                            string[] spd = deamount.Split('.');
                                                            if (spd[1].Length < 2)
                                                            {
                                                                deamount = deamount + "0";
                                                            }
                                                        }
                                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                   new PdfArea(mydocument, 320, coltop + incval, 50, 50), System.Drawing.ContentAlignment.MiddleRight, deamount);
                                                        mypdfpage.Add(ptsp);
                                                        incval += 20;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                if (allo > dedu)
                                {
                                    if (coltop < allo)
                                    {
                                        coltop = allo;
                                    }
                                }
                                else
                                {
                                    if (coltop < dedu)
                                    {
                                        coltop = dedu;
                                    }
                                }

                                coltop = coltop + rowspace + rowspace;
                                Double nesal3 = Convert.ToDouble(dvpay[0]["netsal"].ToString());
                                nesal3 = Math.Round(nesal3, 2, MidpointRounding.AwayFromZero);

                                Double totall = Convert.ToDouble(dvpay[0]["netadd"].ToString());
                                totall = Math.Round(totall, 2, MidpointRounding.AwayFromZero);

                                double netded = Convert.ToDouble(dvpay[0]["netded"].ToString());
                                netded = Math.Round(netded, 2, MidpointRounding.AwayFromZero);

                                string finalamount = totall.ToString();
                                if (!finalamount.Contains('.'))
                                {
                                    finalamount = finalamount + ".00";
                                }
                                else
                                {
                                    string[] sp = finalamount.Split('.');
                                    if (sp[1].Length < 2)
                                    {
                                        finalamount = finalamount + "0";
                                    }
                                }

                                finalamount = netded.ToString();
                                if (!finalamount.Contains('.'))
                                {
                                    finalamount = finalamount + ".00";
                                }
                                else
                                {
                                    string[] sp = finalamount.Split('.');
                                    if (sp[1].Length < 2)
                                    {
                                        finalamount = finalamount + "0";
                                    }
                                }



                                coltop = coltop + rowspace + rowspace;
                                finalamount = nesal3.ToString();
                                if (!finalamount.Contains('.'))
                                {
                                    finalamount = finalamount + ".00";
                                }
                                else
                                {
                                    string[] sp = finalamount.Split('.');
                                    if (sp[1].Length < 2)
                                    {
                                        finalamount = finalamount + "0";
                                    }
                                }
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, left1, 270, 100, 50), System.Drawing.ContentAlignment.MiddleLeft, "TOTAL");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, 320, 255, 50, 50), System.Drawing.ContentAlignment.MiddleRight, "------------");
                                mypdfpage.Add(ptsp);


                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, 320, 270, 50, 50), System.Drawing.ContentAlignment.MiddleRight, totall.ToString());
                                mypdfpage.Add(ptsp);


                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, 320, coltop + 205, 50, 50), System.Drawing.ContentAlignment.MiddleRight, "------------");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop + 220, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "TOTAL");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                  new PdfArea(mydocument, 320, coltop + 220, 50, 50), System.Drawing.ContentAlignment.MiddleRight, finalamount);

                                mypdfpage.Add(ptsp);


                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left1, 750, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, DateTime.Now.ToString("dd/MMM/yyyy"));
                                mypdfpage.Add(ptsp);

                                string footerdetails = d2.GetFunction("select LinkValue from New_InsSettings where LinkName='printpdf_footer' and college_code='" + Convert.ToString(collegecode) + "' and user_Code='" + Convert.ToString(Session["usercode"]) + "'");

                                if (footerdetails == "0")
                                {
                                    footerdetails = "";

                                }



                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                               new PdfArea(mydocument, 240, 750, 500, 50), System.Drawing.ContentAlignment.MiddleRight, footerdetails);//"BURSAR"
                                mypdfpage.Add(ptsp);

                                string month = cblmonth.SelectedItem.Text;
                                string submonth = month.Substring(0, 3);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,

                                                                 new PdfArea(mydocument, left1, 80, 650, 50), System.Drawing.ContentAlignment.TopLeft, "Following are the pay particulars of " + staffname + "," + designation + ",");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,

                                                             new PdfArea(mydocument, left1, 100, 650, 50), System.Drawing.ContentAlignment.TopLeft, "Department of " + deptname + " of our college for the month of " + submonth + " " + yearto + ":");
                                mypdfpage.Add(ptsp);
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                           new PdfArea(mydocument, left1, coltop + 250, 500, 50), System.Drawing.ContentAlignment.MiddleLeft, "NET : ");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 320, coltop + 250, 50, 50), System.Drawing.ContentAlignment.MiddleRight, netded.ToString());
                                mypdfpage.Add(ptsp);


                            }
                            mypdfpage.SaveToDocument();
                            gettop = coltop + 100;

                        }
                    }
                }
            }
            if (ddlreport.SelectedItem.Text == "Format 2")
            {

                for (int res = incrre; res <= Convert.ToInt32(fpsalary.Sheets[0].RowCount) - 1; res = res + incrre)
                {
                    string text = fpsalary.Sheets[0].Cells[res, 2].Text.ToString();
                    if (text != "" && text != null)
                    {
                        bool isval = Convert.ToBoolean(fpsalary.Sheets[0].Cells[res, 1].Value);

                        if (isval == true)
                        {
                            mypdfpage = mydocument.NewPage();
                            rec++;
                            getvalflag = true;
                            gettop = 15;
                            int incval = 200;
                            int coltop = gettop;
                            string staffcode = Convert.ToString(fpsalary.Sheets[0].Cells[res - 1, 2].Tag);
                            string designation = Convert.ToString(fpsalary.Sheets[0].Cells[res - 1, 0].Tag);
                            string deptname = Convert.ToString(fpsalary.Sheets[0].Cells[res - 1, 0].Note);
                            if (ddlreport.SelectedItem.Text == "Format 1")
                            {
                                staffcode = Convert.ToString(fpsalary.Sheets[0].Cells[res, 2].Tag);
                                designation = Convert.ToString(fpsalary.Sheets[0].Cells[res, 5].Text);
                                deptname = Convert.ToString(fpsalary.Sheets[0].Cells[res, 4].Text);
                            }
                            string staffname = "";
                            Double totdection = 0;
                            dtpay.DefaultView.RowFilter = " staff_code='" + staffcode + "'";
                            dvpay = dtpay.DefaultView;
                            if (dvpay.Count > 0)
                            {
                                staffname = dvpay[0]["staff_name"].ToString();
                                designation = dvpay[0]["designame"].ToString();
                                deptname = dvpay[0]["deptname"].ToString();
                                int starttop = gettop;
                                int rowspace = 15;
                                string actu_basicpay = dvpay[0]["basic_alone"].ToString();
                                string setyear = dvpay[0]["PayYear"].ToString();
                                coltop = coltop + rowspace;
                                PdfTextArea ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 0, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleCenter, "SALARY CERTIFICATE ");
                                mypdfpage.Add(ptsp);
                                string stl = "";
                                if (chkdays.Checked == true)
                                {
                                    int maxdays = getmaxdays(monthname1, year3);
                                    double[] clleave = new double[50];
                                    dayfrm = Convert.ToInt32(dayfrom);
                                    dayto = split1[0].ToString();
                                    daytonum = Convert.ToInt32(dayto);
                                    if (monthname1 == monthnamenum)
                                    {
                                        for (int day = dayfrm; dayfrm <= daytonum; dayfrm++)
                                        {
                                            int day5 = 0;
                                            day5 = 0 + dayfrm;
                                        }
                                        if (stl != "")
                                        {
                                            stl = stl.Substring(0, stl.Length - 2);
                                        }
                                        Array.Clear(clleave, 0, clleave.Length);
                                    }

                                    Array.Clear(clleave, 0, clleave.Length);
                                }
                                coltop = coltop + 60;
                                coltop = coltop + rowspace;
                                coltop = coltop + rowspace + rowspace;
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "EARNINGS");
                                mypdfpage.Add(ptsp);


                                if (chkactual.Checked == true)
                                {
                                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 190, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "Actual Amount");
                                    mypdfpage.Add(ptsp);
                                }
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, 310, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "AMOUNT");
                                mypdfpage.Add(ptsp);


                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                 new PdfArea(mydocument, left1, coltop + 160, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "DEDUCTIONS");
                                mypdfpage.Add(ptsp);


                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 310, coltop + 160, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "AMOUNT");
                                mypdfpage.Add(ptsp);


                                int dedu = coltop + 10;
                                int allo = coltop + 10;
                                if (dvpay.Count > 0)
                                {
                                    double payband = 0;
                                    double gradepay = 0;
                                    double basic_pay3 = 0;
                                    string allowance3 = "";
                                    string deduction3 = "";
                                    double bassicd = 0;
                                    payband = Convert.ToDouble(dvpay[0]["pay_band"].ToString());
                                    // gradepay = Convert.ToDouble(dvpay[0]["grade_pay"].ToString());
                                    basic_pay3 = Convert.ToDouble(dvpay[0]["bsalary"].ToString());
                                    Double actbasic = Convert.ToDouble(dvpay[0]["basic_alone"].ToString());
                                    bassicd = Convert.ToDouble(basic_pay3);
                                    if (bassicd != 0)
                                    {
                                        allo = allo + rowspace;
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left1, allo, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Basic Pay");
                                        mypdfpage.Add(ptsp);

                                        if (chkactual.Checked == true)
                                        {
                                            actbasic = Math.Round(actbasic, 2, MidpointRounding.AwayFromZero);
                                            string alowamount1 = actbasic.ToString();
                                            if (!alowamount1.Contains('.'))
                                            {
                                                alowamount1 = alowamount1 + ".00";
                                            }
                                            else
                                            {
                                                string[] sp = alowamount1.Split('.');
                                                if (sp[1].Length < 2)
                                                {
                                                    alowamount1 = alowamount1 + "0";
                                                }
                                            }
                                            ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, 230, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, actbasic.ToString());
                                            mypdfpage.Add(ptsp);
                                        }
                                        bassicd = Math.Round(bassicd, 2, MidpointRounding.AwayFromZero);
                                        string alowamount = bassicd.ToString();
                                        if (!alowamount.Contains('.'))
                                        {
                                            alowamount = alowamount + ".00";
                                        }
                                        else
                                        {
                                            string[] sp = alowamount.Split('.');
                                            if (sp[1].Length < 2)
                                            {
                                                alowamount = alowamount + "0";
                                            }
                                        }
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, bassicd.ToString());
                                        mypdfpage.Add(ptsp);
                                    }
                                    if (gradepay != 0)
                                    {
                                        allo = allo + rowspace;
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left1, allo, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Grade Pay");
                                        mypdfpage.Add(ptsp);
                                        gradepay = Math.Round(gradepay, 2, MidpointRounding.AwayFromZero);
                                        string alowamount = gradepay.ToString();
                                        if (!alowamount.Contains('.'))
                                        {
                                            alowamount = alowamount + ".00";
                                        }
                                        else
                                        {
                                            string[] sp = alowamount.Split('.');
                                            if (sp[1].Length < 2)
                                            {
                                                alowamount = alowamount + "0";
                                            }
                                        }
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 40, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                                        mypdfpage.Add(ptsp);
                                        allo += 10;
                                    }
                                    Dictionary<string, string> dicactaloo = new Dictionary<string, string>();
                                    string[] spallow = allowmaster.Split(';');
                                    string da = "";
                                    string daac = "";
                                    for (int alo = 0; alo <= spallow.GetUpperBound(0); alo++)
                                    {
                                        string[] splalot = spallow[alo].Split('\\');
                                        if (splalot.GetUpperBound(0) >= 2)
                                        {
                                            string orallo = splalot[0].ToString();

                                            int r = 0;
                                            allowance3 = dvpay[0]["allowances"].ToString();
                                            int c = 0;
                                            string[] allowanmce_arr1;

                                            string alowancesplit;
                                            int exatval = 0;
                                            allowanmce_arr1 = allowance3.Split('\\');
                                            for (int i = c; i <= allowanmce_arr1.GetUpperBound(0); i++)
                                            {
                                                exatval = allowanmce_arr1.GetUpperBound(0);
                                                alowancesplit = allowanmce_arr1[i];
                                                string[] allowanceda = alowancesplit.Split(';');

                                                if (allowanceda.GetUpperBound(0) >= 3)
                                                {
                                                    da = allowanceda[0];
                                                    string mode = Convert.ToString(allowanceda[1]);
                                                    daac = allowanceda[2];
                                                    string[] spval = daac.Split('-');
                                                    daac = spval[0];
                                                    if (daac.Trim() == "" || daac == null)
                                                    {
                                                        daac = "0";
                                                    }
                                                    if (orallo.Trim().ToLower() == da.Trim().ToLower())
                                                    {
                                                        string alowamount = "";
                                                        if (spll_alll_tag_arry.GetUpperBound(0) >= r)
                                                        {
                                                            if (spll_alll_tag_arry[r] != da)
                                                            {
                                                                allo = allo + rowspace;
                                                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                            new PdfArea(mydocument, left1, allo, 200, 50), System.Drawing.ContentAlignment.MiddleLeft, splalot[2].ToString());
                                                                mypdfpage.Add(ptsp);
                                                                if (chkactual.Checked == true)
                                                                {
                                                                    if (mode.Trim().ToUpper() == "AMOUNT")
                                                                    {
                                                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                                       new PdfArea(mydocument, 230, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, daac);
                                                                        mypdfpage.Add(ptsp);
                                                                    }
                                                                    else
                                                                    {
                                                                        if (dicactaloo.ContainsKey(da.ToString().Trim().ToLower()))
                                                                        {
                                                                            daac = dicactaloo[da.ToString().Trim().ToLower()];
                                                                        }
                                                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                                  new PdfArea(mydocument, 230, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, daac);
                                                                        mypdfpage.Add(ptsp);
                                                                    }
                                                                }

                                                                if (!alowamount.Contains('.'))
                                                                {
                                                                    alowamount = alowamount + ".00";
                                                                }
                                                                else
                                                                {
                                                                    string[] sp = alowamount.Split('.');
                                                                    if (sp[1].Length < 2)
                                                                    {
                                                                        alowamount = alowamount + "0";
                                                                    }
                                                                }
                                                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                           new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, daac);
                                                                mypdfpage.Add(ptsp);

                                                            }

                                                        }

                                                        i = allowanmce_arr1.GetUpperBound(0);
                                                    }

                                                }



                                            }

                                        }
                                    }

                                    foreach (var kvp in dict)
                                    {
                                        string setval = kvp.Key.ToString();
                                        string setval1 = kvp.Value.ToString();
                                        deduction3 = dvpay[0]["deductions"].ToString();
                                        string[] deduction_arr1;
                                        string deductionsplit1;
                                        deduction_arr1 = deduction3.Split('\\');
                                        for (int sp = 0; sp <= deduction_arr1.GetUpperBound(0); sp++)
                                        {
                                            deductionsplit1 = deduction_arr1[sp];
                                            string[] deductionda;
                                            deductionda = deductionsplit1.Split(';');
                                            if (deductionda.GetUpperBound(0) >= 3)
                                            {
                                                string de = deductionda[0];
                                                string de3 = deductionda[3];
                                                double de3d = Convert.ToDouble(de3);
                                                de3d = Math.Round(de3d, 2, MidpointRounding.AwayFromZero);
                                                if (setval == de)
                                                {
                                                    if (de3d != 0)
                                                    {
                                                        dedu = dedu + rowspace;
                                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                    new PdfArea(mydocument, left1, coltop + incval, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, setval.ToString());
                                                        mypdfpage.Add(ptsp);
                                                        totdection = totdection + de3d;
                                                        string deamount = de3d.ToString();
                                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                   new PdfArea(mydocument, 320, coltop + incval, 50, 50), System.Drawing.ContentAlignment.MiddleRight, deamount);
                                                        mypdfpage.Add(ptsp);
                                                        incval += 20;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                if (allo > dedu)
                                {
                                    if (coltop < allo)
                                    {
                                        coltop = allo;
                                    }
                                }
                                else
                                {
                                    if (coltop < dedu)
                                    {
                                        coltop = dedu;
                                    }
                                }

                                coltop = coltop + rowspace + rowspace;
                                Double nesal3 = Convert.ToDouble(dvpay[0]["netsal"].ToString());
                                nesal3 = Math.Round(nesal3, 2, MidpointRounding.AwayFromZero);

                                Double totall = Convert.ToDouble(dvpay[0]["netadd"].ToString());
                                totall = Math.Round(totall, 2, MidpointRounding.AwayFromZero);

                                double netded = Convert.ToDouble(dvpay[0]["netded"].ToString());
                                netded = Math.Round(netded, 2, MidpointRounding.AwayFromZero);

                                string finalamount = totall.ToString();
                                if (!finalamount.Contains('.'))
                                {
                                    finalamount = finalamount + ".00";
                                }
                                else
                                {
                                    string[] sp = finalamount.Split('.');
                                    if (sp[1].Length < 2)
                                    {
                                        finalamount = finalamount + "0";
                                    }
                                }

                                finalamount = netded.ToString();
                                if (!finalamount.Contains('.'))
                                {
                                    finalamount = finalamount + ".00";
                                }
                                else
                                {
                                    string[] sp = finalamount.Split('.');
                                    if (sp[1].Length < 2)
                                    {
                                        finalamount = finalamount + "0";
                                    }
                                }



                                coltop = coltop + rowspace + rowspace;
                                finalamount = nesal3.ToString();
                                if (!finalamount.Contains('.'))
                                {
                                    finalamount = finalamount + ".00";

                                }
                                else
                                {
                                    string[] sp = finalamount.Split('.');
                                    if (sp[1].Length < 2)
                                    {
                                        finalamount = finalamount + "0";
                                    }
                                }
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, left1, 270, 100, 50), System.Drawing.ContentAlignment.MiddleLeft, "TOTAL");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, 320, 255, 50, 50), System.Drawing.ContentAlignment.MiddleRight, "------------");
                                mypdfpage.Add(ptsp);


                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, 320, 270, 50, 50), System.Drawing.ContentAlignment.MiddleRight, totall.ToString());
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                 new PdfArea(mydocument, 320, coltop + 210, 50, 50), System.Drawing.ContentAlignment.MiddleRight, "------------");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop + 230, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "TOTAL");
                                mypdfpage.Add(ptsp);
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, 320, coltop + 230, 50, 50), System.Drawing.ContentAlignment.MiddleRight, netded.ToString());

                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left1, 750, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, DateTime.Now.ToString("dd-MMM-yyyy"));
                                mypdfpage.Add(ptsp);

                                string footerdetails = d2.GetFunction("select LinkValue from New_InsSettings where LinkName='printpdf_footer' and college_code='" + Convert.ToString(collegecode) + "' and user_Code='" + Convert.ToString(Session["usercode"]) + "'");

                                if (footerdetails == "0")
                                {
                                    footerdetails = "";

                                }

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                               new PdfArea(mydocument, 240, 750, 500, 50), System.Drawing.ContentAlignment.MiddleRight, footerdetails);//"BURSAR"
                                mypdfpage.Add(ptsp);

                                string month = cblmonth.SelectedItem.Text;
                                string submonth = month.Substring(0, 3);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,

                                                                 new PdfArea(mydocument, left1, 80, 650, 50), System.Drawing.ContentAlignment.TopLeft, "Following are the pay particulars of " + staffname + "," + designation + ",");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,

                                                            new PdfArea(mydocument, left1, 100, 650, 50), System.Drawing.ContentAlignment.TopLeft, "Department of " + deptname + " of our college for the month of " + submonth + " " + yearto + ":");
                                mypdfpage.Add(ptsp);
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                           new PdfArea(mydocument, left1, coltop + 270, 500, 50), System.Drawing.ContentAlignment.MiddleLeft, "NET : ");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, 320, coltop + 270, 50, 50), System.Drawing.ContentAlignment.MiddleRight, nesal3.ToString());
                                mypdfpage.Add(ptsp);





                            }
                            mypdfpage.SaveToDocument();
                            gettop = coltop + 100;

                        }
                    }
                }
            }

            if (ddlreport.SelectedItem.Text == "Format 3")
            {
                for (int res = 2; res <= Convert.ToInt32(fpsalary.Sheets[0].RowCount) - 1; res = res + 2)
                {
                    string text = fpsalary.Sheets[0].Cells[res, 2].Text.ToString();
                    if (text != "" && text != null)
                    {
                        int isval = Convert.ToInt32(fpsalary.Sheets[0].Cells[res, 1].Value);

                        if (isval == 1)
                        {
                            rec++;
                            getvalflag = true;
                            if (rec % 2 != 0)
                            {
                                if (rec != 1)
                                {
                                    mypdfpage = mydocument.NewPage();
                                }
                                gettop = 0;
                            }
                            else
                            {
                                if (gettop < 629)
                                {
                                    gettop = 0;
                                    mypdfpage = mydocument.NewPage();
                                }
                                else
                                {
                                    mypdfpage = mydocument.NewPage();
                                    gettop = 0;
                                }
                            }

                            string staffcode = Convert.ToString(fpsalary.Sheets[0].Cells[res, 2].Tag);
                            string designation = Convert.ToString(fpsalary.Sheets[0].Cells[res, 0].Tag);
                            string deptname = Convert.ToString(fpsalary.Sheets[0].Cells[res, 0].Note);
                            string staffname = "";
                            string Allowances = "";
                            Double totdection = 0;
                            dtpay.DefaultView.RowFilter = " staff_code='" + staffcode + "'";
                            dvpay = dtpay.DefaultView;
                            if (dvpay.Count > 0)
                            {
                                staffname = dvpay[0]["staff_name"].ToString();
                                Allowances = dvpay[0]["allowances"].ToString();
                                designation = dvpay[0]["designame"].ToString();
                                deptname = dvpay[0]["deptname"].ToString();
                                string setyear = dvpay[0]["PayYear"].ToString();
                                if (setyear.Trim() == "" || setyear == null)
                                {
                                    setyear = yearto;
                                }

                                int starttop = gettop;
                                int coltop = gettop;
                                int rowspace = 15;

                                PdfTextArea ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, 0, coltop + 10, 900, 50), System.Drawing.ContentAlignment.MiddleCenter, "SALARY CERTIFICATE");
                                mypdfpage.Add(ptsp);
                                string month = cblmonth.SelectedItem.Text;
                                string submonth = month.Substring(0, 3);
                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                 new PdfArea(mydocument, left1, coltop + 70, 900, 100), System.Drawing.ContentAlignment.TopLeft, "Following are the pay particulars of " + staffname + "," + designation + "," + "");
                                mypdfpage.Add(ptsp);


                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                                 new PdfArea(mydocument, left1, coltop + 90, 650, 50), System.Drawing.ContentAlignment.TopLeft, "Department of " + deptname + " of our college for the month of " + submonth + " " + yearto + "");
                                mypdfpage.Add(ptsp);

                                coltop = coltop + 60;

                                coltop = coltop + rowspace;





                                coltop = coltop + rowspace + rowspace;
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "EARNINGS");
                                mypdfpage.Add(ptsp);



                                if (chkactual.Checked == true)
                                {
                                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 190, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "Actual Amount");
                                    mypdfpage.Add(ptsp);
                                }

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, 310, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "AMOUNT");
                                mypdfpage.Add(ptsp);



                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop + 165, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "DEDUCTIONS");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 310, coltop + 165, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "AMOUNT");
                                mypdfpage.Add(ptsp);

                                int dedu = coltop + 10;
                                int allo = coltop + 10;
                                if (dvpay.Count > 0)
                                {
                                    double gradepay = 0;
                                    double basic_pay3 = 0;
                                    string allowance3 = "";
                                    string deduction3 = "";
                                    double bassicd = 0;
                                    double G_pay = 0;
                                    gradepay = Convert.ToDouble(dvpay[0]["grade_pay"].ToString());
                                    basic_pay3 = Convert.ToDouble(dvpay[0]["bsalary"].ToString());
                                    G_pay = Convert.ToDouble(dvpay[0]["G_Pay"].ToString());
                                    Double actbasic = Convert.ToDouble(dvpay[0]["basic_alone"].ToString());
                                    bassicd = Convert.ToDouble(basic_pay3);
                                    if (bassicd != 0)
                                    {
                                        allo = allo + rowspace;
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left1, allo, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Basic Pay");
                                        mypdfpage.Add(ptsp);

                                        if (chkactual.Checked == true)
                                        {
                                            actbasic = Math.Round(actbasic, 2, MidpointRounding.AwayFromZero);
                                            string alowamount1 = actbasic.ToString();
                                            if (!alowamount1.Contains('.'))
                                            {
                                                alowamount1 = alowamount1 + ".00";
                                            }
                                            else
                                            {
                                                string[] sp = alowamount1.Split('.');
                                                if (sp[1].Length < 2)
                                                {
                                                    alowamount1 = alowamount1 + "0";
                                                }
                                            }
                                            ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, 230, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, actbasic.ToString());
                                            mypdfpage.Add(ptsp);
                                        }



                                        bassicd = Math.Round(bassicd, 2, MidpointRounding.AwayFromZero);
                                        string alowamount = bassicd.ToString();
                                        if (!alowamount.Contains('.'))
                                        {
                                            alowamount = alowamount + ".00";
                                        }
                                        else
                                        {
                                            string[] sp = alowamount.Split('.');
                                            if (sp[1].Length < 2)
                                            {
                                                alowamount = alowamount + "0";
                                            }
                                        }
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                                        mypdfpage.Add(ptsp);
                                    }
                                    if (gradepay != 0)
                                    {
                                        allo = allo + rowspace;
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, left1, allo, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Grade Pay");
                                        mypdfpage.Add(ptsp);
                                        gradepay = Math.Round(gradepay, 2, MidpointRounding.AwayFromZero);
                                        string alowamount = gradepay.ToString();
                                        if (!alowamount.Contains('.'))
                                        {
                                            alowamount = alowamount + ".00";
                                        }
                                        else
                                        {
                                            string[] sp = alowamount.Split('.');
                                            if (sp[1].Length < 2)
                                            {
                                                alowamount = alowamount + "0";
                                            }
                                        }
                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                                        mypdfpage.Add(ptsp);
                                    }

                                    Dictionary<string, string> dicactaloo = new Dictionary<string, string>();
                                    dspay.Tables[0].DefaultView.RowFilter = "staff_code='" + staffcode + "'";
                                    DataView dvallow = dspay.Tables[0].DefaultView;
                                    string[] spallow = allowmaster.Split(';');
                                    for (int alo = 0; alo <= spallow.GetUpperBound(0); alo++)
                                    {
                                        string[] splalot = spallow[alo].Split('\\');
                                        if (splalot.GetUpperBound(0) >= 2)
                                        {
                                            string orallo = splalot[0].ToString();

                                            int r = 0;
                                            allowance3 = dvpay[0]["allowances"].ToString();
                                            int c = 0;
                                            string[] allowanmce_arr1;
                                            string alowancesplit;
                                            int exatval = 0;
                                            allowanmce_arr1 = allowance3.Split('\\');
                                            for (int i = c; i <= allowanmce_arr1.GetUpperBound(0); i++)
                                            {
                                                exatval = allowanmce_arr1.GetUpperBound(0);
                                                alowancesplit = allowanmce_arr1[i];
                                                string[] allowanceda = alowancesplit.Split(';');
                                                if (allowanceda.GetUpperBound(0) >= 3)
                                                {
                                                    string da = allowanceda[0];
                                                    string mode = Convert.ToString(allowanceda[1]);
                                                    string[] spval = allowanceda[2].Split('-');
                                                    string daac = spval[0];
                                                    if (daac.Trim() == "" || daac == null)
                                                    {
                                                        daac = "0";
                                                    }
                                                    string da3 = allowanceda[3];
                                                    double ds3 = Convert.ToDouble(da3);
                                                    ds3 = Math.Round(ds3, 2, MidpointRounding.AwayFromZero);
                                                    string DblAllowActVal = daac;
                                                    string DblAllowVal = allowanceda[3];
                                                    if (orallo.Trim().ToLower() == da.Trim().ToLower())
                                                    {
                                                        if (ds3 != 0)
                                                        {
                                                            if (spll_alll_tag_arry.GetUpperBound(0) >= r)
                                                            {
                                                                if (spll_alll_tag_arry[r] != da)
                                                                {
                                                                    allo = allo + rowspace;
                                                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                                new PdfArea(mydocument, left1, allo, 200, 50), System.Drawing.ContentAlignment.MiddleLeft, splalot[2].ToString());
                                                                    mypdfpage.Add(ptsp);
                                                                    if (chkactual.Checked == true)
                                                                    {
                                                                        if (mode.Trim().ToUpper() == "AMOUNT")
                                                                        {
                                                                            ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                                           new PdfArea(mydocument, 230, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, daac);
                                                                            mypdfpage.Add(ptsp);
                                                                        }
                                                                        else
                                                                        {
                                                                            if (dicactaloo.ContainsKey(da.ToString().Trim().ToLower()))
                                                                            {
                                                                                daac = dicactaloo[da.ToString().Trim().ToLower()];
                                                                            }
                                                                            ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                                      new PdfArea(mydocument, 230, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, daac);
                                                                            mypdfpage.Add(ptsp);
                                                                        }
                                                                    }
                                                                    string alowamount = ds3.ToString();
                                                                    if (!alowamount.Contains('.'))
                                                                    {
                                                                        alowamount = alowamount + ".00";
                                                                    }
                                                                    else
                                                                    {
                                                                        string[] sp = alowamount.Split('.');
                                                                        if (sp[1].Length < 2)
                                                                        {
                                                                            alowamount = alowamount + "0";
                                                                        }
                                                                    }
                                                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                               new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                                                                    mypdfpage.Add(ptsp);
                                                                }
                                                                else
                                                                {

                                                                    if (splallow.Contains(da))
                                                                    {
                                                                        splallow[da] = da3.ToString();
                                                                    }

                                                                }
                                                            }
                                                        }
                                                        i = allowanmce_arr1.GetUpperBound(0);
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    int incval = 185;
                                    foreach (var kvp in dict)
                                    {
                                        string setval = kvp.Key.ToString();
                                        string setval1 = kvp.Value.ToString();
                                        deduction3 = dvpay[0]["deductions"].ToString();
                                        string[] deduction_arr1;
                                        string deductionsplit1;
                                        deduction_arr1 = deduction3.Split('\\');
                                        for (int sp = 0; sp <= deduction_arr1.GetUpperBound(0); sp++)
                                        {
                                            deductionsplit1 = deduction_arr1[sp];
                                            string[] deductionda;
                                            deductionda = deductionsplit1.Split(';');
                                            if (deductionda.GetUpperBound(0) >= 3)
                                            {
                                                string de = deductionda[0];
                                                string de3 = deductionda[3];
                                                double de3d = Convert.ToDouble(de3);
                                                de3d = Math.Round(de3d, 2, MidpointRounding.AwayFromZero);
                                                if (setval == de)
                                                {
                                                    if (de3d != 0)
                                                    {


                                                        dedu = dedu + rowspace;
                                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                    new PdfArea(mydocument, left1, coltop + incval, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, setval.ToString());
                                                        mypdfpage.Add(ptsp);
                                                        totdection = totdection + de3d;
                                                        string deamount = de3d.ToString();
                                                        if (!deamount.Contains('.'))
                                                        {
                                                            deamount = deamount + ".00";
                                                        }
                                                        else
                                                        {
                                                            string[] spd = deamount.Split('.');
                                                            if (spd[1].Length < 2)
                                                            {
                                                                deamount = deamount + "0";
                                                            }
                                                        }
                                                        ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                   new PdfArea(mydocument, 320, coltop + incval, 50, 50), System.Drawing.ContentAlignment.MiddleRight, deamount);
                                                        mypdfpage.Add(ptsp);
                                                        incval += 20;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }

                                if (allo > dedu)
                                {
                                    if (coltop < allo)
                                    {
                                        coltop = allo;
                                    }
                                }
                                else
                                {
                                    if (coltop < dedu)
                                    {
                                        coltop = dedu;
                                    }
                                }
                                coltop = coltop + rowspace + rowspace;
                                Double nesal3 = Convert.ToDouble(dvpay[0]["netsal"].ToString());
                                nesal3 = Math.Round(nesal3, 2, MidpointRounding.AwayFromZero);

                                Double totall = Convert.ToDouble(dvpay[0]["netadd"].ToString());
                                totall = Math.Round(totall, 2, MidpointRounding.AwayFromZero);

                                double netded = Convert.ToDouble(dvpay[0]["netded"].ToString());
                                netded = Math.Round(netded, 2, MidpointRounding.AwayFromZero);

                                string finalamount = totall.ToString();
                                if (!finalamount.Contains('.'))
                                {
                                    finalamount = finalamount + ".00";
                                }
                                else
                                {
                                    string[] sp = finalamount.Split('.');
                                    if (sp[1].Length < 2)
                                    {
                                        finalamount = finalamount + "0";
                                    }
                                }
                                coltop = 320;
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, left1, 235, 100, 50), System.Drawing.ContentAlignment.MiddleLeft, "TOTAL");
                                mypdfpage.Add(ptsp);
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 320, 220, 50, 50), System.Drawing.ContentAlignment.MiddleRight, "-----------");
                                mypdfpage.Add(ptsp);
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, 320, 235, 50, 50), System.Drawing.ContentAlignment.MiddleRight, finalamount);
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, coltop + 240, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "TOTAL");
                                mypdfpage.Add(ptsp);
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1, 770, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, DateTime.Now.ToString("dd-MMM-yyyy"));

                                mypdfpage.Add(ptsp);

                                string footerdetails = d2.GetFunction("select LinkValue from New_InsSettings where LinkName='printpdf_footer' and college_code='" + Convert.ToString(collegecode) + "' and user_Code='" + Convert.ToString(Session["usercode"]) + "'");

                                if (footerdetails == "0")
                                {
                                    footerdetails = "";

                                }

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                               new PdfArea(mydocument, 240, 770, 500, 50), System.Drawing.ContentAlignment.MiddleRight, footerdetails);//"BURSAR"
                                mypdfpage.Add(ptsp);
                                finalamount = netded.ToString();
                                if (!finalamount.Contains('.'))
                                {
                                    finalamount = finalamount + ".00";
                                }
                                else
                                {
                                    string[] sp = finalamount.Split('.');
                                    if (sp[1].Length < 2)
                                    {
                                        finalamount = finalamount + "0";
                                    }
                                }
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                              new PdfArea(mydocument, 310, coltop + 225, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "-----------");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 310, coltop + 240, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, finalamount);
                                mypdfpage.Add(ptsp);

                                coltop = coltop + rowspace + rowspace;
                                finalamount = nesal3.ToString();
                                if (!finalamount.Contains('.'))
                                {
                                    finalamount = finalamount + ".00";
                                }
                                else
                                {
                                    string[] sp = finalamount.Split('.');
                                    if (sp[1].Length < 2)
                                    {
                                        finalamount = finalamount + "0";
                                    }
                                }
                                if (cbrupesinwords.Checked == true)
                                {
                                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                              new PdfArea(mydocument, left1, coltop + 260, 500, 50), System.Drawing.ContentAlignment.MiddleLeft, "NET : ");
                                    mypdfpage.Add(ptsp);
                                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                      new PdfArea(mydocument, 310, coltop + 260, 150, 50), System.Drawing.ContentAlignment.MiddleRight, finalamount);
                                    mypdfpage.Add(ptsp);

                                    string word = ConvertNumbertoWords(Convert.ToInt32(Math.Round(nesal3)));

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                     new PdfArea(mydocument, 40, coltop + 280, 650, 50), System.Drawing.ContentAlignment.MiddleRight, " (Rupees " + word + " Only)");
                                    mypdfpage.Add(ptsp);
                                }
                                else
                                {
                                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                              new PdfArea(mydocument, left1, coltop + 260, 500, 50), System.Drawing.ContentAlignment.MiddleLeft, "NET : ");
                                    mypdfpage.Add(ptsp);
                                    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                      new PdfArea(mydocument, 310, coltop + 260, 150, 50), System.Drawing.ContentAlignment.MiddleLeft, finalamount);
                                    mypdfpage.Add(ptsp);

                                    string word = ConvertNumbertoWords(Convert.ToInt32(Math.Round(nesal3)));

                                    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                     new PdfArea(mydocument, 40, coltop + 280, 650, 50), System.Drawing.ContentAlignment.MiddleRight, " (Rupees " + word + " Only)");
                                    mypdfpage.Add(ptsp);
                                }
                                mypdfpage.SaveToDocument();
                                gettop = coltop + 100;
                            }
                        }
                    }
                }
            }
            if (getvalflag == true)
            {
                string appPath = HttpContext.Current.Server.MapPath("~");
                if (appPath != "")
                {
                    string szPath = appPath + "/Report/";
                    string szFile = DateTime.Now.ToString("ddMMyyyyhhmmsstt") + "Salary Certificate.pdf";
                    mydocument.SaveToFile(szPath + szFile);
                    Response.ClearHeaders();
                    Response.AddHeader("Content-Disposition", "attachment; filename=" + szFile);
                    Response.ContentType = "application/pdf";
                    Response.WriteFile(szPath + szFile);
                }
            }
            else
            {
                ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('Please Select Staff and then Proceed')", true);
            }
        }
        catch (Exception ex)
        {
            lblnorec.Visible = true;
            lblnorec.Text = ex.ToString();
        }
    }
    //*******************Ended by Senthil 10-04-2015******************************

    protected void cb_Designation_CheckedChanged(object sender, EventArgs e)
    {
        if (cb_Designation.Checked == true)
        {
            for (int i = 0; i < cbl_Designation.Items.Count; i++)
            {
                cbl_Designation.Items[i].Selected = true;
                txt_designation.Text = "Designation(" + (cbl_Designation.Items.Count) + ")";
            }
            panel_Designation.Focus();
        }
        else
        {

            for (int i = 0; i < cbl_Designation.Items.Count; i++)
            {
                cbl_Designation.Items[i].Selected = false;
                txt_designation.Text = "---Select---";
            }

        }


    }
    protected void cbl_Designation_SelectedIndexChanged(object sender, EventArgs e)
    {
        panel_Designation.Focus();
        int desigcount = 0;
        for (int i = 0; i < cbl_Designation.Items.Count; i++)
        {
            if (cbl_Designation.Items[i].Selected == true)
            {
                desigcount = desigcount + 1;
                txt_designation.Text = "Designation(" + desigcount.ToString() + ")";
            }

        }

        if (desigcount == 0)
        {
            txt_designation.Text = "---Select---";
        }
        cb_Designation.Checked = false;

    }

    protected void cbstafftype_CheckedChanged(object sender, EventArgs e)
    {
        if (cbstafftype.Checked == true)
        {
            for (int i = 0; i < cblstafftype.Items.Count; i++)
            {
                cblstafftype.Items[i].Selected = true;
                txt_stafftype.Text = "Staff Type(" + (cblstafftype.Items.Count) + ")";
            }
            panel_stafftype.Focus();
        }
        else
        {

            for (int i = 0; i < cblstafftype.Items.Count; i++)
            {
                cblstafftype.Items[i].Selected = false;
                txt_stafftype.Text = "---Select---";
            }

        }


    }
    protected void cblstafftype_SelectedIndexChanged(object sender, EventArgs e)
    {
        panel_stafftype.Focus();
        int desigcount = 0;
        for (int i = 0; i < cblstafftype.Items.Count; i++)
        {
            if (cblstafftype.Items[i].Selected == true)
            {
                desigcount = desigcount + 1;
                txt_stafftype.Text = "Staff Type(" + desigcount.ToString() + ")";
            }
        }
        if (desigcount == 0)
        {
            txt_stafftype.Text = "---Select---";
        }
        cbstafftype.Checked = false;

    }

    public void binddesig(string coll)
    {
        try
        {
            height = 0;
            cbl_Designation.Visible = true;
            cbl_Designation.Items.Clear();
            ds.Clear();

            string col = coll;
            if (col == "---Select---")
            {
                col = Session["collegecode"].ToString();
            }
            txt_designation.Text = "---Select---";
            cb_Designation.Checked = false;
            ds = d2.loaddesignation(col);
            if (ds.Tables[0].Rows.Count > 0)
            {
                cbl_Designation.DataSource = ds;
                cbl_Designation.DataTextField = "desig_name";
                cbl_Designation.DataValueField = "Desig_Code";
                cbl_Designation.DataBind();

                for (int i = 0; i < cbl_Designation.Items.Count; i++)
                {
                    cbl_Designation.Items[i].Selected = true;
                    height++;
                }
                txt_designation.Text = "Designation(" + cbl_Designation.Items.Count + ")";
                cb_Designation.Checked = true;
            }
            if (height > 10)
            {
                panel_Designation.Height = 300;
            }
            else
            {
                panel_Designation.Height = 150;
            }
        }
        catch (Exception e)
        {
        }
    }
    public void bindstafftype(string college)
    {
        try
        {
            txt_stafftype.Text = "---Select---";
            cbstafftype.Checked = false;
            string collvalue = college;
            if (collvalue == "---Select---")
            {
                collvalue = Session["collegecode"].ToString();
            }
            height = 0;
            cblstafftype.Items.Clear();
            ds.Clear();

            ds = d2.loadstafftype(collvalue);
            if (ds.Tables[0].Rows.Count > 0)
            {
                cblstafftype.DataSource = ds;
                cblstafftype.DataTextField = "StfType";
                cblstafftype.DataValueField = "StfType";
                cblstafftype.DataBind();

                for (int i = 0; i < cblstafftype.Items.Count; i++)
                {
                    cblstafftype.Items[i].Selected = true;
                    height++;
                }
                txt_stafftype.Text = "Staff Type(" + cblstafftype.Items.Count + ")";
                cbstafftype.Checked = true;
            }

            if (height > 10)
            {
                panel_stafftype.Height = 300;
            }
            else
            {
                panel_stafftype.Height = 150;
            }


        }
        catch (Exception)
        {

        }
    }

    #region Added By Jeyaprakash on Oct 21st,2016 (Staff Name Settings)

    private void tecall()
    {
        try
        {
            ds.Clear();
            cbltecall.Items.Clear();
            cblnontecall.Items.Clear();
            string item = "select allowances from incentives_master where college_code = '" + Convert.ToString(Session["collegecode"]) + "'";
            ds = d2.select_method_wo_parameter(item, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                cbltecall.DataSource = ds;
                cblnontecall.DataSource = ds;
                string st = Convert.ToString(ds.Tables[0].Rows[0]["allowances"]);
                string[] split = st.Split(';');
                for (int row = 0; row < split.Length; row++)
                {
                    string staff = split[row];
                    string[] split1 = staff.Split('\\');
                    if (split1.Length > 1)
                    {
                        string stafftype = split1[0];
                        cbltecall.Items.Add(stafftype);
                        cblnontecall.Items.Add(stafftype);
                    }
                }
                txtteachall.Text = "--Select--";
                txtnonteachall.Text = "--Select--";
                cbtecall.Checked = false;
                cbnontecall.Checked = false;
            }
            else
            {
                txtteachall.Text = "--Select--";
                txtnonteachall.Text = "--Select--";
                cbtecall.Checked = false;
                cbnontecall.Checked = false;
            }
        }
        catch { }
    }

    protected void cbtecall_CheckedChanged(object sender, EventArgs e)
    {
        try
        {
            txtteachall.Text = "--Select--";
            if (cbtecall.Checked == true)
            {
                for (int k = 0; k < cbltecall.Items.Count; k++)
                {
                    cbltecall.Items[k].Selected = true;
                }
                txtteachall.Text = "Allowance(" + cbltecall.Items.Count + ")";
            }
            else
            {
                for (int k = 0; k < cbltecall.Items.Count; k++)
                {
                    cbltecall.Items[k].Selected = false;
                }
                txtteachall.Text = "--Select--";
            }
        }
        catch { }
    }

    protected void cbltecall_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            txtteachall.Text = "--Select--";
            cbtecall.Checked = false;
            int cblcount = 0;
            for (int ik = 0; ik < cbltecall.Items.Count; ik++)
            {
                if (cbltecall.Items[ik].Selected == true)
                {
                    cblcount++;
                }
            }
            if (cblcount == cbltecall.Items.Count)
            {
                txtteachall.Text = "Allowance(" + cblcount + ")";
                cbtecall.Checked = true;
            }
            else if (cblcount != 0)
            {
                txtteachall.Text = "Allowance(" + cblcount + ")";
            }
            else
            {
                txtteachall.Text = "--Select--";
            }
        }
        catch { }
    }

    protected void cbnontecall_CheckedChanged(object sender, EventArgs e)
    {
        try
        {
            txtnonteachall.Text = "--Select--";
            if (cbnontecall.Checked == true)
            {
                for (int k = 0; k < cblnontecall.Items.Count; k++)
                {
                    cblnontecall.Items[k].Selected = true;
                }
                txtnonteachall.Text = "Allowance(" + cblnontecall.Items.Count + ")";
            }
            else
            {
                for (int k = 0; k < cblnontecall.Items.Count; k++)
                {
                    cblnontecall.Items[k].Selected = false;
                }
                txtnonteachall.Text = "--Select--";
            }
        }
        catch { }
    }

    protected void cblnontecall_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            txtnonteachall.Text = "--Select--";
            cbnontecall.Checked = false;
            int cblcount = 0;
            for (int ik = 0; ik < cblnontecall.Items.Count; ik++)
            {
                if (cblnontecall.Items[ik].Selected == true)
                {
                    cblcount++;
                }
            }
            if (cblcount == cblnontecall.Items.Count)
            {
                txtnonteachall.Text = "Allowance(" + cblcount + ")";
                cbnontecall.Checked = true;
            }
            else if (cblcount != 0)
            {
                txtnonteachall.Text = "Allowance(" + cblcount + ")";
            }
            else
            {
                txtnonteachall.Text = "--Select--";
            }
        }
        catch { }
    }

    protected void lnkteachnonteach_click(object sender, EventArgs e)
    {
        alertpopwindow.Visible = true;
        tecall();
        int selcount = 0;
        string selq = d2.GetFunction("select value from Master_Settings where Settings='StaffType Allowance' and usercode='" + Convert.ToString(Session["usercode"]) + "'");
        if (!String.IsNullOrEmpty(selq) && selq.Trim() != "0" && selq.Trim() != ";")
        {
            string[] spl1 = selq.Split(';');
            if (spl1.Length > 0)
            {
                if (spl1[0].Contains(','))
                {
                    string[] spl2 = spl1[0].Split(',');
                    if (spl2.Length > 0)
                    {
                        selcount = 0;
                        for (int cb = 0; cb < cbltecall.Items.Count; cb++)
                        {
                            for (int sp = 0; sp < spl2.Length; sp++)
                            {
                                if (cbltecall.Items[cb].Text == spl2[sp])
                                {
                                    cbltecall.Items[cb].Selected = true;
                                    selcount++;
                                }
                            }
                        }
                        if (selcount > 0)
                            txtteachall.Text = "Allowance(" + selcount + ")";
                        else
                            txtteachall.Text = "--Select--";
                    }
                }
                if (spl1[1].Contains(','))
                {
                    string[] spl2 = spl1[1].Split(',');
                    if (spl2.Length > 0)
                    {
                        selcount = 0;
                        for (int cb = 0; cb < cblnontecall.Items.Count; cb++)
                        {
                            for (int sp = 0; sp < spl2.Length; sp++)
                            {
                                if (cblnontecall.Items[cb].Text == spl2[sp])
                                {
                                    cblnontecall.Items[cb].Selected = true;
                                    selcount++;
                                }
                            }
                        }
                        if (selcount > 0)
                            txtnonteachall.Text = "Allowance(" + selcount + ")";
                        else
                            txtnonteachall.Text = "--Select--";
                    }
                }
            }
        }
    }

    protected void btnsavestfall_Click(object sender, EventArgs e)
    {
        try
        {
            string allvalue = "";
            string teachall = "";
            string nonteachall = "";
            if (txtteachall.Text.Trim() != "--Select--")
            {
                for (int ik = 0; ik < cbltecall.Items.Count; ik++)
                {
                    if (cbltecall.Items[ik].Selected == true)
                    {
                        if (teachall.Trim() == "")
                            teachall = Convert.ToString(cbltecall.Items[ik].Text);
                        else
                            teachall = teachall + "," + Convert.ToString(cbltecall.Items[ik].Text);
                    }
                }
            }
            else
                teachall = "";
            if (txtnonteachall.Text.Trim() != "--Select--")
            {
                for (int ik = 0; ik < cblnontecall.Items.Count; ik++)
                {
                    if (cblnontecall.Items[ik].Selected == true)
                    {
                        if (nonteachall.Trim() == "")
                            nonteachall = Convert.ToString(cblnontecall.Items[ik].Text);
                        else
                            nonteachall = nonteachall + "," + Convert.ToString(cblnontecall.Items[ik].Text);
                    }
                }
            }
            else
                nonteachall = "";
            allvalue = teachall + ";" + nonteachall;
            string insq = "if exists(select * from Master_Settings where Settings='StaffType Allowance' and usercode='" + Convert.ToString(Session["usercode"]) + "') update Master_Settings set value='" + allvalue + "' where Settings='StaffType Allowance' and usercode='" + Convert.ToString(Session["usercode"]) + "' else insert into Master_Settings (usercode,settings,value) values ('" + Convert.ToString(Session["usercode"]) + "','StaffType Allowance','" + allvalue + "')";
            int inscount = d2.update_method_wo_parameter(insq, "Text");
            if (inscount > 0)
            {
                alertpopwindow.Visible = false;
                img_div1.Visible = true;
                lblsavealert.Visible = true;
                lblsavealert.Text = "Settings Saved Successfully!";
            }
        }
        catch { }
    }

    protected void btnexitstffall_Click(object sender, EventArgs e)
    {
        alertpopwindow.Visible = false;
    }

    protected void btnerrclose_Click(object sender, EventArgs e)
    {
        img_div1.Visible = false;
    }

    private void getdictvaltecnontec()
    {
        dictgetsettec.Clear();
        dictgetsetnontec.Clear();
        try
        {
            string selq = d2.GetFunction("select value from Master_Settings where Settings='StaffType Allowance' and usercode='" + Convert.ToString(Session["usercode"]) + "'");
            if (!String.IsNullOrEmpty(selq) && selq.Trim() != "0" && selq.Trim() != ";")
            {
                string[] spl1 = selq.Split(';');
                if (spl1.Length > 0)
                {
                    if (spl1[0].Contains(','))
                    {
                        string[] spl2 = spl1[0].Split(',');
                        if (spl2.Length > 0)
                        {
                            for (int sp = 0; sp < spl2.Length; sp++)
                            {
                                if (!dictgetsettec.ContainsKey(Convert.ToString(spl2[sp])))
                                    dictgetsettec.Add(Convert.ToString(spl2[sp]), 0);
                            }
                        }
                    }
                    if (spl1[1].Contains(','))
                    {
                        string[] spl2 = spl1[1].Split(',');
                        if (spl2.Length > 0)
                        {
                            for (int sp = 0; sp < spl2.Length; sp++)
                            {
                                if (!dictgetsetnontec.ContainsKey(Convert.ToString(spl2[sp])))
                                    dictgetsetnontec.Add(Convert.ToString(spl2[sp]), 0);
                            }
                        }
                    }
                }
            }
        }
        catch { }
    }


    private void getdictvaltecnontecs()//delsis1603
    {
        dictgetsettecs.Clear();
        dictgetsetnontecs.Clear();
        try
        {
            string selq = d2.GetFunction("select value from Master_Settings where Settings='StaffType Allowance' and usercode='" + Convert.ToString(Session["usercode"]) + "'");
            if (!String.IsNullOrEmpty(selq) && selq.Trim() != "0" && selq.Trim() != ";")
            {
                string[] spl1 = selq.Split(';');
                if (spl1.Length > 0)
                {
                    if (spl1[0].Contains(','))
                    {
                        string[] spl2 = spl1[0].Split(',');
                        if (spl2.Length > 0)
                        {
                            for (int sp = 0; sp < spl2.Length; sp++)
                            {
                                if (!dictgetsettecs.ContainsKey(Convert.ToString(spl2[sp])))
                                    dictgetsettecs.Add(Convert.ToString(spl2[sp]), 0);
                            }
                        }
                    }
                    if (spl1[1].Contains(','))
                    {
                        string[] spl2 = spl1[1].Split(',');
                        if (spl2.Length > 0)
                        {
                            for (int sp = 0; sp < spl2.Length; sp++)
                            {
                                if (!dictgetsetnontecs.ContainsKey(Convert.ToString(spl2[sp])))
                                    dictgetsetnontecs.Add(Convert.ToString(spl2[sp]), 0);
                            }
                        }
                    }
                }
            }
        }
        catch { }
    }

    #endregion

    private string GetLinkName(string reportname)
    {
        string LinkName = string.Empty;
        switch (reportname)
        {
            case "Format 1":
                LinkName = "Salary Format1";
                break;
            case "Format 2":
                LinkName = "Salary Format2";
                break;
            case "Format 3":
                LinkName = "Salary Format3";
                break;
            case "Format 4":
                LinkName = "Salary Format4";
                break;
            case "Department Wise":
                LinkName = "Salary Department Wise";
                break;
        }
        return LinkName;
    }

    public void loadcolumns(object sender, EventArgs e)
    {
        try
        {
            string linkname = GetLinkName(ddlreport.SelectedItem.Text);
            string columnvalue = "";
            int clsupdate = 0;
            lnk_columnorder.Visible = true;
            DataSet dscol = new DataSet();
            string selcol = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + Convert.ToString(Session["collegecode"]) + "'";
            dscol.Clear();
            dscol = d2.select_method_wo_parameter(selcol, "Text");
            if (columncount() == true)
            {
                if (cblsearch.Items.Count > 0)
                {
                    for (int i = 0; i < cblsearch.Items.Count; i++)
                    {
                        if (cblsearch.Items[i].Selected == true)
                        {
                            if (columnvalue == "")
                                columnvalue = Convert.ToString(cblsearch.Items[i].Value);
                            else
                                columnvalue = columnvalue + ',' + Convert.ToString(cblsearch.Items[i].Value);
                        }
                    }
                }
            }
            else if (dscol.Tables.Count > 0 && dscol.Tables[0].Rows.Count > 0)
            {
                for (int col = 0; col < dscol.Tables[0].Rows.Count; col++)
                {
                    string value = Convert.ToString(dscol.Tables[0].Rows[col]["LinkValue"]);
                    string[] valuesplit = value.Split(',');
                    if (valuesplit.Length > 0)
                    {
                        for (int k = 0; k < valuesplit.Length; k++)
                        {
                            if (columnvalue == "")
                                columnvalue = Convert.ToString(valuesplit[k]);
                            else
                                columnvalue = columnvalue + ',' + Convert.ToString(valuesplit[k]);
                        }
                    }
                }
            }
            else
            {
                for (int i = 0; i < cblsearch.Items.Count; i++)
                {
                    cblsearch.Items[i].Selected = true;
                    if (columnvalue == "")
                        columnvalue = Convert.ToString(cblsearch.Items[i].Value);
                    else
                        columnvalue = columnvalue + ',' + Convert.ToString(cblsearch.Items[i].Value);
                }
            }
            if (columnvalue != "" && columnvalue != null)
            {
                string clsinsert = " if exists(select * from New_InsSettings where LinkName='" + linkname + "' and college_code='" + Convert.ToString(Session["collegecode"]) + "' and user_Code='" + usercode + "') update New_InsSettings set LinkValue='" + columnvalue + "' where LinkName='" + linkname + "' and user_code='" + usercode + "' and college_code='" + Convert.ToString(Session["collegecode"]) + "' else insert into New_InsSettings (LinkName,LinkValue,user_code,college_code)values('" + linkname + "','" + columnvalue + "','" + usercode + "','" + Convert.ToString(Session["collegecode"]) + "')";
                clsupdate = d2.update_method_wo_parameter(clsinsert, "Text");
            }
            if (clsupdate == 1)
            {
                string sel = "select LinkValue from New_InsSettings where LinkName='" + linkname + "' and  user_code='" + usercode + "' and college_code='" + Convert.ToString(Session["collegecode"]) + "' ";
                DataSet dscolor = new DataSet();
                dscolor.Clear();
                dscolor = d2.select_method_wo_parameter(sel, "Text");
                if (dscolor.Tables.Count > 0)
                {
                    if (dscolor.Tables[0].Rows.Count > 0)
                    {
                        string value = Convert.ToString(dscolor.Tables[0].Rows[0]["LinkValue"]);
                        string[] value1 = value.Split(',');
                        if (value1.Length > 0)
                        {
                            for (int i = 0; i < value1.Length; i++)
                            {
                                string val = value1[i].ToString();
                                for (int k = 0; k < cblsearch.Items.Count; k++)
                                {
                                    if (val == cblsearch.Items[k].Value)
                                    {
                                        cblsearch.Items[k].Selected = true;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        catch (Exception ex) { d2.sendErrorMail(ex, Convert.ToString(Session["collegecode"]), "salary1.aspx"); }
    }

    public bool columncount()
    {
        bool colorder = false;
        try
        {
            for (int i = 0; i < cblsearch.Items.Count; i++)
            {
                if (cblsearch.Items[i].Selected == true)
                    colorder = true;
            }
        }
        catch { }
        return colorder;
    }

    protected void CheckBox_column_CheckedChanged(object sender, EventArgs e)
    {
        try
        {
            if (CheckBox_column.Checked == true)
            {
                for (int i = 0; i < cblsearch.Items.Count; i++)
                {
                    string si = Convert.ToString(i);
                    cblsearch.Items[i].Selected = true;
                    lnk_columnorder.Visible = true;
                }
                lnk_columnorder.Visible = true;
            }
            else
            {
                for (int i = 0; i < cblsearch.Items.Count; i++)
                {
                    cblsearch.Items[i].Selected = false;
                    lnk_columnorder.Visible = false;
                }
            }
        }
        catch (Exception ex) { }
    }

    protected void LinkButtonsremove_Click(object sender, EventArgs e)
    {
        cblsearch.ClearSelection();
        CheckBox_column.Checked = false;
        lnk_columnorder.Visible = false;
    }
    //delsi04.04.2018
    protected void lnk_btn_print_click(object sender, EventArgs e)
    {
        try
        {
            printpopup.Visible = true;

            string footerdetails = d2.GetFunction("select LinkValue from New_InsSettings where LinkName='printpdf_footer' and college_code='" + Convert.ToString(collegecode) + "' and user_Code='" + Convert.ToString(Session["usercode"]) + "'");

            if (footerdetails.Contains(','))
            {
                string[] splitval = footerdetails.Split(',');
                txt_print.Text = Convert.ToString(splitval[0]);
                txt_certificate.Text = Convert.ToString(splitval[1]);

            }
            else
            {
                txt_print.Text = footerdetails;
                if (footerdetails == "0")
                {
                    txt_print.Text = "";
                }
            }
        }
        catch (Exception ex)
        {


        }

    }

    protected void btnsavePrint_Click(object sender, EventArgs e)
    {
        try
        {
            string GetName = Convert.ToString(txt_print.Text);

            string getcontent = Convert.ToString(txt_certificate.Text);

            if (getcontent != "")//delsi 3107
            {
                GetName = GetName + "," + getcontent;

            }

            string insquer = "if exists(select * from New_InsSettings where LinkName='printpdf_footer' and user_code='" + Convert.ToString(Session["usercode"]) + "' and college_code='" + Convert.ToString(collegecode) + "') update New_InsSettings set LinkValue='" + GetName + "' where LinkName='printpdf_footer' and user_code='" + Convert.ToString(Session["usercode"]) + "' and college_code='" + Convert.ToString(collegecode) + "' else insert into New_InsSettings (LinkName,LinkValue,user_code,college_code)values('printpdf_footer','" + GetName + "','" + Convert.ToString(Session["usercode"]) + "','" + Convert.ToString(collegecode) + "')";

            int inscount = d2.update_method_wo_parameter(insquer, "Text");
            if (inscount > 0)
            {
                alertpopwindow.Visible = false;
                img_div1.Visible = true;
                lblsavealert.Visible = true;
                lblsavealert.Text = "Saved Successfully!";
            }
        }
        catch (Exception ex)
        {


        }

    }

    protected void btnexitPrint_Click(object sender, EventArgs e)
    {
        printpopup.Visible = false;
    }
    //delsi04.04.2018

    protected void loadClgBank()//popdesignationapt delsi2305
    {

        ds.Clear();
        ddl_colbank.Items.Clear();
        // string collegecode1 = Convert.ToString(ddlcollege.SelectedValue);
        string statequery = "select distinct BankPK,BankName from FM_FinBankMaster where CollegeCode='" + collegecode + "'";
        ds = d2.select_method_wo_parameter(statequery, "Text");
        if (ds.Tables[0].Rows.Count > 0)
        {
            ddl_colbank.DataSource = ds;
            ddl_colbank.DataTextField = "BankName";
            ddl_colbank.DataValueField = "BankPK";
            ddl_colbank.DataBind();
            // ddl_colbank.Items.Insert(0, new ListItem("Select", "0"));
            ddl_colbank.Items.Insert(0, new System.Web.UI.WebControls.ListItem("Select", "0"));
        }
        else
        {
            ddl_colbank.Items.Insert(0, new System.Web.UI.WebControls.ListItem("Select", "0"));

        }
    }

    protected void btnsalary_Click(object sender, EventArgs e)
    {
        try
        {
            string footerdetails = "";
            string footercontent = "";
            string printcontent = "";
            DataSet ds = new DataSet();
            fpsalary.SaveChanges();
            Font Fontbold = new Font("Book Antiqua", 18, FontStyle.Bold);
            Font Fontbold1 = new Font("Book Antiqua", 20, FontStyle.Bold);
            Font Fontsmall = new Font("Book Antiqua", 16, FontStyle.Regular);
            Font Fontsmall1 = new Font("Book Antiqua", 13, FontStyle.Bold);
            Gios.Pdf.PdfDocument mydocument = new Gios.Pdf.PdfDocument(PdfDocumentFormat.InCentimeters(30, 40));
            string str = "select * from incentives_master where college_code='" + Session["collegecode"].ToString() + "'";
            ds = d2.select_method_wo_parameter(str, "Text");

            string allowmaster = "";
            string deductmaster = "";

            if (ds.Tables[0].Rows.Count > 0)
            {
                allowmaster = ds.Tables[0].Rows[0]["allowances"].ToString();
                deductmaster = ds.Tables[0].Rows[0]["deductions"].ToString();
            }
            SortedDictionary<string, string> dict = new SortedDictionary<string, string>();
            string[] spdet = deductmaster.Split(';');
            for (int d = 0; d <= spdet.GetUpperBound(0); d++)
            {
                string[] spdedet = spdet[d].Split('\\');
                if (spdedet.GetUpperBound(0) >= 1)
                {
                    string val = spdedet[0];
                    string val1 = spdedet[1];
                    dict.Add(val, val1);
                }
            }
            string date3 = Txtentryfrom.Text.ToString();
            string datefrom3;
            int monthname1;
            string monyear;
            string monthname2 = "";
            int monthnamenum;
            string yearto = "";
            string monyearto = "";
            string[] split = date3.Split(new Char[] { '/' });
            int totlastaff = 0;
            int left1 = 70;
            int left3 = 423;
            int incrre = 1;
            for (int res = incrre; res <= Convert.ToInt32(fpsalary.Sheets[0].RowCount) - 1; res = res + incrre)
            {
                string text = fpsalary.Sheets[0].Cells[res, 2].Text.ToString();
                if (text != "" && text != null)
                {
                    int isval = Convert.ToInt32(fpsalary.Sheets[0].Cells[res, 1].Value);
                    if (isval == 1)
                    {
                        totlastaff++;
                    }
                }
            }
            datefrom3 = split[1].ToString() + "/" + split[0].ToString() + "/" + split[2].ToString();
            string date4 = Txtentryto.Text.ToString();
            int year3 = Convert.ToInt16(split[2].ToString());
            string[] split1 = date4.Split(new Char[] { '/' });
            string dateto4 = split1[1].ToString() + "/" + split1[0].ToString() + "/" + split1[2].ToString();
            monthname2 = split1[0].ToString();
            monthnamenum = Convert.ToInt32(monthname2.ToString());
            yearto = split1[2].ToString();
            string mnmae = split[1].ToString();
            monthname1 = Convert.ToInt16(mnmae);
            monthname2 = split1[1].ToString();
            monthnamenum = Convert.ToInt16(monthname2);
            string year = split[2].ToString();
            monyear = monthname1.ToString() + "/" + year;
            monyearto = monthnamenum.ToString() + "/" + yearto;
            Boolean getvalflag = false;
            int dayfrm = 0;
            string dayto;
            int daytonum;
            string dayfrom = split[0].ToString();

            //  sql = "select m.*,s.staff_name,s.join_date,s.pfnumber,s.bankaccount,s.pangirnumber ,st.payscale as pay_scalenew , st.allowances as actallowance,h.dept_name as deptname,d.desig_name as designame from monthlypay m,staffmaster s,stafftrans st,hrdept_master h,desig_master d where s.staff_code=m.staff_code and st.dept_code=h.dept_code and st.desig_code=d.desig_code and m.staff_code=st.staff_code and st.latestrec = 1 and m.fdate ='" + datefrom3 + "' and m.tdate ='" + dateto4 + "'";// and m.PayYear='" + ddlyear2.SelectedValue.ToString() + "' and m.PayMonth='" + cblmonth.SelectedValue.ToString() + "'

            sql = "select m.*,s.staff_name,s.join_date,s.pfnumber,s.bankaccount,s.pangirnumber ,st.payscale as pay_scalenew , st.allowances as actallowance,h.dept_name as deptname,d.desig_name as designame from monthlypay m,staffmaster s,stafftrans st,hrdept_master h,desig_master d where s.staff_code=m.staff_code and st.dept_code=h.dept_code and st.desig_code=d.desig_code and m.staff_code=st.staff_code and st.latestrec = 1 and m.PayYear='" + ddlyear2.SelectedValue.ToString() + "' and m.PayMonth='" + cblmonth.SelectedValue.ToString() + "'";// and m.PayYear='" + ddlyear2.SelectedValue.ToString() + "' and m.PayMonth='" + cblmonth.SelectedValue.ToString() + "'



            DataSet dspay = d2.select_method_wo_parameter(sql, "text");   //and m.PayMonth ='" + Convert.ToString(cblmonth.SelectedItem.Value) + "' and m.PayYear ='" + Convert.ToString(ddlyear2.SelectedItem.Text) + "'
            DataTable dtpay = dspay.Tables[0];
            DataView dvpay = new DataView();
            DataView dvapp = new DataView();
            int gettop = 0;
            int rec = 0;
            Gios.Pdf.PdfPage mypdfpage = mydocument.NewPage();
            DataView dvstaffattendance = new DataView();
            Gios.Pdf.PdfTable allowance;
            Gios.Pdf.PdfTable deduction;
            Gios.Pdf.PdfTablePage newpdftabpage2;
            if (ddlreport.SelectedItem.Text == "Format 3")
            {
                for (int res = 2; res <= Convert.ToInt32(fpsalary.Sheets[0].RowCount) - 1; res = res + 2)
                {
                    string text = fpsalary.Sheets[0].Cells[res, 2].Text.ToString();
                    if (text != "" && text != null)
                    {
                        int isval = Convert.ToInt32(fpsalary.Sheets[0].Cells[res, 1].Value);

                        if (isval == 1)
                        {
                            rec++;
                            getvalflag = true;
                            if (rec % 2 != 0)
                            {
                                if (rec != 1)
                                {
                                    mypdfpage = mydocument.NewPage();
                                }
                                gettop = 0;
                            }
                            else
                            {
                                if (gettop < 629)
                                {
                                    gettop = 0;
                                    mypdfpage = mydocument.NewPage();
                                }
                                else
                                {
                                    mypdfpage = mydocument.NewPage();
                                    gettop = 0;
                                }
                            }

                            string staffcode = Convert.ToString(fpsalary.Sheets[0].Cells[res, 2].Tag);
                            string designation = Convert.ToString(fpsalary.Sheets[0].Cells[res, 0].Tag);
                            string deptname = Convert.ToString(fpsalary.Sheets[0].Cells[res, 0].Note);
                            string staffname = "";
                            string Allowances = "";
                            Double totdection = 0;
                            dtpay.DefaultView.RowFilter = " staff_code='" + staffcode + "'";
                            dvpay = dtpay.DefaultView;
                            if (dvpay.Count > 0)
                            {
                                staffname = dvpay[0]["staff_name"].ToString();

                                Allowances = dvpay[0]["allowances"].ToString();
                                designation = dvpay[0]["designame"].ToString();
                                deptname = dvpay[0]["deptname"].ToString();
                                string setyear = dvpay[0]["PayYear"].ToString();
                                string joindate = Convert.ToString(dvpay[0]["join_date"]);
                                string staffjoindate = string.Empty;

                                if (joindate.Contains(' '))
                                {
                                    string[] splitjoin = joindate.Split(' ');
                                    string[] split2 = splitjoin[0].Split('/');
                                    // staffjoindate=split2[1]+"/"+split2[0]+"/"+split2[2];

                                    string monthName = CultureInfo.CurrentCulture.DateTimeFormat.GetAbbreviatedMonthName(Convert.ToInt32(split2[0]));
                                    staffjoindate = split2[0] + "-" + monthName + "-" + split2[2];
                                }
                                if (setyear.Trim() == "" || setyear == null)
                                {
                                    // setyear = yearto;
                                }

                                int starttop = gettop;
                                int coltop = gettop;
                                int rowspace = 15;

                                PdfTextArea ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocument, 0, coltop + 30, 900, 50), System.Drawing.ContentAlignment.MiddleCenter, "SALARY CERTIFICATE");
                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, 0, coltop + 35, 900, 50), System.Drawing.ContentAlignment.MiddleCenter, "____________________");
                                mypdfpage.Add(ptsp);

                                string month = cblmonth.SelectedItem.Text;
                                string submonth = month.Substring(0, 3);
                                //   ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                //    new PdfArea(mydocument, left1, coltop + 70, 900, 100), System.Drawing.ContentAlignment.TopLeft, "Following are the pay particulars of " + staffname + "," + designation + "," + "");

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black, new PdfArea(mydocument, left1 + 160, coltop + 88, 900, 100), System.Drawing.ContentAlignment.TopLeft, "This is to certify that");
                                mypdfpage.Add(ptsp);
                                ptsp = new PdfTextArea(Fontsmall1, System.Drawing.Color.Black, new PdfArea(mydocument, left1 - 15, coltop + 90, 900, 100), System.Drawing.ContentAlignment.TopCenter, " " + staffname + " ," + designation + "," + "");

                                mypdfpage.Add(ptsp);


                                //   ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                // new PdfArea(mydocument, left1, coltop + 90, 650, 50), System.Drawing.ContentAlignment.TopLeft, "Department of " + deptname + " of our college for the month of " + submonth + " " + yearto + "");

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                               new PdfArea(mydocument, left1, coltop + 110, 650, 50), System.Drawing.ContentAlignment.TopLeft, "Department of " + deptname + " has been working in this institution since " + staffjoindate + ".");

                                mypdfpage.Add(ptsp);


                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                               new PdfArea(mydocument, left1, coltop + 128, 650, 50), System.Drawing.ContentAlignment.TopLeft, "His pay particulars for the month of ");

                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall1, System.Drawing.Color.Black,
                                                                                             new PdfArea(mydocument, left1 + 255, coltop + 130, 650, 50), System.Drawing.ContentAlignment.TopLeft, submonth + " " + setyear);

                                mypdfpage.Add(ptsp);

                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                           new PdfArea(mydocument, left1 + 310, coltop + 128, 650, 50), System.Drawing.ContentAlignment.TopLeft, " is given below.");
                                mypdfpage.Add(ptsp);
                                coltop = coltop + 120;
                                coltop = coltop + rowspace;
                                coltop = coltop + rowspace + rowspace;
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1 + 100, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "EARNINGS:");
                                mypdfpage.Add(ptsp);
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, left1 + 100, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "__________");
                                mypdfpage.Add(ptsp);



                                //if (chkactual.Checked == true)
                                //{
                                //    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                //                                   new PdfArea(mydocument, 190, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "Actual Amount");
                                //    mypdfpage.Add(ptsp);
                                //}

                                //ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                //                                    new PdfArea(mydocument, 310, coltop, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "AMOUNT");
                                //mypdfpage.Add(ptsp);
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1 + 400, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "DEDUCTIONS:");
                                mypdfpage.Add(ptsp);
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1 + 400, coltop, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "____________");
                                mypdfpage.Add(ptsp);
                                //ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                //                                   new PdfArea(mydocument, 310, coltop + 165, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "AMOUNT");
                                //mypdfpage.Add(ptsp);
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                 new PdfArea(mydocument, left1 + 203, coltop + 53, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "Rs.");
                                mypdfpage.Add(ptsp);


                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocument, left1 + 503, coltop + 53, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "Rs.");
                                mypdfpage.Add(ptsp);
                                int dedu = coltop + 10;
                                int allo = coltop + 10;
                                DataTable Btbl = new DataTable();
                                DataColumn dc;
                                DataRow dr;
                                dc = new DataColumn();
                                dc.ColumnName = "Earnings";
                                Btbl.Columns.Add(dc);
                                dc = new DataColumn();
                                dc.ColumnName = "Amount";
                                Btbl.Columns.Add(dc);

                                DataTable Btbl1 = new DataTable();
                                DataColumn dc1 = new DataColumn();
                                DataRow dr1;
                                dc1.ColumnName = "Deduction";
                                Btbl1.Columns.Add(dc1);
                                dc1 = new DataColumn();
                                dc1.ColumnName = "Amounts";
                                Btbl1.Columns.Add(dc1);

                                if (dvpay.Count > 0)
                                {
                                    double gradepay = 0;
                                    double basic_pay3 = 0;
                                    string allowance3 = "";
                                    string deduction3 = "";
                                    double bassicd = 0;
                                    double G_pay = 0;
                                    gradepay = Convert.ToDouble(dvpay[0]["grade_pay"].ToString());
                                    basic_pay3 = Convert.ToDouble(dvpay[0]["bsalary"].ToString());
                                    G_pay = Convert.ToDouble(dvpay[0]["G_Pay"].ToString());
                                    Double actbasic = Convert.ToDouble(dvpay[0]["basic_alone"].ToString());
                                    bassicd = Convert.ToDouble(basic_pay3);
                                    if (bassicd != 0)
                                    {
                                        allo = allo + rowspace;
                                        //  ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                        //new PdfArea(mydocument, left1, allo, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Basic Pay");
                                        //mypdfpage.Add(ptsp);
                                        dr = Btbl.NewRow();
                                        dr[0] = "Basic Pay";
                                        if (chkactual.Checked == true)
                                        {
                                            actbasic = Math.Round(actbasic, 2, MidpointRounding.AwayFromZero);
                                            string alowamount1 = actbasic.ToString();
                                            //if (!alowamount1.Contains('.'))
                                            //{
                                            //    alowamount1 = alowamount1 + ".00";
                                            //}
                                            //else
                                            //{
                                            //    string[] sp = alowamount1.Split('.');
                                            //    if (sp[1].Length < 2)
                                            //    {
                                            //        alowamount1 = alowamount1 + "0";
                                            //    }
                                            //}
                                            // ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                            //  new PdfArea(mydocument, 230, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, actbasic.ToString());
                                            //  mypdfpage.Add(ptsp);
                                        }
                                        bassicd = Math.Round(bassicd, 2, MidpointRounding.AwayFromZero);
                                        string alowamount = bassicd.ToString();
                                        //if (!alowamount.Contains('.'))
                                        //{
                                        //    alowamount = alowamount + ".00";
                                        //}
                                        //else
                                        //{
                                        //    string[] sp = alowamount.Split('.');
                                        //    if (sp[1].Length < 2)
                                        //    {
                                        //        alowamount = alowamount + "0";
                                        //    }
                                        //}
                                        //  ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                        // new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                                        // mypdfpage.Add(ptsp);
                                        dr[1] = alowamount.ToString();
                                        Btbl.Rows.Add(dr);
                                    }
                                    if (gradepay != 0)
                                    {
                                        allo = allo + rowspace;
                                        //    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                        //new PdfArea(mydocument, left1, allo, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "Grade Pay");
                                        //  mypdfpage.Add(ptsp);
                                        gradepay = Math.Round(gradepay, 2, MidpointRounding.AwayFromZero);
                                        dr = Btbl.NewRow();
                                        dr[0] = "Grade Pay";
                                        string alowamount = gradepay.ToString();
                                        //if (!alowamount.Contains('.'))
                                        //{
                                        //    alowamount = alowamount + ".00";
                                        //}
                                        //else
                                        //{
                                        //    string[] sp = alowamount.Split('.');
                                        //    if (sp[1].Length < 2)
                                        //    {
                                        //        alowamount = alowamount + "0";
                                        //    }
                                        //}
                                        // ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                        //new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                                        // mypdfpage.Add(ptsp);
                                        dr[1] = alowamount.ToString();
                                        Btbl.Rows.Add(dr);
                                    }
                                    Dictionary<string, string> dicactaloo = new Dictionary<string, string>();
                                    dspay.Tables[0].DefaultView.RowFilter = "staff_code='" + staffcode + "'";
                                    DataView dvallow = dspay.Tables[0].DefaultView;
                                    string[] spallow = allowmaster.Split(';');
                                    for (int alo = 0; alo <= spallow.GetUpperBound(0); alo++)
                                    {
                                        string[] splalot = spallow[alo].Split('\\');
                                        if (splalot.GetUpperBound(0) >= 2)
                                        {
                                            string orallo = splalot[0].ToString();
                                            int r = 0;
                                            allowance3 = dvpay[0]["allowances"].ToString();
                                            int c = 0;
                                            string[] allowanmce_arr1;
                                            string alowancesplit;
                                            int exatval = 0;
                                            allowanmce_arr1 = allowance3.Split('\\');
                                            for (int i = c; i <= allowanmce_arr1.GetUpperBound(0); i++)
                                            {
                                                exatval = allowanmce_arr1.GetUpperBound(0);
                                                alowancesplit = allowanmce_arr1[i];
                                                string[] allowanceda = alowancesplit.Split(';');
                                                if (allowanceda.GetUpperBound(0) >= 3)
                                                {
                                                    string da = allowanceda[0];
                                                    string mode = Convert.ToString(allowanceda[1]);
                                                    string[] spval = allowanceda[2].Split('-');
                                                    string daac = spval[0];
                                                    if (daac.Trim() == "" || daac == null)
                                                    {
                                                        daac = "0";
                                                    }
                                                    string da3 = allowanceda[3];
                                                    double ds3 = Convert.ToDouble(da3);
                                                    ds3 = Math.Round(ds3, 2, MidpointRounding.AwayFromZero);
                                                    string DblAllowActVal = daac;
                                                    string DblAllowVal = allowanceda[3];
                                                    if (orallo.Trim().ToLower() == da.Trim().ToLower())
                                                    {
                                                        if (ds3 != 0)
                                                        {
                                                            if (spll_alll_tag_arry.GetUpperBound(0) >= r)
                                                            {
                                                                if (spll_alll_tag_arry[r] != da)
                                                                {
                                                                    allo = allo + rowspace;
                                                                    // ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    //          new PdfArea(mydocument, left1, allo, 200, 50), System.Drawing.ContentAlignment.MiddleLeft, splalot[2].ToString());
                                                                    dr = Btbl.NewRow();
                                                                    dr[0] = splalot[2].ToString();
                                                                    mypdfpage.Add(ptsp);
                                                                    if (chkactual.Checked == true)
                                                                    {
                                                                        if (mode.Trim().ToUpper() == "AMOUNT")
                                                                        {
                                                                            //      ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            //         new PdfArea(mydocument, 230, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, daac);
                                                                            //  mypdfpage.Add(ptsp);
                                                                        }
                                                                        else
                                                                        {
                                                                            if (dicactaloo.ContainsKey(da.ToString().Trim().ToLower()))
                                                                            {
                                                                                daac = dicactaloo[da.ToString().Trim().ToLower()];
                                                                            }
                                                                            //  ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            // new PdfArea(mydocument, 230, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, daac);
                                                                            // mypdfpage.Add(ptsp);
                                                                        }
                                                                    }
                                                                    string alowamount = ds3.ToString();
                                                                    //if (!alowamount.Contains('.'))
                                                                    //{
                                                                    //    alowamount = alowamount + ".00";
                                                                    //}
                                                                    //else
                                                                    //{
                                                                    //    string[] sp = alowamount.Split('.');
                                                                    //    if (sp[1].Length < 2)
                                                                    //    {
                                                                    //        alowamount = alowamount + "0";
                                                                    //    }
                                                                    //}
                                                                    //    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                    //   new PdfArea(mydocument, 320, allo, 50, 50), System.Drawing.ContentAlignment.MiddleRight, alowamount);
                                                                    //   mypdfpage.Add(ptsp);
                                                                    dr[1] = alowamount.ToString();
                                                                    Btbl.Rows.Add(dr);
                                                                }
                                                                else
                                                                {
                                                                    if (splallow.Contains(da))
                                                                    {
                                                                        splallow[da] = da3.ToString();
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        i = allowanmce_arr1.GetUpperBound(0);
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    int incval = 185;
                                    foreach (var kvp in dict)
                                    {
                                        string setval = kvp.Key.ToString();
                                        string setval1 = kvp.Value.ToString();
                                        deduction3 = dvpay[0]["deductions"].ToString();
                                        string[] deduction_arr1;
                                        string deductionsplit1;
                                        deduction_arr1 = deduction3.Split('\\');
                                        for (int sp = 0; sp <= deduction_arr1.GetUpperBound(0); sp++)
                                        {
                                            deductionsplit1 = deduction_arr1[sp];
                                            string[] deductionda;
                                            deductionda = deductionsplit1.Split(';');
                                            if (deductionda.GetUpperBound(0) >= 3)
                                            {
                                                string de = deductionda[0];
                                                string de3 = deductionda[3];
                                                double de3d = Convert.ToDouble(de3);
                                                de3d = Math.Round(de3d, 2, MidpointRounding.AwayFromZero);
                                                if (setval == de)
                                                {
                                                    if (de3d != 0)
                                                    {
                                                        dedu = dedu + rowspace;
                                                        //      ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                        //    new PdfArea(mydocument, left1, coltop + incval, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, setval.ToString());
                                                        // mypdfpage.Add(ptsp);
                                                        dr1 = Btbl1.NewRow();
                                                        dr1[0] = setval.ToString();
                                                        totdection = totdection + de3d;
                                                        string deamount = de3d.ToString();
                                                        //if (!deamount.Contains('.'))
                                                        //{
                                                        //    deamount = deamount + ".00";
                                                        //}
                                                        //else
                                                        //{
                                                        //    string[] spd = deamount.Split('.');
                                                        //    if (spd[1].Length < 2)
                                                        //    {
                                                        //        deamount = deamount + "0";
                                                        //    }
                                                        //}
                                                        //   ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                        //   new PdfArea(mydocument, 320, coltop + incval, 50, 50), System.Drawing.ContentAlignment.MiddleRight, deamount);
                                                        //   mypdfpage.Add(ptsp);

                                                        dr1[1] = deamount.ToString();
                                                        Btbl1.Rows.Add(dr1);
                                                        incval += 20;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                if (allo > dedu)
                                {
                                    if (coltop < allo)
                                    {
                                        coltop = allo;
                                    }
                                }
                                else
                                {
                                    if (coltop < dedu)
                                    {
                                        coltop = dedu;
                                    }
                                }
                                coltop = coltop + rowspace + rowspace;
                                Double nesal3 = Convert.ToDouble(dvpay[0]["netsal"].ToString());
                                nesal3 = Math.Round(nesal3, 2, MidpointRounding.AwayFromZero);
                                Double totall = Convert.ToDouble(dvpay[0]["netadd"].ToString());
                                totall = Math.Round(totall, 2, MidpointRounding.AwayFromZero);
                                double netded = Convert.ToDouble(dvpay[0]["netded"].ToString());
                                netded = Math.Round(netded, 2, MidpointRounding.AwayFromZero);
                                //string finalamount = totall.ToString();
                                //if (!finalamount.Contains('.'))
                                //{
                                //    finalamount = finalamount + ".00";
                                //}
                                //else
                                //{
                                //    string[] sp = finalamount.Split('.');
                                //    if (sp[1].Length < 2)
                                //    {
                                //        finalamount = finalamount + "0";
                                //    }
                                //}
                                dr = Btbl.NewRow();
                                dr[0] = "Gross Total";
                                dr[1] = " Rs." + totall.ToString();
                                Btbl.Rows.Add(dr);
                                dr1 = Btbl1.NewRow();
                                dr1[0] = "Total Deduction";
                                dr1[1] = " Rs." + netded.ToString();
                                Btbl1.Rows.Add(dr1);
                                if (Btbl.Rows.Count > 0)
                                {
                                    allowance = mydocument.NewTable(Fontsmall, Btbl.Rows.Count, Btbl.Columns.Count, 2);
                                    allowance.SetBorders(System.Drawing.Color.Black, 1, BorderType.CompleteGrid);
                                    allowance.VisibleHeaders = false;
                                    for (int i = 0; i < Btbl.Rows.Count; i++)
                                    {
                                        string getallowtext = Convert.ToString(Btbl.Rows[i][0]);
                                        string getallowval = Convert.ToString(Btbl.Rows[i][1]);
                                        allowance.Columns[0].SetWidth(120);
                                        allowance.Columns[1].SetWidth(120);
                                        allowance.Cell(i, 0).SetContent(getallowtext);
                                        allowance.Cell(i, 1).SetContent(getallowval);
                                        allowance.Cell(i, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                                        allowance.Cell(i, 1).SetContentAlignment(ContentAlignment.MiddleRight);
                                    }
                                    newpdftabpage2 = allowance.CreateTablePage(new Gios.Pdf.PdfArea(mydocument, left1 + 50, allo, 250, 500));
                                    mypdfpage.Add(newpdftabpage2);
                                }
                                if (Btbl1.Rows.Count > 0)
                                {
                                    deduction = mydocument.NewTable(Fontsmall, Btbl1.Rows.Count, Btbl1.Columns.Count, 2);
                                    deduction.SetBorders(System.Drawing.Color.Black, 1, BorderType.CompleteGrid);
                                    deduction.VisibleHeaders = false;
                                    for (int i = 0; i < Btbl1.Rows.Count; i++)
                                    {
                                        string getdeducttext = Convert.ToString(Btbl1.Rows[i][0]);
                                        string getdeductval = Convert.ToString(Btbl1.Rows[i][1]);
                                        deduction.Columns[0].SetWidth(120);
                                        deduction.Columns[1].SetWidth(120);
                                        deduction.Cell(i, 0).SetContent(getdeducttext);
                                        deduction.Cell(i, 1).SetContent(getdeductval);
                                        deduction.Cell(i, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                                        deduction.Cell(i, 1).SetContentAlignment(ContentAlignment.MiddleRight);
                                    }
                                    newpdftabpage2 = deduction.CreateTablePage(new Gios.Pdf.PdfArea(mydocument, left1 + 350, allo, 250, 500));
                                    mypdfpage.Add(newpdftabpage2);
                                    coltop = (int)newpdftabpage2.Area.Height + allo + 20;
                                }
                                ptsp = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                                  new PdfArea(mydocument, left1 + 100, coltop + 20, 500, 50), System.Drawing.ContentAlignment.MiddleLeft, "GROSS SALARY");

                                mypdfpage.Add(ptsp);
                                ptsp = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                                 new PdfArea(mydocument, left1 + 300, coltop + 20, 500, 50), System.Drawing.ContentAlignment.MiddleLeft, "=" + "" + "Rs." + totall.ToString() + "/-");

                                mypdfpage.Add(ptsp);
                                coltop = coltop + 20;
                                ptsp = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                                new PdfArea(mydocument, left1 + 100, coltop + 20, 500, 50), System.Drawing.ContentAlignment.MiddleLeft, "DEDUCTIONS");
                                mypdfpage.Add(ptsp);
                                ptsp = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                                new PdfArea(mydocument, left1 + 300, coltop + 20, 500, 50), System.Drawing.ContentAlignment.MiddleLeft, "=" + "" + "Rs." + netded.ToString() + "/-");
                                mypdfpage.Add(ptsp);
                                coltop = coltop + 20;
                                ptsp = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                                new PdfArea(mydocument, left1 + 100, coltop + 20, 500, 50), System.Drawing.ContentAlignment.MiddleLeft, "NET SALARY");

                                mypdfpage.Add(ptsp);
                                ptsp = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                                 new PdfArea(mydocument, left1 + 300, coltop + 20, 500, 50), System.Drawing.ContentAlignment.MiddleLeft, "=" + "" + "Rs." + nesal3.ToString() + "/-");
                                mypdfpage.Add(ptsp);
                                coltop = coltop + 40;
                                string word = ConvertNumbertoWords(Convert.ToInt32(Math.Round(nesal3)));

                                ptsp = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                                new PdfArea(mydocument, left1 + 50, coltop + 20, 900, 50), System.Drawing.ContentAlignment.MiddleLeft, "(" + "Rupees " + " " + word + " Only" + ")");
                                mypdfpage.Add(ptsp);
                                footerdetails = d2.GetFunction("select LinkValue from New_InsSettings where LinkName='printpdf_footer' and college_code='" + Convert.ToString(collegecode) + "' and user_Code='" + Convert.ToString(Session["usercode"]) + "'");
                                if (footerdetails != "0")
                                {
                                    if (footerdetails.Contains(","))
                                    {
                                        string[] splitval = footerdetails.Split(',');
                                        footercontent = Convert.ToString(splitval[0]);
                                        printcontent = Convert.ToString(splitval[1]);
                                    }
                                    else
                                    {
                                        footercontent = footerdetails;
                                        printcontent = "";
                                    }
                                }
                                if (footerdetails == "0")
                                {
                                    footerdetails = "";
                                    printcontent = "";
                                }
                                coltop = coltop + 40;
                                ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                new PdfArea(mydocument, left1 + 40, coltop, 800, 50), System.Drawing.ContentAlignment.MiddleLeft, printcontent);

                                mypdfpage.Add(ptsp);
                                coltop = coltop + 100;
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                 new PdfArea(mydocument, left1 + 40, 770, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, DateTime.Now.ToString("dd-MMM-yyyy"));
                                mypdfpage.Add(ptsp);
                                ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                 new PdfArea(mydocument, left1 + 300, 770, 300, 50), System.Drawing.ContentAlignment.MiddleRight, footercontent);
                                mypdfpage.Add(ptsp);
                                //   coltop = 320;
                                //  ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                // new PdfArea(mydocument, left1, 235, 100, 50), System.Drawing.ContentAlignment.MiddleLeft, "TOTAL");
                                //   mypdfpage.Add(ptsp);
                                //   ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                //new PdfArea(mydocument, 320, 220, 50, 50), System.Drawing.ContentAlignment.MiddleRight, "-----------");
                                //   mypdfpage.Add(ptsp);
                                //   ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                // new PdfArea(mydocument, 320, 235, 50, 50), System.Drawing.ContentAlignment.MiddleRight, finalamount);
                                // mypdfpage.Add(ptsp);

                                //   ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                // new PdfArea(mydocument, left1, coltop + 240, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, "TOTAL");
                                //   mypdfpage.Add(ptsp);
                                //   ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                // new PdfArea(mydocument, left1, 770, 300, 50), System.Drawing.ContentAlignment.MiddleLeft, DateTime.Now.ToString("dd-MMM-yyyy"));
                                //   mypdfpage.Add(ptsp);
                                // footerdetails = d2.GetFunction("select LinkValue from New_InsSettings where LinkName='printpdf_footer' and college_code='" + Convert.ToString(collegecode) + "' and user_Code='" + Convert.ToString(Session["usercode"]) + "'");
                                //if (footerdetails == "0")                 
                                //{
                                //    footerdetails = "";
                                //}
                                //if (cbrupesinwords.Checked == true)
                                //{
                                //    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                //                              new PdfArea(mydocument, left1, coltop + 260, 500, 50), System.Drawing.ContentAlignment.MiddleLeft, "NET : ");
                                //    mypdfpage.Add(ptsp);
                                //    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                //                                      new PdfArea(mydocument, 310, coltop + 260, 150, 50), System.Drawing.ContentAlignment.MiddleRight, finalamount);
                                //    mypdfpage.Add(ptsp);
                                //    string word = ConvertNumbertoWords(Convert.ToInt32(Math.Round(nesal3)));
                                //    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                //                                     new PdfArea(mydocument, 40, coltop + 280, 650, 50), System.Drawing.ContentAlignment.MiddleRight, " (Rupees " + word + " Only)");
                                //    mypdfpage.Add(ptsp);
                                //}
                                //else
                                //{
                                //    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                //                              new PdfArea(mydocument, left1, coltop + 260, 500, 50), System.Drawing.ContentAlignment.MiddleLeft, "NET : ");
                                //    mypdfpage.Add(ptsp);
                                //    ptsp = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                //                                      new PdfArea(mydocument, 310, coltop + 260, 150, 50), System.Drawing.ContentAlignment.MiddleLeft, finalamount);
                                //    mypdfpage.Add(ptsp);
                                //    string word = ConvertNumbertoWords(Convert.ToInt32(Math.Round(nesal3)));
                                //    ptsp = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                //                                     new PdfArea(mydocument, 40, coltop + 280, 650, 50), System.Drawing.ContentAlignment.MiddleRight, " (Rupees " + word + " Only)");
                                //    mypdfpage.Add(ptsp);
                                //}
                                mypdfpage.SaveToDocument();
                                gettop = coltop + 100;
                            }
                        }
                    }
                }
            }
            if (getvalflag == true)
            {
                string appPath = HttpContext.Current.Server.MapPath("~");
                if (appPath != "")
                {
                    string szPath = appPath + "/Report/";
                    string szFile = DateTime.Now.ToString("ddMMyyyyhhmmsstt") + "Salary Certificate's.pdf";
                    mydocument.SaveToFile(szPath + szFile);
                    Response.ClearHeaders();
                    Response.AddHeader("Content-Disposition", "attachment; filename=" + szFile);
                    Response.ContentType = "application/pdf";
                    Response.WriteFile(szPath + szFile);
                }
            }
            else
            {
                ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('Please Select Staff and then Proceed')", true);
            }



        }
        catch (Exception ex)
        {

        }
    }

}

//--------------Last Modified on Nov 5th,2016-Jan 24th,2017------------------------//
//--------------Staff Name Settings for Teaching and Non Teaching Added,Fixed Issues on Format3--------------//