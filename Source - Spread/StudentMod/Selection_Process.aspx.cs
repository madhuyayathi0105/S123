using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Configuration;
using System.Collections;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using Gios.Pdf;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Text;
public partial class StudentMod_Selection_Process : System.Web.UI.Page
{
    DataSet ds = new DataSet();
    DataSet ds1 = new DataSet();
    DAccess2 dt = new DAccess2();
    DAccess2 d2 = new DAccess2();
    DataSet ddummy = new DataSet();
    Hashtable hat = new Hashtable();
    NewCollegeChallan ncChallan = new NewCollegeChallan();
    static int isHeaderwise = 0;
    string college_code = "";
    string user_code = "";
    static int spvl = 0;
    static int spsearch = 0;
    int fg = 6;
    string textcode = "";
    bool orderflage = false;
    bool checkvalue_flage = false;
    bool managementflage = false;
    string admisionvalue = string.Empty;
    ReuasableMethods rs = new ReuasableMethods();
    protected void Page_Load(object sender, EventArgs e)
    {
        if (Session["collegecode"] == null)
        {
            Response.Redirect("~/Default.aspx");
        }
        user_code = Session["usercode"].ToString();
        college_code = Session["collegecode"].ToString();
        lblmg.Visible = false;
        lblmg1.Visible = false;
        lblmg2.Visible = false;
        lblmg3.Visible = false;
        // Div2.Visible = false;
        panel4.Attributes.Add("Style", "background: none repeat scroll 0 0 rgba(0, 0, 0, 0.83); border-color: inherit; border-style: none; border-width: 1px; height: 101%; left: -8px; position: absolute; top: -9px; width: 101%; display:none;");
        if (!IsPostBack)
        {
            setLabelText();
            txt_date.Text = Convert.ToString(System.DateTime.Now.ToString("dd/MM/yyyy"));
            //firsttable.Attributes.Add("Style", "border-bottom-style: solid; border-top-style: solid;border-left-style: solid; border-right-style: solid; background-color: #e3e3ef;border-width: 0.2px; border-color: indigo; border-radius: 5px; left: 16px; top: 0px;position: absolute; width: 800px;");
            poperrjs.Visible = false;
            batch();
            //string set = "select CONVERT(VARCHAR(2),DATEPART(DAY, fromdate))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, fromdate)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR, fromdate))as fromdate,CONVERT(VARCHAR(2),DATEPART(DAY, todate))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, todate)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR, todate))as todate from setting_application where type_College='DAY' and Edu_level='UG' and college_code='13' and setting_type='Apply Settings'";
            //ds = dt.select_method_wo_parameter(set, "text");
            //if (ds.Tables[0].Rows.Count > 0)
            //{
            //    TextBox2.Text = ds.Tables[0].Rows[0]["fromdate"].ToString();
            //    TextBox2.Attributes.Add("readonly", "readonly");
            //    TextBox3.Text = ds.Tables[0].Rows[0]["todate"].ToString();
            //    TextBox3.Attributes.Add("readonly", "readonly");
            //}
            ddlreason.Attributes.Add("onfocus", "flg()");
            btnrejectreason.Attributes.Add("onfocus", "flg1()");
            rights();
            //spvl = 1;
            //ViewState["spvl"] = spvl;
            spsearch = 0;
            type();
            edu();
            degree();
            branch();
            if (user_code != "30")
            {
                linksetting.Visible = false;
            }
            else
            {
                linksetting.Visible = true;
            }
            rdbtotalwise.Checked = true;
            lodaTextval();
            //tabpanel2.HeaderText = "ShortList [New 1]*";
            //TabContainer1.ActiveTabIndex = 0;
            TabContainer1_ActiveTabChanged(sender, e);
            btnapprove.Visible = true;
            Button2.Visible = true;
            Button3.Visible = false;
            Button9.Visible = false;
            txttop.Text = "100";
            loadreligion();
            loadBoardUniv();
            loadAttempts();
            bindmedium();
        }
        //  comm();
        fg = 6;
    }
    public void lodaTextval()
    {
        Hashtable Texthash = new Hashtable();
        try
        {
            string txtquery = "select TextVal,TextCode  from TextValTable where TextCriteria in('state','comm','caste','mton','relig','cours','branc','foccu','citi','cocur','Plang','Scast') and college_code =" + college_code + "";
            ds.Clear();
            ds = dt.select_method_wo_parameter(txtquery, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                for (int ik = 0; ik < ds.Tables[0].Rows.Count; ik++)
                {
                    Texthash.Add(Convert.ToString(ds.Tables[0].Rows[ik]["TextCode"]), Convert.ToString(ds.Tables[0].Rows[ik]["TextVal"]));
                }
                ViewState["Texthash"] = Texthash;
            }
        }
        catch
        {
        }
    }
    private void setLabelText()
    {
        string grouporusercode = string.Empty;
        if (Session["group_code"] != null && (Convert.ToString(Session["group_code"]).Trim() != "") && (Convert.ToString(Session["group_code"]).Trim() != "0") && (Convert.ToString(Session["group_code"]).Trim() != "-1"))
        {
            grouporusercode = " group_code=" + Convert.ToString(Session["group_code"]).Trim() + "";
        }
        else if (Session["usercode"] != null)
        {
            grouporusercode = " usercode=" + Convert.ToString(Session["usercode"]).Trim() + "";
        }
        List<Label> lbl = new List<Label>();
        List<byte> fields = new List<byte>();

        lbl.Add(Label3);
        lbl.Add(Label5);
        //lbl.Add(lbldeg);
        //lbl.Add(lbldeg1);
        //lbl.Add(lbldept);
        //lbl.Add(lblsem);
        //fields.Add(0);
        //fields.Add(1);
        fields.Add(2);
        //fields.Add(2);
        fields.Add(3);
        //fields.Add(4);

        new HeaderLabelText().setLabels(grouporusercode, ref lbl, fields);

    }
    public void batch()
    {
        try
        {
            ds = dt.select_method_wo_parameter(" select MAX(Batch_Year) as batch from applyn ", "Text");
            int count = ds.Tables[0].Rows.Count;
            if (count > 0)
            {
                //txtbatch.Text = ds.Tables[0].Rows[0]["batch"].ToString();
                txtbatch.Text = DateTime.Now.ToString("yyyy");
            }
        }
        catch (Exception ex)
        {
        }
    }
    public void type()
    {
        try
        {
            ddltype.Items.Clear();
            ds = dt.select_method_wo_parameter("select distinct type from degree,course,deptprivilages where     course.course_id=degree.course_id and course.college_code = degree.college_code and  degree.college_code='" + college_code + "' and deptprivilages.Degree_code=degree.Degree_code and user_code='" + user_code + "' and type is not null and type<>''", "Text");
            int count = ds.Tables[0].Rows.Count;
            if (count > 0)
            {
                ddltype.DataSource = ds;
                ddltype.DataTextField = "type";
                ddltype.DataValueField = "type";
                ddltype.DataBind();
                //ddltype.Items.Insert(0, "All");
            }
            else
            {
                ddltype.Items.Insert(0, "--Select--");
            }
        }
        catch (Exception ex)
        {
        }
    }
    public void edu()
    {
        try
        {
            ddledu.Items.Clear();
            ds = dt.select_method_wo_parameter("select distinct Edu_Level from degree,course,deptprivilages where     course.course_id=degree.course_id and course.college_code = degree.college_code and  degree.college_code='" + college_code + "' and deptprivilages.Degree_code=degree.Degree_code and user_code='" + user_code + "' and course.type='" + ddltype.SelectedItem.Text + "'  order by Edu_Level desc", "Text");
            int count = ds.Tables[0].Rows.Count;
            if (count > 0)
            {
                ddledu.DataSource = ds;
                ddledu.DataTextField = "Edu_Level";
                ddledu.DataValueField = "Edu_Level";
                ddledu.DataBind();
            }
            else
            {
                ddledu.Items.Insert(0, "--Select--");
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    public void degree()
    {
        try
        {
            if (ddltype.SelectedItem.Text != "All")
            {
                ds = dt.select_method_wo_parameter("select distinct degree.course_id,course.course_name from degree,course,deptprivilages where     course.course_id=degree.course_id and course.college_code = degree.college_code and  degree.college_code='" + college_code + "' and deptprivilages.Degree_code=degree.Degree_code and course.type='" + ddltype.SelectedItem.Text + "' and user_code='" + user_code + "' and Edu_Level='" + ddledu.SelectedItem.Text + "'", "Text");
            }
            else
            {
                ds = dt.select_method_wo_parameter("select distinct degree.course_id,course.course_name from degree,course,deptprivilages where     course.course_id=degree.course_id and course.college_code = degree.college_code and  degree.college_code='" + college_code + "' and deptprivilages.Degree_code=degree.Degree_code and user_code='" + user_code + "' and Edu_Level='" + ddledu.SelectedItem.Text + "'", "Text");
            }
            int count = ds.Tables[0].Rows.Count;
            if (count > 0)
            {
                ddldegree.DataSource = ds;
                ddldegree.DataTextField = "course_name";
                ddldegree.DataValueField = "course_id";
                ddldegree.DataBind();
            }
            else
            {
                ddldegree.Items.Insert(0, "--Select--");
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    public void branch()
    {
        try
        {
            ddldept.Items.Clear();
            string deg = ddldegree.SelectedValue;
            if (deg != "--Select--" && deg != null && ddldegree.SelectedItem.Text != "All")
            {
                ds = dt.select_method_wo_parameter("select distinct degree.degree_code,department.dept_name,degree.Acronym  from degree,department,course,deptprivilages where course.course_id=degree.course_id  and department.dept_code=degree.dept_code and course.college_code = degree.college_code and department.college_code = degree.college_code and degree.course_id in('" + deg + "') and degree.college_code='" + college_code + "' and deptprivilages.Degree_code=degree.Degree_code and user_code='" + user_code + "'", "Text");
            }
            else
            {
                ds = dt.select_method_wo_parameter("select distinct degree.degree_code,department.dept_name,degree.Acronym  from degree,department,course,deptprivilages where course.course_id=degree.course_id  and department.dept_code=degree.dept_code and course.college_code = degree.college_code and department.college_code = degree.college_code and deptprivilages.Degree_code=degree.Degree_code and user_code='" + user_code + "'", "Text");
            }
            int count = ds.Tables[0].Rows.Count;
            if (count > 0)
            {
                ddldept.DataSource = ds;
                ddldept.DataTextField = "dept_name";
                ddldept.DataValueField = "degree_code";
                ddldept.DataBind();
            }
            else
            {
                ddldept.Items.Insert(0, "--Select--");
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    protected void ddltype_select(object sender, EventArgs e)
    {
        lbltotalcount.Visible = false;
        lbltotalcount1.Visible = false;
        lbltotalcount2.Visible = false;
        lbltotalcount3.Visible = false;
        FpSpread4.Visible = false;
        FpSpread3.Visible = false;
        FpSpread2.Visible = false;
        FpSpread1.Visible = false;
        spreadFeeConfirm.Visible = false;
        Label66.Visible = false;
        // lblnew2.Text = "0" + "New";
        Label68.Visible = false;
        Label67.Visible = false;
        Label69.Visible = false;
        btnapprove.Visible = false;
        Button2.Visible = false;
        Button3.Visible = false;
        Button9.Visible = false;
        lbltotalfeepaid.Visible = false;
        lbltotalfeepaid_value.Visible = false;
        ckbx.Visible = false;
        btnconform.Visible = false;
        btnunpaid.Visible = false;
        btnChallan.Visible = false;
        btnadmitcard.Visible = false;
        btnadmitprint.Visible = false;
        btnleft.Visible = false;
        edu();
        degree();
        branch();
    }
    protected void Logout_btn_Click(object sender, EventArgs e)
    {
        Session.Abandon();
        Session.Clear();
        Session.RemoveAll();
        System.Web.Security.FormsAuthentication.SignOut();
        Response.Redirect("default.aspx", false);
    }
    protected void bttnsavekclick(object sender, EventArgs e)
    {
        try
        {
            int isval1 = 0;
            FpSpread3.SaveChanges();
            for (int i = 0; i < FpSpread3.Sheets[0].Rows.Count; i++)
            {
                isval1 = Convert.ToInt32(FpSpread3.Sheets[0].Cells[i, 1].Value);
                if (isval1 == 1)
                {
                    string approve = "if exists(select * from selectcriteria where app_no='" + FpSpread3.Sheets[0].Cells[i, 11].Text + "' and usercode='" + user_code + "' and degree_code='" + FpSpread3.Sheets[0].Cells[i, 12].Text + "' and college_code='" + college_code + "') delete from selectcriteria where app_no='" + FpSpread3.Sheets[0].Cells[i, 11].Text + "' and usercode='" + user_code + "' and degree_code='" + FpSpread3.Sheets[0].Cells[i, 12].Text + "' and college_code='" + college_code + "' insert into selectcriteria (app_no,usercode,degree_code,college_code,isapprove) values('" + FpSpread3.Sheets[0].Cells[i, 11].Text + "','" + user_code + "','" + FpSpread3.Sheets[0].Cells[i, 12].Text + "','" + college_code + "','1')";
                    int a = dt.update_method_wo_parameter(approve, "text");
                    string reg = "  if exists(select * from Registration where App_No='" + FpSpread3.Sheets[0].Cells[i, 11].Text + "' and Adm_Date='" + System.DateTime.Now.ToString("yyy/MM/dd") + "' and Stud_Name='" + FpSpread3.Sheets[0].Cells[i, 2].Text + "' and Batch_Year='" + txtbatch.Text + "' and   degree_code='" + FpSpread3.Sheets[0].Cells[i, 12].Text + "' and  college_code='" + college_code + "' )  delete from Registration where App_No='" + FpSpread3.Sheets[0].Cells[i, 11].Text + "' and Adm_Date='" + System.DateTime.Now.ToString("yyy/MM/dd") + "' and Stud_Name='" + FpSpread3.Sheets[0].Cells[i, 2].Text + "' and Batch_Year='" + txtbatch.Text + "' and   degree_code='" + FpSpread3.Sheets[0].Cells[i, 12].Text + "' and  college_code='" + college_code + "' insert into Registration (App_No,Adm_Date,Roll_Admit,Roll_No,RollNo_Flag,Reg_No,Stud_Name,Batch_Year,degree_code,college_code,CC,DelFlag,Exam_Elg)values('" + FpSpread3.Sheets[0].Cells[i, 11].Text + "','" + System.DateTime.Now.ToString("yyy/MM/dd") + "','" + FpSpread3.Sheets[0].Cells[i, 11].Text + "','" + FpSpread3.Sheets[0].Cells[i, 11].Text + "','1','" + FpSpread3.Sheets[0].Cells[i, 11].Text + "','" + FpSpread3.Sheets[0].Cells[i, 2].Text + "','" + txtbatch.Text + "','" + FpSpread3.Sheets[0].Cells[i, 12].Text + "','" + college_code + "','0','0','OK')";
                    int b = dt.update_method_wo_parameter(reg, "text");
                }
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    [System.Web.Services.WebMethod]
    [System.Web.Script.Services.ScriptMethod()]
    public static List<string> Getroll(string prefixText)
    {
        string cs = ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString;
        using (SqlConnection sqlconn = new SqlConnection(cs))
        {
            sqlconn.Open();
            string nm = "select  stud_name from applyn where stud_name like '" + prefixText + "%'  ";
            SqlCommand cmd = new SqlCommand(nm, sqlconn);
            cmd.Parameters.AddWithValue("@Title", prefixText);
            SqlDataAdapter da = new SqlDataAdapter(cmd);
            DataTable dt = new DataTable();
            da.Fill(dt);
            List<string> roll = new List<string>();
            for (int i = 0; i < dt.Rows.Count; i++)
            {
                roll.Add(dt.Rows[i]["stud_name"].ToString());
            }
            return roll;
        }
    }
    [System.Web.Services.WebMethod]
    [System.Web.Script.Services.ScriptMethod()]
    public static List<string> Getroll1(string prefixText)
    {
        string cs = ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString;
        using (SqlConnection sqlconn = new SqlConnection(cs))
        {
            sqlconn.Open();
            string nm = "select  Student_Mobile from applyn where Student_Mobile like '" + prefixText + "%'  ";
            SqlCommand cmd = new SqlCommand(nm, sqlconn);
            cmd.Parameters.AddWithValue("@Title", prefixText);
            SqlDataAdapter da = new SqlDataAdapter(cmd);
            DataTable dt = new DataTable();
            da.Fill(dt);
            List<string> roll = new List<string>();
            for (int i = 0; i < dt.Rows.Count; i++)
            {
                roll.Add(dt.Rows[i]["Student_Mobile"].ToString());
            }
            return roll;
        }
    }
    [System.Web.Services.WebMethod]
    [System.Web.Script.Services.ScriptMethod()]
    public static List<string> Getapp(string prefixText)
    {
        string cs = ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString;
        using (SqlConnection sqlconn = new SqlConnection(cs))
        {
            sqlconn.Open();
            string nm = "select  app_no from applyn where app_no like '" + prefixText + "%'  ";
            SqlCommand cmd = new SqlCommand(nm, sqlconn);
            cmd.Parameters.AddWithValue("@Title", prefixText);
            SqlDataAdapter da = new SqlDataAdapter(cmd);
            DataTable dt = new DataTable();
            da.Fill(dt);
            List<string> roll = new List<string>();
            for (int i = 0; i < dt.Rows.Count; i++)
            {
                roll.Add(dt.Rows[i]["app_no"].ToString());
            }
            return roll;
        }
    }
    protected void Buttonsearch_Click(object sender, EventArgs e)
    {
        try
        {
            spsearch = 1;
            spread();
            TextBox4.Text = "";
            TextBox5.Text = "";
            TextBox6.Text = "";
            spsearch = 0;
            //if (TabContainer1.ActiveTabIndex == 0)
            //{
            //    spread();
            //    TextBox4.Text = "";
            //    TextBox5.Text = "";
            //    TextBox6.Text = "";
            //    spsearch = 0;
            //}
            //else if (TabContainer1.ActiveTabIndex == 3)
            //{
            //    spread1();
            //    TextBox4.Text = "";
            //    TextBox5.Text = "";
            //    TextBox6.Text = "";
            //    spsearch = 0;
            //}
            //else if (TabContainer1.ActiveTabIndex == 1)
            //{
            //    spread2();
            //    TextBox4.Text = "";
            //    TextBox5.Text = "";
            //    TextBox6.Text = "";
            //    spsearch = 0;
            //}
            //else if (TabContainer1.ActiveTabIndex == 2)
            //{
            //    spread3();
            //    TextBox4.Text = "";
            //    TextBox5.Text = "";
            //    TextBox6.Text = "";
            //    spsearch = 0;
            //}
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    protected void bttnsaveexitclick(object sender, EventArgs e)
    {
        Panel23.Visible = false;
    }
    protected void btnappclick1(object sender, EventArgs e)
    {
        try
        {
            int isval1 = 0;
            int fllg = 0;
            int val = 0;
            FpSpread1.SaveChanges();
            FpSpread3.SaveChanges();
            bool set = false;
            bool checkflage = false;
            //if (lnkall.ForeColor == System.Drawing.Color.Green)
            //{
            //    checkflage = false;
            //    set = true;
            //}
            //else 
            if (lnkbc.ForeColor == System.Drawing.Color.Green)
            {
                checkflage = false;
            }
            else if (lnksc.ForeColor == System.Drawing.Color.Green)
            {
                checkflage = false;
            }
            else if (lnkst.ForeColor == System.Drawing.Color.Green)
            {
                checkflage = false;
            }
            else if (lnksca.ForeColor == System.Drawing.Color.Green)
            {
                checkflage = false;
            }
            else if (lnkbcm.ForeColor == System.Drawing.Color.Green)
            {
                checkflage = false;
            }
            else if (lnkoc.ForeColor == System.Drawing.Color.Green)
            {
                checkflage = false;
            }
            else if (lnkchirstian.ForeColor == System.Drawing.Color.Green)
            {
                checkflage = false;
            }
            else if (lnkmbcdnc.ForeColor == System.Drawing.Color.Green)
            {
                checkflage = false;
            }
            if (checkflage == false)
            {
                for (int i = 0; i < FpSpread1.Sheets[0].Rows.Count; i++)
                {
                    isval1 = Convert.ToInt32(FpSpread1.Sheets[0].Cells[i, 1].Value);
                    if (isval1 == 1)
                    {
                        fllg = 1;
                        val++;
                        // string approve = "if exists(select * from selectcriteria where app_no='" + FpSpread1.Sheets[0].Cells[i, 11].Text + "' and usercode='" + user_code + "' and degree_code='" + FpSpread1.Sheets[0].Cells[i, 12].Text + "' and college_code='" + college_code + "' and isapprove='2') delete from selectcriteria where app_no='" + FpSpread1.Sheets[0].Cells[i, 11].Text + "' and usercode='" + user_code + "' and degree_code='" + FpSpread1.Sheets[0].Cells[i, 12].Text + "' and college_code='" + college_code + "' and isapprove='2' insert into selectcriteria (app_no,usercode,degree_code,college_code,isapprove) values('" + FpSpread1.Sheets[0].Cells[i, 11].Text + "','" + user_code + "','" + FpSpread1.Sheets[0].Cells[i, 12].Text + "','" + college_code + "','2')";
                        string approve = "update selectcriteria set isapprove='2' , isview='0'  , select_date='" + System.DateTime.Now.ToString("yyy/MM/dd") + "' where app_no='" + FpSpread1.Sheets[0].Cells[i, 2].Text + "'  and degree_code='" + ddldept.SelectedValue + "' and college_code='" + college_code + "' and  isapprove='1'";
                        approve = approve + " update applyn set selection_status='1' where app_no ='" + FpSpread1.Sheets[0].Cells[i, 2].Text + "'";
                        int a = dt.update_method_wo_parameter(approve, "text");
                    }
                }
                if (val == 0)
                {
                    if (set == false && checkflage == false)
                    {
                        for (int i = 0; i < FpSpread3.Sheets[0].Rows.Count; i++)
                        {
                            isval1 = Convert.ToInt32(FpSpread3.Sheets[0].Cells[i, 1].Value);
                            if (isval1 == 1)
                            {
                                fllg = 1;
                                string community = "";
                                if (Convert.ToString(ViewState["text_code_value"]) == "")
                                    community = Convert.ToString(FpSpread3.Sheets[0].Cells[i, 0].Tag);
                                else
                                    community = Convert.ToString(ViewState["text_code_value"]);
                                string approve = "if exists(select * from selectcriteria where app_no='" + FpSpread3.Sheets[0].Cells[i, 2].Text + "' and degree_code='" + ddldept.SelectedValue + "' and college_code='" + college_code + "') delete from selectcriteria where app_no='" + FpSpread3.Sheets[0].Cells[i, 2].Text + "'  and degree_code='" + ddldept.SelectedValue + "' and college_code='" + college_code + "' insert into selectcriteria(app_no,usercode,degree_code,college_code,isapprove,select_date,isview,criteria_Code) values('" + FpSpread3.Sheets[0].Cells[i, 2].Text + "','" + user_code + "','" + ddldept.SelectedValue + "','" + college_code + "','2','" + System.DateTime.Now.ToString("yyy/MM/dd") + "','0','" + community + "')";
                                approve = approve + " update applyn set selection_status='1' where app_no ='" + FpSpread3.Sheets[0].Cells[i, 2].Text + "'";
                                int a = dt.update_method_wo_parameter(approve, "text");
                            }
                        }
                    }
                    else
                    {
                        errorspan.InnerHtml = "Please Select Any one Category";
                        poperrjs.Visible = true;
                        //ScriptManager.RegisterStartupScript(base.Page, this.GetType(), ("dialogJavascript" + this.ID), "alert(\"Please Select Any one Category\");", true);
                    }
                }
                if (fllg == 1)
                {
                    Button1_Click(sender, e);
                    errorspan.InnerHtml = "Recommended Successfully";
                    poperrjs.Visible = true;
                    //  ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('Recommended Successfully')", true);
                    // ScriptManager.RegisterStartupScript(base.Page, this.GetType(), ("dialogJavascript" + this.ID), "alert(\"Recommended Successfully\");", true);
                }
                else
                {
                    errorspan.InnerHtml = "Choose Atleast One Student And Than Proceed";
                    poperrjs.Visible = true;
                    // ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('Choose Atleast One Student And Than Proceed')", true);
                    //  ScriptManager.RegisterStartupScript(base.Page, this.GetType(), ("dialogJavascript" + this.ID), "alert(\"Choose Atleast One Student And Than Proceed\");", true);
                }
            }
            else
            {
                errorspan.InnerHtml = "Please Select Any one Category";
                poperrjs.Visible = true;
                // ScriptManager.RegisterStartupScript(base.Page, this.GetType(), ("dialogJavascript" + this.ID), "alert(\"Please Select Any one Category\");", true);
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    protected void btnadmit_Click(object sender, EventArgs e)
    {
        try
        {
            int isval1 = 0;
            int fllg = 0;
            string finYearid = dt.GetFunction("select LinkValue from InsSettings where LinkName='Current Financial Year' and college_code=" + college_code + "");
            FpSpread2.SaveChanges();
            FpSpread3.SaveChanges();
            FpSpread1.SaveChanges();
            bool flage = false;
            string type = ddltype.SelectedItem.Text;
            string edu = ddledu.SelectedItem.Text;
            string concat = type + "-" + edu;
            string degreeCode = ddldept.SelectedItem.Value.ToString();
            string deg_code = Convert.ToString(ddldegree.SelectedItem.Value);
            string dept_Code = dt.GetFunction("select Dept_Code  from Degree where Course_Id='" + deg_code + "' and Degree_Code ='" + ddldept.SelectedItem.Value + "' and college_code ='" + college_code + "'");
            string text_circode = "";
            string settingquery = "select * from New_InsSettings where linkname = 'Fee Yearwise' and user_code ='" + user_code + "' and college_code ='" + college_code + "'";
            ds.Clear();
            ds = dt.select_method_wo_parameter(settingquery, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                string linkvalue = Convert.ToString(ds.Tables[0].Rows[0]["LinkValue"]);
                if (linkvalue == "0")
                {
                    string semesterquery = "select * from textvaltable where TextCriteria = 'FEECA'and textval = '1 Semester' and textval not like '-1%' and college_code ='" + college_code + "'";
                    ds.Clear();
                    ds = dt.select_method_wo_parameter(semesterquery, "Text");
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        text_circode = Convert.ToString(ds.Tables[0].Rows[0]["TextCode"]);
                    }
                }
                else
                {
                    string semesterquery = "select * from textvaltable where TextCriteria = 'FEECA'and textval = '1 Year' and textval not like '-1%' and college_code ='" + college_code + "'";
                    ds.Clear();
                    ds = dt.select_method_wo_parameter(semesterquery, "Text");
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        text_circode = Convert.ToString(ds.Tables[0].Rows[0]["TextCode"]);
                    }
                }
            }
            textcode = text_circode;
            bool checkflage = false;
            bool testflage = false;
            DataSet dsnew = new DataSet();
            //string upd = "update admitcolumnset set allot=0 where allot is null";
            //int fa = dt.update_method_wo_parameter(upd, "text");
            #region Applied Tab
            if (flage == false && TabContainer1.ActiveTabIndex == 0)
            {
                for (int i = 0; i < FpSpread3.Sheets[0].Rows.Count; i++)
                {
                    isval1 = Convert.ToInt32(FpSpread3.Sheets[0].Cells[i, 1].Value);
                    if (isval1 == 1)
                    {
                        if (lnkbc.ForeColor == System.Drawing.Color.Green)
                        {
                            checkflage = true;
                        }
                        else if (lnksc.ForeColor == System.Drawing.Color.Green)
                        {
                            checkflage = true;
                        }
                        else if (lnkst.ForeColor == System.Drawing.Color.Green)
                        {
                            checkflage = true;
                        }
                        else if (lnksca.ForeColor == System.Drawing.Color.Green)
                        {
                            checkflage = true;
                        }
                        else if (lnkbcm.ForeColor == System.Drawing.Color.Green)
                        {
                            checkflage = true;
                        }
                        else if (lnkoc.ForeColor == System.Drawing.Color.Green)
                        {
                            checkflage = true;
                        }
                        else if (lnkchirstian.ForeColor == System.Drawing.Color.Green)
                        {
                            checkflage = true;
                        }
                        else if (lnkmbcdnc.ForeColor == System.Drawing.Color.Green)
                        {
                            checkflage = true;
                        }
                        if (checkflage == true)
                        {
                            if (Convert.ToString(ViewState["text_type"]) == "Community")
                            {
                                fllg = 1;
                                string typecode = Convert.ToString(ViewState["text_code_value"]);
                                string relig = "select * from admitcolumnset where TextCriteria='community'  and priority!='0'  and  setcolumn='" + ddldept.SelectedItem.Value + "' and college_code='" + college_code + "' and column_name='" + typecode + "'";
                                DataSet ds2 = new DataSet();
                                ds2 = dt.select_method_wo_parameter(relig, "text");
                                if (ds2.Tables[0].Rows.Count > 0)
                                {
                                    flage = true;
                                    int inc = 0;
                                    string alot = Convert.ToString(ds2.Tables[0].Rows[0]["allot"]);
                                    string clm = Convert.ToString(ds2.Tables[0].Rows[0]["column_name"]);
                                    int seatcount = 0;
                                    string seatconfirm = Convert.ToString(ds2.Tables[0].Rows[0]["allot_Confirm"]);
                                    if (seatconfirm.Trim() != "" && seatconfirm != null)
                                    {
                                        seatcount = Convert.ToInt32(seatconfirm);
                                    }
                                    else
                                    {
                                        seatcount = 0;
                                    }
                                    if (Convert.ToInt32(ds2.Tables[0].Rows[0]["priority"].ToString()) > Convert.ToInt32(alot))
                                    {
                                        if (alot.Trim() != "")
                                        {
                                            inc = Convert.ToInt32(alot);
                                            inc++;
                                        }
                                        else
                                        {
                                            inc = 1;
                                        }
                                        string rel = "";
                                        //string rel = "update admitcolumnset set allot='" + inc + "' where setcolumn='" + ddldept.SelectedItem.Value + "' and column_name='" + clm + "' and textcriteria='community' and college_code='" + college_code + "' and column_name='" + typecode + "'";
                                        rel = rel + " update applyn set selection_status='1' where app_no ='" + FpSpread3.Sheets[0].Cells[i, 2].Text + "'";
                                        int f = dt.update_method_wo_parameter(rel, "text");
                                        string approve1 = " insert into selectcriteria(app_no,usercode,degree_code,college_code,isapprove,select_date,isview,criteria_Code) values('" + FpSpread3.Sheets[0].Cells[i, 2].Text + "','" + user_code + "','" + ddldept.SelectedValue + "','" + college_code + "','4','" + System.DateTime.Now.ToString("yyy/MM/dd") + "','0','" + typecode + "')";
                                        int a1 = dt.update_method_wo_parameter(approve1, "text");
                                        bool feededuct = true;
                                        string insertquery = "";
                                        int insert = 0;
                                        string batch_year = Convert.ToString(FpSpread3.Sheets[0].Cells[i, 2].Note);
                                        string seattype = Convert.ToString(FpSpread3.Sheets[0].Cells[i, 0].Note);
                                        string today = System.DateTime.Now.ToString("MM/dd/yyyy");
                                        //string selectquery = "select Headid,feecode,FeeAmount,Deduct,Duedate,DueExt1,fineamt1,DueExt2,FineAmt2,DueExt3,FineAmt3,Total,modeofpay,dedect_reason  from feedefine where batch = " + batch_year + " and DegreeCode = " + deg_code + " and depcode = " + dept_Code + " and FeeCat = " + text_circode + " and CollCode ='" + Session["collegecode"] + "'";
                                        string selectquery = " select LedgerFK,HeaderFK,PayMode,FeeAmount,deductAmout,DeductReason,TotalAmount,RefundAmount,FeeCategory,FineAmount from FT_FeeAllotDegree where DegreeCode='" + degreeCode + "' and BatchYear ='" + batch_year + "' and SeatType ='" + seattype + "' and FeeCategory ='" + textcode + "' and FinYearFK ='" + finYearid + "' ";
                                        selectquery = selectquery + "  select top 1 * from collinfo ";
                                        selectquery = selectquery + " select s.university_code,s.uni_state,s.course_code from applyn a,Stud_prev_details s,TextValTable t where a.app_no =s.app_no   and a.app_formno  ='" + Convert.ToString(FpSpread3.Sheets[0].Cells[i, 2].Tag) + "' and batch_year =" + batch_year + " and degree_code =" + dept_Code + " and current_semester =1";
                                        dsnew.Clear();
                                        dsnew = dt.select_method_wo_parameter(selectquery, "Text");
                                        if (ddledu.SelectedItem.Text == "UG")
                                        {
                                            if (dsnew.Tables[2].Rows.Count > 0)
                                            {
                                                string coursecode = Convert.ToString(dsnew.Tables[2].Rows[0]["course_code"]);
                                                string universitystate = Convert.ToString(dsnew.Tables[2].Rows[0]["uni_state"]);
                                                string coursevalue = subjectcode(Convert.ToString(dsnew.Tables[2].Rows[0]["course_code"]));
                                                string statevlaue = subjectcode(Convert.ToString(dsnew.Tables[2].Rows[0]["uni_state"]));
                                                if (Convert.ToString(coursevalue) == "HSC" && Convert.ToString(statevlaue) == "Tamil Nadu")
                                                {
                                                    feededuct = true;
                                                }
                                            }
                                        }
                                        if (dsnew.Tables[0].Rows.Count > 0)
                                        {
                                            for (int fee = 0; fee < dsnew.Tables[0].Rows.Count; fee++)
                                            {
                                                double total = 0;
                                                double deduct = 0;
                                                if (feededuct == false)
                                                {
                                                    string getfeetype = dt.GetFunction("select LedgerName  from FM_LedgerMaster where LedgerPK  ='" + Convert.ToString(dsnew.Tables[0].Rows[fee]["ledgerfk"]) + "' and HeaderFK ='" + Convert.ToString(dsnew.Tables[0].Rows[fee]["headerfk"]) + "'");
                                                    if (Convert.ToString(getfeetype).Trim() == "University Registration Fee")
                                                    {
                                                        double feeamount = 0;
                                                        string feeamount1 = Convert.ToString(Convert.ToString(dsnew.Tables[0].Rows[fee]["FeeAmount"]));
                                                        if (feeamount1.Trim() != "")
                                                        {
                                                            feeamount = Convert.ToDouble(feeamount1);
                                                            deduct = 0;
                                                            total = feeamount + 200;
                                                        }
                                                        else
                                                        {
                                                            deduct = 0;
                                                            total = 0;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        double.TryParse(dsnew.Tables[0].Rows[fee]["deductAmout"].ToString(), out deduct);
                                                        double feeamt = 0;
                                                        double.TryParse(dsnew.Tables[0].Rows[fee]["FeeAmount"].ToString(), out feeamt);
                                                        total = feeamt - deduct;
                                                    }
                                                }
                                                else
                                                {
                                                    double.TryParse(Convert.ToString(dsnew.Tables[0].Rows[fee]["deductAmout"]), out deduct);
                                                    double.TryParse(Convert.ToString(dsnew.Tables[0].Rows[fee]["TotalAmount"]), out total);
                                                }
                                                string headerfk = Convert.ToString(dsnew.Tables[0].Rows[fee]["HeaderFK"]);
                                                string leadgerfk = Convert.ToString(dsnew.Tables[0].Rows[fee]["LedgerFK"]);
                                                string feeAmount = Convert.ToString(dsnew.Tables[0].Rows[fee]["FeeAmount"]);
                                                //deduct = Convert.ToString(dsnew.Tables[0].Rows[fee]["deductAmout"]);
                                                string deductrea = Convert.ToString(dsnew.Tables[0].Rows[fee]["DeductReason"]);
                                                //totalamount = Convert.ToString(dsnew.Tables[0].Rows[fee]["TotalAmount"]);
                                                string finamount = Convert.ToString(dsnew.Tables[0].Rows[fee]["FineAmount"]);
                                                string refund = Convert.ToString(dsnew.Tables[0].Rows[fee]["RefundAmount"]);
                                                string feecatg = Convert.ToString(dsnew.Tables[0].Rows[fee]["FeeCategory"]);
                                                string paymode = Convert.ToString(dsnew.Tables[0].Rows[fee]["PayMode"]);
                                                if (feeAmount.Trim() == "")
                                                {
                                                    feeAmount = "0";
                                                }
                                                if (deduct == 0)
                                                {
                                                    feeAmount = total.ToString();
                                                }
                                                if (finamount.Trim() == "")
                                                {
                                                    finamount = "0";
                                                }
                                                string app_no = dt.GetFunction("select app_no from applyn where app_formno='" + Convert.ToString(FpSpread3.Sheets[0].Cells[i, 2].Tag) + "'").Trim();
                                                string insupdquery = "if exists (select * from FT_FeeAllot where LedgerFK in('" + leadgerfk + "') and HeaderFK in('" + headerfk + "') and FeeCategory in('" + textcode + "')  and App_No in('" + app_no + "')) update FT_FeeAllot set AllotDate='" + DateTime.Now.ToString("MM/dd/yyyy") + "',MemType='1',FeeAmount='" + feeAmount + "',PaidAmount='0' ,DeductAmout='" + deduct + "',DeductReason='" + deductrea + "',FromGovtAmt='0',TotalAmount='" + total + "',RefundAmount='" + refund + "',IsFeeDeposit='0',FeeAmountMonthly='',PayMode='" + paymode + "',PayStartDate='',PaidStatus='0',DueDate='" + DateTime.Now.ToString("MM/dd/yyyy") + "',DueAmount='0',FineAmount='" + finamount + "',BalAmount='" + total + "' where LedgerFK in('" + leadgerfk + "') and HeaderFK in('" + headerfk + "') and FeeCategory in('" + feecatg + "') and App_No in('" + app_no + "') else INSERT INTO FT_FeeAllot(AllotDate,MemType,App_No,LedgerFK,HeaderFK,FeeAmount,DeductAmout,DeductReason,FromGovtAmt,TotalAmount,RefundAmount,IsFeeDeposit,FeeAmountMonthly,PayMode,FeeCategory,PayStartDate,PaidStatus,DueDate,DueAmount,FineAmount,BalAmount,FinYearFK) VALUES('" + DateTime.Now.ToString("MM/dd/yyyy") + "',1," + app_no + ",'" + leadgerfk + "','" + headerfk + "','" + feeAmount + "','" + deduct + "'," + deductrea + ",'0','" + total + "','" + refund + "','0','','" + paymode + "','" + feecatg + "','','0','','0','" + finamount + "','" + total + "','" + finYearid + "')";
                                                insert = dt.update_method_wo_parameter(insupdquery, "Text");
                                            }
                                        }
                                    }
                                    else
                                    {
                                        string approveaa = "delete from selectcriteria  where app_no='" + FpSpread3.Sheets[0].Cells[i, 2].Text + "' and usercode='" + user_code + "' and degree_code='" + ddldept.SelectedValue + "' and college_code='" + college_code + "' and criteria_Code='" + typecode + "'";
                                        int asd = dt.update_method_wo_parameter(approveaa, "text");
                                        panel2.Visible = false;
                                        errorspan.InnerHtml = "No Seat Avilable In This Category Please Admit Some Other Category";
                                        poperrjs.Visible = true;
                                        // ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('No Seat Avilable In This Department Please Admit Some Other Department')", true);
                                        //ScriptManager.RegisterStartupScript(base.Page, this.GetType(), ("dialogJavascript" + this.ID), "alert(\"No Seat Avilable In This Category Please Admit Some Other Category\");", true);
                                        return;
                                    }
                                }
                            }
                            else if (Convert.ToString(ViewState["text_type"]) == "Religion")
                            {
                                fllg = 1;
                                string typecode = Convert.ToString(ViewState["text_code_value"]);
                                string relig = "select * from admitcolumnset where TextCriteria='relig'  and priority!='0'  and  setcolumn='" + ddldept.SelectedItem.Value + "' and college_code='" + college_code + "' and column_name='" + typecode + "'";
                                DataSet ds2 = new DataSet();
                                ds2 = dt.select_method_wo_parameter(relig, "text");
                                if (ds2.Tables[0].Rows.Count > 0)
                                {
                                    flage = true;
                                    int inc = 0;
                                    string alot = Convert.ToString(ds2.Tables[0].Rows[0]["allot"]);
                                    string clm = Convert.ToString(ds2.Tables[0].Rows[0]["column_name"]);
                                    int seatcount = 0;
                                    string seatconfirm = Convert.ToString(ds2.Tables[0].Rows[0]["allot_Confirm"]);
                                    if (seatconfirm.Trim() != "" && seatconfirm != null)
                                    {
                                        seatcount = Convert.ToInt32(seatconfirm);
                                    }
                                    else
                                    {
                                        seatcount = 0;
                                    }
                                    if (Convert.ToInt32(ds2.Tables[0].Rows[0]["priority"].ToString()) > Convert.ToInt32(alot))
                                    {
                                        if (alot.Trim() != "")
                                        {
                                            inc = Convert.ToInt32(alot);
                                            inc++;
                                        }
                                        else
                                        {
                                            inc = 1;
                                        }
                                        string rel = "";
                                        //string rel = "update admitcolumnset set allot='" + inc + "' where setcolumn='" + ddldept.SelectedItem.Value + "' and column_name='" + clm + "' and textcriteria='relig' and college_code='" + college_code + "' and column_name='" + typecode + "'";
                                        rel = rel + " update applyn set selection_status='1' where app_no ='" + FpSpread3.Sheets[0].Cells[i, 2].Text + "'";
                                        int f = dt.update_method_wo_parameter(rel, "text");
                                        string approve1 = " insert into selectcriteria(app_no,usercode,degree_code,college_code,isapprove,select_date,isview,criteria_Code) values('" + FpSpread3.Sheets[0].Cells[i, 2].Text + "','" + user_code + "','" + ddldept.SelectedValue + "','" + college_code + "','4','" + System.DateTime.Now.ToString("yyy/MM/dd") + "','0','" + typecode + "')";
                                        int a1 = dt.update_method_wo_parameter(approve1, "text");
                                        string insertquery = "";
                                        int insert = 0;
                                        string batch_year = Convert.ToString(FpSpread3.Sheets[0].Cells[i, 2].Note);
                                        string seattype = Convert.ToString(FpSpread3.Sheets[0].Cells[i, 0].Note);
                                        string today = System.DateTime.Now.ToString("MM/dd/yyyy");
                                        bool feededuct = false;
                                        //string selectquery = "select Headid,feecode,FeeAmount,Deduct,Duedate,DueExt1,fineamt1,DueExt2,FineAmt2,DueExt3,FineAmt3,Total,modeofpay,dedect_reason  from feedefine where batch = " + batch_year + " and DegreeCode = " + deg_code + " and depcode = " + dept_Code + " and FeeCat = " + text_circode + " and CollCode ='" + Session["collegecode"] + "'";
                                        //selectquery = selectquery + "  select (SUM(FeeAmount)- SUM(Deduct)) as fee,SUM(Deduct) det, Headid  from feedefine where batch = " + batch_year + " and DegreeCode = " + deg_code + " and depcode = " + dept_Code + " and FeeCat = " + text_circode + " and CollCode ='" + Session["collegecode"] + "' group by Headid";
                                        string selectquery = " select LedgerFK,HeaderFK,PayMode,FeeAmount,deductAmout,DeductReason,TotalAmount,RefundAmount,FeeCategory,FineAmount from FT_FeeAllotDegree where DegreeCode='" + degreeCode + "' and BatchYear ='" + batch_year + "' and SeatType ='" + seattype + "' and FeeCategory ='" + textcode + "' and FinYearFK ='" + finYearid + "' ";
                                        selectquery = selectquery + "  select top 1  * from collinfo ";
                                        selectquery = selectquery + " select s.university_code,s.uni_state,s.course_code from applyn a,Stud_prev_details s,TextValTable t where a.app_no =s.app_no   and a.app_formno  ='" + Convert.ToString(FpSpread3.Sheets[0].Cells[i, 2].Tag) + "' and batch_year =" + batch_year + " and degree_code =" + dept_Code + " and current_semester =1";
                                        dsnew.Clear();
                                        dsnew = dt.select_method_wo_parameter(selectquery, "Text");
                                        if (ddledu.SelectedItem.Text == "UG")
                                        {
                                            if (dsnew.Tables[2].Rows.Count > 0)
                                            {
                                                string coursecode = Convert.ToString(dsnew.Tables[0].Rows[0]["course_code"]);
                                                string universitystate = Convert.ToString(dsnew.Tables[0].Rows[0]["uni_state"]);
                                                string coursevalue = subjectcode(Convert.ToString(dsnew.Tables[0].Rows[0]["course_code"]));
                                                string statevlaue = subjectcode(Convert.ToString(dsnew.Tables[0].Rows[0]["uni_state"]));
                                                if (Convert.ToString(coursevalue) == "HSC" && Convert.ToString(statevlaue) == "Tamil Nadu")
                                                {
                                                    feededuct = true;
                                                }
                                            }
                                        }
                                        if (dsnew.Tables[0].Rows.Count > 0)
                                        {
                                            for (int fee = 0; fee < dsnew.Tables[0].Rows.Count; fee++)
                                            {
                                                double total = 0;
                                                double deduct = 0;
                                                if (feededuct == false)
                                                {
                                                    string getfeetype = dt.GetFunction("select LedgerName  from FM_LedgerMaster where LedgerPK  ='" + Convert.ToString(dsnew.Tables[0].Rows[fee]["ledgerfk"]) + "' and HeaderFK ='" + Convert.ToString(dsnew.Tables[0].Rows[fee]["headerfk"]) + "'");
                                                    if (Convert.ToString(getfeetype).Trim() == "University Registration Fee")
                                                    {
                                                        double feeamount = 0;
                                                        string feeamount1 = Convert.ToString(Convert.ToString(dsnew.Tables[0].Rows[fee]["FeeAmount"]));
                                                        if (feeamount1.Trim() != "")
                                                        {
                                                            feeamount = Convert.ToDouble(feeamount1);
                                                            deduct = 0;
                                                            total = feeamount + 200;
                                                        }
                                                        else
                                                        {
                                                            deduct = 0;
                                                            total = 0;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        double.TryParse(dsnew.Tables[0].Rows[fee]["deductAmout"].ToString(), out deduct);
                                                        double feeamt = 0;
                                                        double.TryParse(dsnew.Tables[0].Rows[fee]["FeeAmount"].ToString(), out feeamt);
                                                        total = feeamt - deduct;
                                                    }
                                                }
                                                else
                                                {
                                                    double.TryParse(Convert.ToString(dsnew.Tables[0].Rows[fee]["deductAmout"]), out deduct);
                                                    double.TryParse(Convert.ToString(dsnew.Tables[0].Rows[fee]["TotalAmount"]), out total);
                                                }
                                                string headerfk = Convert.ToString(dsnew.Tables[0].Rows[fee]["HeaderFK"]);
                                                string leadgerfk = Convert.ToString(dsnew.Tables[0].Rows[fee]["LedgerFK"]);
                                                string feeAmount = Convert.ToString(dsnew.Tables[0].Rows[fee]["FeeAmount"]);
                                                //deduct = Convert.ToString(dsnew.Tables[0].Rows[fee]["deductAmout"]);
                                                string deductrea = Convert.ToString(dsnew.Tables[0].Rows[fee]["DeductReason"]);
                                                //totalamount = Convert.ToString(dsnew.Tables[0].Rows[fee]["TotalAmount"]);
                                                string finamount = Convert.ToString(dsnew.Tables[0].Rows[fee]["FineAmount"]);
                                                string refund = Convert.ToString(dsnew.Tables[0].Rows[fee]["RefundAmount"]);
                                                string feecatg = Convert.ToString(dsnew.Tables[0].Rows[fee]["FeeCategory"]);
                                                string paymode = Convert.ToString(dsnew.Tables[0].Rows[fee]["PayMode"]);
                                                if (feeAmount.Trim() == "")
                                                {
                                                    feeAmount = "0";
                                                }
                                                if (deduct == 0)
                                                {
                                                    feeAmount = total.ToString();
                                                }
                                                if (finamount.Trim() == "")
                                                {
                                                    finamount = "0";
                                                }
                                                string app_no = dt.GetFunction("select app_no from applyn where app_formno='" + Convert.ToString(FpSpread3.Sheets[0].Cells[i, 2].Tag) + "'").Trim();
                                                string insupdquery = "if exists (select * from FT_FeeAllot where LedgerFK in('" + leadgerfk + "') and HeaderFK in('" + headerfk + "') and FeeCategory in('" + textcode + "')  and App_No in('" + app_no + "')) update FT_FeeAllot set AllotDate='" + DateTime.Now.ToString("MM/dd/yyyy") + "',MemType='1',FeeAmount='" + feeAmount + "',PaidAmount='0' ,DeductAmout='" + deduct + "',DeductReason='" + deductrea + "',FromGovtAmt='0',TotalAmount='" + total + "',RefundAmount='" + refund + "',IsFeeDeposit='0',FeeAmountMonthly='',PayMode='" + paymode + "',PayStartDate='',PaidStatus='0',DueDate='" + DateTime.Now.ToString("MM/dd/yyyy") + "',DueAmount='0',FineAmount='" + finamount + "',BalAmount='" + total + "' where LedgerFK in('" + leadgerfk + "') and HeaderFK in('" + headerfk + "') and FeeCategory in('" + feecatg + "') and App_No in('" + app_no + "') else INSERT INTO FT_FeeAllot(AllotDate,MemType,App_No,LedgerFK,HeaderFK,FeeAmount,DeductAmout,DeductReason,FromGovtAmt,TotalAmount,RefundAmount,IsFeeDeposit,FeeAmountMonthly,PayMode,FeeCategory,PayStartDate,PaidStatus,DueDate,DueAmount,FineAmount,BalAmount,FinYearFK) VALUES('" + DateTime.Now.ToString("MM/dd/yyyy") + "',1," + app_no + ",'" + leadgerfk + "','" + headerfk + "','" + feeAmount + "','" + deduct + "'," + deductrea + ",'0','" + total + "','" + refund + "','0','','" + paymode + "','" + feecatg + "','','0','','0','" + finamount + "','" + total + "','" + finYearid + "')";
                                                insert = dt.update_method_wo_parameter(insupdquery, "Text");
                                            }
                                        }
                                    }
                                    else
                                    {
                                        string approveaa = "delete from selectcriteria  where app_no='" + FpSpread3.Sheets[0].Cells[i, 2].Text + "' and usercode='" + user_code + "' and degree_code='" + ddldept.SelectedValue + "' and college_code='" + college_code + "' and criteria_Code='" + textcode + "'";
                                        int asd = dt.update_method_wo_parameter(approveaa, "text");
                                        panel2.Visible = false;
                                        errorspan.InnerHtml = "No Seat Avilable In This Category Please Admit Some Other Category";
                                        poperrjs.Visible = true;
                                        // ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('No Seat Avilable In This Department Please Admit Some Other Department')", true);
                                        // ScriptManager.RegisterStartupScript(base.Page, this.GetType(), ("dialogJavascript" + this.ID), "alert(\"No Seat Avilable In This Category Please Admit Some Other Category\");", true);
                                        return;
                                    }
                                }
                            }
                        }
                        else
                        {
                            testflage = true;
                            errorspan.InnerHtml = "Please Select Any one Category";
                            poperrjs.Visible = true;
                            //ScriptManager.RegisterStartupScript(base.Page, this.GetType(), ("dialogJavascript" + this.ID), "alert(\"Please Select Any one Category\");", true);
                        }
                    }
                }
            }
            #endregion
            #region Rec For Admission Tab
            if (flage == false && TabContainer1.ActiveTabIndex == 2)
            {
                for (int i = 0; i < FpSpread2.Sheets[0].Rows.Count; i++)
                {
                    isval1 = Convert.ToInt32(FpSpread2.Sheets[0].Cells[i, 1].Value);
                    if (isval1 == 1)
                    {
                        fllg = 1;
                        string typecode = Convert.ToString(FpSpread2.Sheets[0].Cells[i, 0].Tag);
                        string relig = "select * from admitcolumnset where  (TextCriteria='community' or TextCriteria='relig' or TextCriteria ='Management') and priority!='0'  and  setcolumn='" + ddldept.SelectedItem.Value + "' and college_code='" + college_code + "' and column_name='" + typecode + "'";
                        DataSet ds2 = new DataSet();
                        ds2 = dt.select_method_wo_parameter(relig, "text");
                        if (ds2.Tables.Count > 0 && ds2.Tables[0].Rows.Count > 0)
                        {
                            flage = true;
                            int inc = 0;
                            string alot = Convert.ToString(ds2.Tables[0].Rows[0]["allot"]);
                            string clm = Convert.ToString(ds2.Tables[0].Rows[0]["column_name"]);
                            int seatcount = 0;
                            string seatconfirm = Convert.ToString(ds2.Tables[0].Rows[0]["allot_Confirm"]);
                            if (seatconfirm.Trim() != "" && seatconfirm != null)
                            {
                                seatcount = Convert.ToInt32(seatconfirm);
                            }
                            else
                            {
                                seatcount = 0;
                            }
                            if (Label69.Text != "")
                            {
                                //    if (alot.Trim() != "")
                                //    {
                                //        inc = Convert.ToInt32(alot);
                                //        inc++;
                                //    }
                                //    else
                                //    {
                                //        inc = 1;
                                //    }
                                string rel = "";
                                //string rel = "update admitcolumnset set allot='" + inc + "' where setcolumn='" + ddldept.SelectedItem.Value + "' and column_name='" + clm + "' and (textcriteria='community' or textcriteria ='relig') and college_code='" + college_code + "' and column_name='" + typecode + "'";
                                rel = rel + " update applyn set selection_status='1' where app_no ='" + FpSpread2.Sheets[0].Cells[i, 2].Text + "'";
                                int f = dt.update_method_wo_parameter(rel, "text");
                                string approve = "update selectcriteria set isapprove='4',isview='0', select_date='" + System.DateTime.Now.ToString("yyy/MM/dd") + "' where app_no='" + FpSpread2.Sheets[0].Cells[i, 2].Text + "' and degree_code='" + ddldept.SelectedValue + "' and college_code='" + college_code + "' and criteria_Code='" + typecode + "' and isapprove='2' ";
                                int a = dt.update_method_wo_parameter(approve, "text");
                                string insertquery = "";
                                int insert = 0;
                                string batch_year = Convert.ToString(FpSpread2.Sheets[0].Cells[i, 2].Note);
                                string seattype = Convert.ToString(FpSpread2.Sheets[0].Cells[i, 0].Note);
                                string today = System.DateTime.Now.ToString("MM/dd/yyyy");
                                bool feededuct = false;
                                bool feededuct1 = false;
                                string selectquery = " select LedgerFK,HeaderFK,PayMode,FeeAmount,deductAmout,DeductReason,TotalAmount,RefundAmount,FeeCategory,FineAmount from FT_FeeAllotDegree where DegreeCode='" + degreeCode + "' and BatchYear ='" + batch_year + "' and SeatType ='" + seattype + "' and FeeCategory ='" + textcode + "' and FinYearFK ='" + finYearid + "' ";
                                selectquery = selectquery + "  select top 1 * from collinfo ";
                                selectquery = selectquery + " select distinct s.university_code,s.uni_state,s.course_code from applyn a,Stud_prev_details s,TextValTable t where a.app_no =s.app_no   and a.app_formno  ='" + Convert.ToString(FpSpread2.Sheets[0].Cells[i, 2].Tag) + "' and batch_year =" + batch_year + " and degree_code =" + ddldept.SelectedItem.Value + " and current_semester =1";
                                selectquery = selectquery + " select community,parent_statep  from applyn where app_formno  ='" + Convert.ToString(FpSpread2.Sheets[0].Cells[i, 2].Tag) + "' and batch_year =" + batch_year + " and degree_code =" + ddldept.SelectedItem.Value + " and current_semester =1";
                                dsnew.Clear();
                                dsnew = dt.select_method_wo_parameter(selectquery, "Text");
                                if (ddledu.SelectedItem.Text == "UG")
                                {
                                    if (dsnew.Tables[2].Rows.Count > 0)
                                    {
                                        string coursecode = Convert.ToString(dsnew.Tables[2].Rows[0]["course_code"]);
                                        string universitystate = Convert.ToString(dsnew.Tables[2].Rows[0]["uni_state"]);
                                        string coursevalue = subjectcode(Convert.ToString(dsnew.Tables[2].Rows[0]["course_code"]));
                                        string statevlaue = subjectcode(Convert.ToString(dsnew.Tables[2].Rows[0]["uni_state"]));
                                        if (Convert.ToString(coursevalue) == "HSC" && Convert.ToString(statevlaue) == "Tamil Nadu")
                                        {
                                            feededuct = true;
                                        }
                                    }
                                }
                                if (ddledu.SelectedItem.Text == "PG")
                                {
                                    if (dsnew.Tables[2].Rows.Count > 0)
                                    {
                                        string coursevalue = subjectcode(Convert.ToString(dsnew.Tables[2].Rows[0]["university_code"]));
                                        if (Convert.ToString(coursevalue) == "Madras University")
                                        {
                                            feededuct1 = true;
                                        }
                                    }
                                    if (ddltype.SelectedItem.Text == "DAY")
                                    {
                                        if (dsnew.Tables[3].Rows.Count > 0)
                                        {
                                            string community = subjectcode(Convert.ToString(dsnew.Tables[3].Rows[0]["community"]));
                                            string state = subjectcode(Convert.ToString(dsnew.Tables[3].Rows[0]["parent_statep"]));
                                            if ((Convert.ToString(community) == "SC" || Convert.ToString(community) == "SC(Arunthathiyar)" || Convert.ToString(community) == "ST") && Convert.ToString(state) == "Tamil Nadu")
                                            {
                                                feededuct = true;
                                            }
                                        }
                                    }
                                }
                                if (ddledu.SelectedItem.Text != "PG")
                                {
                                    if (dsnew.Tables[0].Rows.Count > 0)
                                    {
                                        for (int fee = 0; fee < dsnew.Tables[0].Rows.Count; fee++)
                                        {
                                            double total = 0;
                                            double deduct = 0;
                                            if (feededuct == false)
                                            {
                                                string getfeetype = dt.GetFunction("select LedgerName  from FM_LedgerMaster where LedgerPK  ='" + Convert.ToString(dsnew.Tables[0].Rows[fee]["ledgerfk"]) + "' and HeaderFK ='" + Convert.ToString(dsnew.Tables[0].Rows[fee]["headerfk"]) + "'");
                                                if (Convert.ToString(getfeetype).Trim() == "University Registration Fee")
                                                {
                                                    double feeamount = 0;
                                                    string feeamount1 = Convert.ToString(Convert.ToString(dsnew.Tables[0].Rows[fee]["FeeAmount"]));
                                                    if (feeamount1.Trim() != "")
                                                    {
                                                        feeamount = Convert.ToDouble(feeamount1);
                                                        deduct = 0;
                                                        total = feeamount + 200;
                                                    }
                                                    else
                                                    {
                                                        deduct = 0;
                                                        total = 0;
                                                    }
                                                }
                                                else
                                                {
                                                    double.TryParse(dsnew.Tables[0].Rows[fee]["deductAmout"].ToString(), out deduct);
                                                    double feeamt = 0;
                                                    double.TryParse(dsnew.Tables[0].Rows[fee]["FeeAmount"].ToString(), out feeamt);
                                                    total = feeamt - deduct;
                                                }
                                            }
                                            else
                                            {
                                                double.TryParse(Convert.ToString(dsnew.Tables[0].Rows[fee]["deductAmout"]), out deduct);
                                                double.TryParse(Convert.ToString(dsnew.Tables[0].Rows[fee]["TotalAmount"]), out total);
                                            }
                                            string headerfk = Convert.ToString(dsnew.Tables[0].Rows[fee]["HeaderFK"]);
                                            string leadgerfk = Convert.ToString(dsnew.Tables[0].Rows[fee]["LedgerFK"]);
                                            string feeAmount = Convert.ToString(dsnew.Tables[0].Rows[fee]["FeeAmount"]);
                                            //deduct = Convert.ToString(dsnew.Tables[0].Rows[fee]["deductAmout"]);
                                            string deductrea = Convert.ToString(dsnew.Tables[0].Rows[fee]["DeductReason"]);
                                            //totalamount = Convert.ToString(dsnew.Tables[0].Rows[fee]["TotalAmount"]);
                                            string finamount = Convert.ToString(dsnew.Tables[0].Rows[fee]["FineAmount"]);
                                            string refund = Convert.ToString(dsnew.Tables[0].Rows[fee]["RefundAmount"]);
                                            string feecatg = Convert.ToString(dsnew.Tables[0].Rows[fee]["FeeCategory"]);
                                            string paymode = Convert.ToString(dsnew.Tables[0].Rows[fee]["PayMode"]);
                                            if (feeAmount.Trim() == "")
                                            {
                                                feeAmount = "0";
                                            }
                                            if (deduct == 0)
                                            {
                                                feeAmount = total.ToString();
                                            }
                                            if (finamount.Trim() == "")
                                            {
                                                finamount = "0";
                                            }
                                            string app_no = dt.GetFunction("select app_no from applyn where app_formno='" + Convert.ToString(FpSpread2.Sheets[0].Cells[i, 2].Tag) + "'").Trim();
                                            string insupdquery = "if exists (select * from FT_FeeAllot where LedgerFK in('" + leadgerfk + "') and HeaderFK in('" + headerfk + "') and FeeCategory in('" + textcode + "')  and App_No in('" + app_no + "')) update FT_FeeAllot set AllotDate='" + DateTime.Now.ToString("MM/dd/yyyy") + "',MemType='1',FeeAmount='" + feeAmount + "',PaidAmount='0' ,DeductAmout='" + deduct + "',DeductReason='" + deductrea + "',FromGovtAmt='0',TotalAmount='" + total + "',RefundAmount='" + refund + "',IsFeeDeposit='0',FeeAmountMonthly='',PayMode='" + paymode + "',PayStartDate='',PaidStatus='0',DueDate='" + DateTime.Now.ToString("MM/dd/yyyy") + "',DueAmount='0',FineAmount='" + finamount + "',BalAmount='" + total + "' where LedgerFK in('" + leadgerfk + "') and HeaderFK in('" + headerfk + "') and FeeCategory in('" + feecatg + "') and App_No in('" + app_no + "') else INSERT INTO FT_FeeAllot(AllotDate,MemType,App_No,LedgerFK,HeaderFK,FeeAmount,DeductAmout,DeductReason,FromGovtAmt,TotalAmount,RefundAmount,IsFeeDeposit,FeeAmountMonthly,PayMode,FeeCategory,PayStartDate,PaidStatus,DueDate,DueAmount,FineAmount,BalAmount,FinYearFK) VALUES('" + DateTime.Now.ToString("MM/dd/yyyy") + "',1," + app_no + ",'" + leadgerfk + "','" + headerfk + "','" + feeAmount + "','" + deduct + "'," + deductrea + ",'0','" + total + "','" + refund + "','0','','" + paymode + "','" + feecatg + "','','0','','0','" + finamount + "','" + total + "','" + finYearid + "')";
                                            insert = dt.update_method_wo_parameter(insupdquery, "Text");
                                        }
                                    }
                                }
                                else
                                {
                                    if (dsnew.Tables[0].Rows.Count > 0)
                                    {
                                        for (int fee = 0; fee < dsnew.Tables[0].Rows.Count; fee++)
                                        {
                                            bool tempflage = false;
                                            double total = 0;
                                            double deduct = 0;
                                            if (feededuct == true || feededuct1 == false)
                                            {
                                                string getfeetype = dt.GetFunction("select LedgerName  from FM_LedgerMaster where LedgerPK  ='" + Convert.ToString(dsnew.Tables[0].Rows[fee]["ledgerfk"]) + "' and HeaderFK ='" + Convert.ToString(dsnew.Tables[0].Rows[fee]["headerfk"]) + "'");
                                                if (feededuct == true)
                                                {
                                                    if (Convert.ToString(getfeetype).Trim() == "Tuition Fee")
                                                    {
                                                        tempflage = true;
                                                        double feeamount = 0;
                                                        string feeamount1 = Convert.ToString(Convert.ToString(dsnew.Tables[0].Rows[fee]["FeeAmount"]));
                                                        if (feeamount1.Trim() != "")
                                                        {
                                                            feeamount = Convert.ToDouble(feeamount1);
                                                            deduct = feeamount;
                                                            total = feeamount - feeamount;
                                                        }
                                                        else
                                                        {
                                                            deduct = 0;
                                                            total = 0;
                                                        }
                                                    }
                                                }
                                                if (feededuct1 == false)
                                                {
                                                    if (Convert.ToString(getfeetype).Trim() == "University Registration Fee")
                                                    {
                                                        tempflage = true;
                                                        double feeamount = 0;
                                                        string feeamount1 = Convert.ToString(Convert.ToString(dsnew.Tables[0].Rows[fee]["FeeAmount"]));
                                                        if (feeamount1.Trim() != "")
                                                        {
                                                            feeamount = Convert.ToDouble(feeamount1);
                                                            //deduct = 20;
                                                            total = feeamount + 20;
                                                        }
                                                        else
                                                        {
                                                            //deduct = 0;
                                                            total = 20;
                                                        }
                                                    }
                                                    else if (Convert.ToString(getfeetype).Trim() == "Matric And Recognition Fee")
                                                    {
                                                        tempflage = true;
                                                        double feeamount = 0;
                                                        string feeamount1 = Convert.ToString(Convert.ToString(dsnew.Tables[0].Rows[fee]["FeeAmount"]));
                                                        if (feeamount1.Trim() != "")
                                                        {
                                                            feeamount = Convert.ToDouble(feeamount1);
                                                            //deduct = feeamount;
                                                            total = feeamount + 30;//feeamount - feeamount;
                                                        }
                                                        else
                                                        {
                                                            //deduct = 0;
                                                            total = 30;
                                                        }
                                                    }
                                                }
                                                if (tempflage == false)
                                                {
                                                    double.TryParse(dsnew.Tables[0].Rows[fee]["deductAmout"].ToString(), out deduct);
                                                    double feeamt = 0;
                                                    double.TryParse(dsnew.Tables[0].Rows[fee]["FeeAmount"].ToString(), out feeamt);
                                                    total = feeamt - deduct;
                                                }
                                            }
                                            else
                                            {
                                                double.TryParse(Convert.ToString(dsnew.Tables[0].Rows[fee]["deductAmout"]), out deduct);
                                                double.TryParse(Convert.ToString(dsnew.Tables[0].Rows[fee]["TotalAmount"]), out total);
                                            }
                                            string headerfk = Convert.ToString(dsnew.Tables[0].Rows[fee]["HeaderFK"]);
                                            string leadgerfk = Convert.ToString(dsnew.Tables[0].Rows[fee]["LedgerFK"]);
                                            string feeAmount = Convert.ToString(dsnew.Tables[0].Rows[fee]["FeeAmount"]);
                                            //deduct = Convert.ToString(dsnew.Tables[0].Rows[fee]["deductAmout"]);
                                            string deductrea = Convert.ToString(dsnew.Tables[0].Rows[fee]["DeductReason"]);
                                            //totalamount = Convert.ToString(dsnew.Tables[0].Rows[fee]["TotalAmount"]);
                                            string finamount = Convert.ToString(dsnew.Tables[0].Rows[fee]["FineAmount"]);
                                            string refund = Convert.ToString(dsnew.Tables[0].Rows[fee]["RefundAmount"]);
                                            string feecatg = Convert.ToString(dsnew.Tables[0].Rows[fee]["FeeCategory"]);
                                            string paymode = Convert.ToString(dsnew.Tables[0].Rows[fee]["PayMode"]);
                                            if (feeAmount.Trim() == "")
                                            {
                                                feeAmount = "0";
                                            }
                                            if (total > Convert.ToDouble(feeAmount))
                                            {
                                                feeAmount = total.ToString();
                                            }
                                            if (finamount.Trim() == "")
                                            {
                                                finamount = "0";
                                            }
                                            string app_no = dt.GetFunction("select app_no from applyn where app_formno='" + Convert.ToString(FpSpread2.Sheets[0].Cells[i, 2].Tag) + "'").Trim();
                                            string insupdquery = "if exists (select * from FT_FeeAllot where LedgerFK in('" + leadgerfk + "') and HeaderFK in('" + headerfk + "') and FeeCategory in('" + textcode + "')  and App_No in('" + app_no + "')) update FT_FeeAllot set AllotDate='" + DateTime.Now.ToString("MM/dd/yyyy") + "',MemType='1',FeeAmount='" + feeAmount + "',PaidAmount='0' ,DeductAmout='" + deduct + "',DeductReason='" + deductrea + "',FromGovtAmt='0',TotalAmount='" + total + "',RefundAmount='" + refund + "',IsFeeDeposit='0',FeeAmountMonthly='',PayMode='" + paymode + "',PayStartDate='',PaidStatus='0',DueDate='" + DateTime.Now.ToString("MM/dd/yyyy") + "',DueAmount='0',FineAmount='" + finamount + "',BalAmount='" + total + "' where LedgerFK in('" + leadgerfk + "') and HeaderFK in('" + headerfk + "') and FeeCategory in('" + feecatg + "') and App_No in('" + app_no + "') else INSERT INTO FT_FeeAllot(AllotDate,MemType,App_No,LedgerFK,HeaderFK,FeeAmount,DeductAmout,DeductReason,FromGovtAmt,TotalAmount,RefundAmount,IsFeeDeposit,FeeAmountMonthly,PayMode,FeeCategory,PayStartDate,PaidStatus,DueDate,DueAmount,FineAmount,BalAmount,FinYearFK) VALUES('" + DateTime.Now.ToString("MM/dd/yyyy") + "',1," + app_no + ",'" + leadgerfk + "','" + headerfk + "','" + feeAmount + "','" + deduct + "'," + deductrea + ",'0','" + total + "','" + refund + "','0','','" + paymode + "','" + feecatg + "','','0','','0','" + finamount + "','" + total + "','" + finYearid + "')";
                                            insert = dt.update_method_wo_parameter(insupdquery, "Text");
                                        }
                                    }
                                }
                            }
                            else
                            {
                                errorspan.InnerHtml = "No Seat Avilable In This Department Please Admit Some Other Department";
                                poperrjs.Visible = true;
                                panel2.Visible = false;
                                // ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('No Seat Avilable In This Department Please Admit Some Other Department')", true);
                                //  ScriptManager.RegisterStartupScript(base.Page, this.GetType(), ("dialogJavascript" + this.ID), "alert(\"No Seat Avilable In This Category Please Admit Some Other Category\");", true);
                                return;
                            }
                        }
                    }
                }
            }
            #endregion
            #region ShortList Tab
            if (flage == false && TabContainer1.ActiveTabIndex == 1)
            {
                for (int i = 0; i < FpSpread1.Sheets[0].Rows.Count; i++)
                {
                    isval1 = Convert.ToInt32(FpSpread1.Sheets[0].Cells[i, 1].Value);
                    if (isval1 == 1)
                    {
                        fllg = 1;
                        string typecode = Convert.ToString(FpSpread1.Sheets[0].Cells[i, 0].Tag);
                        string relig = "select * from admitcolumnset where  (TextCriteria='community' or TextCriteria='relig' or TextCriteria ='Management' ) and priority!='0'  and  setcolumn='" + ddldept.SelectedItem.Value + "' and college_code='" + college_code + "' and column_name='" + typecode + "'";
                        DataSet ds2 = new DataSet();
                        ds2 = dt.select_method_wo_parameter(relig, "text");
                        if (ds2.Tables[0].Rows.Count > 0)
                        {
                            flage = true;
                            int inc = 0;
                            string alot = Convert.ToString(ds2.Tables[0].Rows[0]["allot"]);
                            string clm = Convert.ToString(ds2.Tables[0].Rows[0]["column_name"]);
                            int seatcount = 0;
                            string seatconfirm = Convert.ToString(ds2.Tables[0].Rows[0]["allot_Confirm"]);
                            if (seatconfirm.Trim() != "" && seatconfirm != null)
                            {
                                seatcount = Convert.ToInt32(seatconfirm);
                            }
                            else
                            {
                                seatcount = 0;
                            }
                            if (Convert.ToInt32(ds2.Tables[0].Rows[0]["priority"].ToString()) > Convert.ToInt32(alot))
                            {
                                if (alot.Trim() != "")
                                {
                                    inc = Convert.ToInt32(alot);
                                    inc++;
                                }
                                else
                                {
                                    inc = 1;
                                }
                                string rel = "";
                                //string rel = "update admitcolumnset set allot='" + inc + "' where setcolumn='" + ddldept.SelectedItem.Value + "' and column_name='" + clm + "' and (textcriteria='community' or textcriteria ='relig') and college_code='" + college_code + "' and column_name='" + typecode + "'";
                                rel = rel + " update applyn set selection_status='1' where app_no ='" + FpSpread1.Sheets[0].Cells[i, 2].Text + "'";
                                int f = dt.update_method_wo_parameter(rel, "text");
                                string approve = "update selectcriteria set isapprove='4',isview='0', select_date='" + System.DateTime.Now.ToString("yyy/MM/dd") + "' where app_no='" + FpSpread1.Sheets[0].Cells[i, 2].Text + "' and degree_code='" + ddldept.SelectedValue + "' and college_code='" + college_code + "' and criteria_Code='" + typecode + "' and isapprove='1' ";
                                int a = dt.update_method_wo_parameter(approve, "text");
                                string insertquery = "";
                                int insert = 0;
                                string batch_year = Convert.ToString(FpSpread1.Sheets[0].Cells[i, 2].Note);
                                string seattype = Convert.ToString(FpSpread1.Sheets[0].Cells[i, 0].Note);
                                string today = System.DateTime.Now.ToString("MM/dd/yyyy");
                                bool feededuct = false;
                                string selectquery = " select LedgerFK,HeaderFK,PayMode,FeeAmount,deductAmout,DeductReason,TotalAmount,RefundAmount,FeeCategory,FineAmount from FT_FeeAllotDegree where DegreeCode='" + degreeCode + "' and BatchYear ='" + batch_year + "' and SeatType ='" + seattype + "' and FeeCategory ='" + textcode + "' and FinYearFK ='" + finYearid + "' ";
                                selectquery = selectquery + "  select top 1  * from collinfo ";
                                selectquery = selectquery + " select s.university_code,s.uni_state,s.course_code from applyn a,Stud_prev_details s,TextValTable t where a.app_no =s.app_no   and a.app_formno  ='" + Convert.ToString(FpSpread1.Sheets[0].Cells[i, 2].Tag) + "' and batch_year =" + batch_year + " and degree_code =" + dept_Code + " and current_semester =1";
                                dsnew.Clear();
                                dsnew = dt.select_method_wo_parameter(selectquery, "Text");
                                if (ddledu.SelectedItem.Text == "UG")
                                {
                                    if (dsnew.Tables[2].Rows.Count > 0)
                                    {
                                        string coursecode = Convert.ToString(dsnew.Tables[2].Rows[0]["course_code"]);
                                        string universitystate = Convert.ToString(dsnew.Tables[2].Rows[0]["uni_state"]);
                                        string coursevalue = subjectcode(Convert.ToString(dsnew.Tables[2].Rows[0]["course_code"]));
                                        string statevlaue = subjectcode(Convert.ToString(dsnew.Tables[2].Rows[0]["uni_state"]));
                                        if (Convert.ToString(coursevalue) == "HSC" && Convert.ToString(statevlaue) == "Tamil Nadu")
                                        {
                                            feededuct = true;
                                        }
                                    }
                                }
                                if (dsnew.Tables[0].Rows.Count > 0)
                                {
                                    for (int fee = 0; fee < dsnew.Tables[0].Rows.Count; fee++)
                                    {
                                        double total = 0;
                                        double deduct = 0;
                                        if (feededuct == false)
                                        {
                                            string getfeetype = dt.GetFunction("select LedgerName  from FM_LedgerMaster where LedgerPK  ='" + Convert.ToString(dsnew.Tables[0].Rows[fee]["ledgerfk"]) + "' and HeaderFK ='" + Convert.ToString(dsnew.Tables[0].Rows[fee]["headerfk"]) + "'");
                                            if (Convert.ToString(getfeetype).Trim() == "University Registration Fee")
                                            {
                                                double feeamount = 0;
                                                string feeamount1 = Convert.ToString(Convert.ToString(dsnew.Tables[0].Rows[fee]["FeeAmount"]));
                                                if (feeamount1.Trim() != "")
                                                {
                                                    feeamount = Convert.ToDouble(feeamount1);
                                                    deduct = 0;
                                                    total = feeamount + 200;
                                                }
                                                else
                                                {
                                                    double.TryParse(dsnew.Tables[0].Rows[fee]["deductAmout"].ToString(), out deduct);
                                                    double feeamt = 0;
                                                    double.TryParse(dsnew.Tables[0].Rows[fee]["FeeAmount"].ToString(), out feeamt);
                                                    total = feeamt - deduct;
                                                }
                                            }
                                        }
                                        else
                                        {
                                            double.TryParse(Convert.ToString(dsnew.Tables[0].Rows[fee]["deductAmout"]), out deduct);
                                            double.TryParse(Convert.ToString(dsnew.Tables[0].Rows[fee]["TotalAmount"]), out total);
                                        }
                                        string headerfk = Convert.ToString(dsnew.Tables[0].Rows[fee]["HeaderFK"]);
                                        string leadgerfk = Convert.ToString(dsnew.Tables[0].Rows[fee]["LedgerFK"]);
                                        string feeAmount = Convert.ToString(dsnew.Tables[0].Rows[fee]["FeeAmount"]);
                                        //deduct = Convert.ToString(dsnew.Tables[0].Rows[fee]["deductAmout"]);
                                        string deductrea = Convert.ToString(dsnew.Tables[0].Rows[fee]["DeductReason"]);
                                        //totalamount = Convert.ToString(dsnew.Tables[0].Rows[fee]["TotalAmount"]);
                                        string finamount = Convert.ToString(dsnew.Tables[0].Rows[fee]["FineAmount"]);
                                        string refund = Convert.ToString(dsnew.Tables[0].Rows[fee]["RefundAmount"]);
                                        string feecatg = Convert.ToString(dsnew.Tables[0].Rows[fee]["FeeCategory"]);
                                        string paymode = Convert.ToString(dsnew.Tables[0].Rows[fee]["PayMode"]);
                                        if (feeAmount.Trim() == "")
                                        {
                                            feeAmount = "0";
                                        }
                                        if (deduct == 0)
                                        {
                                            feeAmount = total.ToString();
                                        }
                                        if (finamount.Trim() == "")
                                        {
                                            finamount = "0";
                                        }
                                        string app_no = dt.GetFunction("select app_no from applyn where app_formno='" + Convert.ToString(FpSpread3.Sheets[0].Cells[i, 2].Tag) + "'").Trim();
                                        string insupdquery = "if exists (select * from FT_FeeAllot where LedgerFK in('" + leadgerfk + "') and HeaderFK in('" + headerfk + "') and FeeCategory in('" + textcode + "')  and App_No in('" + app_no + "')) update FT_FeeAllot set AllotDate='" + DateTime.Now.ToString("MM/dd/yyyy") + "',MemType='1',FeeAmount='" + feeAmount + "',PaidAmount='0' ,DeductAmout='" + deduct + "',DeductReason='" + deductrea + "',FromGovtAmt='0',TotalAmount='" + total + "',RefundAmount='" + refund + "',IsFeeDeposit='0',FeeAmountMonthly='',PayMode='" + paymode + "',PayStartDate='',PaidStatus='0',DueDate='" + DateTime.Now.ToString("MM/dd/yyyy") + "',DueAmount='0',FineAmount='" + finamount + "',BalAmount='" + total + "' where LedgerFK in('" + leadgerfk + "') and HeaderFK in('" + headerfk + "') and FeeCategory in('" + feecatg + "') and App_No in('" + app_no + "') else INSERT INTO FT_FeeAllot(AllotDate,MemType,App_No,LedgerFK,HeaderFK,FeeAmount,DeductAmout,DeductReason,FromGovtAmt,TotalAmount,RefundAmount,IsFeeDeposit,FeeAmountMonthly,PayMode,FeeCategory,PayStartDate,PaidStatus,DueDate,DueAmount,FineAmount,BalAmount,FinYearFK) VALUES('" + DateTime.Now.ToString("MM/dd/yyyy") + "',1," + app_no + ",'" + leadgerfk + "','" + headerfk + "','" + feeAmount + "','" + deduct + "'," + deductrea + ",'0','" + total + "','" + refund + "','0','','" + paymode + "','" + feecatg + "','','0','','0','" + finamount + "','" + total + "','" + finYearid + "')";
                                        insert = dt.update_method_wo_parameter(insupdquery, "Text");
                                    }
                                }
                            }
                            else
                            {
                                errorspan.InnerHtml = "No Seat Avilable In This Category Please Admit Some Other Category";
                                poperrjs.Visible = true;
                                panel2.Visible = false;
                                // ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('No Seat Avilable In This Department Please Admit Some Other Department')", true);
                                // ScriptManager.RegisterStartupScript(base.Page, this.GetType(), ("dialogJavascript" + this.ID), "alert(\"No Seat Avilable In This Category Please Admit Some Other Category\");", true);
                                return;
                            }
                        }
                    }
                }
            }
            #endregion
            if (fllg == 1 && testflage == false)
            {
                errorspan.InnerHtml = "Admitted Successfully";
                poperrjs.Visible = true;
                //ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('Admitted Successfully')", true);
                // ScriptManager.RegisterStartupScript(base.Page, this.GetType(), ("dialogJavascript" + this.ID), "alert(\"Admitted Successfully\");", true);
                panel2.Visible = false;
            }
            else
            {
                if (testflage == false)
                {
                    errorspan.InnerHtml = "Choose Atleast One Student And Than Proceed";
                    poperrjs.Visible = true;
                    // ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('Choose Atleast One Student And Than Proceed')", true);
                    // ScriptManager.RegisterStartupScript(base.Page, this.GetType(), ("dialogJavascript" + this.ID), "alert(\"Choose Atleast One Student And Than Proceed\");", true);
                    panel2.Visible = false;
                }
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    public void reason()
    {
        try
        {
            ddlreason.Items.Clear();
            ds = dt.select_method_wo_parameter("select distinct TextCode,TextVal from textvaltable where TextCriteria = 'adres' and college_code = '" + college_code + "'", "Text");
            int count = ds.Tables[0].Rows.Count;
            if (count > 0)
            {
                ddlreason.DataSource = ds;
                ddlreason.DataTextField = "TextVal";
                ddlreason.DataValueField = "TextCode";
                ddlreason.DataBind();
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    public void reason1()
    {
        try
        {
            btnrejectreason.Items.Clear();
            ds = dt.select_method_wo_parameter("select distinct TextCode,TextVal from textvaltable where TextCriteria = 'reres' and college_code = '" + college_code + "'", "Text");
            int count = ds.Tables[0].Rows.Count;
            if (count > 0)
            {
                btnrejectreason.DataSource = ds;
                btnrejectreason.DataTextField = "TextVal";
                btnrejectreason.DataValueField = "TextCode";
                btnrejectreason.DataBind();
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    protected void btnadd1_Click(object sender, EventArgs e)
    {
        try
        {
            string add = " if exists(select * from textvaltable where TextVal='" + txtadd.Text + "' and TextCriteria='adres'and college_code='" + college_code + "' ) update textvaltable set TextVal='" + txtadd.Text + "',TextCriteria='adres',college_code='" + college_code + "' where TextVal='" + txtadd.Text + "' and TextCriteria='adres'and college_code='" + college_code + "' else insert into textvaltable (TextVal,TextCriteria,college_code) values ('" + txtadd.Text + "','adres','" + college_code + "')";
            int a = dt.update_method_wo_parameter(add, "text");
            ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('Added Successfully')", true);
            reason();
            txtadd.Text = "";
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    protected void btnexit1_Click(object sender, EventArgs e)
    {
        Panel10.Visible = false;
        txtadd.Text = "";
        reason();
    }
    protected void btnadd_Click(object sender, EventArgs e)
    {
        reason();
        Panel10.Visible = true;
    }
    protected void btnminus_Click(object sender, EventArgs e)
    {
        try
        {
            string add = "delete from textvaltable where TextCode='" + ddlreason.SelectedValue + "'and TextCriteria='adres' and college_code='" + college_code + "' ";
            int a = dt.update_method_wo_parameter(add, "text");
            reason();
            ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('Deleted Successfully')", true);
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    protected void btnreason_click(object sender, EventArgs e)
    {
        panel2.Visible = false;
    }
    protected void btnadd1ret_Click(object sender, EventArgs e)
    {
        try
        {
            string add = " if exists(select * from textvaltable where TextVal='" + TextBox1.Text + "' and TextCriteria='reres'and college_code='" + college_code + "' ) update textvaltable set TextVal='" + TextBox1.Text + "',TextCriteria='reres',college_code='" + college_code + "' where TextVal='" + TextBox1.Text + "' and TextCriteria='reres'and college_code='" + college_code + "' else insert into textvaltable (TextVal,TextCriteria,college_code) values ('" + TextBox1.Text + "','reres','" + college_code + "')";
            int a = dt.update_method_wo_parameter(add, "text");
            ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('Added Successfully')", true);
            reason1();
            txtadd.Text = "";
            Panel12.Visible = false;
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    protected void btnexit1rejt_Click(object sender, EventArgs e)
    {
        Panel12.Visible = false;
        TextBox1.Text = "";
    }
    protected void btnaddrejt_Click(object sender, EventArgs e)
    {
        reason1();
        Panel12.Visible = true;
    }
    protected void btnminusrejt_Click(object sender, EventArgs e)
    {
        try
        {
            string add = "delete from textvaltable where TextCode='" + btnrejectreason.SelectedValue + "'and TextCriteria='reres' and college_code='" + college_code + "' ";
            int a = dt.update_method_wo_parameter(add, "text");
            ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('Deleted Successfully')", true);
            reason1();
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    protected void btnrct_Click(object sender, EventArgs e)
    {
        try
        {
            int isval1 = 0;
            int fllg = 0;
            FpSpread2.SaveChanges();
            FpSpread3.SaveChanges();
            FpSpread1.SaveChanges();
            if (TabContainer1.ActiveTabIndex == 0)
            {
                //Applied
                if (fllg == 0)
                {
                    for (int i = 0; i < FpSpread3.Sheets[0].Rows.Count; i++)
                    {
                        isval1 = Convert.ToInt32(FpSpread3.Sheets[0].Cells[i, 1].Value);
                        if (isval1 == 1)
                        {
                            fllg = 1;
                            string sel = "select * from textvaltable where TextVal='" + btnrejectreason.SelectedItem.Text + "' and TextCriteria='reres'and college_code='" + college_code + "'";
                            ds = dt.select_method_wo_parameter(sel, "text");
                            if (ds.Tables[0].Rows.Count > 0)
                            {
                                // string approve = "if exists(select * from selectcriteria where app_no='" + FpSpread1.Sheets[0].Cells[i, 11].Text + "' and usercode='" + user_code + "' and degree_code='" + FpSpread1.Sheets[0].Cells[i, 12].Text + "' and college_code='" + college_code + "' and isapprove='2') delete from selectcriteria where app_no='" + FpSpread1.Sheets[0].Cells[i, 11].Text + "' and usercode='" + user_code + "' and degree_code='" + FpSpread1.Sheets[0].Cells[i, 12].Text + "' and college_code='" + college_code + "' and isapprove='2' insert into selectcriteria (app_no,usercode,degree_code,college_code,isapprove) values('" + FpSpread1.Sheets[0].Cells[i, 11].Text + "','" + user_code + "','" + FpSpread1.Sheets[0].Cells[i, 12].Text + "','" + college_code + "','2')";
                                string approve = " insert into selectcriteria(app_no,usercode,degree_code,college_code,isapprove,select_date,isview,textcode) values('" + FpSpread3.Sheets[0].Cells[i, 2].Text + "','" + user_code + "','" + ddldept.SelectedValue + "','" + college_code + "','3','" + System.DateTime.Now.ToString("yyy/MM/dd") + "','0','" + ds.Tables[0].Rows[0]["TextCode"].ToString() + "')";
                                approve = approve + "update applyn set admission_status='0',selection_status='0' where app_no ='" + FpSpread3.Sheets[0].Cells[i, 2].Text + "'";
                                int a = dt.update_method_wo_parameter(approve, "text");
                            }
                        }
                    }
                }
            }
            else if (TabContainer1.ActiveTabIndex == 1)
            {
                //Shortlist
                if (fllg == 0)
                {
                    for (int i = 0; i < FpSpread1.Sheets[0].Rows.Count; i++)
                    {
                        isval1 = Convert.ToInt32(FpSpread1.Sheets[0].Cells[i, 1].Value);
                        if (isval1 == 1)
                        {
                            fllg = 1;
                            string sel = "select * from textvaltable where TextVal='" + btnrejectreason.SelectedItem.Text + "' and TextCriteria='reres'and college_code='" + college_code + "'";
                            ds = dt.select_method_wo_parameter(sel, "text");
                            if (ds.Tables[0].Rows.Count > 0)
                            {
                                // string approve = "if exists(select * from selectcriteria where app_no='" + FpSpread1.Sheets[0].Cells[i, 11].Text + "' and usercode='" + user_code + "' and degree_code='" + FpSpread1.Sheets[0].Cells[i, 12].Text + "' and college_code='" + college_code + "' and isapprove='2') delete from selectcriteria where app_no='" + FpSpread1.Sheets[0].Cells[i, 11].Text + "' and usercode='" + user_code + "' and degree_code='" + FpSpread1.Sheets[0].Cells[i, 12].Text + "' and college_code='" + college_code + "' and isapprove='2' insert into selectcriteria (app_no,usercode,degree_code,college_code,isapprove) values('" + FpSpread1.Sheets[0].Cells[i, 11].Text + "','" + user_code + "','" + FpSpread1.Sheets[0].Cells[i, 12].Text + "','" + college_code + "','2')";
                                string approve = "update selectcriteria set isapprove='0',isview='0',usercode='" + user_code + "', select_date='" + System.DateTime.Now.ToString("yyy/MM/dd") + "',textcode='" + ds.Tables[0].Rows[0]["TextCode"].ToString() + "' where app_no='" + FpSpread1.Sheets[0].Cells[i, 2].Text + "' and degree_code='" + ddldept.SelectedValue + "' and college_code='" + college_code + "' ";
                                approve = approve + "update applyn set admission_status='0',selection_status='0' where app_no ='" + FpSpread1.Sheets[0].Cells[i, 2].Text + "'";
                                int a = dt.update_method_wo_parameter(approve, "text");
                            }
                        }
                    }
                }
            }
            else if (TabContainer1.ActiveTabIndex == 2)
            {
                //Recommended
                for (int i = 0; i < FpSpread2.Sheets[0].Rows.Count; i++)
                {
                    isval1 = Convert.ToInt32(FpSpread2.Sheets[0].Cells[i, 1].Value);
                    if (isval1 == 1)
                    {
                        fllg = 1;
                        string sel = "select * from textvaltable where TextVal='" + btnrejectreason.SelectedItem.Text + "' and TextCriteria='reres'and college_code='" + college_code + "'";
                        ds = dt.select_method_wo_parameter(sel, "text");
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            string approve = "update selectcriteria set isapprove='0',usercode='" + user_code + "',isview='0',  select_date='" + System.DateTime.Now.ToString("yyy/MM/dd") + "',textcode='" + ds.Tables[0].Rows[0]["TextCode"].ToString() + "' where app_no='" + FpSpread2.Sheets[0].Cells[i, 2].Text + "'  and degree_code='" + ddldept.SelectedValue + "' and college_code='" + college_code + "' ";
                            approve = approve + "update applyn set admission_status='0',selection_status='0' where app_no ='" + FpSpread2.Sheets[0].Cells[i, 2].Text + "'";
                            int a = dt.update_method_wo_parameter(approve, "text");
                        }
                    }
                }
            }
            else if (TabContainer1.ActiveTabIndex == 3)
            {
                //Admitted
                if (fllg == 0)
                {
                    for (int i = 0; i < FpSpread4.Sheets[0].Rows.Count; i++)
                    {
                        isval1 = Convert.ToInt32(FpSpread4.Sheets[0].Cells[i, 3].Value);
                        if (isval1 == 1)
                        {
                            fllg = 1;
                            string sel = "select * from textvaltable where TextVal='" + btnrejectreason.SelectedItem.Text + "' and TextCriteria='reres'and college_code='" + college_code + "'";
                            ds = dt.select_method_wo_parameter(sel, "text");
                            if (ds.Tables[0].Rows.Count > 0)
                            {
                                int setvalue = 0;
                                string allote = dt.GetFunction("select allot  from  admitcolumnset where column_name  ='" + Convert.ToString(FpSpread4.Sheets[0].Cells[i, 1].Tag) + "' and setcolumn ='" + ddldept.SelectedValue + "'");
                                if (allote != "")
                                {
                                    setvalue = Convert.ToInt32(allote) - 1;
                                }
                                // string approve = "if exists(select * from selectcriteria where app_no='" + FpSpread1.Sheets[0].Cells[i, 11].Text + "' and usercode='" + user_code + "' and degree_code='" + FpSpread1.Sheets[0].Cells[i, 12].Text + "' and college_code='" + college_code + "' and isapprove='2') delete from selectcriteria where app_no='" + FpSpread1.Sheets[0].Cells[i, 11].Text + "' and usercode='" + user_code + "' and degree_code='" + FpSpread1.Sheets[0].Cells[i, 12].Text + "' and college_code='" + college_code + "' and isapprove='2' insert into selectcriteria (app_no,usercode,degree_code,college_code,isapprove) values('" + FpSpread1.Sheets[0].Cells[i, 11].Text + "','" + user_code + "','" + FpSpread1.Sheets[0].Cells[i, 12].Text + "','" + college_code + "','2')";
                                string approve = "update selectcriteria set isapprove='2',isview='0',usercode='" + user_code + "', select_date='" + System.DateTime.Now.ToString("yyy/MM/dd") + "',textcode='" + ds.Tables[0].Rows[0]["TextCode"].ToString() + "' where app_no='" + FpSpread4.Sheets[0].Cells[i, 2].Text + "' and degree_code='" + ddldept.SelectedValue + "' and college_code='" + college_code + "' ";
                                approve = approve + "update applyn set admission_status='0',selection_status='1' where app_no ='" + FpSpread4.Sheets[0].Cells[i, 2].Text + "'";
                                approve = approve + " delete from FT_FeeAllot where App_No='" + FpSpread4.Sheets[0].Cells[i, 2].Text + "'";
                                approve = approve + " delete from FT_ChallanDet where App_No='" + FpSpread4.Sheets[0].Cells[i, 2].Text + "'";
                                //approve = approve + " update admitcolumnset set allot ='" + setvalue + "' where column_name  ='" + Convert.ToString(FpSpread4.Sheets[0].Cells[i, 1].Tag) + "' and setcolumn ='" + ddldept.SelectedValue + "'";
                                int a = dt.update_method_wo_parameter(approve, "text");
                            }
                        }
                    }
                }
            }
            else if (TabContainer1.ActiveTabIndex == 4)
            {
                //Fee Confirm
            }
            if (fllg == 1)
            {
                Button1_Click(sender, e);
                errorspan.InnerHtml = "Reject Successfully";
                poperrjs.Visible = true;
                panel2.Visible = false;
            }
            else
            {
                errorspan.InnerHtml = "Choose Atleast One Student And Than Proceed";
                poperrjs.Visible = true;
                panel2.Visible = false;
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    protected void btnrjt_click(object sender, EventArgs e)
    {
        panel2.Visible = false;
        TextBox1.Text = "";
    }
    protected void btnappreject(object sender, EventArgs e)
    {
        try
        {
            int isval1 = 0;
            int fllg = 0;
            FpSpread2.SaveChanges();
            FpSpread3.SaveChanges();
            FpSpread1.SaveChanges();
            FpSpread4.SaveChanges();
            reason1();
            for (int i = 0; i < FpSpread2.Sheets[0].Rows.Count; i++)
            {
                isval1 = Convert.ToInt32(FpSpread2.Sheets[0].Cells[i, 1].Value);
                if (isval1 == 1)
                {
                    fllg = 1;
                    panel2.Visible = true;
                    panel9.Visible = false;
                    panel11.Visible = true;
                    Panel10.Visible = false;
                }
            }
            for (int i = 0; i < FpSpread3.Sheets[0].Rows.Count; i++)
            {
                isval1 = Convert.ToInt32(FpSpread3.Sheets[0].Cells[i, 1].Value);
                if (isval1 == 1)
                {
                    fllg = 1;
                    panel2.Visible = true;
                    panel9.Visible = false;
                    panel11.Visible = true;
                    Panel10.Visible = false;
                }
            }
            for (int i = 0; i < FpSpread1.Sheets[0].Rows.Count; i++)
            {
                isval1 = Convert.ToInt32(FpSpread1.Sheets[0].Cells[i, 1].Value);
                if (isval1 == 1)
                {
                    fllg = 1;
                    panel2.Visible = true;
                    panel9.Visible = false;
                    panel11.Visible = true;
                    Panel10.Visible = false;
                }
            }
            for (int i = 0; i < FpSpread4.Sheets[0].Rows.Count; i++)
            {
                isval1 = Convert.ToInt32(FpSpread4.Sheets[0].Cells[i, 3].Value);
                if (isval1 == 1)
                {
                    fllg = 1;
                    panel2.Visible = true;
                    panel9.Visible = false;
                    panel11.Visible = true;
                    Panel10.Visible = false;
                }
            }
            if (fllg != 1)
            {
                errorspan.InnerHtml = "Choose Atleast One Student And Than Proceed";
                poperrjs.Visible = true;
                //ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('Choose Atleast One Student And Than Proceed')", true);
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    protected void btnappclick2(object sender, EventArgs e)
    {
        try
        {
            btnadmit_Click(sender, e);
            Button1_Click(sender, e);
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    protected void btnappclick(object sender, EventArgs e)
    {
        try
        {
            int i1 = 0;
            int isval1 = 0;
            int fllg = 0;
            FpSpread3.SaveChanges();
            bool checkflage = false;
            //if (lnkall.ForeColor == System.Drawing.Color.Green)
            //{
            //    checkflage = true;
            //}
            //else 
            if (lnkbc.ForeColor == System.Drawing.Color.Green)
            {
                checkflage = false;
            }
            else if (lnksc.ForeColor == System.Drawing.Color.Green)
            {
                checkflage = false;
            }
            else if (lnkst.ForeColor == System.Drawing.Color.Green)
            {
                checkflage = false;
            }
            else if (lnksca.ForeColor == System.Drawing.Color.Green)
            {
                checkflage = false;
            }
            else if (lnkbcm.ForeColor == System.Drawing.Color.Green)
            {
                checkflage = false;
            }
            else if (lnkoc.ForeColor == System.Drawing.Color.Green)
            {
                checkflage = false;
            }
            else if (lnkchirstian.ForeColor == System.Drawing.Color.Green)
            {
                checkflage = false;
            }
            else if (lnkmbcdnc.ForeColor == System.Drawing.Color.Green)
            {
                checkflage = false;
            }
            if (checkflage == false)
            {
                for (int i = 0; i < FpSpread3.Sheets[0].Rows.Count; i++)
                {
                    isval1 = Convert.ToInt32(FpSpread3.Sheets[0].Cells[i, 1].Value);
                    if (isval1 == 1)
                    {
                        fllg = 1; string community = "";
                        if (Convert.ToString(ViewState["text_code_value"]) == "")
                            community = Convert.ToString(FpSpread3.Sheets[0].Cells[i, 0].Tag);
                        else
                            community = Convert.ToString(ViewState["text_code_value"]);

                        string approve = "if exists(select * from selectcriteria where app_no='" + FpSpread3.Sheets[0].Cells[i, 2].Text + "'  and degree_code='" + ddldept.SelectedValue + "' and college_code='" + college_code + "') delete from selectcriteria where app_no='" + FpSpread3.Sheets[0].Cells[i, 2].Text + "'  and degree_code='" + ddldept.SelectedValue + "' and college_code='" + college_code + "'  insert into selectcriteria (app_no,usercode,degree_code,college_code,isapprove,select_date,isview,criteria_Code) values('" + FpSpread3.Sheets[0].Cells[i, 2].Text + "','" + user_code + "','" + ddldept.SelectedValue + "','" + college_code + "','1','" + System.DateTime.Now.ToString("yyy/MM/dd") + "','0','" + community + "')";
                        approve = approve + " update applyn set selection_status='1' where app_no ='" + FpSpread3.Sheets[0].Cells[i, 2].Text + "'";
                        int a = dt.update_method_wo_parameter(approve, "text");
                    }
                }
                Button1_Click(sender, e);
                if (fllg == 1)
                {
                    errorspan.InnerHtml = "ShortListed Successfully";
                    poperrjs.Visible = true;
                    //ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('ShortListed Successfully')", true);
                    // ScriptManager.RegisterStartupScript(base.Page, this.GetType(), ("dialogJavascript" + this.ID), "alert(\"ShortListed Successfully\");", true);
                }
                else
                {
                    errorspan.InnerHtml = "Choose Atleast One Student And Than Proceed";
                    poperrjs.Visible = true;
                    // ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('Choose Atleast One Student And Than Proceed')", true);
                    // ScriptManager.RegisterStartupScript(base.Page, this.GetType(), ("dialogJavascript" + this.ID), "alert(\"Choose Atleast One Student And Than Proceed\");", true);
                }
            }
            else
            {
                errorspan.InnerHtml = "Please Select Any one Category";
                poperrjs.Visible = true;
                //ScriptManager.RegisterStartupScript(base.Page, this.GetType(), ("dialogJavascript" + this.ID), "alert(\"Please Select Any one Category\");", true);
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    protected void FpSpread4_command(object sender, EventArgs e)
    {
        try
        {
            tnspan.Visible = false;
            Tancetspan.Visible = false;
            string activerow = FpSpread4.ActiveSheetView.ActiveRow.ToString();
            string activecol = FpSpread4.ActiveSheetView.ActiveColumn.ToString();
            if (activecol == "4")
            {
                string app_no = Convert.ToString(FpSpread4.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text);
                Session["pdfapp_no"] = Convert.ToString(app_no);
                //string jg = "update applyn set isview='1' where app_no='" + FpSpread4.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text + "'  and degree_code='" + ddldept.SelectedValue + "' and college_code='" + college_code + "'";
                //int k = dt.update_method_wo_parameter(jg, "text");
                panel4.Attributes.Add("Style", "background: none repeat scroll 0 0 rgba(0, 0, 0, 0.83); border-color: inherit; border-style: none; border-width: 1px; height: 101%; left: -8px; position: absolute; top: -9px; width: 101%; display: block;");
                string type = ddltype.SelectedItem.Text;
                string edulevel = ddledu.SelectedItem.Text;
                string grduation = ddldegree.SelectedItem.Text;
                string course = ddldept.SelectedItem.Text;
                if (edulevel.ToString().ToUpper() == "PG")
                {
                    pgdiv_verification.Visible = true;
                    ugdiv_verification.Visible = false;
                }
                else if (edulevel.ToString().ToUpper() == "UG")
                {
                    pgdiv_verification.Visible = false;
                    ugdiv_verification.Visible = true;
                }
                string query = "select app_formno,CONVERT(varchar(10), date_applied,103) as date_applied,stud_name,sex,Relationship,parent_name,CONVERT(varchar(10), dob,103) as dob ,parent_occu,mother_tongue,religion,citizen,community,caste,TamilOrginFromAndaman,IsExService,handy,visualhandy,first_graduate,CampusReq,DistinctSport,co_curricular,parent_addressC,Streetc,Cityc,parent_statec,Countryc,parent_pincodec,Student_Mobile,StuPer_Id,parent_phnoc,alter_mobileno,parent_addressP,Streetp,cityp,parent_statep,Countryp,parent_pincodep,parent_phnop,degree_code,batch_year,college_code,SubCaste,isdisable ,isdisabledisc,islearningdis,missionarydisc,MissionaryChild,seattype,current_semester,ncccadet from applyn a where a.app_no='" + app_no + "'";
                query = query + " select course_entno,course_code,university_code,Vocational_stream,Institute_name,percentage,instaddress,medium,branch_code ,Part1Language,Part2Language,isgrade,uni_state,registration_no,type_semester,majorallied_percent,major_percent,type_major,tancet_mark,tancetmark_year from Stud_prev_details where app_no ='" + app_no + "'";
                query = query + " select textval,textcode from textvaltable where TextCriteria='unive'";
                ds.Clear();
                ds = dt.select_method_wo_parameter(query, "text");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    college_span.InnerHtml = ":  " + Convert.ToString(type);
                    degree_Span.InnerHtml = ":  " + Convert.ToString(edulevel);
                    graduation_span.InnerHtml = ":  " + Convert.ToString(grduation);
                    course_span.InnerHtml = ":  " + Convert.ToString(course);
                    applicantname_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["stud_name"]);
                    dob_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["dob"]);
                    if (Convert.ToString(ds.Tables[0].Rows[0]["sex"]) == "0")
                    {
                        gender_span.InnerHtml = ":  Male";
                    }
                    else if (Convert.ToString(ds.Tables[0].Rows[0]["sex"]) == "1")
                    {
                        gender_span.InnerHtml = ":  Female";
                    }
                    else if (Convert.ToString(ds.Tables[0].Rows[0]["sex"]) == "2")
                    {
                        gender_span.InnerHtml = ":  Transgender";
                    }
                    parent_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_name"]);
                    string occupation = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["parent_occu"]));
                    occupation_span.InnerHtml = ":  " + occupation.ToString();
                    string mothertonge = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["mother_tongue"]));
                    mothertongue_span.InnerHtml = ":  " + Convert.ToString(mothertonge);
                    string relisgion = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["religion"]));
                    religion_span.InnerHtml = ":  " + Convert.ToString(relisgion);
                    string city = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["citizen"]));
                    nationality_span.InnerHtml = ":  " + Convert.ToString(city);
                    string coummnity = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["community"]));
                    commuity_span.InnerHtml = ":  " + Convert.ToString(coummnity);
                    if (Convert.ToString(ds.Tables[0].Rows[0]["caste"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["caste"]) != "0")
                    {
                        string scas = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["caste"]));
                        Caste_span.InnerHtml = ":  " + Convert.ToString(scas);
                    }
                    else
                    {
                        Caste_span.InnerHtml = ":  -";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["TamilOrginFromAndaman"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["TamilOrginFromAndaman"]) != "False")
                    {
                        tamilorigin_span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        tamilorigin_span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["IsExService"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["IsExService"]) != "False")
                    {
                        Ex_service_span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        Ex_service_span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["isdisable"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["isdisable"]) != "False")
                    {
                        Differentlyable_Span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        Differentlyable_Span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["first_graduate"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["first_graduate"]) != "False")
                    {
                        first_generation_Span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        first_generation_Span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["CampusReq"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["CampusReq"]) != "False")
                    {
                        residancerequired_span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        residancerequired_span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["DistinctSport"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["DistinctSport"]) != "0")
                    {
                        string disy = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["DistinctSport"]));
                        sport_span.InnerHtml = ":  " + Convert.ToString(disy);
                    }
                    else
                    {
                        sport_span.InnerHtml = ":  -";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["co_curricular"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["co_curricular"]) != "0")
                    {
                        string cocour = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["co_curricular"]));
                        Co_Curricular_span.InnerHtml = ":  " + Convert.ToString(cocour);
                    }
                    else
                    {
                        Co_Curricular_span.InnerHtml = ":  -";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["ncccadet"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["ncccadet"]) != "False")
                    {
                        ncccadetspan.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        ncccadetspan.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[1].Rows[0]["Vocational_stream"]).Trim() != "" && Convert.ToString(ds.Tables[1].Rows[0]["Vocational_stream"]) != "False")
                    {
                        Vocationalspan.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        Vocationalspan.InnerHtml = ":  No";
                    }
                    caddressline1_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_addressC"]);
                    string address = Convert.ToString(ds.Tables[0].Rows[0]["Streetc"]);
                    if (ds.Tables[0].Rows[0]["Streetc"].ToString().Trim() != "")
                    {
                        string[] split = address.Split('/');
                        if (split.Length > 1)
                        {
                            if (Convert.ToString(split[0]).Trim() != "")
                            {
                                Addressline2_span.InnerHtml = ":  " + Convert.ToString(split[0]);
                            }
                            else
                            {
                                Addressline2_span.InnerHtml = ":  -";
                            }
                            if (Convert.ToString(split[1]).Trim() != "")
                            {
                                Addressline3_span.InnerHtml = ":  " + Convert.ToString(split[1]);
                            }
                            else
                            {
                                Addressline3_span.InnerHtml = ":  -";
                            }
                        }
                        else
                        {
                            Addressline2_span.InnerHtml = ":  " + Convert.ToString(split[0]);
                        }
                    }
                    else
                    {
                        Addressline2_span.InnerHtml = ":  -";
                        Addressline3_span.InnerHtml = ":  -";
                    }
                    if (ds.Tables[0].Rows[0]["Cityc"].ToString().Trim() != "")
                    {
                        city_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["Cityc"]);
                    }
                    else
                    {
                        city_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_statec"].ToString().Trim() != "")
                    {
                        string state = subjectcode(ds.Tables[0].Rows[0]["parent_statec"].ToString());
                        state_span.InnerHtml = ":  " + Convert.ToString(state);
                    }
                    else
                    {
                        state_span.InnerHtml = ":  -";
                    }
                    if (ds.Tables[0].Rows[0]["Countryc"].ToString().Trim() != "")
                    {
                        string country = subjectcode(ds.Tables[0].Rows[0]["Countryc"].ToString());
                        Country_span.InnerHtml = ":  " + Convert.ToString(country);
                    }
                    else
                    {
                        Country_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_pincodec"].ToString().Trim() != "")
                    {
                        Postelcode_Span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_pincodec"]);
                    }
                    else
                    {
                        Postelcode_Span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["Student_Mobile"].ToString().Trim() != "")
                    {
                        Mobilenumber_Span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["Student_Mobile"]);
                    }
                    else
                    {
                        Mobilenumber_Span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["alter_mobileno"].ToString().Trim() != "")
                    {
                        Alternatephone_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["alter_mobileno"]);
                    }
                    else
                    {
                        Alternatephone_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["StuPer_Id"].ToString().Trim() != "")
                    {
                        emailid_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["StuPer_Id"]);
                    }
                    else
                    {
                        emailid_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_phnoc"].ToString().Trim() != "")
                    {
                        std_ist_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_phnoc"]);
                    }
                    else
                    {
                        std_ist_span.InnerHtml = "-";
                    }
                    // permnant
                    paddressline1_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_addressP"]);
                    if (ds.Tables[0].Rows[0]["Streetp"].ToString().Trim() != "")
                    {
                        string streat = Convert.ToString(ds.Tables[0].Rows[0]["Streetp"]);
                        if (streat.Trim() != "")
                        {
                            string[] splitstreat = streat.Split('/');
                            if (splitstreat.Length > 1)
                            {
                                if (Convert.ToString(splitstreat[0]).Trim() != "")
                                {
                                    paddressline2_span.InnerHtml = ":  " + Convert.ToString(splitstreat[0]);
                                }
                                else
                                {
                                    paddressline2_span.InnerHtml = ":  -";
                                }
                                if (Convert.ToString(splitstreat[0]).Trim() != "")
                                {
                                    paddressline3_span.InnerHtml = ":  " + Convert.ToString(splitstreat[1]);
                                }
                                else
                                {
                                    paddressline3_span.InnerHtml = ":  -";
                                }
                            }
                            else
                            {
                                paddressline2_span.InnerHtml = ":  " + Convert.ToString(splitstreat[0]);
                            }
                        }
                        paddressline2_span.InnerHtml = ":  -";
                        paddressline3_span.InnerHtml = ":  -";
                    }
                    else
                    {
                        paddressline2_span.InnerHtml = ":  -";
                        paddressline3_span.InnerHtml = ":  -";
                    }
                    if (ds.Tables[0].Rows[0]["Cityp"].ToString().Trim() != "")
                    {
                        pcity_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["Cityp"]);
                    }
                    else
                    {
                        pcity_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_statep"].ToString().Trim() != "")
                    {
                        string state = subjectcode(ds.Tables[0].Rows[0]["parent_statep"].ToString());
                        pstate_span.InnerHtml = ":  " + Convert.ToString(state);
                    }
                    else
                    {
                        pstate_span.InnerHtml = ":  -";
                    }
                    if (ds.Tables[0].Rows[0]["Countryp"].ToString().Trim() != "")
                    {
                        string country = subjectcode(ds.Tables[0].Rows[0]["Countryp"].ToString());
                        pcountry_span.InnerHtml = ":  " + Convert.ToString(country);
                    }
                    else
                    {
                        pcountry_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_pincodep"].ToString().Trim() != "")
                    {
                        ppostelcode_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_pincodep"]);
                    }
                    else
                    {
                        ppostelcode_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_phnop"].ToString().Trim() != "")
                    {
                        pstdisd_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_phnop"]);
                    }
                    else
                    {
                        pstdisd_span.InnerHtml = "-";
                    }
                }
                if (ds.Tables[1].Rows.Count > 0)
                {
                    if (ddledu.SelectedItem.Text == "UG")
                    {
                        ugtotaldiv.Visible = true;
                        pgtotaldiv.Visible = false;
                        string courseentronumber = Convert.ToString(ds.Tables[1].Rows[0]["course_entno"]);
                        string coursecode = Convert.ToString(ds.Tables[1].Rows[0]["course_code"]);
                        string university_code = Convert.ToString(ds.Tables[1].Rows[0]["university_code"]);
                        string institutename = Convert.ToString(ds.Tables[1].Rows[0]["Institute_name"]);
                        string percentage = Convert.ToString(ds.Tables[1].Rows[0]["percentage"]);
                        string institueaddress = Convert.ToString(ds.Tables[1].Rows[0]["instaddress"]);
                        string medium = Convert.ToString(ds.Tables[1].Rows[0]["medium"]);
                        string part1language = Convert.ToString(ds.Tables[1].Rows[0]["Part1Language"]);
                        string part2language = Convert.ToString(ds.Tables[1].Rows[0]["Part2Language"]);
                        string isgrade = Convert.ToString(ds.Tables[1].Rows[0]["isgrade"]);
                        string university_state = Convert.ToString(ds.Tables[1].Rows[0]["uni_state"]);
                        // string part1language = Convert.ToString(ds.Tables[1].Rows[0]["Institute_name"]);
                        if (coursecode.Trim() != "")
                        {
                            string course1 = subjectcode(coursecode);
                            qualifyingexam_span.InnerHtml = ":  " + Convert.ToString(course1);
                        }
                        else
                        {
                            qualifyingexam_span.InnerHtml = ":  -";
                        }
                        if (institutename.Trim() != "")
                        {
                            Nameofschool_span.InnerHtml = ":  " + Convert.ToString(institutename);
                        }
                        else
                        {
                            Nameofschool_span.InnerHtml = "";
                        }
                        if (institueaddress.Trim() != "")
                        {
                            locationofschool_Span.InnerHtml = ":  " + Convert.ToString(institueaddress);
                        }
                        else
                        {
                            locationofschool_Span.InnerHtml = "";
                        }
                        if (medium.Trim() != "")
                        {
                            string m = subjectcode(medium);
                            mediumofstudy_span.InnerHtml = ":  " + Convert.ToString(m);
                        }
                        else
                        {
                            mediumofstudy_span.InnerHtml = ":  -";
                        }
                        if (university_code.Trim() != "")
                        {
                            string univ = subjectcode(university_code);
                            qualifyingboard_span.InnerHtml = ":  " + Convert.ToString(univ);
                        }
                        else
                        {
                            qualifyingboard_span.InnerHtml = ":  -";
                        }
                        if (isgrade.Trim() != "")
                        {
                            if (isgrade == "True")
                            {
                                marksgrade_span.InnerHtml = ":  Grade";
                            }
                            else
                            {
                                marksgrade_span.InnerHtml = ":  Marks";
                            }
                        }
                        string markquery = "select psubjectno,registerno,acual_marks,max_marks,noofattempt,pass_month,pass_year,semyear ,grade from perv_marks_history  where course_entno ='" + courseentronumber + "'";
                        ds.Clear();
                        ds = dt.select_method_wo_parameter(markquery, "Text");
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            DataTable data = new DataTable();
                            DataRow dr = null;
                            Hashtable hash = new Hashtable();
                            data.Columns.Add("Language", typeof(string));
                            data.Columns.Add("Subject", typeof(string));
                            data.Columns.Add("Marks Obtained", typeof(string));
                            data.Columns.Add("Month", typeof(string));
                            data.Columns.Add("Year", typeof(string));
                            data.Columns.Add("Register No / Roll No", typeof(string));
                            data.Columns.Add("No of Attempts", typeof(string));
                            data.Columns.Add("Maximum Marks", typeof(string));
                            hash.Add(0, "Language1");
                            hash.Add(1, "Language2");
                            hash.Add(2, " Subject1");
                            hash.Add(3, " Subject2");
                            hash.Add(4, " Subject3");
                            hash.Add(5, " Subject4");
                            hash.Add(6, " Subject5");
                            hash.Add(7, " Subject6");
                            hash.Add(8, " Subject7");
                            hash.Add(9, " Subject8");
                            hash.Add(10, " Subject9");
                            hash.Add(11, " Subject10");
                            hash.Add(12, " Subject11");
                            int totalmark = 0;
                            int maxtotal = 0;
                            for (int mark = 0; mark < ds.Tables[0].Rows.Count; mark++)
                            {
                                string subjectno = Convert.ToString(ds.Tables[0].Rows[mark]["psubjectno"]);
                                string actualmark = "";
                                if (isgrade == "True")
                                {
                                    actualmark = Convert.ToString(ds.Tables[0].Rows[mark]["grade"]);
                                }
                                else
                                {
                                    actualmark = Convert.ToString(ds.Tables[0].Rows[mark]["acual_marks"]);
                                }
                                string month = Convert.ToString(ds.Tables[0].Rows[mark]["pass_month"]);
                                string year = Convert.ToString(ds.Tables[0].Rows[mark]["pass_year"]);
                                string regno = Convert.ToString(ds.Tables[0].Rows[mark]["registerno"]);
                                string noofattenm = Convert.ToString(ds.Tables[0].Rows[mark]["noofattempt"]);
                                string maxmark = Convert.ToString(ds.Tables[0].Rows[mark]["max_marks"]);
                                dr = data.NewRow();
                                string lang = Convert.ToString(hash[mark]);
                                dr[0] = Convert.ToString(lang);
                                string sub = subjectcode(subjectno);
                                dr[1] = Convert.ToString(sub);
                                dr[2] = Convert.ToString(actualmark);
                                dr[3] = Convert.ToString(month);
                                dr[4] = Convert.ToString(year);
                                dr[5] = Convert.ToString(regno);
                                dr[6] = Convert.ToString(noofattenm);
                                dr[7] = Convert.ToString(maxmark);
                                data.Rows.Add(dr);
                                if (isgrade != "True")
                                {
                                    totalmark = totalmark + Convert.ToInt32(actualmark);
                                    maxtotal = maxtotal + Convert.ToInt32(maxmark);
                                }
                            }
                            if (isgrade != "True")
                            {
                                total_marks_secured.InnerHtml = ":  " + Convert.ToString(totalmark);
                                maximum_marks.InnerHtml = ":  " + Convert.ToString(maxtotal);
                                percentage_span.InnerHtml = ":  " + percentage;
                            }
                            VerificationGridug.DataSource = data;
                            VerificationGridug.DataBind();
                            if (VerificationGridug.Rows.Count > 0)
                            {
                                for (int v = 0; v < VerificationGridug.Rows.Count; v++)
                                {
                                    VerificationGridug.Rows[v].Cells[2].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[3].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[4].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[5].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[6].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[7].HorizontalAlign = HorizontalAlign.Center;
                                }
                            }
                        }
                    }
                    else if (ddledu.SelectedItem.Text == "PG")
                    {
                        ugtotaldiv.Visible = false;
                        pgtotaldiv.Visible = true;
                        string courseentronumber = Convert.ToString(ds.Tables[1].Rows[0]["course_entno"]);
                        string coursecode = Convert.ToString(ds.Tables[1].Rows[0]["course_code"]);
                        string university_code = Convert.ToString(ds.Tables[1].Rows[0]["university_code"]);
                        string institutename = Convert.ToString(ds.Tables[1].Rows[0]["Institute_name"]);
                        string percentage = Convert.ToString(ds.Tables[1].Rows[0]["percentage"]);
                        string institueaddress = Convert.ToString(ds.Tables[1].Rows[0]["instaddress"]);
                        string medium = Convert.ToString(ds.Tables[1].Rows[0]["medium"]);
                        string part1language = Convert.ToString(ds.Tables[1].Rows[0]["Part1Language"]);
                        string part2language = Convert.ToString(ds.Tables[1].Rows[0]["Part2Language"]);
                        string isgrade = Convert.ToString(ds.Tables[1].Rows[0]["isgrade"]);
                        string university_state = Convert.ToString(ds.Tables[1].Rows[0]["uni_state"]);
                        string typeofsubject = Convert.ToString(ds.Tables[1].Rows[0]["type_major"]);
                        string typeofsemester = Convert.ToString(ds.Tables[1].Rows[0]["type_semester"]);
                        string regno = Convert.ToString(ds.Tables[1].Rows[0]["registration_no"]);
                        string major = Convert.ToString(ds.Tables[1].Rows[0]["branch_code"]);
                        string majorpercentage = Convert.ToString(ds.Tables[1].Rows[0]["major_percent"]);
                        string majorallidepercentage = Convert.ToString(ds.Tables[1].Rows[0]["majorallied_percent"]);
                        string Tancet = Convert.ToString(ds.Tables[1].Rows[0]["tancet_mark"]);
                        string Tancetyear = Convert.ToString(ds.Tables[1].Rows[0]["tancetmark_year"]);
                        percentagemajorspan.InnerHtml = ":  " + Convert.ToString(percentage);
                        majorsubjectspan.InnerHtml = ":  " + Convert.ToString(majorpercentage);
                        alliedmajorspan.InnerHtml = ":  " + Convert.ToString(majorallidepercentage);
                        if (coursecode.Trim() != "")
                        {
                            string course1 = subjectcode(coursecode);
                            ugqualifyingexam_span.InnerHtml = ":  " + Convert.ToString(course1);
                        }
                        else
                        {
                            ugqualifyingexam_span.InnerHtml = ":  -";
                        }
                        if (institutename.Trim() != "")
                        {
                            nameofcollege_Sapn.InnerHtml = ":  " + Convert.ToString(institutename);
                        }
                        else
                        {
                            nameofcollege_Sapn.InnerHtml = "";
                        }
                        //17.06.16
                        DataView dv = new DataView();
                        ds.Tables[2].DefaultView.RowFilter = "textcode='" + university_code + "'";
                        dv = ds.Tables[2].DefaultView;
                        if (dv.Count > 0)
                        {
                            if (Convert.ToString(dv[0][0]).Trim() != "")
                            {
                                nameofuniver_city.InnerHtml = ":  " + Convert.ToString((dv[0][0]));
                            }
                            else
                            {
                                nameofuniver_city.InnerHtml = "";
                            }
                        }
                        if (institueaddress.Trim() != "")
                        {
                            locationofcollege_sapn.InnerHtml = ":  " + Convert.ToString(institueaddress);
                        }
                        else
                        {
                            locationofcollege_sapn.InnerHtml = "";
                        }
                        if (major.Trim() != "")
                        {
                            string major1 = subjectcode(major);
                            major_span.InnerHtml = ":  " + Convert.ToString(major1);
                        }
                        else
                        {
                            major_span.InnerHtml = "";
                        }
                        if (typeofsubject.Trim() != "")
                        {
                            if (typeofsubject == "1")
                            {
                                typeofsubject = "Single";
                            }
                            else if (typeofsubject == "2")
                            {
                                typeofsubject = "Double";
                            }
                            else if (typeofsubject == "3")
                            {
                                typeofsubject = "Triple";
                            }
                            typeofmajor_span.InnerHtml = ":  " + Convert.ToString(typeofsubject);
                        }
                        if (typeofsemester.Trim() != "")
                        {
                            if (typeofsemester == "True")
                            {
                                typeofsemester = "Semester";
                            }
                            else
                            {
                                typeofsemester = "Non Semester";
                            }
                            typeofsemester_span.InnerHtml = ":  " + Convert.ToString(typeofsemester);
                        }
                        if (medium.Trim() != "")
                        {
                            string lang = subjectcode(medium);
                            mediumofstudy_spanug.InnerHtml = ":  " + Convert.ToString(lang);
                        }
                        if (isgrade.Trim() != "")
                        {
                            if (isgrade == "True")
                            {
                                marksorgradeug_span.InnerHtml = ":  Grade";
                            }
                            else
                            {
                                marksorgradeug_span.InnerHtml = ":  Marks";
                            }
                        }
                        //if (isgrade.Trim() != "")
                        //{
                        //    marksorgradeug_span.InnerHtml = ":  " + Convert.ToString(isgrade);
                        //}
                        if (regno.Trim() != "")
                        {
                            reg_no_span.InnerHtml = ":  " + Convert.ToString(regno);
                        }
                        if (type == "MCA")
                        {
                            tnspan.Visible = true;
                            Tancetspan.Visible = true;
                            Tancetspan.InnerHtml = ": " + Convert.ToString(Tancet) + " - " + Convert.ToString(Tancetyear);
                        }
                        string pgquery = "select psubjectno,subject_typeno,acual_marks,max_marks,pass_month,pass_year,semyear ,grade from perv_marks_history where course_entno ='" + courseentronumber + "'";
                        ds.Clear();
                        ds = dt.select_method_wo_parameter(pgquery, "Text");
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            DataTable data = new DataTable();
                            DataRow dr = null;
                            Hashtable hash = new Hashtable();
                            data.Columns.Add("S.No", typeof(string));
                            //  data.Columns.Add("Sem/Year", typeof(string));
                            data.Columns.Add("Subject", typeof(string));
                            data.Columns.Add("Subject type", typeof(string));
                            data.Columns.Add("Marks", typeof(string));
                            data.Columns.Add("Month", typeof(string));
                            data.Columns.Add("Year", typeof(string));
                            data.Columns.Add("Maximum Marks", typeof(string));
                            int sno = 0;
                            for (int pg = 0; pg < ds.Tables[0].Rows.Count; pg++)
                            {
                                sno++;
                                string subjectno = Convert.ToString(ds.Tables[0].Rows[pg]["psubjectno"]);
                                string subjecttypeno = Convert.ToString(ds.Tables[0].Rows[pg]["subject_typeno"]);
                                string actualmark = "";
                                if (isgrade == "True")
                                {
                                    actualmark = Convert.ToString(ds.Tables[0].Rows[pg]["grade"]);
                                }
                                else
                                {
                                    actualmark = Convert.ToString(ds.Tables[0].Rows[pg]["acual_marks"]);
                                }
                                string month = Convert.ToString(ds.Tables[0].Rows[pg]["pass_month"]);
                                string year = Convert.ToString(ds.Tables[0].Rows[pg]["pass_year"]);
                                // string noofattenm = Convert.ToString(ds.Tables[0].Rows[pg]["noofattempt"]);
                                string maxmark = Convert.ToString(ds.Tables[0].Rows[pg]["max_marks"]);
                                dr = data.NewRow();
                                dr[0] = Convert.ToString(sno);
                                string subject = subjectcode(subjectno);
                                dr[1] = Convert.ToString(subject);
                                string typesub = subjectcode(subjecttypeno);
                                dr[2] = Convert.ToString(typesub);
                                dr[3] = Convert.ToString(actualmark);
                                dr[4] = Convert.ToString(month);
                                dr[5] = Convert.ToString(year);
                                dr[6] = Convert.ToString(maxmark);
                                data.Rows.Add(dr);
                            }
                            Verificationgridpg.DataSource = data;
                            Verificationgridpg.DataBind();
                            if (VerificationGridug.Rows.Count > 0)
                            {
                                for (int v = 0; v < Verificationgridpg.Rows.Count; v++)
                                {
                                    Verificationgridpg.Rows[v].Cells[3].HorizontalAlign = HorizontalAlign.Center;
                                    Verificationgridpg.Rows[v].Cells[4].HorizontalAlign = HorizontalAlign.Center;
                                    Verificationgridpg.Rows[v].Cells[5].HorizontalAlign = HorizontalAlign.Center;
                                    Verificationgridpg.Rows[v].Cells[6].HorizontalAlign = HorizontalAlign.Center;
                                }
                            }
                        }
                    }
                }
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    protected void spreadFeeConfirm_command(object sender, EventArgs e)
    {
        try
        {
            tnspan.Visible = false;
            Tancetspan.Visible = false;
            string activerow = spreadFeeConfirm.ActiveSheetView.ActiveRow.ToString();
            string activecol = spreadFeeConfirm.ActiveSheetView.ActiveColumn.ToString();
            if (activecol == "4")
            {
                string app_no = Convert.ToString(spreadFeeConfirm.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text);
                Session["pdfapp_no"] = Convert.ToString(app_no);
                //string jg = "update applyn set isview='1' where app_no='" + FpSpread4.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text + "'  and degree_code='" + ddldept.SelectedValue + "' and college_code='" + college_code + "'";
                //int k = dt.update_method_wo_parameter(jg, "text");
                panel4.Attributes.Add("Style", "background: none repeat scroll 0 0 rgba(0, 0, 0, 0.83); border-color: inherit; border-style: none; border-width: 1px; height: 101%; left: -8px; position: absolute; top: -9px; width: 101%; display: block;");
                string type = ddltype.SelectedItem.Text;
                string edulevel = ddledu.SelectedItem.Text;
                string grduation = ddldegree.SelectedItem.Text;
                string course = ddldept.SelectedItem.Text;
                if (edulevel.ToString().ToUpper() == "PG")
                {
                    pgdiv_verification.Visible = true;
                    ugdiv_verification.Visible = false;
                }
                else if (edulevel.ToString().ToUpper() == "UG")
                {
                    pgdiv_verification.Visible = false;
                    ugdiv_verification.Visible = true;
                }
                string query = "select app_formno,CONVERT(varchar(10), date_applied,103) as date_applied,stud_name,sex,Relationship,parent_name,CONVERT(varchar(10), dob,103) as dob ,parent_occu,mother_tongue,religion,citizen,community,caste,TamilOrginFromAndaman,IsExService,handy,visualhandy,first_graduate,CampusReq,DistinctSport,co_curricular,parent_addressC,Streetc,Cityc,parent_statec,Countryc,parent_pincodec,Student_Mobile,StuPer_Id,parent_phnoc,alter_mobileno,parent_addressP,Streetp,cityp,parent_statep,Countryp,parent_pincodep,parent_phnop,degree_code,batch_year,college_code,SubCaste,isdisable ,isdisabledisc,islearningdis,missionarydisc,MissionaryChild,seattype,current_semester,ncccadet from applyn a where a.app_no='" + app_no + "'";
                query = query + " select course_entno,course_code,university_code,Vocational_stream,Institute_name,percentage,instaddress,medium,branch_code ,Part1Language,Part2Language,isgrade,uni_state,registration_no,type_semester,majorallied_percent,major_percent,type_major,tancet_mark,tancetmark_year from Stud_prev_details where app_no ='" + app_no + "'";
                query = query + " select textval,textcode from textvaltable where TextCriteria='unive'";
                ds.Clear();
                ds = dt.select_method_wo_parameter(query, "text");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    college_span.InnerHtml = ":  " + Convert.ToString(type);
                    degree_Span.InnerHtml = ":  " + Convert.ToString(edulevel);
                    graduation_span.InnerHtml = ":  " + Convert.ToString(grduation);
                    course_span.InnerHtml = ":  " + Convert.ToString(course);
                    applicantname_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["stud_name"]);
                    dob_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["dob"]);
                    if (Convert.ToString(ds.Tables[0].Rows[0]["sex"]) == "0")
                    {
                        gender_span.InnerHtml = ":  Male";
                    }
                    else if (Convert.ToString(ds.Tables[0].Rows[0]["sex"]) == "1")
                    {
                        gender_span.InnerHtml = ":  Female";
                    }
                    else if (Convert.ToString(ds.Tables[0].Rows[0]["sex"]) == "2")
                    {
                        gender_span.InnerHtml = ":  Transgender";
                    }
                    parent_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_name"]);
                    string occupation = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["parent_occu"]));
                    occupation_span.InnerHtml = ":  " + occupation.ToString();
                    string mothertonge = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["mother_tongue"]));
                    mothertongue_span.InnerHtml = ":  " + Convert.ToString(mothertonge);
                    string relisgion = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["religion"]));
                    religion_span.InnerHtml = ":  " + Convert.ToString(relisgion);
                    string city = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["citizen"]));
                    nationality_span.InnerHtml = ":  " + Convert.ToString(city);
                    string coummnity = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["community"]));
                    commuity_span.InnerHtml = ":  " + Convert.ToString(coummnity);
                    if (Convert.ToString(ds.Tables[0].Rows[0]["caste"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["caste"]) != "0")
                    {
                        string scas = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["caste"]));
                        Caste_span.InnerHtml = ":  " + Convert.ToString(scas);
                    }
                    else
                    {
                        Caste_span.InnerHtml = ":  -";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["TamilOrginFromAndaman"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["TamilOrginFromAndaman"]) != "False")
                    {
                        tamilorigin_span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        tamilorigin_span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["IsExService"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["IsExService"]) != "False")
                    {
                        Ex_service_span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        Ex_service_span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["isdisable"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["isdisable"]) != "False")
                    {
                        Differentlyable_Span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        Differentlyable_Span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["first_graduate"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["first_graduate"]) != "False")
                    {
                        first_generation_Span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        first_generation_Span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["CampusReq"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["CampusReq"]) != "False")
                    {
                        residancerequired_span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        residancerequired_span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["DistinctSport"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["DistinctSport"]) != "0")
                    {
                        string disy = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["DistinctSport"]));
                        sport_span.InnerHtml = ":  " + Convert.ToString(disy);
                    }
                    else
                    {
                        sport_span.InnerHtml = ":  -";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["co_curricular"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["co_curricular"]) != "0")
                    {
                        string cocour = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["co_curricular"]));
                        Co_Curricular_span.InnerHtml = ":  " + Convert.ToString(cocour);
                    }
                    else
                    {
                        Co_Curricular_span.InnerHtml = ":  -";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["ncccadet"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["ncccadet"]) != "False")
                    {
                        ncccadetspan.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        ncccadetspan.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[1].Rows[0]["Vocational_stream"]).Trim() != "" && Convert.ToString(ds.Tables[1].Rows[0]["Vocational_stream"]) != "False")
                    {
                        Vocationalspan.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        Vocationalspan.InnerHtml = ":  No";
                    }
                    caddressline1_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_addressC"]);
                    string address = Convert.ToString(ds.Tables[0].Rows[0]["Streetc"]);
                    if (ds.Tables[0].Rows[0]["Streetc"].ToString().Trim() != "")
                    {
                        string[] split = address.Split('/');
                        if (split.Length > 1)
                        {
                            if (Convert.ToString(split[0]).Trim() != "")
                            {
                                Addressline2_span.InnerHtml = ":  " + Convert.ToString(split[0]);
                            }
                            else
                            {
                                Addressline2_span.InnerHtml = ":  -";
                            }
                            if (Convert.ToString(split[1]).Trim() != "")
                            {
                                Addressline3_span.InnerHtml = ":  " + Convert.ToString(split[1]);
                            }
                            else
                            {
                                Addressline3_span.InnerHtml = ":  -";
                            }
                        }
                        else
                        {
                            Addressline2_span.InnerHtml = ":  " + Convert.ToString(split[0]);
                        }
                    }
                    else
                    {
                        Addressline2_span.InnerHtml = ":  -";
                        Addressline3_span.InnerHtml = ":  -";
                    }
                    if (ds.Tables[0].Rows[0]["Cityc"].ToString().Trim() != "")
                    {
                        city_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["Cityc"]);
                    }
                    else
                    {
                        city_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_statec"].ToString().Trim() != "")
                    {
                        string state = subjectcode(ds.Tables[0].Rows[0]["parent_statec"].ToString());
                        state_span.InnerHtml = ":  " + Convert.ToString(state);
                    }
                    else
                    {
                        state_span.InnerHtml = ":  -";
                    }
                    if (ds.Tables[0].Rows[0]["Countryc"].ToString().Trim() != "")
                    {
                        string country = subjectcode(ds.Tables[0].Rows[0]["Countryc"].ToString());
                        Country_span.InnerHtml = ":  " + Convert.ToString(country);
                    }
                    else
                    {
                        Country_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_pincodec"].ToString().Trim() != "")
                    {
                        Postelcode_Span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_pincodec"]);
                    }
                    else
                    {
                        Postelcode_Span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["Student_Mobile"].ToString().Trim() != "")
                    {
                        Mobilenumber_Span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["Student_Mobile"]);
                    }
                    else
                    {
                        Mobilenumber_Span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["alter_mobileno"].ToString().Trim() != "")
                    {
                        Alternatephone_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["alter_mobileno"]);
                    }
                    else
                    {
                        Alternatephone_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["StuPer_Id"].ToString().Trim() != "")
                    {
                        emailid_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["StuPer_Id"]);
                    }
                    else
                    {
                        emailid_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_phnoc"].ToString().Trim() != "")
                    {
                        std_ist_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_phnoc"]);
                    }
                    else
                    {
                        std_ist_span.InnerHtml = "-";
                    }
                    // permnant
                    paddressline1_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_addressP"]);
                    if (ds.Tables[0].Rows[0]["Streetp"].ToString().Trim() != "")
                    {
                        string streat = Convert.ToString(ds.Tables[0].Rows[0]["Streetp"]);
                        if (streat.Trim() != "")
                        {
                            string[] splitstreat = streat.Split('/');
                            if (splitstreat.Length > 1)
                            {
                                if (Convert.ToString(splitstreat[0]).Trim() != "")
                                {
                                    paddressline2_span.InnerHtml = ":  " + Convert.ToString(splitstreat[0]);
                                }
                                else
                                {
                                    paddressline2_span.InnerHtml = ":  -";
                                }
                                if (Convert.ToString(splitstreat[0]).Trim() != "")
                                {
                                    paddressline3_span.InnerHtml = ":  " + Convert.ToString(splitstreat[1]);
                                }
                                else
                                {
                                    paddressline3_span.InnerHtml = ":  -";
                                }
                            }
                            else
                            {
                                paddressline2_span.InnerHtml = ":  " + Convert.ToString(splitstreat[0]);
                            }
                        }
                        paddressline2_span.InnerHtml = ":  -";
                        paddressline3_span.InnerHtml = ":  -";
                    }
                    else
                    {
                        paddressline2_span.InnerHtml = ":  -";
                        paddressline3_span.InnerHtml = ":  -";
                    }
                    if (ds.Tables[0].Rows[0]["Cityp"].ToString().Trim() != "")
                    {
                        pcity_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["Cityp"]);
                    }
                    else
                    {
                        pcity_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_statep"].ToString().Trim() != "")
                    {
                        string state = subjectcode(ds.Tables[0].Rows[0]["parent_statep"].ToString());
                        pstate_span.InnerHtml = ":  " + Convert.ToString(state);
                    }
                    else
                    {
                        pstate_span.InnerHtml = ":  -";
                    }
                    if (ds.Tables[0].Rows[0]["Countryp"].ToString().Trim() != "")
                    {
                        string country = subjectcode(ds.Tables[0].Rows[0]["Countryp"].ToString());
                        pcountry_span.InnerHtml = ":  " + Convert.ToString(country);
                    }
                    else
                    {
                        pcountry_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_pincodep"].ToString().Trim() != "")
                    {
                        ppostelcode_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_pincodep"]);
                    }
                    else
                    {
                        ppostelcode_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_phnop"].ToString().Trim() != "")
                    {
                        pstdisd_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_phnop"]);
                    }
                    else
                    {
                        pstdisd_span.InnerHtml = "-";
                    }
                }
                if (ds.Tables[1].Rows.Count > 0)
                {
                    if (ddledu.SelectedItem.Text == "UG")
                    {
                        ugtotaldiv.Visible = true;
                        pgtotaldiv.Visible = false;
                        string courseentronumber = Convert.ToString(ds.Tables[1].Rows[0]["course_entno"]);
                        string coursecode = Convert.ToString(ds.Tables[1].Rows[0]["course_code"]);
                        string university_code = Convert.ToString(ds.Tables[1].Rows[0]["university_code"]);
                        string institutename = Convert.ToString(ds.Tables[1].Rows[0]["Institute_name"]);
                        string percentage = Convert.ToString(ds.Tables[1].Rows[0]["percentage"]);
                        string institueaddress = Convert.ToString(ds.Tables[1].Rows[0]["instaddress"]);
                        string medium = Convert.ToString(ds.Tables[1].Rows[0]["medium"]);
                        string part1language = Convert.ToString(ds.Tables[1].Rows[0]["Part1Language"]);
                        string part2language = Convert.ToString(ds.Tables[1].Rows[0]["Part2Language"]);
                        string isgrade = Convert.ToString(ds.Tables[1].Rows[0]["isgrade"]);
                        string university_state = Convert.ToString(ds.Tables[1].Rows[0]["uni_state"]);
                        // string part1language = Convert.ToString(ds.Tables[1].Rows[0]["Institute_name"]);
                        if (coursecode.Trim() != "")
                        {
                            string course1 = subjectcode(coursecode);
                            qualifyingexam_span.InnerHtml = ":  " + Convert.ToString(course1);
                        }
                        else
                        {
                            qualifyingexam_span.InnerHtml = ":  -";
                        }
                        if (institutename.Trim() != "")
                        {
                            Nameofschool_span.InnerHtml = ":  " + Convert.ToString(institutename);
                        }
                        else
                        {
                            Nameofschool_span.InnerHtml = "";
                        }
                        if (institueaddress.Trim() != "")
                        {
                            locationofschool_Span.InnerHtml = ":  " + Convert.ToString(institueaddress);
                        }
                        else
                        {
                            locationofschool_Span.InnerHtml = "";
                        }
                        if (medium.Trim() != "")
                        {
                            string m = subjectcode(medium);
                            mediumofstudy_span.InnerHtml = ":  " + Convert.ToString(m);
                        }
                        else
                        {
                            mediumofstudy_span.InnerHtml = ":  -";
                        }
                        if (university_code.Trim() != "")
                        {
                            string univ = subjectcode(university_code);
                            qualifyingboard_span.InnerHtml = ":  " + Convert.ToString(univ);
                        }
                        else
                        {
                            qualifyingboard_span.InnerHtml = ":  -";
                        }
                        if (isgrade.Trim() != "")
                        {
                            if (isgrade == "True")
                            {
                                marksgrade_span.InnerHtml = ":  Grade";
                            }
                            else
                            {
                                marksgrade_span.InnerHtml = ":  Marks";
                            }
                        }
                        string markquery = "select psubjectno,registerno,acual_marks,max_marks,noofattempt,pass_month,pass_year,semyear ,grade from perv_marks_history  where course_entno ='" + courseentronumber + "'";
                        ds.Clear();
                        ds = dt.select_method_wo_parameter(markquery, "Text");
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            DataTable data = new DataTable();
                            DataRow dr = null;
                            Hashtable hash = new Hashtable();
                            data.Columns.Add("Language", typeof(string));
                            data.Columns.Add("Subject", typeof(string));
                            data.Columns.Add("Marks Obtained", typeof(string));
                            data.Columns.Add("Month", typeof(string));
                            data.Columns.Add("Year", typeof(string));
                            data.Columns.Add("Register No / Roll No", typeof(string));
                            data.Columns.Add("No of Attempts", typeof(string));
                            data.Columns.Add("Maximum Marks", typeof(string));
                            hash.Add(0, "Language1");
                            hash.Add(1, "Language2");
                            hash.Add(2, " Subject1");
                            hash.Add(3, " Subject2");
                            hash.Add(4, " Subject3");
                            hash.Add(5, " Subject4");
                            hash.Add(6, " Subject5");
                            hash.Add(7, " Subject6");
                            hash.Add(8, " Subject7");
                            hash.Add(9, " Subject8");
                            hash.Add(10, " Subject9");
                            hash.Add(11, " Subject10");
                            hash.Add(12, " Subject11");
                            int totalmark = 0;
                            int maxtotal = 0;
                            for (int mark = 0; mark < ds.Tables[0].Rows.Count; mark++)
                            {
                                string subjectno = Convert.ToString(ds.Tables[0].Rows[mark]["psubjectno"]);
                                string actualmark = "";
                                if (isgrade == "True")
                                {
                                    actualmark = Convert.ToString(ds.Tables[0].Rows[mark]["grade"]);
                                }
                                else
                                {
                                    actualmark = Convert.ToString(ds.Tables[0].Rows[mark]["acual_marks"]);
                                }
                                string month = Convert.ToString(ds.Tables[0].Rows[mark]["pass_month"]);
                                string year = Convert.ToString(ds.Tables[0].Rows[mark]["pass_year"]);
                                string regno = Convert.ToString(ds.Tables[0].Rows[mark]["registerno"]);
                                string noofattenm = Convert.ToString(ds.Tables[0].Rows[mark]["noofattempt"]);
                                string maxmark = Convert.ToString(ds.Tables[0].Rows[mark]["max_marks"]);
                                dr = data.NewRow();
                                string lang = Convert.ToString(hash[mark]);
                                dr[0] = Convert.ToString(lang);
                                string sub = subjectcode(subjectno);
                                dr[1] = Convert.ToString(sub);
                                dr[2] = Convert.ToString(actualmark);
                                dr[3] = Convert.ToString(month);
                                dr[4] = Convert.ToString(year);
                                dr[5] = Convert.ToString(regno);
                                dr[6] = Convert.ToString(noofattenm);
                                dr[7] = Convert.ToString(maxmark);
                                data.Rows.Add(dr);
                                if (isgrade != "True")
                                {
                                    totalmark = totalmark + Convert.ToInt32(actualmark);
                                    maxtotal = maxtotal + Convert.ToInt32(maxmark);
                                }
                            }
                            if (isgrade != "True")
                            {
                                total_marks_secured.InnerHtml = ":  " + Convert.ToString(totalmark);
                                maximum_marks.InnerHtml = ":  " + Convert.ToString(maxtotal);
                                percentage_span.InnerHtml = ":  " + percentage;
                            }
                            VerificationGridug.DataSource = data;
                            VerificationGridug.DataBind();
                            if (VerificationGridug.Rows.Count > 0)
                            {
                                for (int v = 0; v < VerificationGridug.Rows.Count; v++)
                                {
                                    VerificationGridug.Rows[v].Cells[2].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[3].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[4].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[5].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[6].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[7].HorizontalAlign = HorizontalAlign.Center;
                                }
                            }
                        }
                    }
                    else if (ddledu.SelectedItem.Text == "PG")
                    {
                        ugtotaldiv.Visible = false;
                        pgtotaldiv.Visible = true;
                        string courseentronumber = Convert.ToString(ds.Tables[1].Rows[0]["course_entno"]);
                        string coursecode = Convert.ToString(ds.Tables[1].Rows[0]["course_code"]);
                        string university_code = Convert.ToString(ds.Tables[1].Rows[0]["university_code"]);
                        string institutename = Convert.ToString(ds.Tables[1].Rows[0]["Institute_name"]);
                        string percentage = Convert.ToString(ds.Tables[1].Rows[0]["percentage"]);
                        string institueaddress = Convert.ToString(ds.Tables[1].Rows[0]["instaddress"]);
                        string medium = Convert.ToString(ds.Tables[1].Rows[0]["medium"]);
                        string part1language = Convert.ToString(ds.Tables[1].Rows[0]["Part1Language"]);
                        string part2language = Convert.ToString(ds.Tables[1].Rows[0]["Part2Language"]);
                        string isgrade = Convert.ToString(ds.Tables[1].Rows[0]["isgrade"]);
                        string university_state = Convert.ToString(ds.Tables[1].Rows[0]["uni_state"]);
                        string typeofsubject = Convert.ToString(ds.Tables[1].Rows[0]["type_major"]);
                        string typeofsemester = Convert.ToString(ds.Tables[1].Rows[0]["type_semester"]);
                        string regno = Convert.ToString(ds.Tables[1].Rows[0]["registration_no"]);
                        string major = Convert.ToString(ds.Tables[1].Rows[0]["branch_code"]);
                        string majorpercentage = Convert.ToString(ds.Tables[1].Rows[0]["major_percent"]);
                        string majorallidepercentage = Convert.ToString(ds.Tables[1].Rows[0]["majorallied_percent"]);
                        string Tancet = Convert.ToString(ds.Tables[1].Rows[0]["tancet_mark"]);
                        string Tancetyear = Convert.ToString(ds.Tables[1].Rows[0]["tancetmark_year"]);
                        percentagemajorspan.InnerHtml = ":  " + Convert.ToString(percentage);
                        majorsubjectspan.InnerHtml = ":  " + Convert.ToString(majorpercentage);
                        alliedmajorspan.InnerHtml = ":  " + Convert.ToString(majorallidepercentage);
                        if (coursecode.Trim() != "")
                        {
                            string course1 = subjectcode(coursecode);
                            ugqualifyingexam_span.InnerHtml = ":  " + Convert.ToString(course1);
                        }
                        else
                        {
                            ugqualifyingexam_span.InnerHtml = ":  -";
                        }
                        if (institutename.Trim() != "")
                        {
                            nameofcollege_Sapn.InnerHtml = ":  " + Convert.ToString(institutename);
                        }
                        else
                        {
                            nameofcollege_Sapn.InnerHtml = "";
                        }
                        //17.06.16
                        DataView dv = new DataView();
                        ds.Tables[2].DefaultView.RowFilter = "textcode='" + university_code + "'";
                        dv = ds.Tables[2].DefaultView;
                        if (dv.Count > 0)
                        {
                            if (Convert.ToString(dv[0][0]).Trim() != "")
                            {
                                nameofuniver_city.InnerHtml = ":  " + Convert.ToString((dv[0][0]));
                            }
                            else
                            {
                                nameofuniver_city.InnerHtml = "";
                            }
                        }
                        if (institueaddress.Trim() != "")
                        {
                            locationofcollege_sapn.InnerHtml = ":  " + Convert.ToString(institueaddress);
                        }
                        else
                        {
                            locationofcollege_sapn.InnerHtml = "";
                        }
                        if (major.Trim() != "")
                        {
                            string major1 = subjectcode(major);
                            major_span.InnerHtml = ":  " + Convert.ToString(major1);
                        }
                        else
                        {
                            major_span.InnerHtml = "";
                        }
                        if (typeofsubject.Trim() != "")
                        {
                            if (typeofsubject == "1")
                            {
                                typeofsubject = "Single";
                            }
                            else if (typeofsubject == "2")
                            {
                                typeofsubject = "Double";
                            }
                            else if (typeofsubject == "3")
                            {
                                typeofsubject = "Triple";
                            }
                            typeofmajor_span.InnerHtml = ":  " + Convert.ToString(typeofsubject);
                        }
                        if (typeofsemester.Trim() != "")
                        {
                            if (typeofsemester == "True")
                            {
                                typeofsemester = "Semester";
                            }
                            else
                            {
                                typeofsemester = "Non Semester";
                            }
                            typeofsemester_span.InnerHtml = ":  " + Convert.ToString(typeofsemester);
                        }
                        if (medium.Trim() != "")
                        {
                            string lang = subjectcode(medium);
                            mediumofstudy_spanug.InnerHtml = ":  " + Convert.ToString(lang);
                        }
                        if (isgrade.Trim() != "")
                        {
                            if (isgrade == "True")
                            {
                                marksorgradeug_span.InnerHtml = ":  Grade";
                            }
                            else
                            {
                                marksorgradeug_span.InnerHtml = ":  Marks";
                            }
                        }
                        //if (isgrade.Trim() != "")
                        //{
                        //    marksorgradeug_span.InnerHtml = ":  " + Convert.ToString(isgrade);
                        //}
                        if (regno.Trim() != "")
                        {
                            reg_no_span.InnerHtml = ":  " + Convert.ToString(regno);
                        }
                        if (type == "MCA")
                        {
                            tnspan.Visible = true;
                            Tancetspan.Visible = true;
                            Tancetspan.InnerHtml = ": " + Convert.ToString(Tancet) + " - " + Convert.ToString(Tancetyear);
                        }
                        string pgquery = "select psubjectno,subject_typeno,acual_marks,max_marks,pass_month,pass_year,semyear ,grade from perv_marks_history where course_entno ='" + courseentronumber + "'";
                        ds.Clear();
                        ds = dt.select_method_wo_parameter(pgquery, "Text");
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            DataTable data = new DataTable();
                            DataRow dr = null;
                            Hashtable hash = new Hashtable();
                            data.Columns.Add("S.No", typeof(string));
                            //  data.Columns.Add("Sem/Year", typeof(string));
                            data.Columns.Add("Subject", typeof(string));
                            data.Columns.Add("Subject type", typeof(string));
                            data.Columns.Add("Marks", typeof(string));
                            data.Columns.Add("Month", typeof(string));
                            data.Columns.Add("Year", typeof(string));
                            data.Columns.Add("Maximum Marks", typeof(string));
                            int sno = 0;
                            for (int pg = 0; pg < ds.Tables[0].Rows.Count; pg++)
                            {
                                sno++;
                                string subjectno = Convert.ToString(ds.Tables[0].Rows[pg]["psubjectno"]);
                                string subjecttypeno = Convert.ToString(ds.Tables[0].Rows[pg]["subject_typeno"]);
                                string actualmark = "";
                                if (isgrade == "True")
                                {
                                    actualmark = Convert.ToString(ds.Tables[0].Rows[pg]["grade"]);
                                }
                                else
                                {
                                    actualmark = Convert.ToString(ds.Tables[0].Rows[pg]["acual_marks"]);
                                }
                                string month = Convert.ToString(ds.Tables[0].Rows[pg]["pass_month"]);
                                string year = Convert.ToString(ds.Tables[0].Rows[pg]["pass_year"]);
                                // string noofattenm = Convert.ToString(ds.Tables[0].Rows[pg]["noofattempt"]);
                                string maxmark = Convert.ToString(ds.Tables[0].Rows[pg]["max_marks"]);
                                dr = data.NewRow();
                                dr[0] = Convert.ToString(sno);
                                string subject = subjectcode(subjectno);
                                dr[1] = Convert.ToString(subject);
                                string typesub = subjectcode(subjecttypeno);
                                dr[2] = Convert.ToString(typesub);
                                dr[3] = Convert.ToString(actualmark);
                                dr[4] = Convert.ToString(month);
                                dr[5] = Convert.ToString(year);
                                dr[6] = Convert.ToString(maxmark);
                                data.Rows.Add(dr);
                            }
                            Verificationgridpg.DataSource = data;
                            Verificationgridpg.DataBind();
                            if (VerificationGridug.Rows.Count > 0)
                            {
                                for (int v = 0; v < Verificationgridpg.Rows.Count; v++)
                                {
                                    Verificationgridpg.Rows[v].Cells[3].HorizontalAlign = HorizontalAlign.Center;
                                    Verificationgridpg.Rows[v].Cells[4].HorizontalAlign = HorizontalAlign.Center;
                                    Verificationgridpg.Rows[v].Cells[5].HorizontalAlign = HorizontalAlign.Center;
                                    Verificationgridpg.Rows[v].Cells[6].HorizontalAlign = HorizontalAlign.Center;
                                }
                            }
                        }
                    }
                }
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    protected void btn_click(object sender, EventArgs e)
    {
        panel4.Visible = false;
        //    mdl_full_employee_details.Hide();
    }
    public void spreadFeeConfirmLoad()
    {
        try
        {
            lbltotalcount.Visible = false;
            spreadFeeConfirm.SaveChanges();
            if (ddledu.SelectedItem.Text == "PG")
            {
                spreadFeeConfirm.Sheets[0].RowCount = 0;
                spreadFeeConfirm.Sheets[0].ColumnCount = 5;
                spreadFeeConfirm.Sheets[0].RowHeader.Visible = false;
                spreadFeeConfirm.Sheets[0].AutoPostBack = false;
                spreadFeeConfirm.Height = 360;
                spreadFeeConfirm.Width = 930;
                spreadFeeConfirm.CommandBar.Visible = false;
                FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
                darkstyle.BackColor = Color.Brown;
                darkstyle.ForeColor = Color.White;
                spreadFeeConfirm.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
                Dictionary<int, int> dicsubcol = new Dictionary<int, int>();
                Dictionary<int, int> totalpercentage = new Dictionary<int, int>();
                FarPoint.Web.Spread.CheckBoxCellType chkcel1 = new FarPoint.Web.Spread.CheckBoxCellType();
                chkcel1.AutoPostBack = false;
                FarPoint.Web.Spread.TextCellType txt = new FarPoint.Web.Spread.TextCellType();
                FarPoint.Web.Spread.ButtonCellType but = new FarPoint.Web.Spread.ButtonCellType("MyCommand", FarPoint.Web.Spread.ButtonType.ImageButton, "~/images/view11.png");
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 1].Text = "student Name";
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 2].Text = "App No";
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Select Admit card";
                // spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 3].BackColor = Color.MistyRose;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 4].Text = "View";
                // spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 3].BackColor = Color.MistyRose;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
                spreadFeeConfirm.Sheets[0].Columns[2].Visible = false;
                spreadFeeConfirm.Sheets[0].Columns[1].Visible = false;
                spreadFeeConfirm.Sheets[0].Columns[0].Visible = true;
                spreadFeeConfirm.Sheets[0].Columns[0].Width = 30;
                int sno = 0;
                string[] frmdat = TextBox2.Text.Split(' ');
                string[] fdate = frmdat[0].Split('/');
                string fromdate = fdate[2].ToString() + "-" + fdate[1].ToString() + "-" + fdate[0].ToString();
                string[] trmdat = TextBox3.Text.Split(' ');
                string[] tdate = trmdat[0].Split('/');
                string tomdate = tdate[2].ToString() + "-" + tdate[1].ToString() + "-" + tdate[0].ToString();
                string com = "";
                if (txtbatch.Text != " " && ddldegree.SelectedItem.Text != "--Select--" && ddledu.SelectedItem.Text != "--Select--" && ddldept.SelectedItem.Text != "--Select--" && ddltype.SelectedItem.Text != "--Select--")
                {
                    if (DropDownList2.SelectedItem.Text == "Admitted")
                    {
                        com = "select s.usercode,s.criteria_Code,st.course_code,st.branch_code,st.tancet_mark,admit_confirm,p.psubjectno,mother_tongue,seattype,batch_year,parent_statep,p.acual_marks,p.max_marks,t.TextVal+'-'+ CAST(CAST(p.acual_marks AS int) AS char(20)) as mark,CONVERT(VARCHAR(2),DATEPART(DAY, a.dob))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.dob)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR, a.dob))as dob,CONVERT(VARCHAR(2),DATEPART(DAY, a.date_applied))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.date_applied)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR,a.date_applied))as date_applied,s.isview,d.Degree_Code,c.Edu_Level,a.app_no,a.app_formno,a.stud_name,a.sex,a.community,a.caste,a.religion,a.Streetp,a.Cityp,a.Districtp,a.parent_addressP,a.parent_pincodep,a.Student_Mobile,a.StuPer_Id,st.percentage,majorallied_percent from selectcriteria s,applyn a,Course c,Degree d,Stud_prev_details st,perv_marks_history p,textvaltable t where c.Course_Id=d.Course_Id and c.college_code=d.college_code and c.college_code=a.college_code and d.Degree_Code=a.degree_code and d.college_code=a.college_code and  a.app_no=s.app_no and a.degree_code=s.degree_code and a.college_code=s.college_code and  st.app_no=a.app_no and st.app_no=s.app_no and p.course_entno=st.course_entno and t.TextCode=p.psubjectno and   t.college_code=a.college_code  and t.college_code=c.college_code and  t.college_code=d.college_code and  batch_year='" + txtbatch.Text + "' and d.degree_code='" + ddldept.SelectedValue + "' and c.Course_Id='" + ddldegree.SelectedValue + "' and c.Edu_Level='" + ddledu.SelectedItem.Text + "' and s.isapprove='4'  and t.TextCriteria='subje'  and a.app_no not in (select app_no from Registration)   and a.app_no in (select distinct app_no from ft_challandet  where isnull(IsConfirmed,0)=0) ";
                    }
                    else if (DropDownList2.SelectedItem.Text == "Un Paid")
                    {
                        com = "select s.usercode,s.criteria_Code,st.course_code,st.branch_code,st.tancet_mark,admit_confirm,p.psubjectno,mother_tongue,seattype,batch_year,parent_statep,p.acual_marks,p.max_marks,t.TextVal+'-'+ CAST(CAST(p.acual_marks AS int) AS char(20)) as mark,CONVERT(VARCHAR(2),DATEPART(DAY, a.dob))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.dob)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR, a.dob))as dob,CONVERT(VARCHAR(2),DATEPART(DAY, a.date_applied))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.date_applied)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR,a.date_applied))as date_applied,s.isview,d.Degree_Code,c.Edu_Level,a.app_no,a.app_formno,a.stud_name,a.sex,a.community,a.caste,a.religion,a.Streetp,a.Cityp,a.Districtp,a.parent_addressP,a.parent_pincodep,a.Student_Mobile,a.StuPer_Id,st.percentage,majorallied_percent from selectcriteria s,applyn a,Course c,Degree d,Stud_prev_details st,perv_marks_history p,textvaltable t where c.Course_Id=d.Course_Id and c.college_code=d.college_code and c.college_code=a.college_code and d.Degree_Code=a.degree_code and d.college_code=a.college_code and  a.app_no=s.app_no and a.degree_code=s.degree_code and a.college_code=s.college_code and  st.app_no=a.app_no and st.app_no=s.app_no and p.course_entno=st.course_entno and t.TextCode=p.psubjectno and   t.college_code=a.college_code  and t.college_code=c.college_code and  t.college_code=d.college_code and  batch_year='" + txtbatch.Text + "' and d.degree_code='" + ddldept.SelectedValue + "' and c.Course_Id='" + ddldegree.SelectedValue + "' and c.Edu_Level='" + ddledu.SelectedItem.Text + "' and s.isapprove=5  and t.TextCriteria='subje'   and a.app_no in (select distinct app_no from ft_challandet  where isnull(IsConfirmed,0)=0) ";
                    }
                    else if (DropDownList2.SelectedItem.Text == "Fee Paid")
                    {
                        com = "select s.usercode,s.criteria_Code,st.course_code,st.branch_code,st.tancet_mark,admit_confirm,p.psubjectno,mother_tongue,seattype,batch_year,parent_statep,p.acual_marks,p.max_marks,t.TextVal+'-'+ CAST(CAST(p.acual_marks AS int) AS char(20)) as mark,CONVERT(VARCHAR(2),DATEPART(DAY, a.dob))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.dob)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR, a.dob))as dob,CONVERT(VARCHAR(2),DATEPART(DAY, a.date_applied))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.date_applied)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR,a.date_applied))as date_applied,s.isview,d.Degree_Code,c.Edu_Level,a.app_no,a.app_formno,a.stud_name,a.sex,a.community,a.caste,a.religion,a.Streetp,a.Cityp,a.Districtp,a.parent_addressP,a.parent_pincodep,a.Student_Mobile,a.StuPer_Id,st.percentage,majorallied_percent from selectcriteria s,applyn a,Course c,Degree d,Stud_prev_details st,perv_marks_history p,textvaltable t where c.Course_Id=d.Course_Id and c.college_code=d.college_code and c.college_code=a.college_code and d.Degree_Code=a.degree_code and d.college_code=a.college_code and  a.app_no=s.app_no and a.degree_code=s.degree_code and a.college_code=s.college_code and  st.app_no=a.app_no and st.app_no=s.app_no and p.course_entno=st.course_entno and t.TextCode=p.psubjectno and   t.college_code=a.college_code  and t.college_code=c.college_code and  t.college_code=d.college_code and  batch_year='" + txtbatch.Text + "' and d.degree_code='" + ddldept.SelectedValue + "' and c.Course_Id='" + ddldegree.SelectedValue + "' and c.Edu_Level='" + ddledu.SelectedItem.Text + "' and s.isapprove=4 and a.admission_status=1  and t.TextCriteria='subje'  ";
                        // and a.app_no in (select app_no from Registration)  and admit_confirm='1' 
                        btnconform.Visible = false;
                    }
                    if (ddltype.SelectedItem.Text != "All")
                    {
                        com = com + "and c.type='" + ddltype.SelectedItem.Text + "'";
                    }
                    //if (spsearch == 1)
                    //{
                    if (TextBox4.Text != "")
                    {
                        com = com + "and a.stud_name like'%" + TextBox4.Text + "'%";
                        // com1 = com1 + "and a.stud_name like'%" + TextBox4.Text + "'%";
                    }
                    if (TextBox5.Text != "")
                    {
                        com = com + "and a.Student_Mobile='" + TextBox5.Text + "'";
                    }
                    if (TextBox6.Text != "")
                    {
                        com = com + "and a.app_formno='" + TextBox6.Text + "'";
                    }
                    //}
                    //else
                    //{
                    com = com + " and s.select_date between '" + fromdate + "'  and '" + tomdate + "'";
                    //}
                    string admin = "";
                    //  string adm = "select * from admitcolumnset where textcriteria = 'relig' and user_code='" + user_code + "'";
                    string adm = "select column_name from admitcolumnset where (textcriteria ='community' or textcriteria ='relig') and setcolumn ='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    ds1 = dt.select_method_wo_parameter(adm, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                        {
                            if (admin == "")
                            {
                                admin = ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                            else
                            {
                                admin = admin + "," + ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                        }
                        if (admin.Trim() != "")
                        {
                            string TextValuenew = d2.GetFunction("select TextCode  from TextValTable where TextCriteria ='comm' and TextCriteria2 ='comm1' and TextVal ='Others'");
                            if (TextValuenew.Trim() != "" && TextValuenew.Trim() != "0")
                            {
                                admin = admin + "," + TextValuenew;
                            }
                        }
                        if (orderflage == true)
                        {
                            com = com + "and s.criteria_Code='" + textcode + "'";
                        }
                        else
                        {
                            com = com + "and ( a.religion in (" + admin + ") or a.community in (" + admin + "))";
                        }
                        //com = com + "and ( a.religion in (" + admin + ") or a.community in (" + admin + "))";
                    }
                    string admin1 = "";
                    // string adm1 = "select * from admitcolumnset where textcriteria = 'subjec' and user_code='" + user_code + "'";
                    string adm1 = "select * from admitcolumnset where textcriteria = 'subjec' and user_code='" + user_code + "' and setcolumn='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    ds1 = dt.select_method_wo_parameter(adm1, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                        {
                            if (admin1 == "")
                            {
                                admin1 = ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                            else
                            {
                                admin1 = admin1 + "," + ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                        }
                        if (ddledu.SelectedItem.Text == "UG")
                        {
                            com = com + "and p.psubjectno in (" + admin1 + ")";
                        }
                        if (ddledu.SelectedItem.Text == "PG")
                        {
                            com = com + "and st.branch_code in (" + admin1 + ")";
                        }
                    }
                    if (com.Trim() != "")
                    {
                        if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                        {
                            com = com + " order by percentage desc";
                            // com1 = com1 + " order by percentage desc";
                        }
                        if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                        {
                            if (DropDownList2.SelectedItem.Text != "Fee Paid")
                            {
                                com = com + " order by majorallied_percent desc";
                            }
                            else
                            {
                                com = com + " order by stud_name asc";
                            }
                            // com1 = com1 + " order by majorallied_percent desc";
                        }
                    }
                    ds = dt.select_method_wo_parameter(com, "text");
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        string colm = "";
                        string priority = "      select * from admitcolumnset where  textcriteria='column' and College_Code ='" + college_code + "' order by CONVERT(int, priority )";
                        ds1 = dt.select_method_wo_parameter(priority, "text");
                        if (ds1.Tables[0].Rows.Count > 0)
                        {
                            for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                            {
                                colm = ds1.Tables[0].Rows[i]["column_name"].ToString();
                                spreadFeeConfirm.Sheets[0].ColumnCount++;
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() != "User Name")
                                {
                                    spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text = ds1.Tables[0].Rows[i]["setcolumn"].ToString();
                                    //spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                                    spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                    spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                    spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Locked = true;
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].CellType = txt;
                                    spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                                }
                                else
                                {
                                    if (DropDownList2.SelectedItem.Text == "Admitted")
                                    {
                                        spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text = "Admitted By";
                                    }
                                    else if (DropDownList2.SelectedItem.Text == "Un Paid")
                                    {
                                        spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text = "Un Paid By";
                                    }
                                    else if (DropDownList2.SelectedItem.Text == "Un Paid")
                                    {
                                        spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text = "Fee Paid By";
                                    }
                                    //   spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                                    spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                    spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                    spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Locked = true;
                                    spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                                }
                                if (ddltype.SelectedItem.Text.ToString().ToUpper() != "MCA")
                                {
                                    if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "TANCET Mark")
                                    {
                                        spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Visible = false;
                                    }
                                }
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "Subject Percentage")
                                {
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                                if (spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text == "DOB")
                                {
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Width = 90;
                                }
                                if (spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text == "Student Name")
                                {
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text == "Address")
                                {
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text == "City")
                                {
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Width = 100;
                                }
                                if (spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text == "Email_Id")
                                {
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text == "Mobile No")
                                {
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Width = 100;
                                }
                                if (spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text == "Subject")
                                {
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Width = 180;
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Visible = false;
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].CellType = txt;
                                }
                            }
                            //spreadFeeConfirm.Sheets[0].ColumnCount++;
                            //spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text = "Reason";
                            ////  spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                            //spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                            //spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Bold = true;
                            //spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                            //spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Locked = true;
                            //if (DropDownList2.SelectedItem.Text == "Admitted")
                            //{
                            //    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Visible = false;
                            //}
                            //else
                            //{
                            //    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Visible = true;
                            //}
                            spreadFeeConfirm.Sheets[0].ColumnCount++;
                            spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text = "Fee Paid";
                            //  spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                            spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                            spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Bold = true;
                            spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                            spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                            //int c = 4;
                            //DataView dvv = new DataView();
                            //ds.Tables[0].DefaultView.RowFilter = "isview='0' ";
                            //dvv = ds.Tables[0].DefaultView;
                            //int cont = dvv.Count;
                            //if (dvv.Count > 0)
                            //{
                            //    DataView dvh = new DataView();
                            //    ds.Tables[0].DefaultView.RowFilter = "isview='0' and app_no='" + ds.Tables[0].Rows[0]["app_no"].ToString() + "'";
                            //    dvh = ds.Tables[0].DefaultView;
                            //    lblnew2.Visible = true;
                            //    lblnew2.Text = " " + (cont / dvh.Count) + " New";
                            //}
                            spreadFeeConfirm.Sheets[0].RowCount = 0;
                            ArrayList addroll = new ArrayList();
                            int sno_Value = 0;
                            for (int row = 0; row < ds.Tables[0].Rows.Count; row++)
                            {
                                string app_no = Convert.ToString(ds.Tables[0].Rows[row]["app_no"]);
                                if (!addroll.Contains(app_no))
                                {
                                    addroll.Add(app_no);
                                    sno_Value++;
                                    spreadFeeConfirm.Sheets[0].RowCount++;
                                    if (Convert.ToString(ds.Tables[0].Rows[row]["admit_confirm"]) == "True")
                                    {
                                        spreadFeeConfirm.Sheets[0].Rows[spreadFeeConfirm.Sheets[0].RowCount - 1].BackColor = Color.LightBlue;
                                        spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Locked = true;
                                        spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Value = 1;
                                    }
                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(sno_Value);
                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 0].Font.Name = "Times New Roman";
                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 1].Text = Convert.ToString(ds.Tables[0].Rows[row]["stud_name"]);
                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 1].Tag = Convert.ToString(ds.Tables[0].Rows[row]["criteria_Code"]);
                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 1].Font.Name = "Times New Roman";
                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(ds.Tables[0].Rows[row]["app_no"]);
                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(ds.Tables[0].Rows[row]["app_formno"]);
                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 2].Font.Name = "Times New Roman";
                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 3].CellType = chkcel1;
                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 3].Font.Name = "Times New Roman";
                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 4].CellType = but;
                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 4].Font.Name = "Times New Roman";
                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                                    int col = 5;
                                    for (int i = spreadFeeConfirm.Sheets[0].ColumnCount - 1; i <= spreadFeeConfirm.Sheets[0].ColumnCount - 1; i++)
                                    {
                                        for (int j = 0; j < spreadFeeConfirm.Sheets[0].RowCount; j++)
                                        {
                                            spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 1].CellType = chkcel1;
                                            spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                                        }
                                    }
                                    for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                                    {
                                        col++;
                                        string colmname = Convert.ToString(ds1.Tables[0].Rows[i]["column_name"]);
                                        if (colmname.Trim() != "course_code")
                                        {
                                            if (colmname.Trim() != "SubjectPercen")
                                            {
                                                if (colmname.Trim() != "TamilOrginFromAndaman" && colmname.Trim() != "IsExService" && colmname.Trim() != "isdisable" && colmname.Trim() != "first_graduate" && colmname.Trim() != "CampusReq" && colmname.Trim() != "ncccadet" && colmname.Trim() != "Vocational_stream")
                                                {
                                                    if (colmname.Trim() != "criteria_Code" && colmname.Trim() != "parent_statep" && colmname.Trim() != "mother_tongue" && colmname.Trim() != "parent_occu" && colmname.Trim() != "religion" && colmname.Trim() != "citizen" && colmname.Trim() != "community" && colmname.Trim() != "caste" && colmname.Trim() != "DistinctSport" && colmname.Trim() != "co_curricular" && colmname.Trim() != "medium" && colmname.Trim() != "university_code")
                                                    {
                                                        if (colmname.Trim() != "usercode")
                                                        {
                                                            if (colmname.Trim() != "sex")
                                                            {
                                                                if (colmname.Trim() == "TotalPercentage")
                                                                {
                                                                    if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                                                                    {
                                                                        colmname = "percentage";
                                                                    }
                                                                    if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                                                    {
                                                                        colmname = "majorallied_percent";
                                                                    }
                                                                }
                                                                if (colmname.Trim() == "app_formno")
                                                                {
                                                                    colmname = "app_formno";
                                                                }
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(ds.Tables[0].Rows[row][colmname]);
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                            }
                                                            else
                                                            {
                                                                string gendervalue = Convert.ToString(ds.Tables[0].Rows[row][colmname]);
                                                                if (gendervalue == "0")
                                                                {
                                                                    gendervalue = "Male";
                                                                }
                                                                else if (gendervalue == "1")
                                                                {
                                                                    gendervalue = "Female";
                                                                }
                                                                else if (gendervalue == "2")
                                                                {
                                                                    gendervalue = "Transgender";
                                                                }
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(gendervalue);
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            string usernem = dt.GetFunction("select USER_ID   from UserMaster where User_code='" + Convert.ToString(ds.Tables[0].Rows[row][colmname]) + "' and college_code ='" + Session["collegecode"] + "'");
                                                            spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                            spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                            spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                            spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        string textval = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(ds.Tables[0].Rows[row][colmname]) + "' and college_code ='" + Session["collegecode"] + "'");
                                                        if (textval == "0")
                                                        {
                                                            textval = "";
                                                        }
                                                        spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Text = textval;
                                                        spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                        spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                        spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                    }
                                                }
                                                else
                                                {
                                                    string test_Value = "";
                                                    if (Convert.ToString(ds.Tables[0].Rows[row][colmname]) == "False")
                                                    {
                                                        test_Value = "No";
                                                    }
                                                    else
                                                    {
                                                        test_Value = "Yes";
                                                    }
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(test_Value);
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                }
                                            }
                                        }
                                        else
                                        {
                                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                                            {
                                                string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(ds.Tables[0].Rows[row][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                            }
                                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                            {
                                                string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(ds.Tables[0].Rows[row][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                string dept = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(ds.Tables[0].Rows[row]["branch_code"]) + "' and (TextCriteria='branc') and college_code ='" + Session["collegecode"] + "'");
                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Text = usernem + " " + dept;
                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                            }
                                        }
                                    }
                                }
                            }
                            spreadFeeConfirm.Sheets[0].PageSize = spreadFeeConfirm.Sheets[0].RowCount;
                            spreadFeeConfirm.Sheets[0].FrozenColumnCount = 7;
                            spreadFeeConfirm.Visible = true;
                            //btnconform.Visible = true;
                            ckbx.Visible = true;
                            btnapprove.Visible = false;
                            Button2.Visible = false;
                            Button3.Visible = false;
                            Button9.Visible = false;
                            lbltotalfeepaid.Visible = false;
                            // btnconform.Visible = true;
                            // btnunpaid.Visible = true;
                            if (DropDownList2.SelectedItem.Text == "Admitted")   //Added By Jeyaprakash(Gethu)
                            {
                                btnconform.Visible = true;
                            }
                            else
                            {
                                btnconform.Visible = false;
                            }
                            btnChallan.Visible = true;
                            btnadmitcard.Visible = true;
                            btnadmitprint.Visible = true;
                            btnleft.Visible = true;
                            if (DropDownList2.SelectedItem.Text == "Admitted")
                            {
                                lbltotalcount3.Text = " " + " Selected" + " " + ": " + spreadFeeConfirm.Sheets[0].RowCount;
                            }
                            else if (DropDownList2.SelectedItem.Text == "Un Paid")
                            {
                                lbltotalcount3.Text = " " + "Un Paid" + " " + ": " + spreadFeeConfirm.Sheets[0].RowCount;
                            }
                            else if (DropDownList2.SelectedItem.Text == "Fee Paid")
                            {
                                lbltotalcount3.Text = " " + " Fee Paid" + " " + ": " + spreadFeeConfirm.Sheets[0].RowCount;
                            }
                            lbltotalcount3.Visible = true;
                            if (spsearch == 1)
                            {
                                TabContainer1.ActiveTab = TabContainer1.Tabs[3];
                                spsearch = 0;
                                firsttable.Attributes.Add("Style", "border-bottom-style: solid; border-top-style: solid;border-left-style: solid; border-right-style: solid; background-color: #e3e3ef;border-width: 0.2px; border-color: indigo; border-radius: 5px; left: 16px; top: 0px;position: absolute; width: 950px;");
                                TextBox4.Text = "";
                                TextBox5.Text = "";
                                Label61.Visible = true;
                                DropDownList2.Visible = true;
                            }
                        }
                    }
                    else
                    {
                        if (spsearch == 1 && DropDownList2.SelectedItem.Text != "Un Paid")
                        {
                            DropDownList2.SelectedIndex = 1;
                            spreadFeeConfirmLoad();
                        }
                        else
                        {
                            lblmg1.Visible = true;
                            lblmg1.Text = "No Records Found";
                            lbltotalcount.Visible = false;
                            lbltotalcount1.Visible = false;
                            lbltotalcount2.Visible = false;
                            lbltotalcount3.Visible = false;
                            spreadFeeConfirm.Visible = false;
                            FpSpread3.Visible = false;
                            FpSpread2.Visible = false;
                            FpSpread1.Visible = false;
                            Label66.Visible = false;
                            //  lblnew2.Text = "0" + "New";
                            Label68.Visible = false;
                            Label67.Visible = false;
                            Label69.Visible = false;
                            btnapprove.Visible = false;
                            Button2.Visible = false;
                            Button3.Visible = false;
                            Button9.Visible = false;
                            lbltotalfeepaid.Visible = false;
                            lbltotalfeepaid_value.Visible = false;
                            ckbx.Visible = false;
                            btnconform.Visible = false;
                            btnunpaid.Visible = false;
                            btnadmitcard.Visible = false;
                            btnChallan.Visible = false;
                            btnadmitprint.Visible = false;
                            btnleft.Visible = false;
                        }
                        //  btnreject.Visible = false;
                    }
                }
                else
                {
                    lblmg1.Visible = true;
                    lblmg1.Text = "Please Select All Values";
                    spreadFeeConfirm.Visible = false;
                    Label66.Visible = false;
                    Label68.Visible = false;
                    Label67.Visible = false;
                    Label69.Visible = false;
                    btnapprove.Visible = false;
                    Button2.Visible = false;
                    Button3.Visible = false;
                    Button9.Visible = false;
                    lbltotalfeepaid.Visible = false;
                    lbltotalfeepaid_value.Visible = false;
                    ckbx.Visible = false;
                    btnconform.Visible = false;
                    btnunpaid.Visible = false;
                    btnChallan.Visible = false;
                    btnadmitcard.Visible = false;
                    btnadmitprint.Visible = false;
                    btnleft.Visible = false;
                    btnconform.Visible = false;
                    // btnreject.Visible = false;
                }
            }
            if (ddledu.SelectedItem.Text == "UG")
            {
                spreadFeeConfirm.Sheets[0].RowCount = 0;
                spreadFeeConfirm.Sheets[0].ColumnCount = 5;
                spreadFeeConfirm.Sheets[0].RowHeader.Visible = false;
                spreadFeeConfirm.Sheets[0].AutoPostBack = false;
                spreadFeeConfirm.Height = 360;
                spreadFeeConfirm.Width = 930;
                spreadFeeConfirm.CommandBar.Visible = false;
                FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
                darkstyle.BackColor = Color.Brown;
                darkstyle.ForeColor = Color.White;
                spreadFeeConfirm.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
                Dictionary<int, double> dicsubcol = new Dictionary<int, double>();
                Dictionary<int, int> totalpercentage = new Dictionary<int, int>();
                FarPoint.Web.Spread.CheckBoxCellType chkcel1 = new FarPoint.Web.Spread.CheckBoxCellType();
                chkcel1.AutoPostBack = false;
                FarPoint.Web.Spread.TextCellType txt = new FarPoint.Web.Spread.TextCellType();
                FarPoint.Web.Spread.ButtonCellType but = new FarPoint.Web.Spread.ButtonCellType("MyCommand", FarPoint.Web.Spread.ButtonType.ImageButton, "~/images/view11.png");
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 1].Text = "student Name";
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 2].Text = "App No";
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Select Admit card";
                // spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 3].BackColor = Color.MistyRose;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 4].Text = "View";
                // spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 3].BackColor = Color.MistyRose;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
                spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
                spreadFeeConfirm.Sheets[0].Columns[2].Visible = false;
                spreadFeeConfirm.Sheets[0].Columns[1].Visible = false;
                spreadFeeConfirm.Sheets[0].Columns[0].Visible = true;
                spreadFeeConfirm.Sheets[0].Columns[0].Width = 30;
                int sno = 0;
                string[] frmdat = TextBox2.Text.Split(' ');
                string[] fdate = frmdat[0].Split('/');
                string fromdate = fdate[2].ToString() + "-" + fdate[1].ToString() + "-" + fdate[0].ToString();
                string[] trmdat = TextBox3.Text.Split(' ');
                string[] tdate = trmdat[0].Split('/');
                string tomdate = tdate[2].ToString() + "-" + tdate[1].ToString() + "-" + tdate[0].ToString();
                string com = "";
                string com1 = "";
                if (txtbatch.Text != " " && ddldegree.SelectedItem.Text != "--Select--" && ddledu.SelectedItem.Text != "--Select--" && ddldept.SelectedItem.Text != "--Select--" && ddltype.SelectedItem.Text != "--Select--")
                {
                    if (DropDownList2.SelectedItem.Text == "Admitted")
                    {
                        // com = "select s.usercode,s.criteria_Code,st.course_code,st.branch_code,st.tancet_mark,admit_confirm,p.psubjectno,mother_tongue,seattype,batch_year,parent_statep,p.acual_marks,p.max_marks,t.TextVal+'-'+ CAST(CAST(p.acual_marks AS int) AS char(20)) as mark,CONVERT(VARCHAR(2),DATEPART(DAY, a.dob))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.dob)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR, a.dob))as dob,CONVERT(VARCHAR(2),DATEPART(DAY, a.date_applied))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.date_applied)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR,a.date_applied))as date_applied,s.isview,d.Degree_Code,c.Edu_Level,a.app_no,a.app_formno,a.stud_name,a.sex,a.community,a.caste,a.religion,a.Streetp,a.Cityp,a.Districtp,a.parent_addressP,a.parent_pincodep,a.Student_Mobile,a.StuPer_Id,st.percentage,majorallied_percent from selectcriteria s,applyn a,Course c,Degree d,Stud_prev_details st,perv_marks_history p,textvaltable t where c.Course_Id=d.Course_Id and c.college_code=d.college_code and c.college_code=a.college_code and d.Degree_Code=a.degree_code and d.college_code=a.college_code and  a.app_no=s.app_no and a.degree_code=s.degree_code and a.college_code=s.college_code and  st.app_no=a.app_no and st.app_no=s.app_no and p.course_entno=st.course_entno and t.TextCode=p.psubjectno and   t.college_code=a.college_code  and t.college_code=c.college_code and  t.college_code=d.college_code and  batch_year='" + txtbatch.Text + "' and d.degree_code='" + ddldept.SelectedValue + "' and c.Course_Id='" + ddldegree.SelectedValue + "' and c.Edu_Level='" + ddledu.SelectedItem.Text + "' and s.isapprove='4' and s.select_date between '" + fromdate + "'  and '" + tomdate + "' and t.TextCriteria='subje'";
                        com = "select s.usercode,s.criteria_Code,a.app_no,app_formno,CONVERT(varchar(10), date_applied,103) as date_applied,stud_name,sex,Relationship,parent_name ,CONVERT(varchar(10), dob,103) as dob ,parent_occu,mother_tongue,religion,citizen,community,caste,TamilOrginFromAndaman,IsExService,handy,visualhandy,first_graduate,CampusReq,DistinctSport,co_curricular,parent_addressC,Streetc,Cityc,parent_statec,Countryc,parent_pincodec,Student_Mobile,StuPer_Id,parent_phnoc,alter_mobileno,parent_addressP,Streetp,cityp,parent_statep,Countryp,parent_pincodep,parent_phnop,a.degree_code,batch_year,a.college_code,SubCaste,isdisable ,isdisabledisc,islearningdis,missionarydisc,MissionaryChild,seattype,current_semester,ncccadet,Institute_name,instaddress,medium,isgrade,Part1Language,Part2Language,percentage,university_code,uni_state,psubjectno,registerno,acual_marks,max_marks,pass_month,pass_year,noofattempt,ph.grade,sd.course_code,sd.branch_code,sd.tancet_mark,Vocational_stream,admit_confirm  from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code    and s.isapprove =4 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1  and a.app_no not in (select app_no from Registration)   and a.app_no in (select distinct app_no from ft_challandet  where isnull(IsConfirmed,0)=0) ";
                        if (ddldept.SelectedItem.Text == "English Literature" || ddldept.SelectedItem.Text == "English" || ddldept.SelectedItem.Text == "Tamil Literature")
                        {
                            com1 = " select distinct a.app_no,acual_marks from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code   and s.isapprove =4 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1  ";
                        }
                        else
                        {
                            com1 = " select distinct a.app_no from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code   and s.isapprove =4 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1  ";
                        }
                    }
                    else if (DropDownList2.SelectedItem.Text == "Un Paid")
                    {
                        // com = "select s.usercode,s.criteria_Code,st.course_code,st.branch_code,st.tancet_mark,admit_confirm,p.psubjectno,mother_tongue,seattype,batch_year,parent_statep,p.acual_marks,p.max_marks,t.TextVal+'-'+ CAST(CAST(p.acual_marks AS int) AS char(20)) as mark,CONVERT(VARCHAR(2),DATEPART(DAY, a.dob))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.dob)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR, a.dob))as dob,CONVERT(VARCHAR(2),DATEPART(DAY, a.date_applied))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.date_applied)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR,a.date_applied))as date_applied,s.isview,d.Degree_Code,c.Edu_Level,a.app_no,a.app_formno,a.stud_name,a.sex,a.community,a.caste,a.religion,a.Streetp,a.Cityp,a.Districtp,a.parent_addressP,a.parent_pincodep,a.Student_Mobile,a.StuPer_Id,st.percentage,majorallied_percent from selectcriteria s,applyn a,Course c,Degree d,Stud_prev_details st,perv_marks_history p,textvaltable t where c.Course_Id=d.Course_Id and c.college_code=d.college_code and c.college_code=a.college_code and d.Degree_Code=a.degree_code and d.college_code=a.college_code and  a.app_no=s.app_no and a.degree_code=s.degree_code and a.college_code=s.college_code and  st.app_no=a.app_no and st.app_no=s.app_no and p.course_entno=st.course_entno and t.TextCode=p.psubjectno and   t.college_code=a.college_code  and t.college_code=c.college_code and  t.college_code=d.college_code and  batch_year='" + txtbatch.Text + "' and d.degree_code='" + ddldept.SelectedValue + "' and c.Course_Id='" + ddldegree.SelectedValue + "' and c.Edu_Level='" + ddledu.SelectedItem.Text + "' and s.isapprove='3' and s.select_date between '" + fromdate + "'  and '" + tomdate + "' and t.TextCriteria='subje'";
                        com = "select s.usercode,s.criteria_Code,a.app_no,app_formno,CONVERT(varchar(10), date_applied,103) as date_applied,stud_name,sex,Relationship,parent_name ,CONVERT(varchar(10), dob,103) as dob ,parent_occu,mother_tongue,religion,citizen,community,caste,TamilOrginFromAndaman,IsExService,handy,visualhandy,first_graduate,CampusReq,DistinctSport,co_curricular,parent_addressC,Streetc,Cityc,parent_statec,Countryc,parent_pincodec,Student_Mobile,StuPer_Id,parent_phnoc,alter_mobileno,parent_addressP,Streetp,cityp,parent_statep,Countryp,parent_pincodep,parent_phnop,a.degree_code,batch_year,a.college_code,SubCaste,isdisable ,isdisabledisc,islearningdis,missionarydisc,MissionaryChild,seattype,current_semester,ncccadet,Institute_name,instaddress,medium,isgrade,Part1Language,Part2Language,percentage,university_code,uni_state,psubjectno,registerno,acual_marks,max_marks,pass_month,pass_year,noofattempt,ph.grade,sd.course_code,sd.branch_code,sd.tancet_mark,Vocational_stream,admit_confirm  from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code    and s.isapprove =5 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1   and a.app_no in (select distinct app_no from ft_challandet  where isnull(IsConfirmed,0)=0) ";
                        if (ddldept.SelectedItem.Text == "English Literature" || ddldept.SelectedItem.Text == "English" || ddldept.SelectedItem.Text == "Tamil Literature")
                        {
                            com1 = " select distinct a.app_no,acual_marks from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code   and s.isapprove =5 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1  ";
                        }
                        else
                        {
                            com1 = " select distinct a.app_no from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code   and s.isapprove =5 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1  ";
                        }
                    }
                    else if (DropDownList2.SelectedItem.Text == "Fee Paid")    //Query Changes By Jeyaprakash
                    {
                        btnconform.Visible = false;
                        com = " select s.usercode,s.criteria_Code,a.app_no,app_formno,CONVERT(varchar(10), date_applied,103) as date_applied,a.stud_name,sex,Relationship,parent_name  ,CONVERT(varchar(10), dob,103) as dob ,parent_occu,mother_tongue,religion,citizen,community,caste,TamilOrginFromAndaman,IsExService,handy,visualhandy ,first_graduate,CampusReq,DistinctSport,co_curricular,parent_addressC,Streetc,Cityc,parent_statec,Countryc,parent_pincodec,Student_Mobile,StuPer_Id ,parent_phnoc,alter_mobileno,parent_addressP,Streetp,cityp,parent_statep,Countryp,parent_pincodep,parent_phnop,a.degree_code,a.batch_year, a.college_code,SubCaste,isdisable ,isdisabledisc,islearningdis,missionarydisc,MissionaryChild,seattype,a.current_semester,ncccadet,Institute_name ,instaddress,medium,isgrade,Part1Language,Part2Language,percentage,university_code,uni_state,psubjectno,registerno,acual_marks,max_marks ,pass_month,pass_year,noofattempt,ph.grade,sd.course_code,sd.branch_code,sd.tancet_mark,Vocational_stream,admit_confirm   from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s  where  a.app_no =sd.app_no and a.degree_code =s.degree_code  and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no and a.admission_status ='1'    and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code   and s.isapprove =4  and a.degree_code ='" + ddldept.SelectedValue + "' and a.current_semester =1 ";
                        if (ddldept.SelectedItem.Text == "English Literature" || ddldept.SelectedItem.Text == "English" || ddldept.SelectedItem.Text == "Tamil Literature")
                        {
                            com1 = " select  distinct a.app_no,acual_marks,a.stud_name  from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and a.degree_code =s.degree_code  and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no  and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code   and s.isapprove =4 and admission_status ='1'and a.degree_code ='" + ddldept.SelectedValue + "' and a.current_semester =1";
                            // com1 = " select distinct a.app_no,acual_marks from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code   and s.isapprove =5 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1  ";
                        }
                        else
                        {
                            com1 = " select  distinct a.app_no,a.stud_name  from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and a.degree_code =s.degree_code  and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no  and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code   and s.isapprove =4 and admission_status ='1'and a.degree_code ='" + ddldept.SelectedValue + "' and a.current_semester =1";
                            //com1 = " select distinct a.app_no from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code   and s.isapprove =5 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1  ";
                        }
                    }
                    //if (spsearch == 1)
                    //{
                    if (TextBox4.Text != "")
                    {
                        com = com + "and a.stud_name like'%" + TextBox4.Text + "'%";
                        com1 = com1 + "and a.stud_name like'%" + TextBox4.Text + "'%";
                    }
                    if (TextBox5.Text != "")
                    {
                        com = com + "and a.Student_Mobile='" + TextBox5.Text + "'";
                        com1 = com1 + "and a.Student_Mobile='" + TextBox5.Text + "'";
                    }
                    if (TextBox6.Text != "")
                    {
                        com = com + "and a.app_formno='" + TextBox6.Text + "'";
                        com1 = com1 + "and a.app_formno='" + TextBox6.Text + "'";
                    }
                    //}
                    //else
                    //{
                    com = com + " and select_date between '" + fromdate + "' and '" + tomdate + "'";
                    com1 = com1 + " and select_date between '" + fromdate + "' and '" + tomdate + "'";
                    // }
                    string adminlang = "";
                    string adm3 = "select * from admitcolumnset where textcriteria = 'subjel' and setcolumn='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    ds1.Clear();
                    ds1 = dt.select_method_wo_parameter(adm3, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                        {
                            if (adminlang == "")
                            {
                                adminlang = "" + Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                            }
                            else
                            {
                                adminlang = adminlang + "'" + "," + "'" + Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                            }
                        }
                    }
                    if (adminlang.Trim() == "")
                    {
                        com = com + "  and psubjectno not in(sd.Part1Language,sd.Part2Language)";
                        com1 = com1 + "  and psubjectno not in(sd.Part1Language,sd.Part2Language)";
                    }
                    else
                    {
                        com = com + " and (sd.Part1Language in('" + adminlang + "') or sd.Part2Language in ('" + adminlang + "'))";
                        com1 = com1 + " and ( sd.Part1Language in('" + adminlang + "') or sd.Part2Language in ('" + adminlang + "') )";
                    }
                    string admin = "";
                    //  string adm = "select * from admitcolumnset where textcriteria = 'relig' and user_code='" + user_code + "'";
                    string adm = "select column_name from admitcolumnset where (textcriteria ='community' or textcriteria ='relig') and setcolumn ='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    ds1 = dt.select_method_wo_parameter(adm, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                        {
                            if (admin == "")
                            {
                                admin = ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                            else
                            {
                                admin = admin + "," + ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                        }
                        if (admin.Trim() != "")
                        {
                            string TextValuenew = d2.GetFunction("select TextCode  from TextValTable where TextCriteria ='comm' and TextCriteria2 ='comm1' and TextVal ='Others'");
                            if (TextValuenew.Trim() != "" && TextValuenew.Trim() != "0")
                            {
                                admin = admin + "," + TextValuenew;
                            }
                        }
                        if (orderflage == true)
                        {
                            com = com + "and s.criteria_Code='" + textcode + "'";
                            com1 = com1 + "and s.criteria_Code='" + textcode + "'";
                        }
                        else
                        {
                            com = com + "and ( a.religion in (" + admin + ") or a.community in (" + admin + "))";
                            com1 = com1 + "and ( a.religion in (" + admin + ") or a.community in (" + admin + "))";
                        }
                        //com = com + "and ( a.religion in (" + admin + ") or a.community in (" + admin + "))";
                    }
                    int dummycount = 0;
                    string admin1 = "";
                    // string adm1 = "select * from admitcolumnset where textcriteria = 'subjec' and user_code='" + user_code + "'";
                    string adm1 = "select * from admitcolumnset where textcriteria = 'subjec' and setcolumn='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    ds1.Clear();
                    ds1 = dt.select_method_wo_parameter(adm1, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                        {
                            if (admin1 == "")
                            {
                                dummycount++;
                                admin1 = Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                            }
                            else
                            {
                                dummycount++;
                                admin1 = admin1 + " , " + Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                            }
                        }
                    }
                    string admin2 = "";
                    string adm2 = "select * from admitcolumnset where textcriteria = 'subjea' and setcolumn='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    ds1.Clear();
                    ds1 = dt.select_method_wo_parameter(adm2, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                        {
                            if (admin2 == "")
                            {
                                admin2 = Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                            }
                            else
                            {
                                admin2 = admin2 + "," + Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                            }
                        }
                    }
                    if (adminlang.Trim() != "")
                    {
                        if (ddldept.SelectedItem.Text == "Tamil Literature")
                        {
                            if (DropDownList2.SelectedItem.Text == "Fee Paid")
                            {
                                com = com + "and (Part2Language=psubjectno) order by a.stud_name asc";
                                com1 = com1 + "and (Part2Language=psubjectno) order by a.stud_name asc";
                            }
                            else
                            {
                                com = com + " and (Part1Language=psubjectno) order by acual_marks desc";
                                com1 = com1 + " and (Part1Language=psubjectno) order by acual_marks desc";
                            }
                        }
                        else if (ddldept.SelectedItem.Text == "English Literature" || ddldept.SelectedItem.Text == "English")
                        {
                            if (DropDownList2.SelectedItem.Text == "Fee Paid")
                            {
                                com = com + " and (Part2Language=psubjectno) order by a.stud_name asc";
                                com1 = com1 + "and (Part2Language=psubjectno) order by a.stud_name asc";
                            }
                            else
                            {
                                com = com + " and (Part2Language=psubjectno) order by acual_marks desc";
                                com1 = com1 + " and (Part2Language=psubjectno) order by acual_marks desc";
                            }
                        }
                    }
                    if (adminlang.Trim() == "")
                    {
                        if (DropDownList2.SelectedItem.Text == "Fee Paid")
                        {
                            com = com + " order by a.stud_name asc";
                            com1 = com1 + " order by a.stud_name asc";
                        }
                    }
                    ds = dt.select_method_wo_parameter(com, "text");
                    ddummy.Clear();
                    ddummy = dt.select_method_wo_parameter(com1, "Text");
                    if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                    {
                        DataSet gradeset = new DataSet();
                        string gradequery = "select Frange,Trange,Mark_Grade  from Grade_Master where College_Code =" + college_code + " and batch_year =" + txtbatch.Text + "";
                        gradeset = dt.select_method_wo_parameter(gradequery, "Text");
                        if (adminlang == "")
                        {
                            DataView dvcheck = new DataView();
                            DataTable data = new DataTable();
                            DataView dummyview;
                            if (ddummy.Tables[0].Rows.Count > 0)
                            {
                                for (int du = 0; du < ddummy.Tables[0].Rows.Count; du++)
                                {
                                    int total = 0;
                                    int maxtotal = 0;
                                    string app_no = Convert.ToString(ddummy.Tables[0].Rows[du]["app_no"]);
                                    ds.Tables[0].DefaultView.RowFilter = "app_no='" + app_no + "'";
                                    dvcheck = ds.Tables[0].DefaultView;
                                    if (dvcheck.Count > 0)
                                    {
                                        if (admin1.Trim() != "")
                                        {
                                            data = dvcheck.ToTable();
                                            dummyview = new DataView(data);
                                            dummyview.RowFilter = "psubjectno in (" + admin1 + ")";
                                            if (dummyview.Count == dummycount)
                                            {
                                                if (admin2.Trim() != "")
                                                {
                                                    data = dvcheck.ToTable();
                                                    dummyview = new DataView(data);
                                                    dummyview.RowFilter = "psubjectno in (" + admin2 + ")";
                                                    if (dummyview.Count > 0)
                                                    {
                                                        for (int cn = 0; cn < dvcheck.Count; cn++)
                                                        {
                                                            if (Convert.ToString(dvcheck[cn]["isgrade"]) == "False")
                                                            {
                                                                total = total + Convert.ToInt32(dvcheck[cn]["acual_marks"].ToString());
                                                            }
                                                            else
                                                            {
                                                                if (gradeset.Tables[0].Rows.Count > 0)
                                                                {
                                                                    DataView gradview = new DataView();
                                                                    string grade = Convert.ToString(dvcheck[cn]["grade"]);
                                                                    gradeset.Tables[0].DefaultView.RowFilter = "Mark_Grade='" + grade + "'";
                                                                    gradview = gradeset.Tables[0].DefaultView;
                                                                    if (gradview.Count > 0)
                                                                    {
                                                                        string fromrange = Convert.ToString(gradview[0]["Frange"]);
                                                                        string torange = Convert.ToString(gradview[0]["Trange"]);
                                                                        if (fromrange.Trim() != "" && torange.Trim() != "")
                                                                        {
                                                                            double midpoint = (Convert.ToDouble(fromrange) + Convert.ToDouble(torange)) / Convert.ToDouble(2);
                                                                            total = total + Convert.ToInt32(midpoint);
                                                                        }
                                                                        else
                                                                        {
                                                                            total = total + 0;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        total = total + 0;
                                                                    }
                                                                }
                                                            }
                                                            maxtotal = maxtotal + Convert.ToInt32(dvcheck[cn]["max_marks"].ToString());
                                                        }
                                                        double mark = Convert.ToDouble(total) / Convert.ToDouble(maxtotal) * 100;
                                                        dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(mark, 2)));
                                                    }
                                                }
                                                else
                                                {
                                                    for (int cn = 0; cn < dvcheck.Count; cn++)
                                                    {
                                                        if (Convert.ToString(dvcheck[cn]["isgrade"]) == "False")
                                                        {
                                                            total = total + Convert.ToInt32(dvcheck[cn]["acual_marks"].ToString());
                                                        }
                                                        else
                                                        {
                                                            if (gradeset.Tables[0].Rows.Count > 0)
                                                            {
                                                                DataView gradview = new DataView();
                                                                string grade = Convert.ToString(dvcheck[cn]["grade"]);
                                                                gradeset.Tables[0].DefaultView.RowFilter = "Mark_Grade='" + grade + "'";
                                                                gradview = gradeset.Tables[0].DefaultView;
                                                                if (gradview.Count > 0)
                                                                {
                                                                    string fromrange = Convert.ToString(gradview[0]["Frange"]);
                                                                    string torange = Convert.ToString(gradview[0]["Trange"]);
                                                                    if (fromrange.Trim() != "" && torange.Trim() != "")
                                                                    {
                                                                        double midpoint = (Convert.ToDouble(fromrange) + Convert.ToDouble(torange)) / Convert.ToDouble(2);
                                                                        total = total + Convert.ToInt32(midpoint);
                                                                    }
                                                                    else
                                                                    {
                                                                        total = total + 0;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    total = total + 0;
                                                                }
                                                            }
                                                        }
                                                        maxtotal = maxtotal + Convert.ToInt32(dvcheck[cn]["max_marks"].ToString());
                                                    }
                                                    double mark1 = Convert.ToDouble(total) / Convert.ToDouble(maxtotal) * 100;
                                                    dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(mark1, 2)));
                                                }
                                            }
                                        }
                                        else
                                        {
                                            for (int cn = 0; cn < dvcheck.Count; cn++)
                                            {
                                                if (Convert.ToString(dvcheck[cn]["isgrade"]) == "False")
                                                {
                                                    total = total + Convert.ToInt32(dvcheck[cn]["acual_marks"].ToString());
                                                }
                                                else
                                                {
                                                    if (gradeset.Tables[0].Rows.Count > 0)
                                                    {
                                                        DataView gradview = new DataView();
                                                        string grade = Convert.ToString(dvcheck[cn]["grade"]);
                                                        gradeset.Tables[0].DefaultView.RowFilter = "Mark_Grade='" + grade + "'";
                                                        gradview = gradeset.Tables[0].DefaultView;
                                                        if (gradview.Count > 0)
                                                        {
                                                            string fromrange = Convert.ToString(gradview[0]["Frange"]);
                                                            string torange = Convert.ToString(gradview[0]["Trange"]);
                                                            if (fromrange.Trim() != "" && torange.Trim() != "")
                                                            {
                                                                double midpoint = (Convert.ToDouble(fromrange) + Convert.ToDouble(torange)) / Convert.ToDouble(2);
                                                                total = total + Convert.ToInt32(midpoint);
                                                            }
                                                            else
                                                            {
                                                                total = total + 0;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            total = total + 0;
                                                        }
                                                    }
                                                }
                                                maxtotal = maxtotal + Convert.ToInt32(dvcheck[cn]["max_marks"].ToString());
                                            }
                                            double mark2 = Convert.ToDouble(total) / Convert.ToDouble(maxtotal) * 100;
                                            dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(mark2, 2)));
                                        }
                                    }
                                }
                                if (DropDownList2.SelectedItem.Text != "Fee Paid")
                                {
                                    dicsubcol = dicsubcol.OrderByDescending(x => x.Value).ToDictionary(x => x.Key, x => x.Value);
                                }
                            }
                        }
                        string colm = "";
                        string priority = "      select * from admitcolumnset where  textcriteria='column' and College_Code ='" + college_code + "' order by CONVERT(int, priority )";
                        ds1 = dt.select_method_wo_parameter(priority, "text");
                        if (ds1.Tables[0].Rows.Count > 0)
                        {
                            for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                            {
                                colm = ds1.Tables[0].Rows[i]["column_name"].ToString();
                                spreadFeeConfirm.Sheets[0].ColumnCount++;
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() != "User Name")
                                {
                                    spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text = ds1.Tables[0].Rows[i]["setcolumn"].ToString();
                                    //spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                                    spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                    spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                    spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Locked = true;
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].CellType = txt;
                                    spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                                }
                                else
                                {
                                    if (DropDownList2.SelectedItem.Text == "Admitted")
                                    {
                                        spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text = "Admitted By";
                                    }
                                    else if (DropDownList2.SelectedItem.Text == "Un Paid")
                                    {
                                        spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text = "Un Paid By";
                                    }
                                    else if (DropDownList2.SelectedItem.Text == "Fee Paid")
                                    {
                                        spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text = "Fee Paid By";
                                    }
                                    //   spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                                    spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                    spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                    spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Locked = true;
                                    spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                                }
                                if (ddltype.SelectedItem.Text.ToString().ToUpper() != "MCA")
                                {
                                    if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "TANCET Mark")
                                    {
                                        spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Visible = false;
                                    }
                                }
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "Subject Percentage")
                                {
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                                if (spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text == "DOB")
                                {
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Width = 90;
                                }
                                if (spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text == "Student Name")
                                {
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text == "Address")
                                {
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text == "City")
                                {
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Width = 100;
                                }
                                if (spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text == "Email_Id")
                                {
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text == "Mobile No")
                                {
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Width = 100;
                                }
                                if (spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text == "Subject")
                                {
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Width = 180;
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Visible = false;
                                    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].CellType = txt;
                                }
                            }
                            //spreadFeeConfirm.Sheets[0].ColumnCount++;
                            //spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text = "Reason";
                            ////  spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                            //spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                            //spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Bold = true;
                            //spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                            //spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Locked = true;
                            //if (DropDownList2.SelectedItem.Text == "Admitted")
                            //{
                            //    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Visible = false;
                            //}
                            //else
                            //{
                            //    spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Visible = true;
                            //}
                            spreadFeeConfirm.Sheets[0].ColumnCount++;
                            spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Text = "Fee Paid";
                            //  spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                            spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                            spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Bold = true;
                            spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                            spreadFeeConfirm.Sheets[0].ColumnHeader.Cells[0, spreadFeeConfirm.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                            spreadFeeConfirm.Sheets[0].Columns[spreadFeeConfirm.Sheets[0].ColumnCount - 1].Visible = false;
                            spreadFeeConfirm.Sheets[0].RowCount = 0;
                            string txtval = Convert.ToString(txttop.Text);
                            if (txtval.Trim() == "")
                            {
                                txtval = Convert.ToString(dicsubcol.Count);
                            }
                            DataView dv = new DataView();
                            if (ddummy.Tables[0].Rows.Count > 0)
                            {
                                if (adminlang == "")
                                {
                                    if (dicsubcol.Count > 0)
                                    {
                                        int sno_Value = 0;
                                        foreach (var kvp in dicsubcol)
                                        {
                                            if (sno_Value < Convert.ToInt32(txtval))
                                            {
                                                string app_no = kvp.Key.ToString();
                                                string percentage = kvp.Value.ToString();
                                                ds.Tables[0].DefaultView.RowFilter = "app_no='" + app_no + "'";
                                                dv = ds.Tables[0].DefaultView;
                                                if (dv.Count > 0)
                                                {
                                                    sno_Value++;
                                                    spreadFeeConfirm.Sheets[0].RowCount++;
                                                    if (Convert.ToString(dv[0]["admit_confirm"]) == "True")
                                                    {
                                                        spreadFeeConfirm.Sheets[0].Rows[spreadFeeConfirm.Sheets[0].RowCount - 1].BackColor = Color.LightBlue;
                                                        spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Locked = true;
                                                        spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Value = 1;
                                                    }
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(sno_Value);
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 0].Font.Name = "Times New Roman";
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 1].Text = Convert.ToString(dv[0]["stud_name"]);
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 1].Tag = Convert.ToString(dv[0]["criteria_Code"]);
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 1].Font.Name = "Times New Roman";
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(dv[0]["app_no"]);
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(dv[0]["app_formno"]);
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 2].Font.Name = "Times New Roman";
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 3].CellType = chkcel1;
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 3].Font.Name = "Times New Roman";
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 4].CellType = but;
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 4].Font.Name = "Times New Roman";
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                                                    int col = 5;
                                                    for (int i = spreadFeeConfirm.Sheets[0].ColumnCount - 1; i <= spreadFeeConfirm.Sheets[0].ColumnCount - 1; i++)
                                                    {
                                                        for (int j = 0; j < spreadFeeConfirm.Sheets[0].RowCount; j++)
                                                        {
                                                            spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 1].CellType = chkcel1;
                                                            spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                                                        }
                                                    }
                                                    for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                                                    {
                                                        col++;
                                                        string colmname = Convert.ToString(ds1.Tables[0].Rows[i]["column_name"]);
                                                        if (colmname.Trim() != "course_code")
                                                        {
                                                            if (colmname.Trim() != "SubjectPercen")
                                                            {
                                                                if (colmname.Trim() != "TamilOrginFromAndaman" && colmname.Trim() != "IsExService" && colmname.Trim() != "isdisable" && colmname.Trim() != "first_graduate" && colmname.Trim() != "CampusReq" && colmname.Trim() != "ncccadet" && colmname.Trim() != "Vocational_stream")
                                                                {
                                                                    if (colmname.Trim() != "criteria_Code" && colmname.Trim() != "parent_statep" && colmname.Trim() != "mother_tongue" && colmname.Trim() != "parent_occu" && colmname.Trim() != "religion" && colmname.Trim() != "citizen" && colmname.Trim() != "community" && colmname.Trim() != "caste" && colmname.Trim() != "DistinctSport" && colmname.Trim() != "co_curricular" && colmname.Trim() != "medium" && colmname.Trim() != "university_code")
                                                                    {
                                                                        if (colmname.Trim() != "usercode")
                                                                        {
                                                                            if (colmname.Trim() != "sex")
                                                                            {
                                                                                if (colmname.Trim() != "TotalPercentage")
                                                                                {
                                                                                    if (colmname.Trim() == "app_formno")
                                                                                    {
                                                                                        colmname = "app_formno";
                                                                                    }
                                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(dv[0][colmname]);
                                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                                }
                                                                                else
                                                                                {
                                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(percentage);
                                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Center;
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                string gendervalue = Convert.ToString(dv[0][colmname]);
                                                                                if (gendervalue == "0")
                                                                                {
                                                                                    gendervalue = "Male";
                                                                                }
                                                                                else if (gendervalue == "1")
                                                                                {
                                                                                    gendervalue = "Female";
                                                                                }
                                                                                else if (gendervalue == "2")
                                                                                {
                                                                                    gendervalue = "Transgender";
                                                                                }
                                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(gendervalue);
                                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            string usernem = dt.GetFunction("select USER_ID   from UserMaster where User_code='" + Convert.ToString(dv[0][colmname]) + "' and college_code ='" + Session["collegecode"] + "'");
                                                                            spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                                            spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                            spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                            spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        string textval = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and college_code ='" + Session["collegecode"] + "'");
                                                                        if (textval == "0")
                                                                        {
                                                                            textval = "";
                                                                        }
                                                                        spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Text = textval;
                                                                        spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                        spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                        spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    string test_Value = "";
                                                                    if (Convert.ToString(dv[0][colmname]) == "False")
                                                                    {
                                                                        test_Value = "No";
                                                                    }
                                                                    else
                                                                    {
                                                                        test_Value = "Yes";
                                                                    }
                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(test_Value);
                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                                                            {
                                                                string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                            }
                                                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                                            {
                                                                string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                                string dept = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0]["branch_code"]) + "' and (TextCriteria='branc') and college_code ='" + Session["collegecode"] + "'");
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Text = usernem + " " + dept;
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                break;
                                            }
                                        }
                                        spreadFeeConfirm.Sheets[0].FrozenColumnCount = 7;
                                        spreadFeeConfirm.Sheets[0].PageSize = spreadFeeConfirm.Sheets[0].RowCount;
                                        spreadFeeConfirm.Visible = true;
                                        if (DropDownList2.SelectedItem.Text == "Admitted")   //Added By Jeyaprakash
                                        {
                                            btnconform.Visible = true;
                                        }
                                        else
                                        {
                                            btnconform.Visible = false;
                                        }
                                        ckbx.Visible = true;
                                        btnapprove.Visible = false;
                                        Button2.Visible = false;
                                        Button3.Visible = false;
                                        Button9.Visible = false;
                                        lbltotalfeepaid.Visible = false;
                                        //btnconform.Visible = true;
                                        //btnunpaid.Visible = true;
                                        btnChallan.Visible = true;
                                        btnadmitcard.Visible = true;
                                        btnadmitprint.Visible = true;
                                        btnleft.Visible = true;
                                        if (DropDownList2.SelectedItem.Text == "Admitted")
                                        {
                                            lbltotalcount3.Text = " " + " Selected" + " " + ": " + spreadFeeConfirm.Sheets[0].RowCount;
                                        }
                                        else if (DropDownList2.SelectedItem.Text == "Un Paid")
                                        {
                                            lbltotalcount3.Text = " " + "Un Paid" + " " + ": " + spreadFeeConfirm.Sheets[0].RowCount;
                                        }
                                        else if (DropDownList2.SelectedItem.Text == "Fee Paid")
                                        {
                                            lbltotalcount3.Text = " " + " Fee Paid" + " " + ": " + spreadFeeConfirm.Sheets[0].RowCount;
                                        }
                                        lbltotalcount3.Visible = true;
                                        if (spsearch == 1)
                                        {
                                            TabContainer1.ActiveTab = TabContainer1.Tabs[3];
                                            spsearch = 0;
                                            TextBox4.Text = "";
                                            TextBox5.Text = "";
                                            firsttable.Attributes.Add("Style", "border-bottom-style: solid; border-top-style: solid;border-left-style: solid; border-right-style: solid; background-color: #e3e3ef;border-width: 0.2px; border-color: indigo; border-radius: 5px; left: 16px; top: 0px;position: absolute; width: 950px;");
                                            Label61.Visible = true;
                                            DropDownList2.Visible = true;
                                        }
                                        //if (DropDownList2.SelectedItem.Text == "Admitted")
                                        //{
                                        //    com = "select s.usercode,s.criteria_Code,seattype,batch_year,r.Stud_Name,CONVERT(VARCHAR(2),DATEPART(DAY, a.date_applied))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.date_applied)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR,a.date_applied))as date_applied,s.isview,t.TextVal,r.App_No,r.Roll_No,r.Roll_Admit,r.Reg_No,a.dob,a.parent_addressP,a.Streetp,a.Cityp,a.Districtp,a.parent_pincodep,a.Student_Mobile,a.StuPer_Id,a.app_no,a.Degree_Code from Registration r,applyn a,selectcriteria s,textvaltable t where a.app_no=r.App_No and  a.degree_code=r.degree_code and a.college_code=r.college_code and  a.batch_year=r.Batch_Year and s.app_no=a.app_no and s.college_code=a.college_code and s.degree_code=a.degree_code  and  s.college_code=r.college_code and s.degree_code=r.degree_code and s.app_no=r.App_No   and  t.college_code=a.college_code and t.college_code=r.college_code and t.college_code=s.college_code    and t.TextCode=s.textcode and t.TextCriteria='adres' and r.Batch_Year='" + txtbatch.Text + "' and r.degree_code='" + ddldept.SelectedValue + "'  and s.isapprove='4' and r.Adm_Date between'" + fromdate + "'  and '" + tomdate + "'";
                                        //}
                                        //else
                                        //{
                                        //    com = "select CONVERT(VARCHAR(2),DATEPART(DAY, a.dob))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.dob)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR, a.dob))as dob,s.isview,t.TextVal,d.Degree_Code,c.Edu_Level,a.app_no,a.app_formno,a.stud_name,a.sex,a.community,a.caste,a.religion,s.criteria_Code,a.Streetp,a.Cityp,a.Districtp,seattype,batch_year,a.parent_addressP,a.parent_pincodep,a.Student_Mobile,a.StuPer_Id from selectcriteria s,applyn a,Course c,Degree d,textvaltable t where c.Course_Id=d.Course_Id and c.college_code=d.college_code and c.college_code=a.college_code and d.Degree_Code=a.degree_code and d.college_code=a.college_code and  a.app_no=s.app_no and a.degree_code=s.degree_code and a.college_code=s.college_code and a.college_code=t.college_code and s.college_code=t.college_code  and c.college_code=t.college_code and d.college_code=t.college_code and s.textcode=t.TextCode and t.TextCriteria='reres' and batch_year='" + txtbatch.Text + "' and d.degree_code='" + ddldept.SelectedValue + "' and c.Course_Id='" + ddldegree.SelectedValue + "' and c.Edu_Level='" + ddledu.SelectedItem.Text + "' and s.isapprove='3' and s.select_date between '" + fromdate + "'  and '" + tomdate + "' ";
                                        //}
                                        //ds = dt.select_method_wo_parameter(com, "text");
                                        //if (ds.Tables[0].Rows.Count > 0)
                                        //{
                                        //    DataView dat = new DataView();
                                        //    for (int j = 0; j < spreadFeeConfirm.Sheets[0].RowCount; j++)
                                        //    {
                                        //        string app_no = Convert.ToString(spreadFeeConfirm.Sheets[0].Cells[0, 2].Text);
                                        //        ds.Tables[0].DefaultView.RowFilter = "app_no=" + app_no + "";
                                        //        dat = ds.Tables[0].DefaultView;
                                        //        if (dat.Count > 0)
                                        //        {
                                        //            //spreadFeeConfirm.Sheets[0].SetColumnMerge(c - 1, FarPoint.Web.Spread.Model.MergePolicy.Always);
                                        //            spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 2].Text = dat[0]["TextVal"].ToString();
                                        //            spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 2].Font.Name = "Times New Roman";
                                        //            spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 2].Font.Size = FontUnit.Medium;
                                        //            spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Left;
                                        //            //spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                        //        }
                                        //        else
                                        //        {
                                        //            // spreadFeeConfirm.Sheets[0].SetColumnMerge(c - 1, FarPoint.Web.Spread.Model.MergePolicy.Always);
                                        //            spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 2].Text = "";
                                        //            spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 2].Font.Name = "Times New Roman";
                                        //            spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 2].Font.Size = FontUnit.Medium;
                                        //            spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Left;
                                        //            // spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                        //        }
                                        //    }
                                        //}
                                    }
                                }
                                else
                                {
                                    DataView dvcheck = new DataView();
                                    DataTable data = new DataTable();
                                    DataTable dnew;
                                    DataView dummyview;
                                    dicsubcol.Clear();
                                    if (ddummy.Tables[0].Rows.Count > 0)
                                    {
                                        for (int du = 0; du < ddummy.Tables[0].Rows.Count; du++)
                                        {
                                            string app_no = Convert.ToString(ddummy.Tables[0].Rows[du]["app_no"]);
                                            ds.Tables[0].DefaultView.RowFilter = "app_no='" + app_no + "'";
                                            dvcheck = ds.Tables[0].DefaultView;
                                            if (dvcheck.Count > 0)
                                            {
                                                //string acuualmark = Convert.ToString(dvcheck[0]["acual_marks"]);
                                                //string maxmark = Convert.ToString(dvcheck[0]["max_marks"]);
                                                //double finalvalue = Convert.ToDouble(acuualmark) / Convert.ToDouble(maxmark) * Convert.ToDouble(100);
                                                //dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(finalvalue, 2)));
                                                if (Convert.ToString(dvcheck[0]["isgrade"]) == "False")
                                                {
                                                    string acuualmark = Convert.ToString(dvcheck[0]["acual_marks"]);
                                                    string maxmark = Convert.ToString(dvcheck[0]["max_marks"]);
                                                    if (acuualmark.Trim() != "" && maxmark.Trim() != "")
                                                    {
                                                        double finalvalue = Convert.ToDouble(acuualmark) / Convert.ToDouble(maxmark) * Convert.ToDouble(100);
                                                        dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(finalvalue, 2)));
                                                    }
                                                }
                                                else
                                                {
                                                    dnew = dvcheck.ToTable();
                                                    if (gradeset.Tables[0].Rows.Count > 0)
                                                    {
                                                        DataView gradview = new DataView();
                                                        if (dnew.Rows.Count > 0)
                                                        {
                                                            for (int jk = 0; jk < dnew.Rows.Count; jk++)
                                                            {
                                                                string grade = Convert.ToString(dnew.Rows[jk]["grade"]);
                                                                string max = Convert.ToString(dnew.Rows[jk]["max_marks"]);
                                                                gradeset.Tables[0].DefaultView.RowFilter = "Mark_Grade='" + grade + "'";
                                                                gradview = gradeset.Tables[0].DefaultView;
                                                                if (gradview.Count > 0)
                                                                {
                                                                    string fromrange = Convert.ToString(gradview[0]["Frange"]);
                                                                    string torange = Convert.ToString(gradview[0]["Trange"]);
                                                                    if (fromrange.Trim() != "" && torange.Trim() != "")
                                                                    {
                                                                        double midpoint = (Convert.ToDouble(fromrange) + Convert.ToDouble(torange)) / Convert.ToDouble(2);
                                                                        double finalvalue = Convert.ToDouble(midpoint) / Convert.ToDouble(max) * Convert.ToDouble(100);
                                                                        dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(finalvalue, 2)));
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    if (dicsubcol.Count > 0)
                                    {
                                        if (DropDownList2.SelectedItem.Text != "Fee Paid")
                                        {
                                            dicsubcol = dicsubcol.OrderByDescending(x => x.Value).ToDictionary(x => x.Key, x => x.Value); ArrayList addroll = new ArrayList();
                                        }
                                        int sno_Value = 0;
                                        txtval = Convert.ToString(txttop.Text);
                                        if (txtval.Trim() == "")
                                        {
                                            txtval = Convert.ToString(dicsubcol.Count);
                                        }
                                        foreach (var kvp in dicsubcol)
                                        {
                                            if (sno_Value < Convert.ToInt32(txtval))
                                            {
                                                string app_no = kvp.Key.ToString();
                                                string percentage = kvp.Value.ToString();
                                                ds.Tables[0].DefaultView.RowFilter = "app_no='" + app_no + "'";
                                                dv = ds.Tables[0].DefaultView;
                                                if (dv.Count > 0)
                                                {
                                                    sno_Value++;
                                                    spreadFeeConfirm.Sheets[0].RowCount++;
                                                    if (Convert.ToString(dv[0]["admit_confirm"]) == "True")
                                                    {
                                                        spreadFeeConfirm.Sheets[0].Rows[spreadFeeConfirm.Sheets[0].RowCount - 1].BackColor = Color.LightBlue;
                                                        spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Locked = true;
                                                        spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Value = 1;
                                                    }
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(sno_Value);
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 0].Font.Name = "Times New Roman";
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 1].Text = Convert.ToString(dv[0]["stud_name"]);
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 1].Tag = Convert.ToString(dv[0]["criteria_Code"]);
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 1].Font.Name = "Times New Roman";
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(dv[0]["app_no"]);
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(dv[0]["app_formno"]);
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 2].Font.Name = "Times New Roman";
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 3].CellType = chkcel1;
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 3].Font.Name = "Times New Roman";
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 4].CellType = but;
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 4].Font.Name = "Times New Roman";
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                                                    int col = 5;
                                                    for (int i = spreadFeeConfirm.Sheets[0].ColumnCount - 1; i <= spreadFeeConfirm.Sheets[0].ColumnCount - 1; i++)
                                                    {
                                                        for (int j = 0; j < spreadFeeConfirm.Sheets[0].RowCount; j++)
                                                        {
                                                            spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 1].CellType = chkcel1;
                                                            spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                                                        }
                                                    }
                                                    for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                                                    {
                                                        col++;
                                                        string colmname = Convert.ToString(ds1.Tables[0].Rows[i]["column_name"]);
                                                        if (colmname.Trim() != "course_code")
                                                        {
                                                            if (colmname.Trim() != "SubjectPercen")
                                                            {
                                                                if (colmname.Trim() != "TamilOrginFromAndaman" && colmname.Trim() != "IsExService" && colmname.Trim() != "isdisable" && colmname.Trim() != "first_graduate" && colmname.Trim() != "CampusReq" && colmname.Trim() != "ncccadet" && colmname.Trim() != "Vocational_stream")
                                                                {
                                                                    if (colmname.Trim() != "criteria_Code" && colmname.Trim() != "parent_statep" && colmname.Trim() != "mother_tongue" && colmname.Trim() != "parent_occu" && colmname.Trim() != "religion" && colmname.Trim() != "citizen" && colmname.Trim() != "community" && colmname.Trim() != "caste" && colmname.Trim() != "DistinctSport" && colmname.Trim() != "co_curricular" && colmname.Trim() != "medium" && colmname.Trim() != "university_code")
                                                                    {
                                                                        if (colmname.Trim() != "usercode")
                                                                        {
                                                                            if (colmname.Trim() != "sex")
                                                                            {
                                                                                if (colmname.Trim() == "TotalPercentage")
                                                                                {
                                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(percentage);
                                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Center;
                                                                                }
                                                                                else
                                                                                {
                                                                                    if (colmname.Trim() == "app_formno")
                                                                                    {
                                                                                        colmname = "app_formno";
                                                                                    }
                                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(dv[0][colmname]);
                                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                string gendervalue = Convert.ToString(dv[0][colmname]);
                                                                                if (gendervalue == "0")
                                                                                {
                                                                                    gendervalue = "Male";
                                                                                }
                                                                                else if (gendervalue == "1")
                                                                                {
                                                                                    gendervalue = "Female";
                                                                                }
                                                                                else if (gendervalue == "2")
                                                                                {
                                                                                    gendervalue = "Transgender";
                                                                                }
                                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(gendervalue);
                                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            string usernem = dt.GetFunction("select USER_ID   from UserMaster where User_code='" + Convert.ToString(dv[0][colmname]) + "' and college_code ='" + Session["collegecode"] + "'");
                                                                            spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                                            spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                            spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                            spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        string textval = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and college_code ='" + Session["collegecode"] + "'");
                                                                        if (textval == "0")
                                                                        {
                                                                            textval = "";
                                                                        }
                                                                        spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Text = textval;
                                                                        spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                        spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                        spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    string test_Value = "";
                                                                    if (Convert.ToString(dv[0][colmname]) == "False")
                                                                    {
                                                                        test_Value = "No";
                                                                    }
                                                                    else
                                                                    {
                                                                        test_Value = "Yes";
                                                                    }
                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(test_Value);
                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                    spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                                                            {
                                                                string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                            }
                                                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                                            {
                                                                string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                                string dept = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0]["branch_code"]) + "' and (TextCriteria='branc') and college_code ='" + Session["collegecode"] + "'");
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Text = usernem + " " + dept;
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                spreadFeeConfirm.Sheets[0].Cells[spreadFeeConfirm.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                break;
                                            }
                                        }
                                        spreadFeeConfirm.Sheets[0].FrozenColumnCount = 7;
                                        spreadFeeConfirm.Sheets[0].PageSize = spreadFeeConfirm.Sheets[0].RowCount;
                                        spreadFeeConfirm.Visible = true;
                                        if (DropDownList2.SelectedItem.Text == "Admitted")   //Added By Jeyaprakash
                                        {
                                            btnconform.Visible = true;
                                        }
                                        else
                                        {
                                            btnconform.Visible = false;
                                        }
                                        ckbx.Visible = true;
                                        btnapprove.Visible = false;
                                        Button2.Visible = false;
                                        Button3.Visible = false;
                                        lbltotalfeepaid.Visible = false;
                                        // btnconform.Visible = true;
                                        // btnunpaid.Visible = true;
                                        btnChallan.Visible = true;
                                        btnadmitcard.Visible = true;
                                        btnadmitprint.Visible = true;
                                        btnleft.Visible = true;
                                        Button9.Visible = true;
                                        if (DropDownList2.SelectedItem.Text == "Admitted")
                                        {
                                            lbltotalcount3.Text = " " + " Selected" + " " + ": " + spreadFeeConfirm.Sheets[0].RowCount;
                                        }
                                        else if (DropDownList2.SelectedItem.Text == "Un Paid")
                                        {
                                            lbltotalcount3.Text = " " + "Un Paid" + " " + ": " + spreadFeeConfirm.Sheets[0].RowCount;
                                        }
                                        else if (DropDownList2.SelectedItem.Text == "Fee Paid")
                                        {
                                            lbltotalcount3.Text = " " + " Fee Paid" + " " + ": " + spreadFeeConfirm.Sheets[0].RowCount;
                                        }
                                        lbltotalcount3.Visible = true;
                                        if (spsearch == 1)
                                        {
                                            TabContainer1.ActiveTab = TabContainer1.Tabs[3];
                                            spsearch = 0;
                                            TextBox4.Text = "";
                                            TextBox5.Text = "";
                                            firsttable.Attributes.Add("Style", "border-bottom-style: solid; border-top-style: solid;border-left-style: solid; border-right-style: solid; background-color: #e3e3ef;border-width: 0.2px; border-color: indigo; border-radius: 5px; left: 16px; top: 0px;position: absolute; width: 950px;");
                                            Label61.Visible = true;
                                            DropDownList2.Visible = true;
                                        }
                                        //if (DropDownList2.SelectedItem.Text == "Admitted")
                                        //{
                                        //    com = "select s.usercode,s.criteria_Code,seattype,batch_year,r.Stud_Name,CONVERT(VARCHAR(2),DATEPART(DAY, a.date_applied))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.date_applied)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR,a.date_applied))as date_applied,s.isview,t.TextVal,r.App_No,r.Roll_No,r.Roll_Admit,r.Reg_No,a.dob,a.parent_addressP,a.Streetp,a.Cityp,a.Districtp,a.parent_pincodep,a.Student_Mobile,a.StuPer_Id,a.app_no,a.Degree_Code from Registration r,applyn a,selectcriteria s,textvaltable t where a.app_no=r.App_No and  a.degree_code=r.degree_code and a.college_code=r.college_code and  a.batch_year=r.Batch_Year and s.app_no=a.app_no and s.college_code=a.college_code and s.degree_code=a.degree_code  and  s.college_code=r.college_code and s.degree_code=r.degree_code and s.app_no=r.App_No   and  t.college_code=a.college_code and t.college_code=r.college_code and t.college_code=s.college_code    and t.TextCode=s.textcode and t.TextCriteria='adres' and r.Batch_Year='" + txtbatch.Text + "' and r.degree_code='" + ddldept.SelectedValue + "'  and s.isapprove='4' and r.Adm_Date between'" + fromdate + "'  and '" + tomdate + "'";
                                        //}
                                        //else
                                        //{
                                        //    com = "select CONVERT(VARCHAR(2),DATEPART(DAY, a.dob))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.dob)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR, a.dob))as dob,s.isview,t.TextVal,d.Degree_Code,c.Edu_Level,a.app_no,a.app_formno,a.stud_name,a.sex,a.community,a.caste,a.religion,s.criteria_Code,a.Streetp,a.Cityp,a.Districtp,seattype,batch_year,a.parent_addressP,a.parent_pincodep,a.Student_Mobile,a.StuPer_Id from selectcriteria s,applyn a,Course c,Degree d,textvaltable t where c.Course_Id=d.Course_Id and c.college_code=d.college_code and c.college_code=a.college_code and d.Degree_Code=a.degree_code and d.college_code=a.college_code and  a.app_no=s.app_no and a.degree_code=s.degree_code and a.college_code=s.college_code and a.college_code=t.college_code and s.college_code=t.college_code  and c.college_code=t.college_code and d.college_code=t.college_code and s.textcode=t.TextCode and t.TextCriteria='reres' and batch_year='" + txtbatch.Text + "' and d.degree_code='" + ddldept.SelectedValue + "' and c.Course_Id='" + ddldegree.SelectedValue + "' and c.Edu_Level='" + ddledu.SelectedItem.Text + "' and s.isapprove='3' and s.select_date between '" + fromdate + "'  and '" + tomdate + "' ";
                                        //}
                                        //ds = dt.select_method_wo_parameter(com, "text");
                                        //if (ds.Tables[0].Rows.Count > 0)
                                        //{
                                        //    DataView dat = new DataView();
                                        //    for (int j = 0; j < spreadFeeConfirm.Sheets[0].RowCount; j++)
                                        //    {
                                        //        string app_no = Convert.ToString(spreadFeeConfirm.Sheets[0].Cells[0, 2].Text);
                                        //        ds.Tables[0].DefaultView.RowFilter = "app_no=" + app_no + "";
                                        //        dat = ds.Tables[0].DefaultView;
                                        //        if (dat.Count > 0)
                                        //        {
                                        //            //spreadFeeConfirm.Sheets[0].SetColumnMerge(c - 1, FarPoint.Web.Spread.Model.MergePolicy.Always);
                                        //            spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 2].Text = dat[0]["TextVal"].ToString();
                                        //            spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 2].Font.Name = "Times New Roman";
                                        //            spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 2].Font.Size = FontUnit.Medium;
                                        //            spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Left;
                                        //            //spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                        //        }
                                        //        else
                                        //        {
                                        //            // spreadFeeConfirm.Sheets[0].SetColumnMerge(c - 1, FarPoint.Web.Spread.Model.MergePolicy.Always);
                                        //            spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 2].Text = "";
                                        //            spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 2].Font.Name = "Times New Roman";
                                        //            spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 2].Font.Size = FontUnit.Medium;
                                        //            spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Left;
                                        //            // spreadFeeConfirm.Sheets[0].Cells[j, spreadFeeConfirm.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                        //        }
                                        //    }
                                        //}
                                    }
                                    else
                                    {
                                        lblmg1.Visible = true;
                                        lblmg1.Text = "No Records Found";
                                        lbltotalcount.Visible = false;
                                        lbltotalcount1.Visible = false;
                                        lbltotalcount2.Visible = false;
                                        lbltotalcount3.Visible = false;
                                        spreadFeeConfirm.Visible = false;
                                        FpSpread3.Visible = false;
                                        FpSpread2.Visible = false;
                                        FpSpread1.Visible = false;
                                        Label66.Visible = false;
                                        //  lblnew2.Text = "0" + "New";
                                        Label68.Visible = false;
                                        Label67.Visible = false;
                                        Label69.Visible = false;
                                        btnapprove.Visible = false;
                                        Button2.Visible = false;
                                        Button3.Visible = false;
                                        Button9.Visible = false;
                                        lbltotalfeepaid.Visible = false;
                                        lbltotalfeepaid_value.Visible = false;
                                        ckbx.Visible = false;
                                        btnconform.Visible = false;
                                        btnunpaid.Visible = false;
                                        btnChallan.Visible = false;
                                        btnadmitcard.Visible = false;
                                        btnadmitprint.Visible = false;
                                        btnleft.Visible = false;
                                        //  btnreject.Visible = false;
                                    }
                                }
                                //else
                                //{
                                //    lblmg1.Visible = true;
                                //    lblmg1.Text = "Please Select All Values";
                                //    spreadFeeConfirm.Visible = false;
                                //    Label66.Visible = false;
                                //    Label68.Visible = false;
                                //    Label67.Visible = false;
                                //    Label69.Visible = false;
                                //    btnapprove.Visible = false;
                                //    Button2.Visible = false;
                                //    Button3.Visible = false;
                                //    Button9.Visible = false;
                                //    lbltotalfeepaid.Visible = false;
                                //    lbltotalfeepaid_value.Visible = false;
                                //    ckbx.Visible = false;
                                //    btnconform.Visible = false;
                                //    btnadmitcard.Visible = false;
                                //    // btnreject.Visible = false;
                                //}
                            }
                            else
                            {
                                if (spsearch == 1 && DropDownList2.SelectedItem.Text != "Un Paid")
                                {
                                    DropDownList2.SelectedIndex = 1;
                                    spreadFeeConfirmLoad();
                                }
                                else
                                {
                                    lblmg1.Visible = true;
                                    lblmg1.Text = "No Records Found";
                                    lbltotalcount.Visible = false;
                                    lbltotalcount1.Visible = false;
                                    lbltotalcount2.Visible = false;
                                    lbltotalcount3.Visible = false;
                                    spreadFeeConfirm.Visible = false;
                                    FpSpread3.Visible = false;
                                    FpSpread2.Visible = false;
                                    FpSpread1.Visible = false;
                                    FpSpread4.Visible = false;
                                    Label66.Visible = false;
                                    //  lblnew2.Text = "0" + "New";
                                    Label68.Visible = false;
                                    Label67.Visible = false;
                                    Label69.Visible = false;
                                    btnapprove.Visible = false;
                                    Button2.Visible = false;
                                    Button3.Visible = false;
                                    Button9.Visible = false;
                                    lbltotalfeepaid.Visible = false;
                                    lbltotalfeepaid_value.Visible = false;
                                    ckbx.Visible = false;
                                    btnconform.Visible = false;
                                    btnunpaid.Visible = false;
                                    btnChallan.Visible = false;
                                    btnadmitcard.Visible = false;
                                    btnadmitprint.Visible = false;
                                    btnleft.Visible = false;
                                }
                                //  btnreject.Visible = false;
                            }
                        }
                    }
                    else   //Added By Jeyaprakash
                    {
                        spreadFeeConfirm.Visible = false;
                        lbltotalfeepaid.Visible = false;
                        lbltotalfeepaid_value.Visible = false;
                        Label66.Visible = false;
                        Label68.Visible = false;
                        Label67.Visible = false;
                        Label69.Visible = false;
                        lbltotalcount3.Visible = false;
                        lblmg1.Visible = true;
                        lblmg1.Text = "No Records Found";
                    }
                }
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
        btnleft.Visible = false;
        btnadmitprint.Visible = true;
        btnadmitcard.Visible = false;
        btnChallan.Visible = false;
    }
    public void spread1()
    {
        try
        {
            lbltotalcount.Visible = false;
            FpSpread4.SaveChanges();
            if (ddledu.SelectedItem.Text == "PG")
            {
                FpSpread4.Sheets[0].RowCount = 0;
                FpSpread4.Sheets[0].ColumnCount = 5;
                FpSpread4.Sheets[0].RowHeader.Visible = false;
                FpSpread4.Sheets[0].AutoPostBack = false;
                FpSpread4.Height = 360;
                FpSpread4.Width = 930;
                FpSpread4.CommandBar.Visible = false;
                FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
                darkstyle.BackColor = Color.Brown;
                darkstyle.ForeColor = Color.White;
                FpSpread4.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
                Dictionary<int, int> dicsubcol = new Dictionary<int, int>();
                Dictionary<int, int> totalpercentage = new Dictionary<int, int>();
                FarPoint.Web.Spread.CheckBoxCellType chkcel1 = new FarPoint.Web.Spread.CheckBoxCellType();
                chkcel1.AutoPostBack = false;
                FarPoint.Web.Spread.TextCellType txt = new FarPoint.Web.Spread.TextCellType();
                FarPoint.Web.Spread.ButtonCellType but = new FarPoint.Web.Spread.ButtonCellType("MyCommand", FarPoint.Web.Spread.ButtonType.ImageButton, "~/images/view11.png");
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 1].Text = "student Name";
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 2].Text = "App No";
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Select Admit card";
                // FpSpread4.Sheets[0].ColumnHeader.Cells[0, 3].BackColor = Color.MistyRose;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 4].Text = "View";
                // FpSpread4.Sheets[0].ColumnHeader.Cells[0, 3].BackColor = Color.MistyRose;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
                FpSpread4.Sheets[0].Columns[2].Visible = false;
                FpSpread4.Sheets[0].Columns[1].Visible = false;
                FpSpread4.Sheets[0].Columns[0].Visible = true;
                FpSpread4.Sheets[0].Columns[0].Width = 30;
                int sno = 0;
                string[] frmdat = TextBox2.Text.Split(' ');
                string[] fdate = frmdat[0].Split('/');
                string fromdate = fdate[2].ToString() + "-" + fdate[1].ToString() + "-" + fdate[0].ToString();
                string[] trmdat = TextBox3.Text.Split(' ');
                string[] tdate = trmdat[0].Split('/');
                string tomdate = tdate[2].ToString() + "-" + tdate[1].ToString() + "-" + tdate[0].ToString();
                string com = "";
                if (txtbatch.Text != " " && ddldegree.SelectedItem.Text != "--Select--" && ddledu.SelectedItem.Text != "--Select--" && ddldept.SelectedItem.Text != "--Select--" && ddltype.SelectedItem.Text != "--Select--")
                {
                    if (DropDownList2.SelectedItem.Text == "Wait to Admitted")
                    {
                        com = "select s.usercode,s.criteria_Code,st.course_code,st.branch_code,st.tancet_mark,admit_confirm,p.psubjectno,mother_tongue,seattype,batch_year,parent_statep,p.acual_marks,p.max_marks,t.TextVal+'-'+ CAST(CAST(p.acual_marks AS int) AS char(20)) as mark,CONVERT(VARCHAR(2),DATEPART(DAY, a.dob))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.dob)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR, a.dob))as dob,CONVERT(VARCHAR(2),DATEPART(DAY, a.date_applied))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.date_applied)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR,a.date_applied))as date_applied,s.isview,d.Degree_Code,c.Edu_Level,a.app_no,a.app_formno,a.stud_name,a.sex,a.community,a.caste,a.religion,a.Streetp,a.Cityp,a.Districtp,a.parent_addressP,a.parent_pincodep,a.Student_Mobile,a.StuPer_Id,st.percentage,majorallied_percent,a.Alternativedegree_code,st.securedmark from selectcriteria s,applyn a,Course c,Degree d,Stud_prev_details st,perv_marks_history p,textvaltable t where c.Course_Id=d.Course_Id and c.college_code=d.college_code and c.college_code=a.college_code and d.Degree_Code=a.degree_code and d.college_code=a.college_code and  a.app_no=s.app_no and a.degree_code=s.degree_code and a.college_code=s.college_code and  st.app_no=a.app_no and st.app_no=s.app_no and p.course_entno=st.course_entno and t.TextCode=p.psubjectno and   t.college_code=a.college_code  and t.college_code=c.college_code and  t.college_code=d.college_code and  batch_year='" + txtbatch.Text + "' and d.degree_code='" + ddldept.SelectedValue + "' and c.Course_Id='" + ddldegree.SelectedValue + "' and c.Edu_Level='" + ddledu.SelectedItem.Text + "' and s.isapprove='4'  and t.TextCriteria='subje'  and a.app_no not in (select  app_no from Registration)";
                    }
                    else if (DropDownList2.SelectedItem.Text == "Admitted")
                    {
                        com = "select s.usercode,s.criteria_Code,st.course_code,st.branch_code,st.tancet_mark,admit_confirm,p.psubjectno,mother_tongue,seattype,batch_year,parent_statep,p.acual_marks,p.max_marks,t.TextVal+'-'+ CAST(CAST(p.acual_marks AS int) AS char(20)) as mark,CONVERT(VARCHAR(2),DATEPART(DAY, a.dob))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.dob)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR, a.dob))as dob,CONVERT(VARCHAR(2),DATEPART(DAY, a.date_applied))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.date_applied)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR,a.date_applied))as date_applied,s.isview,d.Degree_Code,c.Edu_Level,a.app_no,a.app_formno,a.stud_name,a.sex,a.community,a.caste,a.religion,a.Streetp,a.Cityp,a.Districtp,a.parent_addressP,a.parent_pincodep,a.Student_Mobile,a.StuPer_Id,st.percentage,majorallied_percent,a.Alternativedegree_code,st.securedmark from selectcriteria s,applyn a,Course c,Degree d,Stud_prev_details st,perv_marks_history p,textvaltable t where c.Course_Id=d.Course_Id and c.college_code=d.college_code and c.college_code=a.college_code and d.Degree_Code=a.degree_code and d.college_code=a.college_code and  a.app_no=s.app_no and a.degree_code=s.degree_code and a.college_code=s.college_code and  st.app_no=a.app_no and st.app_no=s.app_no and p.course_entno=st.course_entno and t.TextCode=p.psubjectno and   t.college_code=a.college_code  and t.college_code=c.college_code and  t.college_code=d.college_code and  batch_year='" + txtbatch.Text + "' and d.degree_code='" + ddldept.SelectedValue + "' and c.Course_Id='" + ddldegree.SelectedValue + "' and c.Edu_Level='" + ddledu.SelectedItem.Text + "' and s.isapprove='4'  and t.TextCriteria='subje'  and a.app_no in (select  app_no from Registration)";
                    }
                    else if (DropDownList2.SelectedItem.Text == "Un Paid")
                    {
                        com = "select s.usercode,s.criteria_Code,st.course_code,st.branch_code,st.tancet_mark,admit_confirm,p.psubjectno,mother_tongue,seattype,batch_year,parent_statep,p.acual_marks,p.max_marks,t.TextVal+'-'+ CAST(CAST(p.acual_marks AS int) AS char(20)) as mark,CONVERT(VARCHAR(2),DATEPART(DAY, a.dob))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.dob)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR, a.dob))as dob,CONVERT(VARCHAR(2),DATEPART(DAY, a.date_applied))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.date_applied)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR,a.date_applied))as date_applied,s.isview,d.Degree_Code,c.Edu_Level,a.app_no,a.app_formno,a.stud_name,a.sex,a.community,a.caste,a.religion,a.Streetp,a.Cityp,a.Districtp,a.parent_addressP,a.parent_pincodep,a.Student_Mobile,a.StuPer_Id,st.percentage,majorallied_percent,a.Alternativedegree_code,st.securedmark from selectcriteria s,applyn a,Course c,Degree d,Stud_prev_details st,perv_marks_history p,textvaltable t where c.Course_Id=d.Course_Id and c.college_code=d.college_code and c.college_code=a.college_code and d.Degree_Code=a.degree_code and d.college_code=a.college_code and  a.app_no=s.app_no and a.degree_code=s.degree_code and a.college_code=s.college_code and  st.app_no=a.app_no and st.app_no=s.app_no and p.course_entno=st.course_entno and t.TextCode=p.psubjectno and   t.college_code=a.college_code  and t.college_code=c.college_code and  t.college_code=d.college_code and  batch_year='" + txtbatch.Text + "' and d.degree_code='" + ddldept.SelectedValue + "' and c.Course_Id='" + ddldegree.SelectedValue + "' and c.Edu_Level='" + ddledu.SelectedItem.Text + "' and s.isapprove=5  and t.TextCriteria='subje'";
                    }
                    else if (DropDownList2.SelectedItem.Text == "Fee Paid")
                    {
                        com = "select s.usercode,s.criteria_Code,st.course_code,st.branch_code,st.tancet_mark,admit_confirm,p.psubjectno,mother_tongue,seattype,batch_year,parent_statep,p.acual_marks,p.max_marks,t.TextVal+'-'+ CAST(CAST(p.acual_marks AS int) AS char(20)) as mark,CONVERT(VARCHAR(2),DATEPART(DAY, a.dob))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.dob)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR, a.dob))as dob,CONVERT(VARCHAR(2),DATEPART(DAY, a.date_applied))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.date_applied)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR,a.date_applied))as date_applied,s.isview,d.Degree_Code,c.Edu_Level,a.app_no,a.app_formno,a.stud_name,a.sex,a.community,a.caste,a.religion,a.Streetp,a.Cityp,a.Districtp,a.parent_addressP,a.parent_pincodep,a.Student_Mobile,a.StuPer_Id,st.percentage,majorallied_percent,a.Alternativedegree_code,st.securedmark from selectcriteria s,applyn a,Course c,Degree d,Stud_prev_details st,perv_marks_history p,textvaltable t where c.Course_Id=d.Course_Id and c.college_code=d.college_code and c.college_code=a.college_code and d.Degree_Code=a.degree_code and d.college_code=a.college_code and  a.app_no=s.app_no and a.degree_code=s.degree_code and a.college_code=s.college_code and  st.app_no=a.app_no and st.app_no=s.app_no and p.course_entno=st.course_entno and t.TextCode=p.psubjectno and   t.college_code=a.college_code  and t.college_code=c.college_code and  t.college_code=d.college_code and  batch_year='" + txtbatch.Text + "' and d.degree_code='" + ddldept.SelectedValue + "' and c.Course_Id='" + ddldegree.SelectedValue + "' and c.Edu_Level='" + ddledu.SelectedItem.Text + "' and s.isapprove=4 and admit_confirm='1'  and t.TextCriteria='subje'";
                    }
                    if (ddltype.SelectedItem.Text != "All")
                    {
                        com = com + "and c.type='" + ddltype.SelectedItem.Text + "'";
                    }
                    //if (spsearch == 1)
                    //{
                    if (TextBox4.Text != "")
                    {
                        com = com + "and a.stud_name like'%" + TextBox4.Text + "%'";//modified by abarna
                        // com1 = com1 + "and a.stud_name like'%" + TextBox4.Text + "'%";
                    }
                    if (TextBox5.Text != "")
                    {
                        com = com + "and a.Student_Mobile='" + TextBox5.Text + "'";
                    }
                    if (TextBox6.Text != "")
                    {
                        com = com + "and a.app_formno='" + TextBox6.Text + "'";
                    }
                    //}
                    //else
                    //{
                    com = com + " and s.select_date between '" + fromdate + "'  and '" + tomdate + "'";
                    //}
                    string admin = "";
                    //  string adm = "select * from admitcolumnset where textcriteria = 'relig' and user_code='" + user_code + "'";
                    string adm = "select column_name from admitcolumnset where (textcriteria ='community' or textcriteria ='relig') and setcolumn ='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    ds1 = dt.select_method_wo_parameter(adm, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                        {
                            if (admin == "")
                            {
                                admin = ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                            else
                            {
                                admin = admin + "," + ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                        }
                        if (admin.Trim() != "")
                        {
                            string TextValuenew = d2.GetFunction("select TextCode  from TextValTable where TextCriteria ='comm' and TextCriteria2 ='comm1' and TextVal ='Others'");
                            if (TextValuenew.Trim() != "" && TextValuenew.Trim() != "0")
                            {
                                admin = admin + "," + TextValuenew;
                            }
                        }
                        if (orderflage == true)
                        {
                            com = com + "and s.criteria_Code='" + textcode + "'";
                        }
                        else
                        {
                            com = com + "and ( a.religion in (" + admin + ") or a.community in (" + admin + "))";
                        }
                        //com = com + "and ( a.religion in (" + admin + ") or a.community in (" + admin + "))";
                    }
                    string admin1 = "";
                    // string adm1 = "select * from admitcolumnset where textcriteria = 'subjec' and user_code='" + user_code + "'";
                    string adm1 = "select * from admitcolumnset where textcriteria = 'subjec' and user_code='" + user_code + "' and setcolumn='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    ds1 = dt.select_method_wo_parameter(adm1, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                        {
                            if (admin1 == "")
                            {
                                admin1 = ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                            else
                            {
                                admin1 = admin1 + "," + ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                        }
                        if (ddledu.SelectedItem.Text == "UG")
                        {
                            com = com + "and p.psubjectno in (" + admin1 + ")";
                        }
                        if (ddledu.SelectedItem.Text == "PG")
                        {
                            com = com + "and st.branch_code in (" + admin1 + ")";
                        }
                    }
                    if (com.Trim() != "")
                    {
                        if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                        {
                            com = com + " order by percentage desc";
                            // com1 = com1 + " order by percentage desc";
                        }
                        if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                        {
                            if (DropDownList2.SelectedItem.Text != "Fee Paid")
                            {
                                com = com + " order by majorallied_percent desc";
                            }
                            else
                            {
                                com = com + " order by stud_name asc";
                            }
                            // com1 = com1 + " order by majorallied_percent desc";
                        }
                    }
                    ds = dt.select_method_wo_parameter(com, "text");
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        string colm = "";
                        string priority = "      select * from admitcolumnset where  textcriteria='column' and College_Code ='" + college_code + "' order by CONVERT(int, priority )";
                        ds1 = dt.select_method_wo_parameter(priority, "text");
                        if (ds1.Tables[0].Rows.Count > 0)
                        {
                            for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                            {
                                colm = ds1.Tables[0].Rows[i]["column_name"].ToString();
                                FpSpread4.Sheets[0].ColumnCount++;
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() != "User Name")
                                {
                                    FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text = ds1.Tables[0].Rows[i]["setcolumn"].ToString();
                                    //FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                                    FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                    FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                    FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                    FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Locked = true;
                                    FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].CellType = txt;
                                    FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                                }
                                else
                                {
                                    if (DropDownList2.SelectedItem.Text == "Admitted")
                                    {
                                        FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text = "Admitted By";
                                    }
                                    else if (DropDownList2.SelectedItem.Text == "Un Paid")
                                    {
                                        FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text = "Un Paid By";
                                    }
                                    else if (DropDownList2.SelectedItem.Text == "Un Paid")
                                    {
                                        FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text = "Fee Paid By";
                                    }
                                    //   FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                                    FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                    FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                    FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                    FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Locked = true;
                                    FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                                }
                                if (ddltype.SelectedItem.Text.ToString().ToUpper() != "MCA")
                                {
                                    if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "TANCET Mark")
                                    {
                                        FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Visible = false;
                                    }
                                }
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "Subject Percentage")
                                {
                                    FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                                if (FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text == "DOB")
                                {
                                    FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Width = 90;
                                }
                                if (FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text == "Student Name")
                                {
                                    FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text == "Address")
                                {
                                    FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text == "City")
                                {
                                    FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Width = 100;
                                }
                                if (FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text == "Email_Id")
                                {
                                    FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text == "Mobile No")
                                {
                                    FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Width = 100;
                                }
                                if (FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text == "Subject")
                                {
                                    FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Width = 180;
                                    FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Visible = false;
                                    FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].CellType = txt;
                                }
                            }
                            //FpSpread4.Sheets[0].ColumnCount++;
                            //FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text = "Reason";
                            ////  FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                            //FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                            //FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Bold = true;
                            //FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                            //FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Locked = true;
                            //if (DropDownList2.SelectedItem.Text == "Admitted")
                            //{
                            //    FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Visible = false;
                            //}
                            //else
                            //{
                            //    FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Visible = true;
                            //}
                            FpSpread4.Sheets[0].ColumnCount++;
                            FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text = "Fee Paid";
                            //  FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                            FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                            FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Bold = true;
                            FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                            FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                            FpSpread4.Sheets[0].ColumnHeader.Columns[FpSpread4.Sheets[0].ColumnCount - 1].Visible = false;
                            //int c = 4;
                            //DataView dvv = new DataView();
                            //ds.Tables[0].DefaultView.RowFilter = "isview='0' ";
                            //dvv = ds.Tables[0].DefaultView;
                            //int cont = dvv.Count;
                            //if (dvv.Count > 0)
                            //{
                            //    DataView dvh = new DataView();
                            //    ds.Tables[0].DefaultView.RowFilter = "isview='0' and app_no='" + ds.Tables[0].Rows[0]["app_no"].ToString() + "'";
                            //    dvh = ds.Tables[0].DefaultView;
                            //    lblnew2.Visible = true;
                            //    lblnew2.Text = " " + (cont / dvh.Count) + " New";
                            //}
                            FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Visible = false;
                            FpSpread4.Sheets[0].RowCount = 0;
                            ArrayList addroll = new ArrayList();
                            int sno_Value = 0;
                            for (int row = 0; row < ds.Tables[0].Rows.Count; row++)
                            {
                                string app_no = Convert.ToString(ds.Tables[0].Rows[row]["app_no"]);
                                if (!addroll.Contains(app_no))
                                {
                                    addroll.Add(app_no);
                                    sno_Value++;
                                    FpSpread4.Sheets[0].RowCount++;
                                    if (Convert.ToString(ds.Tables[0].Rows[row]["admit_confirm"]) == "True")
                                    {
                                        FpSpread4.Sheets[0].Rows[FpSpread4.Sheets[0].RowCount - 1].BackColor = Color.LightBlue;
                                        FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, FpSpread4.Sheets[0].ColumnCount - 1].Locked = true;
                                        FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, FpSpread4.Sheets[0].ColumnCount - 1].Value = 1;
                                    }
                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(sno_Value);
                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 0].Font.Name = "Times New Roman";
                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 1].Text = Convert.ToString(ds.Tables[0].Rows[row]["stud_name"]);
                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 1].Tag = Convert.ToString(ds.Tables[0].Rows[row]["criteria_Code"]);
                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 1].Font.Name = "Times New Roman";
                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(ds.Tables[0].Rows[row]["app_no"]);
                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(ds.Tables[0].Rows[row]["app_formno"]);
                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 2].Font.Name = "Times New Roman";
                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 3].CellType = chkcel1;
                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 3].Font.Name = "Times New Roman";
                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 4].CellType = but;
                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 4].Font.Name = "Times New Roman";
                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                                    int col = 5;
                                    for (int i = FpSpread4.Sheets[0].ColumnCount - 1; i <= FpSpread4.Sheets[0].ColumnCount - 1; i++)
                                    {
                                        for (int j = 0; j < FpSpread4.Sheets[0].RowCount; j++)
                                        {
                                            FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 1].CellType = chkcel1;
                                            FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                                        }
                                    }
                                    for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                                    {
                                        col++;
                                        string colmname = Convert.ToString(ds1.Tables[0].Rows[i]["column_name"]);
                                        if (colmname.Trim() != "course_code")
                                        {
                                            if (colmname.Trim() != "SubjectPercen")
                                            {
                                                if (colmname.Trim() != "TamilOrginFromAndaman" && colmname.Trim() != "IsExService" && colmname.Trim() != "isdisable" && colmname.Trim() != "first_graduate" && colmname.Trim() != "CampusReq" && colmname.Trim() != "ncccadet" && colmname.Trim() != "Vocational_stream")
                                                {
                                                    if (colmname.Trim() != "criteria_Code" && colmname.Trim() != "parent_statep" && colmname.Trim() != "mother_tongue" && colmname.Trim() != "parent_occu" && colmname.Trim() != "religion" && colmname.Trim() != "citizen" && colmname.Trim() != "community" && colmname.Trim() != "caste" && colmname.Trim() != "DistinctSport" && colmname.Trim() != "co_curricular" && colmname.Trim() != "medium" && colmname.Trim() != "university_code")
                                                    {
                                                        if (colmname.Trim() != "usercode")
                                                        {
                                                            if (colmname.Trim() != "sex")
                                                            {
                                                                if (colmname.Trim() == "TotalPercentage")
                                                                {
                                                                    if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                                                                    {
                                                                        colmname = "percentage";
                                                                    }
                                                                    if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                                                    {
                                                                        colmname = "majorallied_percent";
                                                                    }
                                                                }
                                                                if (colmname.Trim() == "app_formno")
                                                                {
                                                                    colmname = "app_formno";
                                                                }
                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(ds.Tables[0].Rows[row][colmname]);
                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                            }
                                                            else
                                                            {
                                                                string gendervalue = Convert.ToString(ds.Tables[0].Rows[row][colmname]);
                                                                if (gendervalue == "0")
                                                                {
                                                                    gendervalue = "Male";
                                                                }
                                                                else if (gendervalue == "1")
                                                                {
                                                                    gendervalue = "Female";
                                                                }
                                                                else if (gendervalue == "2")
                                                                {
                                                                    gendervalue = "Transgender";
                                                                }
                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(gendervalue);
                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            string usernem = dt.GetFunction("select USER_ID   from UserMaster where User_code='" + Convert.ToString(ds.Tables[0].Rows[row][colmname]) + "' and college_code ='" + Session["collegecode"] + "'");
                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        string textval = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(ds.Tables[0].Rows[row][colmname]) + "' and college_code ='" + Session["collegecode"] + "'");
                                                        if (textval == "0")
                                                        {
                                                            textval = "";
                                                        }
                                                        FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Text = textval;
                                                        FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                        FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                        FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                    }
                                                }
                                                else
                                                {
                                                    string test_Value = "";
                                                    if (Convert.ToString(ds.Tables[0].Rows[row][colmname]) == "False")
                                                    {
                                                        test_Value = "No";
                                                    }
                                                    else
                                                    {
                                                        test_Value = "Yes";
                                                    }
                                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(test_Value);
                                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                }
                                            }
                                        }
                                        else
                                        {
                                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                                            {
                                                string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(ds.Tables[0].Rows[row][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                            }
                                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                            {
                                                string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(ds.Tables[0].Rows[row][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                string dept = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(ds.Tables[0].Rows[row]["branch_code"]) + "' and (TextCriteria='branc') and college_code ='" + Session["collegecode"] + "'");
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Text = usernem + " " + dept;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                            }
                                        }
                                    }
                                }
                            }
                            FpSpread4.Sheets[0].PageSize = FpSpread4.Sheets[0].RowCount;
                            FpSpread4.Sheets[0].FrozenColumnCount = 7;
                            FpSpread4.Visible = true;
                            ckbx.Visible = true;
                            btnapprove.Visible = false;
                            Button2.Visible = false;
                            Button3.Visible = false;
                            Button9.Visible = false;
                            lbltotalfeepaid.Visible = false;
                            // btnconform.Visible = true;
                            // btnunpaid.Visible = true;
                            btnChallan.Visible = true;
                            btnadmitcard.Visible = true;
                            btnadmitprint.Visible = true;
                            //  btnleft.Visible = true;
                            if (DropDownList2.SelectedItem.Text == "Admitted")
                            {
                                lbltotalcount3.Text = " " + " Selected" + " " + ": " + FpSpread4.Sheets[0].RowCount;
                                Button9.Visible = true;
                                //btnleft.Visible = true;
                                btnconform.Visible = false;
                                btnadmitprint.Visible = true;
                                btnadmitcard.Visible = true;
                                btnChallan.Visible = false;
                            }
                            else if (DropDownList2.SelectedItem.Text == "Wait to Admitted")
                            {
                                lbltotalcount3.Text = " " + " Wait to Admitted" + " " + ": " + FpSpread4.Sheets[0].RowCount;
                                Button9.Visible = false;
                                btnleft.Visible = false;
                                btnconform.Visible = true;
                                btnadmitprint.Visible = true;
                                btnadmitcard.Visible = false;
                                btnChallan.Visible = true;
                            }
                            else if (DropDownList2.SelectedItem.Text == "Not Interested")
                            {
                                lbltotalcount3.Text = " " + " Not Interested" + " " + ": " + FpSpread4.Sheets[0].RowCount;
                                Button9.Visible = false;
                                btnleft.Visible = false;
                                btnadmitprint.Visible = true;
                                btnadmitcard.Visible = false;
                                btnChallan.Visible = false;
                            }
                            else if (DropDownList2.SelectedItem.Text == "Un Paid")
                            {
                                lbltotalcount3.Text = " " + "Un Paid" + " " + ": " + FpSpread4.Sheets[0].RowCount;
                            }
                            else if (DropDownList2.SelectedItem.Text == "Fee Paid")
                            {
                                lbltotalcount3.Text = " " + " Fee Paid" + " " + ": " + FpSpread4.Sheets[0].RowCount;
                            }
                            lbltotalcount3.Visible = true;
                            if (spsearch == 1)
                            {
                                TabContainer1.ActiveTab = TabContainer1.Tabs[3];
                                spsearch = 0;
                                firsttable.Attributes.Add("Style", "border-bottom-style: solid; border-top-style: solid;border-left-style: solid; border-right-style: solid; background-color: #e3e3ef;border-width: 0.2px; border-color: indigo; border-radius: 5px; left: 16px; top: 0px;position: absolute; width: 950px;");
                                TextBox4.Text = "";
                                TextBox5.Text = "";
                                Label61.Visible = true;
                                DropDownList2.Visible = true;
                            }
                        }
                    }
                    else
                    {
                        if (spsearch == 1 && DropDownList2.SelectedItem.Text != "Un Paid")
                        {
                            DropDownList2.SelectedIndex = 1;
                            spread1();
                        }
                        else
                        {
                            lblmg1.Visible = true;
                            lblmg1.Text = "No Records Found";
                            lbltotalcount.Visible = false;
                            lbltotalcount1.Visible = false;
                            lbltotalcount2.Visible = false;
                            lbltotalcount3.Visible = false;
                            FpSpread4.Visible = false;
                            FpSpread3.Visible = false;
                            FpSpread2.Visible = false;
                            FpSpread1.Visible = false;
                            spreadFeeConfirm.Visible = false;
                            Label66.Visible = false;
                            //  lblnew2.Text = "0" + "New";
                            Label68.Visible = false;
                            Label67.Visible = false;
                            Label69.Visible = false;
                            btnapprove.Visible = false;
                            Button2.Visible = false;
                            Button3.Visible = false;
                            Button9.Visible = false;
                            lbltotalfeepaid.Visible = false;
                            lbltotalfeepaid_value.Visible = false;
                            ckbx.Visible = false;
                            btnconform.Visible = false;
                            btnunpaid.Visible = false;
                            btnadmitcard.Visible = false;
                            btnChallan.Visible = false;
                            btnadmitprint.Visible = false;
                            btnleft.Visible = false;
                        }
                        //  btnreject.Visible = false;
                    }
                }
                else
                {
                    lblmg1.Visible = true;
                    lblmg1.Text = "Please Select All Values";
                    FpSpread4.Visible = false;
                    Label66.Visible = false;
                    Label68.Visible = false;
                    Label67.Visible = false;
                    Label69.Visible = false;
                    btnapprove.Visible = false;
                    Button2.Visible = false;
                    Button3.Visible = false;
                    Button9.Visible = false;
                    lbltotalfeepaid.Visible = false;
                    lbltotalfeepaid_value.Visible = false;
                    ckbx.Visible = false;
                    btnconform.Visible = false;
                    btnunpaid.Visible = false;
                    btnChallan.Visible = false;
                    btnadmitcard.Visible = false;
                    btnadmitprint.Visible = false;
                    btnleft.Visible = false;
                    // btnreject.Visible = false;
                }
            }
            if (ddledu.SelectedItem.Text == "UG")
            {
                FpSpread4.Sheets[0].RowCount = 0;
                FpSpread4.Sheets[0].ColumnCount = 5;
                FpSpread4.Sheets[0].RowHeader.Visible = false;
                FpSpread4.Sheets[0].AutoPostBack = false;
                FpSpread4.Height = 360;
                FpSpread4.Width = 930;
                FpSpread4.CommandBar.Visible = false;
                FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
                darkstyle.BackColor = Color.Brown;
                darkstyle.ForeColor = Color.White;
                FpSpread4.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
                Dictionary<int, double> dicsubcol = new Dictionary<int, double>();
                Dictionary<int, int> totalpercentage = new Dictionary<int, int>();
                FarPoint.Web.Spread.CheckBoxCellType chkcel1 = new FarPoint.Web.Spread.CheckBoxCellType();
                chkcel1.AutoPostBack = false;
                FarPoint.Web.Spread.TextCellType txt = new FarPoint.Web.Spread.TextCellType();
                FarPoint.Web.Spread.ButtonCellType but = new FarPoint.Web.Spread.ButtonCellType("MyCommand", FarPoint.Web.Spread.ButtonType.ImageButton, "~/images/view11.png");
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 1].Text = "student Name";
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 2].Text = "App No";
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 3].Text = "Select Admit card";
                // FpSpread4.Sheets[0].ColumnHeader.Cells[0, 3].BackColor = Color.MistyRose;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 4].Text = "View";
                // FpSpread4.Sheets[0].ColumnHeader.Cells[0, 3].BackColor = Color.MistyRose;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 4].Font.Name = "Book Antiqua";
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 4].Font.Bold = true;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 4].Font.Size = FontUnit.Medium;
                FpSpread4.Sheets[0].ColumnHeader.Cells[0, 4].HorizontalAlign = HorizontalAlign.Center;
                FpSpread4.Sheets[0].Columns[2].Visible = false;
                FpSpread4.Sheets[0].Columns[1].Visible = false;
                FpSpread4.Sheets[0].Columns[0].Visible = true;
                FpSpread4.Sheets[0].Columns[0].Width = 30;
                int sno = 0;
                string[] frmdat = TextBox2.Text.Split(' ');
                string[] fdate = frmdat[0].Split('/');
                string fromdate = fdate[2].ToString() + "-" + fdate[1].ToString() + "-" + fdate[0].ToString();
                string[] trmdat = TextBox3.Text.Split(' ');
                string[] tdate = trmdat[0].Split('/');
                string tomdate = tdate[2].ToString() + "-" + tdate[1].ToString() + "-" + tdate[0].ToString();
                string com = "";
                string com1 = "";
                if (txtbatch.Text != " " && ddldegree.SelectedItem.Text != "--Select--" && ddledu.SelectedItem.Text != "--Select--" && ddldept.SelectedItem.Text != "--Select--" && ddltype.SelectedItem.Text != "--Select--")
                {
                    if (DropDownList2.SelectedItem.Text == "Admitted")   //Query Changes By Jeyaprakash
                    {
                        // com = "select s.usercode,s.criteria_Code,st.course_code,st.branch_code,st.tancet_mark,admit_confirm,p.psubjectno,mother_tongue,seattype,batch_year,parent_statep,p.acual_marks,p.max_marks,t.TextVal+'-'+ CAST(CAST(p.acual_marks AS int) AS char(20)) as mark,CONVERT(VARCHAR(2),DATEPART(DAY, a.dob))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.dob)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR, a.dob))as dob,CONVERT(VARCHAR(2),DATEPART(DAY, a.date_applied))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.date_applied)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR,a.date_applied))as date_applied,s.isview,d.Degree_Code,c.Edu_Level,a.app_no,a.app_formno,a.stud_name,a.sex,a.community,a.caste,a.religion,a.Streetp,a.Cityp,a.Districtp,a.parent_addressP,a.parent_pincodep,a.Student_Mobile,a.StuPer_Id,st.percentage,majorallied_percent from selectcriteria s,applyn a,Course c,Degree d,Stud_prev_details st,perv_marks_history p,textvaltable t where c.Course_Id=d.Course_Id and c.college_code=d.college_code and c.college_code=a.college_code and d.Degree_Code=a.degree_code and d.college_code=a.college_code and  a.app_no=s.app_no and a.degree_code=s.degree_code and a.college_code=s.college_code and  st.app_no=a.app_no and st.app_no=s.app_no and p.course_entno=st.course_entno and t.TextCode=p.psubjectno and   t.college_code=a.college_code  and t.college_code=c.college_code and  t.college_code=d.college_code and  batch_year='" + txtbatch.Text + "' and d.degree_code='" + ddldept.SelectedValue + "' and c.Course_Id='" + ddldegree.SelectedValue + "' and c.Edu_Level='" + ddledu.SelectedItem.Text + "' and s.isapprove='4' and s.select_date between '" + fromdate + "'  and '" + tomdate + "' and t.TextCriteria='subje'";
                        com = "select s.usercode,s.criteria_Code,a.app_no,app_formno,CONVERT(varchar(10), date_applied,103) as date_applied,stud_name,sex,Relationship,parent_name ,CONVERT(varchar(10), dob,103) as dob ,parent_occu,mother_tongue,religion,citizen,community,caste,TamilOrginFromAndaman,IsExService,handy,visualhandy,first_graduate,CampusReq,DistinctSport,co_curricular,parent_addressC,Streetc,Cityc,parent_statec,Countryc,parent_pincodec,Student_Mobile,StuPer_Id,parent_phnoc,alter_mobileno,parent_addressP,Streetp,cityp,parent_statep,Countryp,parent_pincodep,parent_phnop,a.degree_code,batch_year,a.college_code,SubCaste,isdisable ,isdisabledisc,islearningdis,missionarydisc,MissionaryChild,seattype,current_semester,ncccadet,Institute_name,instaddress,medium,isgrade,Part1Language,Part2Language,percentage,university_code,uni_state,psubjectno,registerno,acual_marks,max_marks,pass_month,pass_year,noofattempt,ph.grade,sd.course_code,sd.branch_code,sd.tancet_mark,Vocational_stream,admit_confirm  ,a.Alternativedegree_code,sd.securedmark from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code    and s.isapprove =4 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1   and a.app_no in (select app_no from Registration) ";
                        if (ddldept.SelectedItem.Text == "English Literature" || ddldept.SelectedItem.Text == "English" || ddldept.SelectedItem.Text == "Tamil Literature")
                        {
                            com1 = " select distinct a.app_no,acual_marks from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code   and s.isapprove =4 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1  ";
                        }
                        else
                        {
                            com1 = " select distinct a.app_no from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code   and s.isapprove =4 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1  ";
                        }
                    }
                    else if (DropDownList2.SelectedItem.Text == "Un Paid")
                    {
                        // com = "select s.usercode,s.criteria_Code,st.course_code,st.branch_code,st.tancet_mark,admit_confirm,p.psubjectno,mother_tongue,seattype,batch_year,parent_statep,p.acual_marks,p.max_marks,t.TextVal+'-'+ CAST(CAST(p.acual_marks AS int) AS char(20)) as mark,CONVERT(VARCHAR(2),DATEPART(DAY, a.dob))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.dob)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR, a.dob))as dob,CONVERT(VARCHAR(2),DATEPART(DAY, a.date_applied))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.date_applied)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR,a.date_applied))as date_applied,s.isview,d.Degree_Code,c.Edu_Level,a.app_no,a.app_formno,a.stud_name,a.sex,a.community,a.caste,a.religion,a.Streetp,a.Cityp,a.Districtp,a.parent_addressP,a.parent_pincodep,a.Student_Mobile,a.StuPer_Id,st.percentage,majorallied_percent from selectcriteria s,applyn a,Course c,Degree d,Stud_prev_details st,perv_marks_history p,textvaltable t where c.Course_Id=d.Course_Id and c.college_code=d.college_code and c.college_code=a.college_code and d.Degree_Code=a.degree_code and d.college_code=a.college_code and  a.app_no=s.app_no and a.degree_code=s.degree_code and a.college_code=s.college_code and  st.app_no=a.app_no and st.app_no=s.app_no and p.course_entno=st.course_entno and t.TextCode=p.psubjectno and   t.college_code=a.college_code  and t.college_code=c.college_code and  t.college_code=d.college_code and  batch_year='" + txtbatch.Text + "' and d.degree_code='" + ddldept.SelectedValue + "' and c.Course_Id='" + ddldegree.SelectedValue + "' and c.Edu_Level='" + ddledu.SelectedItem.Text + "' and s.isapprove='3' and s.select_date between '" + fromdate + "'  and '" + tomdate + "' and t.TextCriteria='subje'";
                        com = "select s.usercode,s.criteria_Code,a.app_no,app_formno,CONVERT(varchar(10), date_applied,103) as date_applied,stud_name,sex,Relationship,parent_name ,CONVERT(varchar(10), dob,103) as dob ,parent_occu,mother_tongue,religion,citizen,community,caste,TamilOrginFromAndaman,IsExService,handy,visualhandy,first_graduate,CampusReq,DistinctSport,co_curricular,parent_addressC,Streetc,Cityc,parent_statec,Countryc,parent_pincodec,Student_Mobile,StuPer_Id,parent_phnoc,alter_mobileno,parent_addressP,Streetp,cityp,parent_statep,Countryp,parent_pincodep,parent_phnop,a.degree_code,batch_year,a.college_code,SubCaste,isdisable ,isdisabledisc,islearningdis,missionarydisc,MissionaryChild,seattype,current_semester,ncccadet,Institute_name,instaddress,medium,isgrade,Part1Language,Part2Language,percentage,university_code,uni_state,psubjectno,registerno,acual_marks,max_marks,pass_month,pass_year,noofattempt,ph.grade,sd.course_code,sd.branch_code,sd.tancet_mark,Vocational_stream,admit_confirm ,a.Alternativedegree_code,sd.securedmark from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code    and s.isapprove =5 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1";
                        if (ddldept.SelectedItem.Text == "English Literature" || ddldept.SelectedItem.Text == "English" || ddldept.SelectedItem.Text == "Tamil Literature")
                        {
                            com1 = " select distinct a.app_no,acual_marks from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code   and s.isapprove =5 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1  ";
                        }
                        else
                        {
                            com1 = " select distinct a.app_no from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code   and s.isapprove =5 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1  ";
                        }
                    }
                    else if (DropDownList2.SelectedItem.Text == "Not Interested")    //Query Changes By Jeyaprakash
                    {
                        com = " select s.usercode,s.criteria_Code,a.app_no,app_formno,CONVERT(varchar(10), date_applied,103) as date_applied,a.stud_name,sex,Relationship,parent_name  ,CONVERT(varchar(10), dob,103) as dob ,parent_occu,mother_tongue,religion,citizen,community,caste,TamilOrginFromAndaman,IsExService,handy,visualhandy ,first_graduate,CampusReq,DistinctSport,co_curricular,parent_addressC,Streetc,Cityc,parent_statec,Countryc,parent_pincodec,Student_Mobile,StuPer_Id ,parent_phnoc,alter_mobileno,parent_addressP,Streetp,cityp,parent_statep,Countryp,parent_pincodep,parent_phnop,a.degree_code,a.batch_year, a.college_code,SubCaste,isdisable ,isdisabledisc,islearningdis,missionarydisc,MissionaryChild, seattype, a.current_semester ,ncccadet,Institute_name ,instaddress,medium,isgrade,Part1Language,Part2Language,percentage,university_code,uni_state,psubjectno,registerno,acual_marks,max_marks ,pass_month,pass_year,noofattempt,ph.grade,sd.course_code,sd.branch_code,sd.tancet_mark,Vocational_stream,admit_confirm ,a.Alternativedegree_code,sd.securedmark  from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s  where  a.app_no =sd.app_no and a.degree_code =s.degree_code  and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code   and s.isapprove =5  and a.degree_code ='" + ddldept.SelectedValue + "' and a.current_semester =1";
                        if (ddldept.SelectedItem.Text == "English Literature" || ddldept.SelectedItem.Text == "English" || ddldept.SelectedItem.Text == "Tamil Literature")
                        {
                            com1 = " select  distinct a.app_no,acual_marks,a.stud_name  from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s  where  a.app_no =sd.app_no and a.degree_code =s.degree_code  and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no  and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code   and s.isapprove =5 and a.degree_code ='" + ddldept.SelectedValue + "' and a.current_semester =1";
                            // com1 = " select distinct a.app_no,acual_marks from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code   and s.isapprove =5 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1  ";
                        }
                        else
                        {
                            com1 = " select  distinct a.app_no,a.stud_name  from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and a.degree_code =s.degree_code  and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no  and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code   and s.isapprove =5  and a.degree_code ='" + ddldept.SelectedValue + "' and a.current_semester =1";
                            //com1 = " select distinct a.app_no from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code   and s.isapprove =5 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1  ";
                        }
                    }
                    else if (DropDownList2.SelectedItem.Text == "Wait to Admitted")
                    {
                        com = "select s.usercode,s.criteria_Code,a.app_no,app_formno,CONVERT(varchar(10), date_applied,103) as date_applied,stud_name,sex,Relationship,parent_name ,CONVERT(varchar(10), dob,103) as dob ,parent_occu,mother_tongue,religion,citizen,community,caste,TamilOrginFromAndaman,IsExService,handy,visualhandy,first_graduate,CampusReq,DistinctSport,co_curricular,parent_addressC,Streetc,Cityc,parent_statec,Countryc,parent_pincodec,Student_Mobile,StuPer_Id,parent_phnoc,alter_mobileno,parent_addressP,Streetp,cityp,parent_statep,Countryp,parent_pincodep,parent_phnop,a.degree_code,batch_year,a.college_code,SubCaste,isdisable ,isdisabledisc,islearningdis,missionarydisc,MissionaryChild,seattype,current_semester,ncccadet,Institute_name,instaddress,medium,isgrade,Part1Language,Part2Language,percentage,university_code,uni_state,psubjectno,registerno,acual_marks,max_marks,pass_month,pass_year,noofattempt,ph.grade,sd.course_code,sd.branch_code,sd.tancet_mark,Vocational_stream,admit_confirm  ,a.Alternativedegree_code,sd.securedmark from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code    and s.isapprove =4 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1   and a.app_no not in (select app_no from Registration) ";
                        if (ddldept.SelectedItem.Text == "English Literature" || ddldept.SelectedItem.Text == "English" || ddldept.SelectedItem.Text == "Tamil Literature")
                        {
                            com1 = " select distinct a.app_no,acual_marks from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code   and s.isapprove =4 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1  ";
                        }
                        else
                        {
                            com1 = " select distinct a.app_no from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code   and s.isapprove =4 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1  ";
                        }
                    }
                    //if (spsearch == 1)
                    //{
                    if (TextBox4.Text != "")
                    {
                        com = com + "and a.stud_name like'%" + TextBox4.Text + "%'";//modified by abarna
                        com1 = com1 + "and a.stud_name like'%" + TextBox4.Text + "%'";
                    }//modified by abarna
                    if (TextBox5.Text != "")
                    {
                        com = com + "and a.Student_Mobile='" + TextBox5.Text + "'";
                        com1 = com1 + "and a.Student_Mobile='" + TextBox5.Text + "'";
                    }
                    if (TextBox6.Text != "")
                    {
                        com = com + "and a.app_formno='" + TextBox6.Text + "'";
                        com1 = com1 + "and a.app_formno='" + TextBox6.Text + "'";
                    }
                    //}
                    //else
                    //{
                    com = com + " and select_date between '" + fromdate + "' and '" + tomdate + "'";
                    com1 = com1 + " and select_date between '" + fromdate + "' and '" + tomdate + "'";
                    //}
                    string adminlang = "";
                    string adm3 = "select * from admitcolumnset where textcriteria = 'subjel' and setcolumn='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    ds1.Clear();
                    ds1 = dt.select_method_wo_parameter(adm3, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                        {
                            if (adminlang == "")
                            {
                                adminlang = "" + Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                            }
                            else
                            {
                                adminlang = adminlang + "'" + "," + "'" + Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                            }
                        }
                    }
                    if (adminlang.Trim() == "")
                    {
                        com = com + "  and psubjectno not in(sd.Part1Language,sd.Part2Language)";
                        com1 = com1 + "  and psubjectno not in(sd.Part1Language,sd.Part2Language)";
                    }
                    else
                    {
                        com = com + " and (sd.Part1Language in('" + adminlang + "') or sd.Part2Language in ('" + adminlang + "'))";
                        com1 = com1 + " and ( sd.Part1Language in('" + adminlang + "') or sd.Part2Language in ('" + adminlang + "') )";
                    }
                    string admin = "";
                    //  string adm = "select * from admitcolumnset where textcriteria = 'relig' and user_code='" + user_code + "'";
                    string adm = "select column_name from admitcolumnset where (textcriteria ='community' or textcriteria ='relig') and setcolumn ='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    ds1 = dt.select_method_wo_parameter(adm, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                        {
                            if (admin == "")
                            {
                                admin = ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                            else
                            {
                                admin = admin + "," + ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                        }
                        if (admin.Trim() != "")
                        {
                            string TextValuenew = d2.GetFunction("select TextCode  from TextValTable where TextCriteria ='comm' and TextCriteria2 ='comm1' and TextVal ='Others'");
                            if (TextValuenew.Trim() != "" && TextValuenew.Trim() != "0")
                            {
                                admin = admin + "," + TextValuenew;
                            }
                        }
                        if (orderflage == true)
                        {
                            com = com + "and s.criteria_Code='" + textcode + "'";
                            com1 = com1 + "and s.criteria_Code='" + textcode + "'";
                        }
                        else
                        {
                            com = com + "and ( a.religion in (" + admin + ") or a.community in (" + admin + "))";
                            com1 = com1 + "and ( a.religion in (" + admin + ") or a.community in (" + admin + "))";
                        }
                        //com = com + "and ( a.religion in (" + admin + ") or a.community in (" + admin + "))";
                    }
                    int dummycount = 0;
                    string admin1 = "";
                    // string adm1 = "select * from admitcolumnset where textcriteria = 'subjec' and user_code='" + user_code + "'";
                    string adm1 = "select * from admitcolumnset where textcriteria = 'subjec' and setcolumn='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    ds1.Clear();
                    ds1 = dt.select_method_wo_parameter(adm1, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                        {
                            if (admin1 == "")
                            {
                                dummycount++;
                                admin1 = Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                            }
                            else
                            {
                                dummycount++;
                                admin1 = admin1 + " , " + Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                            }
                        }
                    }
                    string admin2 = "";
                    string adm2 = "select * from admitcolumnset where textcriteria = 'subjea' and setcolumn='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    ds1.Clear();
                    ds1 = dt.select_method_wo_parameter(adm2, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                        {
                            if (admin2 == "")
                            {
                                admin2 = Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                            }
                            else
                            {
                                admin2 = admin2 + "," + Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                            }
                        }
                    }
                    if (adminlang.Trim() != "")
                    {
                        if (ddldept.SelectedItem.Text == "Tamil Literature")
                        {
                            if (DropDownList2.SelectedItem.Text == "Not Interested")
                            {
                                com = com + "and (Part2Language=psubjectno) order by a.stud_name asc";
                                com1 = com1 + "and (Part2Language=psubjectno) order by a.stud_name asc";
                            }
                            else
                            {
                                com = com + " and (Part1Language=psubjectno) order by acual_marks desc";
                                com1 = com1 + " and (Part1Language=psubjectno) order by acual_marks desc";
                            }
                        }
                        else if (ddldept.SelectedItem.Text == "English Literature" || ddldept.SelectedItem.Text == "English")
                        {
                            if (DropDownList2.SelectedItem.Text == "Not Interested")
                            {
                                com = com + " and (Part2Language=psubjectno) order by a.stud_name asc";
                                com1 = com1 + "and (Part2Language=psubjectno) order by a.stud_name asc";
                            }
                            else
                            {
                                com = com + " and (Part2Language=psubjectno) order by acual_marks desc";
                                com1 = com1 + " and (Part2Language=psubjectno) order by acual_marks desc";
                            }
                        }
                    }
                    if (adminlang.Trim() == "")
                    {
                        if (DropDownList2.SelectedItem.Text == "Not Interested")
                        {
                            com = com + " order by a.stud_name asc";
                            com1 = com1 + " order by a.stud_name asc";
                        }
                    }
                    ds = dt.select_method_wo_parameter(com, "text");
                    ddummy.Clear();
                    ddummy = dt.select_method_wo_parameter(com1, "Text");
                    DataSet gradeset = new DataSet();
                    string gradequery = "select Frange,Trange,Mark_Grade  from Grade_Master where College_Code =" + college_code + " and batch_year =" + txtbatch.Text + "";
                    gradeset = dt.select_method_wo_parameter(gradequery, "Text");
                    if (adminlang == "")
                    {
                        DataView dvcheck = new DataView();
                        DataTable data = new DataTable();
                        DataView dummyview;
                        if (ddummy.Tables[0].Rows.Count > 0)
                        {
                            for (int du = 0; du < ddummy.Tables[0].Rows.Count; du++)
                            {
                                int total = 0;
                                int maxtotal = 0;
                                string app_no = Convert.ToString(ddummy.Tables[0].Rows[du]["app_no"]);
                                ds.Tables[0].DefaultView.RowFilter = "app_no='" + app_no + "'";
                                dvcheck = ds.Tables[0].DefaultView;
                                if (dvcheck.Count > 0)
                                {
                                    if (admin1.Trim() != "")
                                    {
                                        data = dvcheck.ToTable();
                                        dummyview = new DataView(data);
                                        dummyview.RowFilter = "psubjectno in (" + admin1 + ")";
                                        if (dummyview.Count == dummycount)
                                        {
                                            if (admin2.Trim() != "")
                                            {
                                                data = dvcheck.ToTable();
                                                dummyview = new DataView(data);
                                                dummyview.RowFilter = "psubjectno in (" + admin2 + ")";
                                                if (dummyview.Count > 0)
                                                {
                                                    for (int cn = 0; cn < dvcheck.Count; cn++)
                                                    {
                                                        if (Convert.ToString(dvcheck[cn]["isgrade"]) == "False")
                                                        {
                                                            total = total + Convert.ToInt32(dvcheck[cn]["acual_marks"].ToString());
                                                        }
                                                        else
                                                        {
                                                            if (gradeset.Tables[0].Rows.Count > 0)
                                                            {
                                                                DataView gradview = new DataView();
                                                                string grade = Convert.ToString(dvcheck[cn]["grade"]);
                                                                gradeset.Tables[0].DefaultView.RowFilter = "Mark_Grade='" + grade + "'";
                                                                gradview = gradeset.Tables[0].DefaultView;
                                                                if (gradview.Count > 0)
                                                                {
                                                                    string fromrange = Convert.ToString(gradview[0]["Frange"]);
                                                                    string torange = Convert.ToString(gradview[0]["Trange"]);
                                                                    if (fromrange.Trim() != "" && torange.Trim() != "")
                                                                    {
                                                                        double midpoint = (Convert.ToDouble(fromrange) + Convert.ToDouble(torange)) / Convert.ToDouble(2);
                                                                        total = total + Convert.ToInt32(midpoint);
                                                                    }
                                                                    else
                                                                    {
                                                                        total = total + 0;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    total = total + 0;
                                                                }
                                                            }
                                                        }
                                                        maxtotal = maxtotal + Convert.ToInt32(dvcheck[cn]["max_marks"].ToString());
                                                    }
                                                    double mark = Convert.ToDouble(total) / Convert.ToDouble(maxtotal) * 100;
                                                    dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(mark, 2)));
                                                }
                                            }
                                            else
                                            {
                                                for (int cn = 0; cn < dvcheck.Count; cn++)
                                                {
                                                    if (Convert.ToString(dvcheck[cn]["isgrade"]) == "False")
                                                    {
                                                        total = total + Convert.ToInt32(dvcheck[cn]["acual_marks"].ToString());
                                                    }
                                                    else
                                                    {
                                                        if (gradeset.Tables[0].Rows.Count > 0)
                                                        {
                                                            DataView gradview = new DataView();
                                                            string grade = Convert.ToString(dvcheck[cn]["grade"]);
                                                            gradeset.Tables[0].DefaultView.RowFilter = "Mark_Grade='" + grade + "'";
                                                            gradview = gradeset.Tables[0].DefaultView;
                                                            if (gradview.Count > 0)
                                                            {
                                                                string fromrange = Convert.ToString(gradview[0]["Frange"]);
                                                                string torange = Convert.ToString(gradview[0]["Trange"]);
                                                                if (fromrange.Trim() != "" && torange.Trim() != "")
                                                                {
                                                                    double midpoint = (Convert.ToDouble(fromrange) + Convert.ToDouble(torange)) / Convert.ToDouble(2);
                                                                    total = total + Convert.ToInt32(midpoint);
                                                                }
                                                                else
                                                                {
                                                                    total = total + 0;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                total = total + 0;
                                                            }
                                                        }
                                                    }
                                                    maxtotal = maxtotal + Convert.ToInt32(dvcheck[cn]["max_marks"].ToString());
                                                }
                                                double mark1 = Convert.ToDouble(total) / Convert.ToDouble(maxtotal) * 100;
                                                dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(mark1, 2)));
                                            }
                                        }
                                    }
                                    else
                                    {
                                        for (int cn = 0; cn < dvcheck.Count; cn++)
                                        {
                                            if (Convert.ToString(dvcheck[cn]["isgrade"]) == "False")
                                            {
                                                total = total + Convert.ToInt32(dvcheck[cn]["acual_marks"].ToString());
                                            }
                                            else
                                            {
                                                if (gradeset.Tables[0].Rows.Count > 0)
                                                {
                                                    DataView gradview = new DataView();
                                                    string grade = Convert.ToString(dvcheck[cn]["grade"]);
                                                    gradeset.Tables[0].DefaultView.RowFilter = "Mark_Grade='" + grade + "'";
                                                    gradview = gradeset.Tables[0].DefaultView;
                                                    if (gradview.Count > 0)
                                                    {
                                                        string fromrange = Convert.ToString(gradview[0]["Frange"]);
                                                        string torange = Convert.ToString(gradview[0]["Trange"]);
                                                        if (fromrange.Trim() != "" && torange.Trim() != "")
                                                        {
                                                            double midpoint = (Convert.ToDouble(fromrange) + Convert.ToDouble(torange)) / Convert.ToDouble(2);
                                                            total = total + Convert.ToInt32(midpoint);
                                                        }
                                                        else
                                                        {
                                                            total = total + 0;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        total = total + 0;
                                                    }
                                                }
                                            }
                                            maxtotal = maxtotal + Convert.ToInt32(dvcheck[cn]["max_marks"].ToString());
                                        }
                                        double mark2 = Convert.ToDouble(total) / Convert.ToDouble(maxtotal) * 100;
                                        dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(mark2, 2)));
                                    }
                                }
                            }
                            if (DropDownList2.SelectedItem.Text != "Fee Paid")
                            {
                                dicsubcol = dicsubcol.OrderByDescending(x => x.Value).ToDictionary(x => x.Key, x => x.Value);
                            }
                        }
                    }
                    string colm = "";
                    string priority = "      select * from admitcolumnset where  textcriteria='column' and College_Code ='" + college_code + "' order by CONVERT(int, priority ) ";
                    ds1 = dt.select_method_wo_parameter(priority, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                        {
                            colm = ds1.Tables[0].Rows[i]["column_name"].ToString();
                            FpSpread4.Sheets[0].ColumnCount++;
                            if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() != "User Name")
                            {
                                FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text = ds1.Tables[0].Rows[i]["setcolumn"].ToString();
                                //FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                                FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Locked = true;
                                FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].CellType = txt;
                                FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                            }
                            else
                            {
                                if (DropDownList2.SelectedItem.Text == "Admitted")
                                {
                                    FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text = "Admitted By";
                                }
                                else if (DropDownList2.SelectedItem.Text == "Un Paid")
                                {
                                    FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text = "Un Paid By";
                                }
                                else if (DropDownList2.SelectedItem.Text == "Not Interested")
                                {
                                    FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text = "Fee Paid By";
                                }
                                //   FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                                FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Locked = true;
                                FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                            }
                            if (ddltype.SelectedItem.Text.ToString().ToUpper() != "MCA")
                            {
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "TANCET Mark")
                                {
                                    FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                            }
                            if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "Subject Percentage")
                            {
                                FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Visible = false;
                            }
                            if (FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text == "DOB")
                            {
                                FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Width = 90;
                            }
                            if (FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text == "Student Name")
                            {
                                FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Width = 200;
                            }
                            if (FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text == "Address")
                            {
                                FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Width = 200;
                            }
                            if (FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text == "City")
                            {
                                FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Width = 100;
                            }
                            if (FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text == "Email_Id")
                            {
                                FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Width = 200;
                            }
                            if (FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text == "Mobile No")
                            {
                                FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Width = 100;
                            }
                            if (FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text == "Subject")
                            {
                                FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Width = 180;
                                FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Visible = false;
                                FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].CellType = txt;
                            }
                        }
                        //FpSpread4.Sheets[0].ColumnCount++;
                        //FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text = "Reason";
                        ////  FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                        //FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                        //FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Bold = true;
                        //FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                        //FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Locked = true;
                        //if (DropDownList2.SelectedItem.Text == "Admitted")
                        //{
                        //    FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Visible = false;
                        //}
                        //else
                        //{
                        //    FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Visible = true;
                        //}
                        FpSpread4.Sheets[0].ColumnCount++;
                        FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Text = "Fee Paid";
                        //  FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                        FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                        FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Bold = true;
                        FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                        FpSpread4.Sheets[0].ColumnHeader.Cells[0, FpSpread4.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                        FpSpread4.Sheets[0].ColumnHeader.Columns[FpSpread4.Sheets[0].ColumnCount - 1].Visible = false;
                        FpSpread4.Sheets[0].Columns[FpSpread4.Sheets[0].ColumnCount - 1].Visible = false;
                        string vlau = Convert.ToString(txttop.Text);
                        if (vlau.Trim() == "")
                        {
                            vlau = Convert.ToString(dicsubcol.Count);
                        }
                        FpSpread4.Sheets[0].RowCount = 0;
                        DataView dv = new DataView();
                        if (ddummy.Tables[0].Rows.Count > 0)
                        {
                            if (adminlang == "")
                            {
                                if (dicsubcol.Count > 0)
                                {
                                    int sno_Value = 0;
                                    foreach (var kvp in dicsubcol)
                                    {
                                        if (sno_Value < Convert.ToInt32(vlau))
                                        {
                                            string app_no = kvp.Key.ToString();
                                            string percentage = kvp.Value.ToString();
                                            ds.Tables[0].DefaultView.RowFilter = "app_no='" + app_no + "'";
                                            dv = ds.Tables[0].DefaultView;
                                            if (dv.Count > 0)
                                            {
                                                sno_Value++;
                                                FpSpread4.Sheets[0].RowCount++;
                                                if (Convert.ToString(dv[0]["admit_confirm"]) == "True")
                                                {
                                                    FpSpread4.Sheets[0].Rows[FpSpread4.Sheets[0].RowCount - 1].BackColor = Color.LightBlue;
                                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, FpSpread4.Sheets[0].ColumnCount - 1].Locked = true;
                                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, FpSpread4.Sheets[0].ColumnCount - 1].Value = 1;
                                                }
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(sno_Value);
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 0].Font.Name = "Times New Roman";
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 1].Text = Convert.ToString(dv[0]["stud_name"]);
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 1].Tag = Convert.ToString(dv[0]["criteria_Code"]);
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 1].Font.Name = "Times New Roman";
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(dv[0]["app_no"]);
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(dv[0]["app_formno"]);
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 2].Font.Name = "Times New Roman";
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 3].CellType = chkcel1;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 3].Font.Name = "Times New Roman";
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 4].CellType = but;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 4].Font.Name = "Times New Roman";
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                                                int col = 5;
                                                for (int i = FpSpread4.Sheets[0].ColumnCount - 1; i <= FpSpread4.Sheets[0].ColumnCount - 1; i++)
                                                {
                                                    for (int j = 0; j < FpSpread4.Sheets[0].RowCount; j++)
                                                    {
                                                        FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 1].CellType = chkcel1;
                                                        FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                                                    }
                                                }
                                                for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                                                {
                                                    col++;
                                                    string colmname = Convert.ToString(ds1.Tables[0].Rows[i]["column_name"]);
                                                    if (colmname.Trim() != "course_code")
                                                    {
                                                        if (colmname.Trim() != "SubjectPercen")
                                                        {
                                                            if (colmname.Trim() != "TamilOrginFromAndaman" && colmname.Trim() != "IsExService" && colmname.Trim() != "isdisable" && colmname.Trim() != "first_graduate" && colmname.Trim() != "CampusReq" && colmname.Trim() != "ncccadet" && colmname.Trim() != "Vocational_stream")
                                                            {
                                                                if (colmname.Trim() != "criteria_Code" && colmname.Trim() != "parent_statep" && colmname.Trim() != "mother_tongue" && colmname.Trim() != "parent_occu" && colmname.Trim() != "religion" && colmname.Trim() != "citizen" && colmname.Trim() != "community" && colmname.Trim() != "caste" && colmname.Trim() != "DistinctSport" && colmname.Trim() != "co_curricular" && colmname.Trim() != "medium" && colmname.Trim() != "university_code")
                                                                {
                                                                    if (colmname.Trim() != "usercode")
                                                                    {
                                                                        if (colmname.Trim() != "sex")
                                                                        {
                                                                            if (colmname.Trim() != "TotalPercentage")
                                                                            {
                                                                                if (colmname.Trim() == "app_formno")
                                                                                {
                                                                                    colmname = "app_formno";
                                                                                }
                                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(dv[0][colmname]);
                                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                            }
                                                                            else
                                                                            {
                                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(percentage);
                                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Center;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            string gendervalue = Convert.ToString(dv[0][colmname]);
                                                                            if (gendervalue == "0")
                                                                            {
                                                                                gendervalue = "Male";
                                                                            }
                                                                            else if (gendervalue == "1")
                                                                            {
                                                                                gendervalue = "Female";
                                                                            }
                                                                            else if (gendervalue == "2")
                                                                            {
                                                                                gendervalue = "Transgender";
                                                                            }
                                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(gendervalue);
                                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        string usernem = dt.GetFunction("select USER_ID   from UserMaster where User_code='" + Convert.ToString(dv[0][colmname]) + "' and college_code ='" + Session["collegecode"] + "'");
                                                                        FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                                        FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                        FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                        FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    string textval = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and college_code ='" + Session["collegecode"] + "'");
                                                                    if (textval == "0")
                                                                    {
                                                                        textval = "";
                                                                    }
                                                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Text = textval;
                                                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                string test_Value = "";
                                                                if (Convert.ToString(dv[0][colmname]) == "False")
                                                                {
                                                                    test_Value = "No";
                                                                }
                                                                else
                                                                {
                                                                    test_Value = "Yes";
                                                                }
                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(test_Value);
                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                            }
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                                                        {
                                                            string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                        }
                                                        if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                                        {
                                                            string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                            string dept = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0]["branch_code"]) + "' and (TextCriteria='branc') and college_code ='" + Session["collegecode"] + "'");
                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Text = usernem + " " + dept;
                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {
                                            break;
                                        }
                                    }
                                    FpSpread4.Sheets[0].FrozenColumnCount = 7;
                                    FpSpread4.Sheets[0].PageSize = FpSpread4.Sheets[0].RowCount;
                                    FpSpread4.Visible = true;
                                    ckbx.Visible = true;
                                    btnapprove.Visible = false;
                                    Button2.Visible = false;
                                    Button3.Visible = false;
                                    //Button9.Visible = false;
                                    lbltotalfeepaid.Visible = false;
                                    btnconform.Visible = true;
                                    //btnunpaid.Visible = true;

                                    if (DropDownList2.SelectedItem.Text == "Wait to Admitted")
                                    {
                                        lbltotalcount3.Text = " " + " Selected" + " " + ": " + FpSpread4.Sheets[0].RowCount;
                                        Button9.Visible = true;
                                        //btnleft.Visible = true;
                                        btnadmitprint.Visible = true;
                                        btnadmitcard.Visible = true;
                                        btnChallan.Visible = true;
                                    }
                                    else if (DropDownList2.SelectedItem.Text == "Admitted")   //Added By Jeyaprakash
                                    {
                                        lbltotalcount3.Text = " " + " Selected" + " " + ": " + FpSpread4.Sheets[0].RowCount;
                                        Button9.Visible = true;
                                        //btnleft.Visible = true;
                                        btnadmitprint.Visible = true;
                                        btnadmitcard.Visible = true;
                                        btnChallan.Visible = false;
                                        btnconform.Visible = false;
                                    }
                                    else if (DropDownList2.SelectedItem.Text == "Not Interested")
                                    {
                                        lbltotalcount3.Text = " " + " Not Interested" + " " + ": " + FpSpread4.Sheets[0].RowCount;
                                        Button9.Visible = false;
                                        btnleft.Visible = false;
                                        btnadmitprint.Visible = true;
                                        btnadmitcard.Visible = false;
                                        btnChallan.Visible = false;
                                    }
                                    else if (DropDownList2.SelectedItem.Text == "Un Paid")
                                    {
                                        lbltotalcount3.Text = " " + "Un Paid" + " " + ": " + FpSpread4.Sheets[0].RowCount;
                                    }
                                    lbltotalcount3.Visible = true;
                                    if (spsearch == 1)
                                    {
                                        TabContainer1.ActiveTab = TabContainer1.Tabs[3];
                                        spsearch = 0;
                                        TextBox4.Text = "";
                                        TextBox5.Text = "";
                                        firsttable.Attributes.Add("Style", "border-bottom-style: solid; border-top-style: solid;border-left-style: solid; border-right-style: solid; background-color: #e3e3ef;border-width: 0.2px; border-color: indigo; border-radius: 5px; left: 16px; top: 0px;position: absolute; width: 950px;");
                                        Label61.Visible = true;
                                        DropDownList2.Visible = true;
                                    }
                                    //if (DropDownList2.SelectedItem.Text == "Admitted")
                                    //{
                                    //    com = "select s.usercode,s.criteria_Code,seattype,batch_year,r.Stud_Name,CONVERT(VARCHAR(2),DATEPART(DAY, a.date_applied))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.date_applied)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR,a.date_applied))as date_applied,s.isview,t.TextVal,r.App_No,r.Roll_No,r.Roll_Admit,r.Reg_No,a.dob,a.parent_addressP,a.Streetp,a.Cityp,a.Districtp,a.parent_pincodep,a.Student_Mobile,a.StuPer_Id,a.app_no,a.Degree_Code from Registration r,applyn a,selectcriteria s,textvaltable t where a.app_no=r.App_No and  a.degree_code=r.degree_code and a.college_code=r.college_code and  a.batch_year=r.Batch_Year and s.app_no=a.app_no and s.college_code=a.college_code and s.degree_code=a.degree_code  and  s.college_code=r.college_code and s.degree_code=r.degree_code and s.app_no=r.App_No   and  t.college_code=a.college_code and t.college_code=r.college_code and t.college_code=s.college_code    and t.TextCode=s.textcode and t.TextCriteria='adres' and r.Batch_Year='" + txtbatch.Text + "' and r.degree_code='" + ddldept.SelectedValue + "'  and s.isapprove='4' and r.Adm_Date between'" + fromdate + "'  and '" + tomdate + "'";
                                    //}
                                    //else
                                    //{
                                    //    com = "select CONVERT(VARCHAR(2),DATEPART(DAY, a.dob))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.dob)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR, a.dob))as dob,s.isview,t.TextVal,d.Degree_Code,c.Edu_Level,a.app_no,a.app_formno,a.stud_name,a.sex,a.community,a.caste,a.religion,s.criteria_Code,a.Streetp,a.Cityp,a.Districtp,seattype,batch_year,a.parent_addressP,a.parent_pincodep,a.Student_Mobile,a.StuPer_Id from selectcriteria s,applyn a,Course c,Degree d,textvaltable t where c.Course_Id=d.Course_Id and c.college_code=d.college_code and c.college_code=a.college_code and d.Degree_Code=a.degree_code and d.college_code=a.college_code and  a.app_no=s.app_no and a.degree_code=s.degree_code and a.college_code=s.college_code and a.college_code=t.college_code and s.college_code=t.college_code  and c.college_code=t.college_code and d.college_code=t.college_code and s.textcode=t.TextCode and t.TextCriteria='reres' and batch_year='" + txtbatch.Text + "' and d.degree_code='" + ddldept.SelectedValue + "' and c.Course_Id='" + ddldegree.SelectedValue + "' and c.Edu_Level='" + ddledu.SelectedItem.Text + "' and s.isapprove='3' and s.select_date between '" + fromdate + "'  and '" + tomdate + "' ";
                                    //}
                                    //ds = dt.select_method_wo_parameter(com, "text");
                                    //if (ds.Tables[0].Rows.Count > 0)
                                    //{
                                    //    DataView dat = new DataView();
                                    //    for (int j = 0; j < FpSpread4.Sheets[0].RowCount; j++)
                                    //    {
                                    //        string app_no = Convert.ToString(FpSpread4.Sheets[0].Cells[0, 2].Text);
                                    //        ds.Tables[0].DefaultView.RowFilter = "app_no=" + app_no + "";
                                    //        dat = ds.Tables[0].DefaultView;
                                    //        if (dat.Count > 0)
                                    //        {
                                    //            //FpSpread4.Sheets[0].SetColumnMerge(c - 1, FarPoint.Web.Spread.Model.MergePolicy.Always);
                                    //            FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 2].Text = dat[0]["TextVal"].ToString();
                                    //            FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 2].Font.Name = "Times New Roman";
                                    //            FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 2].Font.Size = FontUnit.Medium;
                                    //            FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Left;
                                    //            //FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                    //        }
                                    //        else
                                    //        {
                                    //            // FpSpread4.Sheets[0].SetColumnMerge(c - 1, FarPoint.Web.Spread.Model.MergePolicy.Always);
                                    //            FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 2].Text = "";
                                    //            FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 2].Font.Name = "Times New Roman";
                                    //            FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 2].Font.Size = FontUnit.Medium;
                                    //            FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Left;
                                    //            // FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                    //        }
                                    //    }
                                    //}
                                }
                            }
                            else
                            {
                                DataView dvcheck = new DataView();
                                DataTable data = new DataTable();
                                DataTable dnew;
                                DataView dummyview;
                                dicsubcol.Clear();
                                if (ddummy.Tables[0].Rows.Count > 0)
                                {
                                    for (int du = 0; du < ddummy.Tables[0].Rows.Count; du++)
                                    {
                                        string app_no = Convert.ToString(ddummy.Tables[0].Rows[du]["app_no"]);
                                        ds.Tables[0].DefaultView.RowFilter = "app_no='" + app_no + "' and psubjectno='" + adminlang + "'";
                                        dvcheck = ds.Tables[0].DefaultView;
                                        if (dvcheck.Count > 0)
                                        {
                                            //string acuualmark = Convert.ToString(dvcheck[0]["acual_marks"]);
                                            //string maxmark = Convert.ToString(dvcheck[0]["max_marks"]);
                                            //double finalvalue = Convert.ToDouble(acuualmark) / Convert.ToDouble(maxmark) * Convert.ToDouble(100);
                                            //dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(finalvalue, 2)));
                                            if (Convert.ToString(dvcheck[0]["isgrade"]) == "False")
                                            {
                                                string acuualmark = Convert.ToString(dvcheck[0]["acual_marks"]);
                                                string maxmark = Convert.ToString(dvcheck[0]["max_marks"]);
                                                if (acuualmark.Trim() != "" && maxmark.Trim() != "")
                                                {
                                                    double finalvalue = Convert.ToDouble(acuualmark) / Convert.ToDouble(maxmark) * Convert.ToDouble(100);
                                                    dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(finalvalue, 2)));
                                                }
                                            }
                                            else
                                            {
                                                dnew = dvcheck.ToTable();
                                                if (gradeset.Tables[0].Rows.Count > 0)
                                                {
                                                    DataView gradview = new DataView();
                                                    if (dnew.Rows.Count > 0)
                                                    {
                                                        for (int jk = 0; jk < dnew.Rows.Count; jk++)
                                                        {
                                                            string grade = Convert.ToString(dnew.Rows[jk]["grade"]);
                                                            string max = Convert.ToString(dnew.Rows[jk]["max_marks"]);
                                                            gradeset.Tables[0].DefaultView.RowFilter = "Mark_Grade='" + grade + "'";
                                                            gradview = gradeset.Tables[0].DefaultView;
                                                            if (gradview.Count > 0)
                                                            {
                                                                string fromrange = Convert.ToString(gradview[0]["Frange"]);
                                                                string torange = Convert.ToString(gradview[0]["Trange"]);
                                                                if (fromrange.Trim() != "" && torange.Trim() != "")
                                                                {
                                                                    double midpoint = (Convert.ToDouble(fromrange) + Convert.ToDouble(torange)) / Convert.ToDouble(2);
                                                                    double finalvalue = Convert.ToDouble(midpoint) / Convert.ToDouble(max) * Convert.ToDouble(100);
                                                                    dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(finalvalue, 2)));
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                if (dicsubcol.Count > 0)
                                {
                                    if (DropDownList2.SelectedItem.Text != "Fee Paid")
                                    {
                                        dicsubcol = dicsubcol.OrderByDescending(x => x.Value).ToDictionary(x => x.Key, x => x.Value); ArrayList addroll = new ArrayList();
                                    }
                                    string value = Convert.ToString(txttop.Text);
                                    if (value.Trim() == "")
                                    {
                                        value = Convert.ToString(dicsubcol.Count);
                                    }
                                    int sno_Value = 0;
                                    foreach (var kvp in dicsubcol)
                                    {
                                        if (sno_Value < Convert.ToInt32(value))
                                        {
                                            string app_no = kvp.Key.ToString();
                                            string percentage = kvp.Value.ToString();
                                            ds.Tables[0].DefaultView.RowFilter = "app_no='" + app_no + "'";
                                            dv = ds.Tables[0].DefaultView;
                                            if (dv.Count > 0)
                                            {
                                                sno_Value++;
                                                FpSpread4.Sheets[0].RowCount++;
                                                if (Convert.ToString(dv[0]["admit_confirm"]) == "True")
                                                {
                                                    FpSpread4.Sheets[0].Rows[FpSpread4.Sheets[0].RowCount - 1].BackColor = Color.LightBlue;
                                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, FpSpread4.Sheets[0].ColumnCount - 1].Locked = true;
                                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, FpSpread4.Sheets[0].ColumnCount - 1].Value = 1;
                                                }
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(sno_Value);
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 0].Font.Name = "Times New Roman";
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 1].Text = Convert.ToString(dv[0]["stud_name"]);
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 1].Tag = Convert.ToString(dv[0]["criteria_Code"]);
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 1].Font.Name = "Times New Roman";
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(dv[0]["app_no"]);
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(dv[0]["app_formno"]);
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 2].Font.Name = "Times New Roman";
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 3].CellType = chkcel1;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 3].Font.Name = "Times New Roman";
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 4].CellType = but;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 4].Font.Name = "Times New Roman";
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 4].Font.Size = FontUnit.Medium;
                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                                                int col = 5;
                                                for (int i = FpSpread4.Sheets[0].ColumnCount - 1; i <= FpSpread4.Sheets[0].ColumnCount - 1; i++)
                                                {
                                                    for (int j = 0; j < FpSpread4.Sheets[0].RowCount; j++)
                                                    {
                                                        FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 1].CellType = chkcel1;
                                                        FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                                                    }
                                                }
                                                for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                                                {
                                                    col++;
                                                    string colmname = Convert.ToString(ds1.Tables[0].Rows[i]["column_name"]);
                                                    if (colmname.Trim() != "course_code")
                                                    {
                                                        if (colmname.Trim() != "SubjectPercen")
                                                        {
                                                            if (colmname.Trim() != "TamilOrginFromAndaman" && colmname.Trim() != "IsExService" && colmname.Trim() != "isdisable" && colmname.Trim() != "first_graduate" && colmname.Trim() != "CampusReq" && colmname.Trim() != "ncccadet" && colmname.Trim() != "Vocational_stream")
                                                            {
                                                                if (colmname.Trim() != "criteria_Code" && colmname.Trim() != "parent_statep" && colmname.Trim() != "mother_tongue" && colmname.Trim() != "parent_occu" && colmname.Trim() != "religion" && colmname.Trim() != "citizen" && colmname.Trim() != "community" && colmname.Trim() != "caste" && colmname.Trim() != "DistinctSport" && colmname.Trim() != "co_curricular" && colmname.Trim() != "medium" && colmname.Trim() != "university_code")
                                                                {
                                                                    if (colmname.Trim() != "usercode")
                                                                    {
                                                                        if (colmname.Trim() != "sex")
                                                                        {
                                                                            if (colmname.Trim() == "TotalPercentage")
                                                                            {
                                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(percentage);
                                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Center;
                                                                            }
                                                                            else
                                                                            {
                                                                                if (colmname.Trim() == "app_formno")
                                                                                {
                                                                                    colmname = "app_formno";
                                                                                }
                                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(dv[0][colmname]);
                                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            string gendervalue = Convert.ToString(dv[0][colmname]);
                                                                            if (gendervalue == "0")
                                                                            {
                                                                                gendervalue = "Male";
                                                                            }
                                                                            else if (gendervalue == "1")
                                                                            {
                                                                                gendervalue = "Female";
                                                                            }
                                                                            else if (gendervalue == "2")
                                                                            {
                                                                                gendervalue = "Transgender";
                                                                            }
                                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(gendervalue);
                                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        string usernem = dt.GetFunction("select USER_ID   from UserMaster where User_code='" + Convert.ToString(dv[0][colmname]) + "' and college_code ='" + Session["collegecode"] + "'");
                                                                        FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                                        FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                        FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                        FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    string textval = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and college_code ='" + Session["collegecode"] + "'");
                                                                    if (textval == "0")
                                                                    {
                                                                        textval = "";
                                                                    }
                                                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Text = textval;
                                                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                    FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                string test_Value = "";
                                                                if (Convert.ToString(dv[0][colmname]) == "False")
                                                                {
                                                                    test_Value = "No";
                                                                }
                                                                else
                                                                {
                                                                    test_Value = "Yes";
                                                                }
                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(test_Value);
                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                            }
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                                                        {
                                                            string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                        }
                                                        if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                                        {
                                                            string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                            string dept = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0]["branch_code"]) + "' and (TextCriteria='branc') and college_code ='" + Session["collegecode"] + "'");
                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Text = usernem + " " + dept;
                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                            FpSpread4.Sheets[0].Cells[FpSpread4.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {
                                            break;
                                        }
                                    }
                                    FpSpread4.Sheets[0].FrozenColumnCount = 7;
                                    FpSpread4.Sheets[0].PageSize = FpSpread4.Sheets[0].RowCount;
                                    FpSpread4.Visible = true;
                                    ckbx.Visible = true;
                                    btnapprove.Visible = false;
                                    Button2.Visible = false;
                                    Button3.Visible = false;
                                    lbltotalfeepaid.Visible = false;
                                    //btnconform.Visible = true;
                                    //btnChallan.Visible = true;
                                    //btnadmitprint.Visible = true;
                                    // btnunpaid.Visible = true;
                                    //btnChallan.Visible = true;
                                    //btnadmitcard.Visible = true;
                                    //btnadmitprint.Visible = true;
                                    //btnleft.Visible = true;
                                    //Button9.Visible = true;
                                    if (DropDownList2.SelectedItem.Text == "Admitted")   //Added By Jeyaprakash
                                    {
                                        lbltotalcount3.Text = " " + " Selected" + " " + ": " + FpSpread4.Sheets[0].RowCount;
                                        Button9.Visible = true;
                                        //btnleft.Visible = true;
                                        btnconform.Visible = false;
                                        btnadmitprint.Visible = true;
                                        btnadmitcard.Visible = true;
                                        btnChallan.Visible = false;
                                    }
                                    else if (DropDownList2.SelectedItem.Text == "Not Interested")
                                    {
                                        lbltotalcount3.Text = " " + " Not Interested" + " " + ": " + FpSpread4.Sheets[0].RowCount;
                                        Button9.Visible = false;
                                        btnleft.Visible = false;
                                        btnadmitprint.Visible = true;
                                        btnadmitcard.Visible = false;
                                        btnChallan.Visible = false;
                                    }
                                    else if (DropDownList2.SelectedItem.Text == "Wait to Admitted")
                                    {
                                        lbltotalcount3.Text = " " + " Wait to Admitted" + " " + ": " + FpSpread4.Sheets[0].RowCount;
                                        Button9.Visible = false;
                                        btnleft.Visible = false;
                                        btnconform.Visible = true;
                                        btnadmitprint.Visible = true;
                                        btnadmitcard.Visible = false;
                                        btnChallan.Visible = true;
                                    }
                                    else if (DropDownList2.SelectedItem.Text == "Un Paid")
                                    {
                                        lbltotalcount3.Text = " " + "Un Paid" + " " + ": " + FpSpread4.Sheets[0].RowCount;
                                    }
                                    lbltotalcount3.Visible = true;
                                    if (spsearch == 1)
                                    {
                                        TabContainer1.ActiveTab = TabContainer1.Tabs[3];
                                        spsearch = 0;
                                        TextBox4.Text = "";
                                        TextBox5.Text = "";
                                        firsttable.Attributes.Add("Style", "border-bottom-style: solid; border-top-style: solid;border-left-style: solid; border-right-style: solid; background-color: #e3e3ef;border-width: 0.2px; border-color: indigo; border-radius: 5px; left: 16px; top: 0px;position: absolute; width: 950px;");
                                        Label61.Visible = true;
                                        DropDownList2.Visible = true;
                                    }
                                    //if (DropDownList2.SelectedItem.Text == "Admitted")
                                    //{
                                    //    com = "select s.usercode,s.criteria_Code,seattype,batch_year,r.Stud_Name,CONVERT(VARCHAR(2),DATEPART(DAY, a.date_applied))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.date_applied)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR,a.date_applied))as date_applied,s.isview,t.TextVal,r.App_No,r.Roll_No,r.Roll_Admit,r.Reg_No,a.dob,a.parent_addressP,a.Streetp,a.Cityp,a.Districtp,a.parent_pincodep,a.Student_Mobile,a.StuPer_Id,a.app_no,a.Degree_Code from Registration r,applyn a,selectcriteria s,textvaltable t where a.app_no=r.App_No and  a.degree_code=r.degree_code and a.college_code=r.college_code and  a.batch_year=r.Batch_Year and s.app_no=a.app_no and s.college_code=a.college_code and s.degree_code=a.degree_code  and  s.college_code=r.college_code and s.degree_code=r.degree_code and s.app_no=r.App_No   and  t.college_code=a.college_code and t.college_code=r.college_code and t.college_code=s.college_code    and t.TextCode=s.textcode and t.TextCriteria='adres' and r.Batch_Year='" + txtbatch.Text + "' and r.degree_code='" + ddldept.SelectedValue + "'  and s.isapprove='4' and r.Adm_Date between'" + fromdate + "'  and '" + tomdate + "'";
                                    //}
                                    //else
                                    //{
                                    //    com = "select CONVERT(VARCHAR(2),DATEPART(DAY, a.dob))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.dob)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR, a.dob))as dob,s.isview,t.TextVal,d.Degree_Code,c.Edu_Level,a.app_no,a.app_formno,a.stud_name,a.sex,a.community,a.caste,a.religion,s.criteria_Code,a.Streetp,a.Cityp,a.Districtp,seattype,batch_year,a.parent_addressP,a.parent_pincodep,a.Student_Mobile,a.StuPer_Id from selectcriteria s,applyn a,Course c,Degree d,textvaltable t where c.Course_Id=d.Course_Id and c.college_code=d.college_code and c.college_code=a.college_code and d.Degree_Code=a.degree_code and d.college_code=a.college_code and  a.app_no=s.app_no and a.degree_code=s.degree_code and a.college_code=s.college_code and a.college_code=t.college_code and s.college_code=t.college_code  and c.college_code=t.college_code and d.college_code=t.college_code and s.textcode=t.TextCode and t.TextCriteria='reres' and batch_year='" + txtbatch.Text + "' and d.degree_code='" + ddldept.SelectedValue + "' and c.Course_Id='" + ddldegree.SelectedValue + "' and c.Edu_Level='" + ddledu.SelectedItem.Text + "' and s.isapprove='3' and s.select_date between '" + fromdate + "'  and '" + tomdate + "' ";
                                    //}
                                    //ds = dt.select_method_wo_parameter(com, "text");
                                    //if (ds.Tables[0].Rows.Count > 0)
                                    //{
                                    //    DataView dat = new DataView();
                                    //    for (int j = 0; j < FpSpread4.Sheets[0].RowCount; j++)
                                    //    {
                                    //        string app_no = Convert.ToString(FpSpread4.Sheets[0].Cells[0, 2].Text);
                                    //        ds.Tables[0].DefaultView.RowFilter = "app_no=" + app_no + "";
                                    //        dat = ds.Tables[0].DefaultView;
                                    //        if (dat.Count > 0)
                                    //        {
                                    //            //FpSpread4.Sheets[0].SetColumnMerge(c - 1, FarPoint.Web.Spread.Model.MergePolicy.Always);
                                    //            FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 2].Text = dat[0]["TextVal"].ToString();
                                    //            FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 2].Font.Name = "Times New Roman";
                                    //            FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 2].Font.Size = FontUnit.Medium;
                                    //            FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Left;
                                    //            //FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                    //        }
                                    //        else
                                    //        {
                                    //            // FpSpread4.Sheets[0].SetColumnMerge(c - 1, FarPoint.Web.Spread.Model.MergePolicy.Always);
                                    //            FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 2].Text = "";
                                    //            FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 2].Font.Name = "Times New Roman";
                                    //            FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 2].Font.Size = FontUnit.Medium;
                                    //            FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 2].HorizontalAlign = HorizontalAlign.Left;
                                    //            // FpSpread4.Sheets[0].Cells[j, FpSpread4.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                    //        }
                                    //    }
                                    //}
                                }
                                else
                                {
                                    lblmg1.Visible = true;
                                    lblmg1.Text = "No Records Found";
                                    lbltotalcount.Visible = false;
                                    lbltotalcount1.Visible = false;
                                    lbltotalcount2.Visible = false;
                                    lbltotalcount3.Visible = false;
                                    FpSpread4.Visible = false;
                                    FpSpread3.Visible = false;
                                    FpSpread2.Visible = false;
                                    FpSpread1.Visible = false;
                                    spreadFeeConfirm.Visible = false;
                                    Label66.Visible = false;
                                    //  lblnew2.Text = "0" + "New";
                                    Label68.Visible = false;
                                    Label67.Visible = false;
                                    Label69.Visible = false;
                                    btnapprove.Visible = false;
                                    Button2.Visible = false;
                                    Button3.Visible = false;
                                    Button9.Visible = false;
                                    lbltotalfeepaid.Visible = false;
                                    lbltotalfeepaid_value.Visible = false;
                                    ckbx.Visible = false;
                                    btnconform.Visible = false;
                                    btnunpaid.Visible = false;
                                    btnChallan.Visible = false;
                                    btnadmitcard.Visible = false;
                                    btnadmitprint.Visible = false;
                                    btnleft.Visible = false;
                                    //  btnreject.Visible = false;
                                }
                            }
                            //else
                            //{
                            //    lblmg1.Visible = true;
                            //    lblmg1.Text = "Please Select All Values";
                            //    FpSpread4.Visible = false;
                            //    Label66.Visible = false;
                            //    Label68.Visible = false;
                            //    Label67.Visible = false;
                            //    Label69.Visible = false;
                            //    btnapprove.Visible = false;
                            //    Button2.Visible = false;
                            //    Button3.Visible = false;
                            //    Button9.Visible = false;
                            //    lbltotalfeepaid.Visible = false;
                            //    lbltotalfeepaid_value.Visible = false;
                            //    ckbx.Visible = false;
                            //    btnconform.Visible = false;
                            //    btnadmitcard.Visible = false;
                            //    // btnreject.Visible = false;
                            //}
                        }
                        else
                        {
                            if (spsearch == 1 && DropDownList2.SelectedItem.Text != "Un Paid")
                            {
                                DropDownList2.SelectedIndex = 1;
                                spread1();
                            }
                            else
                            {
                                lblmg1.Visible = true;
                                lblmg1.Text = "No Records Found";
                                lbltotalcount.Visible = false;
                                lbltotalcount1.Visible = false;
                                lbltotalcount2.Visible = false;
                                lbltotalcount3.Visible = false;
                                FpSpread4.Visible = false;
                                FpSpread3.Visible = false;
                                FpSpread2.Visible = false;
                                FpSpread1.Visible = false;
                                spreadFeeConfirm.Visible = false;
                                Label66.Visible = false;
                                //  lblnew2.Text = "0" + "New";
                                Label68.Visible = false;
                                Label67.Visible = false;
                                Label69.Visible = false;
                                btnapprove.Visible = false;
                                Button2.Visible = false;
                                Button3.Visible = false;
                                Button9.Visible = false;
                                lbltotalfeepaid.Visible = false;
                                lbltotalfeepaid_value.Visible = false;
                                ckbx.Visible = false;
                                btnconform.Visible = false;
                                btnunpaid.Visible = false;
                                btnChallan.Visible = false;
                                btnadmitcard.Visible = false;
                                btnadmitprint.Visible = false;
                                btnleft.Visible = false;
                            }
                            //  btnreject.Visible = false;
                        }
                    }
                }
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    public void spread2()
    {
        try
        {
            lbltotalcount.Visible = false;
            FpSpread1.SaveChanges();
            if (ddledu.SelectedItem.Text == "PG")
            {
                int sno = 0;
                FpSpread1.Sheets[0].RowCount = 0;
                FpSpread1.Sheets[0].ColumnCount = 4;
                FpSpread1.Sheets[0].RowHeader.Visible = false;
                FpSpread1.Sheets[0].AutoPostBack = false;
                FpSpread1.Height = 360;
                FpSpread1.Width = 930;
                FpSpread1.CommandBar.Visible = false;
                FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
                darkstyle.BackColor = Color.Brown;
                darkstyle.ForeColor = Color.White;
                FpSpread1.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
                Dictionary<int, int> dicsubcol = new Dictionary<int, int>();
                Dictionary<int, int> totalpercentage = new Dictionary<int, int>();
                FarPoint.Web.Spread.CheckBoxCellType chkcel1 = new FarPoint.Web.Spread.CheckBoxCellType();
                chkcel1.AutoPostBack = false;
                FarPoint.Web.Spread.TextCellType txt = new FarPoint.Web.Spread.TextCellType();
                FarPoint.Web.Spread.ButtonCellType but = new FarPoint.Web.Spread.ButtonCellType("MyCommand", FarPoint.Web.Spread.ButtonType.ImageButton, "~/images/view11.png");
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Text = "App No";
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Text = "View";
                // FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].BackColor = Color.MistyRose;
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                FpSpread1.Sheets[0].Columns[2].Visible = false;
                FpSpread1.Sheets[0].Columns[0].Width = 40;
                FpSpread1.Sheets[0].Columns[1].Width = 50;
                FpSpread1.Sheets[0].Columns[0].Visible = true;
                string[] frmdat = TextBox2.Text.Split(' ');
                string[] fdate = frmdat[0].Split('/');
                string fromdate = fdate[2].ToString() + "-" + fdate[1].ToString() + "-" + fdate[0].ToString();
                string[] trmdat = TextBox3.Text.Split(' ');
                string[] tdate = trmdat[0].Split('/');
                string tomdate = tdate[2].ToString() + "-" + tdate[1].ToString() + "-" + tdate[0].ToString();
                string com = "";
                if (txtbatch.Text != " " && ddldegree.SelectedItem.Text != "--Select--" && ddledu.SelectedItem.Text != "--Select--" && ddldept.SelectedItem.Text != "--Select--" && ddltype.SelectedItem.Text != "--Select--")
                {
                    com = "select s.usercode,s.criteria_Code,a.app_no,app_formno,CONVERT(varchar(10), date_applied,103) as date_applied,stud_name,sex,Relationship,parent_name ,CONVERT(varchar(10), dob,103) as dob ,parent_occu,mother_tongue,religion,citizen,community,caste,TamilOrginFromAndaman,IsExService,handy,visualhandy,first_graduate,CampusReq,DistinctSport,co_curricular,parent_addressC,Streetc,Cityc,parent_statec,Countryc,parent_pincodec,Student_Mobile,StuPer_Id,parent_phnoc,alter_mobileno,parent_addressP,Streetp,cityp,parent_statep,Countryp,parent_pincodep,parent_phnop,a.degree_code,batch_year,a.college_code,SubCaste,isdisable ,isdisabledisc,islearningdis,missionarydisc,MissionaryChild,seattype,current_semester,ncccadet,Institute_name,instaddress,medium,isgrade,Part1Language,Part2Language,percentage,university_code,uni_state,psubjectno,registerno,acual_marks,max_marks,pass_month,pass_year,noofattempt,p.grade,st.course_code,st.branch_code,st.tancet_mark,Vocational_stream,majorallied_percent,a.Alternativedegree_code,st.securedmark from selectcriteria s,applyn a,Course c,Degree d,Stud_prev_details st,perv_marks_history p,textvaltable t where c.Course_Id=d.Course_Id and c.college_code=d.college_code and c.college_code=a.college_code and d.Degree_Code=a.degree_code and d.college_code=a.college_code and  a.app_no=s.app_no and a.degree_code=s.degree_code and a.college_code=s.college_code  and  st.app_no=a.app_no and st.app_no=s.app_no and p.course_entno=st.course_entno and t.TextCode=p.psubjectno and   t.college_code=a.college_code  and t.college_code=c.college_code and t.college_code=d.college_code and  batch_year='" + txtbatch.Text + "' and d.degree_code='" + ddldept.SelectedValue + "' and c.Course_Id='" + ddldegree.SelectedValue + "' and c.Edu_Level='" + ddledu.SelectedItem.Text + "' and s.isapprove='1'  and t.TextCriteria='subje'";
                    //com = "select CONVERT(VARCHAR(2),DATEPART(DAY, a.dob))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.dob)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR, a.dob))as dob,d.Degree_Code,c.Edu_Level,a.app_no,a.app_formno,a.stud_name,a.sex,a.community,a.caste,a.religion,a.Streetp,a.Cityp,a.Districtp,a.parent_addressP,a.parent_pincodep,a.Student_Mobile,a.emailp from applyn a,Course c,Degree d where c.Course_Id=d.Course_Id and c.college_code=d.college_code and c.college_code=a.college_code and d.Degree_Code=a.degree_code and d.college_code=a.college_code  and a.app_no  in (select app_no from selectcriteria aps where usercode='" + user_code + "' and aps.app_no=a.app_no and isapprove=0) and batch_year='" + ddlbatch.SelectedItem.Text + "' and d.degree_code='" + ddldept.SelectedValue + "' and c.Course_Id='" + ddldegree.SelectedValue + "' and c.Edu_Level='" + ddledu.SelectedItem.Text + "'";
                    //  btnreject.Enabled = false;
                    //if (spsearch == 1)
                    //{
                    if (TextBox4.Text != "")
                    {
                        com = com + "and a.stud_name like'%" + TextBox4.Text + "'%";
                        // com1 = com1 + "and a.stud_name like'%" + TextBox4.Text + "'%";
                    }
                    if (TextBox5.Text != "")
                    {
                        com = com + "and a.Student_Mobile='" + TextBox5.Text + "'";
                    }
                    if (TextBox6.Text != "")
                    {
                        com = com + "and a.app_formno='" + TextBox6.Text + "'";
                    }
                    //}
                    //else
                    //{
                    com = com + " and s.select_date between '" + fromdate + "'  and '" + tomdate + "'";
                    //}
                    if (ddltype.SelectedItem.Text != "All")
                    {
                        com = com + "and c.type='" + ddltype.SelectedItem.Text + "'";
                    }
                    string admin = "";
                    // string adm = "select * from admitcolumnset where textcriteria = 'relig' and user_code='" + user_code + "'";
                    string adm = "select column_name from admitcolumnset where (textcriteria ='community' or textcriteria ='relig') and setcolumn ='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    ds1 = dt.select_method_wo_parameter(adm, "text"); // jairam
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                        {
                            if (admin == "")
                            {
                                admin = ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                            else
                            {
                                admin = admin + "," + ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                        }
                        if (admin.Trim() != "")
                        {
                            string TextValuenew = d2.GetFunction("select TextCode  from TextValTable where TextCriteria ='comm' and TextCriteria2 ='comm1' and TextVal ='Others'");
                            if (TextValuenew.Trim() != "" && TextValuenew.Trim() != "0")
                            {
                                admin = admin + "," + TextValuenew;
                            }
                        }
                        if (orderflage == true)
                        {
                            com = com + "and s.criteria_Code='" + textcode + "'";
                        }
                        else
                        {
                            string region = rs.GetSelectedItemsValueAsString(cbl_religion);
                            if (region.Trim() == "")
                                com = com + "and ( a.religion in (" + admin + ") or a.community in (" + admin + "))";
                            else
                                com = com + "and ( a.religion in ('" + region + "') and a.community in (" + admin + "))";
                        }
                    }
                    if (cb_voc.Checked == true)
                        com += " and isnull(sd.Vocational_stream,0)='1'";
                    string board = rs.GetSelectedItemsValueAsString(cbl_BoardUniv);
                    string medium = rs.GetSelectedItemsValueAsString(cbl_comm);
                    string attempts = rs.GetSelectedItemsValueAsString(cblAttempt);
                    if (medium.Trim() != "")
                        com += " and sd.medium in('" + medium + "')";
                    if (attempts.Trim() != "")
                        com += " and noofattempt in('" + attempts + "')";
                    if (board.Trim() != "")
                        com += " and sd.Course_code in('" + board + "')";
                    string admin1 = "";
                    string adm1 = "select * from admitcolumnset where textcriteria = 'subjec' and setcolumn='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    ds1 = dt.select_method_wo_parameter(adm1, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                        {
                            if (admin1 == "")
                            {
                                admin1 = ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                            else
                            {
                                admin1 = admin1 + "," + ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                        }
                        if (ddledu.SelectedItem.Text == "UG")
                        {
                            com = com + "and p.psubjectno in (" + admin1 + ")";
                        }
                        if (ddledu.SelectedItem.Text == "PG")
                        {
                            com = com + "and st.branch_code in (" + admin1 + ")";
                        }
                    }
                    if (com.Trim() != "")
                    {
                        if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                        {
                            com = com + " order by percentage desc";
                            // com1 = com1 + " order by percentage desc";
                        }
                        if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                        {
                            com = com + " order by majorallied_percent desc";
                            // com1 = com1 + " order by majorallied_percent desc";
                        }
                    }
                    ds = dt.select_method_wo_parameter(com, "text");
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        if (spsearch == 1)
                        {
                            TabContainer1.ActiveTab = TabContainer1.Tabs[1];
                            spsearch = 0;
                            TextBox4.Text = "";
                            TextBox5.Text = "";
                        }
                        string colm = "";
                        string priority = " select * from admitcolumnset where  textcriteria='column' and College_Code ='" + college_code + "' order by CONVERT(int, priority )";
                        ds1 = dt.select_method_wo_parameter(priority, "text");
                        if (ds1.Tables[0].Rows.Count > 0)
                        {
                            for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                            {
                                colm = ds1.Tables[0].Rows[i]["column_name"].ToString();
                                FpSpread1.Sheets[0].ColumnCount++;
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() != "User Name")
                                {
                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = ds1.Tables[0].Rows[i]["setcolumn"].ToString();
                                    // FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Locked = true;
                                }
                                else
                                {
                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "ShortListed By";
                                    // FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Locked = true;
                                }
                                if (FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text == "Subject Percentage")
                                {
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Width = 90;
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "State")
                                {
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "Mother Tongue")
                                {
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                                if (ddltype.SelectedItem.Text.ToString().ToUpper() != "MCA")
                                {
                                    if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "TANCET Mark")
                                    {
                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
                                    }
                                }
                                if (FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text == "DOB")
                                {
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Width = 90;
                                }
                                if (FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text == "Student Name")
                                {
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text == "Address")
                                {
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text == "City")
                                {
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Width = 100;
                                }
                                if (FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text == "Email_Id")
                                {
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text == "Mobile No")
                                {
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Width = 100;
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].CellType = txt;
                                }
                                if (FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text == "Subject")
                                {
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Width = 180;
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].CellType = txt;
                                }
                            }
                            FpSpread1.Sheets[0].RowCount = 0;
                            ArrayList addroll = new ArrayList();
                            int sno_Value = 0;
                            for (int row = 0; row < ds.Tables[0].Rows.Count; row++)
                            {
                                string app_no = Convert.ToString(ds.Tables[0].Rows[row]["app_no"]);
                                if (!addroll.Contains(app_no))
                                {
                                    addroll.Add(app_no);
                                    sno_Value++;
                                    FpSpread1.Sheets[0].RowCount++;
                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(sno_Value);
                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[row]["criteria_Code"]);
                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].Note = Convert.ToString(ds.Tables[0].Rows[row]["seattype"]);
                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].Font.Name = "Times New Roman";
                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 1].CellType = chkcel1;
                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 1].Value = 0;
                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 1].Font.Name = "Times New Roman";
                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(ds.Tables[0].Rows[row]["app_no"]);
                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(ds.Tables[0].Rows[row]["app_formno"]);
                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].Note = Convert.ToString(ds.Tables[0].Rows[row]["batch_year"]);
                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].Font.Name = "Times New Roman";
                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 3].CellType = but;
                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 3].Font.Name = "Times New Roman";
                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                                    int col = 4;
                                    for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                                    {
                                        col++;
                                        string colmname = Convert.ToString(ds1.Tables[0].Rows[i]["column_name"]);
                                        if (colmname.Trim() != "course_code")
                                        {
                                            if (colmname.Trim() != "SubjectPercen")
                                            {
                                                if (colmname.Trim() != "TamilOrginFromAndaman" && colmname.Trim() != "IsExService" && colmname.Trim() != "isdisable" && colmname.Trim() != "first_graduate" && colmname.Trim() != "CampusReq" && colmname.Trim() != "ncccadet" && colmname.Trim() != "Vocational_stream")
                                                {
                                                    if (colmname.Trim() != "criteria_Code" && colmname.Trim() != "parent_statep" && colmname.Trim() != "mother_tongue" && colmname.Trim() != "parent_occu" && colmname.Trim() != "religion" && colmname.Trim() != "citizen" && colmname.Trim() != "community" && colmname.Trim() != "caste" && colmname.Trim() != "DistinctSport" && colmname.Trim() != "co_curricular" && colmname.Trim() != "medium" && colmname.Trim() != "university_code")
                                                    {
                                                        if (colmname.Trim() != "sex")
                                                        {
                                                            if (colmname.Trim() != "usercode")
                                                            {
                                                                if (colmname.Trim() == "TotalPercentage")
                                                                {
                                                                    if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                                                                    {
                                                                        colmname = "percentage";
                                                                    }
                                                                    if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                                                    {
                                                                        colmname = "majorallied_percent";
                                                                    }
                                                                }
                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(ds.Tables[0].Rows[row][colmname]);
                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                            }
                                                            else
                                                            {
                                                                string usernem = dt.GetFunction("select USER_ID   from UserMaster where User_code='" + Convert.ToString(ds.Tables[0].Rows[row][colmname]) + "' and college_code ='" + Session["collegecode"] + "'");
                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            string gendervalue = Convert.ToString(ds.Tables[0].Rows[row][colmname]);
                                                            if (gendervalue == "0")
                                                            {
                                                                gendervalue = "Male";
                                                            }
                                                            else if (gendervalue == "1")
                                                            {
                                                                gendervalue = "Female";
                                                            }
                                                            else if (gendervalue == "2")
                                                            {
                                                                gendervalue = "Transgender";
                                                            }
                                                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(gendervalue);
                                                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        string textval = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(ds.Tables[0].Rows[row][colmname]) + "'  and college_code ='" + Session["collegecode"] + "'");
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Text = textval;
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                    }
                                                }
                                                else
                                                {
                                                    string test_Value = "";
                                                    if (Convert.ToString(ds.Tables[0].Rows[row][colmname]) == "False")
                                                    {
                                                        test_Value = "No";
                                                    }
                                                    else
                                                    {
                                                        test_Value = "Yes";
                                                    }
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(test_Value);
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                }
                                            }
                                        }
                                        else
                                        {
                                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                                            {
                                                string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(ds.Tables[0].Rows[row][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                            }
                                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                            {
                                                string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(ds.Tables[0].Rows[row][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                string dept = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(ds.Tables[0].Rows[row]["branch_code"]) + "' and (TextCriteria='branc') and college_code ='" + Session["collegecode"] + "'");
                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Text = usernem + " " + dept;
                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                            }
                                        }
                                    }
                                }
                            }
                            FpSpread1.Sheets[0].PageSize = FpSpread1.Sheets[0].RowCount;
                            FpSpread1.Visible = true;
                            lbltotalcount1.Text = " " + " ShortList" + " " + ": " + FpSpread1.Sheets[0].RowCount;
                            lbltotalcount1.Visible = true;
                            ckbx.Visible = true;
                            btnconform.Visible = false;
                            btnunpaid.Visible = false;
                            btnChallan.Visible = false;
                            btnadmitcard.Visible = false;
                            btnadmitprint.Visible = false;
                            btnleft.Visible = false;
                            if (spsearch == 1)
                            {
                                TabContainer1.ActiveTab = TabContainer1.Tabs[1];
                                spsearch = 0;
                                TextBox4.Text = "";
                                TextBox5.Text = "";
                            }
                        }
                    }
                    else
                    {
                        if (spsearch != 1)
                        {
                            lblmg2.Visible = true;
                            lblmg2.Text = "No Records Found";
                            FpSpread1.Visible = false;
                            btnapprove.Visible = false;
                            Button2.Visible = false;
                            Button3.Visible = false;
                            Button9.Visible = false;
                            // lblnew.Text = "0" + " New";
                            lbltotalcount1.Text = " " + " ShortList" + " " + ": " + "0";
                            // Button3.Visible = false;
                            //  Button9.Visible = false;
                            Label66.Visible = false;
                            Label68.Visible = false;
                            Label67.Visible = false;
                            Label69.Visible = false;
                            lbltotalcount.Visible = false;
                            lbltotalcount1.Visible = false;
                            lbltotalcount2.Visible = false;
                            lbltotalcount3.Visible = false;
                            lbltotalfeepaid.Visible = false;
                            lbltotalfeepaid_value.Visible = false;
                            ckbx.Visible = false;
                            btnconform.Visible = false;
                            btnunpaid.Visible = false;
                            btnChallan.Visible = false;
                            btnadmitcard.Visible = false;
                            btnadmitprint.Visible = false;
                            btnleft.Visible = false;
                            // btnreject.Visible = false;
                        }
                        else
                        {
                            spread3();
                        }
                    }
                }
                else
                {
                    lblmg2.Visible = true;
                    lblmg2.Text = "Please Select All Values";
                    FpSpread1.Visible = false;
                    btnapprove.Visible = false;
                    Button2.Visible = false;
                    Button3.Visible = false;
                    Button9.Visible = false;
                    lbltotalcount.Visible = false;
                    lbltotalcount1.Visible = false;
                    // btnreject.Visible = false;
                    Label66.Visible = false;
                    Label68.Visible = false;
                    Label67.Visible = false;
                    Label69.Visible = false;
                    lbltotalfeepaid.Visible = false;
                    lbltotalfeepaid_value.Visible = false;
                    ckbx.Visible = false;
                    btnconform.Visible = false;
                    btnunpaid.Visible = false;
                    btnChallan.Visible = false;
                    btnadmitcard.Visible = false;
                    btnadmitprint.Visible = false;
                    btnleft.Visible = false;
                }
            }
            if (ddledu.SelectedItem.Text == "UG")
            {
                int sno = 0;
                FpSpread1.Sheets[0].RowCount = 0;
                FpSpread1.Sheets[0].ColumnCount = 4;
                FpSpread1.Sheets[0].RowHeader.Visible = false;
                FpSpread1.Sheets[0].AutoPostBack = false;
                FpSpread1.Height = 360;
                FpSpread1.Width = 930;
                FpSpread1.CommandBar.Visible = false;
                FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
                darkstyle.BackColor = Color.Brown;
                darkstyle.ForeColor = Color.White;
                FpSpread1.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
                Dictionary<int, double> dicsubcol = new Dictionary<int, double>();
                Dictionary<int, int> totalpercentage = new Dictionary<int, int>();
                FarPoint.Web.Spread.CheckBoxCellType chkcel1 = new FarPoint.Web.Spread.CheckBoxCellType();
                chkcel1.AutoPostBack = false;
                FarPoint.Web.Spread.TextCellType txt = new FarPoint.Web.Spread.TextCellType();
                FarPoint.Web.Spread.ButtonCellType but = new FarPoint.Web.Spread.ButtonCellType("MyCommand", FarPoint.Web.Spread.ButtonType.ImageButton, "~/images/view11.png");
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Text = "App No";
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Text = "View";
                // FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].BackColor = Color.MistyRose;
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                FpSpread1.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                FpSpread1.Sheets[0].Columns[2].Visible = false;
                FpSpread1.Sheets[0].Columns[0].Width = 40;
                FpSpread1.Sheets[0].Columns[1].Width = 50;
                FpSpread1.Sheets[0].Columns[0].Visible = true;
                string[] frmdat = TextBox2.Text.Split(' ');
                string[] fdate = frmdat[0].Split('/');
                string fromdate = fdate[2].ToString() + "-" + fdate[1].ToString() + "-" + fdate[0].ToString();
                string[] trmdat = TextBox3.Text.Split(' ');
                string[] tdate = trmdat[0].Split('/');
                string tomdate = tdate[2].ToString() + "-" + tdate[1].ToString() + "-" + tdate[0].ToString();
                string com = "";
                string com1 = "";
                if (txtbatch.Text != " " && ddldegree.SelectedItem.Text != "--Select--" && ddledu.SelectedItem.Text != "--Select--" && ddldept.SelectedItem.Text != "--Select--" && ddltype.SelectedItem.Text != "--Select--")
                {
                    com = "select s.usercode,s.criteria_Code,a.app_no,app_formno,CONVERT(varchar(10), date_applied,103) as date_applied,stud_name,sex,Relationship,parent_name ,CONVERT(varchar(10), dob,103) as dob ,parent_occu,mother_tongue,religion,citizen,community,caste,TamilOrginFromAndaman,IsExService,handy,visualhandy,first_graduate,CampusReq,DistinctSport,co_curricular,parent_addressC,Streetc,Cityc,parent_statec,Countryc,parent_pincodec,Student_Mobile,StuPer_Id,parent_phnoc,alter_mobileno,parent_addressP,Streetp,cityp,parent_statep,Countryp,parent_pincodep,parent_phnop,a.degree_code,batch_year,a.college_code,SubCaste,isdisable ,isdisabledisc,islearningdis,missionarydisc,MissionaryChild,seattype,current_semester,ncccadet,Institute_name,instaddress,medium,isgrade,Part1Language,Part2Language,percentage,university_code,uni_state,psubjectno,registerno,acual_marks,max_marks,pass_month,pass_year,noofattempt,ph.grade,sd.course_code,sd.branch_code,sd.tancet_mark,Vocational_stream,a.Alternativedegree_code,sd.securedmark  from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code   and s.isapprove =1 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1";
                    if (ddldept.SelectedItem.Text == "English Literature" || ddldept.SelectedItem.Text == "English" || ddldept.SelectedItem.Text == "Tamil Literature")
                    {
                        com1 = " select distinct a.app_no,acual_marks from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code  and s.isapprove =1 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1  ";
                    }
                    else
                    {
                        com1 = " select distinct a.app_no,percentage from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code   and s.isapprove =1 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1  ";
                    }
                    //if (spsearch == 1)
                    //{
                    if (TextBox4.Text != "")
                    {
                        com = com + "and a.stud_name like'%" + TextBox4.Text + "%'";//modified
                        com1 = com1 + "and a.stud_name like'%" + TextBox4.Text + "%'";
                    }
                    if (TextBox5.Text != "")
                    {
                        com = com + "and a.Student_Mobile='" + TextBox5.Text + "'";
                        com1 = com1 + "and a.Student_Mobile='" + TextBox5.Text + "'";
                    }
                    if (TextBox6.Text != "")
                    {
                        com = com + "and a.app_formno='" + TextBox6.Text + "'";
                        com1 = com1 + "and a.app_formno='" + TextBox6.Text + "'";
                    }
                    //}
                    //else
                    //{
                    com = com + " and select_date between '" + fromdate + "' and '" + tomdate + "'";
                    com1 = com1 + " and select_date between '" + fromdate + "' and '" + tomdate + "'";
                    //}
                    string adminlang = "";
                    string adm3 = "select * from admitcolumnset where textcriteria = 'subjel' and setcolumn='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    ds1.Clear();
                    ds1 = dt.select_method_wo_parameter(adm3, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                        {
                            if (adminlang == "")
                            {
                                adminlang = "" + Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                            }
                            else
                            {
                                adminlang = adminlang + "'" + "," + "'" + Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                            }
                        }
                    }
                    if (adminlang.Trim() == "")
                    {
                        com = com + "  and psubjectno not in(sd.Part1Language,sd.Part2Language)";
                        com1 = com1 + "  and psubjectno not in(sd.Part1Language,sd.Part2Language)";
                    }
                    else
                    {
                        com = com + " and (sd.Part1Language in('" + adminlang + "') or sd.Part2Language in ('" + adminlang + "'))";
                        com1 = com1 + " and ( sd.Part1Language in('" + adminlang + "') or sd.Part2Language in ('" + adminlang + "') )";
                    }
                    string admin = "";
                    // string adm = "select * from admitcolumnset where textcriteria = 'relig' and user_code='" + user_code + "'";
                    string adm = "select column_name from admitcolumnset where (textcriteria ='community' or textcriteria ='relig') and setcolumn ='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    ds1 = dt.select_method_wo_parameter(adm, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                        {
                            if (admin == "")
                            {
                                admin = ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                            else
                            {
                                admin = admin + "," + ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                        }
                        if (admin.Trim() != "")
                        {
                            string TextValuenew = d2.GetFunction("select TextCode  from TextValTable where TextCriteria ='comm' and TextCriteria2 ='comm1' and TextVal ='Others'");
                            if (TextValuenew.Trim() != "" && TextValuenew.Trim() != "0")
                            {
                                admin = admin + "," + TextValuenew;
                            }
                        }
                        if (orderflage == true)
                        {
                            com = com + "and s.criteria_Code='" + textcode + "'";
                            com1 = com1 + "and s.criteria_Code='" + textcode + "'";
                        }
                        else
                        {
                            string region = rs.GetSelectedItemsValueAsString(cbl_religion);
                            if (region.Trim() == "")
                            {
                                com = com + "and ( a.religion in (" + admin + ") or a.community in (" + admin + "))";
                                com1 = com1 + "and ( a.religion in (" + admin + ") or a.community in (" + admin + "))";
                            }
                            else
                            {
                                com = com + "and ( a.religion in ('" + region + "') and a.community in (" + admin + "))";
                                com1 = com1 + "and ( a.religion in ('" + region + "') and a.community in (" + admin + "))";
                            }
                        }
                        if (cb_voc.Checked == true)
                            com += " and isnull(sd.Vocational_stream,0)='1'";
                        string board = rs.GetSelectedItemsValueAsString(cbl_BoardUniv);
                        string medium = rs.GetSelectedItemsValueAsString(cbl_comm);
                        string attempts = rs.GetSelectedItemsValueAsString(cblAttempt);
                        if (medium.Trim() != "")
                            com += " and sd.medium in('" + medium + "')";
                        if (attempts.Trim() != "")
                            com += " and noofattempt in('" + attempts + "')";
                        if (board.Trim() != "")
                            com += " and sd.Course_code in('" + board + "')";
                        int dummycount = 0;
                        string admin1 = "";
                        // string adm1 = "select * from admitcolumnset where textcriteria = 'subjec' and user_code='" + user_code + "'";
                        string adm1 = "select * from admitcolumnset where textcriteria = 'subjec' and setcolumn='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                        ds1.Clear();
                        ds1 = dt.select_method_wo_parameter(adm1, "text");
                        if (ds1.Tables[0].Rows.Count > 0)
                        {
                            for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                            {
                                if (admin1 == "")
                                {
                                    dummycount++;
                                    admin1 = Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                                }
                                else
                                {
                                    dummycount++;
                                    admin1 = admin1 + "," + Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                                }
                            }
                        }
                        string admin2 = "";
                        string adm2 = "select * from admitcolumnset where textcriteria = 'subjea' and setcolumn='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                        ds1.Clear();
                        ds1 = dt.select_method_wo_parameter(adm2, "text");
                        if (ds1.Tables[0].Rows.Count > 0)
                        {
                            for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                            {
                                if (admin2 == "")
                                {
                                    admin2 = Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                                }
                                else
                                {
                                    admin2 = admin2 + "," + Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                                }
                            }
                        }
                        if (adminlang.Trim() != "")
                        {
                            if (ddldept.SelectedItem.Text == "Tamil Literature")
                            {
                                com = com + " and (Part1Language=psubjectno) order by acual_marks desc";
                                com1 = com1 + " and (Part1Language=psubjectno) order by acual_marks desc";
                            }
                            else if (ddldept.SelectedItem.Text == "English Literature" || ddldept.SelectedItem.Text == "English")
                            {
                                com = com + " and (Part2Language=psubjectno) order by acual_marks desc";
                                com1 = com1 + " and (Part2Language=psubjectno) order by acual_marks desc";
                            }
                        }
                        ds = dt.select_method_wo_parameter(com, "text");
                        ddummy.Clear();
                        ddummy = dt.select_method_wo_parameter(com1, "Text");
                        DataSet gradeset = new DataSet();
                        string gradequery = "select Frange,Trange,Mark_Grade  from Grade_Master where College_Code =" + college_code + " and batch_year =" + txtbatch.Text + "";
                        gradeset = dt.select_method_wo_parameter(gradequery, "Text");
                        if (adminlang == "")
                        {
                            DataView dvcheck = new DataView();
                            DataTable data = new DataTable();
                            DataView dummyview;
                            if (ddummy.Tables[0].Rows.Count > 0)
                            {
                                for (int du = 0; du < ddummy.Tables[0].Rows.Count; du++)
                                {
                                    int total = 0;
                                    int maxtotal = 0;
                                    string app_no = Convert.ToString(ddummy.Tables[0].Rows[du]["app_no"]);
                                    ds.Tables[0].DefaultView.RowFilter = "app_no='" + app_no + "'";
                                    dvcheck = ds.Tables[0].DefaultView;
                                    if (dvcheck.Count > 0)
                                    {
                                        if (admin1.Trim() != "")
                                        {
                                            data = dvcheck.ToTable();
                                            dummyview = new DataView(data);
                                            dummyview.RowFilter = "psubjectno in (" + admin1 + ")";
                                            if (dummyview.Count == dummycount)
                                            {
                                                if (admin2.Trim() != "")
                                                {
                                                    data = dvcheck.ToTable();
                                                    dummyview = new DataView(data);
                                                    dummyview.RowFilter = "psubjectno in (" + admin2 + ")";
                                                    if (dummyview.Count > 0)
                                                    {
                                                        for (int cn = 0; cn < dvcheck.Count; cn++)
                                                        {
                                                            if (Convert.ToString(dvcheck[cn]["isgrade"]) == "False")
                                                            {
                                                                total = total + Convert.ToInt32(dvcheck[cn]["acual_marks"].ToString());
                                                            }
                                                            else
                                                            {
                                                                if (gradeset.Tables[0].Rows.Count > 0)
                                                                {
                                                                    DataView gradview = new DataView();
                                                                    string grade = Convert.ToString(dvcheck[cn]["grade"]);
                                                                    gradeset.Tables[0].DefaultView.RowFilter = "Mark_Grade='" + grade + "'";
                                                                    gradview = gradeset.Tables[0].DefaultView;
                                                                    if (gradview.Count > 0)
                                                                    {
                                                                        string fromrange = Convert.ToString(gradview[0]["Frange"]);
                                                                        string torange = Convert.ToString(gradview[0]["Trange"]);
                                                                        if (fromrange.Trim() != "" && torange.Trim() != "")
                                                                        {
                                                                            double midpoint = (Convert.ToDouble(fromrange) + Convert.ToDouble(torange)) / Convert.ToDouble(2);
                                                                            total = total + Convert.ToInt32(midpoint);
                                                                        }
                                                                        else
                                                                        {
                                                                            total = total + 0;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        total = total + 0;
                                                                    }
                                                                }
                                                            }
                                                            maxtotal = maxtotal + Convert.ToInt32(dvcheck[cn]["max_marks"].ToString());
                                                        }
                                                        double mark = Convert.ToDouble(total) / Convert.ToDouble(maxtotal) * 100;
                                                        dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(mark, 2)));
                                                    }
                                                }
                                                else
                                                {
                                                    for (int cn = 0; cn < dvcheck.Count; cn++)
                                                    {
                                                        if (Convert.ToString(dvcheck[cn]["isgrade"]) == "False")
                                                        {
                                                            total = total + Convert.ToInt32(dvcheck[cn]["acual_marks"].ToString());
                                                        }
                                                        else
                                                        {
                                                            if (gradeset.Tables[0].Rows.Count > 0)
                                                            {
                                                                DataView gradview = new DataView();
                                                                string grade = Convert.ToString(dvcheck[cn]["grade"]);
                                                                gradeset.Tables[0].DefaultView.RowFilter = "Mark_Grade='" + grade + "'";
                                                                gradview = gradeset.Tables[0].DefaultView;
                                                                if (gradview.Count > 0)
                                                                {
                                                                    string fromrange = Convert.ToString(gradview[0]["Frange"]);
                                                                    string torange = Convert.ToString(gradview[0]["Trange"]);
                                                                    if (fromrange.Trim() != "" && torange.Trim() != "")
                                                                    {
                                                                        double midpoint = (Convert.ToDouble(fromrange) + Convert.ToDouble(torange)) / Convert.ToDouble(2);
                                                                        total = total + Convert.ToInt32(midpoint);
                                                                    }
                                                                    else
                                                                    {
                                                                        total = total + 0;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    total = total + 0;
                                                                }
                                                            }
                                                        }
                                                        maxtotal = maxtotal + Convert.ToInt32(dvcheck[cn]["max_marks"].ToString());
                                                    }
                                                    double mark1 = Convert.ToDouble(total) / Convert.ToDouble(maxtotal) * 100;
                                                    dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(mark1, 2)));
                                                }
                                            }
                                        }
                                        else
                                        {
                                            for (int cn = 0; cn < dvcheck.Count; cn++)
                                            {
                                                if (Convert.ToString(dvcheck[cn]["isgrade"]) == "False")
                                                {
                                                    total = total + Convert.ToInt32(dvcheck[cn]["acual_marks"].ToString());
                                                }
                                                else
                                                {
                                                    if (gradeset.Tables[0].Rows.Count > 0)
                                                    {
                                                        DataView gradview = new DataView();
                                                        string grade = Convert.ToString(dvcheck[cn]["grade"]);
                                                        gradeset.Tables[0].DefaultView.RowFilter = "Mark_Grade='" + grade + "'";
                                                        gradview = gradeset.Tables[0].DefaultView;
                                                        if (gradview.Count > 0)
                                                        {
                                                            string fromrange = Convert.ToString(gradview[0]["Frange"]);
                                                            string torange = Convert.ToString(gradview[0]["Trange"]);
                                                            if (fromrange.Trim() != "" && torange.Trim() != "")
                                                            {
                                                                double midpoint = (Convert.ToDouble(fromrange) + Convert.ToDouble(torange)) / Convert.ToDouble(2);
                                                                total = total + Convert.ToInt32(midpoint);
                                                            }
                                                            else
                                                            {
                                                                total = total + 0;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            total = total + 0;
                                                        }
                                                    }
                                                }
                                                maxtotal = maxtotal + Convert.ToInt32(dvcheck[cn]["max_marks"].ToString());
                                            }
                                            double mark2 = Convert.ToDouble(total) / Convert.ToDouble(maxtotal) * 100;
                                            dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(mark2, 2)));
                                        }
                                    }
                                }
                                dicsubcol = dicsubcol.OrderByDescending(x => x.Value).ToDictionary(x => x.Key, x => x.Value);
                            }
                        }
                        //if (spsearch == 1)
                        //{
                        //    TabContainer1.ActiveTab = TabContainer1.Tabs[1];
                        //    spsearch = 0;
                        //    TextBox4.Text = "";
                        //    TextBox5.Text = "";
                        //}
                        string colm = "";
                        string priority = " select * from admitcolumnset where  textcriteria='column' and College_Code ='" + college_code + "' order by CONVERT(int, priority )";
                        ds1 = dt.select_method_wo_parameter(priority, "text");
                        if (ds1.Tables[0].Rows.Count > 0)
                        {
                            for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                            {
                                colm = ds1.Tables[0].Rows[i]["column_name"].ToString();
                                FpSpread1.Sheets[0].ColumnCount++;
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() != "User Name")
                                {
                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = ds1.Tables[0].Rows[i]["setcolumn"].ToString();
                                    // FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Locked = true;
                                }
                                else
                                {
                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text = "ShortListed By";
                                    // FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                    FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Locked = true;
                                }
                                if (FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text == "Subject Percentage")
                                {
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Width = 90;
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "State")
                                {
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "Mother Tongue")
                                {
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                                if (ddltype.SelectedItem.Text.ToString().ToUpper() != "MCA")
                                {
                                    if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "TANCET Mark")
                                    {
                                        FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
                                    }
                                }
                                if (FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text == "DOB")
                                {
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Width = 90;
                                }
                                if (FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text == "Student Name")
                                {
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text == "Address")
                                {
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text == "City")
                                {
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Width = 100;
                                }
                                if (FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text == "Email_Id")
                                {
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text == "Mobile No")
                                {
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Width = 100;
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].CellType = txt;
                                }
                                if (FpSpread1.Sheets[0].ColumnHeader.Cells[0, FpSpread1.Sheets[0].ColumnCount - 1].Text == "Subject")
                                {
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Width = 180;
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].Visible = false;
                                    FpSpread1.Sheets[0].Columns[FpSpread1.Sheets[0].ColumnCount - 1].CellType = txt;
                                }
                            }
                            string txtval = Convert.ToString(txttop.Text);
                            if (txtval.Trim() == "")
                            {
                                txtval = Convert.ToString(dicsubcol.Count);
                            }
                            FpSpread1.Sheets[0].RowCount = 0;
                            DataView dv = new DataView();
                            if (ddummy.Tables[0].Rows.Count > 0)
                            {
                                if (adminlang == "")
                                {
                                    if (dicsubcol.Count > 0)
                                    {
                                        int sno_Value = 0;
                                        foreach (var kvp in dicsubcol)
                                        {
                                            if (sno_Value < Convert.ToInt32(txtval))
                                            {
                                                string app_no = kvp.Key.ToString();
                                                string percentage = kvp.Value.ToString();
                                                ds.Tables[0].DefaultView.RowFilter = "app_no='" + app_no + "'";
                                                dv = ds.Tables[0].DefaultView;
                                                if (dv.Count > 0)
                                                {
                                                    sno_Value++;
                                                    FpSpread1.Sheets[0].RowCount++;
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(sno_Value);
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(dv[0]["criteria_Code"]);
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].Note = Convert.ToString(dv[0]["seattype"]);
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].Font.Name = "Times New Roman";
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 1].CellType = chkcel1;
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 1].Value = 0;
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 1].Font.Name = "Times New Roman";
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(dv[0]["app_no"]);
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(dv[0]["app_formno"]);
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].Note = Convert.ToString(dv[0]["batch_year"]);
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].Font.Name = "Times New Roman";
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 3].CellType = but;
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 3].Font.Name = "Times New Roman";
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                                                    int col = 4;
                                                    for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                                                    {
                                                        col++;
                                                        string colmname = Convert.ToString(ds1.Tables[0].Rows[i]["column_name"]);
                                                        if (colmname.Trim() != "course_code")
                                                        {
                                                            if (colmname.Trim() != "SubjectPercen")
                                                            {
                                                                if (colmname.Trim() != "TamilOrginFromAndaman" && colmname.Trim() != "IsExService" && colmname.Trim() != "isdisable" && colmname.Trim() != "first_graduate" && colmname.Trim() != "CampusReq" && colmname.Trim() != "ncccadet" && colmname.Trim() != "Vocational_stream")
                                                                {
                                                                    if (colmname.Trim() != "criteria_Code" && colmname.Trim() != "parent_statep" && colmname.Trim() != "mother_tongue" && colmname.Trim() != "parent_occu" && colmname.Trim() != "religion" && colmname.Trim() != "citizen" && colmname.Trim() != "community" && colmname.Trim() != "caste" && colmname.Trim() != "DistinctSport" && colmname.Trim() != "co_curricular" && colmname.Trim() != "medium" && colmname.Trim() != "university_code")
                                                                    {
                                                                        if (colmname.Trim() != "usercode")
                                                                        {
                                                                            if (colmname.Trim() != "TotalPercentage")
                                                                            {
                                                                                if (colmname.Trim() != "sex")
                                                                                {
                                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(dv[0][colmname]);
                                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                                }
                                                                                else
                                                                                {
                                                                                    string gendervalue = Convert.ToString(dv[0][colmname]);
                                                                                    if (gendervalue == "0")
                                                                                    {
                                                                                        gendervalue = "Male";
                                                                                    }
                                                                                    else if (gendervalue == "1")
                                                                                    {
                                                                                        gendervalue = "Female";
                                                                                    }
                                                                                    else if (gendervalue == "2")
                                                                                    {
                                                                                        gendervalue = "Transgender";
                                                                                    }
                                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(gendervalue);
                                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(percentage);
                                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Center;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            string usernem = dt.GetFunction("select USER_ID   from UserMaster where User_code='" + Convert.ToString(dv[0][colmname]) + "' and college_code ='" + Session["collegecode"] + "'");
                                                                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        string textval = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "'  and college_code ='" + Session["collegecode"] + "'");
                                                                        if (textval == "0")
                                                                        {
                                                                            textval = "";
                                                                        }
                                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Text = textval;
                                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    string test_Value = "";
                                                                    if (Convert.ToString(dv[0][colmname]) == "False")
                                                                    {
                                                                        test_Value = "No";
                                                                    }
                                                                    else
                                                                    {
                                                                        test_Value = "Yes";
                                                                    }
                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(test_Value);
                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                                                            {
                                                                string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                            }
                                                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                                            {
                                                                string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                                string dept = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0]["branch_code"]) + "' and (TextCriteria='branc') and college_code ='" + Session["collegecode"] + "'");
                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Text = usernem + " " + dept;
                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                break;
                                            }
                                        }
                                        FpSpread1.Sheets[0].PageSize = FpSpread1.Sheets[0].RowCount;
                                        FpSpread1.Visible = true;
                                        lbltotalcount1.Text = " " + " ShortList" + " " + ": " + FpSpread1.Sheets[0].RowCount;
                                        lbltotalcount1.Visible = true;
                                        ckbx.Visible = true;
                                        btnconform.Visible = false;
                                        btnunpaid.Visible = false;
                                        btnChallan.Visible = false;
                                        btnadmitcard.Visible = false;
                                        btnadmitprint.Visible = false;
                                        btnleft.Visible = false;
                                        if (spsearch == 1)
                                        {
                                            TabContainer1.ActiveTab = TabContainer1.Tabs[1];
                                            spsearch = 0;
                                            TextBox4.Text = "";
                                            TextBox5.Text = "";
                                        }
                                    }
                                }
                                else
                                {
                                    DataView dvcheck = new DataView();
                                    DataTable data = new DataTable();
                                    DataTable dnew;
                                    DataView dummyview;
                                    dicsubcol.Clear();
                                    if (ddummy.Tables[0].Rows.Count > 0)
                                    {
                                        for (int du = 0; du < ddummy.Tables[0].Rows.Count; du++)
                                        {
                                            int total = 0;
                                            int maxtotal = 0;
                                            string app_no = Convert.ToString(ddummy.Tables[0].Rows[du]["app_no"]);
                                            ds.Tables[0].DefaultView.RowFilter = "app_no='" + app_no + "' and psubjectno='" + adminlang + "'";
                                            dvcheck = ds.Tables[0].DefaultView;
                                            if (dvcheck.Count > 0)
                                            {
                                                //string acuualmark = Convert.ToString(dvcheck[0]["acual_marks"]);
                                                //string maxmark = Convert.ToString(dvcheck[0]["max_marks"]);
                                                //double finalvalue = Convert.ToDouble(acuualmark) / Convert.ToDouble(maxmark) * Convert.ToDouble(100);
                                                //dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(finalvalue, 2)));
                                                if (Convert.ToString(dvcheck[0]["isgrade"]) == "False")
                                                {
                                                    string acuualmark = Convert.ToString(dvcheck[0]["acual_marks"]);
                                                    string maxmark = Convert.ToString(dvcheck[0]["max_marks"]);
                                                    if (acuualmark.Trim() != "" && maxmark.Trim() != "")
                                                    {
                                                        double finalvalue = Convert.ToDouble(acuualmark) / Convert.ToDouble(maxmark) * Convert.ToDouble(100);
                                                        dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(finalvalue, 2)));
                                                    }
                                                }
                                                else
                                                {
                                                    dnew = dvcheck.ToTable();
                                                    if (gradeset.Tables[0].Rows.Count > 0)
                                                    {
                                                        DataView gradview = new DataView();
                                                        if (dnew.Rows.Count > 0)
                                                        {
                                                            for (int jk = 0; jk < dnew.Rows.Count; jk++)
                                                            {
                                                                string grade = Convert.ToString(dnew.Rows[jk]["grade"]);
                                                                string max = Convert.ToString(dnew.Rows[jk]["max_marks"]);
                                                                gradeset.Tables[0].DefaultView.RowFilter = "Mark_Grade='" + grade + "'";
                                                                gradview = gradeset.Tables[0].DefaultView;
                                                                if (gradview.Count > 0)
                                                                {
                                                                    string fromrange = Convert.ToString(gradview[0]["Frange"]);
                                                                    string torange = Convert.ToString(gradview[0]["Trange"]);
                                                                    if (fromrange.Trim() != "" && torange.Trim() != "")
                                                                    {
                                                                        double midpoint = (Convert.ToDouble(fromrange) + Convert.ToDouble(torange)) / Convert.ToDouble(2);
                                                                        double finalvalue = Convert.ToDouble(midpoint) / Convert.ToDouble(max) * Convert.ToDouble(100);
                                                                        dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(finalvalue, 2)));
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    dicsubcol = dicsubcol.OrderByDescending(x => x.Value).ToDictionary(x => x.Key, x => x.Value);
                                    txtval = Convert.ToString(txttop.Text);
                                    if (txtval.Trim() == "")
                                    {
                                        txtval = Convert.ToString(dicsubcol.Count);
                                    }
                                    FpSpread1.Sheets[0].RowCount = 0;
                                    ArrayList addroll = new ArrayList();
                                    int sno_Value = 0;
                                    if (dicsubcol.Count > 0)
                                    {
                                        foreach (var kvp in dicsubcol)
                                        {
                                            if (sno_Value < Convert.ToInt32(txtval))
                                            {
                                                string app_no = kvp.Key.ToString();
                                                string percentage = kvp.Value.ToString();
                                                ds.Tables[0].DefaultView.RowFilter = "app_no='" + app_no + "'";
                                                dv = ds.Tables[0].DefaultView;
                                                if (dv.Count > 0)
                                                {
                                                    if (!addroll.Contains(app_no))
                                                    {
                                                        addroll.Add(app_no);
                                                        sno_Value++;
                                                        FpSpread1.Sheets[0].RowCount++;
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(sno_Value);
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(dv[0]["criteria_Code"]);
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].Note = Convert.ToString(dv[0]["seattype"]);
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].Font.Name = "Times New Roman";
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 1].CellType = chkcel1;
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 1].Value = 0;
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 1].Font.Name = "Times New Roman";
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(dv[0]["app_no"]);
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(dv[0]["app_formno"]);
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].Note = Convert.ToString(dv[0]["batch_year"]);
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].Font.Name = "Times New Roman";
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 3].CellType = but;
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 3].Font.Name = "Times New Roman";
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                                                        int col = 4;
                                                        for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                                                        {
                                                            col++;
                                                            string colmname = Convert.ToString(ds1.Tables[0].Rows[i]["column_name"]);
                                                            if (colmname.Trim() != "course_code")
                                                            {
                                                                if (colmname.Trim() != "SubjectPercen")
                                                                {
                                                                    if (colmname.Trim() != "TamilOrginFromAndaman" && colmname.Trim() != "IsExService" && colmname.Trim() != "isdisable" && colmname.Trim() != "first_graduate" && colmname.Trim() != "CampusReq" && colmname.Trim() != "ncccadet" && colmname.Trim() != "Vocational_stream")
                                                                    {
                                                                        if (colmname.Trim() != "criteria_Code" && colmname.Trim() != "parent_statep" && colmname.Trim() != "mother_tongue" && colmname.Trim() != "parent_occu" && colmname.Trim() != "religion" && colmname.Trim() != "citizen" && colmname.Trim() != "community" && colmname.Trim() != "caste" && colmname.Trim() != "DistinctSport" && colmname.Trim() != "co_curricular" && colmname.Trim() != "medium" && colmname.Trim() != "university_code")
                                                                        {
                                                                            if (colmname.Trim() != "usercode")
                                                                            {
                                                                                if (colmname.Trim() == "TotalPercentage")
                                                                                {
                                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(percentage);
                                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                                }
                                                                                else
                                                                                {
                                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(dv[0][colmname]);
                                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                string usernem = dt.GetFunction("select USER_ID   from UserMaster where User_code='" + Convert.ToString(dv[0][colmname]) + "' and college_code ='" + Session["collegecode"] + "'");
                                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            string textval = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "'  and college_code ='" + Session["collegecode"] + "'");
                                                                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Text = textval;
                                                                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                            FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        string test_Value = "";
                                                                        if (Convert.ToString(dv[0][colmname]) == "False")
                                                                        {
                                                                            test_Value = "No";
                                                                        }
                                                                        else
                                                                        {
                                                                            test_Value = "Yes";
                                                                        }
                                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(test_Value);
                                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                        FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                    }
                                                                }
                                                            }
                                                            else
                                                            {
                                                                if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                                                                {
                                                                    string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                }
                                                                if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                                                {
                                                                    string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                                    string dept = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0]["branch_code"]) + "' and (TextCriteria='branc') and college_code ='" + Session["collegecode"] + "'");
                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Text = usernem + " " + dept;
                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                    FpSpread1.Sheets[0].Cells[FpSpread1.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                break;
                                            }
                                        }
                                        FpSpread1.Sheets[0].PageSize = FpSpread1.Sheets[0].RowCount;
                                        FpSpread1.Visible = true;
                                        lbltotalcount1.Text = " " + " ShortList" + " " + ": " + FpSpread1.Sheets[0].RowCount;
                                        lbltotalcount1.Visible = true;
                                        FpSpread1.SaveChanges();
                                        ckbx.Visible = true;
                                        btnconform.Visible = false;
                                        btnunpaid.Visible = false;
                                        btnChallan.Visible = false;
                                        btnadmitcard.Visible = false;
                                        btnadmitprint.Visible = false;
                                        btnleft.Visible = false;
                                        if (spsearch == 1)
                                        {
                                            TabContainer1.ActiveTab = TabContainer1.Tabs[1];
                                            spsearch = 0;
                                            TextBox4.Text = "";
                                            TextBox5.Text = "";
                                        }
                                    }
                                    else
                                    {
                                        lblmg2.Visible = true;
                                        lblmg2.Text = "No Records Found";
                                        FpSpread1.Visible = false;
                                        btnapprove.Visible = false;
                                        Button2.Visible = false;
                                        Button3.Visible = false;
                                        Button9.Visible = false;
                                        // lblnew.Text = "0" + " New";
                                        lbltotalcount1.Text = " " + " ShortList" + " " + ": " + "0";
                                        // Button3.Visible = false;
                                        //  Button9.Visible = false;
                                        Label66.Visible = false;
                                        Label68.Visible = false;
                                        Label67.Visible = false;
                                        Label69.Visible = false;
                                        lbltotalcount.Visible = false;
                                        lbltotalcount1.Visible = false;
                                        lbltotalcount2.Visible = false;
                                        lbltotalcount3.Visible = false;
                                        lbltotalfeepaid.Visible = false;
                                        lbltotalfeepaid_value.Visible = false;
                                        ckbx.Visible = false;
                                        btnconform.Visible = false;
                                        btnunpaid.Visible = false;
                                        btnChallan.Visible = false;
                                        btnadmitcard.Visible = false;
                                        btnadmitprint.Visible = false;
                                        btnleft.Visible = false;
                                    }
                                }
                            }
                            else
                            {
                                if (spsearch == 1)
                                {
                                    spread3();
                                }
                                else
                                {
                                    lblmg2.Visible = true;
                                    lblmg2.Text = "No Records Found";
                                    FpSpread1.Visible = false;
                                    btnapprove.Visible = false;
                                    Button2.Visible = false;
                                    Button3.Visible = false;
                                    Button9.Visible = false;
                                    // lblnew.Text = "0" + " New";
                                    lbltotalcount1.Text = " " + " ShortList" + " " + ": " + "0";
                                    // Button3.Visible = false;
                                    //  Button9.Visible = false;
                                    Label66.Visible = false;
                                    Label68.Visible = false;
                                    Label67.Visible = false;
                                    Label69.Visible = false;
                                    lbltotalcount.Visible = false;
                                    lbltotalcount1.Visible = false;
                                    lbltotalcount2.Visible = false;
                                    lbltotalcount3.Visible = false;
                                    lbltotalfeepaid.Visible = false;
                                    lbltotalfeepaid_value.Visible = false;
                                    ckbx.Visible = false;
                                    btnconform.Visible = false;
                                    btnunpaid.Visible = false;
                                    btnChallan.Visible = false;
                                    btnadmitcard.Visible = false;
                                    btnadmitprint.Visible = false;
                                    btnleft.Visible = false;
                                }
                            }
                        }
                    }
                    else
                    {
                        if (spsearch != 1)
                        {
                            lblmg2.Visible = true;
                            lblmg2.Text = "No Records Found";
                            FpSpread1.Visible = false;
                            btnapprove.Visible = false;
                            Button2.Visible = false;
                            Button3.Visible = false;
                            Button9.Visible = false;
                            // lblnew.Text = "0" + " New";
                            lbltotalcount1.Text = " " + " ShortList" + " " + ": " + "0";
                            // Button3.Visible = false;
                            //  Button9.Visible = false;
                            Label66.Visible = false;
                            Label68.Visible = false;
                            Label67.Visible = false;
                            Label69.Visible = false;
                            lbltotalcount.Visible = false;
                            lbltotalcount1.Visible = false;
                            lbltotalcount2.Visible = false;
                            lbltotalcount3.Visible = false;
                            lbltotalfeepaid.Visible = false;
                            lbltotalfeepaid_value.Visible = false;
                            ckbx.Visible = false;
                            btnconform.Visible = false;
                            btnunpaid.Visible = false;
                            btnChallan.Visible = false;
                            btnadmitcard.Visible = false;
                            btnadmitprint.Visible = false;
                            btnleft.Visible = false;
                            // btnreject.Visible = false;
                        }
                        else
                        {
                            spread3();
                        }
                    }
                }
                else
                {
                    lblmg2.Visible = true;
                    lblmg2.Text = "Please Select All Values";
                    FpSpread1.Visible = false;
                    btnapprove.Visible = false;
                    Button2.Visible = false;
                    Button3.Visible = false;
                    Button9.Visible = false;
                    lbltotalcount.Visible = false;
                    lbltotalcount1.Visible = false;
                    // btnreject.Visible = false;
                    Label66.Visible = false;
                    Label68.Visible = false;
                    Label67.Visible = false;
                    Label69.Visible = false;
                    lbltotalfeepaid.Visible = false;
                    lbltotalfeepaid_value.Visible = false;
                    ckbx.Visible = false;
                    btnconform.Visible = false;
                    btnunpaid.Visible = false;
                    btnChallan.Visible = false;
                    btnadmitcard.Visible = false;
                    btnadmitprint.Visible = false;
                    btnleft.Visible = false;
                }
            }
            FpSpread1.SaveChanges();//barath 22.04.17
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    public void spread3()
    {
        try
        {
            lbltotalcount.Visible = false;
            FpSpread2.SaveChanges();
            if (ddledu.SelectedItem.Text == "PG")
            {
                ArrayList addsno = new ArrayList();
                int sno = 0;
                FpSpread2.Sheets[0].RowCount = 0;
                FpSpread2.Sheets[0].ColumnCount = 4;
                FpSpread2.Sheets[0].RowHeader.Visible = false;
                FpSpread2.Sheets[0].AutoPostBack = false;
                FpSpread2.Height = 360;
                FpSpread2.Width = 930;
                FpSpread2.CommandBar.Visible = false;
                Dictionary<int, int> dicsubcol = new Dictionary<int, int>();
                Dictionary<int, int> totalpercentage = new Dictionary<int, int>();
                FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
                darkstyle.BackColor = Color.Brown;
                darkstyle.ForeColor = Color.White;
                FpSpread2.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
                FarPoint.Web.Spread.CheckBoxCellType chkcel1 = new FarPoint.Web.Spread.CheckBoxCellType();
                chkcel1.AutoPostBack = false;
                FarPoint.Web.Spread.TextCellType txt = new FarPoint.Web.Spread.TextCellType();
                FarPoint.Web.Spread.ButtonCellType but = new FarPoint.Web.Spread.ButtonCellType("MyCommand", FarPoint.Web.Spread.ButtonType.ImageButton, "~/images/view11.png");
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 2].Text = "App No";
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 3].Text = "View";
                // FpSpread2.Sheets[0].ColumnHeader.Cells[0, 3].BackColor = Color.MistyRose;
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                FpSpread2.Sheets[0].Columns[2].Visible = false;
                FpSpread2.Sheets[0].Columns[0].Width = 40;
                FpSpread2.Sheets[0].Columns[1].Width = 50;
                FpSpread2.Sheets[0].Columns[0].Visible = true;
                string[] frmdat = TextBox2.Text.Split(' ');
                string[] fdate = frmdat[0].Split('/');
                string fromdate = fdate[2].ToString() + "-" + fdate[1].ToString() + "-" + fdate[0].ToString();
                string[] trmdat = TextBox3.Text.Split(' ');
                string[] tdate = trmdat[0].Split('/');
                string tomdate = tdate[2].ToString() + "-" + tdate[1].ToString() + "-" + tdate[0].ToString();
                string com = "";
                if (txtbatch.Text != " " && ddldegree.SelectedItem.Text != "--Select--" && ddledu.SelectedItem.Text != "--Select--" && ddldept.SelectedItem.Text != "--Select--" && ddltype.SelectedItem.Text != "--Select--")
                {
                    com = "select s.usercode,s.criteria_Code,st.course_code,st.branch_code,st.tancet_mark ,p.psubjectno,mother_tongue,seattype,batch_year,parent_statep,p.acual_marks,p.max_marks,t.TextVal+'-'+ CAST(CAST(p.acual_marks AS int) AS char(20)) as mark,CONVERT(VARCHAR(2),DATEPART(DAY, a.dob))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.dob)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR, a.dob))as dob,CONVERT(VARCHAR(2),DATEPART(DAY, a.date_applied))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.date_applied)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR,a.date_applied))as date_applied,s.isview,d.Degree_Code,c.Edu_Level,a.app_no,a.app_formno,a.stud_name,a.sex,a.community,a.caste,a.religion,a.Streetp,a.Cityp,a.Districtp,a.parent_addressP,a.parent_pincodep,a.Student_Mobile,a.StuPer_Id,st.percentage,majorallied_percent,a.Alternativedegree_code,st.securedmark from selectcriteria s,applyn a,Course c,Degree d,Stud_prev_details st,perv_marks_history p,textvaltable t where c.Course_Id=d.Course_Id and c.college_code=d.college_code and c.college_code=a.college_code and d.Degree_Code=a.degree_code and d.college_code=a.college_code and  a.app_no=s.app_no and a.degree_code=s.degree_code and a.college_code=s.college_code and  st.app_no=a.app_no and st.app_no=s.app_no and p.course_entno=st.course_entno and t.TextCode=p.psubjectno and   t.college_code=a.college_code  and t.college_code=c.college_code and  t.college_code=d.college_code and  batch_year='" + txtbatch.Text + "' and d.degree_code='" + ddldept.SelectedValue + "' and c.Course_Id='" + ddldegree.SelectedValue + "' and c.Edu_Level='" + ddledu.SelectedItem.Text + "' and s.isapprove='2'  and t.TextCriteria='subje'";
                    //if (spsearch == 1)
                    //{
                    if (TextBox4.Text != "")
                    {
                        com = com + "and a.stud_name like'%" + TextBox4.Text + "%'";//modified
                        // com1 = com1 + "and a.stud_name like'%" + TextBox4.Text + "'%";
                    }
                    if (TextBox5.Text != "")
                    {
                        com = com + "and a.Student_Mobile='" + TextBox5.Text + "'";
                    }
                    if (TextBox6.Text != "")
                    {
                        com = com + "and a.app_formno='" + TextBox6.Text + "'";
                    }
                    //}
                    //else
                    //{
                    com = com + " and s.select_date between '" + fromdate + "'  and '" + tomdate + "'";
                    //}
                    if (ddltype.SelectedItem.Text != "All")
                    {
                        com = com + "and c.type='" + ddltype.SelectedItem.Text + "'";
                    }
                    string admin = "";
                    string adm = "select column_name from admitcolumnset where (textcriteria ='community' or textcriteria ='relig') and setcolumn ='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    ds1 = dt.select_method_wo_parameter(adm, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                        {
                            if (admin == "")
                            {
                                admin = ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                            else
                            {
                                admin = admin + "," + ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                        }
                        if (admin.Trim() != "")
                        {
                            string TextValuenew = d2.GetFunction("select TextCode  from TextValTable where TextCriteria ='comm' and TextCriteria2 ='comm1' and TextVal ='Others'");
                            if (TextValuenew.Trim() != "" && TextValuenew.Trim() != "0")
                            {
                                admin = admin + "," + TextValuenew;
                            }
                        }
                        if (orderflage == true)
                        {
                            com = com + "and s.criteria_Code='" + textcode + "'";
                        }
                        else
                        {
                            string region = rs.GetSelectedItemsValueAsString(cbl_religion);
                            if (region.Trim() == "")
                                com = com + "and ( a.religion in (" + admin + ") or a.community in (" + admin + "))";
                            else
                                com = com + "and ( a.religion in ('" + region + "') and a.community in (" + admin + "))";
                        }
                        // com = com + "and ( a.religion in (" + admin + ") or a.community in (" + admin + "))";
                    }
                    if (cb_voc.Checked == true)
                        com += " and isnull(sd.Vocational_stream,0)='1'";
                    string board = rs.GetSelectedItemsValueAsString(cbl_BoardUniv);
                    string medium = rs.GetSelectedItemsValueAsString(cbl_comm);
                    string attempts = rs.GetSelectedItemsValueAsString(cblAttempt);
                    if (medium.Trim() != "")
                        com += " and sd.medium in('" + medium + "')";
                    if (attempts.Trim() != "")
                        com += " and noofattempt in('" + attempts + "')";
                    if (board.Trim() != "")
                        com += " and sd.Course_code in('" + board + "')";
                    string admin1 = "";
                    // string adm1 = "select * from admitcolumnset where textcriteria = 'subjec' and user_code='" + user_code + "'";
                    string adm1 = "select * from admitcolumnset where textcriteria = 'subjec' and setcolumn='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    ds1 = dt.select_method_wo_parameter(adm1, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                        {
                            if (admin1 == "")
                            {
                                admin1 = ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                            else
                            {
                                admin1 = admin1 + "," + ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                        }
                        if (ddledu.SelectedItem.Text == "UG")
                        {
                            com = com + "and p.psubjectno in (" + admin1 + ")";
                        }
                        if (ddledu.SelectedItem.Text == "PG")
                        {
                            com = com + "and st.branch_code in (" + admin1 + ")";
                        }
                    }
                    if (com.Trim() != "")
                    {
                        if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                        {
                            com = com + " order by percentage desc";
                            // com1 = com1 + " order by percentage desc";
                        }
                        if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                        {
                            com = com + " order by majorallied_percent desc";
                            // com1 = com1 + " order by majorallied_percent desc";
                        }
                    }
                    ds = dt.select_method_wo_parameter(com, "text");
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        //  btnreject.Visible = true;
                        string colm = "";
                        string priority = " select * from admitcolumnset where textcriteria='column' and College_Code ='" + college_code + "' order by CONVERT(int, priority )";
                        ds1 = dt.select_method_wo_parameter(priority, "text");
                        if (ds1.Tables[0].Rows.Count > 0)
                        {
                            for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                            {
                                colm = ds1.Tables[0].Rows[i]["column_name"].ToString();
                                FpSpread2.Sheets[0].ColumnCount++;
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() != "User Name")
                                {
                                    FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Text = ds1.Tables[0].Rows[i]["setcolumn"].ToString();
                                    // FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                                    FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                    FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                    FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Locked = true;
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].CellType = txt;
                                }
                                else
                                {
                                    FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Text = "Recommended By";
                                    FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                                    FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                    FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                    FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Locked = true;
                                }
                                if (FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Text == "Subject Percentage")
                                {
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Width = 90;
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "State")
                                {
                                    string getvalue = dt.GetFunction("select MAX(rights_Code) from security_user_right where rights_desc='Online Admission' and user_code ='" + user_code + "' and college_code ='" + Session["collegecode"] + "'");
                                    if (getvalue != "3")
                                    {
                                        FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Visible = false;
                                    }
                                }
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "Mother Tongue")
                                {
                                    string getvalue = dt.GetFunction("select MAX(rights_Code) from security_user_right where rights_desc='Online Admission' and user_code ='" + user_code + "' and college_code ='" + Session["collegecode"] + "'");
                                    if (getvalue != "3")
                                    {
                                        FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Visible = false;
                                    }
                                }
                                if (ddltype.SelectedItem.Text.ToString().ToUpper() != "MCA")
                                {
                                    if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "TANCET Mark")
                                    {
                                        FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Visible = false;
                                    }
                                }
                                if (FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Text == "DOB")
                                {
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Width = 90;
                                }
                                if (FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Text == "Student Name")
                                {
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Text == "Address")
                                {
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Text == "City")
                                {
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Width = 100;
                                }
                                if (FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Text == "Email_Id")
                                {
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Text == "Mobile No")
                                {
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Width = 100;
                                }
                                if (FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Text == "Subject")
                                {
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Width = 180;
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Visible = false;
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].CellType = txt;
                                }
                            }
                            int cont = 0;
                            FpSpread2.Sheets[0].RowCount = 0;
                            ArrayList addroll = new ArrayList();
                            int sno_Value = 0;
                            for (int row = 0; row < ds.Tables[0].Rows.Count; row++)
                            {
                                string app_no = Convert.ToString(ds.Tables[0].Rows[row]["app_no"]);
                                if (!addroll.Contains(app_no))
                                {
                                    addroll.Add(app_no);
                                    if (Convert.ToString(ds.Tables[0].Rows[0]["isview"]) == "0")
                                    {
                                        cont++;
                                    }
                                    sno_Value++;
                                    FpSpread2.Sheets[0].RowCount++;
                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(sno_Value);
                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[row]["criteria_Code"]);
                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Note = Convert.ToString(ds.Tables[0].Rows[row]["seattype"]);
                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Font.Name = "Times New Roman";
                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].CellType = chkcel1;
                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Value = false;
                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Font.Name = "Times New Roman";
                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(ds.Tables[0].Rows[row]["app_no"]);
                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(ds.Tables[0].Rows[row]["app_formno"]);
                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 2].Note = Convert.ToString(ds.Tables[0].Rows[row]["batch_year"]);
                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 2].Font.Name = "Times New Roman";
                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 3].CellType = but;
                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 3].Font.Name = "Times New Roman";
                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                                    int col = 4;
                                    for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                                    {
                                        col++;
                                        string colmname = Convert.ToString(ds1.Tables[0].Rows[i]["column_name"]);
                                        if (colmname.Trim() != "course_code")
                                        {
                                            if (colmname.Trim() != "SubjectPercen")
                                            {
                                                if (colmname.Trim() != "TamilOrginFromAndaman" && colmname.Trim() != "IsExService" && colmname.Trim() != "isdisable" && colmname.Trim() != "first_graduate" && colmname.Trim() != "CampusReq" && colmname.Trim() != "ncccadet" && colmname.Trim() != "Vocational_stream")
                                                {
                                                    if (colmname.Trim() != "criteria_Code" && colmname.Trim() != "parent_statep" && colmname.Trim() != "mother_tongue" && colmname.Trim() != "parent_occu" && colmname.Trim() != "religion" && colmname.Trim() != "citizen" && colmname.Trim() != "community" && colmname.Trim() != "caste" && colmname.Trim() != "DistinctSport" && colmname.Trim() != "co_curricular" && colmname.Trim() != "medium" && colmname.Trim() != "university_code")
                                                    {
                                                        if (colmname.Trim() != "sex")
                                                        {
                                                            if (colmname.Trim() != "usercode")
                                                            {
                                                                if (colmname.Trim() == "TotalPercentage")
                                                                {
                                                                    if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                                                                    {
                                                                        colmname = "percentage";
                                                                    }
                                                                    if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                                                    {
                                                                        colmname = "majorallied_percent";
                                                                    }
                                                                }
                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(ds.Tables[0].Rows[row][colmname]);
                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                            }
                                                            else
                                                            {
                                                                string usernem = dt.GetFunction("select USER_ID   from UserMaster where User_code='" + Convert.ToString(ds.Tables[0].Rows[row][colmname]) + "' and college_code ='" + Session["collegecode"] + "'");
                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            string gendervalue = Convert.ToString(ds.Tables[0].Rows[row][colmname]);
                                                            if (gendervalue == "0")
                                                            {
                                                                gendervalue = "Male";
                                                            }
                                                            else if (gendervalue == "1")
                                                            {
                                                                gendervalue = "Female";
                                                            }
                                                            else if (gendervalue == "2")
                                                            {
                                                                gendervalue = "Transgender";
                                                            }
                                                            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(gendervalue);
                                                            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        string textval = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(ds.Tables[0].Rows[row][colmname]) + "'  and college_code ='" + Session["collegecode"] + "'");
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Text = textval;
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                    }
                                                }
                                                else
                                                {
                                                    string test_Value = "";
                                                    if (Convert.ToString(ds.Tables[0].Rows[row][colmname]) == "False")
                                                    {
                                                        test_Value = "No";
                                                    }
                                                    else
                                                    {
                                                        test_Value = "Yes";
                                                    }
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(test_Value);
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                }
                                            }
                                        }
                                        else
                                        {
                                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                                            {
                                                string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(ds.Tables[0].Rows[row][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                            }
                                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                            {
                                                string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(ds.Tables[0].Rows[row][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                string dept = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(ds.Tables[0].Rows[row]["branch_code"]) + "' and (TextCriteria='branc') and college_code ='" + Session["collegecode"] + "'");
                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Text = usernem + " " + dept;
                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                            }
                                        }
                                    }
                                }
                            }
                            FpSpread2.Sheets[0].PageSize = FpSpread2.Sheets[0].RowCount;
                            FpSpread2.Visible = true;
                            lbltotalcount2.Text = " " + " Recommended" + " " + ": " + FpSpread2.Sheets[0].RowCount;
                            // lbltotalcount1.Text = " " + " ShortList" + " " + ": " + FpSpread2.Sheets[0].RowCount;
                            lbltotalcount2.Visible = true;
                            Button2.Visible = false;
                            ckbx.Visible = true;
                            btnconform.Visible = false;
                            btnunpaid.Visible = false;
                            btnChallan.Visible = false;
                            btnadmitcard.Visible = false;
                            btnadmitprint.Visible = false;
                            btnleft.Visible = false;
                            if (spsearch == 1)
                            {
                                TabContainer1.ActiveTab = TabContainer1.Tabs[2];
                                spsearch = 0;
                                TextBox4.Text = "";
                                TextBox5.Text = "";
                            }
                        }
                    }
                    else
                    {
                        if (spsearch != 1)
                        {
                            lblmg3.Visible = true;
                            lblmg3.Text = "No Records Found";
                            //lblnew1.Text = "0" + "New";
                            FpSpread2.Visible = false;
                            btnapprove.Visible = false;
                            Button2.Visible = false;
                            Button3.Visible = false;
                            Button9.Visible = false;
                            lbltotalcount.Visible = false;
                            lbltotalcount1.Visible = false;
                            lbltotalcount2.Visible = false;
                            lbltotalcount2.Text = " " + " Recommended" + " " + ": " + "0";
                            Label66.Visible = false;
                            Label68.Visible = false;
                            Label67.Visible = false;
                            Label69.Visible = false;
                            lbltotalfeepaid.Visible = false;
                            lbltotalfeepaid_value.Visible = false;
                            ckbx.Visible = false;
                            btnconform.Visible = false;
                            btnunpaid.Visible = false;
                            btnChallan.Visible = false;
                            btnadmitcard.Visible = false;
                            btnadmitprint.Visible = false;
                            btnleft.Visible = false;
                            // btnreject.Visible = false;
                        }
                        else
                        {
                            spread1();
                        }
                    }
                }
                else
                {
                    lblmg3.Visible = true;
                    lblmg3.Text = "Please Select All Values";
                    FpSpread2.Visible = false;
                    btnapprove.Visible = false;
                    Button2.Visible = false;
                    Button3.Visible = false;
                    Button9.Visible = false;
                    lbltotalcount.Visible = false;
                    lbltotalcount1.Visible = false;
                    Label66.Visible = false;
                    Label68.Visible = false;
                    Label67.Visible = false;
                    Label69.Visible = false;
                    lbltotalcount2.Visible = false;
                    lbltotalfeepaid.Visible = false;
                    lbltotalfeepaid_value.Visible = false;
                    ckbx.Visible = false;
                    btnconform.Visible = false;
                    btnunpaid.Visible = false;
                    btnChallan.Visible = false;
                    btnadmitcard.Visible = false;
                    btnadmitprint.Visible = false;
                    btnleft.Visible = false;
                }
            }
            if (ddledu.SelectedItem.Text == "UG")
            {
                ArrayList addsno = new ArrayList();
                int sno = 0;
                FpSpread2.Sheets[0].RowCount = 0;
                FpSpread2.Sheets[0].ColumnCount = 4;
                FpSpread2.Sheets[0].RowHeader.Visible = false;
                FpSpread2.Sheets[0].AutoPostBack = false;
                FpSpread2.Height = 360;
                FpSpread2.Width = 930;
                FpSpread2.CommandBar.Visible = false;
                Dictionary<int, double> dicsubcol = new Dictionary<int, double>();
                Dictionary<int, int> totalpercentage = new Dictionary<int, int>();
                FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
                darkstyle.BackColor = Color.Brown;
                darkstyle.ForeColor = Color.White;
                FpSpread2.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
                FarPoint.Web.Spread.CheckBoxCellType chkcel1 = new FarPoint.Web.Spread.CheckBoxCellType();
                chkcel1.AutoPostBack = false;
                FarPoint.Web.Spread.TextCellType txt = new FarPoint.Web.Spread.TextCellType();
                FarPoint.Web.Spread.ButtonCellType but = new FarPoint.Web.Spread.ButtonCellType("MyCommand", FarPoint.Web.Spread.ButtonType.ImageButton, "~/images/view11.png");
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 2].Text = "App No";
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 3].Text = "View";
                // FpSpread2.Sheets[0].ColumnHeader.Cells[0, 3].BackColor = Color.MistyRose;
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                FpSpread2.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                FpSpread2.Sheets[0].Columns[2].Visible = false;
                FpSpread2.Sheets[0].Columns[0].Width = 40;
                FpSpread2.Sheets[0].Columns[1].Width = 50;
                FpSpread2.Sheets[0].Columns[0].Visible = true;
                string[] frmdat = TextBox2.Text.Split(' ');
                string[] fdate = frmdat[0].Split('/');
                string fromdate = fdate[2].ToString() + "-" + fdate[1].ToString() + "-" + fdate[0].ToString();
                string[] trmdat = TextBox3.Text.Split(' ');
                string[] tdate = trmdat[0].Split('/');
                string tomdate = tdate[2].ToString() + "-" + tdate[1].ToString() + "-" + tdate[0].ToString();
                string com = "";
                string com1 = "";
                if (txtbatch.Text != " " && ddldegree.SelectedItem.Text != "--Select--" && ddledu.SelectedItem.Text != "--Select--" && ddldept.SelectedItem.Text != "--Select--" && ddltype.SelectedItem.Text != "--Select--")
                {
                    com = "select s.usercode,s.criteria_Code,a.app_no,app_formno,CONVERT(varchar(10), date_applied,103) as date_applied,stud_name,sex,Relationship,parent_name ,CONVERT(varchar(10), dob,103) as dob ,parent_occu,mother_tongue,religion,citizen,community,caste,TamilOrginFromAndaman,IsExService,handy,visualhandy,first_graduate,CampusReq,DistinctSport,co_curricular,parent_addressC,Streetc,Cityc,parent_statec,Countryc,parent_pincodec,Student_Mobile,StuPer_Id,parent_phnoc,alter_mobileno,parent_addressP,Streetp,cityp,parent_statep,Countryp,parent_pincodep,parent_phnop,a.degree_code,batch_year,a.college_code,SubCaste,isdisable ,isdisabledisc,islearningdis,missionarydisc,MissionaryChild,seattype,current_semester,ncccadet,Institute_name,instaddress,medium,isgrade,Part1Language,Part2Language,percentage,university_code,uni_state,psubjectno,registerno,acual_marks,max_marks,pass_month,pass_year,noofattempt,ph.grade,sd.course_code,sd.branch_code,sd.tancet_mark,Vocational_stream,a.Alternativedegree_code,sd.securedmark from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code   and s.isapprove =2 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1";
                    if (ddldept.SelectedItem.Text == "English Literature" || ddldept.SelectedItem.Text == "English" || ddldept.SelectedItem.Text == "Tamil Literature")
                    {
                        com1 = " select distinct a.app_no,acual_marks from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code    and s.isapprove =2 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1  ";
                    }
                    else
                    {
                        com1 = " select distinct a.app_no,percentage from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code    and s.isapprove =2 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1  ";
                    }
                    //if (spsearch == 1)
                    //{
                    if (TextBox4.Text != "")
                    {
                        com = com + "and a.stud_name like'%" + TextBox4.Text + "%'";//modified by abarna
                        com1 = com1 + "and a.stud_name like'%" + TextBox4.Text + "%'";
                    }
                    if (TextBox5.Text != "")
                    {
                        com = com + "and a.Student_Mobile='" + TextBox5.Text + "'";
                        com1 = com1 + "and a.Student_Mobile='" + TextBox5.Text + "'";
                    }
                    if (TextBox6.Text != "")
                    {
                        com = com + "and a.app_formno='" + TextBox6.Text + "'";
                        com1 = com1 + "and a.app_formno='" + TextBox6.Text + "'";
                    }
                    //}
                    //else
                    //{
                    com = com + " and select_date between '" + fromdate + "' and '" + tomdate + "'";
                    com1 = com1 + " and select_date between '" + fromdate + "' and '" + tomdate + "'";
                    //}
                    string adminlang = "";
                    string adm3 = "select * from admitcolumnset where textcriteria = 'subjel' and College_Code ='" + college_code + "' and setcolumn='" + ddldept.SelectedItem.Value + "'";
                    ds1.Clear();
                    ds1 = dt.select_method_wo_parameter(adm3, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                        {
                            if (adminlang == "")
                            {
                                adminlang = "" + Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                            }
                            else
                            {
                                adminlang = adminlang + "'" + "," + "'" + Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                            }
                        }
                    }
                    if (adminlang.Trim() == "")
                    {
                        com = com + "  and psubjectno not in(sd.Part1Language,sd.Part2Language)";
                    }
                    else
                    {
                        com = com + " and (sd.Part1Language in('" + adminlang + "') or sd.Part2Language in ('" + adminlang + "'))";
                        com1 = com1 + " and ( sd.Part1Language in('" + adminlang + "') or sd.Part2Language in ('" + adminlang + "') )";
                    }
                    string admin = "";
                    // string adm = "select * from admitcolumnset where textcriteria = 'relig' and user_code='" + user_code + "'";
                    string adm = "select column_name from admitcolumnset where (textcriteria ='community' or textcriteria ='relig') and setcolumn ='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    ds1 = dt.select_method_wo_parameter(adm, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                        {
                            if (admin == "")
                            {
                                admin = ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                            else
                            {
                                admin = admin + "," + ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                        }
                        if (admin.Trim() != "")
                        {
                            string TextValuenew = d2.GetFunction("select TextCode  from TextValTable where TextCriteria ='comm' and TextCriteria2 ='comm1' and TextVal ='Others'");
                            if (TextValuenew.Trim() != "" && TextValuenew.Trim() != "0")
                            {
                                admin = admin + "," + TextValuenew;
                            }
                        }
                        if (orderflage == true)
                        {
                            com = com + "and s.criteria_Code='" + textcode + "'";
                            com1 = com1 + "and s.criteria_Code='" + textcode + "'";
                        }
                        else
                        {
                            string region = rs.GetSelectedItemsValueAsString(cbl_religion);
                            if (region.Trim() == "")
                            {
                                com = com + "and ( a.religion in (" + admin + ") or a.community in (" + admin + "))";
                                com1 = com1 + "and ( a.religion in (" + admin + ") or a.community in (" + admin + "))";
                            }
                            else
                            {
                                com = com + "and ( a.religion in ('" + region + "') and a.community in (" + admin + "))";
                                com1 = com1 + "and ( a.religion in ('" + region + "') and a.community in (" + admin + "))";
                            }
                        }
                        if (cb_voc.Checked == true)
                            com += " and isnull(sd.Vocational_stream,0)='1'";
                        string board = rs.GetSelectedItemsValueAsString(cbl_BoardUniv);
                        string medium = rs.GetSelectedItemsValueAsString(cbl_comm);
                        string attempts = rs.GetSelectedItemsValueAsString(cblAttempt);
                        if (medium.Trim() != "")
                            com += " and sd.medium in('" + medium + "')";
                        if (attempts.Trim() != "")
                            com += " and noofattempt in('" + attempts + "')";
                        if (board.Trim() != "")
                            com += " and sd.Course_code in('" + board + "')";
                        int dummycount = 0;
                        string admin1 = "";
                        // string adm1 = "select * from admitcolumnset where textcriteria = 'subjec' and user_code='" + user_code + "'";
                        string adm1 = "select * from admitcolumnset where textcriteria = 'subjec' and setcolumn='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                        ds1.Clear();
                        ds1 = dt.select_method_wo_parameter(adm1, "text");
                        if (ds1.Tables[0].Rows.Count > 0)
                        {
                            for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                            {
                                if (admin1 == "")
                                {
                                    dummycount++;
                                    admin1 = Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                                }
                                else
                                {
                                    dummycount++;
                                    admin1 = admin1 + "," + Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                                }
                            }
                        }
                        string admin2 = "";
                        string adm2 = "select * from admitcolumnset where textcriteria = 'subjea' and setcolumn='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                        ds1.Clear();
                        ds1 = dt.select_method_wo_parameter(adm2, "text");
                        if (ds1.Tables[0].Rows.Count > 0)
                        {
                            for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                            {
                                if (admin2 == "")
                                {
                                    admin2 = Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                                }
                                else
                                {
                                    admin2 = admin2 + "," + Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                                }
                            }
                        }
                        if (adminlang.Trim() != "")
                        {
                            if (ddldept.SelectedItem.Text == "Tamil Literature")
                            {
                                com = com + " and (Part1Language=psubjectno) order by acual_marks desc";
                                com1 = com1 + " and (Part1Language=psubjectno) order by acual_marks desc";
                            }
                            else if (ddldept.SelectedItem.Text == "English Literature" || ddldept.SelectedItem.Text == "English")
                            {
                                com = com + " and (Part2Language=psubjectno) order by acual_marks desc";
                                com1 = com1 + " and (Part2Language=psubjectno) order by acual_marks desc";
                            }
                        }
                        ds = dt.select_method_wo_parameter(com, "text");
                        ddummy.Clear();
                        ddummy = dt.select_method_wo_parameter(com1, "Text");
                        DataSet gradeset = new DataSet();
                        string gradequery = "select Frange,Trange,Mark_Grade  from Grade_Master where College_Code =" + college_code + " and batch_year =" + txtbatch.Text + "";
                        gradeset = dt.select_method_wo_parameter(gradequery, "Text");
                        if (adminlang == "")
                        {
                            DataView dvcheck = new DataView();
                            DataTable data = new DataTable();
                            DataView dummyview;
                            if (ddummy.Tables[0].Rows.Count > 0)
                            {
                                for (int du = 0; du < ddummy.Tables[0].Rows.Count; du++)
                                {
                                    int total = 0;
                                    int maxtotal = 0;
                                    string app_no = Convert.ToString(ddummy.Tables[0].Rows[du]["app_no"]);
                                    ds.Tables[0].DefaultView.RowFilter = "app_no='" + app_no + "'";
                                    dvcheck = ds.Tables[0].DefaultView;
                                    if (dvcheck.Count > 0)
                                    {
                                        if (admin1.Trim() != "")
                                        {
                                            data = dvcheck.ToTable();
                                            dummyview = new DataView(data);
                                            dummyview.RowFilter = "psubjectno in (" + admin1 + ")";
                                            if (dummyview.Count == dummycount)
                                            {
                                                if (admin2.Trim() != "")
                                                {
                                                    data = dvcheck.ToTable();
                                                    dummyview = new DataView(data);
                                                    dummyview.RowFilter = "psubjectno in (" + admin2 + ")";
                                                    if (dummyview.Count > 0)
                                                    {
                                                        for (int cn = 0; cn < dvcheck.Count; cn++)
                                                        {
                                                            if (Convert.ToString(dvcheck[cn]["isgrade"]) == "False")
                                                            {
                                                                total = total + Convert.ToInt32(dvcheck[cn]["acual_marks"].ToString());
                                                            }
                                                            else
                                                            {
                                                                if (gradeset.Tables[0].Rows.Count > 0)
                                                                {
                                                                    DataView gradview = new DataView();
                                                                    string grade = Convert.ToString(dvcheck[cn]["grade"]);
                                                                    gradeset.Tables[0].DefaultView.RowFilter = "Mark_Grade='" + grade + "'";
                                                                    gradview = gradeset.Tables[0].DefaultView;
                                                                    if (gradview.Count > 0)
                                                                    {
                                                                        string fromrange = Convert.ToString(gradview[0]["Frange"]);
                                                                        string torange = Convert.ToString(gradview[0]["Trange"]);
                                                                        if (fromrange.Trim() != "" && torange.Trim() != "")
                                                                        {
                                                                            double midpoint = (Convert.ToDouble(fromrange) + Convert.ToDouble(torange)) / Convert.ToDouble(2);
                                                                            total = total + Convert.ToInt32(midpoint);
                                                                        }
                                                                        else
                                                                        {
                                                                            total = total + 0;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        total = total + 0;
                                                                    }
                                                                }
                                                            }
                                                            maxtotal = maxtotal + Convert.ToInt32(dvcheck[cn]["max_marks"].ToString());
                                                        }
                                                        double mark = Convert.ToDouble(total) / Convert.ToDouble(maxtotal) * 100;
                                                        dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(mark, 2)));
                                                    }
                                                }
                                                else
                                                {
                                                    for (int cn = 0; cn < dvcheck.Count; cn++)
                                                    {
                                                        if (Convert.ToString(dvcheck[cn]["isgrade"]) == "False")
                                                        {
                                                            total = total + Convert.ToInt32(dvcheck[cn]["acual_marks"].ToString());
                                                        }
                                                        else
                                                        {
                                                            if (gradeset.Tables[0].Rows.Count > 0)
                                                            {
                                                                DataView gradview = new DataView();
                                                                string grade = Convert.ToString(dvcheck[cn]["grade"]);
                                                                gradeset.Tables[0].DefaultView.RowFilter = "Mark_Grade='" + grade + "'";
                                                                gradview = gradeset.Tables[0].DefaultView;
                                                                if (gradview.Count > 0)
                                                                {
                                                                    string fromrange = Convert.ToString(gradview[0]["Frange"]);
                                                                    string torange = Convert.ToString(gradview[0]["Trange"]);
                                                                    if (fromrange.Trim() != "" && torange.Trim() != "")
                                                                    {
                                                                        double midpoint = (Convert.ToDouble(fromrange) + Convert.ToDouble(torange)) / Convert.ToDouble(2);
                                                                        total = total + Convert.ToInt32(midpoint);
                                                                    }
                                                                    else
                                                                    {
                                                                        total = total + 0;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    total = total + 0;
                                                                }
                                                            }
                                                        }
                                                        maxtotal = maxtotal + Convert.ToInt32(dvcheck[cn]["max_marks"].ToString());
                                                    }
                                                    double mark1 = Convert.ToDouble(total) / Convert.ToDouble(maxtotal) * 100;
                                                    dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(mark1, 2)));
                                                }
                                            }
                                        }
                                        else
                                        {
                                            for (int cn = 0; cn < dvcheck.Count; cn++)
                                            {
                                                if (Convert.ToString(dvcheck[cn]["isgrade"]) == "False")
                                                {
                                                    total = total + Convert.ToInt32(dvcheck[cn]["acual_marks"].ToString());
                                                }
                                                else
                                                {
                                                    if (gradeset.Tables[0].Rows.Count > 0)
                                                    {
                                                        DataView gradview = new DataView();
                                                        string grade = Convert.ToString(dvcheck[cn]["grade"]);
                                                        gradeset.Tables[0].DefaultView.RowFilter = "Mark_Grade='" + grade + "'";
                                                        gradview = gradeset.Tables[0].DefaultView;
                                                        if (gradview.Count > 0)
                                                        {
                                                            string fromrange = Convert.ToString(gradview[0]["Frange"]);
                                                            string torange = Convert.ToString(gradview[0]["Trange"]);
                                                            if (fromrange.Trim() != "" && torange.Trim() != "")
                                                            {
                                                                double midpoint = (Convert.ToDouble(fromrange) + Convert.ToDouble(torange)) / Convert.ToDouble(2);
                                                                total = total + Convert.ToInt32(midpoint);
                                                            }
                                                            else
                                                            {
                                                                total = total + 0;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            total = total + 0;
                                                        }
                                                    }
                                                }
                                                maxtotal = maxtotal + Convert.ToInt32(dvcheck[cn]["max_marks"].ToString());
                                            }
                                            double mark2 = Convert.ToDouble(total) / Convert.ToDouble(maxtotal) * 100;
                                            dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(mark2, 2)));
                                        }
                                    }
                                }
                                dicsubcol = dicsubcol.OrderByDescending(x => x.Value).ToDictionary(x => x.Key, x => x.Value);
                                ViewState["recommend"] = dicsubcol;
                            }
                        }
                        string colm = "";
                        string priority = "      select * from admitcolumnset where textcriteria='column' and College_Code ='" + college_code + "' order by CONVERT(int, priority )";
                        ds1 = dt.select_method_wo_parameter(priority, "text");
                        if (ds1.Tables[0].Rows.Count > 0)
                        {
                            for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                            {
                                colm = ds1.Tables[0].Rows[i]["column_name"].ToString();
                                FpSpread2.Sheets[0].ColumnCount++;
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() != "User Name")
                                {
                                    FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Text = ds1.Tables[0].Rows[i]["setcolumn"].ToString();
                                    // FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                                    FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                    FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                    FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Locked = true;
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].CellType = txt;
                                }
                                else
                                {
                                    FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Text = "Recommended By";
                                    FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                                    FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                    FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                    FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Locked = true;
                                }
                                if (FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Text == "Subject Percentage")
                                {
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Width = 90;
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "State")
                                {
                                    string getvalue = dt.GetFunction("select MAX(rights_Code) from security_user_right where rights_desc='Online Admission' and user_code ='" + user_code + "' and college_code ='" + Session["collegecode"] + "'");
                                    if (getvalue != "3")
                                    {
                                        FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Visible = false;
                                    }
                                }
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "Mother Tongue")
                                {
                                    string getvalue = dt.GetFunction("select MAX(rights_Code) from security_user_right where rights_desc='Online Admission' and user_code ='" + user_code + "' and college_code ='" + Session["collegecode"] + "'");
                                    if (getvalue != "3")
                                    {
                                        FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Visible = false;
                                    }
                                }
                                if (ddltype.SelectedItem.Text.ToString().ToUpper() != "MCA")
                                {
                                    if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "TANCET Mark")
                                    {
                                        FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Visible = false;
                                    }
                                }
                                if (FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Text == "DOB")
                                {
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Width = 90;
                                }
                                if (FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Text == "Student Name")
                                {
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Text == "Address")
                                {
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Text == "City")
                                {
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Width = 100;
                                }
                                if (FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Text == "Email_Id")
                                {
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Text == "Mobile No")
                                {
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Width = 100;
                                }
                                if (FpSpread2.Sheets[0].ColumnHeader.Cells[0, FpSpread2.Sheets[0].ColumnCount - 1].Text == "Subject")
                                {
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Width = 180;
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].Visible = false;
                                    FpSpread2.Sheets[0].Columns[FpSpread2.Sheets[0].ColumnCount - 1].CellType = txt;
                                }
                            }
                            int cont = 0;
                            string txtval = Convert.ToString(txttop.Text);
                            if (txtval.Trim() == "")
                            {
                                txtval = Convert.ToString(dicsubcol.Count);
                            }
                            FpSpread2.Sheets[0].RowCount = 0;
                            DataView dv = new DataView();
                            if (ddummy.Tables[0].Rows.Count > 0)
                            {
                                if (adminlang == "")
                                {
                                    if (dicsubcol.Count > 0)
                                    {
                                        int sno_Value = 0;
                                        foreach (var kvp in dicsubcol)
                                        {
                                            if (sno_Value < Convert.ToInt32(txtval))
                                            {
                                                string app_no = kvp.Key.ToString();
                                                string percentage = kvp.Value.ToString();
                                                ds.Tables[0].DefaultView.RowFilter = "app_no='" + app_no + "'";
                                                dv = ds.Tables[0].DefaultView;
                                                if (dv.Count > 0)
                                                {
                                                    sno_Value++;
                                                    FpSpread2.Sheets[0].RowCount++;
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(sno_Value);
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(dv[0]["criteria_Code"]);
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Note = Convert.ToString(dv[0]["seattype"]);
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Font.Name = "Times New Roman";
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].CellType = chkcel1;
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Value = false;
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Font.Name = "Times New Roman";
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(dv[0]["app_no"]);
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(dv[0]["app_formno"]);
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 2].Note = Convert.ToString(dv[0]["batch_year"]);
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 2].Font.Name = "Times New Roman";
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 3].CellType = but;
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 3].Font.Name = "Times New Roman";
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                                                    int col = 4;
                                                    for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                                                    {
                                                        col++;
                                                        string colmname = Convert.ToString(ds1.Tables[0].Rows[i]["column_name"]);
                                                        if (colmname.Trim() != "course_code")
                                                        {
                                                            if (colmname.Trim() != "SubjectPercen")
                                                            {
                                                                if (colmname.Trim() != "TamilOrginFromAndaman" && colmname.Trim() != "IsExService" && colmname.Trim() != "isdisable" && colmname.Trim() != "first_graduate" && colmname.Trim() != "CampusReq" && colmname.Trim() != "ncccadet" && colmname.Trim() != "Vocational_stream")
                                                                {
                                                                    if (colmname.Trim() != "criteria_Code" && colmname.Trim() != "parent_statep" && colmname.Trim() != "mother_tongue" && colmname.Trim() != "parent_occu" && colmname.Trim() != "religion" && colmname.Trim() != "citizen" && colmname.Trim() != "community" && colmname.Trim() != "caste" && colmname.Trim() != "DistinctSport" && colmname.Trim() != "co_curricular" && colmname.Trim() != "medium" && colmname.Trim() != "university_code")
                                                                    {
                                                                        if (colmname.Trim() != "usercode")
                                                                        {
                                                                            if (colmname.Trim() != "TotalPercentage")
                                                                            {
                                                                                if (colmname.Trim() != "sex")
                                                                                {
                                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(dv[0][colmname]);
                                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                                }
                                                                                else
                                                                                {
                                                                                    string gendervalue = Convert.ToString(dv[0][colmname]);
                                                                                    if (gendervalue == "0")
                                                                                    {
                                                                                        gendervalue = "Male";
                                                                                    }
                                                                                    else if (gendervalue == "1")
                                                                                    {
                                                                                        gendervalue = "Female";
                                                                                    }
                                                                                    else if (gendervalue == "2")
                                                                                    {
                                                                                        gendervalue = "Transgender";
                                                                                    }
                                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(gendervalue);
                                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(percentage);
                                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Center;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            string usernem = dt.GetFunction("select USER_ID   from UserMaster where User_code='" + Convert.ToString(dv[0][colmname]) + "' and college_code ='" + Session["collegecode"] + "'");
                                                                            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                                            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        string textval = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "'  and college_code ='" + Session["collegecode"] + "'");
                                                                        if (textval == "0")
                                                                        {
                                                                            textval = "";
                                                                        }
                                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Text = textval;
                                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    string test_Value = "";
                                                                    if (Convert.ToString(dv[0][colmname]) == "False")
                                                                    {
                                                                        test_Value = "No";
                                                                    }
                                                                    else
                                                                    {
                                                                        test_Value = "Yes";
                                                                    }
                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(test_Value);
                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                                                            {
                                                                string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                            }
                                                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                                            {
                                                                string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                                string dept = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0]["branch_code"]) + "' and (TextCriteria='branc') and college_code ='" + Session["collegecode"] + "'");
                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Text = usernem + " " + dept;
                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                break;
                                            }
                                        }
                                        FpSpread2.Sheets[0].PageSize = FpSpread2.Sheets[0].RowCount;
                                        FpSpread2.Visible = true;
                                        lbltotalcount2.Text = " " + " Recommended" + " " + ": " + FpSpread2.Sheets[0].RowCount;
                                        // lbltotalcount1.Text = " " + " ShortList" + " " + ": " + FpSpread2.Sheets[0].RowCount;
                                        lbltotalcount2.Visible = true;
                                        Button2.Visible = false;
                                        ckbx.Visible = true;
                                        btnconform.Visible = false;
                                        btnunpaid.Visible = false;
                                        btnChallan.Visible = false;
                                        btnadmitcard.Visible = false;
                                        btnadmitprint.Visible = false;
                                        btnleft.Visible = false;
                                        if (spsearch == 1)
                                        {
                                            TabContainer1.ActiveTab = TabContainer1.Tabs[2];
                                            spsearch = 0;
                                            TextBox4.Text = "";
                                            TextBox5.Text = "";
                                        }
                                        // lblnew1.Visible = true;
                                        //  lblnew1.Text = " " + (cont) + " New";
                                    }
                                }
                                else
                                {
                                    DataView dvcheck = new DataView();
                                    DataTable data = new DataTable();
                                    DataTable dnew;
                                    DataView dummyview;
                                    dicsubcol.Clear();
                                    if (ddummy.Tables[0].Rows.Count > 0)
                                    {
                                        for (int du = 0; du < ddummy.Tables[0].Rows.Count; du++)
                                        {
                                            int total = 0;
                                            int maxtotal = 0;
                                            string app_no = Convert.ToString(ddummy.Tables[0].Rows[du]["app_no"]);
                                            ds.Tables[0].DefaultView.RowFilter = "app_no='" + app_no + "' and psubjectno='" + adminlang + "'";
                                            dvcheck = ds.Tables[0].DefaultView;
                                            if (dvcheck.Count > 0)
                                            {
                                                //string acuualmark = Convert.ToString(dvcheck[0]["acual_marks"]);
                                                //string maxmark = Convert.ToString(dvcheck[0]["max_marks"]);
                                                //double finalvalue = Convert.ToDouble(acuualmark) / Convert.ToDouble(maxmark) * Convert.ToDouble(100);
                                                //dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(finalvalue, 2)));
                                                if (Convert.ToString(dvcheck[0]["isgrade"]) == "False")
                                                {
                                                    string acuualmark = Convert.ToString(dvcheck[0]["acual_marks"]);
                                                    string maxmark = Convert.ToString(dvcheck[0]["max_marks"]);
                                                    if (acuualmark.Trim() != "" && maxmark.Trim() != "")
                                                    {
                                                        double finalvalue = Convert.ToDouble(acuualmark) / Convert.ToDouble(maxmark) * Convert.ToDouble(100);
                                                        dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(finalvalue, 2)));
                                                    }
                                                }
                                                else
                                                {
                                                    dnew = dvcheck.ToTable();
                                                    if (gradeset.Tables[0].Rows.Count > 0)
                                                    {
                                                        DataView gradview = new DataView();
                                                        if (dnew.Rows.Count > 0)
                                                        {
                                                            for (int jk = 0; jk < dnew.Rows.Count; jk++)
                                                            {
                                                                string grade = Convert.ToString(dnew.Rows[jk]["grade"]);
                                                                string max = Convert.ToString(dnew.Rows[jk]["max_marks"]);
                                                                gradeset.Tables[0].DefaultView.RowFilter = "Mark_Grade='" + grade + "'";
                                                                gradview = gradeset.Tables[0].DefaultView;
                                                                if (gradview.Count > 0)
                                                                {
                                                                    string fromrange = Convert.ToString(gradview[0]["Frange"]);
                                                                    string torange = Convert.ToString(gradview[0]["Trange"]);
                                                                    if (fromrange.Trim() != "" && torange.Trim() != "")
                                                                    {
                                                                        double midpoint = (Convert.ToDouble(fromrange) + Convert.ToDouble(torange)) / Convert.ToDouble(2);
                                                                        double finalvalue = Convert.ToDouble(midpoint) / Convert.ToDouble(max) * Convert.ToDouble(100);
                                                                        dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(finalvalue, 2)));
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    dicsubcol = dicsubcol.OrderByDescending(x => x.Value).ToDictionary(x => x.Key, x => x.Value);
                                    ViewState["recommend"] = dicsubcol;
                                    txtval = Convert.ToString(txttop.Text);
                                    if (txtval.Trim() == "")
                                    {
                                        txtval = Convert.ToString(dicsubcol.Count);
                                    }
                                    if (dicsubcol.Count > 0)
                                    {
                                        FpSpread2.Sheets[0].RowCount = 0;
                                        ArrayList addroll = new ArrayList();
                                        int sno_Value = 0;
                                        foreach (var kvp in dicsubcol)
                                        {
                                            if (sno_Value < Convert.ToInt32(txtval))
                                            {
                                                string app_no = kvp.Key.ToString();
                                                string percentage = kvp.Value.ToString();
                                                ds.Tables[0].DefaultView.RowFilter = "app_no='" + app_no + "'";
                                                dv = ds.Tables[0].DefaultView;
                                                if (dv.Count > 0)
                                                {
                                                    if (!addroll.Contains(app_no))
                                                    {
                                                        addroll.Add(app_no);
                                                        //if (Convert.ToString(ds.Tables[0].Rows[0]["isview"]) == "0")
                                                        //{
                                                        //    cont++;
                                                        //}
                                                        sno_Value++;
                                                        FpSpread2.Sheets[0].RowCount++;
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(sno_Value);
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(dv[0]["criteria_Code"]);
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Note = Convert.ToString(dv[0]["seattype"]);
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Font.Name = "Times New Roman";
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].CellType = chkcel1;
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Value = false;
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Font.Name = "Times New Roman";
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(dv[0]["app_no"]);
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(dv[0]["app_formno"]);
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 2].Note = Convert.ToString(dv[0]["batch_year"]);
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 2].Font.Name = "Times New Roman";
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 3].CellType = but;
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 3].Font.Name = "Times New Roman";
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                                                        int col = 4;
                                                        for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                                                        {
                                                            col++;
                                                            string colmname = Convert.ToString(ds1.Tables[0].Rows[i]["column_name"]);
                                                            if (colmname.Trim() != "course_code")
                                                            {
                                                                if (colmname.Trim() != "SubjectPercen")
                                                                {
                                                                    if (colmname.Trim() != "TamilOrginFromAndaman" && colmname.Trim() != "IsExService" && colmname.Trim() != "isdisable" && colmname.Trim() != "first_graduate" && colmname.Trim() != "CampusReq" && colmname.Trim() != "ncccadet" && colmname.Trim() != "Vocational_stream")
                                                                    {
                                                                        if (colmname.Trim() != "criteria_Code" && colmname.Trim() != "parent_statep" && colmname.Trim() != "mother_tongue" && colmname.Trim() != "parent_occu" && colmname.Trim() != "religion" && colmname.Trim() != "citizen" && colmname.Trim() != "community" && colmname.Trim() != "caste" && colmname.Trim() != "DistinctSport" && colmname.Trim() != "co_curricular" && colmname.Trim() != "medium" && colmname.Trim() != "university_code")
                                                                        {
                                                                            if (colmname.Trim() != "usercode")
                                                                            {
                                                                                if (colmname.Trim() == "TotalPercentage")
                                                                                {
                                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(percentage);
                                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                                }
                                                                                else
                                                                                {
                                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(dv[0][colmname]);
                                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                string usernem = dt.GetFunction("select USER_ID   from UserMaster where User_code='" + Convert.ToString(dv[0][colmname]) + "' and college_code ='" + Session["collegecode"] + "'");
                                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            string textval = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "'  and college_code ='" + Session["collegecode"] + "'");
                                                                            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Text = textval;
                                                                            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                            FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        string test_Value = "";
                                                                        if (Convert.ToString(dv[0][colmname]) == "False")
                                                                        {
                                                                            test_Value = "No";
                                                                        }
                                                                        else
                                                                        {
                                                                            test_Value = "Yes";
                                                                        }
                                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(test_Value);
                                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                        FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                    }
                                                                }
                                                            }
                                                            else
                                                            {
                                                                if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                                                                {
                                                                    string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                }
                                                                if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                                                {
                                                                    string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                                    string dept = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0]["branch_code"]) + "' and (TextCriteria='branc') and college_code ='" + Session["collegecode"] + "'");
                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Text = usernem + " " + dept;
                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                break;
                                            }
                                        }
                                        FpSpread2.Sheets[0].PageSize = FpSpread2.Sheets[0].RowCount;
                                        FpSpread2.Visible = true;
                                        lbltotalcount2.Text = " " + " Recommended" + " " + ": " + FpSpread2.Sheets[0].RowCount;
                                        // lbltotalcount1.Text = " " + " ShortList" + " " + ": " + FpSpread2.Sheets[0].RowCount;
                                        lbltotalcount2.Visible = true;
                                        Button2.Visible = false;
                                        ckbx.Visible = true;
                                        btnconform.Visible = false;
                                        btnunpaid.Visible = false;
                                        btnChallan.Visible = false;
                                        btnadmitcard.Visible = false;
                                        btnadmitprint.Visible = false;
                                        btnleft.Visible = false;
                                        if (spsearch == 1)
                                        {
                                            TabContainer1.ActiveTab = TabContainer1.Tabs[2];
                                            spsearch = 0;
                                            TextBox4.Text = "";
                                            TextBox5.Text = "";
                                        }
                                    }
                                    else
                                    {
                                        lblmg3.Visible = true;
                                        lblmg3.Text = "No Records Found";
                                        //lblnew1.Text = "0" + "New";
                                        FpSpread2.Visible = false;
                                        btnapprove.Visible = false;
                                        Button2.Visible = false;
                                        Button3.Visible = false;
                                        Button9.Visible = false;
                                        lbltotalcount.Visible = false;
                                        lbltotalcount1.Visible = false;
                                        lbltotalcount2.Visible = false;
                                        lbltotalcount2.Text = " " + " Recommended" + " " + ": " + "0";
                                        Label66.Visible = false;
                                        Label68.Visible = false;
                                        Label67.Visible = false;
                                        Label69.Visible = false;
                                        lbltotalfeepaid.Visible = false;
                                        lbltotalfeepaid_value.Visible = false;
                                        ckbx.Visible = false;
                                        btnconform.Visible = false;
                                        btnunpaid.Visible = false;
                                        btnChallan.Visible = false;
                                        btnadmitcard.Visible = false;
                                        btnadmitprint.Visible = false;
                                        btnleft.Visible = false;
                                    }
                                }
                            }
                            else
                            {
                                if (spsearch == 1)
                                {
                                    spread1();
                                }
                                else
                                {
                                    lblmg3.Visible = true;
                                    lblmg3.Text = "No Records Found";
                                    //lblnew1.Text = "0" + "New";
                                    FpSpread2.Visible = false;
                                    btnapprove.Visible = false;
                                    Button2.Visible = false;
                                    Button3.Visible = false;
                                    Button9.Visible = false;
                                    lbltotalcount.Visible = false;
                                    lbltotalcount1.Visible = false;
                                    lbltotalcount2.Visible = false;
                                    lbltotalcount2.Text = " " + " Recommended" + " " + ": " + "0";
                                    Label66.Visible = false;
                                    Label68.Visible = false;
                                    Label67.Visible = false;
                                    Label69.Visible = false;
                                    lbltotalfeepaid.Visible = false;
                                    lbltotalfeepaid_value.Visible = false;
                                    ckbx.Visible = false;
                                    btnconform.Visible = false;
                                    btnunpaid.Visible = false;
                                    btnChallan.Visible = false;
                                    btnadmitcard.Visible = false;
                                    btnadmitprint.Visible = false;
                                    btnleft.Visible = false;
                                }
                            }
                        }
                    }
                    else
                    {
                        if (spsearch != 1)
                        {
                            lblmg3.Visible = true;
                            lblmg3.Text = "No Records Found";
                            //lblnew1.Text = "0" + "New";
                            FpSpread2.Visible = false;
                            btnapprove.Visible = false;
                            Button2.Visible = false;
                            Button3.Visible = false;
                            Button9.Visible = false;
                            lbltotalcount.Visible = false;
                            lbltotalcount1.Visible = false;
                            lbltotalcount2.Visible = false;
                            lbltotalcount2.Text = " " + " Recommended" + " " + ": " + "0";
                            Label66.Visible = false;
                            Label68.Visible = false;
                            Label67.Visible = false;
                            Label69.Visible = false;
                            lbltotalfeepaid.Visible = false;
                            lbltotalfeepaid_value.Visible = false;
                            ckbx.Visible = false;
                            btnconform.Visible = false;
                            btnunpaid.Visible = false;
                            btnChallan.Visible = false;
                            btnadmitcard.Visible = false;
                            btnadmitprint.Visible = false;
                            btnleft.Visible = false;
                            // btnreject.Visible = false;
                        }
                        else
                        {
                            spread1();
                        }
                    }
                }
                else
                {
                    lblmg3.Visible = true;
                    lblmg3.Text = "Please Select All Values";
                    FpSpread2.Visible = false;
                    btnapprove.Visible = false;
                    Button2.Visible = false;
                    Button3.Visible = false;
                    Button9.Visible = false;
                    lbltotalcount.Visible = false;
                    lbltotalcount1.Visible = false;
                    Label66.Visible = false;
                    Label68.Visible = false;
                    Label67.Visible = false;
                    Label69.Visible = false;
                    lbltotalcount2.Visible = false;
                    lbltotalfeepaid.Visible = false;
                    lbltotalfeepaid_value.Visible = false;
                    ckbx.Visible = false;
                    btnconform.Visible = false;
                    btnunpaid.Visible = false;
                    btnChallan.Visible = false;
                    btnadmitcard.Visible = false;
                    btnadmitprint.Visible = false;
                    btnleft.Visible = false;
                }
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    protected void Checkselect_CheckedChanged(object sender, EventArgs e)
    {
        if (Convert.ToInt32(ViewState["spvl"]) == 0)
        {
            if (ckbx.Checked == true)
            {
                for (int j = 0; j < FpSpread3.Sheets[0].RowCount; j++)
                {
                    FpSpread3.Sheets[0].Cells[j, 1].Value = 1;
                }
            }
            else if (ckbx.Checked == false)
            {
                for (int j = 0; j < FpSpread3.Sheets[0].RowCount; j++)
                {
                    FpSpread3.Sheets[0].Cells[j, 1].Value = 0;
                }
            }
            btnapprove.Focus();
        }
        if (Convert.ToInt32(ViewState["spvl"]) == 1)
        {
            if (ckbx.Checked == true)
            {
                for (int j = 0; j < FpSpread3.Sheets[0].RowCount; j++)
                {
                    FpSpread3.Sheets[0].Cells[j, 1].Value = 1;
                }
            }
            else if (ckbx.Checked == false)
            {
                for (int j = 0; j < FpSpread3.Sheets[0].RowCount; j++)
                {
                    FpSpread3.Sheets[0].Cells[j, 1].Value = 0;
                }
            }
            btnapprove.Focus();
        }
        else if (Convert.ToInt32(ViewState["spvl"]) == 2)
        {
            if (ckbx.Checked == true)
            {
                for (int j = 0; j < FpSpread1.Sheets[0].RowCount; j++)
                {
                    FpSpread1.Sheets[0].Cells[j, 1].Value = 1;
                }
            }
            else if (ckbx.Checked == false)
            {
                for (int j = 0; j < FpSpread1.Sheets[0].RowCount; j++)
                {
                    FpSpread1.Sheets[0].Cells[j, 1].Value = 0;
                }
            }
            Button2.Focus();
        }
        else if (Convert.ToInt32(ViewState["spvl"]) == 3)
        {
            if (ckbx.Checked == true)
            {
                for (int j = 0; j < FpSpread2.Sheets[0].RowCount; j++)
                {
                    FpSpread2.Sheets[0].Cells[j, 1].Value = 1;
                }
            }
            else if (ckbx.Checked == false)
            {
                for (int j = 0; j < FpSpread2.Sheets[0].RowCount; j++)
                {
                    FpSpread2.Sheets[0].Cells[j, 1].Value = 0;
                }
            }
            Button3.Focus();
        }
        else if (Convert.ToInt32(ViewState["spvl"]) == 4)
        {
            if (ckbx.Checked == true)
            {
                for (int j = 0; j < FpSpread4.Sheets[0].RowCount; j++)
                {
                    FpSpread4.Sheets[0].Cells[j, 3].Value = 1;
                }
            }
            else if (ckbx.Checked == false)
            {
                for (int j = 0; j < FpSpread4.Sheets[0].RowCount; j++)
                {
                    FpSpread4.Sheets[0].Cells[j, 3].Value = 0;
                }
            }
            Button9.Focus();
        }
    }
    protected void TabContainer1_ActiveTabChanged(object sender, EventArgs e)
    {
        ckbx.Checked = false;
        TabContainer1.Width = 960;
        spvl = 0;
        ViewState["spvl"] = spvl;
        //rights();    //Commented By Jeyaprakash
        FpSpread1.Visible = false;
        FpSpread3.Visible = false;
        btnconform.Visible = false;
        //DropDownList2.SelectedIndex = 1;
        DropDownList2.Items.Clear();
        DropDownList2.Enabled = false;
        if (fg != 6)
        {
            TabContainer1.ActiveTabIndex = fg;
        }
        if (TabContainer1.ActiveTabIndex == 0)
        {
            spvl = 1;
            ViewState["spvl"] = spvl;
            firsttable.Attributes.Add("Style", "border-bottom-style: solid; border-top-style: solid;border-left-style: solid; border-right-style: solid; background-color: #e3e3ef;border-width: 0.2px; border-color: indigo; border-radius: 5px; left: 16px; top: 0px;position: absolute; width: 800px;");
            Label61.Visible = false;
            DropDownList2.Visible = false;
            // btnapprove.Visible = false;
            //Button2.Visible = true;
            // Button3.Visible = true;
            //Button9.Visible = true;
            subdivreport.Visible = false;
            FpSpread1.Visible = false;
            FpSpread2.Visible = false;
            FpSpread4.Visible = false;
            spreadFeeConfirm.Visible = false;
            FpSpread3.Visible = true;
            btnadmitcard.Visible = false;
            btnadmitprint.Visible = false;
            btnleft.Visible = false;
            btnconform.Visible = false;
            btnunpaid.Visible = false;
            btnChallan.Visible = false;
            string set = "select CONVERT(VARCHAR(2),DATEPART(DAY, fromdate))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, fromdate)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR, fromdate))as fromdate,CONVERT(VARCHAR(2),DATEPART(DAY, todate))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, todate)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR, todate))as todate from setting_application where Edu_level='UG' and college_code='13' and setting_type='Apply Settings'";//type_College='DAY' and 
            ds = dt.select_method_wo_parameter(set, "text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                TextBox2.Text = ds.Tables[0].Rows[0]["fromdate"].ToString();
                TextBox2.Attributes.Add("readonly", "readonly");
                TextBox3.Text = ds.Tables[0].Rows[0]["todate"].ToString();
                TextBox3.Attributes.Add("readonly", "readonly");
            }
            btnapprove.Visible = true;
            Button2.Visible = true;
            Button3.Visible = false;
            Button9.Visible = false;
        }
        else if (TabContainer1.ActiveTabIndex == 3)
        {
            spvl = 4;
            ViewState["spvl"] = spvl;
            firsttable.Attributes.Add("Style", "border-bottom-style: solid; border-top-style: solid;border-left-style: solid; border-right-style: solid; background-color: #e3e3ef;border-width: 0.2px; border-color: indigo; border-radius: 5px; left: 16px; top: 0px;position: absolute; width: 950px;");
            TextBox2.Text = System.DateTime.Now.ToString("dd/MM/yyyy");
            TextBox3.Text = System.DateTime.Now.ToString("dd/MM/yyyy");
            btnapprove.Visible = false;
            Button2.Visible = false;
            Button3.Visible = false;
            Button9.Visible = true;
            FpSpread4.Visible = true;
            FpSpread1.Visible = false;
            FpSpread2.Visible = false;
            FpSpread3.Visible = false;
            subdivreport.Visible = true;
            Label61.Visible = true;
            Label66.Visible = true;
            Label67.Visible = true;
            Label68.Visible = true;
            Label69.Visible = true;
            DropDownList2.Items.Add(new ListItem("Wait to Admitted", "4"));
            DropDownList2.Items.Add(new ListItem("Admitted", "1"));       //Added By Jeyaprakash
            DropDownList2.Items.Add(new ListItem("Not Interested", "3"));
            DropDownList2.Visible = true;
            DropDownList2.Enabled = true;
            lnkchirstian.Visible = true;
            lnkbc.Visible = true;
            lnkbcm.Visible = true;
            lnkoc.Visible = true;
            lnksc.Visible = true;
            lnksca.Visible = true;
            lnkst.Visible = true;
            lnkmbcdnc.Visible = true;
        }
        else if (TabContainer1.ActiveTabIndex == 1)
        {
            spvl = 2;
            ViewState["spvl"] = spvl;
            firsttable.Attributes.Add("Style", "border-bottom-style: solid; border-top-style: solid;border-left-style: solid; border-right-style: solid; background-color: #e3e3ef;border-width: 0.2px; border-color: indigo; border-radius: 5px; left: 16px; top: 0px;position: absolute; width: 800px;");
            TextBox2.Text = System.DateTime.Now.ToString("dd/MM/yyyy");
            TextBox3.Text = System.DateTime.Now.ToString("dd/MM/yyyy");
            btnapprove.Visible = false;
            Button2.Visible = true;
            Button3.Visible = false;
            Button9.Visible = true;
            subdivreport.Visible = false;
            FpSpread1.Visible = true;
            FpSpread3.Visible = false;
            FpSpread2.Visible = false;
            FpSpread4.Visible = false;
            spreadFeeConfirm.Visible = false;
            Label61.Visible = false;
            DropDownList2.Visible = false;
        }
        else if (TabContainer1.ActiveTabIndex == 2)
        {
            spvl = 3;
            ViewState["spvl"] = spvl;
            firsttable.Attributes.Add("Style", "border-bottom-style: solid; border-top-style: solid;border-left-style: solid; border-right-style: solid; background-color: #e3e3ef;border-width: 0.2px; border-color: indigo; border-radius: 5px; left: 16px; top: 0px;position: absolute; width: 800px;");
            TextBox2.Text = System.DateTime.Now.ToString("dd/MM/yyyy");
            TextBox3.Text = System.DateTime.Now.ToString("dd/MM/yyyy");
            btnapprove.Visible = false;
            Button2.Visible = false;
            if (tabpanel4.Visible)
            {
                Button3.Visible = true;
            }
            Button9.Visible = true;
            subdivreport.Visible = true;
            FpSpread2.Visible = true;
            FpSpread1.Visible = false;
            FpSpread3.Visible = false;
            FpSpread4.Visible = false;
            spreadFeeConfirm.Visible = false;
            Label61.Visible = false;
            DropDownList2.Visible = false;
            lnkchirstian.Visible = true;
            lnkbc.Visible = true;
            lnkbcm.Visible = true;
            lnkoc.Visible = true;
            lnksc.Visible = true;
            lnksca.Visible = true;
            lnkst.Visible = true;
            lnkmbcdnc.Visible = true;
        }
        else if (TabContainer1.ActiveTabIndex == 4)
        {
            spvl = 5;
            ViewState["spvl"] = spvl;
            firsttable.Attributes.Add("Style", "border-bottom-style: solid; border-top-style: solid;border-left-style: solid; border-right-style: solid; background-color: #e3e3ef;border-width: 0.2px; border-color: indigo; border-radius: 5px; left: 16px; top: 0px;position: absolute; width: 950px;");
            TextBox2.Text = System.DateTime.Now.ToString("dd/MM/yyyy");
            TextBox3.Text = System.DateTime.Now.ToString("dd/MM/yyyy");
            btnapprove.Visible = false;
            Button2.Visible = false;
            Button3.Visible = false;
            Button9.Visible = true;
            FpSpread4.Visible = true;
            FpSpread1.Visible = false;
            FpSpread2.Visible = false;
            FpSpread3.Visible = false;
            spreadFeeConfirm.Visible = true;
            subdivreport.Visible = true;
            Label61.Visible = true;
            Label66.Visible = true;
            Label67.Visible = true;
            Label68.Visible = true;
            Label69.Visible = true;
            DropDownList2.Items.Add(new ListItem("Admitted", "1"));  //Added By Jeyaprakash
            DropDownList2.Items.Add(new ListItem("Fee Paid", "3"));
            DropDownList2.Visible = true;
            lnkchirstian.Visible = true;
            lnkbc.Visible = true;
            lnkbcm.Visible = true;
            lnkoc.Visible = true;
            lnksc.Visible = true;
            lnksca.Visible = true;
            lnkst.Visible = true;
            lnkmbcdnc.Visible = true;
            btnleft.Visible = false;
            btnadmitprint.Visible = false;
            btnadmitcard.Visible = false;
            btnChallan.Visible = false;
            btnconform.Visible = false;
            DropDownList2.Enabled = true;
        }
        else if (TabContainer1.ActiveTabIndex == 5)
        {
            spvl = 6;
            ViewState["spvl"] = spvl;
            firsttable.Attributes.Add("Style", "border-bottom-style: solid; border-top-style: solid;border-left-style: solid; border-right-style: solid; background-color: #e3e3ef;border-width: 0.2px; border-color: indigo; border-radius: 5px; left: 16px; top: 0px;position: absolute; width: 950px;");
            TextBox2.Text = System.DateTime.Now.ToString("dd/MM/yyyy");
            TextBox3.Text = System.DateTime.Now.ToString("dd/MM/yyyy");
            btnapprove.Visible = false;
            Button2.Visible = false;
            Button3.Visible = false;
            Button9.Visible = false;
            FpSpread4.Visible = false;
            FpSpread1.Visible = false;
            FpSpread2.Visible = false;
            FpSpread3.Visible = false;
            spreadFeeConfirm.Visible = false;
            subdivreport.Visible = false;
            Label61.Visible = false;
            Label66.Visible = false;
            Label67.Visible = false;
            Label68.Visible = false;
            Label69.Visible = false;
            DropDownList2.Visible = false;
            lnkchirstian.Visible = false;
            lnkbc.Visible = false;
            lnkbcm.Visible = false;
            lnkoc.Visible = false;
            lnksc.Visible = false;
            lnksca.Visible = false;
            lnkst.Visible = false;
            lnkmbcdnc.Visible = false;
        }
        else if (TabContainer1.ActiveTabIndex == 6)
        {
            spvl = 7;
            ViewState["spvl"] = spvl;
            firsttable.Attributes.Add("Style", "border-bottom-style: solid; border-top-style: solid;border-left-style: solid; border-right-style: solid; background-color: #e3e3ef;border-width: 0.2px; border-color: indigo; border-radius: 5px; left: 16px; top: 0px;position: absolute; width: 950px;");
            TextBox2.Text = System.DateTime.Now.ToString("dd/MM/yyyy");
            TextBox3.Text = System.DateTime.Now.ToString("dd/MM/yyyy");
            btnapprove.Visible = false;
            Button2.Visible = false;
            Button3.Visible = false;
            Button9.Visible = false;
            FpSpread4.Visible = false;
            FpSpread1.Visible = false;
            FpSpread2.Visible = false;
            FpSpread3.Visible = false;
            spreadFeeConfirm.Visible = false;
            subdivreport.Visible = false;
            Label61.Visible = false;
            Label66.Visible = false;
            Label67.Visible = false;
            Label68.Visible = false;
            Label69.Visible = false;
            DropDownList2.Visible = false;
            lnkchirstian.Visible = false;
            lnkbc.Visible = false;
            lnkbcm.Visible = false;
            lnkoc.Visible = false;
            lnksc.Visible = false;
            lnksca.Visible = false;
            lnkst.Visible = false;
            lnkmbcdnc.Visible = false;
        }
        fg = TabContainer1.ActiveTabIndex;
        FpSpread1.Visible = false;
        FpSpread2.Visible = false;
        FpSpread3.Visible = false;
        FpSpread4.Visible = false;
        spreadFeeConfirm.Visible = false;
        Informationtable.Visible = false;
        // Button1_Click(sender, e);
    }
    //public int sub_count { get; set; }
    public void rights()
    {
        try
        {
            Session["admissionrights"] = "";
            string rights = "select * from security_user_right where rights_desc='Online Admission' and user_code='" + user_code + "' and college_code='" + college_code + "'";
            ds = dt.select_method_wo_parameter(rights, "text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                bool entryflag = false;   //Added By Jeyaprakash
                for (int h = 0; h < ds.Tables[0].Rows.Count; h++)
                {
                    string value = ds.Tables[0].Rows[h]["rights_code"].ToString();
                    if (value == "0")
                    {
                        tabpanel1.Visible = true;
                        if (entryflag == false)
                        {
                            TabContainer1.ActiveTabIndex = 0;
                            entryflag = true;
                        }
                        //Button9.Visible = true;
                        //btnapprove.Visible = true;
                    }
                    else if (value == "1")
                    {
                        lblnew.Visible = true;
                        tabpanel2.Visible = true;
                        if (entryflag == false)
                        {
                            TabContainer1.ActiveTabIndex = 1;
                            entryflag = true;
                        }
                        // Button2.Visible = true;
                        //Button3.Visible = false;
                        //Button9.Visible = false;
                        //btnapprove.Visible = true;
                        //Button9.Visible = true;
                    }
                    else if (value == "2")
                    {
                        lblnew1.Visible = true;
                        tabpanel3.Visible = true;
                        if (entryflag == false)
                        {
                            TabContainer1.ActiveTabIndex = 2;
                            entryflag = true;
                        }
                        //Button2.Visible = true;
                        //Button9.Visible = true;
                        //Button3.Visible = true;
                        //Button9.Visible = true;
                    }
                    else if (value == "3")
                    {
                        lblnew2.Visible = true;
                        tabpanel4.Visible = true;
                        //Button3.Visible = true;
                        //Button9.Visible = true;
                        lnkmng.Visible = true;
                        Session["admissionrights"] = "1";
                        if (entryflag == false)
                        {
                            TabContainer1.ActiveTabIndex = 3;
                            entryflag = true;
                        }
                        //lnkchirstian.Visible = false;
                        //lnkbc.Visible = false;
                        //lnkbcm.Visible = false;
                        //lnkoc.Visible = false;
                        //lnksc.Visible = false;
                        //lnksca.Visible = false;
                        //lnkst.Visible = false;
                        //lnkmbcdnc.Visible = false;
                    }
                    else if (value == "4")
                    {
                        tabpanel5.Visible = true;
                        if (entryflag == false)
                        {
                            TabContainer1.ActiveTabIndex = 4;
                            entryflag = true;
                        }
                    }
                    else if (value == "5")
                    {
                        tabpanel6.Visible = true;
                        if (entryflag == false)
                        {
                            TabContainer1.ActiveTabIndex = 5;
                            entryflag = true;
                        }
                    }
                    else if (value == "6")
                    {
                        tabpanel7.Visible = true;
                        if (entryflag == false)
                        {
                            TabContainer1.ActiveTabIndex = 6;
                            entryflag = true;
                        }
                    }
                }
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    public void bindsum()
    {
        try
        {
            if (orderflage == false && checkvalue_flage == false)
            {
                lnkall.ForeColor = System.Drawing.Color.Green;
                string query = "select SUM(allot) as total from admitcolumnset where college_code='" + Convert.ToString(Session["collegecode"]) + "' and (textcriteria='relig' or textcriteria ='community') and setcolumn ='" + ddldept.SelectedItem.Value + "'";
                ds.Clear();
                ds = dt.select_method_wo_parameter(query, "Text");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    string alote = Convert.ToString(ds.Tables[0].Rows[0]["total"]);
                    if (alote.Trim() != "" && alote != null)
                    {
                        lbltotalfeepaid.Text = "Selected :  " + alote + "";
                        lbltotalfeepaid.Visible = true;
                        lbltotalfeepaid_value.Text = "Admitted :  0";
                        lbltotalfeepaid_value.Visible = true;
                        //lbltotalfeepaid_value.Visible = false;
                    }
                    else
                    {
                        lbltotalfeepaid.Text = "Selected :  0";
                        lbltotalfeepaid.Visible = true;
                        lbltotalfeepaid_value.Text = "Admitted :  0";
                        lbltotalfeepaid_value.Visible = true;
                    }
                    lnkall.ForeColor = System.Drawing.Color.Green;
                    lnkoc.ForeColor = System.Drawing.Color.Blue;
                    lnkst.ForeColor = System.Drawing.Color.Blue;
                    lnksca.ForeColor = System.Drawing.Color.Blue;
                    lnksc.ForeColor = System.Drawing.Color.Blue;
                    lnkmbcdnc.ForeColor = System.Drawing.Color.Blue;
                    lnkbcm.ForeColor = System.Drawing.Color.Blue;
                    lnkbc.ForeColor = System.Drawing.Color.Blue;
                    lnkchirstian.ForeColor = System.Drawing.Color.Blue;
                    lnkmng.ForeColor = System.Drawing.Color.Blue;
                }
            }
        }
        catch
        {
        }
    }
    public void showbtns()
    {
        btnapprove.Visible = false;
        Button2.Visible = false;
        Button3.Visible = false;
        Button9.Visible = false;
        if (TabContainer1.ActiveTabIndex == 0 && FpSpread3.Rows.Count > 0)
        {
            btnapprove.Visible = true;
            Button2.Visible = true;
            Button3.Visible = false;
            Button9.Visible = false;
        }
        else if (TabContainer1.ActiveTabIndex == 1 && FpSpread1.Rows.Count > 0)
        {
            Button2.Visible = true;
            Button3.Visible = false;
            Button9.Visible = false;
        }
        else if (TabContainer1.ActiveTabIndex == 2 && FpSpread2.Rows.Count > 0)
        {
            if (tabpanel4.Visible)
            {
                Button3.Visible = true;
            }
            Button9.Visible = true;
        }
        else if (TabContainer1.ActiveTabIndex == 3 && FpSpread4.Rows.Count > 0)
        {
            if (DropDownList2.SelectedItem.Text == "Admitted")   //Added By Jeyaprakash
            {
                Button9.Visible = true;
            }
            else if (DropDownList2.SelectedItem.Text == "Not Interested")
            {
                Button9.Visible = false;
            }
        }
    }
    protected void Button1_Click(object sender, EventArgs e)
    {
        try
        {
            Label66.Visible = true;
            Label68.Visible = true;
            Label67.Visible = true;
            Label69.Visible = true;
            //rights();   //Commented By Jeyaprakash
            //  spread();
            btn_calltr.Visible = false;
            if (Convert.ToInt32(ViewState["spvl"]) == 1)
            {
                if (managementflage == false)
                {
                    bindsum();
                }
                spread();
                lblmg1.Visible = false;
                lblmg2.Visible = false;
                lblmg3.Visible = false;
                lbltotalcount1.Visible = false;
                lbltotalcount2.Visible = false;
                lbltotalcount3.Visible = false;
                lnkall.Visible = false;
                tabpanel1.Visible = true;
                // Button9.Visible = true;
            }
            else if (Convert.ToInt32(ViewState["spvl"]) == 2)
            {
                // btnapprove.Visible = false;
                btn_calltr.Visible = true;
                bindsum();
                spread2();
                lblmg1.Visible = false;
                lblmg.Visible = false;
                lblmg3.Visible = false;
                lbltotalcount.Visible = false;
                lbltotalcount2.Visible = false;
                lbltotalcount3.Visible = false;
                lnkall.Visible = true;
                //btnapprove.Visible = true;
                //Button9.Visible = true;
            }
            else if (Convert.ToInt32(ViewState["spvl"]) == 3)
            {
                //btnapprove.Visible = false;
                bindsum();
                spread3();
                lblmg1.Visible = false;
                lblmg2.Visible = false;
                lblmg.Visible = false;
                lbltotalcount.Visible = false;
                lbltotalcount1.Visible = false;
                lbltotalcount3.Visible = false;
                lnkall.Visible = true;
                // Button2.Visible = false;
                //  Button9.Visible = true;
            }
            else if (Convert.ToInt32(ViewState["spvl"]) == 4)
            {
                // btnapprove.Visible = false;
                bindsum();
                spread1();
                lblmg.Visible = false;
                lblmg2.Visible = false;
                lblmg3.Visible = false;
                lbltotalcount.Visible = false;
                lbltotalcount1.Visible = false;
                lbltotalcount2.Visible = false;
                lnkall.Visible = true;
                btnleft.Visible = false;
                // Button3.Visible = false;
                // Button9.Visible = true;
            }
            else if (Convert.ToInt32(ViewState["spvl"]) == 5)
            {
                // btnapprove.Visible = false;
                bindsum();
                spreadFeeConfirmLoad();
                lblmg.Visible = false;
                lblmg2.Visible = false;
                lblmg3.Visible = false;
                lbltotalcount.Visible = false;
                lbltotalcount1.Visible = false;
                lbltotalcount2.Visible = false;
                lnkall.Visible = true;
                // Button3.Visible = false;
                // Button9.Visible = true;
            }
            else if (Convert.ToInt32(ViewState["spvl"]) == 6)
            {
                // btnapprove.Visible = false;
                bindsum();
                spread1();
                lblmg.Visible = false;
                lblmg2.Visible = false;
                lblmg3.Visible = false;
                lbltotalcount.Visible = false;
                lbltotalcount1.Visible = false;
                lbltotalcount2.Visible = false;
                lnkall.Visible = true;
                // Button3.Visible = false;
                // Button9.Visible = true;
            }
            else if (Convert.ToInt32(ViewState["spvl"]) == 7)
            {
                // btnapprove.Visible = false;
                bindsum();
                spread1();
                lblmg.Visible = false;
                lblmg2.Visible = false;
                lblmg3.Visible = false;
                lbltotalcount.Visible = false;
                lbltotalcount1.Visible = false;
                lbltotalcount2.Visible = false;
                lnkall.Visible = true;
                // Button3.Visible = false;
                // Button9.Visible = true;
            }
            Informationtable.Visible = true;
            string settings = "Departmentallocate";
            string type = ddltype.SelectedItem.Text;
            string eduleve = ddledu.SelectedItem.Text;
            string concat = type + "-" + eduleve;
            string percentage = "";
            string management = "";
            double managementallocation = 0;
            double totalstrenth = 0;
            string total_strength = "";
            string tot = " select No_Of_seats from Degree where Course_Id='" + ddldegree.SelectedValue + "' and Degree_Code='" + ddldept.SelectedValue + "' and college_code='" + college_code + "'";
            tot = tot + " select value  from Master_Settings where settings ='Departmentallocate" + concat + "'";
            tot = tot + " select value  from Master_Settings where settings ='Managmentallocate" + concat + "'";
            ds = d2.select_method_wo_parameter(tot, "text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                // Label68.Text = Convert.ToString(ds.Tables[0].Rows[0]["No_Of_seats"].ToString());
                total_strength = Convert.ToString(ds.Tables[0].Rows[0]["No_Of_seats"].ToString());
            }
            if (ds.Tables[1].Rows.Count > 0)
            {
                percentage = Convert.ToString(ds.Tables[1].Rows[0]["value"]);
            }
            if (ds.Tables[2].Rows.Count > 0)
            {
                management = Convert.ToString(ds.Tables[2].Rows[0]["value"]);
            }
            if (total_strength.Trim() != "" && percentage.Trim() != "")
            {
                totalstrenth = Convert.ToDouble(total_strength) / Convert.ToDouble(100) * Convert.ToDouble(percentage);
                managementallocation = Convert.ToDouble(total_strength) / Convert.ToDouble(100) * Convert.ToDouble(management);
            }
            if (Session["admissionrights"] == "1")
            {
                Label68.Text = Convert.ToString(Convert.ToInt32(Math.Round(totalstrenth) + Math.Round(managementallocation)));
            }
            else
            {
                Label68.Text = Convert.ToString(Convert.ToInt32(Math.Round(totalstrenth)));
            }
            if (total_strength.Trim() != "" && management.Trim() != "")
            {
                managementallocation = Convert.ToDouble(total_strength) / Convert.ToDouble(100) * Convert.ToDouble(management);
                ViewState["managementallocation"] = Convert.ToString(managementallocation);
            }
            string total = "";
            if (Session["admissionrights"] == "1")
            {
                total = " select SUM(allot_Confirm) from admitcolumnset where setcolumn='" + ddldept.SelectedItem.Value + "' and (TextCriteria='community' or TextCriteria='relig' or textcriteria ='Management') and college_code='" + Convert.ToString(Session["collegecode"]) + "' ";
            }
            else
            {
                total = " select SUM(allot_Confirm) from admitcolumnset where setcolumn='" + ddldept.SelectedItem.Value + "' and (TextCriteria='community' or TextCriteria='relig') and college_code='" + Convert.ToString(Session["collegecode"]) + "' ";
            }
            ds1 = dt.select_method_wo_parameter(total, "text");
            if (ds1.Tables[0].Rows.Count > 0)
            {
                if (Convert.ToString(ds1.Tables[0].Rows[0][0]).Trim() != "" && Convert.ToString(ds1.Tables[0].Rows[0][0]) != null)
                {
                    if (Session["admissionrights"] == "1")
                    {
                        Label69.Text = Convert.ToString(Convert.ToInt32(Math.Round(totalstrenth) + Math.Round(managementallocation)) - Convert.ToInt32(ds1.Tables[0].Rows[0][0]));
                    }
                    else
                    {
                        Label69.Text = Convert.ToString(Convert.ToInt32(totalstrenth) - Convert.ToInt32(ds1.Tables[0].Rows[0][0]));
                    }
                    lbltotalfeepaid_value.Text = "Admitted : " + Convert.ToString(ds1.Tables[0].Rows[0][0]);
                }
                else
                {
                    if (Session["admissionrights"] == "1")
                    {
                        Label69.Text = Convert.ToString(Convert.ToInt32(Math.Round(totalstrenth) + Math.Round(managementallocation)));
                    }
                    else
                    {
                        Label69.Text = Convert.ToString(Convert.ToInt32(totalstrenth));
                    }
                }
            }
            else
            {
                if (Session["admissionrights"] == "1")
                {
                    Label69.Text = Convert.ToString(Convert.ToInt32(Math.Round(totalstrenth) + Math.Round(managementallocation)));
                }
                else
                {
                    Label69.Text = Convert.ToString(Convert.ToInt32(totalstrenth));
                }
            }
        }
        catch (Exception ewx)
        {
        }
        showbtns();
    }
    protected void FpSpread2_command(object sender, EventArgs e)
    {
        try
        {
            Button3.Focus();
            tnspan.Visible = false;
            Tancetspan.Visible = false;
            string activerow = FpSpread2.ActiveSheetView.ActiveRow.ToString();
            string activecol = FpSpread2.ActiveSheetView.ActiveColumn.ToString();
            if (activecol == "3")
            {
                string app_no = Convert.ToString(FpSpread2.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text);
                Session["pdfapp_no"] = Convert.ToString(app_no);
                //string jg = "update applyn set isview='1' where app_no='" + FpSpread2.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text + "'  and degree_code='" + ddldept.SelectedValue + "' and college_code='" + college_code + "'";
                //int k = dt.update_method_wo_parameter(jg, "text");
                panel4.Attributes.Add("Style", "background: none repeat scroll 0 0 rgba(0, 0, 0, 0.83); border-color: inherit; border-style: none; border-width: 1px; height: 101%; left: -8px; position: absolute; top: -9px; width: 101%; display: block;");
                string type = ddltype.SelectedItem.Text;
                string edulevel = ddledu.SelectedItem.Text;
                string grduation = ddldegree.SelectedItem.Text;
                string course = ddldept.SelectedItem.Text;
                if (edulevel.ToString().ToUpper() == "PG")
                {
                    pgdiv_verification.Visible = true;
                    ugdiv_verification.Visible = false;
                }
                else if (edulevel.ToString().ToUpper() == "UG")
                {
                    pgdiv_verification.Visible = false;
                    ugdiv_verification.Visible = true;
                }
                string query = "select app_formno,CONVERT(varchar(10), date_applied,103) as date_applied,stud_name,sex,Relationship,parent_name,CONVERT(varchar(10), dob,103) as dob ,parent_occu,mother_tongue,religion,citizen,community,caste,TamilOrginFromAndaman,IsExService,handy,visualhandy,first_graduate,CampusReq,DistinctSport,co_curricular,parent_addressC,Streetc,Cityc,parent_statec,Countryc,parent_pincodec,Student_Mobile,StuPer_Id,parent_phnoc,alter_mobileno,parent_addressP,Streetp,cityp,parent_statep,Countryp,parent_pincodep,parent_phnop,degree_code,batch_year,college_code,SubCaste,isdisable ,isdisabledisc,islearningdis,missionarydisc,MissionaryChild,seattype,current_semester,ncccadet from applyn a where  a.app_no='" + app_no + "'";
                query = query + " select course_entno,course_code,university_code,Vocational_stream,Institute_name,percentage,instaddress,medium,branch_code ,Part1Language,Part2Language,isgrade,uni_state,registration_no,type_semester,majorallied_percent,major_percent,type_major,tancet_mark,tancetmark_year from Stud_prev_details where app_no ='" + app_no + "'";
                query = query + " select textval,textcode from textvaltable where TextCriteria='unive'";
                ds.Clear();
                ds = dt.select_method_wo_parameter(query, "text");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    college_span.InnerHtml = ":  " + Convert.ToString(type);
                    degree_Span.InnerHtml = ":  " + Convert.ToString(edulevel);
                    graduation_span.InnerHtml = ":  " + Convert.ToString(grduation);
                    course_span.InnerHtml = ":  " + Convert.ToString(course);
                    applicantname_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["stud_name"]);
                    dob_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["dob"]);
                    if (Convert.ToString(ds.Tables[0].Rows[0]["sex"]) == "0")
                    {
                        gender_span.InnerHtml = ":  Male";
                    }
                    else if (Convert.ToString(ds.Tables[0].Rows[0]["sex"]) == "1")
                    {
                        gender_span.InnerHtml = ":  Female";
                    }
                    else if (Convert.ToString(ds.Tables[0].Rows[0]["sex"]) == "2")
                    {
                        gender_span.InnerHtml = ":  Transgender";
                    }
                    parent_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_name"]);
                    string occupation = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["parent_occu"]));
                    occupation_span.InnerHtml = ":  " + occupation.ToString();
                    string mothertonge = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["mother_tongue"]));
                    mothertongue_span.InnerHtml = ":  " + Convert.ToString(mothertonge);
                    string relisgion = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["religion"]));
                    religion_span.InnerHtml = ":  " + Convert.ToString(relisgion);
                    string city = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["citizen"]));
                    nationality_span.InnerHtml = ":  " + Convert.ToString(city);
                    string coummnity = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["community"]));
                    commuity_span.InnerHtml = ":  " + Convert.ToString(coummnity);
                    if (Convert.ToString(ds.Tables[0].Rows[0]["caste"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["caste"]) != "0")
                    {
                        string scas = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["caste"]));
                        Caste_span.InnerHtml = ":  " + Convert.ToString(scas);
                    }
                    else
                    {
                        Caste_span.InnerHtml = ":  -";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["TamilOrginFromAndaman"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["TamilOrginFromAndaman"]) != "False")
                    {
                        tamilorigin_span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        tamilorigin_span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["IsExService"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["IsExService"]) != "False")
                    {
                        Ex_service_span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        Ex_service_span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["isdisable"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["isdisable"]) != "False")
                    {
                        Differentlyable_Span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        Differentlyable_Span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["first_graduate"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["first_graduate"]) != "False")
                    {
                        first_generation_Span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        first_generation_Span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["CampusReq"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["CampusReq"]) != "False")
                    {
                        residancerequired_span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        residancerequired_span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["DistinctSport"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["DistinctSport"]) != "0")
                    {
                        string disy = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["DistinctSport"]));
                        sport_span.InnerHtml = ":  " + Convert.ToString(disy);
                    }
                    else
                    {
                        sport_span.InnerHtml = ":  -";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["co_curricular"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["co_curricular"]) != "0")
                    {
                        string cocour = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["co_curricular"]));
                        Co_Curricular_span.InnerHtml = ":  " + Convert.ToString(cocour);
                    }
                    else
                    {
                        Co_Curricular_span.InnerHtml = ":  -";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["ncccadet"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["ncccadet"]) != "False")
                    {
                        ncccadetspan.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        ncccadetspan.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[1].Rows[0]["Vocational_stream"]).Trim() != "" && Convert.ToString(ds.Tables[1].Rows[0]["Vocational_stream"]) != "False")
                    {
                        Vocationalspan.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        Vocationalspan.InnerHtml = ":  No";
                    }
                    caddressline1_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_addressC"]);
                    string address = Convert.ToString(ds.Tables[0].Rows[0]["Streetc"]);
                    if (ds.Tables[0].Rows[0]["Streetc"].ToString().Trim() != "")
                    {
                        string[] split = address.Split('/');
                        if (split.Length > 1)
                        {
                            if (Convert.ToString(split[0]).Trim() != "")
                            {
                                Addressline2_span.InnerHtml = ":  " + Convert.ToString(split[0]);
                            }
                            else
                            {
                                Addressline2_span.InnerHtml = ":  -";
                            }
                            if (Convert.ToString(split[1]).Trim() != "")
                            {
                                Addressline3_span.InnerHtml = ":  " + Convert.ToString(split[1]);
                            }
                            else
                            {
                                Addressline3_span.InnerHtml = ":  -";
                            }
                        }
                        else
                        {
                            Addressline2_span.InnerHtml = ":  " + Convert.ToString(split[0]);
                        }
                    }
                    else
                    {
                        Addressline2_span.InnerHtml = ":  -";
                        Addressline3_span.InnerHtml = ":  -";
                    }
                    if (ds.Tables[0].Rows[0]["Cityc"].ToString().Trim() != "")
                    {
                        city_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["Cityc"]);
                    }
                    else
                    {
                        city_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_statec"].ToString().Trim() != "")
                    {
                        string state = subjectcode(ds.Tables[0].Rows[0]["parent_statec"].ToString());
                        state_span.InnerHtml = ":  " + Convert.ToString(state);
                    }
                    else
                    {
                        state_span.InnerHtml = ":  -";
                    }
                    if (ds.Tables[0].Rows[0]["Countryc"].ToString().Trim() != "")
                    {
                        string country = subjectcode(ds.Tables[0].Rows[0]["Countryc"].ToString());
                        Country_span.InnerHtml = ":  " + Convert.ToString(country);
                    }
                    else
                    {
                        Country_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_pincodec"].ToString().Trim() != "")
                    {
                        Postelcode_Span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_pincodec"]);
                    }
                    else
                    {
                        Postelcode_Span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["Student_Mobile"].ToString().Trim() != "")
                    {
                        Mobilenumber_Span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["Student_Mobile"]);
                    }
                    else
                    {
                        Mobilenumber_Span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["alter_mobileno"].ToString().Trim() != "")
                    {
                        Alternatephone_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["alter_mobileno"]);
                    }
                    else
                    {
                        Alternatephone_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["StuPer_Id"].ToString().Trim() != "")
                    {
                        emailid_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["StuPer_Id"]);
                    }
                    else
                    {
                        emailid_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_phnoc"].ToString().Trim() != "")
                    {
                        std_ist_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_phnoc"]);
                    }
                    else
                    {
                        std_ist_span.InnerHtml = "-";
                    }
                    // permnant
                    paddressline1_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_addressP"]);
                    if (ds.Tables[0].Rows[0]["Streetp"].ToString().Trim() != "")
                    {
                        string streat = Convert.ToString(ds.Tables[0].Rows[0]["Streetp"]);
                        if (streat.Trim() != "")
                        {
                            string[] splitstreat = streat.Split('/');
                            if (splitstreat.Length > 1)
                            {
                                if (Convert.ToString(splitstreat[0]).Trim() != "")
                                {
                                    paddressline2_span.InnerHtml = ":  " + Convert.ToString(splitstreat[0]);
                                }
                                else
                                {
                                    paddressline2_span.InnerHtml = ":  -";
                                }
                                if (Convert.ToString(splitstreat[0]).Trim() != "")
                                {
                                    paddressline3_span.InnerHtml = ":  " + Convert.ToString(splitstreat[1]);
                                }
                                else
                                {
                                    paddressline3_span.InnerHtml = ":  -";
                                }
                            }
                            else
                            {
                                paddressline2_span.InnerHtml = ":  " + Convert.ToString(splitstreat[0]);
                            }
                        }
                        paddressline2_span.InnerHtml = ":  -";
                        paddressline3_span.InnerHtml = ":  -";
                    }
                    else
                    {
                        paddressline2_span.InnerHtml = ":  -";
                        paddressline3_span.InnerHtml = ":  -";
                    }
                    if (ds.Tables[0].Rows[0]["Cityp"].ToString().Trim() != "")
                    {
                        pcity_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["Cityp"]);
                    }
                    else
                    {
                        pcity_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_statep"].ToString().Trim() != "")
                    {
                        string state = subjectcode(ds.Tables[0].Rows[0]["parent_statep"].ToString());
                        pstate_span.InnerHtml = ":  " + Convert.ToString(state);
                    }
                    else
                    {
                        pstate_span.InnerHtml = ":  -";
                    }
                    if (ds.Tables[0].Rows[0]["Countryp"].ToString().Trim() != "")
                    {
                        string country = subjectcode(ds.Tables[0].Rows[0]["Countryp"].ToString());
                        pcountry_span.InnerHtml = ":  " + Convert.ToString(country);
                    }
                    else
                    {
                        pcountry_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_pincodep"].ToString().Trim() != "")
                    {
                        ppostelcode_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_pincodep"]);
                    }
                    else
                    {
                        ppostelcode_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_phnop"].ToString().Trim() != "")
                    {
                        pstdisd_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_phnop"]);
                    }
                    else
                    {
                        pstdisd_span.InnerHtml = "-";
                    }
                }
                if (ds.Tables[1].Rows.Count > 0)
                {
                    if (ddledu.SelectedItem.Text == "UG")
                    {
                        ugtotaldiv.Visible = true;
                        pgtotaldiv.Visible = false;
                        string courseentronumber = Convert.ToString(ds.Tables[1].Rows[0]["course_entno"]);
                        string coursecode = Convert.ToString(ds.Tables[1].Rows[0]["course_code"]);
                        string university_code = Convert.ToString(ds.Tables[1].Rows[0]["university_code"]);
                        string institutename = Convert.ToString(ds.Tables[1].Rows[0]["Institute_name"]);
                        string percentage = Convert.ToString(ds.Tables[1].Rows[0]["percentage"]);
                        string institueaddress = Convert.ToString(ds.Tables[1].Rows[0]["instaddress"]);
                        string medium = Convert.ToString(ds.Tables[1].Rows[0]["medium"]);
                        string part1language = Convert.ToString(ds.Tables[1].Rows[0]["Part1Language"]);
                        string part2language = Convert.ToString(ds.Tables[1].Rows[0]["Part2Language"]);
                        string isgrade = Convert.ToString(ds.Tables[1].Rows[0]["isgrade"]);
                        string university_state = Convert.ToString(ds.Tables[1].Rows[0]["uni_state"]);
                        // string part1language = Convert.ToString(ds.Tables[1].Rows[0]["Institute_name"]);
                        if (coursecode.Trim() != "")
                        {
                            string course1 = subjectcode(coursecode);
                            qualifyingexam_span.InnerHtml = ":  " + Convert.ToString(course1);
                        }
                        else
                        {
                            qualifyingexam_span.InnerHtml = ":  -";
                        }
                        if (institutename.Trim() != "")
                        {
                            Nameofschool_span.InnerHtml = ":  " + Convert.ToString(institutename);
                        }
                        else
                        {
                            Nameofschool_span.InnerHtml = "";
                        }
                        if (institueaddress.Trim() != "")
                        {
                            locationofschool_Span.InnerHtml = ":  " + Convert.ToString(institueaddress);
                        }
                        else
                        {
                            locationofschool_Span.InnerHtml = "";
                        }
                        if (medium.Trim() != "")
                        {
                            string m = subjectcode(medium);
                            mediumofstudy_span.InnerHtml = ":  " + Convert.ToString(m);
                        }
                        else
                        {
                            mediumofstudy_span.InnerHtml = ":  -";
                        }
                        if (university_code.Trim() != "")
                        {
                            string univ = subjectcode(university_code);
                            qualifyingboard_span.InnerHtml = ":  " + Convert.ToString(univ);
                        }
                        else
                        {
                            qualifyingboard_span.InnerHtml = ":  -";
                        }
                        if (isgrade.Trim() != "")
                        {
                            if (isgrade == "True")
                            {
                                marksgrade_span.InnerHtml = ":  Grade";
                            }
                            else
                            {
                                marksgrade_span.InnerHtml = ":  Marks";
                            }
                        }
                        string markquery = "select psubjectno,registerno,acual_marks,max_marks,noofattempt,pass_month,pass_year,semyear ,grade from perv_marks_history  where course_entno ='" + courseentronumber + "'";
                        ds.Clear();
                        ds = dt.select_method_wo_parameter(markquery, "Text");
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            DataTable data = new DataTable();
                            DataRow dr = null;
                            Hashtable hash = new Hashtable();
                            data.Columns.Add("Language", typeof(string));
                            data.Columns.Add("Subject", typeof(string));
                            data.Columns.Add("Marks Obtained", typeof(string));
                            data.Columns.Add("Month", typeof(string));
                            data.Columns.Add("Year", typeof(string));
                            data.Columns.Add("Register No / Roll No", typeof(string));
                            data.Columns.Add("No of Attempts", typeof(string));
                            data.Columns.Add("Maximum Marks", typeof(string));
                            hash.Add(0, "Language1");
                            hash.Add(1, "Language2");
                            hash.Add(2, " Subject1");
                            hash.Add(3, " Subject2");
                            hash.Add(4, " Subject3");
                            hash.Add(5, " Subject4");
                            hash.Add(6, " Subject5");
                            hash.Add(7, " Subject6");
                            hash.Add(8, " Subject7");
                            hash.Add(9, " Subject8");
                            hash.Add(10, " Subject9");
                            hash.Add(11, " Subject10");
                            hash.Add(12, " Subject11");
                            int totalmark = 0;
                            int maxtotal = 0;
                            for (int mark = 0; mark < ds.Tables[0].Rows.Count; mark++)
                            {
                                string subjectno = Convert.ToString(ds.Tables[0].Rows[mark]["psubjectno"]);
                                string actualmark = "";
                                if (isgrade == "True")
                                {
                                    actualmark = Convert.ToString(ds.Tables[0].Rows[mark]["grade"]);
                                }
                                else
                                {
                                    actualmark = Convert.ToString(ds.Tables[0].Rows[mark]["acual_marks"]);
                                }
                                string month = Convert.ToString(ds.Tables[0].Rows[mark]["pass_month"]);
                                string year = Convert.ToString(ds.Tables[0].Rows[mark]["pass_year"]);
                                string regno = Convert.ToString(ds.Tables[0].Rows[mark]["registerno"]);
                                string noofattenm = Convert.ToString(ds.Tables[0].Rows[mark]["noofattempt"]);
                                string maxmark = Convert.ToString(ds.Tables[0].Rows[mark]["max_marks"]);
                                dr = data.NewRow();
                                string lang = Convert.ToString(hash[mark]);
                                dr[0] = Convert.ToString(lang);
                                string sub = subjectcode(subjectno);
                                dr[1] = Convert.ToString(sub);
                                dr[2] = Convert.ToString(actualmark);
                                dr[3] = Convert.ToString(month);
                                dr[4] = Convert.ToString(year);
                                dr[5] = Convert.ToString(regno);
                                dr[6] = Convert.ToString(noofattenm);
                                dr[7] = Convert.ToString(maxmark);
                                data.Rows.Add(dr);
                                if (isgrade != "True")
                                {
                                    totalmark = totalmark + Convert.ToInt32(actualmark);
                                    maxtotal = maxtotal + Convert.ToInt32(maxmark);
                                }
                            }
                            if (isgrade != "True")
                            {
                                total_marks_secured.InnerHtml = ":  " + Convert.ToString(totalmark);
                                maximum_marks.InnerHtml = ":  " + Convert.ToString(maxtotal);
                                percentage_span.InnerHtml = ":  " + percentage;
                            }
                            VerificationGridug.DataSource = data;
                            VerificationGridug.DataBind();
                            if (VerificationGridug.Rows.Count > 0)
                            {
                                for (int v = 0; v < VerificationGridug.Rows.Count; v++)
                                {
                                    VerificationGridug.Rows[v].Cells[2].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[3].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[4].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[5].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[6].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[7].HorizontalAlign = HorizontalAlign.Center;
                                }
                            }
                        }
                    }
                    else if (ddledu.SelectedItem.Text == "PG")
                    {
                        ugtotaldiv.Visible = false;
                        pgtotaldiv.Visible = true;
                        string courseentronumber = Convert.ToString(ds.Tables[1].Rows[0]["course_entno"]);
                        string coursecode = Convert.ToString(ds.Tables[1].Rows[0]["course_code"]);
                        string university_code = Convert.ToString(ds.Tables[1].Rows[0]["university_code"]);
                        string institutename = Convert.ToString(ds.Tables[1].Rows[0]["Institute_name"]);
                        string percentage = Convert.ToString(ds.Tables[1].Rows[0]["percentage"]);
                        string institueaddress = Convert.ToString(ds.Tables[1].Rows[0]["instaddress"]);
                        string medium = Convert.ToString(ds.Tables[1].Rows[0]["medium"]);
                        string part1language = Convert.ToString(ds.Tables[1].Rows[0]["Part1Language"]);
                        string part2language = Convert.ToString(ds.Tables[1].Rows[0]["Part2Language"]);
                        string isgrade = Convert.ToString(ds.Tables[1].Rows[0]["isgrade"]);
                        string university_state = Convert.ToString(ds.Tables[1].Rows[0]["uni_state"]);
                        string typeofsubject = Convert.ToString(ds.Tables[1].Rows[0]["type_major"]);
                        string typeofsemester = Convert.ToString(ds.Tables[1].Rows[0]["type_semester"]);
                        string regno = Convert.ToString(ds.Tables[1].Rows[0]["registration_no"]);
                        string major = Convert.ToString(ds.Tables[1].Rows[0]["branch_code"]);
                        string majorpercentage = Convert.ToString(ds.Tables[1].Rows[0]["major_percent"]);
                        string majorallidepercentage = Convert.ToString(ds.Tables[1].Rows[0]["majorallied_percent"]);
                        string Tancet = Convert.ToString(ds.Tables[1].Rows[0]["tancet_mark"]);
                        string Tancetyear = Convert.ToString(ds.Tables[1].Rows[0]["tancetmark_year"]);
                        percentagemajorspan.InnerHtml = ":  " + Convert.ToString(percentage);
                        majorsubjectspan.InnerHtml = ":  " + Convert.ToString(majorpercentage);
                        alliedmajorspan.InnerHtml = ":  " + Convert.ToString(majorallidepercentage);
                        if (coursecode.Trim() != "")
                        {
                            string course1 = subjectcode(coursecode);
                            ugqualifyingexam_span.InnerHtml = ":  " + Convert.ToString(course1);
                        }
                        else
                        {
                            ugqualifyingexam_span.InnerHtml = ":  -";
                        }
                        if (institutename.Trim() != "")
                        {
                            nameofcollege_Sapn.InnerHtml = ":  " + Convert.ToString(institutename);
                        }
                        else
                        {
                            nameofcollege_Sapn.InnerHtml = "";
                        }
                        //17.06.16
                        DataView dv = new DataView();
                        ds.Tables[2].DefaultView.RowFilter = "textcode='" + university_code + "'";
                        dv = ds.Tables[2].DefaultView;
                        if (dv.Count > 0)
                        {
                            if (Convert.ToString(dv[0][0]).Trim() != "")
                            {
                                nameofuniver_city.InnerHtml = ":  " + Convert.ToString((dv[0][0]));
                            }
                            else
                            {
                                nameofuniver_city.InnerHtml = "";
                            }
                        }
                        if (institueaddress.Trim() != "")
                        {
                            locationofcollege_sapn.InnerHtml = ":  " + Convert.ToString(institueaddress);
                        }
                        else
                        {
                            locationofcollege_sapn.InnerHtml = "";
                        }
                        if (major.Trim() != "")
                        {
                            string major1 = subjectcode(major);
                            major_span.InnerHtml = ":  " + Convert.ToString(major1);
                        }
                        else
                        {
                            major_span.InnerHtml = "";
                        }
                        if (typeofsubject.Trim() != "")
                        {
                            if (typeofsubject == "1")
                            {
                                typeofsubject = "Single";
                            }
                            else if (typeofsubject == "2")
                            {
                                typeofsubject = "Double";
                            }
                            else if (typeofsubject == "3")
                            {
                                typeofsubject = "Triple";
                            }
                            typeofmajor_span.InnerHtml = ":  " + Convert.ToString(typeofsubject);
                        }
                        if (typeofsemester.Trim() != "")
                        {
                            if (typeofsemester == "True")
                            {
                                typeofsemester = "Semester";
                            }
                            else
                            {
                                typeofsemester = "Non Semester";
                            }
                            typeofsemester_span.InnerHtml = ":  " + Convert.ToString(typeofsemester);
                        }
                        if (medium.Trim() != "")
                        {
                            string lang = subjectcode(medium);
                            mediumofstudy_spanug.InnerHtml = ":  " + Convert.ToString(lang);
                        }
                        if (isgrade.Trim() != "")
                        {
                            if (isgrade == "True")
                            {
                                marksorgradeug_span.InnerHtml = ":  Grade";
                            }
                            else
                            {
                                marksorgradeug_span.InnerHtml = ":  Marks";
                            }
                        }
                        //if (isgrade.Trim() != "")
                        //{
                        //    marksorgradeug_span.InnerHtml = ":  " + Convert.ToString(isgrade);
                        //}
                        if (regno.Trim() != "")
                        {
                            reg_no_span.InnerHtml = ":  " + Convert.ToString(regno);
                        }
                        if (type == "MCA")
                        {
                            tnspan.Visible = true;
                            Tancetspan.Visible = true;
                            Tancetspan.InnerHtml = ": " + Convert.ToString(Tancet) + " - " + Convert.ToString(Tancetyear);
                        }
                        string pgquery = "select psubjectno,subject_typeno,acual_marks,max_marks,pass_month,pass_year,semyear ,grade from perv_marks_history where course_entno ='" + courseentronumber + "'";
                        ds.Clear();
                        ds = dt.select_method_wo_parameter(pgquery, "Text");
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            DataTable data = new DataTable();
                            DataRow dr = null;
                            Hashtable hash = new Hashtable();
                            data.Columns.Add("S.No", typeof(string));
                            //  data.Columns.Add("Sem/Year", typeof(string));
                            data.Columns.Add("Subject", typeof(string));
                            data.Columns.Add("Subject type", typeof(string));
                            data.Columns.Add("Marks", typeof(string));
                            data.Columns.Add("Month", typeof(string));
                            data.Columns.Add("Year", typeof(string));
                            data.Columns.Add("Maximum Marks", typeof(string));
                            int sno = 0;
                            for (int pg = 0; pg < ds.Tables[0].Rows.Count; pg++)
                            {
                                sno++;
                                string subjectno = Convert.ToString(ds.Tables[0].Rows[pg]["psubjectno"]);
                                string subjecttypeno = Convert.ToString(ds.Tables[0].Rows[pg]["subject_typeno"]);
                                string actualmark = "";
                                if (isgrade == "True")
                                {
                                    actualmark = Convert.ToString(ds.Tables[0].Rows[pg]["grade"]);
                                }
                                else
                                {
                                    actualmark = Convert.ToString(ds.Tables[0].Rows[pg]["acual_marks"]);
                                }
                                string month = Convert.ToString(ds.Tables[0].Rows[pg]["pass_month"]);
                                string year = Convert.ToString(ds.Tables[0].Rows[pg]["pass_year"]);
                                // string noofattenm = Convert.ToString(ds.Tables[0].Rows[pg]["noofattempt"]);
                                string maxmark = Convert.ToString(ds.Tables[0].Rows[pg]["max_marks"]);
                                dr = data.NewRow();
                                dr[0] = Convert.ToString(sno);
                                string subject = subjectcode(subjectno);
                                dr[1] = Convert.ToString(subject);
                                string typesub = subjectcode(subjecttypeno);
                                dr[2] = Convert.ToString(typesub);
                                dr[3] = Convert.ToString(actualmark);
                                dr[4] = Convert.ToString(month);
                                dr[5] = Convert.ToString(year);
                                dr[6] = Convert.ToString(maxmark);
                                data.Rows.Add(dr);
                            }
                            Verificationgridpg.DataSource = data;
                            Verificationgridpg.DataBind();
                            if (VerificationGridug.Rows.Count > 0)
                            {
                                for (int v = 0; v < Verificationgridpg.Rows.Count; v++)
                                {
                                    Verificationgridpg.Rows[v].Cells[3].HorizontalAlign = HorizontalAlign.Center;
                                    Verificationgridpg.Rows[v].Cells[4].HorizontalAlign = HorizontalAlign.Center;
                                    Verificationgridpg.Rows[v].Cells[5].HorizontalAlign = HorizontalAlign.Center;
                                    Verificationgridpg.Rows[v].Cells[6].HorizontalAlign = HorizontalAlign.Center;
                                }
                            }
                        }
                    }
                }
            }
            //if (activecol == "3")
            //{
            //    string jg = "update selectcriteria set isview='1' where app_no='" + FpSpread2.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text + "' and usercode='" + user_code + "' and degree_code='" + ddldept.SelectedValue + "' and college_code='" + college_code + "'";
            //    int k = dt.update_method_wo_parameter(jg, "text");
            //    panel4.Visible = true;
            //    string priority = "      select * from admitcolumnset where user_code='" + user_code + "' and textcriteria='column' order by priority";
            //    ds1 = dt.select_method_wo_parameter(priority, "text");
            //    if (ds1.Tables[0].Rows.Count > 0)
            //    {
            //        DataView dv = new DataView();
            //        ds1.Tables[0].DefaultView.RowFilter = "setcolumn='Student Name'";
            //        dv = ds1.Tables[0].DefaultView;
            //        Label23.Text = FpSpread2.Sheets[0].Cells[Convert.ToInt32(activerow), Convert.ToInt32(dv[0]["priority"].ToString()) + 3].Text;
            //    }
            //    string ad = "select * from applyn where app_no='" + FpSpread2.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text + "'";
            //    //string ad = "select Roll_No,religion,community,citizen,r.degree_code,r.Stud_Name,parent_name,dob,Student_Mobile,emailp,parent_addressP,Streetp,Cityp,Districtp,parent_pincodep  from applyn,Registration r  where applyn.app_no=r.App_No and applyn.degree_code=r.degree_code and applyn.college_code=r.college_code  and applyn.app_formno=r.Roll_Admit and applyn.App_No='" + FpSpread2.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text + "'";
            //    ds = dt.select_method_wo_parameter(ad, "text");
            //    if (ds.Tables[0].Rows.Count > 0)
            //    {
            //        string[] dat = ds.Tables[0].Rows[0]["dob"].ToString().Split(' ');
            //        Label25.Text = Convert.ToString(ds.Tables[0].Rows[0]["parent_name"].ToString());
            //        Label26.Text = Convert.ToString(dat[0].ToString());
            //        Label11.Text = Convert.ToString(ds.Tables[0].Rows[0]["Student_Mobile"].ToString());
            //        Label30.Text = Convert.ToString(ds.Tables[0].Rows[0]["StuPer_Id"].ToString());
            //        Label31.Text = Convert.ToString(ds.Tables[0].Rows[0]["parent_addressP"].ToString());
            //        Label32.Text = Convert.ToString(ds.Tables[0].Rows[0]["Streetp"].ToString());
            //        Label33.Text = Convert.ToString(ds.Tables[0].Rows[0]["Cityp"].ToString());
            //        Label34.Text = Convert.ToString(ds.Tables[0].Rows[0]["Districtp"].ToString());
            //        Label35.Text = Convert.ToString(ds.Tables[0].Rows[0]["parent_pincodep"].ToString());
            //      //  Label24.Text = Convert.ToString(ds.Tables[0].Rows[0]["Roll_No"].ToString());
            //        degree = Convert.ToString(ds.Tables[0].Rows[0]["degree_code"].ToString());
            //        community = Convert.ToString(ds.Tables[0].Rows[0]["community"].ToString());
            //        religion = Convert.ToString(ds.Tables[0].Rows[0]["religion"].ToString());
            //        citizen = Convert.ToString(ds.Tables[0].Rows[0]["citizen"].ToString());
            //    }
            //    if (community != "" && religion != "" && citizen != "")
            //    {
            //        string text = " select textval from textvaltable where TextCode in('" + religion + "','" + community + "','" + citizen + "') order by TextCriteria desc";
            //        ds1 = dt.select_method_wo_parameter(text, "text");
            //        if (ds1.Tables[0].Rows.Count > 0)
            //        {
            //            Label55.Text = Convert.ToString(ds1.Tables[0].Rows[0]["textval"].ToString());
            //            Label56.Text = Convert.ToString(ds1.Tables[0].Rows[1]["textval"].ToString());
            //            Label57.Text = Convert.ToString(ds1.Tables[0].Rows[2]["textval"].ToString());
            //        }
            //    }
            //    string nm = " select app_no,registration_no,Institute_name,instaddress,course_code,branch_code,university_code,medium,grade from Stud_prev_details where app_no='" + FpSpread2.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text + "'";
            //    ds = dt.select_method_wo_parameter(nm, "text");
            //    if (ds.Tables[0].Rows.Count > 0)
            //    {
            //        Label46.Text = Convert.ToString(ds.Tables[0].Rows[0]["Institute_name"].ToString());
            //        Label47.Text = Convert.ToString(ds.Tables[0].Rows[0]["instaddress"].ToString());
            //        Label51.Text = Convert.ToString(ds.Tables[0].Rows[0]["medium"].ToString());
            //        string corse = Convert.ToString(ds.Tables[0].Rows[0]["course_code"].ToString());
            //        string branch = Convert.ToString(ds.Tables[0].Rows[0]["branch_code"].ToString());
            //        string univ = Convert.ToString(ds.Tables[0].Rows[0]["university_code"].ToString());
            //        if (corse != "" && branch != "" && univ != "")
            //        {
            //            string text = " select textval from textvaltable where TextCode in('" + corse + "','" + branch + "','" + univ + "')";
            //            ds1 = dt.select_method_wo_parameter(text, "text");
            //            if (ds1.Tables[0].Rows.Count > 0)
            //            {
            //                Label48.Text = Convert.ToString(ds1.Tables[0].Rows[0]["textval"].ToString());
            //                Label49.Text = Convert.ToString(ds1.Tables[0].Rows[1]["textval"].ToString());
            //                Label50.Text = Convert.ToString(ds1.Tables[0].Rows[2]["textval"].ToString());
            //            }
            //        }
            //        string mark = "select distinct p.psubjectno,p.acual_marks,m.subject_name from perv_marks_history p,marks m where p.psubjectno=m.subject_no and p.registerno='" + ds.Tables[0].Rows[0]["registration_no"].ToString() + "'";
            //        ds1 = dt.select_method_wo_parameter(mark, "text");
            //        if (ds1.Tables[0].Rows.Count > 0)
            //        {
            //        }
            //    }
            //}
            if (activecol == "1")
            {
                int isval1 = Convert.ToInt32(FpSpread2.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Value);
                if (isval1 == 1)
                {
                    FpSpread2.Sheets[0].Rows[Convert.ToInt32(activerow)].BackColor = Color.LightYellow;
                }
                else if (isval1 == 0)
                {
                    int vll = Convert.ToInt32(FpSpread2.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Text);
                    if (vll % 2 == 0)
                    {
                        FpSpread2.Sheets[0].Rows[Convert.ToInt32(activerow)].BackColor = Color.Lavender;
                    }
                    else
                    {
                        FpSpread2.Sheets[0].Rows[Convert.ToInt32(activerow)].BackColor = Color.MintCream;
                    }
                }
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    protected void FpSpread1_command(object sender, EventArgs e)
    {
        try
        {
            Button2.Focus();
            tnspan.Visible = false;
            Tancetspan.Visible = false;
            string activerow = FpSpread1.ActiveSheetView.ActiveRow.ToString();
            string activecol = FpSpread1.ActiveSheetView.ActiveColumn.ToString();
            if (activecol == "3")
            {
                string app_no = Convert.ToString(FpSpread1.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text);
                Session["pdfapp_no"] = Convert.ToString(app_no);
                //string jg = "update applyn set isview='1' where app_no='" + FpSpread1.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text + "'  and degree_code='" + ddldept.SelectedValue + "' and college_code='" + college_code + "'";
                //int k = dt.update_method_wo_parameter(jg, "text");
                panel4.Attributes.Add("Style", "background: none repeat scroll 0 0 rgba(0, 0, 0, 0.83); border-color: inherit; border-style: none; border-width: 1px; height: 101%; left: -8px; position: absolute; top: -9px; width: 101%; display: block;");
                string type = ddltype.SelectedItem.Text;
                string edulevel = ddledu.SelectedItem.Text;
                string grduation = ddldegree.SelectedItem.Text;
                string course = ddldept.SelectedItem.Text;
                if (edulevel.ToString().ToUpper() == "PG")
                {
                    pgdiv_verification.Visible = true;
                    ugdiv_verification.Visible = false;
                }
                else if (edulevel.ToString().ToUpper() == "UG")
                {
                    pgdiv_verification.Visible = false;
                    ugdiv_verification.Visible = true;
                }
                string query = "select app_formno,CONVERT(varchar(10), date_applied,103) as date_applied,stud_name,sex,Relationship,parent_name,CONVERT(varchar(10), dob,103) as dob ,parent_occu,mother_tongue,religion,citizen,community,caste,TamilOrginFromAndaman,IsExService,handy,visualhandy,first_graduate,CampusReq,DistinctSport,co_curricular,parent_addressC,Streetc,Cityc,parent_statec,Countryc,parent_pincodec,Student_Mobile,StuPer_Id,parent_phnoc,alter_mobileno,parent_addressP,Streetp,cityp,parent_statep,Countryp,parent_pincodep,parent_phnop,degree_code,batch_year,college_code,SubCaste,isdisable ,isdisabledisc,islearningdis,missionarydisc,MissionaryChild,seattype,current_semester,ncccadet from applyn a where a.app_no='" + app_no + "'";
                query = query + " select course_entno,course_code,university_code,Institute_name,Vocational_stream,percentage,instaddress,medium,branch_code ,Part1Language,Part2Language,isgrade,uni_state,registration_no,type_semester,majorallied_percent,major_percent,type_major,tancet_mark,tancetmark_year from Stud_prev_details where app_no ='" + app_no + "'";
                query = query + " select textval,textcode from textvaltable where TextCriteria='unive'";
                ds.Clear();
                ds = dt.select_method_wo_parameter(query, "text");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    college_span.InnerHtml = ":  " + Convert.ToString(type);
                    degree_Span.InnerHtml = ":  " + Convert.ToString(edulevel);
                    graduation_span.InnerHtml = ":  " + Convert.ToString(grduation);
                    course_span.InnerHtml = ":  " + Convert.ToString(course);
                    applicantname_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["stud_name"]);
                    dob_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["dob"]);
                    if (Convert.ToString(ds.Tables[0].Rows[0]["sex"]) == "0")
                    {
                        gender_span.InnerHtml = ":  Male";
                    }
                    else if (Convert.ToString(ds.Tables[0].Rows[0]["sex"]) == "1")
                    {
                        gender_span.InnerHtml = ":  Female";
                    }
                    else if (Convert.ToString(ds.Tables[0].Rows[0]["sex"]) == "2")
                    {
                        gender_span.InnerHtml = ":  Transgender";
                    }
                    parent_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_name"]);
                    string occupation = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["parent_occu"]));
                    occupation_span.InnerHtml = ":  " + occupation.ToString();
                    string mothertonge = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["mother_tongue"]));
                    mothertongue_span.InnerHtml = ":  " + Convert.ToString(mothertonge);
                    string relisgion = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["religion"]));
                    religion_span.InnerHtml = ":  " + Convert.ToString(relisgion);
                    string city = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["citizen"]));
                    nationality_span.InnerHtml = ":  " + Convert.ToString(city);
                    string coummnity = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["community"]));
                    commuity_span.InnerHtml = ":  " + Convert.ToString(coummnity);
                    if (Convert.ToString(ds.Tables[0].Rows[0]["caste"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["caste"]) != "0")
                    {
                        string scas = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["caste"]));
                        Caste_span.InnerHtml = ":  " + Convert.ToString(scas);
                    }
                    else
                    {
                        Caste_span.InnerHtml = ":  -";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["TamilOrginFromAndaman"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["TamilOrginFromAndaman"]) != "False")
                    {
                        tamilorigin_span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        tamilorigin_span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["IsExService"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["IsExService"]) != "False")
                    {
                        Ex_service_span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        Ex_service_span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["isdisable"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["isdisable"]) != "False")
                    {
                        Differentlyable_Span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        Differentlyable_Span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["first_graduate"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["first_graduate"]) != "False")
                    {
                        first_generation_Span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        first_generation_Span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["CampusReq"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["CampusReq"]) != "False")
                    {
                        residancerequired_span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        residancerequired_span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["DistinctSport"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["DistinctSport"]) != "0")
                    {
                        string disy = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["DistinctSport"]));
                        sport_span.InnerHtml = ":  " + Convert.ToString(disy);
                    }
                    else
                    {
                        sport_span.InnerHtml = ":  -";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["co_curricular"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["co_curricular"]) != "0")
                    {
                        string cocour = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["co_curricular"]));
                        Co_Curricular_span.InnerHtml = ":  " + Convert.ToString(cocour);
                    }
                    else
                    {
                        Co_Curricular_span.InnerHtml = ":  -";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["ncccadet"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["ncccadet"]) != "False")
                    {
                        ncccadetspan.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        ncccadetspan.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[1].Rows[0]["Vocational_stream"]).Trim() != "" && Convert.ToString(ds.Tables[1].Rows[0]["Vocational_stream"]) != "False")
                    {
                        Vocationalspan.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        Vocationalspan.InnerHtml = ":  No";
                    }
                    caddressline1_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_addressC"]);
                    string address = Convert.ToString(ds.Tables[0].Rows[0]["Streetc"]);
                    if (ds.Tables[0].Rows[0]["Streetc"].ToString().Trim() != "")
                    {
                        string[] split = address.Split('/');
                        if (split.Length > 1)
                        {
                            if (Convert.ToString(split[0]).Trim() != "")
                            {
                                Addressline2_span.InnerHtml = ":  " + Convert.ToString(split[0]);
                            }
                            else
                            {
                                Addressline2_span.InnerHtml = ":  -";
                            }
                            if (Convert.ToString(split[1]).Trim() != "")
                            {
                                Addressline3_span.InnerHtml = ":  " + Convert.ToString(split[1]);
                            }
                            else
                            {
                                Addressline3_span.InnerHtml = ":  -";
                            }
                        }
                        else
                        {
                            Addressline2_span.InnerHtml = ":  " + Convert.ToString(split[0]);
                        }
                    }
                    else
                    {
                        Addressline2_span.InnerHtml = ":  -";
                        Addressline3_span.InnerHtml = ":  -";
                    }
                    if (ds.Tables[0].Rows[0]["Cityc"].ToString().Trim() != "")
                    {
                        city_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["Cityc"]);
                    }
                    else
                    {
                        city_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_statec"].ToString().Trim() != "")
                    {
                        string state = subjectcode(ds.Tables[0].Rows[0]["parent_statec"].ToString());
                        state_span.InnerHtml = ":  " + Convert.ToString(state);
                    }
                    else
                    {
                        state_span.InnerHtml = ":  -";
                    }
                    if (ds.Tables[0].Rows[0]["Countryc"].ToString().Trim() != "")
                    {
                        string country = subjectcode(ds.Tables[0].Rows[0]["Countryc"].ToString());
                        Country_span.InnerHtml = ":  " + Convert.ToString(country);
                    }
                    else
                    {
                        Country_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_pincodec"].ToString().Trim() != "")
                    {
                        Postelcode_Span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_pincodec"]);
                    }
                    else
                    {
                        Postelcode_Span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["Student_Mobile"].ToString().Trim() != "")
                    {
                        Mobilenumber_Span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["Student_Mobile"]);
                    }
                    else
                    {
                        Mobilenumber_Span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["alter_mobileno"].ToString().Trim() != "")
                    {
                        Alternatephone_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["alter_mobileno"]);
                    }
                    else
                    {
                        Alternatephone_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["StuPer_Id"].ToString().Trim() != "")
                    {
                        emailid_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["StuPer_Id"]);
                    }
                    else
                    {
                        emailid_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_phnoc"].ToString().Trim() != "")
                    {
                        std_ist_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_phnoc"]);
                    }
                    else
                    {
                        std_ist_span.InnerHtml = "-";
                    }
                    // permnant
                    paddressline1_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_addressP"]);
                    if (ds.Tables[0].Rows[0]["Streetp"].ToString().Trim() != "")
                    {
                        string streat = Convert.ToString(ds.Tables[0].Rows[0]["Streetp"]);
                        if (streat.Trim() != "")
                        {
                            string[] splitstreat = streat.Split('/');
                            if (splitstreat.Length > 1)
                            {
                                if (Convert.ToString(splitstreat[0]).Trim() != "")
                                {
                                    paddressline2_span.InnerHtml = ":  " + Convert.ToString(splitstreat[0]);
                                }
                                else
                                {
                                    paddressline2_span.InnerHtml = ":  -";
                                }
                                if (Convert.ToString(splitstreat[0]).Trim() != "")
                                {
                                    paddressline3_span.InnerHtml = ":  " + Convert.ToString(splitstreat[1]);
                                }
                                else
                                {
                                    paddressline3_span.InnerHtml = ":  -";
                                }
                            }
                            else
                            {
                                paddressline2_span.InnerHtml = ":  " + Convert.ToString(splitstreat[0]);
                            }
                        }
                        paddressline2_span.InnerHtml = ":  -";
                        paddressline3_span.InnerHtml = ":  -";
                    }
                    else
                    {
                        paddressline2_span.InnerHtml = ":  -";
                        paddressline3_span.InnerHtml = ":  -";
                    }
                    if (ds.Tables[0].Rows[0]["Cityp"].ToString().Trim() != "")
                    {
                        pcity_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["Cityp"]);
                    }
                    else
                    {
                        pcity_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_statep"].ToString().Trim() != "")
                    {
                        string state = subjectcode(ds.Tables[0].Rows[0]["parent_statep"].ToString());
                        pstate_span.InnerHtml = ":  " + Convert.ToString(state);
                    }
                    else
                    {
                        pstate_span.InnerHtml = ":  -";
                    }
                    if (ds.Tables[0].Rows[0]["Countryp"].ToString().Trim() != "")
                    {
                        string country = subjectcode(ds.Tables[0].Rows[0]["Countryp"].ToString());
                        pcountry_span.InnerHtml = ":  " + Convert.ToString(country);
                    }
                    else
                    {
                        pcountry_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_pincodep"].ToString().Trim() != "")
                    {
                        ppostelcode_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_pincodep"]);
                    }
                    else
                    {
                        ppostelcode_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_phnop"].ToString().Trim() != "")
                    {
                        pstdisd_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_phnop"]);
                    }
                    else
                    {
                        pstdisd_span.InnerHtml = "-";
                    }
                }
                if (ds.Tables[1].Rows.Count > 0)
                {
                    if (ddledu.SelectedItem.Text == "UG")
                    {
                        ugtotaldiv.Visible = true;
                        pgtotaldiv.Visible = false;
                        string courseentronumber = Convert.ToString(ds.Tables[1].Rows[0]["course_entno"]);
                        string coursecode = Convert.ToString(ds.Tables[1].Rows[0]["course_code"]);
                        string university_code = Convert.ToString(ds.Tables[1].Rows[0]["university_code"]);
                        string institutename = Convert.ToString(ds.Tables[1].Rows[0]["Institute_name"]);
                        string percentage = Convert.ToString(ds.Tables[1].Rows[0]["percentage"]);
                        string institueaddress = Convert.ToString(ds.Tables[1].Rows[0]["instaddress"]);
                        string medium = Convert.ToString(ds.Tables[1].Rows[0]["medium"]);
                        string part1language = Convert.ToString(ds.Tables[1].Rows[0]["Part1Language"]);
                        string part2language = Convert.ToString(ds.Tables[1].Rows[0]["Part2Language"]);
                        string isgrade = Convert.ToString(ds.Tables[1].Rows[0]["isgrade"]);
                        string university_state = Convert.ToString(ds.Tables[1].Rows[0]["uni_state"]);
                        // string part1language = Convert.ToString(ds.Tables[1].Rows[0]["Institute_name"]);
                        if (coursecode.Trim() != "")
                        {
                            string course1 = subjectcode(coursecode);
                            qualifyingexam_span.InnerHtml = ":  " + Convert.ToString(course1);
                        }
                        else
                        {
                            qualifyingexam_span.InnerHtml = ":  -";
                        }
                        if (institutename.Trim() != "")
                        {
                            Nameofschool_span.InnerHtml = ":  " + Convert.ToString(institutename);
                        }
                        else
                        {
                            Nameofschool_span.InnerHtml = "";
                        }
                        if (institueaddress.Trim() != "")
                        {
                            locationofschool_Span.InnerHtml = ":  " + Convert.ToString(institueaddress);
                        }
                        else
                        {
                            locationofschool_Span.InnerHtml = "";
                        }
                        if (medium.Trim() != "")
                        {
                            string m = subjectcode(medium);
                            mediumofstudy_span.InnerHtml = ":  " + Convert.ToString(m);
                        }
                        else
                        {
                            mediumofstudy_span.InnerHtml = ":  -";
                        }
                        if (university_code.Trim() != "")
                        {
                            string univ = subjectcode(university_code);
                            qualifyingboard_span.InnerHtml = ":  " + Convert.ToString(univ);
                        }
                        else
                        {
                            qualifyingboard_span.InnerHtml = ":  -";
                        }
                        if (isgrade.Trim() != "")
                        {
                            if (isgrade == "True")
                            {
                                marksgrade_span.InnerHtml = ":  Grade";
                            }
                            else
                            {
                                marksgrade_span.InnerHtml = ":  Marks";
                            }
                        }
                        string markquery = "select psubjectno,registerno,acual_marks,max_marks,noofattempt,pass_month,pass_year,semyear ,grade from perv_marks_history  where course_entno ='" + courseentronumber + "'";
                        ds.Clear();
                        ds = dt.select_method_wo_parameter(markquery, "Text");
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            DataTable data = new DataTable();
                            DataRow dr = null;
                            Hashtable hash = new Hashtable();
                            data.Columns.Add("Language", typeof(string));
                            data.Columns.Add("Subject", typeof(string));
                            data.Columns.Add("Marks Obtained", typeof(string));
                            data.Columns.Add("Month", typeof(string));
                            data.Columns.Add("Year", typeof(string));
                            data.Columns.Add("Register No / Roll No", typeof(string));
                            data.Columns.Add("No of Attempts", typeof(string));
                            data.Columns.Add("Maximum Marks", typeof(string));
                            hash.Add(0, "Language1");
                            hash.Add(1, "Language2");
                            hash.Add(2, " Subject1");
                            hash.Add(3, " Subject2");
                            hash.Add(4, " Subject3");
                            hash.Add(5, " Subject4");
                            hash.Add(6, " Subject5");
                            hash.Add(7, " Subject6");
                            hash.Add(8, " Subject7");
                            hash.Add(9, " Subject8");
                            hash.Add(10, " Subject9");
                            hash.Add(11, " Subject10");
                            hash.Add(12, " Subject11");
                            int totalmark = 0;
                            int maxtotal = 0;
                            for (int mark = 0; mark < ds.Tables[0].Rows.Count; mark++)
                            {
                                string subjectno = Convert.ToString(ds.Tables[0].Rows[mark]["psubjectno"]);
                                string actualmark = "";
                                if (isgrade == "True")
                                {
                                    actualmark = Convert.ToString(ds.Tables[0].Rows[mark]["grade"]);
                                }
                                else
                                {
                                    actualmark = Convert.ToString(ds.Tables[0].Rows[mark]["acual_marks"]);
                                }
                                string month = Convert.ToString(ds.Tables[0].Rows[mark]["pass_month"]);
                                string year = Convert.ToString(ds.Tables[0].Rows[mark]["pass_year"]);
                                string regno = Convert.ToString(ds.Tables[0].Rows[mark]["registerno"]);
                                string noofattenm = Convert.ToString(ds.Tables[0].Rows[mark]["noofattempt"]);
                                string maxmark = Convert.ToString(ds.Tables[0].Rows[mark]["max_marks"]);
                                dr = data.NewRow();
                                string lang = Convert.ToString(hash[mark]);
                                dr[0] = Convert.ToString(lang);
                                string sub = subjectcode(subjectno);
                                dr[1] = Convert.ToString(sub);
                                dr[2] = Convert.ToString(actualmark);
                                dr[3] = Convert.ToString(month);
                                dr[4] = Convert.ToString(year);
                                dr[5] = Convert.ToString(regno);
                                dr[6] = Convert.ToString(noofattenm);
                                dr[7] = Convert.ToString(maxmark);
                                data.Rows.Add(dr);
                                if (isgrade != "True")
                                {
                                    totalmark = totalmark + Convert.ToInt32(actualmark);
                                    maxtotal = maxtotal + Convert.ToInt32(maxmark);
                                }
                            }
                            if (isgrade != "True")
                            {
                                total_marks_secured.InnerHtml = ":  " + Convert.ToString(totalmark);
                                maximum_marks.InnerHtml = ":  " + Convert.ToString(maxtotal);
                                percentage_span.InnerHtml = ":  " + percentage;
                            }
                            VerificationGridug.DataSource = data;
                            VerificationGridug.DataBind();
                            if (VerificationGridug.Rows.Count > 0)
                            {
                                for (int v = 0; v < VerificationGridug.Rows.Count; v++)
                                {
                                    VerificationGridug.Rows[v].Cells[2].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[3].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[4].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[5].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[6].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[7].HorizontalAlign = HorizontalAlign.Center;
                                }
                            }
                        }
                    }
                    else if (ddledu.SelectedItem.Text == "PG")
                    {
                        ugtotaldiv.Visible = false;
                        pgtotaldiv.Visible = true;
                        string courseentronumber = Convert.ToString(ds.Tables[1].Rows[0]["course_entno"]);
                        string coursecode = Convert.ToString(ds.Tables[1].Rows[0]["course_code"]);
                        string university_code = Convert.ToString(ds.Tables[1].Rows[0]["university_code"]);
                        string institutename = Convert.ToString(ds.Tables[1].Rows[0]["Institute_name"]);
                        string percentage = Convert.ToString(ds.Tables[1].Rows[0]["percentage"]);
                        string institueaddress = Convert.ToString(ds.Tables[1].Rows[0]["instaddress"]);
                        string medium = Convert.ToString(ds.Tables[1].Rows[0]["medium"]);
                        string part1language = Convert.ToString(ds.Tables[1].Rows[0]["Part1Language"]);
                        string part2language = Convert.ToString(ds.Tables[1].Rows[0]["Part2Language"]);
                        string isgrade = Convert.ToString(ds.Tables[1].Rows[0]["isgrade"]);
                        string university_state = Convert.ToString(ds.Tables[1].Rows[0]["uni_state"]);
                        string typeofsubject = Convert.ToString(ds.Tables[1].Rows[0]["type_major"]);
                        string typeofsemester = Convert.ToString(ds.Tables[1].Rows[0]["type_semester"]);
                        string regno = Convert.ToString(ds.Tables[1].Rows[0]["registration_no"]);
                        string major = Convert.ToString(ds.Tables[1].Rows[0]["branch_code"]);
                        string majorpercentage = Convert.ToString(ds.Tables[1].Rows[0]["major_percent"]);
                        string majorallidepercentage = Convert.ToString(ds.Tables[1].Rows[0]["majorallied_percent"]);
                        string Tancet = Convert.ToString(ds.Tables[1].Rows[0]["tancet_mark"]);
                        string Tancetyear = Convert.ToString(ds.Tables[1].Rows[0]["tancetmark_year"]);
                        percentagemajorspan.InnerHtml = ":  " + Convert.ToString(percentage);
                        majorsubjectspan.InnerHtml = ":  " + Convert.ToString(majorpercentage);
                        alliedmajorspan.InnerHtml = ":  " + Convert.ToString(majorallidepercentage);
                        if (coursecode.Trim() != "")
                        {
                            string course1 = subjectcode(coursecode);
                            ugqualifyingexam_span.InnerHtml = ":  " + Convert.ToString(course1);
                        }
                        else
                        {
                            ugqualifyingexam_span.InnerHtml = ":  -";
                        }
                        if (institutename.Trim() != "")
                        {
                            nameofcollege_Sapn.InnerHtml = ":  " + Convert.ToString(institutename);
                        }
                        else
                        {
                            nameofcollege_Sapn.InnerHtml = "";
                        }
                        if (institueaddress.Trim() != "")
                        {
                            locationofcollege_sapn.InnerHtml = ":  " + Convert.ToString(institueaddress);
                        }
                        else
                        {
                            locationofcollege_sapn.InnerHtml = "";
                        }
                        //17.06.16
                        DataView dv = new DataView();
                        ds.Tables[2].DefaultView.RowFilter = "textcode='" + university_code + "'";
                        dv = ds.Tables[2].DefaultView;
                        if (dv.Count > 0)
                        {
                            if (Convert.ToString(dv[0][0]).Trim() != "")
                            {
                                nameofuniver_city.InnerHtml = ":  " + Convert.ToString((dv[0][0]));
                            }
                            else
                            {
                                nameofuniver_city.InnerHtml = "";
                            }
                        }
                        if (major.Trim() != "")
                        {
                            string major1 = subjectcode(major);
                            major_span.InnerHtml = ":  " + Convert.ToString(major1);
                        }
                        else
                        {
                            major_span.InnerHtml = "";
                        }
                        if (typeofsubject.Trim() != "")
                        {
                            if (typeofsubject == "1")
                            {
                                typeofsubject = "Single";
                            }
                            else if (typeofsubject == "2")
                            {
                                typeofsubject = "Double";
                            }
                            else if (typeofsubject == "3")
                            {
                                typeofsubject = "Triple";
                            }
                            typeofmajor_span.InnerHtml = ":  " + Convert.ToString(typeofsubject);
                        }
                        if (typeofsemester.Trim() != "")
                        {
                            if (typeofsemester == "True")
                            {
                                typeofsemester = "Semester";
                            }
                            else
                            {
                                typeofsemester = "Non Semester";
                            }
                            typeofsemester_span.InnerHtml = ":  " + Convert.ToString(typeofsemester);
                        }
                        if (medium.Trim() != "")
                        {
                            string lang = subjectcode(medium);
                            mediumofstudy_spanug.InnerHtml = ":  " + Convert.ToString(lang);
                        }
                        if (isgrade.Trim() != "")
                        {
                            if (isgrade == "True")
                            {
                                marksorgradeug_span.InnerHtml = ":  Grade";
                            }
                            else
                            {
                                marksorgradeug_span.InnerHtml = ":  Marks";
                            }
                        }
                        //if (isgrade.Trim() != "")
                        //{
                        //    marksorgradeug_span.InnerHtml = ":  " + Convert.ToString(isgrade);
                        //}
                        if (regno.Trim() != "")
                        {
                            reg_no_span.InnerHtml = ":  " + Convert.ToString(regno);
                        }
                        if (type == "MCA")
                        {
                            tnspan.Visible = true;
                            Tancetspan.Visible = true;
                            Tancetspan.InnerHtml = ": " + Convert.ToString(Tancet) + " - " + Convert.ToString(Tancetyear);
                        }
                        string pgquery = "select psubjectno,subject_typeno,acual_marks,max_marks,pass_month,pass_year,semyear ,grade from perv_marks_history where course_entno ='" + courseentronumber + "'";
                        ds.Clear();
                        ds = dt.select_method_wo_parameter(pgquery, "Text");
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            DataTable data = new DataTable();
                            DataRow dr = null;
                            Hashtable hash = new Hashtable();
                            data.Columns.Add("S.No", typeof(string));
                            //  data.Columns.Add("Sem/Year", typeof(string));
                            data.Columns.Add("Subject", typeof(string));
                            data.Columns.Add("Subject type", typeof(string));
                            data.Columns.Add("Marks", typeof(string));
                            data.Columns.Add("Month", typeof(string));
                            data.Columns.Add("Year", typeof(string));
                            data.Columns.Add("Maximum Marks", typeof(string));
                            int sno = 0;
                            for (int pg = 0; pg < ds.Tables[0].Rows.Count; pg++)
                            {
                                sno++;
                                string subjectno = Convert.ToString(ds.Tables[0].Rows[pg]["psubjectno"]);
                                string subjecttypeno = Convert.ToString(ds.Tables[0].Rows[pg]["subject_typeno"]);
                                string actualmark = "";
                                if (isgrade == "True")
                                {
                                    actualmark = Convert.ToString(ds.Tables[0].Rows[pg]["grade"]);
                                }
                                else
                                {
                                    actualmark = Convert.ToString(ds.Tables[0].Rows[pg]["acual_marks"]);
                                }
                                string month = Convert.ToString(ds.Tables[0].Rows[pg]["pass_month"]);
                                string year = Convert.ToString(ds.Tables[0].Rows[pg]["pass_year"]);
                                // string noofattenm = Convert.ToString(ds.Tables[0].Rows[pg]["noofattempt"]);
                                string maxmark = Convert.ToString(ds.Tables[0].Rows[pg]["max_marks"]);
                                dr = data.NewRow();
                                dr[0] = Convert.ToString(sno);
                                string subject = subjectcode(subjectno);
                                dr[1] = Convert.ToString(subject);
                                string typesub = subjectcode(subjecttypeno);
                                dr[2] = Convert.ToString(typesub);
                                dr[3] = Convert.ToString(actualmark);
                                dr[4] = Convert.ToString(month);
                                dr[5] = Convert.ToString(year);
                                dr[6] = Convert.ToString(maxmark);
                                data.Rows.Add(dr);
                            }
                            Verificationgridpg.DataSource = data;
                            Verificationgridpg.DataBind();
                            if (VerificationGridug.Rows.Count > 0)
                            {
                                for (int v = 0; v < Verificationgridpg.Rows.Count; v++)
                                {
                                    Verificationgridpg.Rows[v].Cells[3].HorizontalAlign = HorizontalAlign.Center;
                                    Verificationgridpg.Rows[v].Cells[4].HorizontalAlign = HorizontalAlign.Center;
                                    Verificationgridpg.Rows[v].Cells[5].HorizontalAlign = HorizontalAlign.Center;
                                    Verificationgridpg.Rows[v].Cells[6].HorizontalAlign = HorizontalAlign.Center;
                                }
                            }
                        }
                    }
                }
            }
            //if (activecol == "3")
            //{
            //    string jg = "update selectcriteria set isview='1' where app_no='" + FpSpread1.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text + "' and usercode='" + user_code + "' and degree_code='" + ddldept.SelectedValue + "' and college_code='" + college_code + "'";
            //    int k = dt.update_method_wo_parameter(jg, "text");
            //    panel4.Visible = true;
            //    string priority = "      select * from admitcolumnset where user_code='" + user_code + "' and textcriteria='column' order by priority";
            //    ds1 = dt.select_method_wo_parameter(priority, "text");
            //    if (ds1.Tables[0].Rows.Count > 0)
            //    {
            //        DataView dv = new DataView();
            //        ds1.Tables[0].DefaultView.RowFilter = "setcolumn='Student Name'";
            //        dv = ds1.Tables[0].DefaultView;
            //        Label23.Text = FpSpread1.Sheets[0].Cells[Convert.ToInt32(activerow), Convert.ToInt32(dv[0]["priority"].ToString()) + 3].Text;
            //    }
            //    string ad = "select * from applyn where app_no='" + FpSpread1.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text + "'";
            //    // string ad = "select Roll_No,religion,community,citizen,r.degree_code,r.Stud_Name,parent_name,dob,Student_Mobile,emailp,parent_addressP,Streetp,Cityp,Districtp,parent_pincodep  from applyn,Registration r  where applyn.app_no=r.App_No and applyn.degree_code=r.degree_code and applyn.college_code=r.college_code  and applyn.app_formno=r.Roll_Admit and applyn.App_No='" + FpSpread1.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text + "'";
            //    ds = dt.select_method_wo_parameter(ad, "text");
            //    if (ds.Tables[0].Rows.Count > 0)
            //    {
            //        string[] dat = ds.Tables[0].Rows[0]["dob"].ToString().Split(' ');
            //        Label25.Text = Convert.ToString(ds.Tables[0].Rows[0]["parent_name"].ToString());
            //        Label26.Text = Convert.ToString(dat[0].ToString());
            //        Label11.Text = Convert.ToString(ds.Tables[0].Rows[0]["Student_Mobile"].ToString());
            //        Label30.Text = Convert.ToString(ds.Tables[0].Rows[0]["StuPer_Id"].ToString());
            //        Label31.Text = Convert.ToString(ds.Tables[0].Rows[0]["parent_addressP"].ToString());
            //        Label32.Text = Convert.ToString(ds.Tables[0].Rows[0]["Streetp"].ToString());
            //        Label33.Text = Convert.ToString(ds.Tables[0].Rows[0]["Cityp"].ToString());
            //        Label34.Text = Convert.ToString(ds.Tables[0].Rows[0]["Districtp"].ToString());
            //        Label35.Text = Convert.ToString(ds.Tables[0].Rows[0]["parent_pincodep"].ToString());
            //      //  Label24.Text = Convert.ToString(ds.Tables[0].Rows[0]["Roll_No"].ToString());
            //        degree = Convert.ToString(ds.Tables[0].Rows[0]["degree_code"].ToString());
            //        community = Convert.ToString(ds.Tables[0].Rows[0]["community"].ToString());
            //        religion = Convert.ToString(ds.Tables[0].Rows[0]["religion"].ToString());
            //        citizen = Convert.ToString(ds.Tables[0].Rows[0]["citizen"].ToString());
            //    }
            //    if (community != "" && religion != "" && citizen != "")
            //    {
            //        string text = " select textval from textvaltable where TextCode in('" + religion + "','" + community + "','" + citizen + "') order by TextCriteria desc";
            //        ds1 = dt.select_method_wo_parameter(text, "text");
            //        if (ds1.Tables[0].Rows.Count > 0)
            //        {
            //            Label55.Text = Convert.ToString(ds1.Tables[0].Rows[0]["textval"].ToString());
            //            Label56.Text = Convert.ToString(ds1.Tables[0].Rows[1]["textval"].ToString());
            //            Label57.Text = Convert.ToString(ds1.Tables[0].Rows[2]["textval"].ToString());
            //        }
            //    }
            //    string nm = " select app_no,registration_no,Institute_name,instaddress,course_code,branch_code,university_code,medium,grade from Stud_prev_details where app_no='" + FpSpread1.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text + "'";
            //    ds = dt.select_method_wo_parameter(nm, "text");
            //    if (ds.Tables[0].Rows.Count > 0)
            //    {
            //        Label46.Text = Convert.ToString(ds.Tables[0].Rows[0]["Institute_name"].ToString());
            //        Label47.Text = Convert.ToString(ds.Tables[0].Rows[0]["instaddress"].ToString());
            //        Label51.Text = Convert.ToString(ds.Tables[0].Rows[0]["medium"].ToString());
            //        string corse = Convert.ToString(ds.Tables[0].Rows[0]["course_code"].ToString());
            //        string branch = Convert.ToString(ds.Tables[0].Rows[0]["branch_code"].ToString());
            //        string univ = Convert.ToString(ds.Tables[0].Rows[0]["university_code"].ToString());
            //        if (corse != "" && branch != "" && univ != "")
            //        {
            //            string text = " select textval from textvaltable where TextCode in('" + corse + "','" + branch + "','" + univ + "')";
            //            ds1 = dt.select_method_wo_parameter(text, "text");
            //            if (ds1.Tables[0].Rows.Count > 0)
            //            {
            //                Label48.Text = Convert.ToString(ds1.Tables[0].Rows[0]["textval"].ToString());
            //                Label49.Text = Convert.ToString(ds1.Tables[0].Rows[1]["textval"].ToString());
            //                Label50.Text = Convert.ToString(ds1.Tables[0].Rows[2]["textval"].ToString());
            //            }
            //        }
            //        string mark = "select distinct p.psubjectno,p.acual_marks,m.subject_name from perv_marks_history p,marks m where p.psubjectno=m.subject_no and p.registerno='" + ds.Tables[0].Rows[0]["registration_no"].ToString() + "'";
            //        ds1 = dt.select_method_wo_parameter(mark, "text");
            //        if (ds1.Tables[0].Rows.Count > 0)
            //        {
            //            //FpSpread4.Sheets[0].RowCount = 0;
            //            //FpSpread4.Sheets[0].ColumnCount = 3;
            //            //FpSpread4.Sheets[0].RowHeader.Visible = false;
            //            //FpSpread4.Sheets[0].AutoPostBack = true;
            //            //FpSpread4.CommandBar.Visible = false;
            //            //FpSpread4.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
            //            //FpSpread4.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
            //            //FpSpread2.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
            //            //FpSpread2.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
            //            //FpSpread2.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Subject";
            //            //FpSpread2.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
            //            //FpSpread2.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
            //            //FpSpread2.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
            //            //FpSpread2.Sheets[0].ColumnHeader.Cells[0, 2].Text = "Marks";
            //            //FpSpread2.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
            //            //FpSpread2.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
            //            //FpSpread2.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
            //            //FpSpread2.Visible = true;
            //            //for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
            //            //{
            //            //    FpSpread2.Sheets[0].RowCount++;
            //            //    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(FpSpread2.Sheets[0].RowCount);
            //            //    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Font.Name = "Book Antiqua";
            //            //    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
            //            //    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
            //            //    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Text = ds1.Tables[0].Rows[i]["subject_name"].ToString();
            //            //    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Font.Name = "Book Antiqua";
            //            //    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
            //            //    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Left;
            //            //    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 2].Text = ds1.Tables[0].Rows[i]["acual_marks"].ToString();
            //            //    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 2].Font.Name = "Book Antiqua";
            //            //    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
            //            //    FpSpread2.Sheets[0].Cells[FpSpread2.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Left;
            //            //}
            //            //FpSpread2.Sheets[0].PageSize = FpSpread2.Sheets[0].RowCount;
            //        }
            //    }
            //}
            if (activecol == "1")
            {
                int isval1 = Convert.ToInt32(FpSpread1.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Value);
                if (isval1 == 1)
                {
                    FpSpread1.Sheets[0].Rows[Convert.ToInt32(activerow)].BackColor = Color.LightYellow;
                }
                else if (isval1 == 0)
                {
                    int vll = Convert.ToInt32(FpSpread1.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Text);
                    if (vll % 2 == 0)
                    {
                        FpSpread1.Sheets[0].Rows[Convert.ToInt32(activerow)].BackColor = Color.Lavender;
                    }
                    else
                    {
                        FpSpread1.Sheets[0].Rows[Convert.ToInt32(activerow)].BackColor = Color.MintCream;
                    }
                }
            }
        }
        catch (Exception ex)
        {
            college_span.InnerHtml = ex.ToString(); d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    public string subjectcode(string textcri)
    {
        string subjec_no = "";
        try
        {
            DataSet ds23 = new DataSet();
            string select_subno = "select TextVal from textvaltable where TextCode ='" + textcri + "' and college_code ='" + Session["collegecode"].ToString() + "' ";
            ds23.Clear();
            ds23 = dt.select_method_wo_parameter(select_subno, "Text");
            if (ds23.Tables[0].Rows.Count > 0)
            {
                subjec_no = Convert.ToString(ds23.Tables[0].Rows[0]["TextVal"]);
            }
        }
        catch
        {
        }
        return subjec_no;
    }
    protected void FpSpread3_command(object sender, EventArgs e)
    {
        try
        {
            btnapprove.Focus();
            tnspan.Visible = false;
            Tancetspan.Visible = false;
            string activerow = FpSpread3.ActiveSheetView.ActiveRow.ToString();
            string activecol = FpSpread3.ActiveSheetView.ActiveColumn.ToString();
            if (activecol == "3")
            {
                string app_no = Convert.ToString(FpSpread3.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text);
                Session["pdfapp_no"] = Convert.ToString(app_no);
                //string jg = "update applyn set isview='1' where app_no='" + FpSpread3.Sheets[0].Cells[Convert.ToInt32(activerow), 2].Text + "'  and degree_code='" + ddldept.SelectedValue + "' and college_code='" + college_code + "'";
                //int k = dt.update_method_wo_parameter(jg, "text");
                panel4.Attributes.Add("Style", "background: none repeat scroll 0 0 rgba(0, 0, 0, 0.83); border-color: inherit; border-style: none; border-width: 1px; height: 101%; left: -8px; position: absolute; top: -9px; width: 101%; display: block;");
                string type = ddltype.SelectedItem.Text;
                string edulevel = ddledu.SelectedItem.Text;
                string grduation = ddldegree.SelectedItem.Text;
                string course = ddldept.SelectedItem.Text;
                if (edulevel.ToString().ToUpper() == "PG")
                {
                    pgdiv_verification.Visible = true;
                    ugdiv_verification.Visible = false;
                }
                else if (edulevel.ToString().ToUpper() == "UG")
                {
                    pgdiv_verification.Visible = false;
                    ugdiv_verification.Visible = true;
                }
                string query = "select app_formno,CONVERT(varchar(10), date_applied,103) as date_applied,stud_name,sex,Relationship,parent_name,CONVERT(varchar(10), dob,103) as dob ,parent_occu,mother_tongue,religion,citizen,community,caste,TamilOrginFromAndaman,IsExService,handy,visualhandy,first_graduate,CampusReq,DistinctSport,co_curricular,parent_addressC,Streetc,Cityc,parent_statec,Countryc,parent_pincodec,Student_Mobile,StuPer_Id,parent_phnoc,alter_mobileno,parent_addressP,Streetp,cityp,parent_statep,Countryp,parent_pincodep,parent_phnop,degree_code,batch_year,college_code,SubCaste,isdisable ,isdisabledisc,islearningdis,missionarydisc,MissionaryChild,seattype,current_semester,ncccadet from applyn a where a.app_no='" + app_no + "'";
                query = query + " select course_entno,course_code,university_code,Institute_name,percentage,instaddress,medium,branch_code ,Part1Language,Part2Language,Vocational_stream,isgrade,uni_state,registration_no,type_semester,majorallied_percent,major_percent,type_major,tancet_mark,tancetmark_year from Stud_prev_details where app_no ='" + app_no + "'";
                query = query + " select textval,textcode from textvaltable where TextCriteria='unive'";
                ds.Clear();
                ds = dt.select_method_wo_parameter(query, "text");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    college_span.InnerHtml = ":  " + Convert.ToString(type);
                    degree_Span.InnerHtml = ":  " + Convert.ToString(edulevel);
                    graduation_span.InnerHtml = ":  " + Convert.ToString(grduation);
                    course_span.InnerHtml = ":  " + Convert.ToString(course);
                    applicantname_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["stud_name"]);
                    dob_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["dob"]);
                    if (Convert.ToString(ds.Tables[0].Rows[0]["sex"]) == "0")
                    {
                        gender_span.InnerHtml = ":  Male";
                    }
                    else if (Convert.ToString(ds.Tables[0].Rows[0]["sex"]) == "1")
                    {
                        gender_span.InnerHtml = ":  Female";
                    }
                    else if (Convert.ToString(ds.Tables[0].Rows[0]["sex"]) == "2")
                    {
                        gender_span.InnerHtml = ":  Transgender";
                    }
                    parent_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_name"]);
                    string occupation = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["parent_occu"]));
                    occupation_span.InnerHtml = ":  " + occupation.ToString();
                    string mothertonge = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["mother_tongue"]));
                    mothertongue_span.InnerHtml = ":  " + Convert.ToString(mothertonge);
                    string relisgion = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["religion"]));
                    religion_span.InnerHtml = ":  " + Convert.ToString(relisgion);
                    string city = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["citizen"]));
                    nationality_span.InnerHtml = ":  " + Convert.ToString(city);
                    string coummnity = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["community"]));
                    commuity_span.InnerHtml = ":  " + Convert.ToString(coummnity);
                    if (Convert.ToString(ds.Tables[0].Rows[0]["caste"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["caste"]) != "0")
                    {
                        string scas = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["caste"]));
                        Caste_span.InnerHtml = ":  " + Convert.ToString(scas);
                    }
                    else
                    {
                        Caste_span.InnerHtml = ":  -";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["TamilOrginFromAndaman"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["TamilOrginFromAndaman"]) != "False")
                    {
                        tamilorigin_span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        tamilorigin_span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["IsExService"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["IsExService"]) != "False")
                    {
                        Ex_service_span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        Ex_service_span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["isdisable"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["isdisable"]) != "False")
                    {
                        Differentlyable_Span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        Differentlyable_Span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["first_graduate"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["first_graduate"]) != "False")
                    {
                        first_generation_Span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        first_generation_Span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["CampusReq"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["CampusReq"]) != "False")
                    {
                        residancerequired_span.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        residancerequired_span.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["DistinctSport"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["DistinctSport"]) != "0")
                    {
                        string disy = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["DistinctSport"]));
                        sport_span.InnerHtml = ":  " + Convert.ToString(disy);
                    }
                    else
                    {
                        sport_span.InnerHtml = ":  -";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["co_curricular"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["co_curricular"]) != "0")
                    {
                        string cocour = subjectcode(Convert.ToString(ds.Tables[0].Rows[0]["co_curricular"]));
                        Co_Curricular_span.InnerHtml = ":  " + Convert.ToString(cocour);
                    }
                    else
                    {
                        Co_Curricular_span.InnerHtml = ":  -";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["ncccadet"]).Trim() != "" && Convert.ToString(ds.Tables[0].Rows[0]["ncccadet"]) != "False")
                    {
                        ncccadetspan.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        ncccadetspan.InnerHtml = ":  No";
                    }
                    if (Convert.ToString(ds.Tables[1].Rows[0]["Vocational_stream"]).Trim() != "" && Convert.ToString(ds.Tables[1].Rows[0]["Vocational_stream"]) != "False")
                    {
                        Vocationalspan.InnerHtml = ":  Yes";
                    }
                    else
                    {
                        Vocationalspan.InnerHtml = ":  No";
                    }
                    caddressline1_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_addressC"]);
                    string address = Convert.ToString(ds.Tables[0].Rows[0]["Streetc"]);
                    if (ds.Tables[0].Rows[0]["Streetc"].ToString().Trim() != "")
                    {
                        string[] split = address.Split('/');
                        if (split.Length > 1)
                        {
                            if (Convert.ToString(split[0]).Trim() != "")
                            {
                                Addressline2_span.InnerHtml = ":  " + Convert.ToString(split[0]);
                            }
                            else
                            {
                                Addressline2_span.InnerHtml = ":  -";
                            }
                            if (Convert.ToString(split[1]).Trim() != "")
                            {
                                Addressline3_span.InnerHtml = ":  " + Convert.ToString(split[1]);
                            }
                            else
                            {
                                Addressline3_span.InnerHtml = ":  -";
                            }
                        }
                        else
                        {
                            Addressline2_span.InnerHtml = ":  " + Convert.ToString(split[0]);
                        }
                    }
                    else
                    {
                        Addressline2_span.InnerHtml = ":  -";
                        Addressline3_span.InnerHtml = ":  -";
                    }
                    if (ds.Tables[0].Rows[0]["Cityc"].ToString().Trim() != "")
                    {
                        city_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["Cityc"]);
                    }
                    else
                    {
                        city_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_statec"].ToString().Trim() != "")
                    {
                        string state = subjectcode(ds.Tables[0].Rows[0]["parent_statec"].ToString());
                        state_span.InnerHtml = ":  " + Convert.ToString(state);
                    }
                    else
                    {
                        state_span.InnerHtml = ":  -";
                    }
                    if (ds.Tables[0].Rows[0]["Countryc"].ToString().Trim() != "")
                    {
                        string country = subjectcode(ds.Tables[0].Rows[0]["Countryc"].ToString());
                        Country_span.InnerHtml = ":  " + Convert.ToString(country);
                    }
                    else
                    {
                        Country_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_pincodec"].ToString().Trim() != "")
                    {
                        Postelcode_Span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_pincodec"]);
                    }
                    else
                    {
                        Postelcode_Span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["Student_Mobile"].ToString().Trim() != "")
                    {
                        Mobilenumber_Span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["Student_Mobile"]);
                    }
                    else
                    {
                        Mobilenumber_Span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["alter_mobileno"].ToString().Trim() != "")
                    {
                        Alternatephone_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["alter_mobileno"]);
                    }
                    else
                    {
                        Alternatephone_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["StuPer_Id"].ToString().Trim() != "")
                    {
                        emailid_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["StuPer_Id"]);
                    }
                    else
                    {
                        emailid_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_phnoc"].ToString().Trim() != "")
                    {
                        std_ist_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_phnoc"]);
                    }
                    else
                    {
                        std_ist_span.InnerHtml = "-";
                    }
                    // permnant
                    paddressline1_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_addressP"]);
                    if (ds.Tables[0].Rows[0]["Streetp"].ToString().Trim() != "")
                    {
                        string streat = Convert.ToString(ds.Tables[0].Rows[0]["Streetp"]);
                        if (streat.Trim() != "")
                        {
                            string[] splitstreat = streat.Split('/');
                            if (splitstreat.Length > 1)
                            {
                                if (Convert.ToString(splitstreat[0]).Trim() != "")
                                {
                                    paddressline2_span.InnerHtml = ":  " + Convert.ToString(splitstreat[0]);
                                }
                                else
                                {
                                    paddressline2_span.InnerHtml = ":  -";
                                }
                                if (Convert.ToString(splitstreat[0]).Trim() != "")
                                {
                                    paddressline3_span.InnerHtml = ":  " + Convert.ToString(splitstreat[1]);
                                }
                                else
                                {
                                    paddressline3_span.InnerHtml = ":  -";
                                }
                            }
                            else
                            {
                                paddressline2_span.InnerHtml = ":  " + Convert.ToString(splitstreat[0]);
                            }
                        }
                        paddressline2_span.InnerHtml = ":  -";
                        paddressline3_span.InnerHtml = ":  -";
                    }
                    else
                    {
                        paddressline2_span.InnerHtml = ":  -";
                        paddressline3_span.InnerHtml = ":  -";
                    }
                    if (ds.Tables[0].Rows[0]["Cityp"].ToString().Trim() != "")
                    {
                        pcity_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["Cityp"]);
                    }
                    else
                    {
                        pcity_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_statep"].ToString().Trim() != "")
                    {
                        string state = subjectcode(ds.Tables[0].Rows[0]["parent_statep"].ToString());
                        pstate_span.InnerHtml = ":  " + Convert.ToString(state);
                    }
                    else
                    {
                        pstate_span.InnerHtml = ":  -";
                    }
                    if (ds.Tables[0].Rows[0]["Countryp"].ToString().Trim() != "")
                    {
                        string country = subjectcode(ds.Tables[0].Rows[0]["Countryp"].ToString());
                        pcountry_span.InnerHtml = ":  " + Convert.ToString(country);
                    }
                    else
                    {
                        pcountry_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_pincodep"].ToString().Trim() != "")
                    {
                        ppostelcode_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_pincodep"]);
                    }
                    else
                    {
                        ppostelcode_span.InnerHtml = "-";
                    }
                    if (ds.Tables[0].Rows[0]["parent_phnop"].ToString().Trim() != "")
                    {
                        pstdisd_span.InnerHtml = ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_phnop"]);
                    }
                    else
                    {
                        pstdisd_span.InnerHtml = "-";
                    }
                }
                if (ds.Tables[1].Rows.Count > 0)
                {
                    if (ddledu.SelectedItem.Text == "UG")
                    {
                        ugtotaldiv.Visible = true;
                        pgtotaldiv.Visible = false;
                        string courseentronumber = Convert.ToString(ds.Tables[1].Rows[0]["course_entno"]);
                        string coursecode = Convert.ToString(ds.Tables[1].Rows[0]["course_code"]);
                        string university_code = Convert.ToString(ds.Tables[1].Rows[0]["university_code"]);
                        string institutename = Convert.ToString(ds.Tables[1].Rows[0]["Institute_name"]);
                        string percentage = Convert.ToString(ds.Tables[1].Rows[0]["percentage"]);
                        string institueaddress = Convert.ToString(ds.Tables[1].Rows[0]["instaddress"]);
                        string medium = Convert.ToString(ds.Tables[1].Rows[0]["medium"]);
                        string part1language = Convert.ToString(ds.Tables[1].Rows[0]["Part1Language"]);
                        string part2language = Convert.ToString(ds.Tables[1].Rows[0]["Part2Language"]);
                        string isgrade = Convert.ToString(ds.Tables[1].Rows[0]["isgrade"]);
                        string university_state = Convert.ToString(ds.Tables[1].Rows[0]["uni_state"]);
                        // string part1language = Convert.ToString(ds.Tables[1].Rows[0]["Institute_name"]);
                        if (coursecode.Trim() != "")
                        {
                            string course1 = subjectcode(coursecode);
                            qualifyingexam_span.InnerHtml = ":  " + Convert.ToString(course1);
                        }
                        else
                        {
                            qualifyingexam_span.InnerHtml = ":  -";
                        }
                        if (institutename.Trim() != "")
                        {
                            Nameofschool_span.InnerHtml = ":  " + Convert.ToString(institutename);
                        }
                        else
                        {
                            Nameofschool_span.InnerHtml = "";
                        }
                        if (institueaddress.Trim() != "")
                        {
                            locationofschool_Span.InnerHtml = ":  " + Convert.ToString(institueaddress);
                        }
                        else
                        {
                            locationofschool_Span.InnerHtml = "";
                        }
                        if (medium.Trim() != "")
                        {
                            string m = subjectcode(medium);
                            mediumofstudy_span.InnerHtml = ":  " + Convert.ToString(m);
                        }
                        else
                        {
                            mediumofstudy_span.InnerHtml = ":  -";
                        }
                        if (university_code.Trim() != "")
                        {
                            string univ = subjectcode(university_code);
                            qualifyingboard_span.InnerHtml = ":  " + Convert.ToString(univ);
                        }
                        else
                        {
                            qualifyingboard_span.InnerHtml = ":  -";
                        }
                        if (isgrade.Trim() != "")
                        {
                            if (isgrade == "True")
                            {
                                marksgrade_span.InnerHtml = ":  Grade";
                            }
                            else
                            {
                                marksgrade_span.InnerHtml = ":  Marks";
                            }
                        }
                        string markquery = "select psubjectno,registerno,acual_marks,max_marks,noofattempt,pass_month,pass_year,semyear ,grade from perv_marks_history  where course_entno ='" + courseentronumber + "'";
                        ds.Clear();
                        ds = dt.select_method_wo_parameter(markquery, "Text");
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            DataTable data = new DataTable();
                            DataRow dr = null;
                            Hashtable hash = new Hashtable();
                            data.Columns.Add("Language", typeof(string));
                            data.Columns.Add("Subject", typeof(string));
                            data.Columns.Add("Marks Obtained", typeof(string));
                            data.Columns.Add("Month", typeof(string));
                            data.Columns.Add("Year", typeof(string));
                            data.Columns.Add("Register No / Roll No", typeof(string));
                            data.Columns.Add("No of Attempts", typeof(string));
                            data.Columns.Add("Maximum Marks", typeof(string));
                            hash.Add(0, "Language1");
                            hash.Add(1, "Language2");
                            hash.Add(2, " Subject1");
                            hash.Add(3, " Subject2");
                            hash.Add(4, " Subject3");
                            hash.Add(5, " Subject4");
                            hash.Add(6, " Subject5");
                            hash.Add(7, " Subject6");
                            hash.Add(8, " Subject7");
                            hash.Add(9, " Subject8");
                            hash.Add(10, " Subject9");
                            hash.Add(11, " Subject10");
                            hash.Add(12, " Subject11");
                            int totalmark = 0;
                            int maxtotal = 0;
                            for (int mark = 0; mark < ds.Tables[0].Rows.Count; mark++)
                            {
                                string subjectno = Convert.ToString(ds.Tables[0].Rows[mark]["psubjectno"]);
                                string actualmark = "";
                                if (isgrade == "True")
                                {
                                    actualmark = Convert.ToString(ds.Tables[0].Rows[mark]["grade"]);
                                }
                                else
                                {
                                    actualmark = Convert.ToString(ds.Tables[0].Rows[mark]["acual_marks"]);
                                }
                                string month = Convert.ToString(ds.Tables[0].Rows[mark]["pass_month"]);
                                string year = Convert.ToString(ds.Tables[0].Rows[mark]["pass_year"]);
                                string regno = Convert.ToString(ds.Tables[0].Rows[mark]["registerno"]);
                                string noofattenm = Convert.ToString(ds.Tables[0].Rows[mark]["noofattempt"]);
                                string maxmark = Convert.ToString(ds.Tables[0].Rows[mark]["max_marks"]);
                                dr = data.NewRow();
                                string lang = Convert.ToString(hash[mark]);
                                dr[0] = Convert.ToString(lang);
                                string sub = subjectcode(subjectno);
                                dr[1] = Convert.ToString(sub);
                                dr[2] = Convert.ToString(actualmark);
                                dr[3] = Convert.ToString(month);
                                dr[4] = Convert.ToString(year);
                                dr[5] = Convert.ToString(regno);
                                dr[6] = Convert.ToString(noofattenm);
                                dr[7] = Convert.ToString(maxmark);
                                data.Rows.Add(dr);
                                if (isgrade != "True")
                                {
                                    totalmark = totalmark + Convert.ToInt32(actualmark);
                                    maxtotal = maxtotal + Convert.ToInt32(maxmark);
                                }
                            }
                            if (isgrade != "True")
                            {
                                total_marks_secured.InnerHtml = ":  " + Convert.ToString(totalmark);
                                maximum_marks.InnerHtml = ":  " + Convert.ToString(maxtotal);
                                percentage_span.InnerHtml = ":  " + percentage;
                            }
                            VerificationGridug.DataSource = data;
                            VerificationGridug.DataBind();
                            if (VerificationGridug.Rows.Count > 0)
                            {
                                for (int v = 0; v < VerificationGridug.Rows.Count; v++)
                                {
                                    VerificationGridug.Rows[v].Cells[2].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[3].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[4].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[5].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[6].HorizontalAlign = HorizontalAlign.Center;
                                    VerificationGridug.Rows[v].Cells[7].HorizontalAlign = HorizontalAlign.Center;
                                }
                            }
                        }
                    }
                    else if (ddledu.SelectedItem.Text == "PG")
                    {
                        ugtotaldiv.Visible = false;
                        pgtotaldiv.Visible = true;
                        string courseentronumber = Convert.ToString(ds.Tables[1].Rows[0]["course_entno"]);
                        string coursecode = Convert.ToString(ds.Tables[1].Rows[0]["course_code"]);
                        string university_code = Convert.ToString(ds.Tables[1].Rows[0]["university_code"]);
                        string institutename = Convert.ToString(ds.Tables[1].Rows[0]["Institute_name"]);
                        string percentage = Convert.ToString(ds.Tables[1].Rows[0]["percentage"]);
                        string institueaddress = Convert.ToString(ds.Tables[1].Rows[0]["instaddress"]);
                        string medium = Convert.ToString(ds.Tables[1].Rows[0]["medium"]);
                        string part1language = Convert.ToString(ds.Tables[1].Rows[0]["Part1Language"]);
                        string part2language = Convert.ToString(ds.Tables[1].Rows[0]["Part2Language"]);
                        string isgrade = Convert.ToString(ds.Tables[1].Rows[0]["isgrade"]);
                        string university_state = Convert.ToString(ds.Tables[1].Rows[0]["uni_state"]);
                        string typeofsubject = Convert.ToString(ds.Tables[1].Rows[0]["type_major"]);
                        string typeofsemester = Convert.ToString(ds.Tables[1].Rows[0]["type_semester"]);
                        string regno = Convert.ToString(ds.Tables[1].Rows[0]["registration_no"]);
                        string major = Convert.ToString(ds.Tables[1].Rows[0]["branch_code"]);
                        string majorpercentage = Convert.ToString(ds.Tables[1].Rows[0]["major_percent"]);
                        string majorallidepercentage = Convert.ToString(ds.Tables[1].Rows[0]["majorallied_percent"]);
                        string Tancet = Convert.ToString(ds.Tables[1].Rows[0]["tancet_mark"]);
                        string Tancetyear = Convert.ToString(ds.Tables[1].Rows[0]["tancetmark_year"]);
                        percentagemajorspan.InnerHtml = ":  " + Convert.ToString(percentage);
                        majorsubjectspan.InnerHtml = ":  " + Convert.ToString(majorpercentage);
                        alliedmajorspan.InnerHtml = ":  " + Convert.ToString(majorallidepercentage);
                        if (coursecode.Trim() != "")
                        {
                            string course1 = subjectcode(coursecode);
                            ugqualifyingexam_span.InnerHtml = ":  " + Convert.ToString(course1);
                        }
                        else
                        {
                            ugqualifyingexam_span.InnerHtml = ":  -";
                        }
                        if (institutename.Trim() != "")
                        {
                            nameofcollege_Sapn.InnerHtml = ":  " + Convert.ToString(institutename);
                        }
                        else
                        {
                            nameofcollege_Sapn.InnerHtml = "";
                        }
                        //17.06.16
                        DataView dv = new DataView();
                        ds.Tables[2].DefaultView.RowFilter = "textcode='" + university_code + "'";
                        dv = ds.Tables[2].DefaultView;
                        if (dv.Count > 0)
                        {
                            if (Convert.ToString(dv[0][0]).Trim() != "")
                            {
                                nameofuniver_city.InnerHtml = ":  " + Convert.ToString((dv[0][0]));
                            }
                            else
                            {
                                nameofuniver_city.InnerHtml = "";
                            }
                        }
                        if (institueaddress.Trim() != "")
                        {
                            locationofcollege_sapn.InnerHtml = ":  " + Convert.ToString(institueaddress);
                        }
                        else
                        {
                            locationofcollege_sapn.InnerHtml = "";
                        }
                        if (major.Trim() != "")
                        {
                            string major1 = subjectcode(major);
                            major_span.InnerHtml = ":  " + Convert.ToString(major1);
                        }
                        else
                        {
                            major_span.InnerHtml = "";
                        }
                        if (typeofsubject.Trim() != "")
                        {
                            if (typeofsubject == "1")
                            {
                                typeofsubject = "Single";
                            }
                            else if (typeofsubject == "2")
                            {
                                typeofsubject = "Double";
                            }
                            else if (typeofsubject == "3")
                            {
                                typeofsubject = "Triple";
                            }
                            typeofmajor_span.InnerHtml = ":  " + Convert.ToString(typeofsubject);
                        }
                        if (typeofsemester.Trim() != "")
                        {
                            if (typeofsemester == "True")
                            {
                                typeofsemester = "Semester";
                            }
                            else
                            {
                                typeofsemester = "Non Semester";
                            }
                            typeofsemester_span.InnerHtml = ":  " + Convert.ToString(typeofsemester);
                        }
                        if (medium.Trim() != "")
                        {
                            string lang = subjectcode(medium);
                            mediumofstudy_spanug.InnerHtml = ":  " + Convert.ToString(lang);
                        }
                        if (isgrade.Trim() != "")
                        {
                            if (isgrade == "True")
                            {
                                marksorgradeug_span.InnerHtml = ":  Grade";
                            }
                            else
                            {
                                marksorgradeug_span.InnerHtml = ":  Marks";
                            }
                        }
                        //if (isgrade.Trim() != "")
                        //{
                        //    marksorgradeug_span.InnerHtml = ":  " + Convert.ToString(isgrade);
                        //}
                        if (regno.Trim() != "")
                        {
                            reg_no_span.InnerHtml = ":  " + Convert.ToString(regno);
                        }
                        if (type == "MCA")
                        {
                            tnspan.Visible = true;
                            Tancetspan.Visible = true;
                            Tancetspan.InnerHtml = ": " + Convert.ToString(Tancet) + " - " + Convert.ToString(Tancetyear);
                        }
                        string pgquery = "select psubjectno,subject_typeno,acual_marks,max_marks,pass_month,pass_year,semyear ,grade from perv_marks_history where course_entno ='" + courseentronumber + "'";
                        ds.Clear();
                        ds = dt.select_method_wo_parameter(pgquery, "Text");
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            DataTable data = new DataTable();
                            DataRow dr = null;
                            Hashtable hash = new Hashtable();
                            data.Columns.Add("S.No", typeof(string));
                            //  data.Columns.Add("Sem/Year", typeof(string));
                            data.Columns.Add("Subject", typeof(string));
                            data.Columns.Add("Subject type", typeof(string));
                            data.Columns.Add("Marks", typeof(string));
                            data.Columns.Add("Month", typeof(string));
                            data.Columns.Add("Year", typeof(string));
                            data.Columns.Add("Maximum Marks", typeof(string));
                            int sno = 0;
                            for (int pg = 0; pg < ds.Tables[0].Rows.Count; pg++)
                            {
                                sno++;
                                string subjectno = Convert.ToString(ds.Tables[0].Rows[pg]["psubjectno"]);
                                string subjecttypeno = Convert.ToString(ds.Tables[0].Rows[pg]["subject_typeno"]);
                                string actualmark = "";
                                if (isgrade == "True")
                                {
                                    actualmark = Convert.ToString(ds.Tables[0].Rows[pg]["grade"]);
                                }
                                else
                                {
                                    actualmark = Convert.ToString(ds.Tables[0].Rows[pg]["acual_marks"]);
                                }
                                string month = Convert.ToString(ds.Tables[0].Rows[pg]["pass_month"]);
                                string year = Convert.ToString(ds.Tables[0].Rows[pg]["pass_year"]);
                                // string noofattenm = Convert.ToString(ds.Tables[0].Rows[pg]["noofattempt"]);
                                string maxmark = Convert.ToString(ds.Tables[0].Rows[pg]["max_marks"]);
                                dr = data.NewRow();
                                dr[0] = Convert.ToString(sno);
                                string subject = subjectcode(subjectno);
                                dr[1] = Convert.ToString(subject);
                                string typesub = subjectcode(subjecttypeno);
                                dr[2] = Convert.ToString(typesub);
                                dr[3] = Convert.ToString(actualmark);
                                dr[4] = Convert.ToString(month);
                                dr[5] = Convert.ToString(year);
                                dr[6] = Convert.ToString(maxmark);
                                data.Rows.Add(dr);
                            }
                            Verificationgridpg.DataSource = data;
                            Verificationgridpg.DataBind();
                            if (VerificationGridug.Rows.Count > 0)
                            {
                                for (int v = 0; v < Verificationgridpg.Rows.Count; v++)
                                {
                                    Verificationgridpg.Rows[v].Cells[3].HorizontalAlign = HorizontalAlign.Center;
                                    Verificationgridpg.Rows[v].Cells[4].HorizontalAlign = HorizontalAlign.Center;
                                    Verificationgridpg.Rows[v].Cells[5].HorizontalAlign = HorizontalAlign.Center;
                                    Verificationgridpg.Rows[v].Cells[6].HorizontalAlign = HorizontalAlign.Center;
                                }
                            }
                        }
                    }
                }
            }
            if (activecol == "1")
            {
                int isval1 = Convert.ToInt32(FpSpread3.Sheets[0].Cells[Convert.ToInt32(activerow), 1].Value);
                if (isval1 == 1)
                {
                    FpSpread3.Sheets[0].Rows[Convert.ToInt32(activerow)].BackColor = Color.LightYellow;
                }
                else if (isval1 == 0)
                {
                    int vll = Convert.ToInt32(FpSpread3.Sheets[0].Cells[Convert.ToInt32(activerow), 0].Text);
                    if (vll % 2 == 0)
                    {
                        FpSpread3.Sheets[0].Rows[Convert.ToInt32(activerow)].BackColor = Color.Lavender;
                    }
                    else
                    {
                        FpSpread3.Sheets[0].Rows[Convert.ToInt32(activerow)].BackColor = Color.MintCream;
                    }
                }
            }
        }
        catch (Exception ex)
        {
            college_span.InnerHtml = ex.ToString(); d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    public void spread()
    
    {
        try
        {
            ArrayList addsno = new ArrayList();
            FpSpread3.SaveChanges();
            // Hashtable hat = new Hashtable()
            if (ddledu.SelectedItem.Text == "PG")
            {
                #region Pg
                DataSet ddummy = new DataSet();
                //  string app = "update  applyn set isview='0' where isview is null";
                // int v = dt.update_method_wo_parameter(app, "text");
                FpSpread3.Sheets[0].ColumnCount = 4;
                FpSpread3.Sheets[0].RowHeader.Visible = false;
                FpSpread3.Sheets[0].AutoPostBack = false;
                FpSpread3.Height = 360;
                FpSpread3.Width = 930;
                FpSpread3.CommandBar.Visible = false;
                FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
                darkstyle.BackColor = Color.Brown;
                darkstyle.ForeColor = Color.White;
                FpSpread3.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
                FarPoint.Web.Spread.TextCellType txt = new FarPoint.Web.Spread.TextCellType();
                FarPoint.Web.Spread.CheckBoxCellType chkcel1 = new FarPoint.Web.Spread.CheckBoxCellType();
                chkcel1.AutoPostBack = false;
                FarPoint.Web.Spread.ButtonCellType but = new FarPoint.Web.Spread.ButtonCellType("MyCommand", FarPoint.Web.Spread.ButtonType.ImageButton, "~/images/view11.png");
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                // FpSpread3.Sheets[0].ColumnHeader.Cells[0, 0].BackColor = Color.MistyRose;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
                // FpSpread3.Sheets[0].ColumnHeader.Cells[0, 1].BackColor = Color.MistyRose;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 2].Text = "app";
                //  FpSpread3.Sheets[0].ColumnHeader.Cells[0, 2].BackColor = Color.MistyRose;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 3].Text = "View";
                // FpSpread3.Sheets[0].ColumnHeader.Cells[0, 3].BackColor = Color.MistyRose;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                FpSpread3.Sheets[0].Columns[2].Visible = false;
                FpSpread3.Sheets[0].Columns[0].Visible = true;
                FpSpread3.Sheets[0].Columns[0].Width = 40;
                FpSpread3.Sheets[0].Columns[1].Width = 50;
                int sno = 0;
                string[] frmdat = TextBox2.Text.Split(' ');
                string[] fdate = frmdat[0].Split('/');
                string fromdate = fdate[2].ToString() + "-" + fdate[1].ToString() + "-" + fdate[0].ToString();
                string[] trmdat = TextBox3.Text.Split(' ');
                string[] tdate = trmdat[0].Split('/');
                string tomdate = tdate[2].ToString() + "-" + tdate[1].ToString() + "-" + tdate[0].ToString();
                string com = "";
                string com1 = "";
                if (txtbatch.Text != " " && ddldegree.SelectedItem.Text != "--Select--" && ddledu.SelectedItem.Text != "--Select--" && ddldept.SelectedItem.Text != "--Select--" && ddltype.SelectedItem.Text != "--Select--")
                {
                    //  com = "select distinct  a.app_no,app_formno,CONVERT(varchar(10), date_applied,103) as date_applied,stud_name,sex,Relationship,parent_name,CONVERT(varchar(10), dob,103) as dob,parent_occu,mother_tongue,religion,citizen,community,caste,TamilOrginFromAndaman,IsExService,handy,visualhandy,first_graduate,CampusReq,DistinctSport,co_curricular,parent_addressC,Streetc,Cityc,parent_statec,Countryc,parent_pincodec,Student_Mobile,StuPer_Id,parent_phnoc,alter_mobileno,parent_addressP,Streetp,cityp,parent_statep,Countryp,parent_pincodep,parent_phnop,a.degree_code,batch_year,a.college_code,SubCaste,isdisable ,isdisabledisc,islearningdis,missionarydisc,MissionaryChild,seattype,current_semester,ncccadet,Institute_name,instaddress,medium,isgrade,Part1Language,Part2Language,percentage,majorallied_percent,university_code,uni_state,psubjectno,registerno,acual_marks,max_marks,pass_month,pass_year,noofattempt,p.grade,s.course_code,s.branch_code,s.tancet_mark,Vocational_stream,ApplBankRefNumber from applyn a,Course c,Degree d,Stud_prev_details s,perv_marks_history p,textvaltable t where c.Course_Id=d.Course_Id and c.college_code=d.college_code and c.college_code=a.college_code and d.Degree_Code=a.degree_code and d.college_code=a.college_code  and s.app_no=a.app_no and p.course_entno=s.course_entno and t.TextCode=p.psubjectno and t.college_code=a.college_code  and t.college_code=c.college_code and t.college_code=d.college_code and (selection_status='0' or selection_status is null)and (admission_status='0' or admission_status is null ) and batch_year='" + txtbatch.Text + "' and d.degree_code='" + ddldept.SelectedValue + "' and c.Course_Id='" + ddldegree.SelectedValue + "' and c.Edu_Level='" + ddledu.SelectedItem.Text + "' and t.TextCriteria='subje'  and isconfirm ='1' ";
                    com = " select distinct  a.app_no,app_formno,CONVERT(varchar(10), date_applied,103) as date_applied,stud_name,sex,Relationship,parent_name,CONVERT(varchar(10), dob,103) as dob,parent_occu,mother_tongue,religion,citizen,community,caste,TamilOrginFromAndaman,IsExService,handy,visualhandy,first_graduate,CampusReq,DistinctSport,co_curricular,parent_addressC,Streetc,Cityc,parent_statec,Countryc,parent_pincodec,Student_Mobile,StuPer_Id,parent_phnoc,alter_mobileno,parent_addressP,Streetp,cityp,parent_statep,Countryp,parent_pincodep,parent_phnop,a.degree_code,batch_year,a.college_code,SubCaste,isdisable ,isdisabledisc,islearningdis,missionarydisc,MissionaryChild,seattype,current_semester,ncccadet,Institute_name,instaddress,medium,isgrade,Part1Language,Part2Language,percentage,majorallied_percent,university_code,uni_state,s.course_code,s.branch_code,s.tancet_mark,Vocational_stream,ApplBankRefNumber from applyn a,Stud_prev_details s where  s.app_no=a.app_no and (selection_status='0' or selection_status is null)and (admission_status='0' or admission_status is null ) and batch_year='" + txtbatch.Text + "' and a.degree_code='" + ddldept.SelectedValue + "' and isconfirm ='1' ";
                    //and a.date_applied between '2016-04-28'  and '2016-08-31'and ( a.religion in (3288,2161,3783,3780,3363,2159,3873,2160) or a.community in (3288,2161,3783,3780,3363,2159,3873,2160)) order by majorallied_percent desc";
                    //com1 = "select Distinct a.app_no,percentage,majorallied_percent from applyn a,Course c,Degree d,Stud_prev_details s,perv_marks_history p,textvaltable t where c.Course_Id=d.Course_Id and c.college_code=d.college_code and c.college_code=a.college_code and d.Degree_Code=a.degree_code and d.college_code=a.college_code  and s.app_no=a.app_no and p.course_entno=s.course_entno and t.TextCode=p.psubjectno and t.college_code=a.college_code  and t.college_code=c.college_code and t.college_code=d.college_code and (selection_status='0' or selection_status is null)and (admission_status='0' or admission_status is null ) and batch_year='" + txtbatch.Text + "' and d.degree_code='" + ddldept.SelectedValue + "' and c.Course_Id='" + ddldegree.SelectedValue + "' and c.Edu_Level='" + ddledu.SelectedItem.Text + "'    and t.TextCriteria='subje'  and isconfirm ='1'";
                    com1 = "select distinct a.app_no,percentage,majorallied_percent from applyn a,Stud_prev_details s where s.app_no=a.app_no and (selection_status='0' or selection_status is null)and (admission_status='0' or admission_status is null ) and batch_year='" + txtbatch.Text + "' and a.degree_code='" + ddldept.SelectedValue + "' and isconfirm ='1' ";
                    //if (spsearch == 1)
                    //{
                    if (TextBox4.Text != "")
                    {
                        com = com + "and a.stud_name like'%" + TextBox4.Text + "%'";//modified
                        com1 = com1 + "and a.stud_name like'%" + TextBox4.Text + "%'";
                    }
                    if (TextBox5.Text != "")
                    {
                        com = com + "and a.Student_Mobile='" + TextBox5.Text + "'";
                        com1 = com1 + "and a.Student_Mobile='" + TextBox5.Text + "'";
                    }
                    if (TextBox6.Text != "")
                    {
                        com = com + "and a.app_formno='" + TextBox6.Text + "'";
                        com1 = com1 + "and a.app_formno='" + TextBox6.Text + "'";
                    }
                    //}
                    //else
                    //{
                    com = com + " and a.date_applied between '" + fromdate + "'  and '" + tomdate + "'";
                    com1 = com1 + " and a.date_applied between '" + fromdate + "'  and '" + tomdate + "'";
                    //}
                    if (ddltype.SelectedItem.Text != "All")
                    {
                        // com = com + "and c.type='" + ddltype.SelectedItem.Text + "'";
                        //com1 = com1 + "and c.type='" + ddltype.SelectedItem.Text + "'";
                    }
                    string admin = "";
                    // string adm = "select * from admitcolumnset where textcriteria = 'relig' and user_code='" + user_code + "'";
                    string adm = "select column_name from admitcolumnset where (textcriteria ='community' or textcriteria ='relig') and setcolumn ='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    ds1 = dt.select_method_wo_parameter(adm, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                        {
                            if (admin == "")
                            {
                                admin = ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                            else
                            {
                                admin = admin + "," + ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                        }
                        if (admin.Trim() != "")
                        {
                            string TextValuenew = d2.GetFunction("select TextCode  from TextValTable where TextCriteria ='comm' and TextCriteria2 ='comm1' and TextVal ='Others'");
                            if (TextValuenew.Trim() != "" && TextValuenew.Trim() != "0")
                            {
                                admin = admin + "," + TextValuenew;
                            }
                        }
                        if (orderflage == true)
                        {
                            com = com + "and ( a.religion in (" + textcode + ") or a.community in (" + textcode + "))";
                            com1 = com1 + "and ( a.religion in (" + textcode + ") or a.community in (" + textcode + "))";
                        }
                        else
                        {
                            string region = rs.GetSelectedItemsValueAsString(cbl_religion);
                            if (region.Trim() == "")
                            {
                                com = com + " and ( a.religion in (" + admin + ") or a.community in (" + admin + "))";
                                com1 = com1 + " and ( a.religion in (" + admin + ") or a.community in (" + admin + "))";
                            }
                            else
                            {
                                com = com + " and ( a.religion in ('" + region + "') and a.community in (" + admin + "))";
                                com1 = com1 + " and ( a.religion in ('" + region + "') and a.community in (" + admin + "))";
                            }
                        }
                        if (cb_voc.Checked == true)
                            com += " and isnull(sd.Vocational_stream,0)='1'";
                        string board = rs.GetSelectedItemsValueAsString(cbl_BoardUniv);
                        string medium = rs.GetSelectedItemsValueAsString(cbl_comm);
                        string attempts = rs.GetSelectedItemsValueAsString(cblAttempt);
                        if (medium.Trim() != "")
                            com += " and s.medium in('" + medium + "')";
                        if (attempts.Trim() != "")
                            com += " and noofattempt in('" + attempts + "')";
                        if (board.Trim() != "")
                            com += " and s.Course_code in('" + board + "')";
                        string admin1 = "";
                        // string adm1 = "select * from admitcolumnset where textcriteria = 'subjec' and user_code='" + user_code + "'";
                        string adm1 = "select * from admitcolumnset where textcriteria = 'subjec' and setcolumn='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                        ds1 = dt.select_method_wo_parameter(adm1, "text");
                        if (ds1.Tables[0].Rows.Count > 0)
                        {
                            for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                            {
                                if (admin1 == "")
                                {
                                    admin1 = ds1.Tables[0].Rows[w]["column_name"].ToString();
                                }
                                else
                                {
                                    admin1 = admin1 + "," + ds1.Tables[0].Rows[w]["column_name"].ToString();
                                }
                            }
                            if (ddledu.SelectedItem.Text == "UG")
                            {
                                com = com + "and p.psubjectno in (" + admin1 + ")";
                                com1 = com1 + "and p.psubjectno in (" + admin1 + ")";
                            }
                            if (ddledu.SelectedItem.Text == "PG")
                            {
                                com = com + "and s.branch_code in (" + admin1 + ")";
                                com1 = com1 + "and s.branch_code in (" + admin1 + ")";
                            }
                        }
                        if (com.Trim() != "")
                        {
                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                            {
                                com = com + " order by percentage desc";
                                com1 = com1 + " order by percentage desc";
                            }
                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                            {
                                com = com + " order by majorallied_percent desc";
                                com1 = com1 + " order by majorallied_percent desc";
                            }
                        }
                        ds = dt.select_method_wo_parameter(com, "text");
                        ddummy.Clear();
                        ddummy = dt.select_method_wo_parameter(com1, "Text");
                        string colm = "";
                        string priority = " select * from admitcolumnset where textcriteria='column' and College_Code ='" + college_code + "' order by CONVERT(int, priority )";
                        ds1 = dt.select_method_wo_parameter(priority, "text");
                        if (ds1.Tables[0].Rows.Count > 0)
                        {
                            for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                            {
                                colm = ds1.Tables[0].Rows[i]["column_name"].ToString();
                                FpSpread3.Sheets[0].ColumnCount++;
                                FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].Text = ds1.Tables[0].Rows[i]["setcolumn"].ToString();
                                // FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                                FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Locked = true;
                                FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].CellType = txt;
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "User Name")
                                {
                                    FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "Category")
                                {
                                    FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                                if (ddltype.SelectedItem.Text.ToString().ToUpper() != "MCA")
                                {
                                    if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "TANCET Mark")
                                    {
                                        FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Visible = false;
                                    }
                                }
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "State")
                                {
                                    FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "Mother Tongue")
                                {
                                    FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "Subject Percentage")
                                {
                                    FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                                if (ds1.Tables[0].Rows[i]["setcolumn"].ToString().ToUpper() == "MARKS")//06.05.17 barath
                                {
                                    if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                        FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Visible = false;
                                }
                                if (FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].Text == "DOB")
                                {
                                    FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Width = 90;
                                }
                                if (FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].Text == "Student Name")
                                {
                                    FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].Text == "Address")
                                {
                                    FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].Text == "City")
                                {
                                    FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Width = 100;
                                }
                                if (FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].Text == "Email_Id")
                                {
                                    FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Width = 200;
                                }
                                if (FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].Text == "Mobile No")
                                {
                                    FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Width = 100;
                                    FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].CellType = txt;
                                }
                                if (FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].Text == "Subject")
                                {
                                    FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Width = 180;
                                    FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Visible = false;
                                    FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].CellType = txt;
                                }
                            }
                        }
                        DataView dv = new DataView();
                        addsno.Clear();
                        lbltotalcount.Text = " Applied" + " " + ": " + ddummy.Tables[0].Rows.Count;
                        if (ddummy.Tables[0].Rows.Count > 0)
                        {
                            FpSpread3.Sheets[0].RowCount = 0;
                            int sno_Value = 0;
                            for (int row = 0; row < ddummy.Tables[0].Rows.Count; row++)
                            {
                                if (!addsno.Contains(Convert.ToString(ddummy.Tables[0].Rows[row]["app_no"])))
                                {
                                    addsno.Add(Convert.ToString(ddummy.Tables[0].Rows[row]["app_no"]));
                                    string app_no = Convert.ToString(ddummy.Tables[0].Rows[row]["app_no"]);
                                    ds.Tables[0].DefaultView.RowFilter = "app_no='" + app_no + "'";
                                    dv = ds.Tables[0].DefaultView;
                                    if (dv.Count > 0)
                                    {
                                        sno_Value++;
                                        FpSpread3.Sheets[0].RowCount++;
                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(sno_Value);
                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(ds.Tables[0].Rows[row]["community"]);//03.05.17 barath
                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 0].Note = Convert.ToString(ds.Tables[0].Rows[row]["seattype"]);
                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 0].Font.Name = "Times New Roman";
                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 1].CellType = chkcel1;
                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 1].Value = 0;
                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 1].Font.Name = "Times New Roman";
                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(ddummy.Tables[0].Rows[row]["app_no"]);
                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(ds.Tables[0].Rows[row]["app_formno"]);
                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 2].Note = Convert.ToString(ds.Tables[0].Rows[row]["batch_year"]);
                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 2].Font.Name = "Times New Roman";
                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 3].CellType = but;
                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 3].Font.Name = "Times New Roman";
                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                                        int col = 4;
                                        for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                                        {
                                            col++;
                                            string colmname = Convert.ToString(ds1.Tables[0].Rows[i]["column_name"]);
                                            if (colmname.Trim() != "SubjectPercen" && colmname.Trim() != "Subject" && colmname.Trim() != "usercode" && colmname.Trim() != "criteria_Code")
                                            {
                                                if (colmname.Trim() != "criteria_Code" && colmname.Trim() != "parent_statep" && colmname.Trim() != "mother_tongue" && colmname.Trim() != "parent_occu" && colmname.Trim() != "religion" && colmname.Trim() != "citizen" && colmname.Trim() != "community" && colmname.Trim() != "caste" && colmname.Trim() != "DistinctSport" && colmname.Trim() != "co_curricular" && colmname.Trim() != "medium" && colmname.Trim() != "university_code")
                                                {
                                                    if (colmname.Trim() != "TamilOrginFromAndaman" && colmname.Trim() != "IsExService" && colmname.Trim() != "isdisable" && colmname.Trim() != "first_graduate" && colmname.Trim() != "CampusReq" && colmname.Trim() != "ncccadet" && colmname.Trim() != "Vocational_stream")
                                                    {
                                                        if (colmname.Trim() != "course_code")
                                                        {
                                                            if (colmname.Trim() != "TotalPercentage")
                                                            {
                                                                if (colmname.Trim() != "sex")
                                                                {
                                                                    if ("securedmark" == colmname.Trim().ToLower())
                                                                    {
                                                                        if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                                                        {
                                                                            FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Text = "";
                                                                        }
                                                                        else
                                                                            FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(dv[0][colmname]);
                                                                    }
                                                                    else
                                                                    {
                                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(dv[0][colmname]);
                                                                    }
                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                }
                                                                else
                                                                {
                                                                    string gendervalue = Convert.ToString(dv[0][colmname]);
                                                                    if (gendervalue == "0")
                                                                    {
                                                                        gendervalue = "Male";
                                                                    }
                                                                    else if (gendervalue == "1")
                                                                    {
                                                                        gendervalue = "Female";
                                                                    }
                                                                    else if (gendervalue == "2")
                                                                    {
                                                                        gendervalue = "Transgender";
                                                                    }
                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(gendervalue);
                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                                                                {
                                                                    colmname = "percentage";
                                                                }
                                                                if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                                                {
                                                                    colmname = "majorallied_percent";
                                                                }
                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(dv[0][colmname]);
                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Center;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                                                            {
                                                                string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(ds.Tables[0].Rows[row][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                            }
                                                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                                            {
                                                                string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(ds.Tables[0].Rows[row][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                                string dept = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(ds.Tables[0].Rows[row]["branch_code"]) + "' and (TextCriteria='branc') and college_code ='" + Session["collegecode"] + "'");
                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Text = usernem + " " + dept;
                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                            }
                                                        }
                                                    }
                                                    else
                                                    {
                                                        string test_Value = "";
                                                        if (Convert.ToString(ds.Tables[0].Rows[row][colmname]) == "False")
                                                        {
                                                            test_Value = "No";
                                                        }
                                                        else
                                                        {
                                                            test_Value = "Yes";
                                                        }
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(test_Value);
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                    }
                                                }
                                                else
                                                {
                                                    string textval = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(ds.Tables[0].Rows[row][colmname]) + "'  and college_code ='" + Session["collegecode"] + "'");
                                                    if (textval == "0")
                                                    {
                                                        textval = "";
                                                    }
                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Text = textval;
                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            FpSpread3.Sheets[0].PageSize = FpSpread3.Sheets[0].RowCount;
                            FpSpread3.Visible = true;
                            lbltotalcount.Visible = true;
                            ckbx.Visible = true;
                            if (spsearch == 1)
                            {
                                TabContainer1.ActiveTab = TabContainer1.Tabs[0];
                                spsearch = 0;
                                TextBox4.Text = "";
                                TextBox5.Text = "";
                            }
                        }
                        else
                        {
                            if (spsearch == 1)
                            {
                                spread2();
                            }
                            else
                            {
                                lblmg.Visible = true;
                                lblmg.Text = "No Records Found";
                                FpSpread3.Visible = false;
                                btnapprove.Visible = false;
                                Button2.Visible = false;
                                Button3.Visible = false;
                                Button9.Visible = false;
                                // btnreject.Visible = false;
                                lbltotalcount.Visible = false;
                                lbltotalcount.Text = " Applied" + " " + ": " + "0";
                                Label66.Visible = false;
                                Label68.Visible = false;
                                Label67.Visible = false;
                                Label69.Visible = false;
                                lbltotalfeepaid.Visible = false;
                                lbltotalfeepaid_value.Visible = false;
                                ckbx.Visible = false;
                                btnconform.Visible = false;
                                btnunpaid.Visible = false;
                                btnChallan.Visible = false;
                                btnadmitcard.Visible = false;
                                btnadmitprint.Visible = false;
                                btnleft.Visible = false;
                            }
                        }
                    }
                    else
                    {
                        lblmg.Visible = true;
                        lblmg.Text = "Please Select  Religion";
                        FpSpread3.Visible = false;
                        btnapprove.Visible = false;
                        Button2.Visible = false;
                        Button3.Visible = false;
                        Button9.Visible = false;
                        Label66.Visible = false;
                        Label68.Visible = false;
                        Label67.Visible = false;
                        Label69.Visible = false;
                        lbltotalfeepaid.Visible = false;
                        lbltotalfeepaid_value.Visible = false;
                        lbltotalcount.Visible = false;
                        ckbx.Visible = false;
                        btnconform.Visible = false;
                        btnunpaid.Visible = false;
                        btnChallan.Visible = false;
                        btnadmitcard.Visible = false;
                        btnadmitprint.Visible = false;
                        btnleft.Visible = false;
                        //  btnreject.Visible = false;
                    }
                }
                else
                {
                    lblmg.Visible = true;
                    lblmg.Text = "Please Select All Values";
                    FpSpread3.Visible = false;
                    btnapprove.Visible = false;
                    Button2.Visible = false;
                    Button3.Visible = false;
                    Button9.Visible = false;
                    Label66.Visible = false;
                    Label68.Visible = false;
                    Label67.Visible = false;
                    Label69.Visible = false;
                    lbltotalfeepaid.Visible = false;
                    lbltotalfeepaid_value.Visible = false;
                    lbltotalcount.Visible = false;
                    ckbx.Visible = false;
                    btnconform.Visible = false;
                    btnunpaid.Visible = false;
                    btnChallan.Visible = false;
                    btnadmitcard.Visible = false;
                    btnadmitprint.Visible = false;
                    btnleft.Visible = false;
                    //  btnreject.Visible = false;
                }
                #endregion
            }
            if (ddledu.SelectedItem.Text == "UG")
            {
                #region UG
                Dictionary<int, double> dicsubcol = new Dictionary<int, double>();
                FpSpread3.SaveChanges();
                FpSpread3.Sheets[0].ColumnCount = 4;
                FpSpread3.Sheets[0].RowHeader.Visible = false;
                FpSpread3.Sheets[0].AutoPostBack = false;
                FpSpread3.Height = 360;
                FpSpread3.Width = 930;
                FpSpread3.CommandBar.Visible = false;
                FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
                darkstyle.BackColor = Color.Brown;
                darkstyle.ForeColor = Color.White;
                FpSpread3.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
                FarPoint.Web.Spread.TextCellType txt = new FarPoint.Web.Spread.TextCellType();
                FarPoint.Web.Spread.CheckBoxCellType chkcel1 = new FarPoint.Web.Spread.CheckBoxCellType();
                chkcel1.AutoPostBack = false;
                FarPoint.Web.Spread.ButtonCellType but = new FarPoint.Web.Spread.ButtonCellType("MyCommand", FarPoint.Web.Spread.ButtonType.ImageButton, "~/images/view11.png");
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 0].Text = "S.No";
                // FpSpread3.Sheets[0].ColumnHeader.Cells[0, 0].BackColor = Color.MistyRose;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 0].Font.Name = "Book Antiqua";
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 0].Font.Bold = true;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 0].Font.Size = FontUnit.Medium;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 0].HorizontalAlign = HorizontalAlign.Center;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 1].Text = "Select";
                // FpSpread3.Sheets[0].ColumnHeader.Cells[0, 1].BackColor = Color.MistyRose;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 1].Font.Name = "Book Antiqua";
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 1].Font.Bold = true;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 1].Font.Size = FontUnit.Medium;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 1].HorizontalAlign = HorizontalAlign.Center;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 2].Text = "app";
                //  FpSpread3.Sheets[0].ColumnHeader.Cells[0, 2].BackColor = Color.MistyRose;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 2].Font.Name = "Book Antiqua";
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 2].Font.Bold = true;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 2].Font.Size = FontUnit.Medium;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 2].HorizontalAlign = HorizontalAlign.Center;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 3].Text = "View";
                // FpSpread3.Sheets[0].ColumnHeader.Cells[0, 3].BackColor = Color.MistyRose;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 3].Font.Name = "Book Antiqua";
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 3].Font.Bold = true;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 3].Font.Size = FontUnit.Medium;
                FpSpread3.Sheets[0].ColumnHeader.Cells[0, 3].HorizontalAlign = HorizontalAlign.Center;
                FpSpread3.Sheets[0].Columns[2].Visible = false;
                FpSpread3.Sheets[0].Columns[0].Visible = true;
                FpSpread3.Sheets[0].Columns[0].Width = 40;
                FpSpread3.Sheets[0].Columns[1].Width = 50;
                int sno = 0;
                string[] frmdat = TextBox2.Text.Split(' ');
                string[] fdate = frmdat[0].Split('/');
                string fromdate = fdate[2].ToString() + "-" + fdate[1].ToString() + "-" + fdate[0].ToString();
                string[] trmdat = TextBox3.Text.Split(' ');
                string[] tdate = trmdat[0].Split('/');
                string tomdate = tdate[2].ToString() + "-" + tdate[1].ToString() + "-" + tdate[0].ToString();
                string com = "";
                string com1 = "";
                if (txtbatch.Text != " " && ddldegree.SelectedItem.Text != "--Select--" && ddledu.SelectedItem.Text != "--Select--" && ddldept.SelectedItem.Text != "--Select--" && ddltype.SelectedItem.Text != "--Select--")
                {
                    com = "select distinct a.app_no,app_formno,CONVERT(varchar(10), date_applied,103) as date_applied,stud_name,sex,Relationship,parent_name,CONVERT(varchar(10), dob,103) as dob,parent_occu,mother_tongue,religion,citizen,community,caste,TamilOrginFromAndaman,IsExService,handy,visualhandy,first_graduate,CampusReq,DistinctSport,co_curricular,parent_addressC,Streetc,Cityc,parent_statec,Countryc,parent_pincodec,Student_Mobile,StuPer_Id,parent_phnoc,alter_mobileno,parent_addressP,Streetp,cityp,parent_statep,Countryp,parent_pincodep,parent_phnop,degree_code,batch_year,college_code,SubCaste,isdisable ,isdisabledisc,islearningdis,missionarydisc,MissionaryChild,seattype,current_semester,ncccadet,Institute_name,instaddress,medium,isgrade,Part1Language,Part2Language,percentage,university_code,uni_state,psubjectno,registerno,acual_marks,max_marks,pass_month,pass_year,noofattempt,ph.grade,sd.course_code,sd.branch_code,sd.tancet_mark,Vocational_stream,ApplBankRefNumber,a.Alternativedegree_code,sd.securedmark  from applyn a,Stud_prev_details sd,perv_marks_history ph where  a.app_no =sd.app_no and sd.course_entno =ph.course_entno and a.batch_year ='" + txtbatch.Text + "'  and a.college_code ='" + college_code + "' and a.degree_code ='" + ddldept.SelectedValue + "' and current_semester =1 and isconfirm ='1'  and (selection_status='0' or selection_status is null)and  (admission_status='0' or admission_status is null )  and a.date_applied between '" + fromdate + "'  and '" + tomdate + "'";
                    //com = "select a.isview,p.psubjectno,s.course_code,s.branch_code,s.tancet_mark ,p.acual_marks,mother_tongue,seattype,batch_year,parent_statep,p.max_marks,t.TextVal+'-'+ CAST(CAST(p.acual_marks AS int) AS char(20)) as mark,CONVERT(VARCHAR(2),DATEPART(DAY, a.dob))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.dob)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR, a.dob))as dob,d.Degree_Code,c.Edu_Level,CONVERT(VARCHAR(2),DATEPART(DAY, a.date_applied))+'/'+ CONVERT(VARCHAR(2),DATEPART(MONTH, a.date_applied)) +'/'+ CONVERT(VARCHAR(4),DATEPART(YEAR,a.date_applied))as date_applied,a.app_no,a.app_formno,a.stud_name,a.sex,a.community,a.caste,a.religion,a.Streetp,a.Cityp,a.Districtp,a.parent_addressP,a.parent_pincodep,a.Student_Mobile,a.StuPer_Id,s.percentage,majorallied_percent from applyn a,Course c,Degree d,Stud_prev_details s,perv_marks_history p,textvaltable t where c.Course_Id=d.Course_Id and c.college_code=d.college_code and c.college_code=a.college_code and d.Degree_Code=a.degree_code and d.college_code=a.college_code  and s.app_no=a.app_no and p.course_entno=s.course_entno and t.TextCode=p.psubjectno and t.college_code=a.college_code  and t.college_code=c.college_code and t.college_code=d.college_code and (selection_status='0' or selection_status is null)and (admission_status='0' or admission_status is null ) and batch_year='" + txtbatch.Text + "' and d.degree_code='" + ddldept.SelectedValue + "' and c.Course_Id='" + ddldegree.SelectedValue + "' and c.Edu_Level='" + ddledu.SelectedItem.Text + "'  and a.date_applied between '" + fromdate + "'  and '" + tomdate + "'  and t.TextCriteria='subje' ";
                    if (ddldept.SelectedItem.Text == "English Literature" || ddldept.SelectedItem.Text == "English" || ddldept.SelectedItem.Text == "Tamil Literature")
                    {
                        com1 = "select  a.app_no,acual_marks from applyn a,Stud_prev_details sd,perv_marks_history ph where  a.app_no =sd.app_no and sd.course_entno =ph.course_entno and a.batch_year ='" + txtbatch.Text + "'  and a.college_code ='" + college_code + "' and a.degree_code ='" + ddldept.SelectedValue + "' and current_semester =1 and isconfirm ='1'  and (selection_status='0' or selection_status is null) and  (admission_status='0' or admission_status is null )  and a.date_applied between '" + fromdate + "'  and '" + tomdate + "'  ";
                    }
                    else
                    {
                        com1 = "select  a.app_no from applyn a,Stud_prev_details sd,perv_marks_history ph where  a.app_no =sd.app_no and sd.course_entno =ph.course_entno and a.batch_year ='" + txtbatch.Text + "'  and a.college_code ='" + college_code + "' and a.degree_code ='" + ddldept.SelectedValue + "' and current_semester =1 and isconfirm ='1'  and (selection_status='0' or selection_status is null) and  (admission_status='0' or admission_status is null )  and a.date_applied between '" + fromdate + "'  and '" + tomdate + "'  ";
                    }
                    //if (spsearch == 1)
                    //{
                    if (TextBox4.Text != "")
                    {
                        com = com + "and a.stud_name like'%" + TextBox4.Text + "%'";//modified
                        com1 = com1 + "and a.stud_name like'%" + TextBox4.Text + "%'";
                    }
                    if (TextBox5.Text != "")
                    {
                        com = com + "and a.Student_Mobile='" + TextBox5.Text + "'";
                        com1 = com1 + "and a.Student_Mobile='" + TextBox5.Text + "'";
                    }
                    if (TextBox6.Text != "")
                    {
                        com = com + "and a.app_formno='" + TextBox6.Text + "'";
                        com1 = com1 + "and a.app_formno='" + TextBox6.Text + "'";
                    }
                    //}
                    string adminlang = "";
                    string adm3 = "select * from admitcolumnset where textcriteria = 'subjel' and setcolumn='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    ds1.Clear();
                    ds1 = dt.select_method_wo_parameter(adm3, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                        {
                            if (adminlang == "")
                            {
                                adminlang = "" + Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                            }
                            else
                            {
                                adminlang = adminlang + "'" + "," + "'" + Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                            }
                        }
                    }
                    if (adminlang.Trim() == "")
                    {
                        com = com + "  and psubjectno not in(sd.Part1Language,sd.Part2Language)";
                    }
                    else
                    {
                        com = com + " and (sd.Part1Language in('" + adminlang + "') or sd.Part2Language in ('" + adminlang + "'))";
                        com1 = com1 + " and ( sd.Part1Language in('" + adminlang + "') or sd.Part2Language in ('" + adminlang + "') )";
                    }
                    string admin = "";
                    // string adm = "select * from admitcolumnset where textcriteria = 'relig' and user_code='" + user_code + "'";
                    string adm = "select column_name from admitcolumnset where (textcriteria ='community' or textcriteria ='relig') and setcolumn ='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    adm = adm + " select * from admitcolumnset where textcriteria = 'subjec' and setcolumn='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    adm = adm + " select * from admitcolumnset where textcriteria = 'subjea' and setcolumn='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                    ds1 = dt.select_method_wo_parameter(adm, "text");
                    if (ds1.Tables[0].Rows.Count > 0)
                    {
                        for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                        {
                            if (admin == "")
                            {
                                admin = ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                            else
                            {
                                admin = admin + "," + ds1.Tables[0].Rows[w]["column_name"].ToString();
                            }
                        }
                        if (admin.Trim() != "")
                        {
                            string TextValuenew = d2.GetFunction("select TextCode  from TextValTable where TextCriteria ='comm' and TextCriteria2 ='comm1' and TextVal ='Others'");
                            if (TextValuenew.Trim() != "" && TextValuenew.Trim() != "0")
                            {
                                admin = admin + "," + TextValuenew;
                            }
                        }
                        if (orderflage == true)
                        {
                            com = com + "and ( a.religion in (" + textcode + ") or a.community in (" + textcode + "))";
                            com1 = com1 + "and ( a.religion in (" + textcode + ") or a.community in (" + textcode + "))";
                        }
                        else
                        {
                            string region = rs.GetSelectedItemsValueAsString(cbl_religion);
                            if (region.Trim() == "")
                            {
                                com = com + "and ( a.religion in (" + admin + ") or a.community in (" + admin + "))";
                                com1 = com1 + "and ( a.religion in (" + admin + ") or a.community in (" + admin + "))";
                            }
                            else
                            {
                                com = com + "and ( a.religion in ('" + region + "') and a.community in (" + admin + "))";
                                com1 = com1 + "and ( a.religion in ('" + region + "') and a.community in (" + admin + "))";
                            }
                        }
                        if (cb_voc.Checked == true)
                            com += " and isnull(sd.Vocational_stream,0)='1'";
                        string board = rs.GetSelectedItemsValueAsString(cbl_BoardUniv);
                        string medium = rs.GetSelectedItemsValueAsString(cbl_comm);
                        string attempts = rs.GetSelectedItemsValueAsString(cblAttempt);
                        if (medium.Trim() != "")
                            com += " and sd.medium in('" + medium + "')";
                        if (attempts.Trim() != "")
                            com += " and noofattempt in('" + attempts + "')";
                        if (board.Trim() != "")
                            com += " and sd.Course_code in('" + board + "')";
                        int dummycount = 0;
                        string admin1 = "";
                        if (ds1.Tables[1].Rows.Count > 0)
                        {
                            for (int w = 0; w < ds1.Tables[1].Rows.Count; w++)
                            {
                                if (admin1 == "")
                                {
                                    dummycount++;
                                    admin1 = Convert.ToString(ds1.Tables[1].Rows[w]["column_name"]);
                                }
                                else
                                {
                                    dummycount++;
                                    admin1 = admin1 + "," + Convert.ToString(ds1.Tables[1].Rows[w]["column_name"]);
                                }
                            }
                        }
                        string admin2 = "";
                        if (ds1.Tables[2].Rows.Count > 0)
                        {
                            for (int w = 0; w < ds1.Tables[2].Rows.Count; w++)
                            {
                                if (admin2 == "")
                                {
                                    admin2 = Convert.ToString(ds1.Tables[2].Rows[w]["column_name"]);
                                }
                                else
                                {
                                    admin2 = admin2 + "," + Convert.ToString(ds1.Tables[2].Rows[w]["column_name"]);
                                }
                            }
                        }
                        if (adminlang.Trim() != "")
                        {
                            if (ddldept.SelectedItem.Text.ToLower() == "tamil literature")
                            {
                                com = com + " and (Part1Language=psubjectno) order by acual_marks desc";
                                com1 = com1 + " and (Part1Language=psubjectno) order by acual_marks desc";
                            }
                            else if (ddldept.SelectedItem.Text.ToLower() == "english literature" || ddldept.SelectedItem.Text.ToLower() == "english")
                            {
                                com = com + " and (Part2Language=psubjectno) order by acual_marks desc";
                                com1 = com1 + " and (Part2Language=psubjectno) order by acual_marks desc";
                            }
                        }
                        ds = dt.select_method_wo_parameter(com, "text");
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            DataTable firstTable = ds.Tables[0];
                            DataView view = new DataView(firstTable);
                            DataTable distinctValues = view.ToTable(true, "app_no");
                            ddummy.Clear();
                            ddummy.Tables.Add(distinctValues.Copy());
                            DataSet gradeset = new DataSet();
                            string gradequery = "select Frange,Trange,Mark_Grade  from Grade_Master where College_Code =" + college_code + " and batch_year =" + txtbatch.Text + "";
                            gradequery += "  select distinct t.TextCode ,TextVal,TextCriteria2 from applyn a, Stud_prev_details s,perv_marks_history p,TextValTable t where a.app_no =s.app_no and s.course_entno =p.course_entno and p.psubjectno=t.TextCode and a.degree_code in ('" + ddldept.SelectedValue + "') and a.college_code='" + college_code + "' and batch_year ='" + txtbatch.Text + "' and TextCriteria2 ='subje1' and  TextVal<>'---Select---' and textval like 'MATHEMATICS%' order by TextVal asc";//barath 16.05.17
                            gradeset = dt.select_method_wo_parameter(gradequery, "Text");
                            DataTable dnew;
                            // ddummy = dt.select_method_wo_parameter(com1, "Text");
                            if (adminlang == "")
                            {
                                DataView dvcheck = new DataView();
                                DataTable data = new DataTable();
                                DataView dummyview;
                                if (ddummy.Tables[0].Rows.Count > 0)
                                {
                                    for (int du = 0; du < ddummy.Tables[0].Rows.Count; du++)
                                    {
                                        int total = 0;
                                        int maxtotal = 0;
                                        string app_no = Convert.ToString(ddummy.Tables[0].Rows[du]["app_no"]);
                                        ds.Tables[0].DefaultView.RowFilter = "app_no='" + app_no + "'";
                                        dvcheck = ds.Tables[0].DefaultView;
                                        if (dvcheck.Count > 0)
                                        {
                                            if (admin1.Trim() != "")
                                            {
                                                #region admin1
                                                data = dvcheck.ToTable();
                                                dummyview = new DataView(data);
                                                dummyview.RowFilter = "psubjectno in (" + admin1 + ")";
                                                if (dummyview.Count == dummycount)
                                                {
                                                    if (admin2.Trim() != "")
                                                    {
                                                        data = dvcheck.ToTable();
                                                        dummyview = new DataView(data);
                                                        dummyview.RowFilter = "psubjectno in (" + admin2 + ")";
                                                        if (dummyview.Count > 0)
                                                        {
                                                            if (ddldept.SelectedItem.Text.ToUpper() == "MATHEMATICS")//barath 16.05.17
                                                            {
                                                                #region MATHEMATICS
                                                                string mathematics = "";
                                                                if (gradeset.Tables[1].Rows.Count > 0)
                                                                    mathematics = Convert.ToString(gradeset.Tables[1].Rows[0]["TextCode"]);
                                                                data = dvcheck.ToTable();
                                                                dummyview = new DataView(data);
                                                                dummyview.RowFilter = "psubjectno in (" + mathematics + ")";
                                                                if (dummyview.Count > 0)
                                                                {
                                                                    dnew = dummyview.ToTable();
                                                                    if (Convert.ToString(dummyview[0]["isgrade"]) == "False")
                                                                    {
                                                                        //  total = Convert.ToInt32(dvcheck[cn]["acual_marks"].ToString());
                                                                        total = Convert.ToInt32(dnew.Compute("Sum(acual_marks)", ""));
                                                                        maxtotal = Convert.ToInt32(dnew.Compute("Sum(max_marks)", ""));
                                                                    }
                                                                    else
                                                                    {
                                                                        if (gradeset.Tables[0].Rows.Count > 0)
                                                                        {
                                                                            DataView gradview = new DataView();
                                                                            if (dnew.Rows.Count > 0)
                                                                            {
                                                                                for (int jk = 0; jk < dnew.Rows.Count; jk++)
                                                                                {
                                                                                    string grade = Convert.ToString(dnew.Rows[jk]["grade"]);
                                                                                    string max = Convert.ToString(dnew.Rows[jk]["max_marks"]);
                                                                                    gradeset.Tables[0].DefaultView.RowFilter = "Mark_Grade='" + grade + "'";
                                                                                    gradview = gradeset.Tables[0].DefaultView;
                                                                                    if (gradview.Count > 0)
                                                                                    {
                                                                                        string fromrange = Convert.ToString(gradview[0]["Frange"]);
                                                                                        string torange = Convert.ToString(gradview[0]["Trange"]);
                                                                                        if (fromrange.Trim() != "" && torange.Trim() != "")
                                                                                        {
                                                                                            double midpoint = (Convert.ToDouble(fromrange) + Convert.ToDouble(torange)) / Convert.ToDouble(2);
                                                                                            total = total + Convert.ToInt32(midpoint);
                                                                                            maxtotal = maxtotal + Convert.ToInt32(max);
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            total = total + 0;
                                                                                            maxtotal = maxtotal + 0;
                                                                                        }
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        total = total + 0;
                                                                                        maxtotal = maxtotal + 0;
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            total = 0;
                                                                            maxtotal = 0;
                                                                        }
                                                                    }
                                                                }
                                                                #endregion
                                                            }
                                                            else
                                                            {
                                                                dnew = dvcheck.ToTable();
                                                                if (Convert.ToString(dummyview[0]["isgrade"]) == "False")
                                                                {
                                                                    //  total = Convert.ToInt32(dvcheck[cn]["acual_marks"].ToString());
                                                                    total = Convert.ToInt32(dnew.Compute("Sum(acual_marks)", ""));
                                                                    maxtotal = Convert.ToInt32(dnew.Compute("Sum(max_marks)", ""));
                                                                }
                                                                else
                                                                {
                                                                    if (gradeset.Tables[0].Rows.Count > 0)
                                                                    {
                                                                        DataView gradview = new DataView();
                                                                        if (dnew.Rows.Count > 0)
                                                                        {
                                                                            for (int jk = 0; jk < dnew.Rows.Count; jk++)
                                                                            {
                                                                                string grade = Convert.ToString(dnew.Rows[jk]["grade"]);
                                                                                string max = Convert.ToString(dnew.Rows[jk]["max_marks"]);
                                                                                gradeset.Tables[0].DefaultView.RowFilter = "Mark_Grade='" + grade + "'";
                                                                                gradview = gradeset.Tables[0].DefaultView;
                                                                                if (gradview.Count > 0)
                                                                                {
                                                                                    string fromrange = Convert.ToString(gradview[0]["Frange"]);
                                                                                    string torange = Convert.ToString(gradview[0]["Trange"]);
                                                                                    if (fromrange.Trim() != "" && torange.Trim() != "")
                                                                                    {
                                                                                        double midpoint = (Convert.ToDouble(fromrange) + Convert.ToDouble(torange)) / Convert.ToDouble(2);
                                                                                        total = total + Convert.ToInt32(midpoint);
                                                                                        maxtotal = maxtotal + Convert.ToInt32(max);
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        total = total + 0;
                                                                                        maxtotal = maxtotal + 0;
                                                                                    }
                                                                                }
                                                                                else
                                                                                {
                                                                                    total = total + 0;
                                                                                    maxtotal = maxtotal + 0;
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        total = 0;
                                                                        maxtotal = 0;
                                                                    }
                                                                }
                                                            }
                                                            double mark = Convert.ToDouble(total) / Convert.ToDouble(maxtotal) * 100;
                                                            if (mark != 0 && Convert.ToString(mark) != "NaN")
                                                            {
                                                                dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(mark, 2)));
                                                            }
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dnew = dvcheck.ToTable();
                                                        if (Convert.ToString(dummyview[0]["isgrade"]) == "False")
                                                        {
                                                            //  total = Convert.ToInt32(dvcheck[cn]["acual_marks"].ToString());
                                                            total = Convert.ToInt32(dnew.Compute("Sum(acual_marks)", ""));
                                                            maxtotal = Convert.ToInt32(dnew.Compute("Sum(max_marks)", ""));
                                                        }
                                                        else
                                                        {
                                                            if (gradeset.Tables[0].Rows.Count > 0)
                                                            {
                                                                DataView gradview = new DataView();
                                                                if (dnew.Rows.Count > 0)
                                                                {
                                                                    for (int jk = 0; jk < dnew.Rows.Count; jk++)
                                                                    {
                                                                        string grade = Convert.ToString(dnew.Rows[jk]["grade"]);
                                                                        string max = Convert.ToString(dnew.Rows[jk]["max_marks"]);
                                                                        gradeset.Tables[0].DefaultView.RowFilter = "Mark_Grade='" + grade + "'";
                                                                        gradview = gradeset.Tables[0].DefaultView;
                                                                        if (gradview.Count > 0)
                                                                        {
                                                                            string fromrange = Convert.ToString(gradview[0]["Frange"]);
                                                                            string torange = Convert.ToString(gradview[0]["Trange"]);
                                                                            if (fromrange.Trim() != "" && torange.Trim() != "")
                                                                            {
                                                                                double midpoint = (Convert.ToDouble(fromrange) + Convert.ToDouble(torange)) / Convert.ToDouble(2);
                                                                                total = total + Convert.ToInt32(midpoint);
                                                                                maxtotal = maxtotal + Convert.ToInt32(max);
                                                                            }
                                                                            else
                                                                            {
                                                                                total = total + 0;
                                                                                maxtotal = maxtotal + 0;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            total = total + 0;
                                                                            maxtotal = maxtotal + 0;
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            else
                                                            {
                                                                total = 0;
                                                                maxtotal = 0;
                                                            }
                                                        }
                                                        double mark1 = Convert.ToDouble(total) / Convert.ToDouble(maxtotal) * 100;
                                                        if (mark1 != 0 && Convert.ToString(mark1) != "NaN")
                                                        {
                                                            dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(mark1, 2)));
                                                        }
                                                    }
                                                }

                                                #endregion
                                            }
                                            else if (admin2.Trim() != "")
                                            {
                                                #region admin2
                                                data = dvcheck.ToTable();
                                                dummyview = new DataView(data);
                                                dummyview.RowFilter = "psubjectno in (" + admin2 + ")";
                                                if (dummyview.Count > 0)
                                                {
                                                    dnew = dvcheck.ToTable();
                                                    if (Convert.ToString(dummyview[0]["isgrade"]) == "False")
                                                    {
                                                        //  total = Convert.ToInt32(dvcheck[cn]["acual_marks"].ToString());
                                                        total = Convert.ToInt32(dnew.Compute("Sum(acual_marks)", ""));
                                                        maxtotal = Convert.ToInt32(dnew.Compute("Sum(max_marks)", ""));
                                                    }
                                                    else
                                                    {
                                                        if (gradeset.Tables[0].Rows.Count > 0)
                                                        {
                                                            DataView gradview = new DataView();
                                                            if (dnew.Rows.Count > 0)
                                                            {
                                                                for (int jk = 0; jk < dnew.Rows.Count; jk++)
                                                                {
                                                                    string grade = Convert.ToString(dnew.Rows[jk]["grade"]);
                                                                    string max = Convert.ToString(dnew.Rows[jk]["max_marks"]);
                                                                    gradeset.Tables[0].DefaultView.RowFilter = "Mark_Grade='" + grade + "'";
                                                                    gradview = gradeset.Tables[0].DefaultView;
                                                                    if (gradview.Count > 0)
                                                                    {
                                                                        string fromrange = Convert.ToString(gradview[0]["Frange"]);
                                                                        string torange = Convert.ToString(gradview[0]["Trange"]);
                                                                        if (fromrange.Trim() != "" && torange.Trim() != "")
                                                                        {
                                                                            double midpoint = (Convert.ToDouble(fromrange) + Convert.ToDouble(torange)) / Convert.ToDouble(2);
                                                                            total = total + Convert.ToInt32(midpoint);
                                                                            maxtotal = maxtotal + Convert.ToInt32(max);
                                                                        }
                                                                        else
                                                                        {
                                                                            total = total + 0;
                                                                            maxtotal = maxtotal + 0;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        total = total + 0;
                                                                        maxtotal = maxtotal + 0;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            total = 0;
                                                            maxtotal = 0;
                                                        }
                                                    }
                                                    double mark = Convert.ToDouble(total) / Convert.ToDouble(maxtotal) * 100;
                                                    if (mark != 0 && Convert.ToString(mark) != "NaN")
                                                    {
                                                        dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(mark, 2)));
                                                    }
                                                }
                                                #endregion
                                            }
                                            else
                                            {
                                                if (ddldept.SelectedItem.Text.ToUpper() == "MATHEMATICS")//barath 16.05.17
                                                {
                                                    #region MATHEMATICS
                                                    string mathematics = "";
                                                    if (gradeset.Tables[1].Rows.Count > 0)
                                                        mathematics = Convert.ToString(gradeset.Tables[1].Rows[0]["TextCode"]);
                                                    data = dvcheck.ToTable();
                                                    dummyview = new DataView(data);
                                                    dummyview.RowFilter = "psubjectno in (" + mathematics + ")";
                                                    if (dummyview.Count > 0)
                                                    {
                                                        dnew = dummyview.ToTable();
                                                        if (Convert.ToString(dvcheck[0]["isgrade"]) == "False")
                                                        {
                                                            //  total = Convert.ToInt32(dvcheck[cn]["acual_marks"].ToString());
                                                            total = Convert.ToInt32(dnew.Compute("Sum(acual_marks)", ""));
                                                            maxtotal = Convert.ToInt32(dnew.Compute("Sum(max_marks)", ""));
                                                        }
                                                        else
                                                        {
                                                            if (gradeset.Tables[0].Rows.Count > 0)
                                                            {
                                                                DataView gradview = new DataView();
                                                                if (dnew.Rows.Count > 0)
                                                                {
                                                                    for (int jk = 0; jk < dnew.Rows.Count; jk++)
                                                                    {
                                                                        string grade = Convert.ToString(dnew.Rows[jk]["grade"]);
                                                                        string max = Convert.ToString(dnew.Rows[jk]["max_marks"]);
                                                                        gradeset.Tables[0].DefaultView.RowFilter = "Mark_Grade='" + grade + "'";
                                                                        gradview = gradeset.Tables[0].DefaultView;
                                                                        if (gradview.Count > 0)
                                                                        {
                                                                            string fromrange = Convert.ToString(gradview[0]["Frange"]);
                                                                            string torange = Convert.ToString(gradview[0]["Trange"]);
                                                                            if (fromrange.Trim() != "" && torange.Trim() != "")
                                                                            {
                                                                                double midpoint = (Convert.ToDouble(fromrange) + Convert.ToDouble(torange)) / Convert.ToDouble(2);
                                                                                total = total + Convert.ToInt32(midpoint);
                                                                                maxtotal = maxtotal + Convert.ToInt32(max);
                                                                            }
                                                                            else
                                                                            {
                                                                                total = total + 0;
                                                                                maxtotal = maxtotal + 0;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            total = total + 0;
                                                                            maxtotal = maxtotal + 0;
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                            else
                                                            {
                                                                total = 0;
                                                                maxtotal = 0;
                                                            }
                                                        }
                                                    }
                                                    #endregion
                                                }
                                                else
                                                {
                                                    #region Not settings
                                                    dnew = dvcheck.ToTable();
                                                    if (Convert.ToString(dvcheck[0]["isgrade"]) == "False")
                                                    {
                                                        //  total = Convert.ToInt32(dvcheck[cn]["acual_marks"].ToString());
                                                        total = Convert.ToInt32(dnew.Compute("Sum(acual_marks)", ""));
                                                        maxtotal = Convert.ToInt32(dnew.Compute("Sum(max_marks)", ""));
                                                    }
                                                    else
                                                    {
                                                        if (gradeset.Tables[0].Rows.Count > 0)
                                                        {
                                                            DataView gradview = new DataView();
                                                            if (dnew.Rows.Count > 0)
                                                            {
                                                                for (int jk = 0; jk < dnew.Rows.Count; jk++)
                                                                {
                                                                    string grade = Convert.ToString(dnew.Rows[jk]["grade"]);
                                                                    string max = Convert.ToString(dnew.Rows[jk]["max_marks"]);
                                                                    gradeset.Tables[0].DefaultView.RowFilter = "Mark_Grade='" + grade + "'";
                                                                    gradview = gradeset.Tables[0].DefaultView;
                                                                    if (gradview.Count > 0)
                                                                    {
                                                                        string fromrange = Convert.ToString(gradview[0]["Frange"]);
                                                                        string torange = Convert.ToString(gradview[0]["Trange"]);
                                                                        if (fromrange.Trim() != "" && torange.Trim() != "")
                                                                        {
                                                                            double midpoint = (Convert.ToDouble(fromrange) + Convert.ToDouble(torange)) / Convert.ToDouble(2);
                                                                            total = total + Convert.ToInt32(midpoint);
                                                                            maxtotal = maxtotal + Convert.ToInt32(max);
                                                                        }
                                                                        else
                                                                        {
                                                                            total = total + 0;
                                                                            maxtotal = maxtotal + 0;
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        total = total + 0;
                                                                        maxtotal = maxtotal + 0;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            total = 0;
                                                            maxtotal = 0;
                                                        }
                                                    }
                                                    #endregion
                                                }
                                                double mark2 = Convert.ToDouble(total) / Convert.ToDouble(maxtotal) * 100;
                                                if (mark2 != 0 && Convert.ToString(mark2) != "NaN")
                                                {
                                                    dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(mark2, 2)));
                                                }
                                            }
                                        }
                                    }
                                    dicsubcol = dicsubcol.OrderByDescending(x => x.Value).ToDictionary(x => x.Key, x => x.Value);
                                }
                            }
                            string colm = "";
                            string priority = " select * from admitcolumnset where textcriteria='column' and college_code='" + college_code + "' order by CONVERT(int, priority )";
                            ds1 = dt.select_method_wo_parameter(priority, "text");
                            if (ds1.Tables[0].Rows.Count > 0)
                            {
                                for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                                {
                                    colm = ds1.Tables[0].Rows[i]["column_name"].ToString();
                                    FpSpread3.Sheets[0].ColumnCount++;
                                    FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].Text = ds1.Tables[0].Rows[i]["setcolumn"].ToString();
                                    // FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
                                    FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
                                    FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].Font.Bold = true;
                                    FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
                                    FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
                                    FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Locked = true;
                                    FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].CellType = txt;

                                    if (colm.ToLower() == "app_formno")
                                    {
                                        FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Width = 150;
                                    }
                                    if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "User Name")
                                    {
                                        FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Visible = false;
                                    }
                                    if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "Category")
                                    {
                                        FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Visible = false;
                                    }
                                    if (ddltype.SelectedItem.Text.ToString().ToUpper() != "MCA")
                                    {
                                        if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "TANCET Mark")
                                        {
                                            FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Visible = false;
                                        }
                                    }
                                    if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "State")
                                    {
                                        FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Visible = false;
                                    }
                                    if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "Mother Tongue")
                                    {
                                        FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Visible = false;
                                    }
                                    if (ds1.Tables[0].Rows[i]["setcolumn"].ToString() == "Subject Percentage")
                                    {
                                        FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Visible = false;
                                    }
                                    if (FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].Text == "DOB")
                                    {
                                        FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Width = 90;
                                    }
                                    if (FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].Text == "Student Name")
                                    {
                                        FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Width = 200;
                                    }
                                    if (FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].Text == "Address")
                                    {
                                        FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Width = 200;
                                    }
                                    if (FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].Text == "City")
                                    {
                                        FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Width = 100;
                                    }
                                    if (FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].Text == "Email_Id")
                                    {
                                        FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Width = 200;
                                    }
                                    if (FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].Text == "Mobile No")
                                    {
                                        FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Width = 100;
                                        FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].CellType = txt;
                                    }
                                    if (FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].Text == "Subject")
                                    {
                                        FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Width = 180;
                                        FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].Visible = false;
                                        FpSpread3.Sheets[0].Columns[FpSpread3.Sheets[0].ColumnCount - 1].CellType = txt;
                                    }
                                }
                                string vlau = Convert.ToString(txttop.Text);
                                if (vlau.Trim() == "")
                                {
                                    vlau = Convert.ToString(dicsubcol.Count);
                                }
                                Hashtable Textvalhashtable = new Hashtable();
                                Textvalhashtable = (Hashtable)ViewState["Texthash"];
                                DataView dv = new DataView();
                                addsno.Clear();
                                lbltotalcount.Text = " Applied" + " " + ": " + dicsubcol.Count;
                                if (ddummy.Tables[0].Rows.Count > 0)
                                {
                                    if (adminlang == "")
                                    {
                                        if (dicsubcol.Count > 0)
                                        {
                                            FpSpread3.Sheets[0].RowCount = 0;
                                            int sno_Value = 0;
                                            foreach (var kvp in dicsubcol)
                                            {
                                                if (sno_Value < Convert.ToInt32(vlau))
                                                {
                                                    string app_no = kvp.Key.ToString();
                                                    string percentage = kvp.Value.ToString();
                                                    ds.Tables[0].DefaultView.RowFilter = "app_no='" + app_no + "'";
                                                    dv = ds.Tables[0].DefaultView;
                                                    if (dv.Count > 0)
                                                    {
                                                        sno_Value++;
                                                        FpSpread3.Sheets[0].RowCount++;
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(sno_Value);
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(dv[0]["community"]);

                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 0].Note = Convert.ToString(dv[0]["seattype"]);
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 0].Font.Name = "Times New Roman";
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 1].CellType = chkcel1;
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 1].Value = 0;
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 1].Font.Name = "Times New Roman";
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(dv[0]["app_no"]);
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(dv[0]["app_formno"]);
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 2].Note = Convert.ToString(dv[0]["batch_year"]);
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 2].Font.Name = "Times New Roman";
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 3].CellType = but;
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 3].Font.Name = "Times New Roman";
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                                                        int col = 4;
                                                        for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                                                        {
                                                            col++;
                                                            string colmname = Convert.ToString(ds1.Tables[0].Rows[i]["column_name"]);
                                                            if (colmname.Trim() != "SubjectPercen" && colmname.Trim() != "Subject" && colmname.Trim() != "usercode" && colmname.Trim() != "criteria_Code")
                                                            {
                                                                if (colmname.Trim() != "criteria_Code" && colmname.Trim() != "parent_statep" && colmname.Trim() != "mother_tongue" && colmname.Trim() != "parent_occu" && colmname.Trim() != "religion" && colmname.Trim() != "citizen" && colmname.Trim() != "community" && colmname.Trim() != "caste" && colmname.Trim() != "DistinctSport" && colmname.Trim() != "co_curricular" && colmname.Trim() != "medium" && colmname.Trim() != "university_code")
                                                                {
                                                                    if (colmname.Trim() != "TamilOrginFromAndaman" && colmname.Trim() != "IsExService" && colmname.Trim() != "isdisable" && colmname.Trim() != "first_graduate" && colmname.Trim() != "CampusReq" && colmname.Trim() != "ncccadet" && colmname.Trim() != "Vocational_stream")
                                                                    {
                                                                        if (colmname.Trim() != "course_code")
                                                                        {
                                                                            if (colmname.Trim() != "TotalPercentage")
                                                                            {
                                                                                if (colmname.Trim() != "sex")
                                                                                {
                                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(dv[0][colmname]);
                                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                                }
                                                                                else
                                                                                {
                                                                                    string gendervalue = Convert.ToString(dv[0][colmname]);
                                                                                    if (gendervalue == "0")
                                                                                    {
                                                                                        gendervalue = "Male";
                                                                                    }
                                                                                    else if (gendervalue == "1")
                                                                                    {
                                                                                        gendervalue = "Female";
                                                                                    }
                                                                                    else if (gendervalue == "2")
                                                                                    {
                                                                                        gendervalue = "Transgender";
                                                                                    }
                                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(gendervalue);
                                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(percentage);
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Center;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                                                                            {
                                                                                string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                            }
                                                                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                                                            {
                                                                                string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                                                string dept = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0]["branch_code"]) + "' and (TextCriteria='branc') and college_code ='" + Session["collegecode"] + "'");
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Text = usernem + " " + dept;
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                            }
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        string test_Value = "";
                                                                        if (Convert.ToString(dv[0][colmname]) == "False")
                                                                        {
                                                                            test_Value = "No";
                                                                        }
                                                                        else
                                                                        {
                                                                            test_Value = "Yes";
                                                                        }
                                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(test_Value);
                                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    //string textval = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "'  and college_code ='" + Session["collegecode"] + "'");
                                                                    string textval = Convert.ToString(Textvalhashtable[Convert.ToString(dv[0][colmname])]);
                                                                    if (textval == "0")
                                                                    {
                                                                        textval = "";
                                                                    }
                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Text = textval;
                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    break;
                                                }
                                            }
                                            FpSpread3.Sheets[0].PageSize = FpSpread3.Sheets[0].RowCount;
                                            FpSpread3.Visible = true;
                                            lbltotalcount.Visible = true;
                                            ckbx.Visible = true;
                                            if (spsearch == 1)
                                            {
                                                TabContainer1.ActiveTab = TabContainer1.Tabs[0];
                                                spsearch = 0;
                                                TextBox4.Text = "";
                                                TextBox5.Text = "";
                                            }
                                        }
                                        else
                                        {
                                            lblmg.Visible = true;
                                            lblmg.Text = "No Records Found";
                                            FpSpread3.Visible = false;
                                            btnapprove.Visible = false;
                                            Button2.Visible = false;
                                            Button3.Visible = false;
                                            Button9.Visible = false;
                                            // btnreject.Visible = false;
                                            lbltotalcount.Visible = false;
                                            lbltotalcount.Text = " Applied" + " " + ": " + "0";
                                            Label66.Visible = false;
                                            Label68.Visible = false;
                                            Label67.Visible = false;
                                            Label69.Visible = false;
                                            lbltotalfeepaid.Visible = false;
                                            lbltotalfeepaid_value.Visible = false;
                                            ckbx.Visible = false;
                                            btnconform.Visible = false;
                                            btnunpaid.Visible = false;
                                            btnChallan.Visible = false;
                                            btnadmitcard.Visible = false;
                                            btnadmitprint.Visible = false;
                                            btnleft.Visible = false;
                                        }
                                    }
                                    else
                                    {
                                        DataView dvcheck = new DataView();
                                        DataTable data = new DataTable();
                                        dicsubcol.Clear();
                                        if (ddummy.Tables[0].Rows.Count > 0)
                                        {
                                            for (int du = 0; du < ddummy.Tables[0].Rows.Count; du++)
                                            {
                                                string app_no = Convert.ToString(ddummy.Tables[0].Rows[du]["app_no"]);
                                                ds.Tables[0].DefaultView.RowFilter = "app_no='" + app_no + "' and psubjectno in('" + adminlang + "')";
                                                dvcheck = ds.Tables[0].DefaultView;
                                                if (dvcheck.Count > 0)
                                                {
                                                    if (Convert.ToString(dvcheck[0]["isgrade"]) == "False")
                                                    {
                                                        string acuualmark = Convert.ToString(dvcheck[0]["acual_marks"]);
                                                        string maxmark = Convert.ToString(dvcheck[0]["max_marks"]);
                                                        if (acuualmark.Trim() != "" && maxmark.Trim() != "")
                                                        {
                                                            double finalvalue = Convert.ToDouble(acuualmark) / Convert.ToDouble(maxmark) * Convert.ToDouble(100);
                                                            dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(finalvalue, 2)));
                                                        }
                                                    }
                                                    else
                                                    {
                                                        dnew = dvcheck.ToTable();
                                                        if (gradeset.Tables[0].Rows.Count > 0)
                                                        {
                                                            DataView gradview = new DataView();
                                                            if (dnew.Rows.Count > 0)
                                                            {
                                                                for (int jk = 0; jk < dnew.Rows.Count; jk++)
                                                                {
                                                                    string grade = Convert.ToString(dnew.Rows[jk]["grade"]);
                                                                    string max = Convert.ToString(dnew.Rows[jk]["max_marks"]);
                                                                    gradeset.Tables[0].DefaultView.RowFilter = "Mark_Grade='" + grade + "'";
                                                                    gradview = gradeset.Tables[0].DefaultView;
                                                                    if (gradview.Count > 0)
                                                                    {
                                                                        string fromrange = Convert.ToString(gradview[0]["Frange"]);
                                                                        string torange = Convert.ToString(gradview[0]["Trange"]);
                                                                        if (fromrange.Trim() != "" && torange.Trim() != "")
                                                                        {
                                                                            double midpoint = (Convert.ToDouble(fromrange) + Convert.ToDouble(torange)) / Convert.ToDouble(2);
                                                                            double finalvalue = Convert.ToDouble(midpoint) / Convert.ToDouble(max) * Convert.ToDouble(100);
                                                                            dicsubcol.Add(Convert.ToInt32(app_no), Convert.ToDouble(Math.Round(finalvalue, 2)));
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        dicsubcol = dicsubcol.OrderByDescending(x => x.Value).ToDictionary(x => x.Key, x => x.Value);
                                        lbltotalcount.Text = " Applied" + " " + ": " + ddummy.Tables[0].Rows.Count;
                                        FpSpread3.Sheets[0].RowCount = 0;
                                        int sno_Value = 0;
                                        if (dicsubcol.Count > 0)
                                        {
                                            foreach (var kvp in dicsubcol)
                                            {
                                                if (sno_Value < Convert.ToInt32(vlau))
                                                {
                                                    string app_no = kvp.Key.ToString();
                                                    string percentage = kvp.Value.ToString();
                                                    ds.Tables[0].DefaultView.RowFilter = "app_no='" + app_no + "'";
                                                    dv = ds.Tables[0].DefaultView;
                                                    if (dv.Count > 0)
                                                    {
                                                        sno_Value++;
                                                        FpSpread3.Sheets[0].RowCount++;
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(sno_Value);
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 0].Tag = Convert.ToString(dv[0]["community"]);
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 0].Note = Convert.ToString(dv[0]["seattype"]);
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 0].Font.Name = "Times New Roman";
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 1].CellType = chkcel1;
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 1].Value = 0;
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 1].Font.Name = "Times New Roman";
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 1].Font.Size = FontUnit.Medium;
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(dv[0]["app_no"]);
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 2].Tag = Convert.ToString(dv[0]["app_formno"]);
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 2].Note = Convert.ToString(dv[0]["batch_year"]);
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 2].Font.Name = "Times New Roman";
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 2].Font.Size = FontUnit.Medium;
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 3].CellType = but;
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 3].Font.Name = "Times New Roman";
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 3].Font.Size = FontUnit.Medium;
                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                                                        int col = 4;
                                                        for (int i = 0; i < ds1.Tables[0].Rows.Count; i++)
                                                        {
                                                            col++;
                                                            string colmname = Convert.ToString(ds1.Tables[0].Rows[i]["column_name"]);
                                                            if (colmname.Trim() != "SubjectPercen" && colmname.Trim() != "Subject" && colmname.Trim() != "usercode" && colmname.Trim() != "criteria_Code")
                                                            {
                                                                if (colmname.Trim() != "criteria_Code" && colmname.Trim() != "parent_statep" && colmname.Trim() != "mother_tongue" && colmname.Trim() != "parent_occu" && colmname.Trim() != "religion" && colmname.Trim() != "citizen" && colmname.Trim() != "community" && colmname.Trim() != "caste" && colmname.Trim() != "DistinctSport" && colmname.Trim() != "co_curricular" && colmname.Trim() != "medium" && colmname.Trim() != "university_code")
                                                                {
                                                                    if (colmname.Trim() != "TamilOrginFromAndaman" && colmname.Trim() != "IsExService" && colmname.Trim() != "isdisable" && colmname.Trim() != "first_graduate" && colmname.Trim() != "CampusReq" && colmname.Trim() != "ncccadet" && colmname.Trim() != "Vocational_stream")
                                                                    {
                                                                        if (colmname.Trim() != "course_code")
                                                                        {
                                                                            if (colmname.Trim() != "TotalPercentage")
                                                                            {
                                                                                if (colmname.Trim() != "sex")
                                                                                {
                                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(dv[0][colmname]);
                                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                                }
                                                                                else
                                                                                {
                                                                                    string gendervalue = Convert.ToString(dv[0][colmname]);
                                                                                    if (gendervalue == "0")
                                                                                    {
                                                                                        gendervalue = "Male";
                                                                                    }
                                                                                    else if (gendervalue == "1")
                                                                                    {
                                                                                        gendervalue = "Female";
                                                                                    }
                                                                                    else if (gendervalue == "2")
                                                                                    {
                                                                                        gendervalue = "Transgender";
                                                                                    }
                                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(gendervalue);
                                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                                                                {
                                                                                    colmname = "majorallied_percent";
                                                                                }
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(percentage);
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Center;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                                                                            {
                                                                                string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Text = usernem;
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                            }
                                                                            if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                                                            {
                                                                                string usernem = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "' and (TextCriteria='cours') and college_code ='" + Session["collegecode"] + "'");
                                                                                string dept = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0]["branch_code"]) + "' and (TextCriteria='branc') and college_code ='" + Session["collegecode"] + "'");
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Text = usernem + " " + dept;
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                                FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                            }
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        string test_Value = "";
                                                                        if (Convert.ToString(ds.Tables[0].Rows[0][colmname]) == "False")
                                                                        {
                                                                            test_Value = "No";
                                                                        }
                                                                        else
                                                                        {
                                                                            test_Value = "Yes";
                                                                        }
                                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Text = Convert.ToString(test_Value);
                                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                        FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    //string textval = dt.GetFunction("select TextVal  from TextValTable where TextCode='" + Convert.ToString(dv[0][colmname]) + "'  and college_code ='" + Session["collegecode"] + "'");
                                                                    //if (textval == "0")
                                                                    //{
                                                                    //    textval = "";
                                                                    //}
                                                                    string textval = Convert.ToString(Textvalhashtable[Convert.ToString(dv[0][colmname])]);
                                                                    if (textval == "0")
                                                                    {
                                                                        textval = "";
                                                                    }
                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Text = textval;
                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Name = "Times New Roman";
                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].Font.Size = FontUnit.Medium;
                                                                    FpSpread3.Sheets[0].Cells[FpSpread3.Sheets[0].RowCount - 1, col - 1].HorizontalAlign = HorizontalAlign.Left;
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    break;
                                                }
                                            }
                                            FpSpread3.Sheets[0].PageSize = FpSpread3.Sheets[0].RowCount;
                                            FpSpread3.Visible = true;
                                            lbltotalcount.Visible = true;
                                            ckbx.Visible = true;
                                            if (spsearch == 1)
                                            {
                                                TabContainer1.ActiveTab = TabContainer1.Tabs[0];
                                                spsearch = 0;
                                                TextBox4.Text = "";
                                                TextBox5.Text = "";
                                            }
                                        }
                                        else
                                        {
                                            lblmg.Visible = true;
                                            lblmg.Text = "No Records Found";
                                            FpSpread3.Visible = false;
                                            btnapprove.Visible = false;
                                            Button2.Visible = false;
                                            Button3.Visible = false;
                                            Button9.Visible = false;
                                            // btnreject.Visible = false;
                                            lbltotalcount.Visible = false;
                                            lbltotalcount.Text = " Applied" + " " + ": " + "0";
                                            Label66.Visible = false;
                                            Label68.Visible = false;
                                            Label67.Visible = false;
                                            Label69.Visible = false;
                                            lbltotalfeepaid.Visible = false;
                                            lbltotalfeepaid_value.Visible = false;
                                            ckbx.Visible = false;
                                            btnconform.Visible = false;
                                            btnunpaid.Visible = false;
                                            btnChallan.Visible = false;
                                            btnadmitcard.Visible = false;
                                            btnadmitprint.Visible = false;
                                            btnleft.Visible = false;
                                        }
                                    }
                                }
                                else
                                {
                                    if (spsearch == 1)
                                    {
                                        spread2();
                                    }
                                    else
                                    {
                                        lblmg.Visible = true;
                                        lblmg.Text = "No Records Found";
                                        FpSpread3.Visible = false;
                                        btnapprove.Visible = false;
                                        Button2.Visible = false;
                                        Button3.Visible = false;
                                        Button9.Visible = false;
                                        // btnreject.Visible = false;
                                        lbltotalcount.Visible = false;
                                        lbltotalcount.Text = " Applied" + " " + ": " + "0";
                                        Label66.Visible = false;
                                        Label68.Visible = false;
                                        Label67.Visible = false;
                                        Label69.Visible = false;
                                        lbltotalfeepaid.Visible = false;
                                        lbltotalfeepaid_value.Visible = false;
                                        ckbx.Visible = false;
                                        btnconform.Visible = false;
                                        btnunpaid.Visible = false;
                                        btnChallan.Visible = false;
                                        btnadmitcard.Visible = false;
                                        btnadmitprint.Visible = false;
                                        btnleft.Visible = false;
                                    }
                                }
                            }
                            else
                            {
                                lblmg.Visible = true;
                                lblmg.Text = "Please Select Column Headers";
                                FpSpread3.Visible = false;
                                btnapprove.Visible = false;
                                Button2.Visible = false;
                                Button3.Visible = false;
                                Button9.Visible = false;
                                // btnreject.Visible = false;
                                lbltotalcount.Visible = false;
                                lbltotalcount.Text = " Applied" + " " + ": " + "0";
                                Label66.Visible = false;
                                Label68.Visible = false;
                                Label67.Visible = false;
                                Label69.Visible = false;
                                lbltotalfeepaid.Visible = false;
                                lbltotalfeepaid_value.Visible = false;
                                ckbx.Visible = false;
                                btnconform.Visible = false;
                                btnunpaid.Visible = false;
                                btnChallan.Visible = false;
                                btnadmitcard.Visible = false;
                                btnadmitprint.Visible = false;
                                btnleft.Visible = false;
                            }
                        }
                        else
                        {
                            lblmg.Visible = true;
                            lblmg.Text = "No Records Found";
                            FpSpread3.Visible = false;
                            btnapprove.Visible = false;
                            Button2.Visible = false;
                            Button3.Visible = false;
                            Button9.Visible = false;
                            // btnreject.Visible = false;
                            lbltotalcount.Visible = false;
                            lbltotalcount.Text = " Applied" + " " + ": " + "0";
                            Label66.Visible = false;
                            Label68.Visible = false;
                            Label67.Visible = false;
                            Label69.Visible = false;
                            lbltotalfeepaid.Visible = false;
                            lbltotalfeepaid_value.Visible = false;
                            ckbx.Visible = false;
                            btnconform.Visible = false;
                            btnunpaid.Visible = false;
                            btnChallan.Visible = false;
                            btnadmitcard.Visible = false;
                            btnadmitprint.Visible = false;
                            btnleft.Visible = false;
                        }
                    }
                    else
                    {
                        lblmg.Visible = true;
                        lblmg.Text = "Please Select  Religion";
                        FpSpread3.Visible = false;
                        btnapprove.Visible = false;
                        Button2.Visible = false;
                        Button3.Visible = false;
                        Button9.Visible = false;
                        Label66.Visible = false;
                        Label68.Visible = false;
                        Label67.Visible = false;
                        Label69.Visible = false;
                        lbltotalfeepaid.Visible = false;
                        lbltotalfeepaid_value.Visible = false;
                        lbltotalcount.Visible = false;
                        ckbx.Visible = false;
                        btnconform.Visible = false;
                        btnunpaid.Visible = false;
                        btnChallan.Visible = false;
                        btnadmitcard.Visible = false;
                        btnadmitprint.Visible = false;
                        btnleft.Visible = false;
                        //  btnreject.Visible = false;
                    }
                }
                else
                {
                    lblmg.Visible = true;
                    lblmg.Text = "Please Select All Values";
                    FpSpread3.Visible = false;
                    btnapprove.Visible = false;
                    Button2.Visible = false;
                    Button3.Visible = false;
                    Button9.Visible = false;
                    Label66.Visible = false;
                    Label68.Visible = false;
                    Label67.Visible = false;
                    Label69.Visible = false;
                    lbltotalfeepaid.Visible = false;
                    lbltotalfeepaid_value.Visible = false;
                    lbltotalcount.Visible = false;
                    ckbx.Visible = false;
                    btnconform.Visible = false;
                    btnunpaid.Visible = false;
                    btnChallan.Visible = false;
                    btnadmitcard.Visible = false;
                    btnadmitprint.Visible = false;
                    btnleft.Visible = false;
                    //  btnreject.Visible = false;
                }
                #endregion
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    protected void ddldegreeselected(object sender, EventArgs e)
    {
        lbltotalcount.Visible = false;
        lbltotalcount1.Visible = false;
        lbltotalcount2.Visible = false;
        lbltotalcount3.Visible = false;
        FpSpread4.Visible = false;
        FpSpread3.Visible = false;
        FpSpread2.Visible = false;
        FpSpread1.Visible = false;
        spreadFeeConfirm.Visible = false;
        Label66.Visible = false;
        // lblnew2.Text = "0" + "New";
        Label68.Visible = false;
        Label67.Visible = false;
        Label69.Visible = false;
        btnapprove.Visible = false;
        Button2.Visible = false;
        Button3.Visible = false;
        Button9.Visible = false;
        lbltotalfeepaid.Visible = false;
        lbltotalfeepaid_value.Visible = false;
        branch();
        loadreligion();
        loadBoardUniv();
    }
    protected void chirstian_Click(object sender, EventArgs e)
    {
        try
        {
            lnkchirstian.ForeColor = System.Drawing.Color.Green;
            lnkbc.ForeColor = System.Drawing.Color.Blue;
            lnkbcm.ForeColor = System.Drawing.Color.Blue;
            lnkmbcdnc.ForeColor = System.Drawing.Color.Blue;
            lnksc.ForeColor = System.Drawing.Color.Blue;
            lnksca.ForeColor = System.Drawing.Color.Blue;
            lnkst.ForeColor = System.Drawing.Color.Blue;
            lnkoc.ForeColor = System.Drawing.Color.Blue;
            lnkall.ForeColor = System.Drawing.Color.Blue;
            lnkmng.ForeColor = System.Drawing.Color.Blue;
            ckbx.Checked = false;
            string textval = " select TextCode from textvaltable where TextCriteria='relig' and TextVal ='Christian' and college_code='" + Session["collegecode"].ToString() + "' ";
            ds.Clear();
            ds = dt.select_method_wo_parameter(textval, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                textcode = Convert.ToString(ds.Tables[0].Rows[0]["TextCode"]);
                ViewState["text_code_value"] = textcode;
                ViewState["text_type"] = "Religion";
                string query = "select allot,priority,allot_Confirm  from admitcolumnset where college_code='" + Convert.ToString(Session["collegecode"]) + "' and textcriteria ='relig' and column_name ='" + textcode + "' and setcolumn ='" + ddldept.SelectedItem.Value + "'";
                ds.Clear();
                ds = dt.select_method_wo_parameter(query, "Text");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    string alote = Convert.ToString(ds.Tables[0].Rows[0]["allot"]);
                    string priority = Convert.ToString(ds.Tables[0].Rows[0]["priority"]);
                    string confirmalote = Convert.ToString(ds.Tables[0].Rows[0]["allot_Confirm"]);
                    int count = 0;
                    if (priority.Trim() != "" && priority != null)
                    {
                        if (confirmalote.Trim() != "" && confirmalote != null && alote.Trim() != "" && alote != null)
                        {
                            count = Convert.ToInt32(priority) - Convert.ToInt32(confirmalote);
                            lbltotalfeepaid.Text = "Selected : " + Convert.ToInt32(alote) + "";
                            lbltotalfeepaid.Visible = true;
                            lbltotalfeepaid_value.Text = "Admitted : " + Convert.ToInt32(confirmalote) + "";
                            lbltotalfeepaid_value.Visible = true;
                        }
                        else
                        {
                            count = Convert.ToInt32(priority);
                            lbltotalfeepaid.Text = "Selected : 0";
                            lbltotalfeepaid.Visible = true;
                            lbltotalfeepaid_value.Text = "Admitted : 0";
                            lbltotalfeepaid_value.Visible = true;
                        }
                    }
                    else
                    {
                        lbltotalfeepaid.Text = "Selected :  0";
                        lbltotalfeepaid.Visible = true;
                        lbltotalfeepaid_value.Text = "Admitted : 0";
                        lbltotalfeepaid_value.Visible = true;
                    }
                    if (alote.Trim() != "" && alote != null)
                    {
                        lnkchirstian.Text = "Christian(" + count + ")(" + alote + "/" + priority + ")";
                    }
                    else
                    {
                        lnkchirstian.Text = "Christian(" + count + ")";
                    }
                }
                orderflage = true;
                Button1_Click(sender, e);
                // allocate();
            }
        }
        catch
        {
        }
    }
    protected void bc_Clcik(object sender, EventArgs e)
    {
        try
        {
            lnkbc.ForeColor = System.Drawing.Color.Green;
            lnkchirstian.ForeColor = System.Drawing.Color.Blue;
            lnkbcm.ForeColor = System.Drawing.Color.Blue;
            lnkmbcdnc.ForeColor = System.Drawing.Color.Blue;
            lnksc.ForeColor = System.Drawing.Color.Blue;
            lnksca.ForeColor = System.Drawing.Color.Blue;
            lnkst.ForeColor = System.Drawing.Color.Blue;
            lnkoc.ForeColor = System.Drawing.Color.Blue;
            lnkall.ForeColor = System.Drawing.Color.Blue;
            lnkmng.ForeColor = System.Drawing.Color.Blue;
            ckbx.Checked = false;
            string textval = " select * from textvaltable where TextCriteria='comm' and TextVal ='BC' and college_code='" + Session["collegecode"].ToString() + "'";
            ds.Clear();
            ds = dt.select_method_wo_parameter(textval, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                textcode = Convert.ToString(ds.Tables[0].Rows[0]["TextCode"]);
                ViewState["text_code_value"] = textcode;
                ViewState["text_type"] = "Community";
                string query = "select allot,priority,allot_Confirm  from admitcolumnset where college_code='" + Convert.ToString(Session["collegecode"]) + "' and textcriteria ='community' and column_name ='" + textcode + "' and setcolumn ='" + ddldept.SelectedItem.Value + "'";
                ds.Clear();
                ds = dt.select_method_wo_parameter(query, "Text");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    string alote = Convert.ToString(ds.Tables[0].Rows[0]["allot"]);
                    string priority = Convert.ToString(ds.Tables[0].Rows[0]["priority"]);
                    string confirmalote = Convert.ToString(ds.Tables[0].Rows[0]["allot_Confirm"]);
                    int count = 0;
                    if (priority.Trim() != "" && priority != null)
                    {
                        if (confirmalote.Trim() != "" && confirmalote != null && alote.Trim() != "" && alote != null)
                        {
                            count = Convert.ToInt32(priority) - Convert.ToInt32(confirmalote);
                            lbltotalfeepaid.Text = "Selected : " + Convert.ToInt32(alote) + "";
                            lbltotalfeepaid.Visible = true;
                            lbltotalfeepaid_value.Text = "Admitted : " + Convert.ToInt32(confirmalote) + "";
                            lbltotalfeepaid_value.Visible = true;
                        }
                        else
                        {
                            count = Convert.ToInt32(priority);
                            lbltotalfeepaid.Text = "Selected : 0";
                            lbltotalfeepaid.Visible = true;
                            lbltotalfeepaid_value.Text = "Admitted : 0";
                            lbltotalfeepaid_value.Visible = true;
                        }
                    }
                    else
                    {
                        lbltotalfeepaid.Text = "Selected :  0";
                        lbltotalfeepaid.Visible = true;
                        lbltotalfeepaid_value.Text = "Admitted : 0";
                        lbltotalfeepaid_value.Visible = true;
                    }
                    if (alote.Trim() != "" && alote != null)
                    {
                        lnkbc.Text = "BC(" + count + ")(" + alote + "/" + priority + ")";
                    }
                    else
                    {
                        lnkbc.Text = "BC(" + count + ")";
                    }
                }
                orderflage = true;
                Button1_Click(sender, e);
                //allocate();
            }
        }
        catch
        {
        }
    }
    protected void bcm_Clcik(object sender, EventArgs e)
    {
        try
        {
            lnkbcm.ForeColor = System.Drawing.Color.Green;
            lnkbc.ForeColor = System.Drawing.Color.Blue;
            lnkchirstian.ForeColor = System.Drawing.Color.Blue;
            lnkmbcdnc.ForeColor = System.Drawing.Color.Blue;
            lnksc.ForeColor = System.Drawing.Color.Blue;
            lnksca.ForeColor = System.Drawing.Color.Blue;
            lnkst.ForeColor = System.Drawing.Color.Blue;
            lnkoc.ForeColor = System.Drawing.Color.Blue;
            lnkall.ForeColor = System.Drawing.Color.Blue;
            lnkmng.ForeColor = System.Drawing.Color.Blue;
            ckbx.Checked = false;
            string textval = " select * from textvaltable where TextCriteria='comm' and TextCriteria2='comm1' and TextVal ='BCM' and college_code='" + Session["collegecode"].ToString() + "'";
            ds.Clear();
            ds = dt.select_method_wo_parameter(textval, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                textcode = Convert.ToString(ds.Tables[0].Rows[0]["TextCode"]);
                ViewState["text_code_value"] = textcode;
                ViewState["text_type"] = "Community";
                string query = "select allot,priority,allot_Confirm  from admitcolumnset where college_code='" + Convert.ToString(Session["collegecode"]) + "' and textcriteria ='community' and column_name ='" + textcode + "' and setcolumn ='" + ddldept.SelectedItem.Value + "'";
                ds.Clear();
                ds = dt.select_method_wo_parameter(query, "Text");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    string alote = Convert.ToString(ds.Tables[0].Rows[0]["allot"]);
                    string priority = Convert.ToString(ds.Tables[0].Rows[0]["priority"]);
                    string confirmalote = Convert.ToString(ds.Tables[0].Rows[0]["allot_Confirm"]);
                    int count = 0;
                    if (priority.Trim() != "" && priority != null)
                    {
                        if (confirmalote.Trim() != "" && confirmalote != null && alote.Trim() != "" && alote != null)
                        {
                            count = Convert.ToInt32(priority) - Convert.ToInt32(confirmalote);
                            lbltotalfeepaid.Text = "Selected : " + Convert.ToInt32(alote) + "";
                            lbltotalfeepaid.Visible = true;
                            lbltotalfeepaid_value.Text = "Admitted : " + Convert.ToInt32(confirmalote) + "";
                            lbltotalfeepaid_value.Visible = true;
                        }
                        else
                        {
                            count = Convert.ToInt32(priority);
                            lbltotalfeepaid.Text = "Selected : 0";
                            lbltotalfeepaid.Visible = true;
                            lbltotalfeepaid_value.Text = "Admitted : 0";
                            lbltotalfeepaid_value.Visible = true;
                        }
                    }
                    else
                    {
                        lbltotalfeepaid.Text = "Selected :  0";
                        lbltotalfeepaid.Visible = true;
                        lbltotalfeepaid_value.Text = "Admitted : 0";
                        lbltotalfeepaid_value.Visible = true;
                    }
                    if (alote.Trim() != "" && alote != null)
                    {
                        lnkbcm.Text = "BCM(" + count + ")(" + alote + "/" + priority + ")";
                    }
                    else
                    {
                        lnkbcm.Text = "BCM(" + count + ")";
                    }
                }
                orderflage = true;
                Button1_Click(sender, e);
                //allocate();
            }
        }
        catch
        {
        }
    }
    protected void mbc_Clcik(object sender, EventArgs e)
    {
        try
        {
            lnkmbcdnc.ForeColor = System.Drawing.Color.Green;
            lnkbcm.ForeColor = System.Drawing.Color.Blue;
            lnkbc.ForeColor = System.Drawing.Color.Blue;
            lnkchirstian.ForeColor = System.Drawing.Color.Blue;
            lnksc.ForeColor = System.Drawing.Color.Blue;
            lnksca.ForeColor = System.Drawing.Color.Blue;
            lnkst.ForeColor = System.Drawing.Color.Blue;
            lnkoc.ForeColor = System.Drawing.Color.Blue;
            lnkall.ForeColor = System.Drawing.Color.Blue;
            lnkmng.ForeColor = System.Drawing.Color.Blue;
            ckbx.Checked = false;
            string textval = " select * from textvaltable where TextCriteria='comm' and TextVal ='MBC/DNC' and college_code='" + Session["collegecode"].ToString() + "'";
            ds.Clear();
            ds = dt.select_method_wo_parameter(textval, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                textcode = Convert.ToString(ds.Tables[0].Rows[0]["TextCode"]);
                ViewState["text_code_value"] = textcode;
                ViewState["text_type"] = "Community";
                string query = "select allot,priority,allot_Confirm  from admitcolumnset where college_code='" + Convert.ToString(Session["collegecode"]) + "' and textcriteria ='community' and column_name ='" + textcode + "' and setcolumn ='" + ddldept.SelectedItem.Value + "'";
                ds.Clear();
                ds = dt.select_method_wo_parameter(query, "Text");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    string alote = Convert.ToString(ds.Tables[0].Rows[0]["allot"]);
                    string priority = Convert.ToString(ds.Tables[0].Rows[0]["priority"]);
                    string confirmalote = Convert.ToString(ds.Tables[0].Rows[0]["allot_Confirm"]);
                    int count = 0;
                    if (priority.Trim() != "" && priority != null)
                    {
                        if (confirmalote.Trim() != "" && confirmalote != null && alote.Trim() != "" && alote != null)
                        {
                            count = Convert.ToInt32(priority) - Convert.ToInt32(confirmalote);
                            lbltotalfeepaid.Text = "Selected : " + Convert.ToInt32(alote) + "";
                            lbltotalfeepaid.Visible = true;
                            lbltotalfeepaid_value.Text = "Admitted : " + Convert.ToInt32(confirmalote) + "";
                            lbltotalfeepaid_value.Visible = true;
                        }
                        else
                        {
                            count = Convert.ToInt32(priority);
                            lbltotalfeepaid.Text = "Selected : 0";
                            lbltotalfeepaid.Visible = true;
                            lbltotalfeepaid_value.Text = "Admitted : 0";
                            lbltotalfeepaid_value.Visible = true;
                        }
                    }
                    else
                    {
                        lbltotalfeepaid.Text = "Selected :  0";
                        lbltotalfeepaid.Visible = true;
                        lbltotalfeepaid_value.Text = "Admitted : 0";
                        lbltotalfeepaid_value.Visible = true;
                    }
                    if (alote.Trim() != "" && alote != null)
                    {
                        lnkmbcdnc.Text = "MBC/DNC(" + count + ")(" + alote + "/" + priority + ")";
                    }
                    else
                    {
                        lnkmbcdnc.Text = "MBC/DNC(" + count + ")";
                    }
                }
                orderflage = true;
                Button1_Click(sender, e);
                // allocate();
            }
        }
        catch
        {
        }
    }
    protected void sc_Clcik(object sender, EventArgs e)
    {
        try
        {
            lnksc.ForeColor = System.Drawing.Color.Green;
            lnkmbcdnc.ForeColor = System.Drawing.Color.Blue;
            lnkbcm.ForeColor = System.Drawing.Color.Blue;
            lnkbc.ForeColor = System.Drawing.Color.Blue;
            lnkchirstian.ForeColor = System.Drawing.Color.Blue;
            lnksca.ForeColor = System.Drawing.Color.Blue;
            lnkst.ForeColor = System.Drawing.Color.Blue;
            lnkoc.ForeColor = System.Drawing.Color.Blue;
            lnkall.ForeColor = System.Drawing.Color.Blue;
            lnkmng.ForeColor = System.Drawing.Color.Blue;
            ckbx.Checked = false;
            string textval = " select * from textvaltable where TextCriteria='comm' and TextVal ='SC' and college_code='" + Session["collegecode"].ToString() + "'";
            ds.Clear();
            ds = dt.select_method_wo_parameter(textval, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                textcode = Convert.ToString(ds.Tables[0].Rows[0]["TextCode"]);
                ViewState["text_code_value"] = textcode;
                ViewState["text_type"] = "Community";
                string query = "select allot,priority,allot_Confirm  from admitcolumnset where college_code='" + Convert.ToString(Session["collegecode"]) + "' and textcriteria ='community' and column_name ='" + textcode + "' and setcolumn ='" + ddldept.SelectedItem.Value + "'";
                ds.Clear();
                ds = dt.select_method_wo_parameter(query, "Text");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    string alote = Convert.ToString(ds.Tables[0].Rows[0]["allot"]);
                    string priority = Convert.ToString(ds.Tables[0].Rows[0]["priority"]);
                    string confirmalote = Convert.ToString(ds.Tables[0].Rows[0]["allot_Confirm"]);
                    int count = 0;
                    if (priority.Trim() != "" && priority != null)
                    {
                        if (confirmalote.Trim() != "" && confirmalote != null && alote.Trim() != "" && alote != null)
                        {
                            count = Convert.ToInt32(priority) - Convert.ToInt32(confirmalote);
                            lbltotalfeepaid.Text = "Selected : " + Convert.ToInt32(alote) + "";
                            lbltotalfeepaid.Visible = true;
                            lbltotalfeepaid_value.Text = "Admitted : " + Convert.ToInt32(confirmalote) + "";
                            lbltotalfeepaid_value.Visible = true;
                        }
                        else
                        {
                            count = Convert.ToInt32(priority);
                            lbltotalfeepaid.Text = "Selected : 0";
                            lbltotalfeepaid.Visible = true;
                            lbltotalfeepaid_value.Text = "Admitted : 0";
                            lbltotalfeepaid_value.Visible = true;
                        }
                    }
                    else
                    {
                        lbltotalfeepaid.Text = "Selected :  0";
                        lbltotalfeepaid.Visible = true;
                        lbltotalfeepaid_value.Text = "Admitted : 0";
                        lbltotalfeepaid_value.Visible = true;
                    }
                    if (alote.Trim() != "" && alote != null)
                    {
                        lnksc.Text = "SC(" + count + ")(" + alote + "/" + priority + ")";
                    }
                    else
                    {
                        lnksc.Text = "SC(" + count + ")";
                    }
                }
                orderflage = true;
                Button1_Click(sender, e);
                // allocate();
            }
        }
        catch
        {
        }
    }
    protected void sca_Clcik(object sender, EventArgs e)
    {
        try
        {
            lnksca.ForeColor = System.Drawing.Color.Green;
            lnksc.ForeColor = System.Drawing.Color.Blue;
            lnkmbcdnc.ForeColor = System.Drawing.Color.Blue;
            lnkbcm.ForeColor = System.Drawing.Color.Blue;
            lnkbc.ForeColor = System.Drawing.Color.Blue;
            lnkchirstian.ForeColor = System.Drawing.Color.Blue;
            lnkst.ForeColor = System.Drawing.Color.Blue;
            lnkoc.ForeColor = System.Drawing.Color.Blue;
            lnkall.ForeColor = System.Drawing.Color.Blue;
            lnkmng.ForeColor = System.Drawing.Color.Blue;
            ckbx.Checked = false;
            string textval = " select * from textvaltable where TextCriteria='comm' and TextVal ='SC(Arunthathiyar)' and college_code='" + Session["collegecode"].ToString() + "'";
            ds.Clear();
            ds = dt.select_method_wo_parameter(textval, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                textcode = Convert.ToString(ds.Tables[0].Rows[0]["TextCode"]);
                ViewState["text_code_value"] = textcode;
                ViewState["text_type"] = "Community";
                string query = "select allot,priority,allot_Confirm  from admitcolumnset where college_code='" + Convert.ToString(Session["collegecode"]) + "' and textcriteria ='community' and column_name ='" + textcode + "' and setcolumn ='" + ddldept.SelectedItem.Value + "'";
                ds.Clear();
                ds = dt.select_method_wo_parameter(query, "Text");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    string alote = Convert.ToString(ds.Tables[0].Rows[0]["allot"]);
                    string priority = Convert.ToString(ds.Tables[0].Rows[0]["priority"]);
                    string confirmalote = Convert.ToString(ds.Tables[0].Rows[0]["allot_Confirm"]);
                    int count = 0;
                    if (priority.Trim() != "" && priority != null)
                    {
                        if (confirmalote.Trim() != "" && confirmalote != null && alote.Trim() != "" && alote != null)
                        {
                            count = Convert.ToInt32(priority) - Convert.ToInt32(confirmalote);
                            lbltotalfeepaid.Text = "Selected : " + Convert.ToInt32(alote) + "";
                            lbltotalfeepaid.Visible = true;
                            lbltotalfeepaid_value.Text = "Admitted : " + Convert.ToInt32(confirmalote) + "";
                            lbltotalfeepaid_value.Visible = true;
                        }
                        else
                        {
                            count = Convert.ToInt32(priority);
                            lbltotalfeepaid.Text = "Selected : 0";
                            lbltotalfeepaid.Visible = true;
                            lbltotalfeepaid_value.Text = "Admitted : 0";
                            lbltotalfeepaid_value.Visible = true;
                        }
                    }
                    else
                    {
                        lbltotalfeepaid.Text = "Selected :  0";
                        lbltotalfeepaid.Visible = true;
                        lbltotalfeepaid_value.Text = "Admitted : 0";
                        lbltotalfeepaid_value.Visible = true;
                    }
                    if (alote.Trim() != "" && alote != null)
                    {
                        lnksca.Text = "SCA(" + count + ")(" + alote + "/" + priority + ")";
                    }
                    else
                    {
                        lnksca.Text = "SCA(" + count + ")";
                    }
                }
                orderflage = true;
                Button1_Click(sender, e);
                // allocate();
            }
        }
        catch
        {
        }
    }
    protected void st_Clcik(object sender, EventArgs e)
    {
        try
        {
            lnkst.ForeColor = System.Drawing.Color.Green;
            lnksca.ForeColor = System.Drawing.Color.Blue;
            lnksc.ForeColor = System.Drawing.Color.Blue;
            lnkmbcdnc.ForeColor = System.Drawing.Color.Blue;
            lnkbcm.ForeColor = System.Drawing.Color.Blue;
            lnkbc.ForeColor = System.Drawing.Color.Blue;
            lnkchirstian.ForeColor = System.Drawing.Color.Blue;
            lnkmng.ForeColor = System.Drawing.Color.Blue;
            lnkoc.ForeColor = System.Drawing.Color.Blue;
            lnkall.ForeColor = System.Drawing.Color.Blue;
            ckbx.Checked = false;
            string textval = " select * from textvaltable where TextCriteria='comm' and TextVal ='ST' and college_code='" + Session["collegecode"].ToString() + "'";
            ds.Clear();
            ds = dt.select_method_wo_parameter(textval, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                textcode = Convert.ToString(ds.Tables[0].Rows[0]["TextCode"]);
                ViewState["text_code_value"] = textcode;
                ViewState["text_type"] = "Community";
                string query = "select allot,priority,allot_Confirm  from admitcolumnset where college_code='" + Convert.ToString(Session["collegecode"]) + "' and textcriteria ='community' and column_name ='" + textcode + "' and setcolumn ='" + ddldept.SelectedItem.Value + "'";
                ds.Clear();
                ds = dt.select_method_wo_parameter(query, "Text");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    string alote = Convert.ToString(ds.Tables[0].Rows[0]["allot"]);
                    string priority = Convert.ToString(ds.Tables[0].Rows[0]["priority"]);
                    string confirmalote = Convert.ToString(ds.Tables[0].Rows[0]["allot_Confirm"]);
                    int count = 0;
                    if (priority.Trim() != "" && priority != null)
                    {
                        if (confirmalote.Trim() != "" && confirmalote != null && alote.Trim() != "" && alote != null)
                        {
                            count = Convert.ToInt32(priority) - Convert.ToInt32(confirmalote);
                            lbltotalfeepaid.Text = "Selected : " + Convert.ToInt32(alote) + "";
                            lbltotalfeepaid.Visible = true;
                            lbltotalfeepaid_value.Text = "Admitted : " + Convert.ToInt32(confirmalote) + "";
                            lbltotalfeepaid_value.Visible = true;
                        }
                        else
                        {
                            count = Convert.ToInt32(priority);
                            lbltotalfeepaid.Text = "Selected : 0";
                            lbltotalfeepaid.Visible = true;
                            lbltotalfeepaid_value.Text = "Admitted : 0";
                            lbltotalfeepaid_value.Visible = true;
                        }
                    }
                    else
                    {
                        lbltotalfeepaid.Text = "Selected :  0";
                        lbltotalfeepaid.Visible = true;
                        lbltotalfeepaid_value.Text = "Admitted : 0";
                        lbltotalfeepaid_value.Visible = true;
                    }
                    if (alote.Trim() != "" && alote != null)
                    {
                        lnkst.Text = "ST(" + count + ")(" + alote + "/" + priority + ")";
                    }
                    else
                    {
                        lnkst.Text = "ST(" + count + ")";
                    }
                }
                orderflage = true;
                Button1_Click(sender, e);
                // allocate();
            }
        }
        catch
        {
        }
    }
    protected void oc_Clcik(object sender, EventArgs e)
    {
        try
        {
            checkvalue_flage = true;
            lnkoc.ForeColor = System.Drawing.Color.Green;
            lnkst.ForeColor = System.Drawing.Color.Blue;
            lnksca.ForeColor = System.Drawing.Color.Blue;
            lnksc.ForeColor = System.Drawing.Color.Blue;
            lnkmbcdnc.ForeColor = System.Drawing.Color.Blue;
            lnkbcm.ForeColor = System.Drawing.Color.Blue;
            lnkbc.ForeColor = System.Drawing.Color.Blue;
            lnkchirstian.ForeColor = System.Drawing.Color.Blue;
            lnkall.ForeColor = System.Drawing.Color.Blue;
            lnkmng.ForeColor = System.Drawing.Color.Blue;
            ckbx.Checked = false;
            string textval = " select * from textvaltable where TextCriteria='comm' and TextVal ='OC' and college_code='" + Session["collegecode"].ToString() + "'";
            ds.Clear();
            ds = dt.select_method_wo_parameter(textval, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                textcode = Convert.ToString(ds.Tables[0].Rows[0]["TextCode"]);
                ViewState["text_code_value"] = textcode;
                ViewState["text_type"] = "Community";
                string query = "select allot,priority,allot_Confirm  from admitcolumnset where college_code='" + Convert.ToString(Session["collegecode"]) + "' and textcriteria ='community' and column_name ='" + textcode + "' and setcolumn ='" + ddldept.SelectedItem.Value + "'";
                ds.Clear();
                ds = dt.select_method_wo_parameter(query, "Text");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    string alote = Convert.ToString(ds.Tables[0].Rows[0]["allot"]);
                    string priority = Convert.ToString(ds.Tables[0].Rows[0]["priority"]);
                    string confirmalote = Convert.ToString(ds.Tables[0].Rows[0]["allot_Confirm"]);
                    int count = 0;
                    if (priority.Trim() != "" && priority != null)
                    {
                        if (confirmalote.Trim() != "" && confirmalote != null && alote.Trim() != "" && alote != null)
                        {
                            count = Convert.ToInt32(priority) - Convert.ToInt32(confirmalote);
                            lbltotalfeepaid.Text = "Selected : " + Convert.ToInt32(alote) + "";
                            lbltotalfeepaid.Visible = true;
                            lbltotalfeepaid_value.Text = "Admitted : " + Convert.ToInt32(confirmalote) + "";
                            lbltotalfeepaid_value.Visible = true;
                        }
                        else
                        {
                            count = Convert.ToInt32(priority);
                            lbltotalfeepaid.Text = "Selected : 0";
                            lbltotalfeepaid.Visible = true;
                            lbltotalfeepaid_value.Text = "Admitted : 0";
                            lbltotalfeepaid_value.Visible = true;
                        }
                    }
                    else
                    {
                        lbltotalfeepaid.Text = "Selected :  0";
                        lbltotalfeepaid.Visible = true;
                        lbltotalfeepaid_value.Text = "Admitted : 0";
                        lbltotalfeepaid_value.Visible = true;
                    }
                    if (alote.Trim() != "" && alote != null)
                    {
                        lnkoc.Text = "OC(" + count + ")(" + alote + "/" + priority + ")";
                    }
                    else
                    {
                        lnkoc.Text = "OC(" + count + ")";
                    }
                }
            }
            if (Convert.ToInt32(ViewState["spvl"]) != 1)
            {
                orderflage = true;
            }
            Button1_Click(sender, e);
        }
        catch
        {
        }
    }
    protected void All_Clcik(object sender, EventArgs e)
    {
        try
        {
            lnkall.ForeColor = System.Drawing.Color.Green;
            lnkoc.ForeColor = System.Drawing.Color.Blue;
            lnkst.ForeColor = System.Drawing.Color.Blue;
            lnksca.ForeColor = System.Drawing.Color.Blue;
            lnksc.ForeColor = System.Drawing.Color.Blue;
            lnkmbcdnc.ForeColor = System.Drawing.Color.Blue;
            lnkbcm.ForeColor = System.Drawing.Color.Blue;
            lnkbc.ForeColor = System.Drawing.Color.Blue;
            lnkchirstian.ForeColor = System.Drawing.Color.Blue;
            lnkmng.ForeColor = System.Drawing.Color.Blue;
            ckbx.Checked = false;
            Button1_Click(sender, e);
        }
        catch
        {
        }
    }
    protected void ddledu_SelectedIndexchange(object sender, EventArgs e)
    {
        try
        {
            lbltotalcount.Visible = false;
            lbltotalcount1.Visible = false;
            lbltotalcount2.Visible = false;
            lbltotalcount3.Visible = false;
            FpSpread4.Visible = false;
            FpSpread3.Visible = false;
            FpSpread2.Visible = false;
            FpSpread1.Visible = false;
            spreadFeeConfirm.Visible = false;
            Label66.Visible = false;
            // lblnew2.Text = "0" + "New";
            Label68.Visible = false;
            Label67.Visible = false;
            Label69.Visible = false;
            btnapprove.Visible = false;
            Button2.Visible = false;
            Button3.Visible = false;
            Button9.Visible = false;
            lbltotalfeepaid.Visible = false;
            lbltotalfeepaid_value.Visible = false;
            degree();
            branch();
        }
        catch
        {
        }
    }
    protected void ddldept_Change(object sender, EventArgs e)
    {
        try
        {
            lbltotalcount.Visible = false;
            lbltotalcount1.Visible = false;
            lbltotalcount2.Visible = false;
            lbltotalcount3.Visible = false;
            FpSpread4.Visible = false;
            FpSpread3.Visible = false;
            FpSpread2.Visible = false;
            FpSpread1.Visible = false;
            spreadFeeConfirm.Visible = false;
            Label66.Visible = false;
            // lblnew2.Text = "0" + "New";
            Label68.Visible = false;
            Label67.Visible = false;
            Label69.Visible = false;
            btnapprove.Visible = false;
            Button2.Visible = false;
            Button3.Visible = false;
            Button9.Visible = false;
            lbltotalfeepaid.Visible = false;
            lbltotalfeepaid_value.Visible = false;
            loadreligion();
            loadBoardUniv();
            bindmedium();
        }
        catch
        {
        }
    }
    protected void cbreport_Change(object sender, EventArgs e)
    {
        try
        {
            if (cbreport.Checked == true)
            {
                ddlreporttype.Visible = true;
            }
            if (cbreport.Checked == false)
            {
                ddlreporttype.Visible = false;
            }
        }
        catch
        {
        }
    }
    protected void ddlreportype_Change(object sender, EventArgs e)
    {
        try
        {
            panelpopup.Visible = true;
            reportnamesapn.InnerHtml = Convert.ToString(ddlreporttype.SelectedItem.Text);
            reportnamesapn.Visible = true;
            report();
        }
        catch
        {
        }
    }
    public void report()
    {
        try
        {
            FpReport.Sheets[0].RowCount = 0;
            FpReport.Sheets[0].ColumnCount = 0;
            FpReport.CommandBar.Visible = false;
            FpReport.Sheets[0].RowHeader.Visible = false;
            FpReport.Sheets[0].AutoPostBack = false;
            FpReport.Height = 460;
            FpReport.Width = 900;
            FarPoint.Web.Spread.StyleInfo darkstyle = new FarPoint.Web.Spread.StyleInfo();
            darkstyle.BackColor = Color.Brown;
            darkstyle.ForeColor = Color.White;
            // FpReport.ActiveSheetView.ColumnHeader.DefaultStyle = darkstyle;
            FarPoint.Web.Spread.TextCellType txt1 = new FarPoint.Web.Spread.TextCellType();
            FarPoint.Web.Spread.CheckBoxCellType chkcel1 = new FarPoint.Web.Spread.CheckBoxCellType();
            chkcel1.AutoPostBack = false;
            FpReport.Sheets[0].ColumnCount = 1;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Text = "S.No";
            // FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Bold = true;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
            FpReport.Sheets[0].Columns[FpReport.Sheets[0].ColumnCount - 1].Locked = true;
            FpReport.Sheets[0].Columns[FpReport.Sheets[0].ColumnCount - 1].CellType = txt1;
            FpReport.Sheets[0].ColumnCount++;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Text = "Select Wait List";
            // FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Bold = true;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
            FpReport.Sheets[0].ColumnCount++;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Text = "Student Name";
            // FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Bold = true;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
            FpReport.Sheets[0].ColumnCount++;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Text = "Application ID";
            // FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Bold = true;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
            FpReport.Sheets[0].ColumnCount++;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Text = "Total Percentage";
            // FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Bold = true;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
            FpReport.Sheets[0].ColumnCount++;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Text = "Application Date";
            // FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Bold = true;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
            FpReport.Sheets[0].ColumnCount++;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Text = "Recommended by";
            // FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Bold = true;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
            FpReport.Sheets[0].ColumnCount++;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Text = "Mobile No";
            // FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Bold = true;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
            FpReport.Sheets[0].ColumnCount++;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Text = "Alter Mobile No";
            // FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Bold = true;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
            FpReport.Sheets[0].ColumnCount++;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Text = "City";
            // FpSpread3.Sheets[0].ColumnHeader.Cells[0, FpSpread3.Sheets[0].ColumnCount - 1].BackColor = Color.MistyRose;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Name = "Book Antiqua";
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Bold = true;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].Font.Size = FontUnit.Medium;
            FpReport.Sheets[0].ColumnHeader.Cells[0, FpReport.Sheets[0].ColumnCount - 1].HorizontalAlign = HorizontalAlign.Center;
            string firsdate = TextBox2.Text;
            string seconddate = TextBox3.Text;
            string[] spiltfirstdate = firsdate.Split('/');
            string[] spiltseconddate = seconddate.Split('/');
            DateTime dt_first = Convert.ToDateTime(spiltfirstdate[1] + "/" + spiltfirstdate[0] + "/" + spiltfirstdate[2]);
            DateTime dt_second = Convert.ToDateTime(spiltseconddate[1] + "/" + spiltseconddate[0] + "/" + spiltseconddate[2]);
            DataView dvnew = new DataView();
            DataView dvnew1 = new DataView();
            string query_value = " select distinct column_name,TextVal from admitcolumnset a,textvaltable t where a.column_name =t.TextCode and a.college_code =t.college_code  and setcolumn ='" + ddldept.SelectedValue + "' and a.college_code ='" + Convert.ToString(Session["collegecode"]) + "' and (a.textcriteria='relig' or a.textcriteria ='community' or a.textcriteria ='Management' ) order by column_name";
            query_value = query_value + " select * from selectcriteria where isapprove ='2' and degree_code ='" + ddldept.SelectedValue + "' and college_code='" + Convert.ToString(Session["collegecode"]) + "' and select_date between '" + dt_first.ToString("MM/dd/yyyy") + "' and '" + dt_second.ToString("MM/dd/yyyy") + "'";
            //  query_value = query_value + " select * from applyn where degree_code ='" + ddldept.SelectedValue + "' and college_code ='" + Convert.ToString(Session["collegecode"]) + "' and batch_year ='" + System.DateTime.Now.ToString("yyyy") + "'";
            query_value = query_value + " select s.usercode,s.criteria_Code,a.app_no,app_formno,CONVERT(varchar(10), date_applied,103) as date_applied,alter_mobileno,stud_name,sex,Relationship,parent_name,majorallied_percent,CONVERT(varchar(10), dob,103) as dob ,parent_occu,mother_tongue,religion,citizen,community,caste,TamilOrginFromAndaman,IsExService,handy,visualhandy,first_graduate,CampusReq,DistinctSport,co_curricular,parent_addressC,Streetc,Cityc,parent_statec,Countryc,parent_pincodec,Student_Mobile,StuPer_Id,parent_phnoc,alter_mobileno,parent_addressP,Streetp,cityp,parent_statep,Countryp,parent_pincodep,parent_phnop,a.degree_code,batch_year,a.college_code,SubCaste,isdisable ,isdisabledisc,islearningdis,missionarydisc,MissionaryChild,seattype,current_semester,ncccadet,Institute_name,instaddress,medium,isgrade,Part1Language,Part2Language,percentage,university_code,uni_state,psubjectno,registerno,acual_marks,max_marks,pass_month,pass_year,noofattempt,ph.grade,sd.course_code,sd.branch_code,sd.tancet_mark,Vocational_stream from applyn a,Stud_prev_details sd,perv_marks_history ph,selectcriteria s where  a.app_no =sd.app_no and  sd.course_entno =ph.course_entno and a.batch_year =" + txtbatch.Text + " and s.app_no =a.app_no   and a.college_code ='" + college_code + "' and s.college_code =a.college_code   and s.degree_code =a.degree_code  and select_date between '" + dt_first.ToString("MM/dd/yyyy") + "' and '" + dt_second.ToString("MM/dd/yyyy") + "' and s.isapprove =2 and a.degree_code ='" + ddldept.SelectedItem.Value + "' and current_semester =1";
            string admin = "";
            string adm = "select column_name from admitcolumnset where (textcriteria ='community' or textcriteria ='relig' or textcriteria ='Management') and setcolumn ='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
            ds1 = dt.select_method_wo_parameter(adm, "text");
            if (ds1.Tables[0].Rows.Count > 0)
            {
                for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                {
                    if (admin == "")
                    {
                        admin = ds1.Tables[0].Rows[w]["column_name"].ToString();
                    }
                    else
                    {
                        admin = admin + "," + ds1.Tables[0].Rows[w]["column_name"].ToString();
                    }
                }
                if (admin.Trim() != "")
                {
                    string TextValuenew = d2.GetFunction("select TextCode  from TextValTable where TextCriteria ='comm' and TextCriteria2 ='comm1' and TextVal ='Others'");
                    if (TextValuenew.Trim() != "" && TextValuenew.Trim() != "0")
                    {
                        admin = admin + "," + TextValuenew;
                    }
                }
                query_value = query_value + "and ( a.religion in (" + admin + ") or a.community in (" + admin + "))";
                // com = com + "and ( a.religion in (" + admin + ") or a.community in (" + admin + "))";
            }
            string adminlang = "";
            string adm3 = "select * from admitcolumnset where textcriteria = 'subjel' and setcolumn='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
            ds1.Clear();
            ds1 = dt.select_method_wo_parameter(adm3, "text");
            if (ds1.Tables[0].Rows.Count > 0)
            {
                for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                {
                    if (adminlang == "")
                    {
                        adminlang = "" + Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                    }
                    else
                    {
                        adminlang = adminlang + "'" + "," + "'" + Convert.ToString(ds1.Tables[0].Rows[w]["column_name"]);
                    }
                }
            }
            if (adminlang.Trim() == "")
            {
                if (ddledu.SelectedItem.Text == "UG")
                {
                    query_value = query_value + "  and psubjectno not in(sd.Part1Language,sd.Part2Language)";
                }
            }
            else
            {
                query_value = query_value + " and (sd.Part1Language in('" + adminlang + "') or sd.Part2Language in ('" + adminlang + "'))";
                query_value = query_value + " and ( sd.Part1Language in('" + adminlang + "') or sd.Part2Language in ('" + adminlang + "') )";
            }
            if (adminlang.Trim() != "")
            {
                if (ddldept.SelectedItem.Text == "Tamil Literature")
                {
                    query_value = query_value + " and (Part1Language=psubjectno) order by acual_marks desc";
                }
                else if (ddldept.SelectedItem.Text == "English Literature" || ddldept.SelectedItem.Text == "English")
                {
                    query_value = query_value + " and (Part2Language=psubjectno) order by acual_marks desc";
                }
            }
            if (adminlang == "")
            {
                string admin1 = "";
                // string adm1 = "select * from admitcolumnset where textcriteria = 'subjec' and user_code='" + user_code + "'";
                string adm1 = "select * from admitcolumnset where textcriteria = 'subjec' and setcolumn='" + ddldept.SelectedItem.Value + "' and College_Code ='" + college_code + "'";
                ds1 = dt.select_method_wo_parameter(adm1, "text");
                if (ds1.Tables[0].Rows.Count > 0)
                {
                    for (int w = 0; w < ds1.Tables[0].Rows.Count; w++)
                    {
                        if (admin1 == "")
                        {
                            admin1 = ds1.Tables[0].Rows[w]["column_name"].ToString();
                        }
                        else
                        {
                            admin1 = admin1 + "," + ds1.Tables[0].Rows[w]["column_name"].ToString();
                        }
                    }
                    if (ddledu.SelectedItem.Text == "UG")
                    {
                        query_value = query_value + "and ph.psubjectno in (" + admin1 + ")";
                    }
                    if (ddledu.SelectedItem.Text == "PG")
                    {
                        query_value = query_value + "and st.branch_code in (" + admin1 + ")";
                    }
                }
                if (query_value.Trim() != "")
                {
                    if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                    {
                        query_value = query_value + " order by percentage desc";
                        // com1 = com1 + " order by percentage desc";
                    }
                    if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                    {
                        query_value = query_value + " order by majorallied_percent desc";
                        // com1 = com1 + " order by majorallied_percent desc";
                    }
                }
            }
            FarPoint.Web.Spread.TextCellType txt = new FarPoint.Web.Spread.TextCellType();
            ds.Clear();
            ds = dt.select_method_wo_parameter(query_value, "Text");
            if (ddledu.SelectedItem.Text == "UG")
            {
                if (adminlang == "")
                {
                    Dictionary<int, double> dvlaue;
                    dvlaue = (Dictionary<int, double>)ViewState["recommend"];
                    int sno_value = 0;
                    if (ds.Tables[0].Rows.Count > 0 && ds.Tables[1].Rows.Count > 0)
                    {
                        for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                        {
                            string column_name = Convert.ToString(ds.Tables[0].Rows[i]["column_name"]);
                            ds.Tables[1].DefaultView.RowFilter = "criteria_code='" + column_name + "'";
                            dvnew = ds.Tables[1].DefaultView;
                            if (dvnew.Count > 0)
                            {
                                FpReport.Sheets[0].RowCount++;
                                FpReport.Sheets[0].SpanModel.Add(FpReport.Sheets[0].RowCount - 1, 0, 1, 9);
                                FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(ds.Tables[0].Rows[i]["TextVal"] + "(" + Convert.ToString(dvnew.Count) + ")");
                                FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Left;
                                FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 0].BackColor = Color.Gray;
                                Dictionary<int, double> addsumarray = new Dictionary<int, double>();
                                ArrayList addlist = new ArrayList();
                                for (int k = 0; k < dvnew.Count; k++)
                                {
                                    ds.Tables[2].DefaultView.RowFilter = "app_no='" + Convert.ToString(dvnew[k]["app_no"]) + "'";
                                    dvnew1 = ds.Tables[2].DefaultView;
                                    if (dvnew1.Count > 0)
                                    {
                                        double value = dvlaue[Convert.ToInt32(dvnew1[0]["app_no"])];
                                        addsumarray.Add(Convert.ToInt32(dvnew1[0]["app_no"]), value);
                                    }
                                }
                                addsumarray = addsumarray.OrderByDescending(x => x.Value).ToDictionary(x => x.Key, x => x.Value);
                                foreach (var kvp in addsumarray)
                                {
                                    string app_no = kvp.Key.ToString();
                                    string percentage = kvp.Value.ToString();
                                    ds.Tables[2].DefaultView.RowFilter = "app_no='" + Convert.ToString(app_no) + "'";
                                    dvnew1 = ds.Tables[2].DefaultView;
                                    if (dvnew1.Count > 0)
                                    {
                                        FpReport.Sheets[0].RowCount++;
                                        sno_value++;
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(sno_value);
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 1].CellType = chkcel1;
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(dvnew1[0]["Stud_name"]);
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 3].Text = Convert.ToString(dvnew1[0]["app_formno"]);
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                                        if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                                        {
                                            FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 4].Text = Convert.ToString(percentage);
                                            FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                                        }
                                        if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                        {
                                            FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 4].Text = Convert.ToString(dvnew1[0]["majorallied_percent"]);
                                            FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                                        }
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 5].Text = Convert.ToString(dvnew1[0]["date_applied"]);
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 5].HorizontalAlign = HorizontalAlign.Center;
                                        string usernem = dt.GetFunction("select USER_ID   from UserMaster where User_code='" + Convert.ToString(dvnew1[0]["usercode"]) + "' and college_code ='" + Session["collegecode"] + "'");
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 6].Text = Convert.ToString(usernem);
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 6].HorizontalAlign = HorizontalAlign.Center;
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 7].Text = Convert.ToString(dvnew1[0]["Student_Mobile"]);
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 7].HorizontalAlign = HorizontalAlign.Center;
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 7].CellType = txt;
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 8].Text = Convert.ToString(dvnew1[0]["alter_mobileno"]);
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 8].HorizontalAlign = HorizontalAlign.Center;
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 8].CellType = txt;
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 9].Text = Convert.ToString(dvnew1[0]["Cityp"]);
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                                    }
                                }
                            }
                        }
                        FpReport.Visible = true;
                        FpReport.Sheets[0].Visible = true;
                        FpReport.Sheets[0].PageSize = FpReport.Sheets[0].RowCount;
                        lblreporterror.Visible = false;
                        btn_printreport.Visible = true;
                    }
                    else
                    {
                        FpReport.Visible = false;
                        FpReport.Sheets[0].Visible = false;
                        lblreporterror.Visible = true;
                        lblreporterror.Text = "No Records Found";
                        btn_printreport.Visible = false;
                        reportnamesapn.Visible = false;
                    }
                }
                else
                {
                    Dictionary<int, double> dvlaue;
                    dvlaue = (Dictionary<int, double>)ViewState["recommend"];
                    int sno_value = 0;
                    if (ds.Tables[0].Rows.Count > 0 && ds.Tables[1].Rows.Count > 0)
                    {
                        for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                        {
                            string column_name = Convert.ToString(ds.Tables[0].Rows[i]["column_name"]);
                            ds.Tables[1].DefaultView.RowFilter = "criteria_code='" + column_name + "'";
                            dvnew = ds.Tables[1].DefaultView;
                            if (dvnew.Count > 0)
                            {
                                FpReport.Sheets[0].RowCount++;
                                FpReport.Sheets[0].SpanModel.Add(FpReport.Sheets[0].RowCount - 1, 0, 1, 10);
                                FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(ds.Tables[0].Rows[i]["TextVal"] + "(" + Convert.ToString(dvnew.Count) + ")");
                                FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                                FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Left;
                                FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 0].BackColor = Color.Gray;
                                Dictionary<int, double> addsumarray = new Dictionary<int, double>();
                                ArrayList addlist = new ArrayList();
                                for (int k = 0; k < dvnew.Count; k++)
                                {
                                    ds.Tables[2].DefaultView.RowFilter = "app_no='" + Convert.ToString(dvnew[k]["app_no"]) + "'";
                                    dvnew1 = ds.Tables[2].DefaultView;
                                    if (dvnew1.Count > 0)
                                    {
                                        double value = dvlaue[Convert.ToInt32(dvnew1[0]["app_no"])];
                                        addsumarray.Add(Convert.ToInt32(dvnew1[0]["app_no"]), value);
                                    }
                                }
                                addsumarray = addsumarray.OrderByDescending(x => x.Value).ToDictionary(x => x.Key, x => x.Value);
                                foreach (var kvp in addsumarray)
                                {
                                    string app_no = kvp.Key.ToString();
                                    string percentage = kvp.Value.ToString();
                                    ds.Tables[2].DefaultView.RowFilter = "app_no='" + Convert.ToString(app_no) + "'";
                                    dvnew1 = ds.Tables[2].DefaultView;
                                    if (dvnew1.Count > 0)
                                    {
                                        FpReport.Sheets[0].RowCount++;
                                        sno_value++;
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(sno_value);
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 1].CellType = chkcel1;
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(dvnew1[0]["Stud_name"]);
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 3].Text = Convert.ToString(dvnew1[0]["app_formno"]);
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                                        if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                                        {
                                            FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 4].Text = Convert.ToString(percentage);
                                            FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                                        }
                                        if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                        {
                                            FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 4].Text = Convert.ToString(dvnew1[0]["majorallied_percent"]);
                                            FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                                        }
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 5].Text = Convert.ToString(dvnew1[0]["date_applied"]);
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 5].HorizontalAlign = HorizontalAlign.Center;
                                        string usernem = dt.GetFunction("select USER_ID   from UserMaster where User_code='" + Convert.ToString(dvnew1[0]["usercode"]) + "' and college_code ='" + Session["collegecode"] + "'");
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 6].Text = Convert.ToString(usernem);
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 6].HorizontalAlign = HorizontalAlign.Center;
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 7].Text = Convert.ToString(dvnew1[0]["Student_Mobile"]);
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 7].HorizontalAlign = HorizontalAlign.Center;
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 8].Text = Convert.ToString(dvnew1[0]["alter_mobileno"]);
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 8].HorizontalAlign = HorizontalAlign.Center;
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 8].CellType = txt;
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 9].Text = Convert.ToString(dvnew1[0]["Cityp"]);
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                                    }
                                }
                            }
                        }
                        FpReport.Visible = true;
                        FpReport.Sheets[0].Visible = true;
                        FpReport.Sheets[0].PageSize = FpReport.Sheets[0].RowCount;
                        lblreporterror.Visible = false;
                        btn_printreport.Visible = true;
                    }
                    else
                    {
                        FpReport.Visible = false;
                        FpReport.Sheets[0].Visible = false;
                        lblreporterror.Visible = true;
                        lblreporterror.Text = "No Records Found";
                        btn_printreport.Visible = false;
                        reportnamesapn.Visible = false;
                    }
                }
            }
            if (ddledu.SelectedItem.Text == "PG")
            {
                if (ds.Tables[0].Rows.Count > 0 && ds.Tables[1].Rows.Count > 0)
                {
                    int sno_value = 0;
                    for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                    {
                        string column_name = Convert.ToString(ds.Tables[0].Rows[i]["column_name"]);
                        ds.Tables[1].DefaultView.RowFilter = "criteria_code='" + column_name + "'";
                        dvnew = ds.Tables[1].DefaultView;
                        if (dvnew.Count > 0)
                        {
                            FpReport.Sheets[0].RowCount++;
                            FpReport.Sheets[0].SpanModel.Add(FpReport.Sheets[0].RowCount - 1, 0, 1, 9);
                            FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(ds.Tables[0].Rows[i]["TextVal"] + "(" + Convert.ToString(dvnew.Count) + ")");
                            FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 0].Font.Size = FontUnit.Medium;
                            FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Left;
                            FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 0].BackColor = Color.Gray;
                            Dictionary<int, double> addsumarray = new Dictionary<int, double>();
                            ArrayList addlist = new ArrayList();
                            for (int k = 0; k < dvnew.Count; k++)
                            {
                                ds.Tables[2].DefaultView.RowFilter = "app_no='" + Convert.ToString(dvnew[k]["app_no"]) + "'";
                                dvnew1 = ds.Tables[2].DefaultView;
                                if (dvnew1.Count > 0)
                                {
                                    double value = Convert.ToDouble(dvnew1[0]["majorallied_percent"]);
                                    addsumarray.Add(Convert.ToInt32(dvnew1[0]["app_no"]), value);
                                }
                            }
                            addsumarray = addsumarray.OrderByDescending(x => x.Value).ToDictionary(x => x.Key, x => x.Value);
                            foreach (var kvp in addsumarray)
                            {
                                string app_no = kvp.Key.ToString();
                                string percentage = kvp.Value.ToString();
                                ds.Tables[2].DefaultView.RowFilter = "app_no='" + Convert.ToString(app_no) + "'";
                                dvnew1 = ds.Tables[2].DefaultView;
                                if (dvnew1.Count > 0)
                                {
                                    FpReport.Sheets[0].RowCount++;
                                    sno_value++;
                                    FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 0].Text = Convert.ToString(sno_value);
                                    FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 0].HorizontalAlign = HorizontalAlign.Center;
                                    FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 1].CellType = chkcel1;
                                    FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 1].HorizontalAlign = HorizontalAlign.Center;
                                    FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 2].Text = Convert.ToString(dvnew1[0]["Stud_name"]);
                                    FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 2].HorizontalAlign = HorizontalAlign.Center;
                                    FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 3].Text = Convert.ToString(dvnew1[0]["app_formno"]);
                                    FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 3].HorizontalAlign = HorizontalAlign.Center;
                                    if (ddledu.SelectedItem.Text.ToString().ToUpper() == "UG")
                                    {
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 4].Text = Convert.ToString(percentage);
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                                    }
                                    if (ddledu.SelectedItem.Text.ToString().ToUpper() == "PG")
                                    {
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 4].Text = Convert.ToString(dvnew1[0]["majorallied_percent"]);
                                        FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 4].HorizontalAlign = HorizontalAlign.Center;
                                    }
                                    FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 5].Text = Convert.ToString(dvnew1[0]["date_applied"]);
                                    FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 5].HorizontalAlign = HorizontalAlign.Center;
                                    string usernem = dt.GetFunction("select USER_ID   from UserMaster where User_code='" + Convert.ToString(dvnew1[0]["usercode"]) + "' and college_code ='" + Session["collegecode"] + "'");
                                    FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 6].Text = Convert.ToString(usernem);
                                    FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 6].HorizontalAlign = HorizontalAlign.Center;
                                    FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 7].Text = Convert.ToString(dvnew1[0]["Student_Mobile"]);
                                    FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 7].HorizontalAlign = HorizontalAlign.Center;
                                    FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 7].CellType = txt;
                                    FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 8].Text = Convert.ToString(dvnew1[0]["alter_mobileno"]);
                                    FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 8].HorizontalAlign = HorizontalAlign.Center;
                                    FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 8].CellType = txt;
                                    FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 9].Text = Convert.ToString(dvnew1[0]["Cityp"]);
                                    FpReport.Sheets[0].Cells[FpReport.Sheets[0].RowCount - 1, 9].HorizontalAlign = HorizontalAlign.Center;
                                }
                            }
                        }
                    }
                    FpReport.Visible = true;
                    FpReport.Sheets[0].Visible = true;
                    FpReport.Sheets[0].PageSize = FpReport.Sheets[0].RowCount;
                    lblreporterror.Visible = false;
                    btn_printreport.Visible = true;
                }
                else
                {
                    FpReport.Visible = false;
                    FpReport.Sheets[0].Visible = false;
                    lblreporterror.Visible = true;
                    lblreporterror.Text = "No Records Found";
                    btn_printreport.Visible = false;
                    reportnamesapn.Visible = false;
                }
            }
        }
        catch
        {
        }
    }
    protected void btncancelreport_click(object sender, EventArgs e)
    {
        try
        {
            reportnamesapn.Visible = false;
            ddlreporttype.SelectedIndex = 0;
            panelpopup.Visible = false;
        }
        catch
        {
        }
    }
    protected void btnadmitcard_click(object sender, EventArgs e)
    {
        try
        {
            txt_keyword.Text = "";
            //  Div2.Visible = true;
            //loadprint();
        }
        catch
        {
        }
    }
    public void loadprint()
    {
        try
        {
            Gios.Pdf.PdfDocument mydoc;
            Gios.Pdf.PdfDocument mydocnew = new Gios.Pdf.PdfDocument(PdfDocumentFormat.A4);
            Font Fontbold = new Font("Book Antiqua", 18, FontStyle.Regular);
            Font fbold = new Font("Book Antiqua", 18, FontStyle.Bold);
            Font Fontsmall = new Font("Book Antiqua", 11, FontStyle.Regular);
            Font fontname = new Font("Book Antiqua", 11, FontStyle.Bold);
            Font fontmedium = new Font("Book Antiqua", 13, FontStyle.Regular);
            Font fontmediumb = new Font("Book Antiqua", 13, FontStyle.Bold);
            Boolean saveflag = false;
            //string sign = "principal" + ddlcollege.SelectedValue.ToString() + "";
            DataSet d_value = new DataSet();
            string strquery = "select * from collinfo where college_code='" + Session["collegecode"].ToString() + "'";
            ds.Dispose();
            ds.Reset();
            ds = dt.select_method_wo_parameter(strquery, "Text");
            string Collegename = "";
            string aff = "";
            string address = ""; string collacr = "";
            if (ds.Tables[0].Rows.Count > 0)
            {
                collacr = ds.Tables[0].Rows[0]["Coll_acronymn"].ToString();
                Collegename = ds.Tables[0].Rows[0]["Collname"].ToString();
                aff = "(Affiliated to the " + ds.Tables[0].Rows[0]["university"].ToString() + ")";
                address = ds.Tables[0].Rows[0]["address1"].ToString() + " " + ds.Tables[0].Rows[0]["district"].ToString() + " - " + ds.Tables[0].Rows[0]["pincode"].ToString();
            }
            FpSpread1.SaveChanges();
            for (int i = 0; i < FpSpread1.Sheets[0].Rows.Count; i++)
            {
                int isval = 0;
                isval = Convert.ToInt32(FpSpread1.Sheets[0].Cells[i, 1].Value);
                if (isval == 1)
                {
                    try
                    {
                        mydoc = new Gios.Pdf.PdfDocument(PdfDocumentFormat.A4);
                        saveflag = true;
                        string rollno = FpSpread1.Sheets[0].Cells[i, 2].Tag.ToString();
                        string name = d2.GetFunction("select stud_name  from  applyn where app_formno='" + rollno + "'");//FpSpread1.Sheets[0].Cells[i, 1].Text.ToString();
                        string deprt = Convert.ToString(ddldept.SelectedItem.Text);
                        string course = Convert.ToString(ddldegree.SelectedItem.Text);
                        Gios.Pdf.PdfPage mypdfpage = mydoc.NewPage();
                        Gios.Pdf.PdfPage mypdfpage1 = mydocnew.NewPage();
                        int ik = 1;
                        DateTime dt_date = Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy"));
                        string updatequery = "update applyn set admitcard_date ='" + dt_date.ToString("MM/dd/yyyy") + "' where app_formno ='" + rollno + "'";
                        int d = dt.update_method_wo_parameter(updatequery, "Text");
                        while (ik <= 2)
                        {
                            dt_date = dt_date.AddDays(1);
                            if (dt_date.ToString("dddd") == "Sunday")
                            {
                                dt_date = dt_date.AddDays(1);
                            }
                            ik++;
                        }
                        string sign = "principal" + Convert.ToString(Session["collegecode"]) + "";
                        string mail_id = "";
                        string stud_phoneno = "";
                        string mailidquery = "select StuPer_Id,Student_Mobile  from applyn where app_formno ='" + rollno + "'";
                        d_value.Clear();
                        d_value = dt.select_method_wo_parameter(mailidquery, "Text");
                        if (d_value.Tables[0].Rows.Count > 0)
                        {
                            mail_id = Convert.ToString(d_value.Tables[0].Rows[0]["StuPer_Id"]);
                            stud_phoneno = Convert.ToString(d_value.Tables[0].Rows[0]["Student_Mobile"]);
                        }
                        //string upadte = "update applyn set enroll_date='" + dten + "',feedate='" + dtfee + "',Is_Enroll='1' where app_formno='" + rollno + "'";
                        //int a = d2.update_method_wo_parameter(upadte, "Text");
                        int xvlaue = 40;
                        PdfArea tete = new PdfArea(mydoc, 10, 10, 570, 820);
                        PdfRectangle pr1 = new PdfRectangle(mydoc, tete, Color.Black);
                        mypdfpage.Add(pr1);
                        PdfTextArea ptc = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                      new PdfArea(mydoc, 150, 20, 800, 30), System.Drawing.ContentAlignment.MiddleLeft, Collegename + " (Autonomous)");
                        mypdfpage.Add(ptc);
                        PdfTextArea ptc01 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                      new PdfArea(mydoc, 190, 80, 400, 30), System.Drawing.ContentAlignment.MiddleLeft, address);
                        mypdfpage.Add(ptc01);
                        PdfTextArea ptc02 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                     new PdfArea(mydoc, 180, 50, 400, 30), System.Drawing.ContentAlignment.MiddleLeft, aff);
                        mypdfpage.Add(ptc02);
                        PdfTextArea ptc0265 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                    new PdfArea(mydoc, 100, 120, 400, 30), System.Drawing.ContentAlignment.MiddleCenter, "Admission Card");
                        mypdfpage.Add(ptc0265);
                        if (File.Exists(HttpContext.Current.Server.MapPath("~/college/Left_Logo.jpeg")))//Aruna
                        {
                            PdfImage LogoImage = mydoc.NewImage(HttpContext.Current.Server.MapPath("~/college/Left_Logo.jpeg"));
                            mypdfpage.Add(LogoImage, 25, 25, 300);
                        }
                        PdfTextArea ptc07 = new PdfTextArea(fontname, System.Drawing.Color.Black,
                                                                   new PdfArea(mydoc, xvlaue, 160, 400, 30), System.Drawing.ContentAlignment.MiddleLeft, "" + collacr + " ID");
                        mypdfpage.Add(ptc07);
                        PdfTextArea ptc07ap = new PdfTextArea(fontname, System.Drawing.Color.Black,
                                                                           new PdfArea(mydoc, 100, 160, 400, 30), System.Drawing.ContentAlignment.MiddleLeft, ": " + rollno.ToString() + "");
                        mypdfpage.Add(ptc07ap);
                        //string[] spdeg = lbldegree.Text.ToString().Split('-');
                        PdfTextArea ptc071 = new PdfTextArea(fontname, System.Drawing.Color.Black,
                                                                           new PdfArea(mydoc, xvlaue, 200, 400, 30), System.Drawing.ContentAlignment.MiddleLeft, "Class");
                        mypdfpage.Add(ptc071);
                        PdfTextArea ptc071a = new PdfTextArea(fontname, System.Drawing.Color.Black,
                                                                          new PdfArea(mydoc, 100, 200, 400, 30), System.Drawing.ContentAlignment.MiddleLeft, ": " + course.ToString() + "");
                        mypdfpage.Add(ptc071a);
                        PdfTextArea ptc08 = new PdfTextArea(fontname, System.Drawing.Color.Black,
                                                                            new PdfArea(mydoc, xvlaue, 180, 400, 30), System.Drawing.ContentAlignment.MiddleLeft, "Name");
                        mypdfpage.Add(ptc08);
                        PdfTextArea ptc08na = new PdfTextArea(fontname, System.Drawing.Color.Black,
                                                                            new PdfArea(mydoc, 100, 180, 400, 30), System.Drawing.ContentAlignment.MiddleLeft, ": " + name.ToString() + "");
                        mypdfpage.Add(ptc08na);
                        PdfTextArea ptc081 = new PdfTextArea(fontname, System.Drawing.Color.Black,
                                                                          new PdfArea(mydoc, xvlaue, 220, 400, 30), System.Drawing.ContentAlignment.MiddleLeft, "Group");
                        mypdfpage.Add(ptc081);
                        PdfTextArea ptc081a = new PdfTextArea(fontname, System.Drawing.Color.Black,
                                                                          new PdfArea(mydoc, 100, 220, 400, 30), System.Drawing.ContentAlignment.MiddleLeft, ": " + deprt.ToString() + "");
                        mypdfpage.Add(ptc081a);
                        PdfTextArea ptc09 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mydoc, xvlaue, 260, 400, 30), System.Drawing.ContentAlignment.MiddleLeft, "You are provisionally admitted to the course specified above.");
                        mypdfpage.Add(ptc09);
                        PdfTextArea ptc1 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                     new PdfArea(mydoc, xvlaue, 280, 550, 40), System.Drawing.ContentAlignment.MiddleLeft, "Fees should be paid on or before  " + dt_date.ToString("dd/MM/yyyy") + " by 3 pm.");
                        mypdfpage.Add(ptc1);
                        PdfTextArea ptc2 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                     new PdfArea(mydoc, xvlaue, 310, 550, 40), System.Drawing.ContentAlignment.MiddleLeft, "Fees may be paid online to the IOB through the college website.");
                        //PdfTextArea ptc3 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                        //                                             new PdfArea(mydoc, xvlaue, 340, 500, 40), System.Drawing.ContentAlignment.MiddleLeft, "Candidates paying fees at the IOB cash counter should collect their fee challan from the Admissions");
                        //PdfTextArea ptc80 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                        //                                             new PdfArea(mydocnew, xvlaue, 355, 550, 40), System.Drawing.ContentAlignment.MiddleLeft, "Office and submit a copy of the fee paid challan in the Bursar Office on or before " + dt_date.ToString("dd/MM/yyyy") + " within 3 pm.");
                        PdfTextArea ptc4 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                     new PdfArea(mydoc, xvlaue, 340, 550, 40), System.Drawing.ContentAlignment.MiddleLeft, "Your Admission will be automatically cancelled if fee is not remitted by the date specified above.");
                        PdfTextArea ptc5 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                     new PdfArea(mydoc, xvlaue, 380, 550, 40), System.Drawing.ContentAlignment.MiddleLeft, "Enrolment details will be sent to your mail id after payment of fees.");
                        PdfTextArea ptc6 = new PdfTextArea(fontmedium, System.Drawing.Color.Black,
                                                                     new PdfArea(mydoc, xvlaue, 400, 550, 40), System.Drawing.ContentAlignment.MiddleLeft, "Note :");
                        PdfTextArea ptc61 = new PdfTextArea(fontmedium, System.Drawing.Color.Black,
                                                                     new PdfArea(mydoc, xvlaue + 50, 420, 450, 40), System.Drawing.ContentAlignment.MiddleLeft, "No change of date for the payment of fees will be granted.");
                        PdfTextArea ptc7 = new PdfTextArea(fontmedium, System.Drawing.Color.Black,
                                                                     new PdfArea(mydoc, xvlaue + 50, 440, 450, 40), System.Drawing.ContentAlignment.MiddleLeft, "Fees once paid will not be refunded.");
                        if (!File.Exists(HttpContext.Current.Server.MapPath("~/college/" + sign + ".jpeg")))
                        {
                            MemoryStream memoryStream = new MemoryStream();
                            ds.Dispose();
                            ds.Reset();
                            ds = dt.select_method_wo_parameter("select principal_sign from collinfo where college_code='" + Session["collegecode"] + "' and principal_sign is not null", "Text");
                            if (ds.Tables[0].Rows.Count > 0)
                            {
                                byte[] file = (byte[])ds.Tables[0].Rows[0]["principal_sign"];
                                memoryStream.Write(file, 0, file.Length);
                                if (file.Length > 0)
                                {
                                    System.Drawing.Image imgx = System.Drawing.Image.FromStream(memoryStream, true, true);
                                    System.Drawing.Image thumb = imgx.GetThumbnailImage(400, 400, null, IntPtr.Zero);
                                    thumb.Save(HttpContext.Current.Server.MapPath("~/college/" + sign + ".jpeg"), System.Drawing.Imaging.ImageFormat.Jpeg);
                                }
                                memoryStream.Dispose();
                                memoryStream.Close();
                            }
                        }
                        if (File.Exists(HttpContext.Current.Server.MapPath("~/college/" + sign + ".jpeg")))
                        {
                            PdfImage LogoImage = mydoc.NewImage(HttpContext.Current.Server.MapPath("~/college/" + sign + ".jpeg"));
                            mypdfpage.Add(LogoImage, 400, 650, 200);
                        }
                        PdfTextArea ptc82 = new PdfTextArea(fontmedium, System.Drawing.Color.Black,
                                                                    new PdfArea(mydoc, 400, 760, 550, 30), System.Drawing.ContentAlignment.MiddleLeft, "PRINCIPAL & SECRETARY");
                        mypdfpage.Add(ptc82);
                        mypdfpage.Add(ptc2);
                        //mypdfpage.Add(ptc3);
                        //mypdfpage.Add(ptc80);
                        mypdfpage.Add(ptc4);
                        mypdfpage.Add(ptc5);
                        mypdfpage.Add(ptc6);
                        mypdfpage.Add(ptc61);
                        mypdfpage.Add(ptc7);
                        mypdfpage.SaveToDocument();
                        PdfArea tete1 = new PdfArea(mydocnew, 10, 10, 570, 820);
                        PdfRectangle pr11 = new PdfRectangle(mydocnew, tete, Color.Black);
                        mypdfpage1.Add(pr11);
                        PdfTextArea ptc11 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                      new PdfArea(mydocnew, 150, 20, 800, 30), System.Drawing.ContentAlignment.MiddleLeft, Collegename + " (Autonomous)");
                        mypdfpage1.Add(ptc11);
                        PdfTextArea ptc011 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                      new PdfArea(mydocnew, 190, 80, 400, 30), System.Drawing.ContentAlignment.MiddleLeft, address);
                        mypdfpage1.Add(ptc011);
                        PdfTextArea ptc021 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                     new PdfArea(mydocnew, 180, 50, 400, 30), System.Drawing.ContentAlignment.MiddleLeft, aff);
                        mypdfpage1.Add(ptc021);
                        PdfTextArea ptc02651 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocnew, 100, 120, 400, 30), System.Drawing.ContentAlignment.MiddleCenter, "Admission Card");
                        mypdfpage1.Add(ptc02651);
                        if (File.Exists(HttpContext.Current.Server.MapPath("~/college/Left_Logo.jpeg")))//Aruna
                        {
                            PdfImage LogoImage = mydocnew.NewImage(HttpContext.Current.Server.MapPath("~/college/Left_Logo.jpeg"));
                            mypdfpage1.Add(LogoImage, 25, 25, 300);
                        }
                        PdfTextArea ptc0718 = new PdfTextArea(fontname, System.Drawing.Color.Black,
                                                                   new PdfArea(mydocnew, xvlaue, 160, 400, 30), System.Drawing.ContentAlignment.MiddleLeft, "MCC ID");
                        mypdfpage1.Add(ptc0718);
                        PdfTextArea ptc07ap1 = new PdfTextArea(fontname, System.Drawing.Color.Black,
                                                                           new PdfArea(mydocnew, 100, 160, 400, 30), System.Drawing.ContentAlignment.MiddleLeft, ": " + rollno.ToString() + "");
                        mypdfpage1.Add(ptc07ap1);
                        //string[] spdeg = lbldegree.Text.ToString().Split('-');
                        PdfTextArea ptc0711 = new PdfTextArea(fontname, System.Drawing.Color.Black,
                                                                           new PdfArea(mydocnew, xvlaue, 200, 400, 30), System.Drawing.ContentAlignment.MiddleLeft, "Class");
                        mypdfpage1.Add(ptc071);
                        PdfTextArea ptc071a1 = new PdfTextArea(fontname, System.Drawing.Color.Black,
                                                                          new PdfArea(mydocnew, 100, 200, 400, 30), System.Drawing.ContentAlignment.MiddleLeft, ": " + course.ToString() + "");
                        mypdfpage1.Add(ptc071a1);
                        PdfTextArea ptc0811 = new PdfTextArea(fontname, System.Drawing.Color.Black,
                                                                            new PdfArea(mydocnew, xvlaue, 180, 400, 30), System.Drawing.ContentAlignment.MiddleLeft, "Name");
                        mypdfpage1.Add(ptc0811);
                        PdfTextArea ptc08111 = new PdfTextArea(fontname, System.Drawing.Color.Black,
                                                                            new PdfArea(mydocnew, 100, 180, 400, 30), System.Drawing.ContentAlignment.MiddleLeft, ": " + name.ToString() + "");
                        mypdfpage1.Add(ptc08111);
                        PdfTextArea ptc08114 = new PdfTextArea(fontname, System.Drawing.Color.Black,
                                                                          new PdfArea(mydocnew, xvlaue, 220, 400, 30), System.Drawing.ContentAlignment.MiddleLeft, "Group");
                        mypdfpage1.Add(ptc08114);
                        PdfTextArea ptc081a5 = new PdfTextArea(fontname, System.Drawing.Color.Black,
                                                                          new PdfArea(mydocnew, 100, 220, 400, 30), System.Drawing.ContentAlignment.MiddleLeft, ": " + deprt.ToString() + "");
                        mypdfpage1.Add(ptc081a5);
                        PdfTextArea ptc0989 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mydocnew, xvlaue, 260, 400, 30), System.Drawing.ContentAlignment.MiddleLeft, "You are provisionally admitted to the course specified above.");
                        mypdfpage1.Add(ptc0989);
                        PdfTextArea ptc185 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                     new PdfArea(mydocnew, xvlaue, 280, 550, 40), System.Drawing.ContentAlignment.MiddleLeft, "Fees should be paid on or before  " + dt_date.ToString("dd/MM/yyyy") + " by 3 pm.");
                        mypdfpage1.Add(ptc185);
                        PdfTextArea ptc28 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                     new PdfArea(mydocnew, xvlaue, 310, 550, 40), System.Drawing.ContentAlignment.MiddleLeft, "Fees may be paid online to the IOB through the college website.");
                        //PdfTextArea ptc38 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                        //                                             new PdfArea(mydocnew, xvlaue, 340, 500, 40), System.Drawing.ContentAlignment.MiddleLeft, "Candidates paying fees at the IOB cash counter should collect their fee challan from the Admissions");
                        //PdfTextArea ptc801 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                        //                                            new PdfArea(mydocnew, xvlaue, 355, 550, 40), System.Drawing.ContentAlignment.MiddleLeft, "Office and submit a copy of the fee paid challan in the Bursar Office on or before " + dt_date.ToString("dd/MM/yyyy") + " within 3 pm.");
                        PdfTextArea ptc48 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                     new PdfArea(mydocnew, xvlaue, 340, 550, 40), System.Drawing.ContentAlignment.MiddleLeft, "Your Admission will be automatically cancelled if fee is not remitted by the date specified above.");
                        PdfTextArea ptc58 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                     new PdfArea(mydocnew, xvlaue, 380, 550, 40), System.Drawing.ContentAlignment.MiddleLeft, "Enrolment details will be sent to your mail id after payment of fees.");
                        PdfTextArea ptc68 = new PdfTextArea(fontmedium, System.Drawing.Color.Black,
                                                                     new PdfArea(mydocnew, xvlaue, 400, 550, 40), System.Drawing.ContentAlignment.MiddleLeft, "Note :");
                        PdfTextArea ptc618 = new PdfTextArea(fontmedium, System.Drawing.Color.Black,
                                                                     new PdfArea(mydocnew, xvlaue + 50, 420, 450, 40), System.Drawing.ContentAlignment.MiddleLeft, "No change of date for the payment of fees will be granted.");
                        PdfTextArea ptc78 = new PdfTextArea(fontmedium, System.Drawing.Color.Black,
                                                                     new PdfArea(mydocnew, xvlaue + 50, 440, 450, 40), System.Drawing.ContentAlignment.MiddleLeft, "Fees once paid will not be refunded.");
                        if (!File.Exists(HttpContext.Current.Server.MapPath("~/college/" + sign + ".jpeg")))
                        {
                            MemoryStream memoryStream = new MemoryStream();
                            ds.Dispose();
                            ds.Reset();
                            ds = dt.select_method_wo_parameter("select principal_sign from collinfo where college_code='" + Session["collegecode"] + "' and principal_sign is not null", "Text");
                            if (ds.Tables[0].Rows.Count > 0)
                            {
                                byte[] file = (byte[])ds.Tables[0].Rows[0]["principal_sign"];
                                memoryStream.Write(file, 0, file.Length);
                                if (file.Length > 0)
                                {
                                    System.Drawing.Image imgx = System.Drawing.Image.FromStream(memoryStream, true, true);
                                    System.Drawing.Image thumb = imgx.GetThumbnailImage(400, 400, null, IntPtr.Zero);
                                    thumb.Save(HttpContext.Current.Server.MapPath("~/college/" + sign + ".jpeg"), System.Drawing.Imaging.ImageFormat.Jpeg);
                                }
                                memoryStream.Dispose();
                                memoryStream.Close();
                            }
                        }
                        if (File.Exists(HttpContext.Current.Server.MapPath("~/college/" + sign + ".jpeg")))
                        {
                            PdfImage LogoImage = mydocnew.NewImage(HttpContext.Current.Server.MapPath("~/college/" + sign + ".jpeg"));
                            mypdfpage1.Add(LogoImage, 400, 650, 200);
                        }
                        PdfTextArea ptc828 = new PdfTextArea(fontmedium, System.Drawing.Color.Black,
                                                                    new PdfArea(mydocnew, 400, 760, 550, 30), System.Drawing.ContentAlignment.MiddleLeft, "PRINCIPAL & SECRETARY");
                        mypdfpage1.Add(ptc828);
                        mypdfpage1.Add(ptc28);
                        //mypdfpage1.Add(ptc38);
                        //mypdfpage1.Add(ptc801);
                        mypdfpage1.Add(ptc48);
                        mypdfpage1.Add(ptc58);
                        mypdfpage1.Add(ptc68);
                        mypdfpage1.Add(ptc618);
                        mypdfpage1.Add(ptc78);
                        mypdfpage1.SaveToDocument();
                        string appPath = HttpContext.Current.Server.MapPath("~");
                        if (appPath != "")
                        {
                            Response.Buffer = true;
                            Response.Clear();
                            string szPath = appPath + "/Report/";
                            string szFile = "" + rollno + ".pdf";
                            mydoc.SaveToFile(szPath + szFile);
                            //  mydocnew.SaveToFile(szPath + szFile);
                            //Response.ClearHeaders();
                            //Response.ClearHeaders();
                            //Response.AddHeader("Content-Disposition", "attachment; filename=" + szFile);
                            //Response.ContentType = "application/pdf";
                            //Response.WriteFile(szPath + szFile);
                        }
                        string appPath1 = HttpContext.Current.Server.MapPath("~");
                        if (appPath1 != "")
                        {
                            Response.Buffer = true;
                            Response.Clear();
                            string szPath = appPath + "/Report/";
                            string szFile = "" + ddldept.SelectedItem.Text + ".pdf";
                            // mydoc.SaveToFile(szPath + szFile);
                            mydocnew.SaveToFile(szPath + szFile);
                            Response.ClearHeaders();
                            Response.ClearHeaders();
                            Response.AddHeader("Content-Disposition", "attachment; filename=" + szFile);
                            Response.ContentType = "application/pdf";
                            Response.WriteFile(szPath + szFile);
                        }
                        sendmail(mail_id, name, rollno);
                        sendsms(stud_phoneno, rollno);
                        // FpSpread4.Sheets[0].Cells[i, 3].Locked = true;
                        //Div2.Visible = false;   
                    }
                    catch
                    {
                    }
                }
            }
            FpSpread1.SaveChanges();
            if (saveflag == true)
            {
                //ScriptManager.RegisterStartupScript(base.Page, this.GetType(), ("dialogJavascript" + this.ID), "alert(\"Admit Card Generate Generate Successfully\");", true);
                //errorspan.InnerHtml = "Admit Card Generate Generate Successfully";
                //poperrjs.Visible = true;
            }
        }
        catch
        {
        }
    }
    public void printcatewise()
    {
        try
        {
            if (FpReport.Rows.Count > 0)
            {
                string strquery = "select * from collinfo where college_code='" + Session["collegecode"].ToString() + "'";
                ds.Dispose();
                ds.Reset();
                ds = dt.select_method_wo_parameter(strquery, "Text");
                string Collegename = "";
                if (ds.Tables[0].Rows.Count > 0)
                {
                    Collegename = ds.Tables[0].Rows[0]["Collname"].ToString();
                }
                Gios.Pdf.PdfDocument mydoc = new Gios.Pdf.PdfDocument(PdfDocumentFormat.A4);
                Font Fontbold = new Font("Book Antiqua", 18, FontStyle.Regular);
                Font fbold = new Font("Book Antiqua", 14, FontStyle.Bold);
                Font Fontsmall = new Font("Book Antiqua", 8, FontStyle.Regular);
                Font fontname = new Font("Book Antiqua", 11, FontStyle.Regular);
                Font fontmedium = new Font("Book Antiqua", 13, FontStyle.Regular);
                Font fontmediumb = new Font("Book Antiqua", 13, FontStyle.Bold);
                Gios.Pdf.PdfPage mypdfpage;
                mypdfpage = mydoc.NewPage();
                if (File.Exists(HttpContext.Current.Server.MapPath("~/college/Left_Logo.jpeg")))//Aruna
                {
                    PdfImage LogoImage = mydoc.NewImage(HttpContext.Current.Server.MapPath("~/college/Left_Logo.jpeg"));
                    mypdfpage.Add(LogoImage, 20, 20, 370);
                }
                if (File.Exists(HttpContext.Current.Server.MapPath("~/college/Right_Logo.jpeg")))//Aruna
                {
                    PdfImage LogoImage = mydoc.NewImage(HttpContext.Current.Server.MapPath("~/college/Right_Logo.jpeg"));
                    mypdfpage.Add(LogoImage, 510, 20, 370);
                }
                PdfTextArea ptc = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                      new PdfArea(mydoc, 100, 20, 800, 30), System.Drawing.ContentAlignment.MiddleLeft, Collegename + " (AUTONOMOUS)");
                mypdfpage.Add(ptc);
                PdfTextArea ptc5 = new PdfTextArea(fbold, System.Drawing.Color.Black,
                                                                     new PdfArea(mydoc, 100, 45, 400, 30), System.Drawing.ContentAlignment.MiddleCenter, "DEPARTMENT OF " + Convert.ToString(ddldegree.SelectedItem.Text) + " " + Convert.ToString(ddldept.SelectedItem.Text).ToUpper() + "");
                mypdfpage.Add(ptc5);
                PdfTextArea ptc1 = new PdfTextArea(fontmedium, System.Drawing.Color.Black,
                                                                     new PdfArea(mydoc, 100, 70, 400, 30), System.Drawing.ContentAlignment.MiddleCenter, "List Recommended for admission as on " + System.DateTime.Now.ToString("dd/MM/yyyy") + "");
                mypdfpage.Add(ptc1);
                PdfTextArea ptc10 = new PdfTextArea(fontname, System.Drawing.Color.Black,
                                                                   new PdfArea(mydoc, 60, 100, 300, 30), System.Drawing.ContentAlignment.MiddleLeft, "Stream  : " + ddltype.SelectedItem.Text + "");
                mypdfpage.Add(ptc10);
                PdfTextArea ptc11 = new PdfTextArea(fontname, System.Drawing.Color.Black,
                                                                   new PdfArea(mydoc, 60, 120, 300, 30), System.Drawing.ContentAlignment.MiddleLeft, "Course  : " + ddledu.SelectedItem.Text + "");
                mypdfpage.Add(ptc11);
                Gios.Pdf.PdfTable table1;
                ArrayList addcolumn = new ArrayList();
                if (FpReport.Rows.Count <= 25)
                {
                    for (int col = 0; col < FpReport.Columns.Count; col++)
                    {
                        if (FpReport.Sheets[0].Columns[col].Visible != false)
                        {
                            addcolumn.Add(FpReport.Sheets[0].ColumnHeader.Cells[0, col].Text);
                        }
                    }
                    table1 = mydoc.NewTable(Fontsmall, FpReport.Rows.Count + 1, addcolumn.Count, 1);
                    table1.VisibleHeaders = false;
                    table1.SetBorders(Color.Black, 1, BorderType.CompleteGrid);
                    for (int col1 = 0; col1 < addcolumn.Count; col1++)
                    {
                        string columname = Convert.ToString(Convert.ToString(addcolumn[col1]));
                        if (columname == "Total Percentage" || columname == "Application Date" || columname == "User Name")
                        {
                            table1.Cell(0, col1).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table1.Cell(0, col1).SetContent(Convert.ToString(addcolumn[col1]));
                        }
                        else
                        {
                            table1.Cell(0, col1).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table1.Cell(0, col1).SetContent(Convert.ToString(addcolumn[col1]));
                        }
                    }
                    for (int row = 0; row < FpReport.Rows.Count; row++)
                    {
                        for (int col = 0; col < addcolumn.Count; col++)
                        {
                            if (col != 1)
                            {
                                string columname = Convert.ToString(Convert.ToString(addcolumn[col]));
                                if (columname == "Total Percentage" || columname == "Application Date" || columname == "User Name" || Convert.ToString(col) == "0")
                                {
                                    table1.Cell(row + 1, col).SetContentAlignment(ContentAlignment.MiddleCenter);
                                    table1.Cell(row + 1, col).SetContent(Convert.ToString(FpReport.Sheets[0].Cells[row, col].Text));
                                }
                                else
                                {
                                    table1.Cell(row + 1, col).SetContentAlignment(ContentAlignment.MiddleLeft);
                                    table1.Cell(row + 1, col).SetContent(Convert.ToString(FpReport.Sheets[0].Cells[row, col].Text));
                                }
                            }
                            else
                            {
                                int vlaue = Convert.ToInt32(FpReport.Sheets[0].Cells[row, col].Value);
                                if (vlaue == 1)
                                {
                                    table1.Cell(row + 1, col).SetContentAlignment(ContentAlignment.MiddleCenter);
                                    table1.Cell(row + 1, col).SetContent("WL");
                                }
                                else
                                {
                                    table1.Cell(row + 1, col).SetContentAlignment(ContentAlignment.MiddleLeft);
                                    table1.Cell(row + 1, col).SetContent("");
                                }
                            }
                        }
                    }
                    Gios.Pdf.PdfTablePage myprov_pdfpage1 = table1.CreateTablePage(new Gios.Pdf.PdfArea(mydoc, 20, 150, 550, 550));
                    mypdfpage.Add(myprov_pdfpage1);
                    PdfTextArea ptc2 = new PdfTextArea(fontmedium, System.Drawing.Color.Black,
                                                                  new PdfArea(mydoc, 40, 750, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Hod Signature");
                    mypdfpage.Add(ptc2);
                    PdfTextArea ptc3 = new PdfTextArea(fontmedium, System.Drawing.Color.Black,
                                                                 new PdfArea(mydoc, 200, 750, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Staff-in-Charge Admission");
                    mypdfpage.Add(ptc3);
                    PdfTextArea ptc4 = new PdfTextArea(fontmedium, System.Drawing.Color.Black,
                                                                 new PdfArea(mydoc, 400, 750, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Principal & Secretary Signature");
                    mypdfpage.Add(ptc4);
                    string appPath = HttpContext.Current.Server.MapPath("~");
                    if (appPath != "")
                    {
                        string szPath = appPath + "/Report/";
                        string szFile = "Format1.pdf";
                        mypdfpage.SaveToDocument();
                        mydoc.SaveToFile(szPath + szFile);
                        Response.ClearHeaders();
                        Response.AddHeader("Content-Disposition", "attachment; filename=" + szFile);
                        Response.ContentType = "application/pdf";
                        Response.WriteFile(szPath + szFile);
                    }
                }
                else
                {
                    Gios.Pdf.PdfTablePage myprov_pdfpage1;
                    int subcountvlaue = FpReport.Sheets[0].Rows.Count;
                    int columncount = 0;
                    int check = 0;
                    for (int col = 0; col < FpReport.Columns.Count; col++)
                    {
                        if (FpReport.Sheets[0].Columns[col].Visible != false)
                        {
                            addcolumn.Add(FpReport.Sheets[0].ColumnHeader.Cells[0, col].Text);
                        }
                    }
                    table1 = mydoc.NewTable(Fontsmall, 25 + 1, addcolumn.Count, 1);
                    table1.VisibleHeaders = false;
                    table1.SetBorders(Color.Black, 1, BorderType.CompleteGrid);
                    bool firstflage = false;
                    int count = 0;
                    while (subcountvlaue > 25)
                    {
                        if (count == 0)
                        {
                            count = 25;
                        }
                        else
                        {
                            count = count + 25;
                        }
                        subcountvlaue = subcountvlaue - 25;
                        if (check != 0)
                        {
                            if (firstflage == true)
                            {
                                myprov_pdfpage1 = table1.CreateTablePage(new Gios.Pdf.PdfArea(mydoc, 20, 50, 550, 700));
                                mypdfpage.Add(myprov_pdfpage1);
                                columncount = columncount + 25;
                                mypdfpage.SaveToDocument();
                            }
                            else
                            {
                                myprov_pdfpage1 = table1.CreateTablePage(new Gios.Pdf.PdfArea(mydoc, 20, 150, 550, 700));
                                mypdfpage.Add(myprov_pdfpage1);
                                columncount = columncount + 25;
                                mypdfpage.SaveToDocument();
                            }
                            mypdfpage = mydoc.NewPage();
                            table1 = mydoc.NewTable(Fontsmall, 25 + 1, addcolumn.Count, 1);
                            table1.VisibleHeaders = false;
                            table1.SetBorders(Color.Black, 1, BorderType.CompleteGrid);
                            firstflage = true;
                        }
                        for (int col1 = 0; col1 < addcolumn.Count; col1++)
                        {
                            string columname = Convert.ToString(Convert.ToString(addcolumn[col1]));
                            if (columname == "Total Percentage" || columname == "Application Date" || columname == "User Name")
                            {
                                table1.Cell(0, col1).SetContentAlignment(ContentAlignment.MiddleCenter);
                                table1.Cell(0, col1).SetContent(Convert.ToString(addcolumn[col1]));
                            }
                            else
                            {
                                table1.Cell(0, col1).SetContentAlignment(ContentAlignment.MiddleCenter);
                                table1.Cell(0, col1).SetContent(Convert.ToString(addcolumn[col1]));
                            }
                        }
                        int trow = 0;
                        for (int row = columncount; row < count; row++)
                        {
                            for (int col = 0; col < addcolumn.Count; col++)
                            {
                                if (col != 1)
                                {
                                    string columname = Convert.ToString(Convert.ToString(addcolumn[col]));
                                    if (columname == "Total Percentage" || columname == "Application Date" || columname == "User Name" || Convert.ToString(col) == "0")
                                    {
                                        table1.Cell(trow + 1, col).SetContentAlignment(ContentAlignment.MiddleCenter);
                                        table1.Cell(trow + 1, col).SetContent(Convert.ToString(FpReport.Sheets[0].Cells[row, col].Text));
                                    }
                                    else
                                    {
                                        table1.Cell(trow + 1, col).SetContentAlignment(ContentAlignment.MiddleLeft);
                                        table1.Cell(trow + 1, col).SetContent(Convert.ToString(FpReport.Sheets[0].Cells[row, col].Text));
                                    }
                                }
                                else
                                {
                                    int vlaue = Convert.ToInt32(FpReport.Sheets[0].Cells[row, col].Value);
                                    if (vlaue == 1)
                                    {
                                        table1.Cell(trow + 1, col).SetContentAlignment(ContentAlignment.MiddleCenter);
                                        table1.Cell(trow + 1, col).SetContent("WL");
                                    }
                                    else
                                    {
                                        table1.Cell(trow + 1, col).SetContentAlignment(ContentAlignment.MiddleLeft);
                                        table1.Cell(trow + 1, col).SetContent("");
                                    }
                                }
                            }
                            trow++;
                        }
                        check++;
                    }
                    if (firstflage == true)
                    {
                        myprov_pdfpage1 = table1.CreateTablePage(new Gios.Pdf.PdfArea(mydoc, 20, 50, 550, 700));
                        mypdfpage.Add(myprov_pdfpage1);
                        mypdfpage.SaveToDocument();
                    }
                    else
                    {
                        myprov_pdfpage1 = table1.CreateTablePage(new Gios.Pdf.PdfArea(mydoc, 20, 150, 550, 700));
                        mypdfpage.Add(myprov_pdfpage1);
                        mypdfpage.SaveToDocument();
                    }
                    if (subcountvlaue <= 25)
                    {
                        mypdfpage = mydoc.NewPage();
                        table1 = mydoc.NewTable(Fontsmall, subcountvlaue + 1, addcolumn.Count, 1);
                        table1.VisibleHeaders = false;
                        table1.SetBorders(Color.Black, 1, BorderType.CompleteGrid);
                        columncount = columncount + 25;
                        for (int col1 = 0; col1 < addcolumn.Count; col1++)
                        {
                            string columname = Convert.ToString(Convert.ToString(addcolumn[col1]));
                            if (columname == "Total Percentage" || columname == "Application Date" || columname == "User Name")
                            {
                                table1.Cell(0, col1).SetContentAlignment(ContentAlignment.MiddleCenter);
                                table1.Cell(0, col1).SetContent(Convert.ToString(addcolumn[col1]));
                            }
                            else
                            {
                                table1.Cell(0, col1).SetContentAlignment(ContentAlignment.MiddleCenter);
                                table1.Cell(0, col1).SetContent(Convert.ToString(addcolumn[col1]));
                            }
                        }
                        int trow = 0;
                        for (int row = columncount; row < FpReport.Sheets[0].Rows.Count; row++)
                        {
                            for (int col = 0; col < addcolumn.Count; col++)
                            {
                                if (col != 1)
                                {
                                    string columname = Convert.ToString(Convert.ToString(addcolumn[col]));
                                    if (columname == "Total Percentage" || columname == "Application Date" || columname == "User Name" || Convert.ToString(col) == "0")
                                    {
                                        table1.Cell(trow + 1, col).SetContentAlignment(ContentAlignment.MiddleCenter);
                                        table1.Cell(trow + 1, col).SetContent(Convert.ToString(FpReport.Sheets[0].Cells[row, col].Text));
                                    }
                                    else
                                    {
                                        table1.Cell(trow + 1, col).SetContentAlignment(ContentAlignment.MiddleLeft);
                                        table1.Cell(trow + 1, col).SetContent(Convert.ToString(FpReport.Sheets[0].Cells[row, col].Text));
                                    }
                                }
                                else
                                {
                                    int vlaue = Convert.ToInt32(FpReport.Sheets[0].Cells[row, col].Value);
                                    if (vlaue == 1)
                                    {
                                        table1.Cell(trow + 1, col).SetContentAlignment(ContentAlignment.MiddleCenter);
                                        table1.Cell(trow + 1, col).SetContent("WL");
                                    }
                                    else
                                    {
                                        table1.Cell(trow + 1, col).SetContentAlignment(ContentAlignment.MiddleLeft);
                                        table1.Cell(trow + 1, col).SetContent("");
                                    }
                                }
                            }
                            trow++;
                        }
                        myprov_pdfpage1 = table1.CreateTablePage(new Gios.Pdf.PdfArea(mydoc, 20, 50, 550, 700));
                        mypdfpage.Add(myprov_pdfpage1);
                        PdfTextArea ptc2 = new PdfTextArea(fontmedium, System.Drawing.Color.Black,
                                                                 new PdfArea(mydoc, 40, 750, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Hod Signature");
                        mypdfpage.Add(ptc2);
                        PdfTextArea ptc3 = new PdfTextArea(fontmedium, System.Drawing.Color.Black,
                                                                     new PdfArea(mydoc, 200, 750, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Staff-in-Charge Admission");
                        mypdfpage.Add(ptc3);
                        PdfTextArea ptc4 = new PdfTextArea(fontmedium, System.Drawing.Color.Black,
                                                                     new PdfArea(mydoc, 400, 750, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Principal & Secretary Signature");
                        mypdfpage.Add(ptc4);
                        string appPath = HttpContext.Current.Server.MapPath("~");
                        if (appPath != "")
                        {
                            string szPath = appPath + "/Report/";
                            string szFile = "Format1.pdf";
                            mypdfpage.SaveToDocument();
                            mydoc.SaveToFile(szPath + szFile);
                            Response.ClearHeaders();
                            Response.AddHeader("Content-Disposition", "attachment; filename=" + szFile);
                            Response.ContentType = "application/pdf";
                            Response.WriteFile(szPath + szFile);
                        }
                    }
                }
            }
        }
        catch
        {
        }
    }
    protected void btn_printreport_Click(object sender, EventArgs e)
    {
        try
        {
            printcatewise();
        }
        catch
        {
        }
    }
    protected void btnpopup_clcik(object sender, EventArgs e)
    {
        poperrjs.Visible = false;
    }
    protected void lnkmng_Clcik(object sender, EventArgs e)
    {
        try
        {
            managementflage = true;
            lnkmng.ForeColor = System.Drawing.Color.Green;
            lnkall.ForeColor = System.Drawing.Color.Blue;
            lnkoc.ForeColor = System.Drawing.Color.Blue;
            lnkst.ForeColor = System.Drawing.Color.Blue;
            lnksca.ForeColor = System.Drawing.Color.Blue;
            lnksc.ForeColor = System.Drawing.Color.Blue;
            lnkmbcdnc.ForeColor = System.Drawing.Color.Blue;
            lnkbcm.ForeColor = System.Drawing.Color.Blue;
            lnkbc.ForeColor = System.Drawing.Color.Blue;
            lnkchirstian.ForeColor = System.Drawing.Color.Blue;
            ckbx.Checked = false;
            string textval = " select * from textvaltable where TextCriteria='Mngt' and college_code='" + Session["collegecode"].ToString() + "'";
            ds.Clear();
            ds = dt.select_method_wo_parameter(textval, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                textcode = Convert.ToString(ds.Tables[0].Rows[0]["TextCode"]);
                ViewState["text_code_value"] = textcode;
                ViewState["text_type"] = "Community";
                string query = "select allot,priority,allot_Confirm  from admitcolumnset where college_code='" + Convert.ToString(Session["collegecode"]) + "' and textcriteria ='Management' and column_name ='" + textcode + "' and setcolumn ='" + ddldept.SelectedItem.Value + "'";
                ds.Clear();
                ds = dt.select_method_wo_parameter(query, "Text");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    string alote = Convert.ToString(ds.Tables[0].Rows[0]["allot"]);
                    string priority = Convert.ToString(ds.Tables[0].Rows[0]["priority"]);
                    string confirmalote = Convert.ToString(ds.Tables[0].Rows[0]["allot_Confirm"]);
                    int count = 0;
                    if (priority.Trim() != "" && priority != null)
                    {
                        if (confirmalote.Trim() != "" && confirmalote != null && alote.Trim() != "" && alote != null)
                        {
                            count = Convert.ToInt32(priority) - Convert.ToInt32(confirmalote);
                            lbltotalfeepaid.Text = "Selected : " + Convert.ToInt32(alote) + "";
                            lbltotalfeepaid.Visible = true;
                            lbltotalfeepaid_value.Text = "Admitted : " + Convert.ToInt32(confirmalote) + "";
                            lbltotalfeepaid_value.Visible = true;
                        }
                        else
                        {
                            count = Convert.ToInt32(priority);
                            lbltotalfeepaid.Text = "Selected : 0";
                            lbltotalfeepaid.Visible = true;
                            lbltotalfeepaid_value.Text = "Admitted : 0";
                            lbltotalfeepaid_value.Visible = true;
                        }
                    }
                    else
                    {
                        lbltotalfeepaid.Text = "Selected :  0";
                        lbltotalfeepaid.Visible = true;
                        lbltotalfeepaid_value.Text = "Admitted : 0";
                        lbltotalfeepaid_value.Visible = true;
                    }
                    if (alote.Trim() != "" && alote != null)
                    {
                        lnkmng.Text = "Manag(" + count + ")(" + alote + "/" + priority + ")";
                    }
                    else
                    {
                        lnkmng.Text = "Manag(" + count + ")";
                    }
                }
            }
            if (Convert.ToInt32(ViewState["spvl"]) != 1)
            {
                orderflage = true;
            }
            Button1_Click(sender, e);
        }
        catch
        {
        }
    }
    protected void Button4_clcik(object sender, EventArgs e)
    {
        try
        {
            loadprint();
        }
        catch
        {
        }
    }
    public void sendmail(string mail, string name, string app)
    {
        try
        {
            string send_mail = "";
            string send_pw = "";
            string to_mail = Convert.ToString(mail);
            // string bodytext = "Hi Boy";
            string strstuname = Convert.ToString(name);
            string strquery = "select massemail,masspwd,Coll_acronymn from collinfo where college_code = " + Session["collegecode"] + " ";
            ds.Clear();
            ds = dt.select_method_wo_parameter(strquery, "Text");
            string colacr = "";
            if (ds.Tables[0].Rows.Count > 0)
            {
                send_mail = Convert.ToString(ds.Tables[0].Rows[0]["massemail"]);
                send_pw = Convert.ToString(ds.Tables[0].Rows[0]["masspwd"]);
                colacr = Convert.ToString(ds.Tables[0].Rows[0]["Coll_acronymn"]);
            }
            if (send_mail.Trim() != "" && send_pw.Trim() != "" && to_mail.Trim() != "")
            {
                string subtext = "" + colacr + " Admission-Regarding";
                SmtpClient Mail = new SmtpClient("smtp.gmail.com", 587);
                MailMessage mailmsg = new MailMessage();
                MailAddress mfrom = new MailAddress(send_mail);
                mailmsg.From = mfrom;
                mailmsg.To.Add(to_mail);
                mailmsg.Subject = subtext;
                mailmsg.IsBodyHtml = true;
                // mailmsg.Body = "Hi";
                mailmsg.Body = mailmsg.Body + strstuname;
                mailmsg.Body = mailmsg.Body + "<br><br>Thank You...";
                string appPath = HttpContext.Current.Server.MapPath("~");
                if (appPath != "")
                {
                    string szPath = appPath + "/Report/";
                    string szFile = app + ".pdf";
                    string attachementpath = szPath + szFile;
                    if (File.Exists(HttpContext.Current.Server.MapPath("~/Report/" + szFile + "")))
                    {
                        Attachment data = new Attachment(attachementpath);
                        mailmsg.Attachments.Add(data);
                    }
                }
                Mail.EnableSsl = true;
                NetworkCredential credentials = new NetworkCredential(send_mail, send_pw);
                Mail.UseDefaultCredentials = false;
                Mail.Credentials = credentials;
                Mail.Send(mailmsg);
            }
        }
        catch
        {
        }
    }
    public void sendsms(string number, string app)
    {
        try
        {
            int ik = 1;
            DateTime dt_date = Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy"));
            while (ik <= 2)
            {
                dt_date = dt_date.AddDays(1);
                if (dt_date.ToString("dddd") == "Sunday")
                {
                    dt_date = dt_date.AddDays(1);
                }
                ik++;
            }
            string Mobile_no = Convert.ToString(number);
            string user_id = "";
            string SenderID = "";
            string Password = "";
            string stud_phoneno = string.Empty;
            string rollno = string.Empty;
            string name = string.Empty;
            string mail_id = string.Empty;
            string getgroup = "";
            string type = "";
            string todaydate = System.DateTime.Now.ToString("dd/MM/yyyy");
            string[] splitdate = todaydate.Split('/');
            DateTime dt1 = Convert.ToDateTime(splitdate[1] + "/" + splitdate[0] + "/" + splitdate[2]);
            string ssr = "select * from Track_Value where college_code='" + Session["collegecode"] + "'";
            ds.Clear();
            ds = dt.select_method_wo_parameter(ssr, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                user_id = Convert.ToString(ds.Tables[0].Rows[0]["SMS_User_ID"]);
            }
            if (user_id.Trim() != "")
            {
                string collacr = d2.GetFunction("select Coll_acronymn from collinfo where college_code='" + Convert.ToString(Session["collegecode"]) + "'");
                string det = d2.GetFunction("select convert(varchar,stud_name)+'$'+convert(varchar,app_formno)+'$'+CONVERT(varchar,isnull(Student_Mobile,0))+'$'+isnull(c.Course_Name+'('+dt.Dept_Name+')','') +'$'+isnull(c.type,'') from applyn a,Degree d,Department dt,Course c where a.degree_code =d.Degree_Code and d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and a.app_formno='" + app + "'");
                if (det.Trim() != "")
                {
                    string[] val = det.Split('$');
                    if (val.Length > 0)
                    {
                        name = Convert.ToString(val[0]);
                        rollno = Convert.ToString(val[1]);
                        stud_phoneno = Convert.ToString(val[2]);
                        getgroup = Convert.ToString(val[3]);
                        type = Convert.ToString(val[4]);
                    }
                }
                string Msg = name.ToUpper() + " (" + rollno + ")  IS PROVISONALLY ADMITTED IN " + getgroup + " (" + type + " ) THANK YOU. ";//COLLEGE OPENS ON

                //string Msg = " Dear Candidate,Your application no:" + app + " and you are successfully admitted in " + course + " in " + collacr + ",Thank you.";
                //string Msg = "" + collacr + " ID (Application Number) :  " + app + "; You are admitted. ";
                //You are provisionally admitted. Last date for payment of fees is " + dt_date.ToString("dd/MM/yyyy") + " Admission Card is sent to your E-mail.";
                //string Msg = "";

                string getval = dt.GetUserapi(user_id);
                string[] spret = getval.Split('-');
                if (spret.GetUpperBound(0) == 1)
                {
                    SenderID = spret[0].ToString();
                    Password = spret[0].ToString();
                }
                d2.send_sms(user_id, Convert.ToString(Session["collegecode"]), user_code, Mobile_no, Msg, "0");
            }
        }
        catch
        {
        }
    }
    public void smsreport(string uril, string isstaff, DateTime dt1, string phone, string msg)
    {
        try
        {
            string phoneno = phone;
            string message = msg;
            string date = dt1.ToString("MM/dd/yyyy") + ' ' + DateTime.Now.ToString("hh:mm:ss");
            WebRequest request = WebRequest.Create(uril);
            WebResponse response = request.GetResponse();
            Stream data = response.GetResponseStream();
            StreamReader sr = new StreamReader(data);
            string strvel = sr.ReadToEnd();
            string groupmsgid = "";
            groupmsgid = strvel;
            int sms = 0;
            string smsreportinsert = "";
            smsreportinsert = "insert into smsdeliverytrackmaster (mobilenos,groupmessageid,message,college_code,isstaff,date)values( '" + phoneno + "','" + groupmsgid + "','" + message + "','" + Session["collegecode"].ToString() + "','" + isstaff + "','" + date + "')";
            sms = dt.update_method_wo_parameter(smsreportinsert, "Text");
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    protected void btnadmitprint_click(object sender, EventArgs e)
    {
        try
        {
            string pagename = "";
            string degreedetails = "";
            if (TabContainer1.ActiveTabIndex == 3)
            {
                DateTime dt_date = Convert.ToDateTime(System.DateTime.Now.ToString("MM/dd/yyyy"));
                int ik = 1;
                while (ik <= 2)
                {
                    dt_date = dt_date.AddDays(1);
                    if (dt_date.ToString("dddd") == "Sunday")
                    {
                        dt_date = dt_date.AddDays(1);
                    }
                    ik++;
                }
                // string degreedetails = "Office of the Controller of Examinations $Passing Board Report For Examination  - " + ddlmonth.SelectedItem.ToString() + "-" + ddlyear.SelectedItem.ToString() + " " + rename + "@" + sthe1 + sthe2 + "@" + sthe3 + sthe4 + sthe5 + "";
                degreedetails = "Department of " + ddldept.SelectedItem.Text + " $Selection list for admission 2016 - 17" + '@' + "Stream:   " + ddltype.SelectedItem.Text + "" + '@' + "Education Level:   " + ddledu.SelectedItem.Text + "" + '@' + "Course:   " + ddldegree.SelectedItem.Text + "" + '@' + "Date: " + System.DateTime.Now.ToString("dd/MM/yyyy") + "                                                                                                               Last Date To Pay Fees: " + dt_date.ToString("dd/MM/yyyy") + "";
                pagename = "Selection_Process.aspx";
                Printcontrol.loadspreaddetails(FpSpread4, pagename, degreedetails);
                Printcontrol.Visible = true;
            }
            else if (TabContainer1.ActiveTabIndex == 4)
            {
                pagename = "Selection_Process.aspx";
                Printcontrol.loadspreaddetails(spreadFeeConfirm, pagename, degreedetails);
                Printcontrol.Visible = true;
            }
        }
        catch
        {
        }
    }
    protected void btnleft_click(object sender, EventArgs e)
    {
        try
        {
            bool setflage = false;
            FpSpread4.SaveChanges();
            for (int i = 0; i < FpSpread4.Sheets[0].Rows.Count; i++)
            {
                int isval = 0;
                isval = Convert.ToInt32(FpSpread4.Sheets[0].Cells[i, 3].Value);
                if (isval == 1)
                {
                    setflage = true;
                    string app_formno = Convert.ToString(FpSpread4.Sheets[0].Cells[i, 2].Tag);
                    string app_no = Convert.ToString(FpSpread4.Sheets[0].Cells[i, 2].Text);
                    string name = Convert.ToString(FpSpread4.Sheets[0].Cells[i, 1].Text);
                    string criteriacode = Convert.ToString(FpSpread4.Sheets[0].Cells[i, 1].Tag);
                    string alotevalue = dt.GetFunction("select allot_Confirm  from admitcolumnset where setcolumn ='" + ddldept.SelectedItem.Value + "' and column_name ='" + criteriacode + "' and college_code =" + college_code + "");
                    int allote = 0;
                    if (alotevalue.Trim() != "")
                    {
                        allote = Convert.ToInt32(alotevalue) - 1;
                    }
                    string updataquery = "update selectcriteria set isapprove =5,admit_confirm='0' where app_no ='" + app_no + "' and isapprove =4 and criteria_Code ='" + criteriacode + "' and degree_code ='" + ddldept.SelectedItem.Value + "'";
                    updataquery = updataquery + " update admitcolumnset set allot_Confirm ='" + allote + "' where setcolumn ='" + ddldept.SelectedItem.Value + "' and column_name ='" + criteriacode + "' and college_code =" + college_code + "";
                    updataquery = updataquery + "  update applyn set selection_status='1', admission_status ='0' where app_no ='" + app_no + "'";
                    updataquery = updataquery + "  if exists(select * from Registration where App_No='" + app_no + "' and Stud_Name='" + name + "' and Batch_Year='" + txtbatch.Text + "' and   degree_code='" + ddldept.SelectedValue + "' and  college_code='" + college_code + "' ) update Registration set DelFlag='1' where App_No='" + app_no + "'";
                    int up = dt.update_method_wo_parameter(updataquery, "Text");
                }
            }
            if (setflage == true)
            {
                errorspan.InnerHtml = "Moved Successfully";
                poperrjs.Visible = true;
            }
            else
            {
                errorspan.InnerHtml = "Please Select Any one Student";
                poperrjs.Visible = true;
            }
            Button1_Click(sender, e);
        }
        catch
        {
        }
    }
    protected void btnfeeconfirm_clcik(object sender, EventArgs e)
    {
        List<string> appNoList = new List<string>();
        ListItem feecategory = getFeecategory();
        if (checkedOK(out appNoList, FpSpread4))//
        {
            challanConfirm(appNoList, feecategory);
        }
        else
        {
            errorspan.InnerHtml = "No Students Selected";
            poperrjs.Visible = true;
        }
        //try
        //{
        //    FpSpread4.SaveChanges();
        //    bool testflage = false;
        //    // int count = 0;
        //    if (FpSpread4.Rows.Count > 0)
        //    {
        //        //for (int row = 0; row < FpSpread4.Rows.Count; row++)
        //        //{
        //        //    if (FpSpread4.Sheets[0].Cells[row, FpSpread4.Columns.Count - 1].Locked != true)
        //        //    {
        //        //        int isval1 = Convert.ToInt32(FpSpread4.Sheets[0].Cells[row, FpSpread4.Columns.Count - 1].Value);
        //        //        if (isval1 == 1)
        //        //        {
        //        //            count++;
        //        //        }
        //        //    }
        //        //}
        //        //int checkvalue = 0;
        //        //string value = Convert.ToString(Label69.Text);
        //        //if (value.Trim() != "")
        //        //{
        //        //    if (Convert.ToInt32(value) >= count)
        //        //    {
        //        //        checkvalue = Convert.ToInt32(value) - Convert.ToInt32(count);
        //        //    }
        //        //    else
        //        //    {
        //        //        checkvalue = -1;
        //        //    }
        //        //}
        //        //if (checkvalue >= 0)
        //        //{
        //        for (int row = 0; row < FpSpread4.Rows.Count; row++)
        //        {
        //            if (FpSpread4.Sheets[0].Cells[row, FpSpread4.Columns.Count - 1].Locked != true)
        //            {
        //                int isval1 = Convert.ToInt32(FpSpread4.Sheets[0].Cells[row, FpSpread4.Columns.Count - 1].Value);
        //                if (isval1 == 1)
        //                {
        //                    //if (Label69.Text != "0")
        //                    //{
        //                    testflage = true;
        //                    FpSpread4.Sheets[0].Cells[row, FpSpread4.Columns.Count - 1].Locked = true;
        //                    FpSpread4.Sheets[0].Rows[row].BackColor = Color.LightBlue;
        //                    string cricode = Convert.ToString(FpSpread4.Sheets[0].Cells[row, 1].Tag);
        //                    string app_no = Convert.ToString(FpSpread4.Sheets[0].Cells[row, 2].Text);
        //                    string app_fromno = Convert.ToString(FpSpread4.Sheets[0].Cells[row, 2].Tag);
        //                    string stud_name = Convert.ToString(FpSpread4.Sheets[0].Cells[row, 1].Text);
        //                    int inc = 0;
        //                    string relig = "select * from admitcolumnset where (TextCriteria='community' or TextCriteria='relig' or textcriteria='Management')  and priority!='0'  and  setcolumn='" + ddldept.SelectedItem.Value + "' and college_code='" + college_code + "' and column_name='" + cricode + "'";
        //                    DataSet ds21 = new DataSet();
        //                    ds21 = dt.select_method_wo_parameter(relig, "text");
        //                    if (ds21.Tables[0].Rows.Count > 0)
        //                    {
        //                        string privalue = Convert.ToString(ds21.Tables[0].Rows[0]["priority"]);
        //                        string seat = Convert.ToString(ds21.Tables[0].Rows[0]["allot_Confirm"]);
        //                        //if (privalue.Trim() != "" && privalue != null)
        //                        //{
        //                        if (seat.Trim() != "" && seat != null)
        //                        {
        //                            //if (Convert.ToInt32(privalue) > Convert.ToInt32(seat))
        //                            //{
        //                            inc = Convert.ToInt32(seat) + 1;
        //                            //}
        //                            //else
        //                            //{
        //                            //}
        //                        }
        //                        else
        //                        {
        //                            inc++;
        //                        }
        //                        //}
        //                        string rel = "update admitcolumnset set allot_Confirm='" + inc + "' where setcolumn='" + ddldept.SelectedItem.Value + "' and (TextCriteria='community' or TextCriteria='relig' or textcriteria ='Management') and college_code='" + college_code + "' and column_name='" + cricode + "'";
        //                        rel = rel + "  update selectcriteria set admit_confirm='1',isapprove = 4  where app_no ='" + app_no + "' and degree_code ='" + ddldept.SelectedItem.Value + "' and college_code='" + college_code + "' and criteria_Code ='" + cricode + "'";
        //                        //rel = rel + "  insert into selectcriteria(app_no ,usercode,degree_code ,college_code ,isapprove ,select_date,isview,criteria_Code ,admit_confirm) values  ('"+app_no +"','','','','','','','','')";
        //                        rel = rel + "  update applyn set selection_status='1', admission_status ='1' where app_no ='" + app_no + "'";
        //                        rel = rel + "  if exists(select * from Registration where App_No='" + app_no + "' and Adm_Date='" + System.DateTime.Now.ToString("yyy/MM/dd") + "' and Stud_Name='" + stud_name + "' and Batch_Year='" + txtbatch.Text + "' and   degree_code='" + ddldept.SelectedValue + "' and  college_code='" + college_code + "' )  delete from Registration where App_No='" + app_no + "' and Adm_Date='" + System.DateTime.Now.ToString("yyy/MM/dd") + "' and Stud_Name='" + stud_name + "' and Batch_Year='" + txtbatch.Text + "' and   degree_code='" + ddldept.SelectedValue + "' and  college_code='" + college_code + "' insert into Registration    (App_No,Adm_Date,Roll_Admit,Roll_No,RollNo_Flag,Reg_No,Stud_Name,Batch_Year,degree_code,college_code,CC,DelFlag,Exam_Flag,Current_Semester)values('" + app_no + "','" + System.DateTime.Now.ToString("yyy/MM/dd") + "','" + app_fromno + "','" + app_fromno + "','1','" + app_fromno + "','" + stud_name + "','" + txtbatch.Text + "','" + ddldept.SelectedValue + "','" + college_code + "','0','0','OK','1')";
        //                        rel = rel + "  update ChallanFeeDet set Roll_Admit ='" + app_fromno + "' where App_FormNo ='" + app_fromno + "'";
        //                        rel = rel + "  update fee_allot set roll_admit ='" + app_fromno + "' where app_formno ='" + app_fromno + "'";
        //                        rel = rel + "  update fee_status set roll_admit ='" + app_fromno + "' where app_formno ='" + app_fromno + "'";
        //                        int f = dt.update_method_wo_parameter(rel, "text");
        //                    }
        //                    //}
        //                    //else
        //                    //{
        //                    //    errorspan.InnerHtml = "No Seat Avilable In This Department Please Admit Some Other Department";
        //                    //    poperrjs.Visible = true;
        //                    //    panel2.Visible = false;
        //                    //    // ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('No Seat Avilable In This Department Please Admit Some Other Department')", true);
        //                    //    //  ScriptManager.RegisterStartupScript(base.Page, this.GetType(), ("dialogJavascript" + this.ID), "alert(\"No Seat Avilable In This Category Please Admit Some Other Category\");", true);
        //                    //    return;
        //                    //}
        //                }
        //            }
        //        }
        //        if (testflage == true)
        //        {
        //            errorspan.InnerHtml = "Fee Confirmed";
        //            poperrjs.Visible = true;
        //        }
        //        else
        //        {
        //            errorspan.InnerHtml = "Please Select Any one Student";
        //            poperrjs.Visible = true;
        //        }
        //        //}
        //        //else
        //        //{
        //        //    errorspan.InnerHtml = "No Seat Avilable for Selected Student In This Department";
        //        //    poperrjs.Visible = true;
        //        //    panel2.Visible = false;
        //        //    // ScriptManager.RegisterStartupScript(this, typeof(Page), UniqueID, "alert('No Seat Avilable In This Department Please Admit Some Other Department')", true);
        //        //    //  ScriptManager.RegisterStartupScript(base.Page, this.GetType(), ("dialogJavascript" + this.ID), "alert(\"No Seat Avilable In This Category Please Admit Some Other Category\");", true);
        //        //    return;
        //        //}
        //    }
        //}
        //catch
        //{
        //}
    }
    protected void btnunpaidconfirm_clcik(object sender, EventArgs e)
    {
        try
        {
            bool setflage = false;
            FpSpread4.SaveChanges();
            for (int i = 0; i < FpSpread4.Sheets[0].Rows.Count; i++)
            {
                int isval = 0;
                isval = Convert.ToInt32(FpSpread4.Sheets[0].Cells[i, 3].Value);
                if (isval == 1)
                {
                    setflage = true;
                    string app_formno = Convert.ToString(FpSpread4.Sheets[0].Cells[i, 2].Tag);
                    string app_no = Convert.ToString(FpSpread4.Sheets[0].Cells[i, 2].Text);
                    string name = Convert.ToString(FpSpread4.Sheets[0].Cells[i, 1].Text);
                    string criteriacode = Convert.ToString(FpSpread4.Sheets[0].Cells[i, 1].Tag);
                    string alotevalue = dt.GetFunction("select allot  from admitcolumnset where setcolumn ='" + ddldept.SelectedItem.Value + "' and column_name ='" + criteriacode + "' and college_code =" + college_code + "");
                    int allote = 0;
                    if (alotevalue.Trim() != "")
                    {
                        allote = Convert.ToInt32(alotevalue) - 1;
                    }
                    string updataquery = "update selectcriteria set isapprove =5 where app_no ='" + app_no + "' and isapprove =4 and criteria_Code ='" + criteriacode + "' and degree_code ='" + ddldept.SelectedItem.Value + "'";
                    //updataquery = updataquery + " update admitcolumnset set allot ='" + allote + "' where setcolumn ='" + ddldept.SelectedItem.Value + "' and column_name ='" + criteriacode + "' and college_code =" + college_code + "";
                    // updataquery = updataquery + "  update applyn set selection_status='1', admission_status ='0' where app_no ='" + app_no + "'";
                    // updataquery = updataquery + "  if exists(select * from Registration where App_No='" + app_no + "' and Adm_Date='" + System.DateTime.Now.ToString("yyy/MM/dd") + "' and Stud_Name='" + name + "' and Batch_Year='" + txtbatch.Text + "' and   degree_code='" + ddldept.SelectedValue + "' and  college_code='" + college_code + "' )  delete from Registration where App_No='" + app_no + "' and Adm_Date='" + System.DateTime.Now.ToString("yyy/MM/dd") + "' and Stud_Name='" + name + "' and Batch_Year='" + txtbatch.Text + "' and   degree_code='" + ddldept.SelectedValue + "' and  college_code='" + college_code + "'";
                    int up = dt.update_method_wo_parameter(updataquery, "Text");
                }
            }
            if (setflage == true)
            {
                errorspan.InnerHtml = "Moved Successfully";
                poperrjs.Visible = true;
            }
            else
            {
                errorspan.InnerHtml = "Please Select Any one Student";
                poperrjs.Visible = true;
            }
            Button1_Click(sender, e);
        }
        catch
        {
        }
    }
    protected void Button6_Clcik(object sender, EventArgs e)
    {
        try
        {
            pdf();
        }
        catch
        {
        }
    }
    public void pdf()
    {
        try
        {
            Font Fontbold = new Font("Times New Roman", 15, FontStyle.Bold);
            Font Fontsmall = new Font("Times New Roman", 10, FontStyle.Regular);
            Font Fontbold1 = new Font("Times New Roman", 10, FontStyle.Bold);
            Gios.Pdf.PdfDocument mydoc = new Gios.Pdf.PdfDocument(PdfDocumentFormat.A4);
            Gios.Pdf.PdfPage mypage = mydoc.NewPage();
            Gios.Pdf.PdfPage mypage1 = mydoc.NewPage();
            Gios.Pdf.PdfPage mypage2 = mydoc.NewPage();
            bool dummyflage = false;
            if (File.Exists(HttpContext.Current.Server.MapPath("~/image/logo.jpg")))//Aruna
            {
                PdfImage LogoImage = mydoc.NewImage(HttpContext.Current.Server.MapPath("~/image/logo.jpg"));
                mypage.Add(LogoImage, 20, 20, 200);
            }
            if (File.Exists(HttpContext.Current.Server.MapPath("~/image/logo1.jpg")))//Aruna
            {
                PdfImage LogoImage = mydoc.NewImage(HttpContext.Current.Server.MapPath("~/image/logo1.jpg"));
                mypage.Add(LogoImage, 500, 20, 200);
            }
            string collquery = "";
            collquery = "select collname,category,university,address1,address2,address3,phoneno,faxno,email,website,district,state,pincode  from collinfo where college_Code=" + college_code + "";
            ds.Clear();
            ds = dt.select_method_wo_parameter(collquery, "Text");
            string collegename = "";
            string collegeaddress = "";
            string collegedistrict = "";
            string phonenumber = "";
            string fax = "";
            string email = "";
            string website = "";
            if (ds.Tables[0].Rows.Count > 0)
            {
                collegename = Convert.ToString(ds.Tables[0].Rows[0]["collname"]);
                collegeaddress = Convert.ToString(ds.Tables[0].Rows[0]["address1"]) + "," + Convert.ToString(ds.Tables[0].Rows[0]["address2"]) + "," + Convert.ToString(ds.Tables[0].Rows[0]["address3"]);
                collegedistrict = Convert.ToString(ds.Tables[0].Rows[0]["district"]) + "," + Convert.ToString(ds.Tables[0].Rows[0]["state"]) + "-" + Convert.ToString(ds.Tables[0].Rows[0]["pincode"]);
                phonenumber = Convert.ToString(ds.Tables[0].Rows[0]["phoneno"]);
                fax = Convert.ToString(ds.Tables[0].Rows[0]["faxno"]); ;
                email = Convert.ToString(ds.Tables[0].Rows[0]["email"]);
                website = Convert.ToString(ds.Tables[0].Rows[0]["website"]);
            }
            PdfTextArea ptc = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                               new PdfArea(mydoc, 10, 10, 600, 30), System.Drawing.ContentAlignment.MiddleCenter, collegename);
            mypage.Add(ptc);
            ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                               new PdfArea(mydoc, 110, 25, 350, 30), System.Drawing.ContentAlignment.MiddleCenter, collegeaddress);
            mypage.Add(ptc);
            ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                               new PdfArea(mydoc, 110, 35, 350, 30), System.Drawing.ContentAlignment.MiddleCenter, collegedistrict);
            mypage.Add(ptc);
            ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                               new PdfArea(mydoc, 110, 45, 350, 30), System.Drawing.ContentAlignment.MiddleCenter, "Phone No: " + phonenumber + ", Fax:" + fax);
            mypage.Add(ptc);
            ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                               new PdfArea(mydoc, 110, 55, 350, 30), System.Drawing.ContentAlignment.MiddleCenter, email);
            mypage.Add(ptc);
            ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                               new PdfArea(mydoc, 110, 65, 350, 30), System.Drawing.ContentAlignment.MiddleCenter, website);
            mypage.Add(ptc);
            int y = 60;
            int line1 = 50;
            int line2 = 400;
            string query = "select app_formno,CONVERT(varchar(10), date_applied,103) as date_applied,stud_name,sex,Relationship,parent_name,CONVERT(varchar(10), dob,103) as dob ,parent_occu,mother_tongue,religion,citizen,community,caste,TamilOrginFromAndaman,IsExService,handy,visualhandy,first_graduate,CampusReq,DistinctSport,co_curricular,parent_addressC,Streetc,Cityc,parent_statec,Countryc,parent_pincodec,Student_Mobile,StuPer_Id,parent_phnoc,alter_mobileno,parent_addressP,Streetp,cityp,parent_statep,Countryp,parent_pincodep,parent_phnop,degree_code,batch_year,college_code,SubCaste,isdisable ,isdisabledisc,islearningdis,missionarydisc,MissionaryChild,seattype,current_semester,ncccadet from applyn a where a.app_no='" + Convert.ToString(Session["pdfapp_no"]) + "'";
            query = query + " select course_entno,course_code,university_code,Institute_name,percentage,instaddress,medium,branch_code ,Part1Language,Part2Language,Vocational_stream,isgrade,uni_state,registration_no,type_semester,majorallied_percent,major_percent,type_major,tancet_mark from Stud_prev_details where app_no ='" + Convert.ToString(Session["pdfapp_no"]) + "'";
            ds.Clear();
            ds = dt.select_method_wo_parameter(query, "text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                ptc = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                                 new PdfArea(mydoc, line1, y + 50, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Course Details");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                 new PdfArea(mydoc, line1, y + 70, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Stream");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                 new PdfArea(mydoc, line2, y + 70, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ddltype.SelectedItem.Text));
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                 new PdfArea(mydoc, line1, y + 90, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Graduation");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                 new PdfArea(mydoc, line2, y + 90, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ddledu.SelectedItem.Text));
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                 new PdfArea(mydoc, line1, y + 110, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Degree");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                 new PdfArea(mydoc, line2, y + 110, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ddldegree.SelectedItem.Text));
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                 new PdfArea(mydoc, line1, y + 130, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Course");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                 new PdfArea(mydoc, line2, y + 130, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ddldept.SelectedItem.Text));
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                  new PdfArea(mydoc, line1, y + 150, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Application No");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                 new PdfArea(mydoc, line2, y + 150, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ds.Tables[0].Rows[0]["app_formno"]));
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                 new PdfArea(mydoc, line1, y + 170, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Applicant Name");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                new PdfArea(mydoc, line2, y + 170, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ds.Tables[0].Rows[0]["stud_name"]));
                mypage.Add(ptc);
                //ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                //                                                new PdfArea(mydoc, line1, y + 190, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Applicant Last  Name");
                //mypage.Add(ptc);
                //ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                //                                              new PdfArea(mydoc, line2, y + 190, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(Session["lastname"]));
                //mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                               new PdfArea(mydoc, line1, y + 210, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Date of Birth");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                               new PdfArea(mydoc, line2, y + 210, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ds.Tables[0].Rows[0]["dob"]));
                mypage.Add(ptc);
                string gender = Convert.ToString(ds.Tables[0].Rows[0]["sex"]);
                if (gender == "0")
                {
                    gender = "Male";
                }
                else if (gender == "1")
                {
                    gender = "Female";
                }
                else if (gender == "2")
                {
                    gender = "Transgender";
                }
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydoc, line1, y + 230, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Gender");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydoc, line2, y + 230, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(gender));
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                               new PdfArea(mydoc, line1, y + 250, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Parent's Name/Guardian Name");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydoc, line2, y + 250, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_name"]));
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                               new PdfArea(mydoc, line1, y + 270, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Relationship");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydoc, line2, y + 270, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ds.Tables[0].Rows[0]["Relationship"]));
                mypage.Add(ptc);
                string occupation = Convert.ToString(ds.Tables[0].Rows[0]["parent_occu"]);
                if (occupation.Trim() != "")
                {
                    occupation = subjectcode(occupation);
                }
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                               new PdfArea(mydoc, line1, y + 290, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Occupation");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydoc, line2, y + 290, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(Session["occupation"]));
                mypage.Add(ptc);
                string mothertounge = Convert.ToString(ds.Tables[0].Rows[0]["mother_tongue"]);
                if (mothertounge.Trim() != "")
                {
                    mothertounge = subjectcode(mothertounge);
                }
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                               new PdfArea(mydoc, line1, y + 310, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Mother Tounge ");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydoc, line2, y + 310, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(mothertounge));
                mypage.Add(ptc);
                string Religion = Convert.ToString(ds.Tables[0].Rows[0]["religion"]);
                if (Religion.Trim() != "")
                {
                    Religion = subjectcode(Religion);
                }
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                               new PdfArea(mydoc, line1, y + 330, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Religion");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydoc, line2, y + 330, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(Religion));
                mypage.Add(ptc);
                string Nationality = Convert.ToString(ds.Tables[0].Rows[0]["citizen"]);
                if (Nationality.Trim() != "")
                {
                    Nationality = subjectcode(Nationality);
                }
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydoc, line1, y + 350, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Nationality");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydoc, line2, y + 350, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(Nationality));
                mypage.Add(ptc);
                string coummunity = Convert.ToString(ds.Tables[0].Rows[0]["community"]);
                if (coummunity.Trim() != "")
                {
                    coummunity = subjectcode(coummunity);
                }
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydoc, line1, y + 370, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Coummunity(Foriegn Students Select OC)");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                           new PdfArea(mydoc, line2, y + 370, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(coummunity));
                mypage.Add(ptc);
                string caste = Convert.ToString(ds.Tables[0].Rows[0]["caste"]);
                if (caste.Trim() != "")
                {
                    caste = subjectcode(caste);
                }
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydoc, line1, y + 390, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Caste");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                            new PdfArea(mydoc, line2, y + 390, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(caste));
                mypage.Add(ptc);
                string subreligion = Convert.ToString(ds.Tables[0].Rows[0]["caste"]);
                if (subreligion.Trim() != "")
                {
                    subreligion = subjectcode(subreligion);
                }
                int col = y + 390;
                if (Convert.ToString(subreligion).ToUpper() == "PROTESTANT")
                {
                    string missionarychild = Convert.ToString(ds.Tables[0].Rows[0]["MissionaryChild"]);
                    if (missionarychild == "0" || missionarychild == "False")
                    {
                        missionarychild = "No";
                    }
                    else
                    {
                        missionarychild = "Yes";
                    }
                    col += 20;
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydoc, line1, col, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Are You a missionary child ?");
                    mypage.Add(ptc);
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                new PdfArea(mydoc, line2, col, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(missionarychild));
                    mypage.Add(ptc);
                }
                string tamilorgion = Convert.ToString(ds.Tables[0].Rows[0]["TamilOrginFromAndaman"]);
                if (tamilorgion.Trim() == "0" || tamilorgion.Trim() == "False")
                {
                    tamilorgion = "No";
                }
                else
                {
                    tamilorgion = "Yes";
                }
                col += 20;
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydoc, line1, col, 350, 30), System.Drawing.ContentAlignment.MiddleLeft, "Are You of Tamil Origin From Andaman and Nicobar Islands ? ");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                             new PdfArea(mydoc, line2, col, 350, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(tamilorgion));
                mypage.Add(ptc);
                string xserviceman = Convert.ToString(ds.Tables[0].Rows[0]["IsExService"]);
                if (xserviceman.Trim() == "0" || xserviceman.Trim() == "False")
                {
                    xserviceman = "No";
                }
                else
                {
                    xserviceman = "Yes";
                }
                col += 20;
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydoc, line1, col, 350, 30), System.Drawing.ContentAlignment.MiddleLeft, "Are You a Child of an Ex-serviceman of Tamil Nadu origin ?");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                             new PdfArea(mydoc, line2, col, 350, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(xserviceman));
                mypage.Add(ptc);
                string differentlyabled = Convert.ToString(ds.Tables[0].Rows[0]["isdisable"]);
                if (differentlyabled.Trim() == "0" || differentlyabled.Trim() == "False")
                {
                    differentlyabled = "No";
                }
                else
                {
                    differentlyabled = "Yes";
                }
                col += 20;
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydoc, line1, col, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Are you a Differently abled");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                             new PdfArea(mydoc, line2, col, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(differentlyabled));
                mypage.Add(ptc);
                string firstgeneration = Convert.ToString(ds.Tables[0].Rows[0]["first_graduate"]);
                if (firstgeneration.Trim() == "0" || firstgeneration.Trim() == "False")
                {
                    firstgeneration = "No";
                }
                else
                {
                    firstgeneration = "Yes";
                }
                col += 20;
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydoc, line1, col, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Are you a first genaration learner ?");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydoc, line2, col, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(firstgeneration));
                mypage.Add(ptc);
                string oncampus = Convert.ToString(ds.Tables[0].Rows[0]["CampusReq"]);
                if (oncampus.Trim() == "0" || oncampus.Trim() == "False")
                {
                    oncampus = "No";
                }
                else
                {
                    oncampus = "Yes";
                }
                col += 20;
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydoc, line1, col, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Is Residence on Campus Required ?");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydoc, line2, col, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(oncampus));
                mypage.Add(ptc);
                string sports = Convert.ToString(ds.Tables[0].Rows[0]["DistinctSport"]);
                if (sports.Trim() != "")
                {
                    sports = subjectcode(sports);
                }
                col += 20;
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                          new PdfArea(mydoc, line1, col, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Distinction in Sports");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                          new PdfArea(mydoc, line2, col, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(sports));
                mypage.Add(ptc);
                string cocucuricular = Convert.ToString(ds.Tables[0].Rows[0]["co_curricular"]);
                if (cocucuricular.Trim() != "")
                {
                    cocucuricular = subjectcode(cocucuricular);
                }
                col += 20;
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                          new PdfArea(mydoc, line1, col, 350, 30), System.Drawing.ContentAlignment.MiddleLeft, "Extra Curricular Activites/Co-Curricular Activites");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                          new PdfArea(mydoc, line2, col, 350, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(cocucuricular));
                mypage.Add(ptc);
                col += 20;
                ptc = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                         new PdfArea(mydoc, line1, col, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Communication Address");
                mypage.Add(ptc);
                string addressline1 = Convert.ToString(ds.Tables[0].Rows[0]["parent_addressC"]);
                col += 20;
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                        new PdfArea(mydoc, line1, col, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Address Line1");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                         new PdfArea(mydoc, line2, col, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(addressline1));
                mypage.Add(ptc);
                string addressline2 = Convert.ToString(ds.Tables[0].Rows[0]["Streetc"]);
                string addressline3 = "";
                if (addressline2.Contains('/') == true)
                {
                    string[] splitaddress = addressline2.Split('/');
                    if (splitaddress.Length > 1)
                    {
                        addressline2 = Convert.ToString(splitaddress[0]);
                        addressline3 = Convert.ToString(splitaddress[1]);
                    }
                    else
                    {
                        addressline2 = Convert.ToString(splitaddress[0]);
                    }
                }
                col += 20;
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                      new PdfArea(mydoc, line1, col, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Address Line2");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                         new PdfArea(mydoc, line2, col, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(addressline2));
                mypage.Add(ptc);
                col += 20;
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                      new PdfArea(mydoc, line1, col, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Address Line3");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                         new PdfArea(mydoc, line2, col, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(addressline3));
                mypage.Add(ptc);
                col += 20;
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                      new PdfArea(mydoc, line1, col, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "City");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                         new PdfArea(mydoc, line2, col, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ds.Tables[0].Rows[0]["Cityc"]));
                mypage.Add(ptc);
                string pstate = Convert.ToString(ds.Tables[0].Rows[0]["parent_statec"]);
                if (pstate.Trim() != "")
                {
                    pstate = subjectcode(pstate);
                }
                col += 20;
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                      new PdfArea(mydoc, line1, col, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "State");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                         new PdfArea(mydoc, line2, col, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(pstate));
                mypage.Add(ptc);
                col += 20;
                string country = Convert.ToString(ds.Tables[0].Rows[0]["Countryc"]);
                if (country.Trim() != "")
                {
                    country = subjectcode(country);
                }
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                      new PdfArea(mydoc, line1, col, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Country");
                mypage.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                         new PdfArea(mydoc, line2, col, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(country));
                mypage.Add(ptc);
                y = 40;
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                      new PdfArea(mydoc, line1, y + 10, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "PIN code");
                mypage1.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                         new PdfArea(mydoc, line2, y + 10, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_pincodec"]));
                mypage1.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                    new PdfArea(mydoc, line1, y + 30, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Mobile Number");
                mypage1.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                         new PdfArea(mydoc, line2, y + 30, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ds.Tables[0].Rows[0]["Student_Mobile"]));
                mypage1.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                  new PdfArea(mydoc, line1, y + 50, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Alternate Number");
                mypage1.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                         new PdfArea(mydoc, line2, y + 50, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ds.Tables[0].Rows[0]["alter_mobileno"]));
                mypage1.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                      new PdfArea(mydoc, line1, y + 70, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Email ID");
                mypage1.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                         new PdfArea(mydoc, line2, y + 70, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ds.Tables[0].Rows[0]["StuPer_Id"]));
                mypage1.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                      new PdfArea(mydoc, line1, y + 90, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Phone Number With STD Code");
                mypage1.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                         new PdfArea(mydoc, line2, y + 90, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_phnoc"]));
                mypage1.Add(ptc);
                ptc = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                      new PdfArea(mydoc, line1, y + 110, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Permanent Address");
                mypage1.Add(ptc);
                string addresslinec1 = Convert.ToString(ds.Tables[0].Rows[0]["parent_addressP"]);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                       new PdfArea(mydoc, line1, y + 130, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Address Line1");
                mypage1.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                         new PdfArea(mydoc, line2, y + 130, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(addresslinec1));
                mypage1.Add(ptc);
                string addresslinec2 = Convert.ToString(ds.Tables[0].Rows[0]["Streetp"]);
                string addresslinec3 = "";
                if (addressline2.Contains('/') == true)
                {
                    string[] splitaddress = addressline2.Split('/');
                    if (splitaddress.Length > 1)
                    {
                        addresslinec2 = Convert.ToString(splitaddress[0]);
                        addresslinec3 = Convert.ToString(splitaddress[1]);
                    }
                    else
                    {
                        addresslinec2 = Convert.ToString(splitaddress[0]);
                    }
                }
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                      new PdfArea(mydoc, line1, y + 150, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Address Line2");
                mypage1.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                         new PdfArea(mydoc, line2, y + 150, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(addresslinec2));
                mypage1.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                      new PdfArea(mydoc, line1, y + 170, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Address Line3");
                mypage1.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                         new PdfArea(mydoc, line2, y + 170, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(addresslinec3));
                mypage1.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                      new PdfArea(mydoc, line1, y + 190, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "City");
                mypage1.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                         new PdfArea(mydoc, line2, y + 190, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ds.Tables[0].Rows[0]["cityp"]));
                mypage1.Add(ptc);
                string cstate = Convert.ToString(ds.Tables[0].Rows[0]["parent_statep"]);
                if (cstate.Trim() != "")
                {
                    cstate = subjectcode(cstate);
                }
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                      new PdfArea(mydoc, line1, y + 210, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "State");
                mypage1.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                         new PdfArea(mydoc, line2, y + 210, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(cstate));
                mypage1.Add(ptc);
                string ccournty = Convert.ToString(ds.Tables[0].Rows[0]["Countryp"]);
                if (ccournty.Trim() != "")
                {
                    ccournty = subjectcode(ccournty);
                }
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                      new PdfArea(mydoc, line1, y + 230, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Country");
                mypage1.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                         new PdfArea(mydoc, line2, y + 230, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ccournty));
                mypage1.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                      new PdfArea(mydoc, line1, y + 250, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "PIN code");
                mypage1.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                         new PdfArea(mydoc, line2, y + 250, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_pincodep"]));
                mypage1.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                      new PdfArea(mydoc, line1, y + 270, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Phone Number With STD Code");
                mypage1.Add(ptc);
                ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                         new PdfArea(mydoc, line2, y + 270, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ds.Tables[0].Rows[0]["parent_phnop"]));
                mypage1.Add(ptc);
                ptc = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                      new PdfArea(mydoc, line1, y + 290, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Academic Details");
                mypage1.Add(ptc);
                if (ddledu.SelectedItem.Text.ToUpper() == "UG")
                {
                    string qualifyingexam = Convert.ToString(ds.Tables[1].Rows[0]["course_code"]);
                    if (qualifyingexam.Trim() != "")
                    {
                        qualifyingexam = subjectcode(qualifyingexam);
                    }
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                        new PdfArea(mydoc, line1, y + 310, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Qualifying Examination Passed");
                    mypage1.Add(ptc);
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                             new PdfArea(mydoc, line2, y + 310, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(qualifyingexam));
                    mypage1.Add(ptc);
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                        new PdfArea(mydoc, line1, y + 330, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Name of School");
                    mypage1.Add(ptc);
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                             new PdfArea(mydoc, line2, y + 330, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ds.Tables[1].Rows[0]["Institute_name"]));
                    mypage1.Add(ptc);
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                        new PdfArea(mydoc, line1, y + 350, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Location of School");
                    mypage1.Add(ptc);
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                             new PdfArea(mydoc, line2, y + 350, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ds.Tables[1].Rows[0]["instaddress"]));
                    mypage1.Add(ptc);
                    string mediumofstudy = Convert.ToString(ds.Tables[1].Rows[0]["medium"]);
                    if (mediumofstudy.Trim() != "")
                    {
                        mediumofstudy = subjectcode(mediumofstudy);
                    }
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                       new PdfArea(mydoc, line1, y + 370, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Medium of Study of Qualifying Examination");
                    mypage1.Add(ptc);
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                             new PdfArea(mydoc, line2, y + 370, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(mediumofstudy));
                    mypage1.Add(ptc);
                    string qulifyboard = Convert.ToString(ds.Tables[1].Rows[0]["university_code"]);
                    if (qulifyboard.Trim() != "")
                    {
                        qulifyboard = subjectcode(qulifyboard);
                    }
                    string qulifystate = Convert.ToString(ds.Tables[1].Rows[0]["uni_state"]);
                    if (qulifystate.Trim() != "")
                    {
                        qulifystate = subjectcode(qulifystate);
                    }
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                        new PdfArea(mydoc, line1, y + 390, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Qualifying Board & State");
                    mypage1.Add(ptc);
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                             new PdfArea(mydoc, line2, y + 390, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(qulifyboard) + " " + Convert.ToString(qulifystate));
                    mypage1.Add(ptc);
                    string vocationalstream = Convert.ToString(ds.Tables[1].Rows[0]["Vocational_stream"]);
                    if (vocationalstream.Trim() == "0" || vocationalstream.Trim() == "False")
                    {
                        vocationalstream = "No";
                    }
                    else
                    {
                        vocationalstream = "Yes";
                    }
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                       new PdfArea(mydoc, line1, y + 410, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Are you Vocational stream");
                    mypage1.Add(ptc);
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                             new PdfArea(mydoc, line2, y + 410, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(vocationalstream));
                    mypage1.Add(ptc);
                    string markgrade = Convert.ToString(ds.Tables[1].Rows[0]["isgrade"]);
                    if (markgrade.Trim() == "False")
                    {
                        markgrade = "Mark";
                    }
                    else
                    {
                        markgrade = "Grade";
                    }
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                       new PdfArea(mydoc, line1, y + 430, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Marks/Grade");
                    mypage1.Add(ptc);
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                             new PdfArea(mydoc, line2, y + 430, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(markgrade));
                    mypage1.Add(ptc);
                    string percentage = Convert.ToString(ds.Tables[1].Rows[0]["percentage"]);
                    int totalmark = 0;
                    int maxtotal = 0;
                    DataTable data = new DataTable();
                    DataRow dr = null;
                    Hashtable hash = new Hashtable();
                    string markquery = "select psubjectno,registerno,acual_marks,grade,max_marks,noofattempt,pass_month,pass_year from perv_marks_history  where course_entno ='" + Convert.ToString(ds.Tables[1].Rows[0]["course_entno"]) + "'";
                    ds.Clear();
                    ds = dt.select_method_wo_parameter(markquery, "Text");
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        data.Columns.Add("Language", typeof(string));
                        data.Columns.Add("Subject", typeof(string));
                        data.Columns.Add("Marks Obtained", typeof(string));
                        data.Columns.Add("Month", typeof(string));
                        data.Columns.Add("Year", typeof(string));
                        data.Columns.Add("Register No / Roll No", typeof(string));
                        data.Columns.Add("No of Attempts", typeof(string));
                        data.Columns.Add("Maximum Marks", typeof(string));
                        hash.Add(0, "Language1");
                        hash.Add(1, "Language2");
                        hash.Add(2, " Subject1");
                        hash.Add(3, " Subject2");
                        hash.Add(4, " Subject3");
                        hash.Add(5, " Subject4");
                        hash.Add(6, " Subject5");
                        hash.Add(7, " Subject6");
                        hash.Add(8, " Subject7");
                        hash.Add(9, " Subject8");
                        hash.Add(10, " Subject9");
                        hash.Add(11, " Subject10");
                        hash.Add(12, " Subject11");
                        for (int mark = 0; mark < ds.Tables[0].Rows.Count; mark++)
                        {
                            string subjectno = Convert.ToString(ds.Tables[0].Rows[mark]["psubjectno"]);
                            string actualmark = "";
                            if (markgrade.Trim() == "Mark")
                            {
                                actualmark = Convert.ToString(ds.Tables[0].Rows[mark]["acual_marks"]);
                            }
                            if (markgrade.Trim() == "Grade")
                            {
                                actualmark = Convert.ToString(ds.Tables[0].Rows[mark]["grade"]);
                            }
                            string month = Convert.ToString(ds.Tables[0].Rows[mark]["pass_month"]);
                            string year = Convert.ToString(ds.Tables[0].Rows[mark]["pass_year"]);
                            string regno = Convert.ToString(ds.Tables[0].Rows[mark]["registerno"]);
                            string noofattenm = Convert.ToString(ds.Tables[0].Rows[mark]["noofattempt"]);
                            string maxmark = Convert.ToString(ds.Tables[0].Rows[mark]["max_marks"]);
                            dr = data.NewRow();
                            string lang = Convert.ToString(hash[mark]);
                            dr[0] = Convert.ToString(lang);
                            string sub = subjectcode(subjectno);
                            dr[1] = Convert.ToString(sub);
                            dr[2] = Convert.ToString(actualmark);
                            dr[3] = Convert.ToString(month);
                            dr[4] = Convert.ToString(year);
                            dr[5] = Convert.ToString(regno);
                            dr[6] = Convert.ToString(noofattenm);
                            dr[7] = Convert.ToString(maxmark);
                            data.Rows.Add(dr);
                            if (markgrade.Trim() != "Grade")
                            {
                                totalmark = totalmark + Convert.ToInt32(actualmark);
                                maxtotal = maxtotal + Convert.ToInt32(maxmark);
                            }
                        }
                    }
                    int count = 0;
                    count = data.Rows.Count;
                    Gios.Pdf.PdfTable table2 = mydoc.NewTable(Fontsmall, count + 1, 7, 1);
                    table2 = mydoc.NewTable(Fontsmall, count + 1, 7, 1);
                    table2.VisibleHeaders = false;
                    table2.SetBorders(Color.Black, 1, BorderType.CompleteGrid);
                    table2.Columns[0].SetWidth(100);
                    table2.Columns[1].SetWidth(100);
                    table2.Columns[2].SetWidth(100);
                    table2.Columns[3].SetWidth(100);
                    table2.Columns[4].SetWidth(100);
                    table2.Columns[5].SetWidth(100);
                    table2.Columns[6].SetWidth(100);
                    table2.CellRange(0, 0, 0, 5).SetFont(Fontsmall);
                    table2.Cell(0, 0).SetContentAlignment(ContentAlignment.MiddleCenter);
                    table2.Cell(0, 0).SetContent("Subjects");
                    if (markgrade.Trim() == "Mark")
                    {
                        table2.Cell(0, 1).SetContentAlignment(ContentAlignment.MiddleCenter);
                        table2.Cell(0, 1).SetContent("Mark");
                    }
                    if (markgrade.Trim() == "Grade")
                    {
                        table2.Cell(0, 1).SetContentAlignment(ContentAlignment.MiddleCenter);
                        table2.Cell(0, 1).SetContent("Grade");
                    }
                    table2.Cell(0, 2).SetContentAlignment(ContentAlignment.MiddleCenter);
                    table2.Cell(0, 2).SetContent("Month");
                    table2.Cell(0, 3).SetContentAlignment(ContentAlignment.MiddleCenter);
                    table2.Cell(0, 3).SetContent("Year");
                    table2.Cell(0, 4).SetContentAlignment(ContentAlignment.MiddleCenter);
                    table2.Cell(0, 4).SetContent("Register No");
                    table2.Cell(0, 5).SetContentAlignment(ContentAlignment.MiddleCenter);
                    table2.Cell(0, 5).SetContent("No.of Attempts");
                    table2.Cell(0, 6).SetContentAlignment(ContentAlignment.MiddleCenter);
                    table2.Cell(0, 6).SetContent("Maximun Marks");
                    for (int add = 0; add < data.Rows.Count; add++)
                    {
                        table2.Cell(add + 1, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                        table2.Cell(add + 1, 0).SetContent(Convert.ToString(data.Rows[add]["Subject"]));
                        table2.Cell(add + 1, 1).SetContentAlignment(ContentAlignment.MiddleCenter);
                        table2.Cell(add + 1, 1).SetContent(Convert.ToString(data.Rows[add]["Marks Obtained"]));
                        table2.Cell(add + 1, 2).SetContentAlignment(ContentAlignment.MiddleCenter);
                        table2.Cell(add + 1, 2).SetContent(Convert.ToString(data.Rows[add]["Month"]));
                        // Month.First().ToString().ToUpper() + Month.Substring(1)
                        table2.Cell(add + 1, 3).SetContentAlignment(ContentAlignment.MiddleCenter);
                        table2.Cell(add + 1, 3).SetContent(Convert.ToString(data.Rows[add]["Year"]));
                        table2.Cell(add + 1, 4).SetContentAlignment(ContentAlignment.MiddleCenter);
                        table2.Cell(add + 1, 4).SetContent(Convert.ToString(data.Rows[add]["Register No / Roll No"]));
                        table2.Cell(add + 1, 5).SetContentAlignment(ContentAlignment.MiddleCenter);
                        table2.Cell(add + 1, 5).SetContent(Convert.ToString(data.Rows[add]["No of Attempts"]));
                        table2.Cell(add + 1, 6).SetContentAlignment(ContentAlignment.MiddleCenter);
                        table2.Cell(add + 1, 6).SetContent(Convert.ToString(data.Rows[add]["Maximum Marks"]));
                    }
                    Gios.Pdf.PdfTablePage myprov_pdfpage1 = table2.CreateTablePage(new Gios.Pdf.PdfArea(mydoc, 20, 550, 550, 550));
                    mypage1.Add(myprov_pdfpage1);
                    if (Convert.ToString(markgrade).Trim() == "Mark")
                    {
                        ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                               new PdfArea(mydoc, 40, y + 650, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Total Marks Obtained :  " + Convert.ToString(totalmark));
                        mypage1.Add(ptc);
                        ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                new PdfArea(mydoc, 250, y + 650, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Maximum Marks :  " + Convert.ToString(maxtotal));
                        mypage1.Add(ptc);
                        ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                new PdfArea(mydoc, 480, y + 650, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Percentage :  " + Convert.ToString(percentage));
                        mypage1.Add(ptc);
                    }
                }
                if (ddledu.SelectedItem.Text.ToUpper() == "PG")
                {
                    string qualifyingexam = Convert.ToString(ds.Tables[1].Rows[0]["course_code"]);
                    if (qualifyingexam.Trim() != "")
                    {
                        qualifyingexam = subjectcode(qualifyingexam);
                    }
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                       new PdfArea(mydoc, line1, y + 310, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Qualifying Examination Passed");
                    mypage1.Add(ptc);
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                             new PdfArea(mydoc, line2, y + 310, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(qualifyingexam));
                    mypage1.Add(ptc);
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                        new PdfArea(mydoc, line1, y + 330, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Name of the College");
                    mypage1.Add(ptc);
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                             new PdfArea(mydoc, line2, y + 330, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ds.Tables[1].Rows[0]["Institute_name"]));
                    mypage1.Add(ptc);
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                        new PdfArea(mydoc, line1, y + 350, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Location of the College");
                    mypage1.Add(ptc);
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                             new PdfArea(mydoc, line2, y + 350, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ds.Tables[1].Rows[0]["instaddress"]));
                    mypage1.Add(ptc);
                    string branchcode = Convert.ToString(ds.Tables[1].Rows[0]["course_code"]);
                    if (branchcode.Trim() != "")
                    {
                        branchcode = subjectcode(branchcode);
                    }
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                        new PdfArea(mydoc, line1, y + 370, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Mention Major");
                    mypage1.Add(ptc);
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                             new PdfArea(mydoc, line2, y + 370, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(branchcode));
                    mypage1.Add(ptc);
                    string typeofmajor = Convert.ToString(ds.Tables[1].Rows[0]["type_major"]);
                    if (typeofmajor.Trim() == "1")
                    {
                        typeofmajor = "Single";
                    }
                    else if (typeofmajor.Trim() == "2")
                    {
                        typeofmajor = "Double";
                    }
                    else if (typeofmajor.Trim() == "3")
                    {
                        typeofmajor = "Triple";
                    }
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                        new PdfArea(mydoc, line1, y + 390, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Type of Major");
                    mypage1.Add(ptc);
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                             new PdfArea(mydoc, line2, y + 390, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(typeofmajor));
                    mypage1.Add(ptc);
                    string typeofsemester = Convert.ToString(ds.Tables[1].Rows[0]["type_semester"]);
                    if (typeofsemester.Trim() == "True")
                    {
                        typeofsemester = "Semester";
                    }
                    else
                    {
                        typeofsemester = "Non Semester";
                    }
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                       new PdfArea(mydoc, line1, y + 410, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Type of Semester");
                    mypage1.Add(ptc);
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                             new PdfArea(mydoc, line2, y + 410, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(typeofsemester));
                    mypage1.Add(ptc);
                    string mediumofstudy = Convert.ToString(ds.Tables[1].Rows[0]["medium"]);
                    if (mediumofstudy.Trim() != "")
                    {
                        mediumofstudy = subjectcode(mediumofstudy);
                    }
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                     new PdfArea(mydoc, line1, y + 430, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Medium of Study at UG level");
                    mypage1.Add(ptc);
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                             new PdfArea(mydoc, line2, y + 430, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(mediumofstudy));
                    mypage1.Add(ptc);
                    string markgrade = Convert.ToString(ds.Tables[1].Rows[0]["isgrade"]);
                    if (markgrade.Trim() == "False")
                    {
                        markgrade = "Mark";
                    }
                    else
                    {
                        markgrade = "Grade";
                    }
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                      new PdfArea(mydoc, line1, y + 450, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Marks/Grade");
                    mypage1.Add(ptc);
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                             new PdfArea(mydoc, line2, y + 450, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(markgrade));
                    mypage1.Add(ptc);
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                      new PdfArea(mydoc, line1, y + 470, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, "Registration No as Mentioned on your Mark Sheet");
                    mypage1.Add(ptc);
                    ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                             new PdfArea(mydoc, line2, y + 470, 200, 30), System.Drawing.ContentAlignment.MiddleLeft, ":  " + Convert.ToString(ds.Tables[1].Rows[0]["registration_no"]));
                    mypage1.Add(ptc);
                    string majorpercentage = Convert.ToString(ds.Tables[1].Rows[0]["major_percent"]);
                    string majoralliedpercentage = Convert.ToString(ds.Tables[1].Rows[0]["majorallied_percent"]);
                    string majoralliedpracticalspercentage = Convert.ToString(ds.Tables[1].Rows[0]["percentage"]);
                    DataTable data = new DataTable();
                    DataRow dr = null;
                    Hashtable hash = new Hashtable();
                    int count = 0;
                    string pgquery = "select psubjectno,subject_typeno,acual_marks,max_marks,pass_month,pass_year,semyear ,grade  from perv_marks_history where course_entno ='" + Convert.ToString(ds.Tables[1].Rows[0]["course_entno"]) + "'";
                    ds.Clear();
                    ds = dt.select_method_wo_parameter(pgquery, "Text");
                    if (ds.Tables[0].Rows.Count > 0)
                    {
                        data.Columns.Add("Sem", typeof(string));
                        //  data.Columns.Add("Sem/Year", typeof(string));
                        data.Columns.Add("Subject", typeof(string));
                        data.Columns.Add("Subject type", typeof(string));
                        data.Columns.Add("Marks", typeof(string));
                        data.Columns.Add("Month", typeof(string));
                        data.Columns.Add("Year", typeof(string));
                        data.Columns.Add("Maximum Marks", typeof(string));
                        int sno = 0;
                        for (int pg = 0; pg < ds.Tables[0].Rows.Count; pg++)
                        {
                            sno++;
                            string semyear = Convert.ToString(ds.Tables[0].Rows[pg]["semyear"]);
                            string subjectno = Convert.ToString(ds.Tables[0].Rows[pg]["psubjectno"]);
                            string subjecttypeno = Convert.ToString(ds.Tables[0].Rows[pg]["subject_typeno"]);
                            string actualmark = "";
                            if (markgrade.Trim() == "Mark")
                            {
                                actualmark = Convert.ToString(ds.Tables[0].Rows[pg]["acual_marks"]);
                            }
                            else if (markgrade.Trim() == "Grade")
                            {
                                actualmark = Convert.ToString(ds.Tables[0].Rows[pg]["grade"]);
                            }
                            string month = Convert.ToString(ds.Tables[0].Rows[pg]["pass_month"]);
                            string year = Convert.ToString(ds.Tables[0].Rows[pg]["pass_year"]);
                            // string noofattenm = Convert.ToString(ds.Tables[0].Rows[pg]["noofattempt"]);
                            string maxmark = Convert.ToString(ds.Tables[0].Rows[pg]["max_marks"]);
                            dr = data.NewRow();
                            dr[0] = Convert.ToString(semyear);
                            string subject = subjectcode(subjectno);
                            dr[1] = Convert.ToString(subject);
                            string typesub = subjectcode(subjecttypeno);
                            dr[2] = Convert.ToString(typesub);
                            dr[3] = Convert.ToString(actualmark);
                            dr[4] = Convert.ToString(month);
                            dr[5] = Convert.ToString(year);
                            dr[6] = Convert.ToString(maxmark);
                            data.Rows.Add(dr);
                        }
                    }
                    count = data.Rows.Count;
                    if (count < 8)
                    {
                        Gios.Pdf.PdfTable table2 = mydoc.NewTable(Fontsmall, count + 1, 7, 1);
                        table2 = mydoc.NewTable(Fontsmall, count + 1, 7, 1);
                        table2.VisibleHeaders = false;
                        table2.SetBorders(Color.Black, 1, BorderType.CompleteGrid);
                        table2.Columns[0].SetWidth(100);
                        table2.Columns[1].SetWidth(100);
                        table2.Columns[2].SetWidth(100);
                        table2.Columns[3].SetWidth(100);
                        table2.Columns[4].SetWidth(100);
                        table2.Columns[5].SetWidth(100);
                        table2.Columns[6].SetWidth(100);
                        table2.CellRange(0, 0, 0, 5).SetFont(Fontsmall);
                        table2.Cell(0, 0).SetContentAlignment(ContentAlignment.MiddleCenter);
                        table2.Cell(0, 0).SetContent("Sem/Year");
                        table2.Cell(0, 1).SetContentAlignment(ContentAlignment.MiddleCenter);
                        table2.Cell(0, 1).SetContent("Subject");
                        table2.Cell(0, 2).SetContentAlignment(ContentAlignment.MiddleCenter);
                        table2.Cell(0, 2).SetContent("Type of Subject");
                        if (markgrade.Trim() == "Mark")
                        {
                            table2.Cell(0, 3).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table2.Cell(0, 3).SetContent("Mark");
                        }
                        if (markgrade.Trim() == "Grade")
                        {
                            table2.Cell(0, 3).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table2.Cell(0, 3).SetContent("Grade");
                        }
                        table2.Cell(0, 4).SetContentAlignment(ContentAlignment.MiddleCenter);
                        table2.Cell(0, 4).SetContent("Month");
                        table2.Cell(0, 5).SetContentAlignment(ContentAlignment.MiddleCenter);
                        table2.Cell(0, 5).SetContent("Year");
                        table2.Cell(0, 6).SetContentAlignment(ContentAlignment.MiddleCenter);
                        table2.Cell(0, 6).SetContent("Maximun Marks");
                        for (int add = 0; add < data.Rows.Count; add++)
                        {
                            table2.Cell(add + 1, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table2.Cell(add + 1, 0).SetContent(Convert.ToString(data.Rows[add]["Sem"]));
                            table2.Cell(add + 1, 1).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table2.Cell(add + 1, 1).SetContent(Convert.ToString(Convert.ToString(data.Rows[add]["Subject"])));
                            table2.Cell(add + 1, 2).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table2.Cell(add + 1, 2).SetContent(Convert.ToString(data.Rows[add]["Subject type"]));
                            // Month.First().ToString().ToUpper() + Month.Substring(1)
                            table2.Cell(add + 1, 3).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table2.Cell(add + 1, 3).SetContent(Convert.ToString(data.Rows[add]["Marks"]));
                            table2.Cell(add + 1, 4).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table2.Cell(add + 1, 4).SetContent(Convert.ToString(data.Rows[add]["Month"]));
                            table2.Cell(add + 1, 5).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table2.Cell(add + 1, 5).SetContent(Convert.ToString(data.Rows[add]["Year"]));
                            table2.Cell(add + 1, 6).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table2.Cell(add + 1, 6).SetContent(Convert.ToString(data.Rows[add]["Maximum Marks"]));
                        }
                        Gios.Pdf.PdfTablePage myprov_pdfpage1 = table2.CreateTablePage(new Gios.Pdf.PdfArea(mydoc, 20, 600, 550, 550));
                        mypage1.Add(myprov_pdfpage1);
                        if (markgrade.Trim() == "Mark")
                        {
                            ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                    new PdfArea(mydoc, line1, 750, 600, 30), System.Drawing.ContentAlignment.MiddleLeft, "Total percentage of marks in all subjects (Language/major/Allied/Ancillary/Elective inclusive of Theory and Practical  : " + Convert.ToString(majoralliedpracticalspercentage) + "");
                            mypage1.Add(ptc);
                            ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                     new PdfArea(mydoc, line1, 770, 600, 30), System.Drawing.ContentAlignment.MiddleLeft, "Total % of Marks in Major subjects alone (Including theory & Practicals)  : " + Convert.ToString(majorpercentage) + "");
                            mypage1.Add(ptc);
                            ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydoc, line1, 790, 600, 30), System.Drawing.ContentAlignment.MiddleLeft, "Total percentage marks in major/Allied/Ancillary subjects alone inclusive of Theory and Practicals  : " + Convert.ToString(majoralliedpercentage) + "");
                            mypage1.Add(ptc);
                        }
                    }
                    else
                    {
                        dummyflage = true;
                        Gios.Pdf.PdfTable table2 = mydoc.NewTable(Fontsmall, count + 1, 7, 1);
                        table2 = mydoc.NewTable(Fontsmall, count + 1, 7, 1);
                        table2.VisibleHeaders = false;
                        table2.SetBorders(Color.Black, 1, BorderType.CompleteGrid);
                        table2.Columns[0].SetWidth(100);
                        table2.Columns[1].SetWidth(100);
                        table2.Columns[2].SetWidth(100);
                        table2.Columns[3].SetWidth(100);
                        table2.Columns[4].SetWidth(100);
                        table2.Columns[5].SetWidth(100);
                        table2.Columns[6].SetWidth(100);
                        table2.CellRange(0, 0, 0, 5).SetFont(Fontsmall);
                        table2.Cell(0, 0).SetContentAlignment(ContentAlignment.MiddleCenter);
                        table2.Cell(0, 0).SetContent("Sem/Year");
                        table2.Cell(0, 1).SetContentAlignment(ContentAlignment.MiddleCenter);
                        table2.Cell(0, 1).SetContent("Subject");
                        table2.Cell(0, 2).SetContentAlignment(ContentAlignment.MiddleCenter);
                        table2.Cell(0, 2).SetContent("Type of Subject");
                        if (markgrade.Trim() == "Mark")
                        {
                            table2.Cell(0, 3).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table2.Cell(0, 3).SetContent("Mark");
                        }
                        if (markgrade.Trim() == "Grade")
                        {
                            table2.Cell(0, 3).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table2.Cell(0, 3).SetContent("Grade");
                        }
                        table2.Cell(0, 4).SetContentAlignment(ContentAlignment.MiddleCenter);
                        table2.Cell(0, 4).SetContent("Month");
                        table2.Cell(0, 5).SetContentAlignment(ContentAlignment.MiddleCenter);
                        table2.Cell(0, 5).SetContent("Year");
                        table2.Cell(0, 6).SetContentAlignment(ContentAlignment.MiddleCenter);
                        table2.Cell(0, 6).SetContent("Maximun Marks");
                        for (int add = 0; add < data.Rows.Count; add++)
                        {
                            table2.Cell(add + 1, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table2.Cell(add + 1, 0).SetContent(Convert.ToString(data.Rows[add]["Sem"]));
                            table2.Cell(add + 1, 1).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table2.Cell(add + 1, 1).SetContent(Convert.ToString(Convert.ToString(data.Rows[add]["Subject"])));
                            table2.Cell(add + 1, 2).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table2.Cell(add + 1, 2).SetContent(Convert.ToString(data.Rows[add]["Subject type"]));
                            // Month.First().ToString().ToUpper() + Month.Substring(1)
                            table2.Cell(add + 1, 3).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table2.Cell(add + 1, 3).SetContent(Convert.ToString(data.Rows[add]["Marks"]));
                            table2.Cell(add + 1, 4).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table2.Cell(add + 1, 4).SetContent(Convert.ToString(data.Rows[add]["Month"]));
                            table2.Cell(add + 1, 5).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table2.Cell(add + 1, 5).SetContent(Convert.ToString(data.Rows[add]["Year"]));
                            table2.Cell(add + 1, 6).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table2.Cell(add + 1, 6).SetContent(Convert.ToString(data.Rows[add]["Maximum Marks"]));
                        }
                        Gios.Pdf.PdfTablePage myprov_pdfpage1 = table2.CreateTablePage(new Gios.Pdf.PdfArea(mydoc, 20, 40, 550, 700));
                        mypage2.Add(myprov_pdfpage1);
                        if (markgrade.Trim() == "Mark")
                        {
                            ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                    new PdfArea(mydoc, line1, 750, 600, 30), System.Drawing.ContentAlignment.MiddleLeft, "Total percentage of marks in all subjects (Language/major/Allied/Ancillary/Elective inclusive of Theory and Practical  : " + Convert.ToString(majoralliedpracticalspercentage) + "");
                            mypage2.Add(ptc);
                            ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                     new PdfArea(mydoc, line1, 770, 600, 30), System.Drawing.ContentAlignment.MiddleLeft, "Total % of Marks in Major subjects alone (Including theory & Practicals)  : " + Convert.ToString(majorpercentage) + "");
                            mypage2.Add(ptc);
                            ptc = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                              new PdfArea(mydoc, line1, 790, 600, 30), System.Drawing.ContentAlignment.MiddleLeft, "Total percentage marks in major/Allied/Ancillary subjects alone inclusive of Theory and Practicals  : " + Convert.ToString(majoralliedpercentage) + "");
                            mypage2.Add(ptc);
                        }
                    }
                }
                mypage.SaveToDocument();
                mypage1.SaveToDocument();
                if (dummyflage == true)
                {
                    mypage2.SaveToDocument();
                }
                string appPath = HttpContext.Current.Server.MapPath("~");
                if (appPath != "")
                {
                    string szPath = appPath + "/Report/";
                    string szFile = "Application.pdf";
                    mydoc.SaveToFile(szPath + szFile);
                    Response.ClearHeaders();
                    Response.AddHeader("Content-Disposition", "attachment; filename=" + szFile);
                    Response.ContentType = "application/pdf";
                    Response.WriteFile(szPath + szFile);
                }
            }
        }
        catch
        {
        }
    }
    protected void btn_confirm_clcik(object sender, EventArgs e)
    {
        try
        {
            loadprint();
        }
        catch
        {
        }
    }
    //Code Added by Idhris - 11-05-2016
    protected void btnChallan_onclick(object sender, EventArgs e)
    {
        try
        {
            List<string> appNoList = new List<string>();
            if (checkedOK(out appNoList, FpSpread4))
            {
                byte format = getChallanFormat();
                if (format != 1 && format != 4)
                {
                    errorspan.InnerHtml = "Please Add Challan Format Setting";
                    poperrjs.Visible = true;
                }
                else
                {
                    printChallan(appNoList, format);
                }
            }
            else
            {
                errorspan.InnerHtml = "Please Select A Student";
                poperrjs.Visible = true;
            }
        }
        catch
        {
            errorspan.InnerHtml = "Error While Processing..";
            poperrjs.Visible = true;
        }
    }
    public byte getChallanFormat()
    {
        byte format = 0;
        string formQ = "select LinkValue from New_InsSettings where LinkName='ChallanPrintFormat' and user_code ='" + user_code + "' and college_code ='" + college_code + "'";
        byte.TryParse(d2.GetFunction(formQ), out format);
        return format;
    }
    private ListItem getFeecategory()
    {
        ListItem feeCategory = new ListItem();
        string linkvalue = d2.GetFunction("select LinkValue from New_InsSettings where linkname = 'Fee Yearwise' and user_code ='" + user_code + "' and college_code ='" + college_code + "'");
        DataSet dsFeecat = new DataSet();
        if (linkvalue == "0")
        {
            dsFeecat = d2.select_method_wo_parameter("selECT TextCode,textval from textvaltable where TextCriteria ='FEECA' and textval = '1 Semester' and college_code=" + college_code + "", "Text");
        }
        else
        {
            dsFeecat = d2.select_method_wo_parameter("selECT TextCode,textval from textvaltable where TextCriteria ='FEECA' and textval = '1 Year' and college_code=" + college_code + "", "Text");
        }
        if (dsFeecat.Tables.Count > 0 && dsFeecat.Tables[0].Rows.Count > 0)
        {
            feeCategory.Text = Convert.ToString(dsFeecat.Tables[0].Rows[0]["textval"]);
            feeCategory.Value = Convert.ToString(dsFeecat.Tables[0].Rows[0]["TextCode"]);
        }
        else
        {
            feeCategory.Text = " ";
            feeCategory.Value = "-1";
        }
        return feeCategory;
    }
    public string generateChallanNo()
    {
        string recno = string.Empty;
        try
        {
            int receno = 0;
            string recacr = string.Empty;
            string recnoprev = string.Empty;
            string finYearid = d2.GetFunction("select LinkValue from InsSettings where LinkName='Current Financial Year' and college_code=" + college_code + "");
            string secondreciptqurey = "SELECT ChallanStNo from FM_FinCodeSettings where IsHeader=0 and FinYearFK=" + finYearid + " and CollegeCode=" + college_code + " and FromDate = (select MAX(FromDate) from FM_FinCodeSettings where IsHeader=0 and FinYearFK=" + finYearid + " and CollegeCode=" + college_code + ")";
            DataSet dsrecYr = new DataSet();
            dsrecYr = d2.select_method_wo_parameter(secondreciptqurey, "Text");
            if (dsrecYr.Tables[0].Rows.Count > 0)
            {
                recnoprev = Convert.ToString(dsrecYr.Tables[0].Rows[0][0]);
                if (recnoprev != "")
                {
                    int recno_cur = Convert.ToInt32(recnoprev);
                    receno = recno_cur;
                }
                string acronymquery = d2.GetFunction("SELECT ChallanAcr from FM_FinCodeSettings where IsHeader=0 and FinYearFK=" + finYearid + " and CollegeCode=" + college_code + " and FromDate = (select MAX(FromDate) from FM_FinCodeSettings where IsHeader=0 and FinYearFK=" + finYearid + " and CollegeCode=" + college_code + ")");
                recacr = acronymquery;
                int size = Convert.ToInt32(d2.GetFunction("SELECT  ChallanSize from FM_FinCodeSettings where IsHeader=0 and FinYearFK=" + finYearid + " and CollegeCode=" + college_code + " and FromDate = (select MAX(FromDate) from FM_FinCodeSettings where IsHeader=0 and FinYearFK=" + finYearid + " and CollegeCode=" + college_code + ")"));
                string recenoString = receno.ToString();
                if (size != recenoString.Length && size > recenoString.Length)
                {
                    while (size != recenoString.Length)
                    {
                        recenoString = "0" + recenoString;
                    }
                }
                recno = recacr + recenoString;
            }
            return recno;
        }
        catch { return recno; }
    }
    public string currentFinYear()
    {
        string finYearid = d2.GetFunction("select LinkValue from InsSettings where LinkName='Current Financial Year' and college_code=" + college_code + "").Trim();
        return finYearid;
    }
    public string getCollegeBankPK()
    {
        string bankQ = " select LinkValue from New_InsSettings where LinkName='AdmissionBankForChallan'  and user_code ='" + user_code + "' and college_code ='" + college_code + "'";
        string res = Convert.ToString(d2.GetFunction(bankQ));
        return res;
    }
    public bool checkedOK(out List<string> appNoList, FarPoint.Web.Spread.FpSpread spread)
    {
        appNoList = new List<string>();
        bool Ok = false;
        spread.SaveChanges();
        for (int i = 0; i < spread.Sheets[0].Rows.Count; i++)
        {
            byte check = Convert.ToByte(spread.Sheets[0].Cells[i, 3].Value);
            if (check == 1)
            {
                Ok = true;
                appNoList.Add(Convert.ToString(spread.Sheets[0].Cells[i, 2].Text));
            }
        }
        return Ok;
    }
    private void printChallan(List<string> appNoList, byte format)
    {
        try
        {
            errorspan.InnerHtml = string.Empty;
            ListItem feecategory = getFeecategory();
            if (feecategory.Value != "-1")
            {
                // contentDiv.InnerHtml = string.Empty;
                StringBuilder sbError = new StringBuilder();
                int errNo = 1;
                int cnt = 0;
                Gios.Pdf.PdfDocument mychallan = new Gios.Pdf.PdfDocument(PdfDocumentFormat.A4_Horizontal);
                mychallan = new Gios.Pdf.PdfDocument(PdfDocumentFormat.InInches(13.8, 8.5));
                foreach (string appformNo in appNoList)
                {
                    #region For Every Student
                    bool createPDFOK = false;
                    Int64 appno;
                    //string appNoQ = "select app_no from applyn where app_formno='" + appformNo + "'";
                    //Int64.TryParse(d2.GetFunction(appNoQ), out appno);
                    Int64.TryParse(appformNo, out appno);
                    if (appno > 0)
                    {
                        if (format == 1)
                        {
                            //For Mcc and Others
                            createPDFOK = challanMCC(appno, feecategory, mychallan);
                        }
                        if (format == 4)
                        {
                            createPDFOK = challanNewCollege(appno, feecategory);
                        }
                        if (!createPDFOK)
                        {
                            sbError.Append(errNo + " " + appformNo + "\n");
                            errNo++;
                        }
                        else
                        {

                            cnt++;
                        }
                    }
                    else
                    {
                        sbError.Append(errNo + ") " + appformNo + "\n");
                        errNo++;
                    }
                    #endregion
                }
                //Final Print
                if (cnt > 0)
                {
                    if (format == 1)
                    {
                        string appPath = HttpContext.Current.Server.MapPath("~");
                        if (appPath != "")
                        {
                            string szPath = appPath + "/Report/";
                            string szFile = "Challan" + DateTime.Now.ToString("ddMMyyyy") + DateTime.Now.ToString("HHMMss") + ".pdf";
                            mychallan.SaveToFile(szPath + szFile);
                            Response.Write("<script>window.open('PrintPage.aspx?name=" + szFile + "', '_blank');</script>");
                            poperrjs.Visible = true;
                            errorspan.InnerHtml = "Challan Generated";
                            if (errNo > 1)
                            {
                                errorspan.InnerHtml += "\nChallan Not Generated for \n" + sbError.ToString();
                            }
                        }
                    }
                    if (format == 4)
                    {
                        if (contentDiv.InnerHtml.Trim() != string.Empty && cnt > 0)
                        {
                            contentDiv.Visible = true;
                            ScriptManager.RegisterStartupScript(this, GetType(), "InvokeButton", "PrintDiv();", true);
                        }
                    }
                }
                else
                {
                    errorspan.InnerHtml = "Challan Not Generated Or Challan already Taken";
                    poperrjs.Visible = true;
                }
            }
            else
            {
                errorspan.InnerHtml = "Semester/ Year Fees Not Set";
                poperrjs.Visible = true;
            }
        }
        catch
        {
            errorspan.InnerHtml = "Error While Processing..";
            poperrjs.Visible = true;
        }
    }
    private bool challanNewCollege(Int64 appNo, ListItem feecategory)
    {
        StringBuilder sbHtml = new StringBuilder();
        bool createPDFOK = false;
        try
        {
            #region Basic Data General
            //Headerwise Only
            int challanType = 3;
            string challanNo = generateChallanNo();
            string finYearid = d2.getCurrentFinanceYear(user_code, college_code);
            string shift = "";
            string acaYear = System.DateTime.Now.Year.ToString();
            shift = d2.GetFunction("select UPPER(type) from course where college_code=" + college_code + "").Trim();
            if (shift == "0" || shift == "")
            {
                shift = "";
            }
            else
            {
                shift = "(" + shift + ")";
            }
            string counterName = d2.GetFunction("select LinkValue from New_InsSettings where LinkName= 'ChallanFeeCounterValue' and user_code ='" + user_code + "' and college_code ='" + college_code + "' ");
            if (counterName.Trim() == "0")
                counterName = string.Empty;
            string colName = string.Empty;
            //colName = "THE NEW COLLEGE (AUTONOMOUS) CH-14";
            colName = d2.GetFunction("SELECT collname FROM collinfo where college_code='" + college_code + "'");
            string useIFSC = d2.GetFunction("select LinkValue from New_InsSettings where LinkName= 'DisplayIFSCForChallan' and user_code ='" + user_code + "' and college_code ='" + college_code + "' ").Trim();
            string parName = string.Empty;
            parName = d2.GetFunction("select LinkValue from New_InsSettings where LinkName='ChallanParticular' and user_code ='" + user_code + "' and college_code =" + college_code + "").Trim();
            if (parName == "0" || parName == "")
                parName = "Particulars";
            else
                parName = "Particulars - " + parName;
            string useDegAcr = d2.GetFunction("select LinkValue from New_InsSettings where LinkName= 'DisplayAcrForChallan' and user_code ='" + user_code + "' and college_code ='" + college_code + "' ").Trim();
            int useDenom = Convert.ToInt32(d2.GetFunction("select LinkValue from New_InsSettings where LinkName='DisplayDenominationChallan' and user_code ='" + user_code + "' and college_code ='" + college_code + "'").Trim());
            string bankName = "";
            string bankPK = "";
            string bankCity = "";
            string bankAddress = "";
            bankPK = getCollegeBankPK();
            bankName = d2.GetFunction("select bankname from FM_FinBankMaster where BankPK='" + bankPK + "'").Trim();
            bankAddress = d2.GetFunction("select Street+', '+(select MasterValue from CO_MasterValues where MasterCode=District)+'-'+PinCode as address from FM_FinBankMaster where BankPK=" + bankPK + "");
            bankAddress = "(" + bankAddress + ")";
            bankCity = d2.GetFunction("select Upper(BankBranch) as city from FM_FinBankMaster where BankPK=" + bankPK + "") + " Branch";
            #endregion
            int count = 0;
            #region Basic Data Student
            string recptNo = generateChallanNo();
            string recptDt = DateTime.Now.Date.ToString();
            string studname = string.Empty;
            string batchYrSem = string.Empty;
            string appnoNew = appNo.ToString();
            string degreeCode = string.Empty;
            string stream = string.Empty;
            string feeCategory = string.Empty;
            string app_formno = string.Empty;
            feeCategory = feecategory.Value;
            string rolldisplay = "Application No :";//Admission No :
            string rollvalue = string.Empty;
            string colquery = "select collname,university,address1+' '+address2+' '+address3 as address1,' - '+pincode as address2 from collinfo where college_code=" + college_code + " select a.app_formno,a.Current_Semester,a.stud_name,a.Degree_code,(c.Course_Name +' - '+ dt.Dept_Name) as department, (c.Course_Name +' - '+ dt.dept_acronym) as dept_acronym,a.Batch_Year,(select TextVal  from TextValTable where TextCode = a.seattype) as seattype ,a.mother,a.parent_name,ISNULL( type,'') as type from  applyn a,Degree d,Department dt,Course c where  a.degree_code =d.Degree_Code and d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and a.App_No='" + appnoNew + "' and d.college_code=" + college_code + "";//Registration r, 16.05.17
            string collegename = "";
            string add1 = "";
            string add2 = "";
            string univ = "";
            string deg = "";
            string cursem = "";
            string batyr = "";
            ds.Clear();
            ds = d2.select_method_wo_parameter(colquery, "Text");
            if (ds.Tables.Count > 0)
            {
                if (ds.Tables[0].Rows.Count > 0)
                {
                    collegename = Convert.ToString(ds.Tables[0].Rows[0]["collname"]);
                    add1 = Convert.ToString(ds.Tables[0].Rows[0]["address1"]);
                    add2 = Convert.ToString(ds.Tables[0].Rows[0]["address2"]);
                    univ = Convert.ToString(ds.Tables[0].Rows[0]["university"]);
                }
                if (ds.Tables[1].Rows.Count > 0)
                {
                    if (useDegAcr == "0")
                    {
                        deg = Convert.ToString(ds.Tables[1].Rows[0]["department"]);
                    }
                    else
                    {
                        deg = Convert.ToString(ds.Tables[1].Rows[0]["dept_acronym"]);
                    }
                    degreeCode = Convert.ToString(ds.Tables[1].Rows[0]["Degree_code"]);
                    cursem = Convert.ToString(ds.Tables[1].Rows[0]["Current_Semester"]);
                    batyr = Convert.ToString(ds.Tables[1].Rows[0]["Batch_Year"]);
                    stream = Convert.ToString(ds.Tables[1].Rows[0]["type"]);
                    studname = Convert.ToString(ds.Tables[1].Rows[0]["stud_name"]);
                    app_formno = Convert.ToString(ds.Tables[1].Rows[0]["app_formno"]);
                    rollvalue = app_formno;
                    acaYear = d2.GetFunction("select value from master_Settings where settings='Academic year'");
                    try
                    {
                        acaYear = acaYear.Split(',')[0] + "-" + acaYear.Split(',')[1];
                    }
                    catch { }
                    string Termdisp = d2.GetFunction("select UPPER(type) from course where college_code=" + college_code + "").Trim();
                    string linkvalue = d2.GetFunction("select LinkValue from New_InsSettings where linkname = 'Fee Yearwise' and user_code ='" + user_code + "' and college_code ='" + college_code + "'");
                    if (Termdisp.Trim() == "SHIFT I")
                    {
                        try
                        {
                            double cursemester = Convert.ToDouble(cursem);
                            if (cursemester % 2 == 1)
                            {
                                cursem = rs.romanLetter(cursemester.ToString()) + " & " + rs.romanLetter((cursemester + 1).ToString());
                            }
                            else
                            {
                                cursem = rs.romanLetter((cursemester - 1).ToString()) + " & " + rs.romanLetter(cursemester.ToString());
                            }
                        }
                        catch { }
                        cursem = "Term : " + cursem;
                    }
                    else
                    {
                        cursem = "Term : " + rs.romanLetter(cursem);
                    }
                }
            }
            #endregion
            #region PDF Generation
            List<string> hdrInGrp = new List<string>();
            string bnkAcc = "";
            bool addpageOK = false;
            int y = 0;
            double grandtotal = 0.00;
            y = -30;
            int heght = 380;
            int hdrsno = 0;
            string selectHeadersQ = "select distinct HeaderFK,h.HeaderName   from FT_FeeAllot a,FM_HeaderMaster h where h.HeaderPK =a.HeaderFK and App_No =" + appnoNew + " and FeeCategory ='" + feeCategory + "'";
            DataSet dsHead = new DataSet();
            dsHead = d2.select_method_wo_parameter(selectHeadersQ, "Text");
            CheckBoxList cbl_grpheader = new CheckBoxList();
            if (dsHead.Tables.Count > 0 && dsHead.Tables[0].Rows.Count > 0)
            {
                cbl_grpheader.DataSource = dsHead;
                cbl_grpheader.DataTextField = "HeaderName";
                cbl_grpheader.DataValueField = "HeaderFK";
                cbl_grpheader.DataBind();
            }
            for (int indx = 0; indx < cbl_grpheader.Items.Count; indx++)
            {
                string HdrId = "";
                string dispHdr = "";
                dispHdr = Convert.ToString(cbl_grpheader.Items[indx].Text);
                HdrId = Convert.ToString(cbl_grpheader.Items[indx].Value);
                string QFinTot = "	SELECT App_FormNo,Stud_Name,Course_Name+'-'+Dept_Name Degree,TextVal,DispStream,ChlGroupHeader,SUM(TotalAmount) as Totamount	FROM FT_FeeAllot A,applyn P,Degree G,Course U,Department D,FS_ChlGroupHeaderSettings S,TextValTable T	WHERE A.app_no = P.app_no AND P.degree_code = G.Degree_Code AND G.Course_Id = U.Course_Id AND G.college_code = U.college_code	AND G.Dept_Code = D.Dept_Code AND G.college_code = D.college_code AND A.HeaderFK = S.HeaderFK AND A.FeeCategory = T.TextCode AND Stream = '" + stream + "' AND A.HeaderFK IN (" + HdrId + ")  AND A.FeeCategory in(" + feeCategory + ") and P.app_no=" + appnoNew + "	GROUP BY App_FormNo,Stud_Name,Course_Name,Dept_Name,TextVal,DispStream,ChlGroupHeader           	    SELECT isnull(SUM(TakenAmt),0) as TakenAmt	FROM FT_ChallanDet C,FS_ChlGroupHeaderSettings S,TextValTable T 	WHERE C.HeaderFK = S.HeaderFK AND C.FeeCategory = T.TextCode	AND Stream = '" + stream + "' AND C.HeaderFK IN (" + HdrId + ") AND C.FeeCategory in (" + feeCategory + ") and C.app_no=" + appnoNew + "  GROUP BY ChlGroupHeader ";
                DataSet ds2 = new DataSet();
                ds2 = d2.select_method_wo_parameter(QFinTot, "Text");
                if (ds2.Tables.Count > 0)
                {
                    if (ds2.Tables[0].Rows.Count > 0)
                    {
                        double totalAmt = Convert.ToDouble(ds2.Tables[0].Rows[0]["Totamount"]);
                        if (ds2.Tables[1].Rows.Count > 0)
                        {
                            totalAmt -= Convert.ToDouble(ds2.Tables[1].Rows[0]["TakenAmt"]);
                        }
                        if (useIFSC == "0")
                            bnkAcc = "A/c No " + d2.GetFunction("SELECT AccNo FROM FS_ChlGroupHeaderSettings S,FM_FinBankMaster B WHERE S.BankFK = B.BankPK AND ChlGroupHeader = '" + dispHdr + "' ");
                        else
                            bnkAcc = "A/c No " + d2.GetFunction("SELECT AccNo+'-IFSC '+IFSCCode FROM FS_ChlGroupHeaderSettings S,FM_FinBankMaster B WHERE S.BankFK = B.BankPK AND ChlGroupHeader = '" + dispHdr + "' ");
                        dispHdr += " (" + bnkAcc + ")";
                        grandtotal = grandtotal + totalAmt;
                        if (grandtotal > 0)
                        {
                            addpageOK = true;
                            createPDFOK = true;
                            if (totalAmt > 0)
                            {
                                hdrsno++;
                                y = y + 5;
                                #region Update Challan No
                                recptNo = generateChallanNo();
                                if (hdrsno == 1)
                                {
                                    #region HTML Generation
                                    sbHtml.Append("<div style='padding-left:50px;height: 710px;'><table cellpadding='0' cellspacing='0' style='text-align:center; width: 1056px; ' class='classRegular'>");
                                    sbHtml.Append("<tr><td  style='font-size:16px;text-align:center;font-weight:bold;'>BANK COPY</td><td></td><td  style='font-size:16px;text-align:center;font-weight:bold;'>COLLEGE COPY</td><td></td><td  style='font-size:16px;text-align:center;font-weight:bold;'>STUDENT COPY</td></tr>");
                                    sbHtml.Append("<tr class='classBold10'><td><table  Rules='None' class='classBold10' cellpadding='0' cellspacing='0' style='width:380px; border: 2px solid black;'><tr><td style='font-size:16px;'><center><b>" + bankName.ToUpper() + "</b></center></td></tr><tr><td><center>" + bankAddress + "</center></td></tr><tr><td><center>" + counterName + "</center></td></tr><tr><td><center>" + bankCity + "</center></td></tr><tr><td style='font-size:15px;'><center><b>" + colName + "</b></center></td></tr><tr><td><center>COLLEGE FEES CHALLAN " + shift + "</center></td></tr></table></td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><table  Rules='None' class='classBold10' cellpadding='0' cellspacing='0' style='width:380px; border: 2px solid black;'><tr><td  style='font-size:16px;'><center><b>" + bankName.ToUpper() + "</b></center></td></tr><tr><td><center>" + bankAddress + "</center></td></tr><tr><td><center>" + counterName + "</center></td></tr><tr><td><center>" + bankCity + "</center></td></tr><tr><td style='font-size:15px;'><center><b>" + colName + "</b></center></td></tr><tr><td><center>COLLEGE FEES CHALLAN " + shift + "</center></td></tr></table></td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td><table  Rules='None' class='classBold10' cellpadding='0' cellspacing='0' style='width:380px; border: 2px solid black;'><tr><td  style='font-size:16px;'><center><b>" + bankName.ToUpper() + "</b></center></td></tr><tr><td><center>" + bankAddress + "</center></td></tr><tr><td><center>" + counterName + "</center></td></tr><tr><td><center>" + bankCity + "</center></td></tr><tr><td style='font-size:15px;'><center><b>" + colName + "</b></center></td></tr><tr><td><center>COLLEGE FEES CHALLAN " + shift + "</center></td></tr></table></td></tr>");
                                    sbHtml.Append("<tr class='classBold10' style='text-align:center;font-size:12px;'><td ><table  class='classBold10' cellpadding='0' cellspacing='0' style='width:380px; border: 1px solid black;'><tr><td style='width:120px; border: 1px solid black;'><b>CH NO.:" + recptNo + "</b></td><td style='width:180px; border: 1px solid black;'>Receipt No:<br/>(Office Use Only)</td><td style='width:80px; border: 1px solid black;text-align:right;'>Date:" + DateTime.Now.Date.ToString("dd/MM/yyyy") + "</td><tr></table></td><td></td><td><table  class='classBold10' cellpadding='0' cellspacing='0' style='width:380px; border: 1px solid black;'><tr><td style='width:120px; border: 1px solid black;'><b>CH NO.:" + recptNo + "</b></td><td style='width:180px; border: 1px solid black;'>Receipt No:<br/>(Office Use Only)</td><td style='width:80px; border: 1px solid black;text-align:right;'>Date:" + DateTime.Now.Date.ToString("dd/MM/yyyy") + "</td><tr></table ></td><td></td><td><table class='classBold10' cellpadding='0' cellspacing='0' style='width:380px; border: 1px solid black;'><tr><td style='width:120px; border: 1px solid black;'><b>CH NO.:" + recptNo + "</b></td><td style='width:180px; border: 1px solid black;'>Receipt No:<br/>(Office Use Only)</td><td style='width:80px; border: 1px solid black;text-align:right;'>Date:" + DateTime.Now.Date.ToString("dd/MM/yyyy") + "</td><tr></table></td></tr>");
                                    sbHtml.Append("<tr class='classBold10'><td ><table  Rules='Rows' class='classBold10' cellpadding='1' cellspacing='0' style='width:380px;border: 1px solid black;'><tr><td colspan='2'  style='border: 1px solid black;'><b>Student\'s Name:" + studname + "</b></td></tr><tr><td  colspan='2'  style='border: 1px solid black;'><b>" + rolldisplay + rollvalue + "</b><br /><span style='padding-left:0px; width:200px; '>Class :  " + deg + "</span></td></tr><tr><td  style='width:80px;border: 1px solid black;'>" + cursem + "</td><td style='border: 1px solid black;'>Academic Year :" + acaYear + "</td></tr  style='border: 1px solid black;'><tr><td  style='border: 1px solid black;width:220px;'>" + parName + "</td><td  style='border: 1px solid black;text-align:right;'>Amount Rs.</td></tr></table></td><td></td><td><table  Rules='Rows' class='classBold10' cellpadding='1' cellspacing='0' style='width:380px;border: 1px solid black;'><tr><td colspan='2'  style='border: 1px solid black;'><b>Student\'s Name:" + studname + "</b></td></tr><tr><td  colspan='2'  style='border: 1px solid black;'><b>" + rolldisplay + rollvalue + "</b><br /><span style='padding-left:0px; width:200px; '>Class :  " + deg + "</span></td></tr><tr><tr><td  style='width:80px;border: 1px solid black;'>" + cursem + "</td><td style='border: 1px solid black;'>Academic Year :" + acaYear + "</td></tr><tr><td  style='border: 1px solid black;width:220px;'>" + parName + "</td><td  style='border: 1px solid black;text-align:right;'>Amount Rs.</td></tr></table></td><td></td><td><table  Rules='Rows' class='classBold10' cellpadding='1' cellspacing='0' style='width:380px;border: 1px solid black;'><tr><td colspan='2'  style='border: 1px solid black;'><b>Student\'s Name:" + studname + "</b></td></tr><tr><td  colspan='2'  style='border: 1px solid black;'><b>" + rolldisplay + rollvalue + "</b><br /><span style='padding-left:0px; width:200px; '>Class :  " + deg + "</span></td></tr><tr><tr><td  style='width:80px;border: 1px solid black;'>" + cursem + "</td><td style='border: 1px solid black;'>Academic Year :" + acaYear + "</td></tr><tr><td  style='border: 1px solid black;width:220px;'>" + parName + "</td><td  style='border: 1px solid black;text-align:right;'>Amount Rs.</td></tr></table></td></tr>");
                                    #endregion
                                }
                                StringBuilder tempHtml = new StringBuilder();
                                string QEachHdr = "SELECT HeaderFK,isnull(SUM(BalAmount),0) as BalAmount,isnull(SUM(TotalAmount)-SUM(ChlTaken),0) ChallanAmt,FeeCategory	FROM FT_FeeAllot WHERE HeaderFK = " + HdrId + " and App_No=" + appnoNew + "  and FeeCategory in ('" + feeCategory + "') GROUP BY HeaderFK,BalAmount,FeeCategory";
                                DataSet dsEachHdr = new DataSet();
                                dsEachHdr = d2.select_method_wo_parameter(QEachHdr, "Text");
                                if (dsEachHdr.Tables.Count > 0)
                                {
                                    if (dsEachHdr.Tables[0].Rows.Count > 0)
                                    {
                                        string selLedge = "	SELECT f.HeaderFK,LedgerFk, priority,isnull(BalAmount,0) as BalAmount,isnull(TotalAmount,0)-isnull(ChlTaken,0) ChallanAmt,FeeCategory	FROM FT_FeeAllot  f,FM_LedgerMaster l WHERE  l.Ledgerpk=f.ledgerfk   and l.headerfk=f.headerfk   and  f.HeaderFK = " + Convert.ToString(dsEachHdr.Tables[0].Rows[0]["HeaderFK"]) + " and App_No=" + appnoNew + "  and FeeCategory in ('" + feeCategory + "')  order by case when priority is null then 1 else 0 end, priority ";
                                        DataSet dsLedge = new DataSet();
                                        dsLedge = d2.select_method_wo_parameter(selLedge, "Text");
                                        if (dsLedge.Tables.Count > 0)
                                        {
                                            if (dsLedge.Tables[0].Rows.Count > 0)
                                            {
                                                int ledsno = 0;
                                                for (int hdri = 0; hdri < dsLedge.Tables[0].Rows.Count; hdri++)
                                                {
                                                    double remainAmt = 0;
                                                    remainAmt = Convert.ToDouble(Convert.ToString(dsLedge.Tables[0].Rows[hdri]["ChallanAmt"]));
                                                    if (remainAmt > 0)
                                                    {
                                                        string insertChlNo = "INSERT INTO FT_ChallanDet(ChallanNo,ChallanDate,App_No,HeaderFK,FeeAmount,TakenAmt,FeeCategory,FinYearFK,BankFk,LedgerFK,challanType) VALUES('" + recptNo + "','" + recptDt + "'," + appnoNew + "," + Convert.ToString(dsEachHdr.Tables[0].Rows[0]["HeaderFK"]) + "," + Convert.ToString(dsLedge.Tables[0].Rows[hdri]["BalAmount"]) + "," + Convert.ToString(dsLedge.Tables[0].Rows[hdri]["ChallanAmt"]) + "," + Convert.ToString(dsLedge.Tables[0].Rows[hdri]["FeeCategory"]) + "," + finYearid + "," + bankPK + "," + Convert.ToString(dsLedge.Tables[0].Rows[hdri]["LedgerFk"]) + "," + challanType + ")";
                                                        d2.select_method_wo_parameter(insertChlNo, "Text");
                                                        string updateCHlTkn = " update FT_FeeAllot set ChlTaken = +" + remainAmt + "  where FeeCategory ='" + Convert.ToString(dsLedge.Tables[0].Rows[hdri]["FeeCategory"]) + "' and HeaderFK ='" + Convert.ToString(dsEachHdr.Tables[0].Rows[0]["HeaderFK"]) + "' and LedgerFK ='" + Convert.ToString(dsLedge.Tables[0].Rows[hdri]["LedgerFk"]) + "' and App_No='" + appnoNew + "' ";
                                                        d2.update_method_wo_parameter(updateCHlTkn, "Text");
                                                        ledsno++;
                                                        y = y + 7;
                                                        string ledidd = Convert.ToString(dsLedge.Tables[0].Rows[hdri]["LedgerFk"]);
                                                        string legername = d2.GetFunction("select ledgername from FM_LedgerMaster where Ledgerpk=" + ledidd + "");
                                                        tempHtml.Append("<br><span class='classRegular' style='font-size:11px; width:320px;PADDING-LEFT:10PX;'>" + ledsno + "." + legername + "</span>");
                                                        heght -= 12;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                                #endregion
                                y = y + 15;
                                sbHtml.Append("<tr><td><table class='classBold' style='border: 1px solid black;width:380px;font-size:12px;' cellpadding='0' cellspacing='0'  BORDER=1><tr><td style='width:300px;'>" + hdrsno + "." + dispHdr + tempHtml.ToString() + "</td><td style='text-align:right;width:60px;'>" + rs.returnIntegerPart(totalAmt) + "&nbsp;</td></td><td style='width:20px;'>&nbsp;" + rs.returnDecimalPart(totalAmt) + "</tr></table></td><td></td><td><table class='classBold' style='border: 1px solid black;width:380px;font-size:12px;' cellpadding='0' cellspacing='0'   BORDER=1><tr><td style='width:300px;'>" + hdrsno + "." + dispHdr + tempHtml.ToString() + "</td><td style='text-align:right;width:60px;'>" + rs.returnIntegerPart(totalAmt) + "&nbsp;</td></td><td style='width:20px;'>&nbsp;" + rs.returnDecimalPart(totalAmt) + "</tr></table></td><td></td><td><table class='classBold' style='border: 1px solid black;width:380px;font-size:12px;' cellpadding='0' cellspacing='0'  BORDER=1><tr><td style='width:300px;'>" + hdrsno + "." + dispHdr + tempHtml.ToString() + "</td><td style='text-align:right;width:60px;'>" + rs.returnIntegerPart(totalAmt) + "&nbsp;</td></td><td style='width:20px;'>&nbsp;" + rs.returnDecimalPart(totalAmt) + "</tr></table></td></tr>");
                                heght -= 13;
                            }
                        }
                    }
                }
            }
            #region Denomionation and Particulars
            sbHtml.Append("<tr><td><table class='classBold' style='border: 1px solid black;width:380px;font-size:12px;' cellpadding='0' cellspacing='0'  BORDER=1><tr><td style='width:300px;'>Total</td><td style='text-align:right;width:60px;'>" + Math.Round((decimal)Convert.ToDouble(grandtotal), 2) + "&nbsp;</td><td style='width:20px;'>&nbsp;00" + "</td></tr><tr><td colspan='3'>" + "(Rupees " + rs.DecimalToWords((decimal)Convert.ToDouble(grandtotal)) + " Only)" + "</td></tr></table></td><td></td><td><table class='classBold' style='border: 1px solid black;width:380px;font-size:12px;' cellpadding='0' cellspacing='0'   BORDER=1><tr><td style='width:300px;'>Total</td><td style='text-align:right;width:60px;'>" + Math.Round((decimal)Convert.ToDouble(grandtotal), 2) + "&nbsp;</td><td style='width:20px;'>&nbsp;00" + "</td></tr><tr><td colspan='3'>" + "(Rupees " + rs.DecimalToWords((decimal)Convert.ToDouble(grandtotal)) + " Only)" + "</td></tr></table></td><td></td><td><table class='classBold' style='border: 1px solid black;width:380px;font-size:12px;' cellpadding='0' cellspacing='0'  BORDER=1><tr><td style='width:300px;'>Total</td><td style='text-align:right;width:60px;'>" + Math.Round((decimal)Convert.ToDouble(grandtotal), 2) + "&nbsp;</td><td style='width:20px;'>&nbsp;00" + "</td></tr><tr><td colspan='3'>" + "(Rupees " + rs.DecimalToWords((decimal)Convert.ToDouble(grandtotal)) + " Only)" + "</td></tr></table></td></tr>");
            sbHtml.Append("<tr><td><table style='width:380px;'  cellpadding='0' cellspacing='0' ><tr><td style='width:380px;border:solid 1px #000000;'></td></tr></table><table class='classBold' style='border: 1px solid black;width:380px;font-size:12px;' cellpadding='0' cellspacing='0'  RULES='ROWS'><tr><td>Signature of Remitter<br>Mobile No</td><td></td></tr></table></td><td></td><td><table style='width:380px;'  cellpadding='0' cellspacing='0' ><tr><td style='width:380px;border:solid 1px #000000;'></td></tr></table><table class='classBold' style='border: 1px solid black;width:380px;font-size:12px;' cellpadding='0' cellspacing='0' RULES='ROWS'><tr><td>Signature of Remitter<br>Mobile No</td><td></td></tr></table></td><td></td><td><table style='width:380px;'  cellpadding='0' cellspacing='0' ><tr><td style='width:380px;border:solid 1px #000000;'></td></tr></table><table class='classBold' style='border: 1px solid black;width:380px;font-size:12px;' cellpadding='0' cellspacing='0' RULES='ROWS'><tr><td>Signature of Remitter<br>Mobile No</td><td></td></tr></table></td></tr>");
            sbHtml.Append("<tr><td><table style='width:380px;'  cellpadding='0' cellspacing='0' ><tr><td style='width:380px;border:solid 1px #000000;height:" + (heght - 170) + "px;'></td></tr></table><table class='classBold' style='border: 1px solid black;width:380px;font-size:12px;' cellpadding='0' cellspacing='0'  RULES='ROWS'><tr><td><br/>Signature of Cashier</td><td style='text-align:right;'><br/>Manager / Acct.</td></tr></table></td><td></td><td><table style='width:380px;'  cellpadding='0' cellspacing='0' ><tr><td style='width:380px;border:solid 1px #000000;height:" + (heght - 170) + "px;'></td></tr></table><table class='classBold' style='border: 1px solid black;width:380px;font-size:12px;' cellpadding='0' cellspacing='0' RULES='ROWS'><tr><td><br/>Signature of Cashier</td><td style='text-align:right;'><br/>Manager / Acct.</td></tr></table></td><td></td><td><table style='width:380px;'  cellpadding='0' cellspacing='0' ><tr><td style='width:380px;border:solid 1px #000000;height:" + (heght - 170) + "px;'></td></tr></table><table class='classBold' style='border: 1px solid black;width:380px;font-size:12px;' cellpadding='0' cellspacing='0' RULES='ROWS'><tr><td><br/>Signature of Cashier</td><td style='text-align:right;'><br/>Manager / Acct.</td></tr></table></td></tr>");
            sbHtml.Append("<tr><td style='border:none;'>&nbsp;</td><tr>");
            if (useDenom == 1)
            {
                //College
                sbHtml.Append("<tr><td><table  class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td colspan='5'><center>PARTICULARS OF DEMAND DRAFT AND DENOMINATION</center></td></tr><tr><td>Name of Bank</td><td>Place of Bank</td><td>Draft Number</td><td>Date</td><td>Amount</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table></td><td></td><td></td><td></td><td></td></tr>");
                sbHtml.Append("<tr><td><table class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td style='width:80px;'>1000 X</td><td  style='width:80px;'>&nbsp</td><td  style='width:220px;font-size:12px;text-align:center;' rowspan='9'>Bank Seal</td></tr><tr><td>500 X</td><td>&nbsp</td></tr><tr><td>100 X</td><td>&nbsp</td></tr><tr><td>50 X</td><td>&nbsp</td></tr><tr><td>20 X</td><td>&nbsp</td></tr><tr><td>10 X</td><td>&nbsp</td></tr><tr><td>5 X</td><td>&nbsp</td></tr><tr><td>Coins X</td><td>&nbsp</td></tr><tr><td>Total</td><td></td></tr></table> </td><td></td><td></td><td></td><td></td></tr>");
            }
            if (useDenom == 2)
            {
                //Bank
                sbHtml.Append("<tr><td></td><td></td><td><table  class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td colspan='5'><center>PARTICULARS OF DEMAND DRAFT AND DENOMINATION</center></td></tr><tr><td>Name of Bank</td><td>Place of Bank</td><td>Draft Number</td><td>Date</td><td>Amount</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table></td><td></td><td></td></tr>");
                sbHtml.Append("<tr><td></td><td></td><td><table class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td style='width:80px;'>1000 X</td><td  style='width:80px;'>&nbsp</td><td  style='width:220px;font-size:12px;text-align:center;' rowspan='9'>Bank Seal</td></tr><tr><td>500 X</td><td>&nbsp</td></tr><tr><td>100 X</td><td>&nbsp</td></tr><tr><td>50 X</td><td>&nbsp</td></tr><tr><td>20 X</td><td>&nbsp</td></tr><tr><td>10 X</td><td>&nbsp</td></tr><tr><td>5 X</td><td>&nbsp</td></tr><tr><td>Coins X</td><td>&nbsp</td></tr><tr><td>Total</td><td></td></tr></table> </td><td></td><td></td></tr>");
            }
            if (useDenom == 3)
            {
                //Student
                sbHtml.Append("<tr><td></td><td></td><td></td><td></td><td><table  class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td colspan='5'><center>PARTICULARS OF DEMAND DRAFT AND DENOMINATION</center></td></tr><tr><td>Name of Bank</td><td>Place of Bank</td><td>Draft Number</td><td>Date</td><td>Amount</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table></td></tr>");
                sbHtml.Append("<tr><td></td><td></td><td></td><td></td><td><table class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td style='width:80px;'>1000 X</td><td  style='width:80px;'>&nbsp</td><td  style='width:220px;font-size:12px;text-align:center;' rowspan='9'>Bank Seal</td></tr><tr><td>500 X</td><td>&nbsp</td></tr><tr><td>100 X</td><td>&nbsp</td></tr><tr><td>50 X</td><td>&nbsp</td></tr><tr><td>20 X</td><td>&nbsp</td></tr><tr><td>10 X</td><td>&nbsp</td></tr><tr><td>5 X</td><td>&nbsp</td></tr><tr><td>Coins X</td><td>&nbsp</td></tr><tr><td>Total</td><td></td></tr></table> </td></tr>");
            }
            if (useDenom == 4)
            {
                //All
                sbHtml.Append("<tr><td><table  class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td colspan='5'><center>PARTICULARS OF DEMAND DRAFT AND DENOMINATION</center></td></tr><tr><td>Name of Bank</td><td>Place of Bank</td><td>Draft Number</td><td>Date</td><td>Amount</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table></td><td></td><td><table  class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td colspan='5'><center>PARTICULARS OF DEMAND DRAFT AND DENOMINATION</center></td></tr><tr><td>Name of Bank</td><td>Place of Bank</td><td>Draft Number</td><td>Date</td><td>Amount</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table></td><td></td><td><table  class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td colspan='5'><center>PARTICULARS OF DEMAND DRAFT AND DENOMINATION</center></td></tr><tr><td>Name of Bank</td><td>Place of Bank</td><td>Draft Number</td><td>Date</td><td>Amount</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table></td></tr>");
                sbHtml.Append("<tr><td><table class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td style='width:80px;'>1000 X</td><td  style='width:80px;'>&nbsp</td><td  style='width:220px;font-size:12px;text-align:center;' rowspan='9'>Bank Seal</td></tr><tr><td>500 X</td><td>&nbsp</td></tr><tr><td>100 X</td><td>&nbsp</td></tr><tr><td>50 X</td><td>&nbsp</td></tr><tr><td>20 X</td><td>&nbsp</td></tr><tr><td>10 X</td><td>&nbsp</td></tr><tr><td>5 X</td><td>&nbsp</td></tr><tr><td>Coins X</td><td>&nbsp</td></tr><tr><td>Total</td><td></td></tr></table> </td><td></td><td><table class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td style='width:80px;'>1000 X</td><td  style='width:80px;'>&nbsp</td><td  style='width:220px;font-size:12px;text-align:center;' rowspan='9'>Bank Seal</td></tr><tr><td>500 X</td><td>&nbsp</td></tr><tr><td>100 X</td><td>&nbsp</td></tr><tr><td>50 X</td><td>&nbsp</td></tr><tr><td>20 X</td><td>&nbsp</td></tr><tr><td>10 X</td><td>&nbsp</td></tr><tr><td>5 X</td><td>&nbsp</td></tr><tr><td>Coins X</td><td>&nbsp</td></tr><tr><td>Total</td><td></td></tr></table></td><td></td><td><table class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td style='width:80px;'>1000 X</td><td  style='width:80px;'>&nbsp</td><td  style='width:220px;font-size:12px;text-align:center;' rowspan='9'>Bank Seal</td></tr><tr><td>500 X</td><td>&nbsp</td></tr><tr><td>100 X</td><td>&nbsp</td></tr><tr><td>50 X</td><td>&nbsp</td></tr><tr><td>20 X</td><td>&nbsp</td></tr><tr><td>10 X</td><td>&nbsp</td></tr><tr><td>5 X</td><td>&nbsp</td></tr><tr><td>Coins X</td><td>&nbsp</td></tr><tr><td>Total</td><td></td></tr></table></td></tr>");
            }
            if (useDenom == 5)
            {
                //College and Bank
                sbHtml.Append("<tr><td><table  class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td colspan='5'><center>PARTICULARS OF DEMAND DRAFT AND DENOMINATION</center></td></tr><tr><td>Name of Bank</td><td>Place of Bank</td><td>Draft Number</td><td>Date</td><td>Amount</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table></td><td></td><td><table  class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td colspan='5'><center>PARTICULARS OF DEMAND DRAFT AND DENOMINATION</center></td></tr><tr><td>Name of Bank</td><td>Place of Bank</td><td>Draft Number</td><td>Date</td><td>Amount</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table></td><td></td><td></td></tr>");
                sbHtml.Append("<tr><td><table class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td style='width:80px;'>1000 X</td><td  style='width:80px;'>&nbsp</td><td  style='width:220px;font-size:12px;text-align:center;' rowspan='9'>Bank Seal</td></tr><tr><td>500 X</td><td>&nbsp</td></tr><tr><td>100 X</td><td>&nbsp</td></tr><tr><td>50 X</td><td>&nbsp</td></tr><tr><td>20 X</td><td>&nbsp</td></tr><tr><td>10 X</td><td>&nbsp</td></tr><tr><td>5 X</td><td>&nbsp</td></tr><tr><td>Coins X</td><td>&nbsp</td></tr><tr><td>Total</td><td></td></tr></table> </td><td></td><td><table class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td style='width:80px;'>1000 X</td><td  style='width:80px;'>&nbsp</td><td  style='width:220px;font-size:12px;text-align:center;' rowspan='9'>Bank Seal</td></tr><tr><td>500 X</td><td>&nbsp</td></tr><tr><td>100 X</td><td>&nbsp</td></tr><tr><td>50 X</td><td>&nbsp</td></tr><tr><td>20 X</td><td>&nbsp</td></tr><tr><td>10 X</td><td>&nbsp</td></tr><tr><td>5 X</td><td>&nbsp</td></tr><tr><td>Coins X</td><td>&nbsp</td></tr><tr><td>Total</td><td></td></tr></table></td><td></td><td></td></tr>");
            }
            if (useDenom == 6)
            {
                //Student and Bank     
                sbHtml.Append("<tr><td></td><td></td><td><table  class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td colspan='5'><center>PARTICULARS OF DEMAND DRAFT AND DENOMINATION</center></td></tr><tr><td>Name of Bank</td><td>Place of Bank</td><td>Draft Number</td><td>Date</td><td>Amount</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table></td><td></td><td><table  class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td colspan='5'><center>PARTICULARS OF DEMAND DRAFT AND DENOMINATION</center></td></tr><tr><td>Name of Bank</td><td>Place of Bank</td><td>Draft Number</td><td>Date</td><td>Amount</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table></td></tr>");
                sbHtml.Append("<tr><td></td><td></td><td><table class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td style='width:80px;'>1000 X</td><td  style='width:80px;'>&nbsp</td><td  style='width:220px;font-size:12px;text-align:center;' rowspan='9'>Bank Seal</td></tr><tr><td>500 X</td><td>&nbsp</td></tr><tr><td>100 X</td><td>&nbsp</td></tr><tr><td>50 X</td><td>&nbsp</td></tr><tr><td>20 X</td><td>&nbsp</td></tr><tr><td>10 X</td><td>&nbsp</td></tr><tr><td>5 X</td><td>&nbsp</td></tr><tr><td>Coins X</td><td>&nbsp</td></tr><tr><td>Total</td><td></td></tr></table> </td><td></td><td><table class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td style='width:80px;'>1000 X</td><td  style='width:80px;'>&nbsp</td><td  style='width:220px;font-size:12px;text-align:center;' rowspan='9'>Bank Seal</td></tr><tr><td>500 X</td><td>&nbsp</td></tr><tr><td>100 X</td><td>&nbsp</td></tr><tr><td>50 X</td><td>&nbsp</td></tr><tr><td>20 X</td><td>&nbsp</td></tr><tr><td>10 X</td><td>&nbsp</td></tr><tr><td>5 X</td><td>&nbsp</td></tr><tr><td>Coins X</td><td>&nbsp</td></tr><tr><td>Total</td><td></td></tr></table></td></tr>");
            }
            if (useDenom == 7)
            {
                //College and Student
                sbHtml.Append("<tr><td><table  class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td colspan='5'><center>PARTICULARS OF DEMAND DRAFT AND DENOMINATION</center></td></tr><tr><td>Name of Bank</td><td>Place of Bank</td><td>Draft Number</td><td>Date</td><td>Amount</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table></td><td></td><td></td><td></td><td><table  class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td colspan='5'><center>PARTICULARS OF DEMAND DRAFT AND DENOMINATION</center></td></tr><tr><td>Name of Bank</td><td>Place of Bank</td><td>Draft Number</td><td>Date</td><td>Amount</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr></table></td></tr>");
                sbHtml.Append("<tr><td><table class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td style='width:80px;'>1000 X</td><td  style='width:80px;'>&nbsp</td><td  style='width:220px;font-size:12px;text-align:center;' rowspan='9'>Bank Seal</td></tr><tr><td>500 X</td><td>&nbsp</td></tr><tr><td>100 X</td><td>&nbsp</td></tr><tr><td>50 X</td><td>&nbsp</td></tr><tr><td>20 X</td><td>&nbsp</td></tr><tr><td>10 X</td><td>&nbsp</td></tr><tr><td>5 X</td><td>&nbsp</td></tr><tr><td>Coins X</td><td>&nbsp</td></tr><tr><td>Total</td><td></td></tr></table> </td><td></td><td></td><td></td><td><table class='classBold' style='border: 1px solid black;width:380px;' cellpadding='0' cellspacing='0' border='1' ><tr><td style='width:80px;'>1000 X</td><td  style='width:80px;'>&nbsp</td><td  style='width:220px;font-size:12px;text-align:center;' rowspan='9'>Bank Seal</td></tr><tr><td>500 X</td><td>&nbsp</td></tr><tr><td>100 X</td><td>&nbsp</td></tr><tr><td>50 X</td><td>&nbsp</td></tr><tr><td>20 X</td><td>&nbsp</td></tr><tr><td>10 X</td><td>&nbsp</td></tr><tr><td>5 X</td><td>&nbsp</td></tr><tr><td>Coins X</td><td>&nbsp</td></tr><tr><td>Total</td><td></td></tr></table> </td></tr>");
            }
            #endregion
            sbHtml.Append("</table></div>");
            if (grandtotal > 0)
            {
                contentDiv.InnerHtml = sbHtml.ToString();
            }
            else
            {
                sbHtml.Clear();
            }
            if (addpageOK)
            {
                string updateRecpt = " update FM_FinCodeSettings set ChallanStNo=isnull(ChallanStNo,0)+1 where CollegeCode=" + college_code + " and FromDate = (select MAX(FromDate) from FM_FinCodeSettings where IsHeader=0 and FinYearFK=" + finYearid + " and CollegeCode=" + college_code + ")";
                d2.update_method_wo_parameter(updateRecpt, "Text");
            }
            #endregion
        }
        catch { createPDFOK = false; }
        return createPDFOK;
    }
    private bool challanMCC(Int64 appNo, ListItem feecategory, PdfDocument mychallan)
    {
        bool createPDFOK = false;
        try
        {
            #region General Details
            Font Fontbold = new Font("Arial", 8, FontStyle.Bold);
            Font Fontsmall = new Font("Arial", 8, FontStyle.Bold);
            Font Fontsmall1 = new Font("Arial", 10, FontStyle.Bold);
            Font Fontbold1 = new Font("Arial", 10, FontStyle.Bold);
            string useIFSC = d2.GetFunction("select LinkValue from New_InsSettings where LinkName= 'DisplayIFSCForChallan' and user_code ='" + user_code + "' and college_code ='" + college_code + "' ").Trim();
            string finYeaid = currentFinYear();
            string bankName = "";
            string bankPK = "";
            string bankCity = "";
            string bankAddress = "";
            bankPK = getCollegeBankPK();
            bankName = d2.GetFunction("select bankname from FM_FinBankMaster where BankPK='" + bankPK + "'").Trim();
            bankAddress = d2.GetFunction("select Street+', '+(select MasterValue from CO_MasterValues where MasterCode=District)+'-'+PinCode as address from FM_FinBankMaster where BankPK=" + bankPK + "");
            bankAddress = "(" + bankAddress + ")";
            bankCity = d2.GetFunction("select Upper(BankBranch) as city from FM_FinBankMaster where BankPK=" + bankPK + "") + " Branch";
            #endregion
            #region Basic Student Details
            int challanType = 1;
            string recptNo = generateChallanNo();
            string recptDt = DateTime.Now.Date.ToString(); ;
            string studname = string.Empty;
            string batchYrSem = string.Empty;
            string appnoNew = appNo.ToString();
            string regno = string.Empty;
            string degreeCode = string.Empty;
            string stream = string.Empty;
            string feeCategory = string.Empty;
            string app_formno = string.Empty;
            feeCategory = feecategory.Value;
            string rolldisplay = "Admission No :";
            string rollvalue = string.Empty;
            string colquery = "select collname,university,address1+' '+address2+' '+address3 as address1,' - '+pincode as address2 from collinfo where college_code=" + college_code + " select a.app_formno,a.Current_Semester,a.stud_name,a.Degree_code,(c.Course_Name +' - '+ dt.Dept_Name) as department, (c.Course_Name +' - '+ dt.dept_acronym) as dept_acronym,a.Batch_Year,(select TextVal  from TextValTable where TextCode = a.seattype) as seattype ,a.mother,a.parent_name,ISNULL( type,'') as type from  applyn a,Degree d,Department dt,Course c where a.degree_code =d.Degree_Code and d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and a.App_No='" + appnoNew + "' and d.college_code=" + college_code + "";
            string collegename = "";
            string add1 = "";
            string add2 = "";
            string univ = "";
            string deg = "";
            string cursem = "";
            string batyr = "";
            ds.Clear();
            ds = d2.select_method_wo_parameter(colquery, "Text");
            if (ds.Tables.Count > 0)
            {
                if (ds.Tables[0].Rows.Count > 0)
                {
                    collegename = Convert.ToString(ds.Tables[0].Rows[0]["collname"]);
                    add1 = Convert.ToString(ds.Tables[0].Rows[0]["address1"]);
                    add2 = Convert.ToString(ds.Tables[0].Rows[0]["address2"]);
                    univ = Convert.ToString(ds.Tables[0].Rows[0]["university"]);
                }
                if (ds.Tables[1].Rows.Count > 0)
                {
                    //if (degACR == 0)
                    //{
                    deg = Convert.ToString(ds.Tables[1].Rows[0]["department"]);
                    //}
                    //else
                    //{
                    // deg = Convert.ToString(ds.Tables[1].Rows[0]["dept_acronym"]);
                    //}
                    degreeCode = Convert.ToString(ds.Tables[1].Rows[0]["Degree_code"]);
                    cursem = Convert.ToString(ds.Tables[1].Rows[0]["Current_Semester"]);
                    batyr = Convert.ToString(ds.Tables[1].Rows[0]["Batch_Year"]);
                    stream = Convert.ToString(ds.Tables[1].Rows[0]["type"]);
                    studname = Convert.ToString(ds.Tables[1].Rows[0]["stud_name"]);
                    app_formno = Convert.ToString(ds.Tables[1].Rows[0]["app_formno"]);
                    rollvalue = app_formno;
                }
            }
            #endregion
            if (challanType == 1)
            {
                bool checkedHeaderOK = false;
                string groupHdr;
                string[] hdrInGrp0;
                List<string> hdrInGrp = new List<string>();
                #region For Overall
                string QHdrForGroup = "	SELECT ChlGroupHeader FROM FM_ChlBankPrintSettings WHERE DegreeCode = '" + degreeCode + "' AND SettingType = 1 and CollegeCode=" + college_code + " ";
                ds.Clear();
                ds = d2.select_method_wo_parameter(QHdrForGroup, "Text");
                if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
                {
                    for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                    {
                        string bnkAcc = "";
                        checkedHeaderOK = false;
                        groupHdr = Convert.ToString(ds.Tables[0].Rows[i][0]);
                        hdrInGrp0 = groupHdr.Split(',');
                        hdrInGrp.Clear();
                        foreach (string item in hdrInGrp0)
                        {
                            hdrInGrp.Add(item);
                            checkedHeaderOK = true;
                        }
                        if (!checkedHeaderOK)
                        {
                            continue;
                        }
                        //Add new challan Page in this loop
                        bool addpageOK = false;
                        #region TOp portion
                        int y = 0;
                        Gios.Pdf.PdfPage myprov_pdfpage = mychallan.NewPage();
                        PdfTextArea FC = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                                                new PdfArea(mychallan, 25, 30, 150, 20), System.Drawing.ContentAlignment.MiddleLeft, "FEE CHALLAN");
                        PdfTextArea ORGI = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                                                new PdfArea(mychallan, 270, 30, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, "ORIGINAL");
                        PdfTextArea IOB = new PdfTextArea(Fontsmall1, System.Drawing.Color.Black,
                                                                                new PdfArea(mychallan, 70, 50, 200, 20), System.Drawing.ContentAlignment.MiddleCenter, bankName);
                        //PdfTextArea FC4 = new PdfTextArea(Fontsmall1, System.Drawing.Color.Black,
                        //                                                      new PdfArea(mychallan, 70, 60, 200, 20), System.Drawing.ContentAlignment.MiddleCenter, "Bank Branch");
                        PdfTextArea FC5 = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                                                new PdfArea(mychallan, 30, 80, 300, 20), System.Drawing.ContentAlignment.MiddleCenter, collegename);
                        PdfTextArea FC6 = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 20, 90, 300, 20), System.Drawing.ContentAlignment.MiddleCenter, add1 + add2);
                        //PdfTextArea FC33 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                        //                                                   new PdfArea(mychallan, 70, 125, 200, 20), System.Drawing.ContentAlignment.MiddleLeft, DateTime.Now.ToString("dd/MM/yyyy"));
                        PdfTextArea FC8 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 240, 110, 85, 20), System.Drawing.ContentAlignment.MiddleRight, rolldisplay + rollvalue);
                        PdfTextArea FC32 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                        new PdfArea(mychallan, 25, 125, 200, 20), System.Drawing.ContentAlignment.MiddleLeft, "Challan Date:" + DateTime.Now.Date.ToString("dd/MM/yyy"));
                        PdfTextArea FC9 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black, new PdfArea(mychallan, 25, 140, 200, 20), System.Drawing.ContentAlignment.MiddleLeft, "Student's Name:" + studname);
                        //PdfTextArea FC10 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                        //                                                 new PdfArea(mychallan, 250, 140, 200, 20), System.Drawing.ContentAlignment.MiddleLeft, "Day");
                        PdfTextArea FC11 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 20, 145, 300, 20), System.Drawing.ContentAlignment.MiddleLeft, "______________________________________________________________________");
                        PdfTextArea FC12 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 25, 155, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, cursem);
                        PdfTextArea FC13 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 70, 155, 200, 20), System.Drawing.ContentAlignment.MiddleCenter, "Class & Group:" + deg);
                        PdfTextArea FC14 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 20, 160, 300, 20), System.Drawing.ContentAlignment.MiddleLeft, "______________________________________________________________________");
                        PdfTextArea FC15 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 25, 170, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, "PARTICULARS");
                        PdfTextArea FC16 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                        new PdfArea(mychallan, 290, 170, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, "Rs.");
                        PdfTextArea FC17 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                    new PdfArea(mychallan, 20, 175, 300, 20), System.Drawing.ContentAlignment.MiddleLeft, "______________________________________________________________________");
                        double ovrallcredit = 0;
                        double grandtotal = 0.00;
                        myprov_pdfpage.Add(FC17);
                        string text = "";
                        //First Ends
                        PdfTextArea UC = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                                                new PdfArea(mychallan, 355, 30, 150, 20), System.Drawing.ContentAlignment.MiddleLeft, "FEE CHALLAN");
                        PdfTextArea UC1 = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                                                new PdfArea(mychallan, 590, 30, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, "DUPLICATE");
                        PdfTextArea UC2 = new PdfTextArea(Fontsmall1, System.Drawing.Color.Black,
                                                                                new PdfArea(mychallan, 400, 50, 200, 20), System.Drawing.ContentAlignment.MiddleCenter, bankName);
                        PdfTextArea UC5 = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                                                new PdfArea(mychallan, 360, 80, 300, 20), System.Drawing.ContentAlignment.MiddleCenter, collegename);
                        PdfTextArea UC6 = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 350, 90, 300, 20), System.Drawing.ContentAlignment.MiddleCenter, add1 + add2);
                        PdfTextArea UC8 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 570, 110, 85, 20), System.Drawing.ContentAlignment.MiddleRight, rolldisplay + rollvalue);
                        PdfTextArea UC32 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                        new PdfArea(mychallan, 355, 125, 200, 20), System.Drawing.ContentAlignment.MiddleLeft, "Challan Date:" + DateTime.Now.Date.ToString("dd/MM/yyy"));
                        PdfTextArea UC9 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black, new PdfArea(mychallan, 355, 140, 200, 20), System.Drawing.ContentAlignment.MiddleLeft, "Student's Name:" + studname);
                        //PdfTextArea UC10 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                        //                                                 new PdfArea(mychallan, 550, 125, 200, 20), System.Drawing.ContentAlignment.MiddleLeft, "Day");
                        PdfTextArea UC11 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 350, 145, 300, 20), System.Drawing.ContentAlignment.MiddleLeft, "______________________________________________________________________");
                        PdfTextArea UC12 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 355, 155, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, cursem);
                        PdfTextArea UC13 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 400, 155, 200, 20), System.Drawing.ContentAlignment.MiddleCenter, "Class & Group:" + deg);
                        PdfTextArea UC14 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 350, 160, 300, 20), System.Drawing.ContentAlignment.MiddleLeft, "______________________________________________________________________");
                        PdfTextArea UC15 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 355, 170, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, "PARTICULARS");
                        PdfTextArea UC16 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                        new PdfArea(mychallan, 620, 170, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, "Rs.");
                        PdfTextArea UC17 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                        new PdfArea(mychallan, 350, 175, 300, 20), System.Drawing.ContentAlignment.MiddleLeft, "______________________________________________________________________");
                        //second End
                        y = 0;
                        PdfTextArea TC = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                                                new PdfArea(mychallan, 685, 30, 150, 20), System.Drawing.ContentAlignment.MiddleLeft, "FEE CHALLAN");
                        PdfTextArea TC1 = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                                                new PdfArea(mychallan, 920, 30, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, "TRIPLICATE");
                        PdfTextArea TC2 = new PdfTextArea(Fontsmall1, System.Drawing.Color.Black,
                                                                                new PdfArea(mychallan, 720, 50, 200, 20), System.Drawing.ContentAlignment.MiddleCenter, bankName);
                        PdfTextArea TC5 = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                                                new PdfArea(mychallan, 680, 80, 300, 20), System.Drawing.ContentAlignment.MiddleCenter, collegename);
                        PdfTextArea TC6 = new PdfTextArea(Fontbold1, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 670, 90, 300, 20), System.Drawing.ContentAlignment.MiddleCenter, add1 + add2);
                        PdfTextArea TC8 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 900, 110, 85, 20), System.Drawing.ContentAlignment.MiddleRight, rolldisplay + rollvalue);
                        PdfTextArea TC9 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 685, 125, 200, 20), System.Drawing.ContentAlignment.MiddleLeft, "Challan Date:" + DateTime.Now.Date.ToString("dd/MM/yyy"));
                        PdfTextArea TC32 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 685, 140, 200, 20), System.Drawing.ContentAlignment.MiddleLeft, "Student's Name:" + studname);
                        //PdfTextArea TC10 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                        //                                                 new PdfArea(mychallan, 900, 125, 200, 20), System.Drawing.ContentAlignment.MiddleLeft, "Day");
                        PdfTextArea TC11 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 680, 145, 300, 20), System.Drawing.ContentAlignment.MiddleLeft, "______________________________________________________________________");
                        PdfTextArea TC12 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 685, 155, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, cursem);
                        PdfTextArea TC13 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 760, 155, 200, 20), System.Drawing.ContentAlignment.MiddleCenter, "Class & Group:" + deg);
                        PdfTextArea TC14 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 680, 160, 300, 20), System.Drawing.ContentAlignment.MiddleLeft, "______________________________________________________________________");
                        PdfTextArea TC15 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 685, 170, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, "PARTICULARS");
                        PdfTextArea TC16 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                        new PdfArea(mychallan, 950, 170, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, "Rs.");
                        PdfTextArea TC17 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                        new PdfArea(mychallan, 680, 175, 300, 20), System.Drawing.ContentAlignment.MiddleLeft, "______________________________________________________________________");
                        PdfTextArea FC10 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                        new PdfArea(mychallan, 250, 140, 70, 20), System.Drawing.ContentAlignment.MiddleRight, stream);
                        PdfTextArea UC10 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 580, 140, 70, 20), System.Drawing.ContentAlignment.MiddleRight, stream);
                        PdfTextArea TC10 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 910, 140, 70, 20), System.Drawing.ContentAlignment.MiddleRight, stream);
                        myprov_pdfpage.Add(FC10);
                        myprov_pdfpage.Add(UC10);
                        myprov_pdfpage.Add(TC10);
                        y = 0;
                        #endregion
                        //Middle portion of the challan
                        #region Middle Portion challan
                        int chk = 0;
                        for (int indx = 0; indx < hdrInGrp.Count; indx++)
                        {
                            string QhdrId = "SELECT HeaderFK  FROM FS_ChlGroupHeaderSettings where ChlGroupHeader in ('" + hdrInGrp[indx] + "') and Stream='" + stream + "'";
                            string HdrId = "";
                            string dispHdr = "";
                            DataSet ds1 = new DataSet();
                            ds1 = d2.select_method_wo_parameter(QhdrId, "Text");
                            if (ds1.Tables.Count > 0)
                            {
                                if (ds1.Tables[0].Rows.Count > 0)
                                {
                                    for (int j = 0; j < ds1.Tables[0].Rows.Count; j++)
                                    {
                                        if (HdrId == "")
                                        {
                                            HdrId = Convert.ToString(ds1.Tables[0].Rows[j]["HeaderFK"]);
                                        }
                                        else
                                        {
                                            HdrId += "," + Convert.ToString(ds1.Tables[0].Rows[j]["HeaderFK"]);
                                        }
                                    }
                                    string QFinTot = "	SELECT App_FormNo,Stud_Name,Course_Name+'-'+Dept_Name Degree,TextVal,DispStream,ChlGroupHeader,SUM(TotalAmount) as Totamount	FROM FT_FeeAllot A,applyn P,Degree G,Course U,Department D,FS_ChlGroupHeaderSettings S,TextValTable T	WHERE A.app_no = P.app_no AND P.degree_code = G.Degree_Code AND G.Course_Id = U.Course_Id AND G.college_code = U.college_code	AND G.Dept_Code = D.Dept_Code AND G.college_code = D.college_code AND A.HeaderFK = S.HeaderFK AND A.FeeCategory = T.TextCode AND Stream = '" + stream + "' AND A.HeaderFK IN (" + HdrId + ")  AND A.FeeCategory in(" + feeCategory + ") and P.app_no=" + appnoNew + " and a.balamount!=0	GROUP BY App_FormNo,Stud_Name,Course_Name,Dept_Name,TextVal,DispStream,ChlGroupHeader           	    SELECT isnull(SUM(TakenAmt),0) as TakenAmt	FROM FT_ChallanDet C,FS_ChlGroupHeaderSettings S,TextValTable T 	WHERE C.HeaderFK = S.HeaderFK AND C.FeeCategory = T.TextCode	AND Stream = '" + stream + "' AND C.HeaderFK IN (" + HdrId + ") AND C.FeeCategory in (" + feeCategory + ") and C.app_no=" + appnoNew + "  GROUP BY ChlGroupHeader ";

                                    //SELECT App_FormNo,Stud_Name,Course_Name+'-'+Dept_Name Degree,TextVal,DispStream,ChlGroupHeader,SUM(TotalAmount) as Totamount	FROM FT_FeeAllot A,applyn P,Degree G,Course U,Department D,FS_ChlGroupHeaderSettings S,TextValTable T,FS_HeaderPrivilage PH	WHERE A.app_no = P.app_no AND P.degree_code = G.Degree_Code AND G.Course_Id = U.Course_Id AND G.college_code = U.college_code	AND G.Dept_Code = D.Dept_Code AND G.college_code = D.college_code and A.HeaderFK = PH.HeaderFK  and PH.HeaderFK = S.HeaderFK  AND A.HeaderFK = S.HeaderFK AND A.FeeCategory = T.TextCode AND Stream = '" + stream + "' AND A.HeaderFK IN (" + HdrId + ")  AND A.FeeCategory in(" + feeCategory + ") and P.app_no=" + appnoNew + " and PH.usercode='" + usercode + "' 	GROUP BY App_FormNo,Stud_Name,Course_Name,Dept_Name,TextVal,DispStream,ChlGroupHeader           	    SELECT isnull(SUM(TakenAmt),0) as TakenAmt	FROM FT_ChallanDet C,FS_ChlGroupHeaderSettings S,TextValTable T,FS_HeaderPrivilage P 	WHERE  C.HeaderFK = p.HeaderFK and  p.HeaderFK = S.HeaderFK and C.HeaderFK = S.HeaderFK AND C.FeeCategory = T.TextCode	AND Stream = '" + stream + "' AND C.HeaderFK IN (" + HdrId + ") AND C.FeeCategory in (" + feeCategory + ")  and p.usercode='" + usercode + "' and C.app_no=" + appnoNew + "  GROUP BY ChlGroupHeader
                                    DataSet ds2 = new DataSet();
                                    ds2 = d2.select_method_wo_parameter(QFinTot, "Text");
                                    if (ds2.Tables.Count > 0)
                                    {
                                        if (ds2.Tables[0].Rows.Count > 0)
                                        {
                                            dispHdr = Convert.ToString(ds2.Tables[0].Rows[0]["ChlGroupHeader"]);
                                            double totalAmt = Convert.ToDouble(ds2.Tables[0].Rows[0]["Totamount"]);
                                            if (ds2.Tables[1].Rows.Count > 0)
                                            {
                                                totalAmt -= Convert.ToDouble(ds2.Tables[1].Rows[0]["TakenAmt"]);
                                            }
                                            //bnkAcc = "A/c No " + d2.GetFunction("SELECT AccNo FROM FS_ChlGroupHeaderSettings S,FM_FinBankMaster B WHERE S.BankFK = B.BankPK AND ChlGroupHeader = '" + dispHdr + "' AND BankPK = '" + bankPK + "'");
                                            bnkAcc = "A/c No " + d2.GetFunction("SELECT AccNo FROM FS_ChlGroupHeaderSettings S,FM_FinBankMaster B WHERE S.BankFK = B.BankPK AND ChlGroupHeader = '" + dispHdr + "'");
                                            dispHdr += " (" + bnkAcc + ")";
                                            grandtotal = grandtotal + totalAmt;
                                            if (grandtotal > 0)
                                            {
                                                addpageOK = true;
                                                createPDFOK = true;
                                                if (totalAmt > 0)
                                                {
                                                    if (chk == 0)
                                                    {
                                                        //chk++;
                                                        #region Update Challan No
                                                        recptNo = generateChallanNo();
                                                        for (int j = 0; j < ds1.Tables[0].Rows.Count; j++)
                                                        {
                                                            string QEachHdr = "SELECT HeaderFK,isnull(SUM(BalAmount),0) as BalAmount,isnull(SUM(TotalAmount)-SUM(ChlTaken),0) ChallanAmt,FeeCategory	FROM FT_FeeAllot WHERE HeaderFK = " + Convert.ToString(ds1.Tables[0].Rows[j]["HeaderFK"]) + " and App_No=" + appnoNew + " and FeeCategory in ('" + feeCategory + "')GROUP BY HeaderFK,BalAmount,FeeCategory";
                                                            DataSet dsEachHdr = new DataSet();
                                                            dsEachHdr = d2.select_method_wo_parameter(QEachHdr, "Text");
                                                            if (dsEachHdr.Tables.Count > 0)
                                                            {
                                                                if (dsEachHdr.Tables[0].Rows.Count > 0)
                                                                {
                                                                    string selLedge = "	SELECT f.HeaderFK,LedgerFk,priority,isnull(BalAmount,0) as BalAmount,isnull(TotalAmount,0)-isnull(ChlTaken,0) ChallanAmt,FeeCategory	FROM FT_FeeAllot  f,FM_LedgerMaster l WHERE l.Ledgerpk=f.ledgerfk   and l.headerfk=f.headerfk   and  f.HeaderFK = " + Convert.ToString(dsEachHdr.Tables[0].Rows[0]["HeaderFK"]) + " and FeeCategory in ('" + feeCategory + "') and App_No=" + appnoNew + "  order by case when priority is null then 1 else 0 end, priority ";
                                                                    DataSet dsLedge = new DataSet();
                                                                    dsLedge = d2.select_method_wo_parameter(selLedge, "Text");
                                                                    if (dsLedge.Tables.Count > 0)
                                                                    {
                                                                        if (dsLedge.Tables[0].Rows.Count > 0)
                                                                        {
                                                                            for (int hdri = 0; hdri < dsLedge.Tables[0].Rows.Count; hdri++)
                                                                            {
                                                                                double remainAmt = 0;
                                                                                remainAmt = Convert.ToDouble(Convert.ToString(dsLedge.Tables[0].Rows[hdri]["ChallanAmt"]));
                                                                                if (remainAmt > 0)
                                                                                {
                                                                                    string insertChlNo = "INSERT INTO FT_ChallanDet(ChallanNo,ChallanDate,App_No,HeaderFK,FeeAmount,TakenAmt,FeeCategory,FinYearFK,BankFk,LedgerFK,challanType) VALUES('" + recptNo + "','" + recptDt + "'," + appnoNew + "," + Convert.ToString(dsEachHdr.Tables[0].Rows[0]["HeaderFK"]) + "," + Convert.ToString(dsLedge.Tables[0].Rows[hdri]["BalAmount"]) + "," + Convert.ToString(dsLedge.Tables[0].Rows[hdri]["ChallanAmt"]) + "," + Convert.ToString(dsLedge.Tables[0].Rows[hdri]["FeeCategory"]) + "," + finYeaid + "," + bankPK + "," + Convert.ToString(dsLedge.Tables[0].Rows[hdri]["LedgerFk"]) + "," + challanType + ")";
                                                                                    d2.select_method_wo_parameter(insertChlNo, "Text");
                                                                                    string updateCHlTkn = " update FT_FeeAllot set ChlTaken = +" + remainAmt + "  where FeeCategory ='" + Convert.ToString(dsLedge.Tables[0].Rows[hdri]["FeeCategory"]) + "' and HeaderFK ='" + Convert.ToString(dsEachHdr.Tables[0].Rows[0]["HeaderFK"]) + "' and LedgerFK ='" + Convert.ToString(dsLedge.Tables[0].Rows[hdri]["LedgerFk"]) + "' and App_No='" + appnoNew + "' ";
                                                                                    d2.update_method_wo_parameter(updateCHlTkn, "Text");
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        #endregion
                                                    }
                                                }
                                            }
                                            PdfTextArea FC18 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                                                new PdfArea(mychallan, 25, y + 185, 250, 20), System.Drawing.ContentAlignment.MiddleLeft, dispHdr);
                                            PdfTextArea FC19 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                                            new PdfArea(mychallan, 270, y + 185, 50, 20), System.Drawing.ContentAlignment.MiddleRight, returnIntegerPart(totalAmt) + "." + returnDecimalPart(totalAmt));
                                            PdfTextArea FC171 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                                new PdfArea(mychallan, 20, y + 190, 300, 20), System.Drawing.ContentAlignment.MiddleLeft, "______________________________________________________________________");
                                            myprov_pdfpage.Add(FC18);
                                            myprov_pdfpage.Add(FC171);
                                            myprov_pdfpage.Add(FC19);
                                            PdfTextArea UC18 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                                                new PdfArea(mychallan, 355, y + 185, 250, 20), System.Drawing.ContentAlignment.MiddleLeft, dispHdr);
                                            PdfTextArea UC19 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                                            new PdfArea(mychallan, 600, y + 185, 50, 20), System.Drawing.ContentAlignment.MiddleRight, returnIntegerPart(totalAmt) + "." + returnDecimalPart(totalAmt));
                                            PdfTextArea UC171 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                                new PdfArea(mychallan, 350, y + 190, 300, 20), System.Drawing.ContentAlignment.MiddleLeft, "______________________________________________________________________");
                                            myprov_pdfpage.Add(UC18);
                                            myprov_pdfpage.Add(UC19);
                                            myprov_pdfpage.Add(UC171);
                                            PdfTextArea TC18 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                                                new PdfArea(mychallan, 685, y + 185, 250, 20), System.Drawing.ContentAlignment.MiddleLeft, dispHdr);
                                            PdfTextArea TC19 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                                            new PdfArea(mychallan, 930, y + 185, 50, 20), System.Drawing.ContentAlignment.MiddleRight, returnIntegerPart(totalAmt) + "." + returnDecimalPart(totalAmt));
                                            PdfTextArea TC171 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                                new PdfArea(mychallan, 680, y + 190, 300, 20), System.Drawing.ContentAlignment.MiddleLeft, "______________________________________________________________________");
                                            myprov_pdfpage.Add(TC18);
                                            myprov_pdfpage.Add(TC19);
                                            myprov_pdfpage.Add(TC171);
                                            y = y + 15;
                                        }
                                    }
                                }
                            }
                        }
                        #endregion
                        //Middle portion of challan End
                        //Bottom portion of the challan
                        if (addpageOK)
                        {
                            string updateRecpt = " update FM_FinCodeSettings set ChallanStNo=isnull(ChallanStNo,0)+1 where CollegeCode=" + college_code + " and FromDate = (select MAX(FromDate) from FM_FinCodeSettings where IsHeader=0 and FinYearFK=" + finYeaid + " and CollegeCode=" + college_code + ")";
                            d2.update_method_wo_parameter(updateRecpt, "Text");
                            PdfTextArea FC4 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                                new PdfArea(mychallan, 70, 60, 200, 20), System.Drawing.ContentAlignment.MiddleCenter, bankCity);
                            PdfTextArea UC4 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                    new PdfArea(mychallan, 400, 60, 200, 20), System.Drawing.ContentAlignment.MiddleCenter, bankCity);
                            PdfTextArea TC4 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                                    new PdfArea(mychallan, 720, 60, 200, 20), System.Drawing.ContentAlignment.MiddleCenter, bankCity);
                            myprov_pdfpage.Add(FC4);
                            myprov_pdfpage.Add(UC4);
                            myprov_pdfpage.Add(TC4);
                            PdfTextArea FC7 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                        new PdfArea(mychallan, 25, 110, 200, 20), System.Drawing.ContentAlignment.MiddleLeft, "Challan No:" + recptNo);
                            PdfTextArea UC7 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                                new PdfArea(mychallan, 355, 110, 200, 20), System.Drawing.ContentAlignment.MiddleLeft, "Challan No:" + recptNo);
                            PdfTextArea TC7 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                                new PdfArea(mychallan, 685, 110, 200, 20), System.Drawing.ContentAlignment.MiddleLeft, "Challan No:" + recptNo);
                            //PdfImage FC08 = mychallan.NewImage(generateBarcode(recptNo));
                            //myprov_pdfpage.Add(FC08, 250, 125);
                            //myprov_pdfpage.Add(FC08, 550, 125);
                            //myprov_pdfpage.Add(FC08, 900, 125);
                            #region Bottom Portion of Challan
                            text = "(" + DecimalToWords((decimal)grandtotal) + " Rupees Only)";
                            PdfTextArea FC24 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                                new PdfArea(mychallan, 25, y + 190, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, "GRAND TOTAL");
                            PdfTextArea FC25 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 270, y + 190, 50, 20), System.Drawing.ContentAlignment.MiddleRight, returnIntegerPart(grandtotal) + "." + returnDecimalPart(grandtotal));
                            PdfTextArea FC26 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                                new PdfArea(mychallan, 20, y + 195, 300, 20), System.Drawing.ContentAlignment.MiddleLeft, "______________________________________________________________________");
                            PdfTextArea FC27 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 25, y + 205, 300, 20), System.Drawing.ContentAlignment.MiddleLeft, text.ToString());
                            PdfTextArea FC28 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 25, y + 225, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, "Signature of Remitter");
                            PdfTextArea FC29 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 25, y + 265, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, "CASHIER");
                            PdfTextArea FC30 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                        new PdfArea(mychallan, 250, y + 265, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, "MANAGER/ACCT");
                            PdfTextArea FC31 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                        new PdfArea(mychallan, 25, y + 300, 270, 20), System.Drawing.ContentAlignment.MiddleLeft, "Please preserve this challan for claims,if any,at the Bursar's Office");
                            PdfArea tete = new PdfArea(mychallan, 20, 20, 310, y + 300);
                            PdfRectangle pr1 = new PdfRectangle(mychallan, tete, Color.Black);
                            myprov_pdfpage.Add(pr1);
                            PdfArea tete2 = new PdfArea(mychallan, 350, 20, 310, y + 300);
                            PdfRectangle pr2 = new PdfRectangle(mychallan, tete2, Color.Black);
                            myprov_pdfpage.Add(pr2);
                            PdfArea tete3 = new PdfArea(mychallan, 680, 20, 310, y + 300);
                            PdfRectangle pr3 = new PdfRectangle(mychallan, tete3, Color.Black);
                            myprov_pdfpage.Add(pr3);
                            Gios.Pdf.PdfTable table = mychallan.NewTable(Fontsmall, 2, 3, 5);
                            table.VisibleHeaders = false;
                            table.SetBorders(Color.Black, 1, BorderType.CompleteGrid);
                            table.Columns[0].SetWidth(100);
                            table.Columns[1].SetWidth(60);
                            table.Columns[2].SetWidth(60);
                            table.Cell(0, 0).SetContent("Cheque/DD No");
                            table.Cell(0, 0).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table.Cell(0, 0).SetFont(Fontbold1);
                            table.Cell(0, 1).SetContent("Date");
                            table.Cell(0, 1).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table.Cell(0, 1).SetFont(Fontbold1);
                            table.Cell(0, 2).SetContent("Amount");
                            table.Cell(0, 2).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table.Cell(0, 2).SetFont(Fontbold1);
                            table.Cell(1, 0).SetContent("\n");
                            table.Cell(1, 0).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table.Cell(1, 0).SetFont(Fontbold1);
                            table.Cell(1, 1).SetContent("\n");
                            table.Cell(1, 1).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table.Cell(1, 1).SetFont(Fontbold1);
                            table.Cell(1, 2).SetContent("\n");
                            table.Cell(1, 2).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table.Cell(1, 2).SetFont(Fontbold1);
                            Gios.Pdf.PdfTablePage myprov_pdfpagetable = table.CreateTablePage(new Gios.Pdf.PdfArea(mychallan, 20, y + 330, 310, 250));
                            myprov_pdfpage.Add(myprov_pdfpagetable);
                            Gios.Pdf.PdfTable table1 = mychallan.NewTable(Fontsmall, 10, 2, 3);
                            table1.VisibleHeaders = false;
                            table1.SetBorders(Color.Black, 1, BorderType.CompleteGrid);
                            table1.Columns[0].SetWidth(100);
                            table1.Columns[1].SetWidth(60);
                            table1.Cell(0, 0).SetContent("2000x");
                            table1.Cell(0, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table1.Cell(0, 0).SetFont(Fontbold1);
                            table1.Cell(1, 0).SetContent("500x");
                            table1.Cell(1, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table1.Cell(1, 0).SetFont(Fontbold1);
                            table1.Cell(2, 0).SetContent("200x");
                            table1.Cell(2, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table1.Cell(2, 0).SetFont(Fontbold1);
                            table1.Cell(3, 0).SetContent("100x");
                            table1.Cell(3, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table1.Cell(3, 0).SetFont(Fontbold1);
                            table1.Cell(4, 0).SetContent("50x");
                            table1.Cell(4, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table1.Cell(4, 0).SetFont(Fontbold1);
                            table1.Cell(5, 0).SetContent("20x");
                            table1.Cell(5, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table1.Cell(5, 0).SetFont(Fontbold1);
                            table1.Cell(6, 0).SetContent("10x");
                            table1.Cell(6, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table1.Cell(6, 0).SetFont(Fontbold1);
                            table1.Cell(7, 0).SetContent("5x");
                            table1.Cell(7, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table1.Cell(7, 0).SetFont(Fontbold1);
                            table1.Cell(8, 0).SetContent("Coinsx");
                            table1.Cell(8, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table1.Cell(8, 0).SetFont(Fontbold1);
                            table1.Cell(9, 0).SetContent("Total");
                            table1.Cell(9, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table1.Cell(9, 0).SetFont(Fontbold1);
                            Gios.Pdf.PdfTablePage myprov_pdfpagetable1 = table1.CreateTablePage(new Gios.Pdf.PdfArea(mychallan, 20, y + 380, 160, 500));
                            myprov_pdfpage.Add(myprov_pdfpagetable1);
                            myprov_pdfpage.Add(FC);
                            myprov_pdfpage.Add(ORGI);
                            myprov_pdfpage.Add(IOB);
                            //myprov_pdfpage.Add(FC4);
                            myprov_pdfpage.Add(FC5);
                            myprov_pdfpage.Add(FC6);
                            myprov_pdfpage.Add(FC7);
                            myprov_pdfpage.Add(FC8);
                            myprov_pdfpage.Add(FC9);
                            //myprov_pdfpage.Add(FC10);
                            myprov_pdfpage.Add(FC11);
                            myprov_pdfpage.Add(FC12);
                            myprov_pdfpage.Add(FC13);
                            myprov_pdfpage.Add(FC14);
                            myprov_pdfpage.Add(FC15);
                            myprov_pdfpage.Add(FC16);
                            myprov_pdfpage.Add(FC24);
                            myprov_pdfpage.Add(FC25);
                            myprov_pdfpage.Add(FC26);
                            myprov_pdfpage.Add(FC27);
                            myprov_pdfpage.Add(FC28);
                            myprov_pdfpage.Add(FC29);
                            myprov_pdfpage.Add(FC30);
                            myprov_pdfpage.Add(FC31);
                            myprov_pdfpage.Add(FC32);
                            //myprov_pdfpage.Add(FC33);
                            //First End
                            myprov_pdfpage.Add(UC17);
                            PdfTextArea UC24 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                                new PdfArea(mychallan, 355, y + 190, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, "GRAND TOTAL");
                            PdfTextArea UC25 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 600, y + 190, 50, 20), System.Drawing.ContentAlignment.MiddleRight, returnIntegerPart(grandtotal) + "." + returnDecimalPart(grandtotal));
                            PdfTextArea UC26 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                                new PdfArea(mychallan, 350, y + 195, 300, 20), System.Drawing.ContentAlignment.MiddleLeft, "______________________________________________________________________");
                            PdfTextArea UC27 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 355, y + 205, 300, 20), System.Drawing.ContentAlignment.MiddleLeft, text.ToString());
                            PdfTextArea UC28 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 355, y + 225, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, "Signature of Remitter");
                            PdfTextArea UC29 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 355, y + 265, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, "CASHIER");
                            PdfTextArea UC30 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                        new PdfArea(mychallan, 580, y + 265, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, "MANAGER/ACCT");
                            PdfTextArea UC31 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                        new PdfArea(mychallan, 355, y + 300, 270, 20), System.Drawing.ContentAlignment.MiddleLeft, "Please preserve this challan for claims,if any,at the Bursar's Office");
                            Gios.Pdf.PdfTable table3 = mychallan.NewTable(Fontsmall, 2, 3, 5);
                            table3.VisibleHeaders = false;
                            table3.SetBorders(Color.Black, 1, BorderType.CompleteGrid);
                            table3.Columns[0].SetWidth(100);
                            table3.Columns[1].SetWidth(60);
                            table3.Columns[2].SetWidth(60);
                            table3.Cell(0, 0).SetContent("Cheque/DD No");
                            table3.Cell(0, 0).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table3.Cell(0, 0).SetFont(Fontbold1);
                            table3.Cell(0, 1).SetContent("Date");
                            table3.Cell(0, 1).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table3.Cell(0, 1).SetFont(Fontbold1);
                            table3.Cell(0, 2).SetContent("Amount");
                            table3.Cell(0, 2).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table3.Cell(0, 2).SetFont(Fontbold1);
                            table3.Cell(1, 0).SetContent("\n");
                            table3.Cell(1, 0).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table3.Cell(1, 0).SetFont(Fontbold1);
                            table3.Cell(1, 1).SetContent("\n");
                            table3.Cell(1, 1).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table3.Cell(1, 1).SetFont(Fontbold1);
                            table3.Cell(1, 2).SetContent("\n");
                            table3.Cell(1, 2).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table3.Cell(1, 2).SetFont(Fontbold1);
                            Gios.Pdf.PdfTablePage myprov_pdfpagetable3 = table3.CreateTablePage(new Gios.Pdf.PdfArea(mychallan, 350, y + 330, 310, 250));
                            myprov_pdfpage.Add(myprov_pdfpagetable3);
                            Gios.Pdf.PdfTable table14 = mychallan.NewTable(Fontsmall, 10, 2, 3);
                            table14.VisibleHeaders = false;
                            table14.SetBorders(Color.Black, 1, BorderType.CompleteGrid);
                            table14.Columns[0].SetWidth(100);
                            table14.Columns[1].SetWidth(60);
                            table14.Cell(0, 0).SetContent("2000x");
                            table14.Cell(0, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table14.Cell(0, 0).SetFont(Fontbold1);
                            table14.Cell(1, 0).SetContent("500x");
                            table14.Cell(1, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table14.Cell(1, 0).SetFont(Fontbold1);
                            table14.Cell(2, 0).SetContent("200x");
                            table14.Cell(2, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table14.Cell(2, 0).SetFont(Fontbold1);
                            table14.Cell(3, 0).SetContent("100x");
                            table14.Cell(3, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table14.Cell(3, 0).SetFont(Fontbold1);
                            table14.Cell(4, 0).SetContent("50x");
                            table14.Cell(4, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table14.Cell(4, 0).SetFont(Fontbold1);
                            table14.Cell(5, 0).SetContent("20x");
                            table14.Cell(5, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table14.Cell(5, 0).SetFont(Fontbold1);
                            table14.Cell(6, 0).SetContent("10x");
                            table14.Cell(6, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table14.Cell(6, 0).SetFont(Fontbold1);
                            table14.Cell(7, 0).SetContent("5x");
                            table14.Cell(7, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table14.Cell(7, 0).SetFont(Fontbold1);
                            table14.Cell(8, 0).SetContent("Coinsx");
                            table14.Cell(8, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table14.Cell(8, 0).SetFont(Fontbold1);
                            table14.Cell(9, 0).SetContent("Total");
                            table14.Cell(9, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table14.Cell(9, 0).SetFont(Fontbold1);
                            Gios.Pdf.PdfTablePage myprov_pdfpagetable4 = table14.CreateTablePage(new Gios.Pdf.PdfArea(mychallan, 350, y + 380, 160, 500));
                            myprov_pdfpage.Add(myprov_pdfpagetable4);
                            myprov_pdfpage.Add(UC);
                            myprov_pdfpage.Add(UC1);
                            myprov_pdfpage.Add(UC2);
                            //myprov_pdfpage.Add(UC4);
                            myprov_pdfpage.Add(UC5);
                            myprov_pdfpage.Add(UC6);
                            myprov_pdfpage.Add(UC7);
                            myprov_pdfpage.Add(UC8);
                            myprov_pdfpage.Add(UC9);
                            //myprov_pdfpage.Add(UC10);
                            myprov_pdfpage.Add(UC11);
                            myprov_pdfpage.Add(UC12);
                            myprov_pdfpage.Add(UC13);
                            myprov_pdfpage.Add(UC14);
                            myprov_pdfpage.Add(UC15);
                            myprov_pdfpage.Add(UC16);
                            myprov_pdfpage.Add(UC24);
                            myprov_pdfpage.Add(UC25);
                            myprov_pdfpage.Add(UC26);
                            myprov_pdfpage.Add(UC27);
                            myprov_pdfpage.Add(UC28);
                            myprov_pdfpage.Add(UC29);
                            myprov_pdfpage.Add(UC30);
                            myprov_pdfpage.Add(UC31);
                            myprov_pdfpage.Add(UC32);
                            //second End
                            myprov_pdfpage.Add(TC17);
                            PdfTextArea TC24 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                                new PdfArea(mychallan, 685, y + 190, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, "GRAND TOTAL");
                            PdfTextArea TC25 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 930, y + 190, 50, 20), System.Drawing.ContentAlignment.MiddleRight, returnIntegerPart(grandtotal) + "." + returnDecimalPart(grandtotal));
                            PdfTextArea TC26 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                                new PdfArea(mychallan, 680, y + 195, 300, 20), System.Drawing.ContentAlignment.MiddleLeft, "______________________________________________________________________");
                            PdfTextArea TC27 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 685, y + 205, 300, 20), System.Drawing.ContentAlignment.MiddleLeft, text.ToString());
                            PdfTextArea TC28 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 685, y + 225, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, "Signature of Remitter");
                            PdfTextArea TC29 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                            new PdfArea(mychallan, 685, y + 265, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, "CASHIER");
                            PdfTextArea TC30 = new PdfTextArea(Fontbold, System.Drawing.Color.Black,
                                                                        new PdfArea(mychallan, 910, y + 265, 100, 20), System.Drawing.ContentAlignment.MiddleLeft, "MANAGER/ACCT");
                            PdfTextArea TC31 = new PdfTextArea(Fontsmall, System.Drawing.Color.Black,
                                                                        new PdfArea(mychallan, 685, y + 300, 270, 20), System.Drawing.ContentAlignment.MiddleLeft, "Please preserve this challan for claims,if any,at the Bursar's Office");
                            Gios.Pdf.PdfTable table5 = mychallan.NewTable(Fontsmall, 2, 3, 5);
                            table5.VisibleHeaders = false;
                            table5.SetBorders(Color.Black, 1, BorderType.CompleteGrid);
                            table5.Columns[0].SetWidth(100);
                            table5.Columns[1].SetWidth(60);
                            table5.Columns[2].SetWidth(60);
                            table5.Cell(0, 0).SetContent("Cheque/DD No");
                            table5.Cell(0, 0).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table5.Cell(0, 0).SetFont(Fontbold1);
                            table5.Cell(0, 1).SetContent("Date");
                            table5.Cell(0, 1).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table5.Cell(0, 1).SetFont(Fontbold1);
                            table5.Cell(0, 2).SetContent("Amount");
                            table5.Cell(0, 2).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table5.Cell(0, 2).SetFont(Fontbold1);
                            table5.Cell(1, 0).SetContent("\n");
                            table5.Cell(1, 0).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table5.Cell(1, 0).SetFont(Fontbold1);
                            table5.Cell(1, 1).SetContent("\n");
                            table5.Cell(1, 1).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table5.Cell(1, 1).SetFont(Fontbold1);
                            table5.Cell(1, 2).SetContent("\n");
                            table5.Cell(1, 2).SetContentAlignment(ContentAlignment.MiddleCenter);
                            table5.Cell(1, 2).SetFont(Fontbold1);
                            Gios.Pdf.PdfTablePage myprov_pdfpagetable31 = table5.CreateTablePage(new Gios.Pdf.PdfArea(mychallan, 680, y + 330, 310, 500));
                            myprov_pdfpage.Add(myprov_pdfpagetable31);
                            Gios.Pdf.PdfTable table15 = mychallan.NewTable(Fontsmall, 10, 2, 3);
                            table15.VisibleHeaders = false;
                            table15.SetBorders(Color.Black, 1, BorderType.CompleteGrid);
                            table15.Columns[0].SetWidth(100);
                            table15.Columns[1].SetWidth(60);
                            table15.Cell(0, 0).SetContent("2000x");
                            table15.Cell(0, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table15.Cell(0, 0).SetFont(Fontbold1);
                            table15.Cell(1, 0).SetContent("500x");
                            table15.Cell(1, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table15.Cell(1, 0).SetFont(Fontbold1);
                            table15.Cell(2, 0).SetContent("200x");
                            table15.Cell(2, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table15.Cell(2, 0).SetFont(Fontbold1);
                            table15.Cell(3, 0).SetContent("100x");
                            table15.Cell(3, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table15.Cell(3, 0).SetFont(Fontbold1);
                            table15.Cell(4, 0).SetContent("50x");
                            table15.Cell(4, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table15.Cell(4, 0).SetFont(Fontbold1);
                            table15.Cell(5, 0).SetContent("20x");
                            table15.Cell(5, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table15.Cell(5, 0).SetFont(Fontbold1);
                            table15.Cell(6, 0).SetContent("10x");
                            table15.Cell(6, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table15.Cell(6, 0).SetFont(Fontbold1);
                            table15.Cell(7, 0).SetContent("5x");
                            table15.Cell(7, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table15.Cell(7, 0).SetFont(Fontbold1);
                            table15.Cell(8, 0).SetContent("Coinsx");
                            table15.Cell(8, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table15.Cell(8, 0).SetFont(Fontbold1);
                            table15.Cell(9, 0).SetContent("Total");
                            table15.Cell(9, 0).SetContentAlignment(ContentAlignment.MiddleLeft);
                            table15.Cell(9, 0).SetFont(Fontbold1);
                            Gios.Pdf.PdfTablePage myprov_pdfpagetable5 = table15.CreateTablePage(new Gios.Pdf.PdfArea(mychallan, 680, y + 380, 160, 500));
                            myprov_pdfpage.Add(myprov_pdfpagetable5);
                            myprov_pdfpage.Add(TC);
                            myprov_pdfpage.Add(TC1);
                            myprov_pdfpage.Add(TC2);
                            //myprov_pdfpage.Add(TC4);
                            myprov_pdfpage.Add(TC5);
                            myprov_pdfpage.Add(TC6);
                            myprov_pdfpage.Add(TC7);
                            myprov_pdfpage.Add(TC8);
                            myprov_pdfpage.Add(TC9);
                            //myprov_pdfpage.Add(TC10);
                            myprov_pdfpage.Add(TC11);
                            myprov_pdfpage.Add(TC12);
                            myprov_pdfpage.Add(TC13);
                            myprov_pdfpage.Add(TC14);
                            myprov_pdfpage.Add(TC15);
                            myprov_pdfpage.Add(TC16);
                            myprov_pdfpage.Add(TC17);
                            myprov_pdfpage.Add(TC24);
                            myprov_pdfpage.Add(TC25);
                            myprov_pdfpage.Add(TC26);
                            myprov_pdfpage.Add(TC27);
                            myprov_pdfpage.Add(TC28);
                            myprov_pdfpage.Add(TC29);
                            myprov_pdfpage.Add(TC30);
                            myprov_pdfpage.Add(TC31);
                            myprov_pdfpage.Add(TC32);
                            myprov_pdfpage.SaveToDocument();
                            #endregion
                        }
                        //Bottom portion of the challan End
                    }
                }
                #endregion
            }
        }
        catch { createPDFOK = false; }
        return createPDFOK;
    }
    private void challanConfirm(List<string> appNoList, ListItem feecategory)
    {
        poperrjs.Visible = true;
        errorspan.InnerHtml = string.Empty;
        int conf = 0;
        int unconf = 0;
        int notavi = 0;
        string hdrSetPK = string.Empty;
        string acronym = string.Empty;
        string finYearid = currentFinYear();
        foreach (string AppNo in appNoList)
        {
            try
            {
                DataSet dsChallans = new DataSet();
                string challansQ = "select distinct ChallanNo,Convert(varchar(10),ChallanDate,103) as ChallanDate from ft_challandet where Isnull(Isconfirmed,0)=0 and feecategory=" + feecategory.Value + " and app_no=" + AppNo + "";
                dsChallans = d2.select_method_wo_parameter(challansQ, "Text");
                if (dsChallans.Tables.Count > 0 && dsChallans.Tables[0].Rows.Count > 0)
                {
                    bool check = false;
                    string chlnNo = string.Empty;
                    string ledger = string.Empty;
                    string header = string.Empty;
                    string FeeCategory = string.Empty;
                    for (int chal = 0; chal < dsChallans.Tables[0].Rows.Count; chal++)
                    {
                         chlnNo = Convert.ToString(dsChallans.Tables[0].Rows[chal]["ChallanNo"]);
                        string chlnDt = Convert.ToString(dsChallans.Tables[0].Rows[chal]["ChallanDate"]);
                        string trasdate = chlnDt.Split('/')[1] + "/" + chlnDt.Split('/')[0] + "/" + chlnDt.Split('/')[2];
                        chlnDt = chlnDt.Split('/')[1] + "/" + chlnDt.Split('/')[0] + "/" + chlnDt.Split('/')[2];
                        string transtime = DateTime.Now.ToLongTimeString();
                        string chlnDet = "select HeaderFk,LedgerFK,FeeCategory,bankFK,TakenAmt,FInyearFk from FT_ChallanDet where challanNo='" + chlnNo + "' AND App_No = " + AppNo + " and isnull( IsConfirmed,'0') = '0' select distinct HeaderFk from FT_ChallanDet where challanNo='" + chlnNo + "' AND App_No = " + AppNo + " and isnull( IsConfirmed,'0') = '0'";
                        DataSet dsDet = d2.select_method_wo_parameter(chlnDet, "Text");
                        bool challanOk = true;
                        if (dsDet.Tables.Count > 0 && dsDet.Tables[0].Rows.Count > 0)
                        {
                            for (int j = 0; j < dsDet.Tables[0].Rows.Count; j++)
                            {
                                 ledger = Convert.ToString(dsDet.Tables[0].Rows[j]["LedgerFK"]);
                                 header = Convert.ToString(dsDet.Tables[0].Rows[j]["HeaderFk"]);
                                 FeeCategory = Convert.ToString(dsDet.Tables[0].Rows[j]["FeeCategory"]);
                                string finFk = Convert.ToString(dsDet.Tables[0].Rows[j]["FInyearFk"]);
                                string taknAmt = Convert.ToString(dsDet.Tables[0].Rows[j]["TakenAmt"]);
                                double amount = 0;
                                double.TryParse(taknAmt, out amount);
                                double balamount = 0;
                                string balAmtStr = d2.GetFunction("select ISNULL(totalamount,0)-ISNULL(paidamount,0) as balamount from FT_FeeAllot where LedgerFK=" + ledger + " and HeaderFK=" + header + " and FeeCategory=" + FeeCategory + " and FinYearFK=" + finFk + " and App_No=" + AppNo + "");
                                double.TryParse(balAmtStr, out balamount);
                                if (balamount < amount)
                                {
                                    challanOk = false;
                                }
                            }
                        }
                        if (challanOk)
                        {
                            string hdrs = string.Empty;
                            for (int hdr = 0; hdr < dsDet.Tables[1].Rows.Count; hdr++)
                            {
                                if (hdrs == string.Empty)
                                {
                                    hdrs = Convert.ToString(dsDet.Tables[1].Rows[hdr][0]);
                                }
                                else
                                {
                                    hdrs += "," + Convert.ToString(dsDet.Tables[1].Rows[hdr][0]);
                                }
                            }
                            int save1 = 0;
                            string insqry1 = "select LinkValue from New_InsSettings where LinkName='ReceiptPrintFormat' and user_code ='" + user_code + "' and college_code ='" + college_code + "'";
                            int.TryParse(d2.GetFunction(insqry1), out save1);
                            string transcode = generateReceiptNo(out acronym, out hdrSetPK, hdrs);
                            if (save1 == 5 || (transcode != "" && (hdrSetPK != "" || (isHeaderwise == 0 || isHeaderwise == 2))))
                            {
                                int insOk = 0;
                                for (int j = 0; j < dsDet.Tables[0].Rows.Count; j++)
                                {
                                     ledger = Convert.ToString(dsDet.Tables[0].Rows[j]["LedgerFK"]);
                                     header = Convert.ToString(dsDet.Tables[0].Rows[j]["HeaderFk"]);
                                     FeeCategory = Convert.ToString(dsDet.Tables[0].Rows[j]["FeeCategory"]);
                                    string bankPk = Convert.ToString(dsDet.Tables[0].Rows[j]["bankFk"]);
                                    string taknAmt = Convert.ToString(dsDet.Tables[0].Rows[j]["TakenAmt"]);
                                    string bankDet = "SELECT DISTINCT BankCode,City FROM FM_FinBankMaster  where CollegeCode=" + college_code + " and BankPk=" + bankPk + "";
                                    DataSet dsBnk = d2.select_method_wo_parameter(bankDet, "Text");
                                    if (dsBnk.Tables.Count > 0)
                                    {
                                        if (dsBnk.Tables[0].Rows.Count > 0)
                                        {
                                            string iscollected = "0";
                                            string collecteddate = "";
                                            iscollected = "1";
                                            collecteddate = (Convert.ToDateTime(trasdate).ToString("MM/dd/yyyy")).ToString();
                                            string bnkCode = Convert.ToString(dsBnk.Tables[0].Rows[0]["BankCode"]);
                                            string bnkCity = Convert.ToString(dsBnk.Tables[0].Rows[0]["City"]);
                                            string insQuery = "INSERT INTO FT_FinDailyTransaction(TransDate,TransTime,TransCode,MemType,App_No,LedgerFK,HeaderFK,FeeCategory,Credit,Debit,PayMode,DDNo,DDDate,DDBankCode,DDBankBranch,TransType,IsInstallmentPay,InstallmentNo,Narration,PayAt,PayThrough,IsArrearCollect,ArearFinYearFK,EntryUserCode,FinYearFK,IsCollected,CollectedDate) VALUES('" + Convert.ToDateTime(trasdate).ToString("MM/dd/yyyy") + "','" + transtime + "','" + transcode + "', 1, " + AppNo + ", " + ledger + ", " + header + ", " + FeeCategory + ", 0, " + taknAmt + ", 4, '" + chlnNo + "', '" + Convert.ToDateTime(chlnDt).ToString("MM/dd/yyyy") + "', " + bankPk + ",'" + bnkCity + "', 1, '0', 0, '', '0', '0', '0', 0, " + user_code + ", " + finYearid + ",'" + iscollected + "','" + collecteddate + "')";
                                            insOk = d2.update_method_wo_parameter(insQuery, "Text");
                                            string updateFee = "UPDATE FT_FeeAllot SET PaidAmount = isnull(PaidAmount,0) + " + taknAmt + ",BalAmount = BalAmount-  " + taknAmt + ",ChlTaken = ChlTaken-  " + taknAmt + " WHERE App_No = " + AppNo + " AND FeeCategory = " + FeeCategory + " AND LedgerFK = " + ledger + " and HeaderFk=" + header + "";
                                            d2.update_method_wo_parameter(updateFee, "Text");
                                        }
                                    }
                                }
                                if (insOk > 0)
                                {
                                    #region Update  Challan
                                    string updateChln = "UPDATE FT_ChallanDet SET RcptTransCode= '" + transcode + "',RcptTransDate= '" + trasdate + "',IsConfirmed = '1' WHERE ChallanNo = '" + chlnNo + "' AND App_No = " + AppNo + "";
                                    d2.update_method_wo_parameter(updateChln, "Text");
                                    #endregion
                                    #region Update Receipt No
                                    transcode = transcode.Remove(0, acronym.Length);
                                    if (save1 != 5)
                                    {
                                        string updateRecpt = string.Empty;
                                        if (isHeaderwise == 0 || isHeaderwise == 2)
                                        {
                                            updateRecpt = " update FM_FinCodeSettings set RcptStNo=" + transcode + "+1 where collegecode =" + college_code + " and FromDate = (select MAX(FromDate) from FM_FinCodeSettings where IsHeader=0 and FinYearFK=" + finYearid + " and CollegeCode=" + college_code + ")";
                                        }
                                        else
                                        {
                                            updateRecpt = "update FM_HeaderFinCodeSettings set RcptStNo=" + transcode + "+1 where HeaderSettingPK=" + hdrSetPK + " and FinyearFK=" + finYearid + " and CollegeCode=" + college_code + "";
                                        }
                                        d2.update_method_wo_parameter(updateRecpt, "Text");
                                    }
                                    #endregion
                                    check = true;
                                    conf++;
                                }
                                else
                                {
                                    unconf++;
                                }
                            }
                            else
                            {
                                unconf++;
                            }
                        }
                        else
                        {
                            notavi++;
                        }
                    }
                    if (check == true)
                    {
                        #region Move to Registration
                        string Criteria_code = d2.GetFunction("select criteria_Code  from selectcriteria where app_no ='" + AppNo + "'").Trim();
                        string degreecode = d2.GetFunction("select degree_code from applyn where app_No=" + AppNo + "").Trim();
                        string regInsQ = "update applyn set admission_status ='1',selection_status ='1' where app_no  ='" + AppNo + "'";
                        //regInsQ = regInsQ + " update admitcolumnset set allot =isnull(allot,0)+1 where column_name ='" + Criteria_code + "' and setcolumn ='" + degreecode + "'";
                        regInsQ = regInsQ + " update admitcolumnset set allot =isnull(allot,0)+1, allot_Confirm=isnull(allot_Confirm,0)+1 where setcolumn='" + degreecode + "' and (TextCriteria='community' or TextCriteria='relig' or textcriteria ='Management') and college_code='" + college_code + "' and column_name='" + Criteria_code + "'";
                        d2.update_method_wo_parameter(regInsQ, "Text");

                        string rolladmit = "";
                        string Mode = "";
                        string batchyr = "";
                        string seattype = "";
                        string stud_name = "";
                        string app_fromno = "";
                        string mobileno = "";
                        string values = d2.GetFunction("select convert(varchar, isnull(batch_year,0))+'$'+convert(varchar,isnull(seattype,0))+'$'+convert(varchar,isnull(stud_name,''))+'$'+convert(varchar,isnull(app_formno,''))+'$'+convert(varchar,isnull(mode,1))+'$'+CONVERT(varchar,isnull(Student_Mobile,0))  from applyn where app_no ='" + AppNo + "'");
                        if (values.Trim() != "")
                        {
                            string[] val = values.Split('$');
                            if (val.Length > 4)
                            {
                                batchyr = Convert.ToString(val[0]);
                                seattype = Convert.ToString(val[1]);
                                stud_name = Convert.ToString(val[2]);
                                app_fromno = Convert.ToString(val[3]);
                                Mode = Convert.ToString(val[4]);
                                mobileno = Convert.ToString(val[5]);
                            }
                        }
                        admissionNoGeneration();
                        if (admisionvalue == "1")
                        {
                            rolladmit = genearateAdmissionNo(college_code, degreecode, batchyr);
                        }
                        else
                        {
                            rolladmit = app_fromno;
                        }
                        if (rolladmit.Trim() == "0" || rolladmit.Trim() == null || rolladmit.Trim() == "")
                        {
                            rolladmit = app_fromno;
                        }
                        string rel = "  if exists(select * from Registration where App_No='" + AppNo + "')  delete from Registration where App_No='" + AppNo + "' insert into Registration (App_No,Adm_Date,Roll_Admit,Roll_No,RollNo_Flag,Reg_No,Stud_Name,Batch_Year,degree_code,college_code,CC,DelFlag,Exam_Flag,Current_Semester,mode)values('" + AppNo + "','" + System.DateTime.Now.ToString("yyy/MM/dd") + "','" + rolladmit + "','" + app_fromno + "','1','" + app_fromno + "','" + stud_name + "','" + batchyr + "','" + degreecode + "','" + college_code + "','0','0','OK','1','" + Mode + "')";
                        int s = d2.update_method_wo_parameter(rel, "Text");
                        if (s == 1)
                        {

                            sendsms(mobileno, app_fromno);
                        }
                        else
                        {
                             regInsQ = "update applyn set admission_status ='0',selection_status ='0' where app_no  ='" + AppNo + "'";
                             regInsQ += " UPDATE FT_ChallanDet SET IsConfirmed = '0' WHERE ChallanNo = '" + chlnNo + "' AND App_No = " + AppNo + "";
                             regInsQ += " delete from ft_findailytransaction WHERE ddno = '" + chlnNo + "' AND App_No = " + AppNo + "";
                             regInsQ += " update ft_feeallot set balamount=paidamount,paidamount='0'  WHERE App_No = " + AppNo + " AND FeeCategory = " + FeeCategory + " AND LedgerFK = " + ledger + " and HeaderFk=" + header + "";
                             d2.update_method_wo_parameter(regInsQ, "Text");
                             errorspan.InnerHtml = "Unable to Confirm This Student";
                        }
                        //string mobil = d2.GetFunction("select student_mobile from applyn where app_no ='" + app_no + "'");
                        //// sendsmsnew(mobil, app_no, 0);
                        //string Course = d2.GetFunction("select (c.Course_Name +' - '+dt.Dept_Name) as Department from applyn a,degree d,Department dt,Course c Where a.degree_code =d.Degree_Code and d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and a.app_no ='" + app_no + "'");
                        //string Msg = "Dear Candidate,Your application no:" + app_fromno + " and you are successfully admitted in " + Course + " in " + (ddl_collegename.SelectedItem.Text) + ",Thank you.";
                        //string user_id = "";
                        //string ssr = "select * from Track_Value where college_code='" + Convert.ToString(ddl_collegename.SelectedItem.Value) + "'";
                        //ds.Clear();
                        //ds = d2.select_method_wo_parameter(ssr, "Text");
                        //if (ds.Tables[0].Rows.Count > 0)
                        //{
                        //    user_id = Convert.ToString(ds.Tables[0].Rows[0]["SMS_User_ID"]);
                        //}
                        //int d = d2.send_sms(user_id, Convert.ToString(ddl_collegename.SelectedItem.Value), usercode, mobil, Msg, "0");
                        #endregion
                    }
                }
                else
                {
                    notavi++;
                }
            }
            catch
            {
                unconf++;
            }
        }
        errorspan.InnerHtml = "<span style='color:blue;'><u>Confirmation Details</u></span><br><span style='color:green;'>Confirmed: " + conf + "</span>&nbsp;<span style='color:red;'> Not Confirmed: " + unconf + "</span> <br>No Challan Available: " + notavi + "";
    }
    protected void admissionNoGeneration()
    {
        try
        {
            string value = d2.GetFunction("select value from Master_Settings where settings ='Admission No Rights' and usercode ='" + user_code + "'");
            if (value == "1")
            {
                admisionvalue = "1";
            }
            else
            {
                admisionvalue = "0";
            }
        }
        catch { }
    }
    protected double collegewiseapplicationRights()
    {
        double RightsCode = 0;
        double.TryParse(Convert.ToString(d2.GetFunction("select linkvalue from New_InsSettings where LinkName='CollegewiseAdmissionNoRights' and user_code ='" + user_code + "' and college_code ='" + college_code + "'")), out RightsCode);
        return RightsCode;
    }
    private string genearateAdmissionNo(string collegecode, string degreecode, string ddl_batch)
    {
        string orginalapplication_number = "";
        try
        {
            Hashtable hat = new Hashtable();
            hat.Add(1, "0");
            hat.Add(2, "00");
            hat.Add(3, "000");
            hat.Add(4, "0000");
            hat.Add(5, "00000");
            hat.Add(6, "000000");
            hat.Add(7, "0000000");
            hat.Add(8, "00000000");
            hat.Add(9, "000000000");
            hat.Add(10, "0000000000");
            bool check = false;
            int application_No = 0;
            string appCodetemp = string.Empty;
            string selectquery = string.Empty;
            if (collegewiseapplicationRights() == 1)
            {
                appCodetemp = d2.GetFunction("select appcode from code_generation where  batch_year='" + ddl_batch + "' and college_code='" + collegecode + "' and app_code_flag ='1' and isnull(iscollege,'0')='1'");
                selectquery = "select top 1 roll_admit  from Registration where roll_admit <>'' and roll_admit like '%" + appCodetemp + "%' and batch_year='" + ddl_batch + "'  and college_code='" + collegecode + "' order by roll_admit desc";

                selectquery = selectquery + " select appcode,app_startwith,app_serial from code_generation where  batch_year='" + ddl_batch + "' and college_code='" + collegecode + "'  and app_code_flag ='1' and isnull(iscollege,'0')='1'";
            }
            else
            {
                appCodetemp = d2.GetFunction("select appcode from code_generation where  batch_year='" + ddl_batch + "' and degree_code='" + degreecode + "' and college_code='" + collegecode + "' and app_code_flag ='1'");
                selectquery = "select top 1 roll_admit  from Registration where roll_admit <>'' and roll_admit like '%" + appCodetemp + "%' and batch_year='" + ddl_batch + "' and degree_code='" + degreecode + "' and college_code='" + collegecode + "' order by roll_admit desc";
                selectquery = selectquery + " select appcode,app_startwith,app_serial from code_generation where  batch_year='" + ddl_batch + "' and degree_code='" + degreecode + "' and college_code='" + collegecode + "'  and app_code_flag ='1'";
            }
            ds.Clear();
            ds = d2.select_method_wo_parameter(selectquery, "Text");
            if (ds.Tables[0].Rows.Count > 0)
            {
                // application_No = Convert.ToInt32(ds.Tables[0].Rows[0][0]);
                string applno = Convert.ToString(ds.Tables[0].Rows[0][0]);
                if (ds.Tables[1].Rows.Count > 0)
                {
                    string appcode = Convert.ToString(ds.Tables[1].Rows[0]["appcode"]);
                    string appsiz2 = Convert.ToString(ds.Tables[1].Rows[0]["app_serial"]);
                    int len = appcode.Length;
                    applno = applno.Remove(0, len);
                    string newnumber = Convert.ToString((Convert.ToInt32(applno) + 1));
                    int val = newnumber.Length;
                    if (val == Convert.ToInt32(appsiz2))
                        orginalapplication_number = appcode + "" + newnumber;
                    else
                    {
                        int remain = Convert.ToInt32(appsiz2) - val;
                        string addnumber = Convert.ToString(hat[remain]);
                        addnumber = addnumber + "" + newnumber;
                        orginalapplication_number = appcode + "" + addnumber;
                    }
                }
                else
                    check = true;
            }
            else
                check = true;

            if (check && ds.Tables.Count > 1 && ds.Tables[1].Rows.Count > 0)
            {
                string appcode = Convert.ToString(ds.Tables[1].Rows[0]["appcode"]);
                string appsiz2 = Convert.ToString(ds.Tables[1].Rows[0]["app_startwith"]);
                int len = appsiz2.Length;
                if (len == Convert.ToInt32(ds.Tables[1].Rows[0]["app_serial"]))
                {
                    orginalapplication_number = appcode + "" + appsiz2;
                }
                else
                {
                    int remain = Convert.ToInt32(ds.Tables[1].Rows[0]["app_serial"]) - len;
                    string addnumber = Convert.ToString(hat[remain]);
                    addnumber = addnumber + "" + appsiz2;
                    orginalapplication_number = appcode + "" + addnumber;
                }
            }
        }
        catch { }
        return orginalapplication_number;
    }
    //Reusable Methods
    public string generateReceiptNo(out string rcpracr, out string hdrSetPK, string hdrs)
    {
        int isHeaderwise = 0;
        hdrSetPK = string.Empty;
        rcpracr = string.Empty;
        try
        {
            string HeaderwiseQ = "select LinkValue from New_InsSettings where LinkName='HeaderWiseChallanorReceipt' and user_code ='" + user_code + "' and college_code ='" + college_code + "' ";
            isHeaderwise = Convert.ToInt32(d2.GetFunction(HeaderwiseQ).Trim());
        }
        catch { isHeaderwise = 0; }
        try
        {
            string insqry1 = "select LinkValue from New_InsSettings where LinkName='ReceiptPrintFormat' and user_code ='" + user_code + "' and college_code ='" + college_code + "'";
            int save1 = Convert.ToInt32(d2.GetFunction(insqry1));
            if (save1 == 5)
                return string.Empty;
        }
        catch { return string.Empty; }
        if (isHeaderwise == 0 || isHeaderwise == 2)
        {
            return getCommonReceiptNo(out rcpracr, out hdrSetPK);
        }
        else
        {
            return getHeaderwiseReceiptNo(out rcpracr, out hdrSetPK, hdrs);
        }
    }
    private string getCommonReceiptNo(out string rcpracr, out string hdrSetPK)
    {
        hdrSetPK = string.Empty;
        rcpracr = string.Empty;
        string recno = string.Empty;
        try
        {
            int receno = 0;
            string recacr = string.Empty;
            string recnoprev = string.Empty;
            string finYearid = d2.GetFunction("select LinkValue from InsSettings where LinkName='Current Financial Year' and college_code=" + college_code + "");
            string secondreciptqurey = "SELECT RcptStNo from FM_FinCodeSettings where IsHeader=0 and FinYearFK=" + finYearid + " and CollegeCode=" + college_code + " and FromDate = (select MAX(FromDate) from FM_FinCodeSettings where IsHeader=0 and FinYearFK=" + finYearid + " and CollegeCode=" + college_code + ")";
            DataSet dsrecYr = new DataSet();
            dsrecYr = d2.select_method_wo_parameter(secondreciptqurey, "Text");
            if (dsrecYr.Tables[0].Rows.Count > 0)
            {
                recnoprev = Convert.ToString(dsrecYr.Tables[0].Rows[0][0]);
                if (recnoprev != "")
                {
                    int recno_cur = Convert.ToInt32(recnoprev);
                    receno = recno_cur;
                }
                string acronymquery = d2.GetFunction("SELECT RcptAcr from FM_FinCodeSettings where IsHeader=0 and FinYearFK=" + finYearid + " and CollegeCode=" + college_code + " and FromDate = (select MAX(FromDate) from FM_FinCodeSettings where IsHeader=0 and FinYearFK=" + finYearid + " and CollegeCode=" + college_code + ")");
                recacr = acronymquery;
                rcpracr = recacr;
                int size = Convert.ToInt32(d2.GetFunction("SELECT  RcptSize from FM_FinCodeSettings where IsHeader=0 and FinYearFK=" + finYearid + " and CollegeCode=" + college_code + " and FromDate = (select MAX(FromDate) from FM_FinCodeSettings where IsHeader=0 and FinYearFK=" + finYearid + " and CollegeCode=" + college_code + ")"));
                string recenoString = receno.ToString();
                if (size != recenoString.Length && size > recenoString.Length)
                {
                    while (size != recenoString.Length)
                    {
                        recenoString = "0" + recenoString;
                    }
                }
                recno = recacr + recenoString;
            }
            return recno;
        }
        catch { return recno; }
    }
    private string getHeaderwiseReceiptNo(out string rcpracr, out string hdrSetPK, string hdrs)
    {
        hdrSetPK = string.Empty;
        rcpracr = string.Empty;
        string recno = string.Empty;
        try
        {
            int receno = 0;
            string recacr = string.Empty;
            string recnoprev = string.Empty;
            string isheaderFk = hdrs;
            string finYearid = d2.GetFunction("select LinkValue from InsSettings where LinkName='Current Financial Year' and college_code=" + college_code + "");
            DataSet dsFinHedDet = d2.select_method_wo_parameter("select distinct HeaderSettingFk from FM_HeaderFinCodeSettingsDet hs,FM_HeaderFinCodeSettings s where s.HeaderSettingPK=hs.HeaderSettingFK and HeaderFK in (" + isheaderFk + ") and CollegeCode=" + college_code + " and FinyearFK=" + finYearid + "", "Text");
            if (dsFinHedDet.Tables.Count > 0 && dsFinHedDet.Tables[0].Rows.Count == 1)
            {
                hdrSetPK = Convert.ToString(dsFinHedDet.Tables[0].Rows[0][0]).Trim();
                string secondreciptqurey = "select * from FM_HeaderFinCodeSettings where HeaderSettingPK =" + Convert.ToString(dsFinHedDet.Tables[0].Rows[0][0]) + " and FinyearFK=" + finYearid + " and CollegeCode=" + college_code + " ";
                DataSet dsrecYr = new DataSet();
                dsrecYr = d2.select_method_wo_parameter(secondreciptqurey, "Text");
                if (dsrecYr.Tables.Count > 0 && dsrecYr.Tables[0].Rows.Count > 0)
                {
                    recnoprev = Convert.ToString(dsrecYr.Tables[0].Rows[0]["RcptStNo"]);
                    if (recnoprev != "")
                    {
                        int recno_cur = Convert.ToInt32(recnoprev);
                        receno = recno_cur;
                    }
                    recacr = Convert.ToString(dsrecYr.Tables[0].Rows[0]["RcptAcr"]);
                    rcpracr = recacr;
                    int size = Convert.ToInt32(dsrecYr.Tables[0].Rows[0]["Rcptsize"]);
                    string recenoString = receno.ToString();
                    if (size != recenoString.Length && size > recenoString.Length)
                    {
                        while (size != recenoString.Length)
                        {
                            recenoString = "0" + recenoString;
                        }
                    }
                    recno = recacr + recenoString;
                }
            }
            return recno;
        }
        catch { return recno; }
    }
    public void isContainsDecimal(double myValue)
    {
        bool hasFractionalPart = (myValue - Math.Round(myValue) != 0);
    }
    public string returnIntegerPart(double value)
    {
        string strVal = value.ToString();
        string[] strvalArr = strVal.Split('.');
        if (strvalArr.Length > 0)
        {
            strVal = strvalArr[0];
        }
        return strVal;
    }
    public string returnDecimalPart(double value)
    {
        string strVal = value.ToString();
        string[] strvalArr = strVal.Split('.');
        if (strvalArr.Length > 1)
        {
            strVal = strvalArr[1];
            if (strVal.Length >= 2)
            {
                strVal = strVal.Substring(0, 2);
            }
            else
            {
                while (2 != strVal.Length)
                {
                    strVal = strVal + "0";
                }
            }
        }
        else
        {
            strVal = "00";
        }
        return strVal;
    }
    public string romanLetter(string numeral)
    {
        string romanLettervalue = String.Empty;
        if (numeral.Trim() != String.Empty)
        {
            switch (numeral)
            {
                case "1":
                    romanLettervalue = "I";
                    break;
                case "2":
                    romanLettervalue = "II";
                    break;
                case "3":
                    romanLettervalue = "III";
                    break;
                case "4":
                    romanLettervalue = "IV";
                    break;
                case "5":
                    romanLettervalue = "V";
                    break;
                case "6":
                    romanLettervalue = "VI";
                    break;
                case "7":
                    romanLettervalue = "VII";
                    break;
                case "8":
                    romanLettervalue = "VIII";
                    break;
                case "9":
                    romanLettervalue = "IX";
                    break;
                case "10":
                    romanLettervalue = "X";
                    break;
            }
        }
        return romanLettervalue;
    }
    public string DecimalToWords(decimal number)
    {
        if (number == 0)
            return "Zero";
        if (number < 0)
            return "Minus " + DecimalToWords(Math.Abs(number));
        string words = "";
        int intPortion = (int)number;
        decimal fraction = (number - intPortion) * 100;
        int decPortion = (int)fraction;
        words = NumberToWords(intPortion);
        if (decPortion > 0)
        {
            words += " And ";
            words += NumberToWords(decPortion);
            words += " Paise ";
        }
        return words;
    }
    public string NumberToWords(int number)
    {
        if (number == 0)
            return "Zero";
        if (number < 0)
            return "Minus " + NumberToWords(Math.Abs(number));
        string words = "";
        if ((number / 1000000) > 0)
        {
            words += NumberToWords(number / 1000000) + " Million ";
            number %= 1000000;
        }
        if ((number / 1000) > 0)
        {
            words += NumberToWords(number / 1000) + " Thousand ";
            number %= 1000;
        }
        if ((number / 100) > 0)
        {
            words += NumberToWords(number / 100) + " Hundred ";
            number %= 100;
        }
        if (number > 0)
        {
            if (words != "")
                words += "and ";
            var unitsMap = new[] { "Zero", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen" };
            var tensMap = new[] { "Zero", "Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety" };
            if (number < 20)
                words += unitsMap[number];
            else
            {
                words += tensMap[number / 10];
                if ((number % 10) > 0)
                    words += " " + unitsMap[number % 10];
            }
        }
        return words;
    }
    public string returnYearforSem(string cursem)
    {
        switch (cursem)
        {
            case "1":
            case "2":
                cursem = "1";
                break;
            case "3":
            case "4":
                cursem = "2";
                break;
            case "5":
            case "6":
                cursem = "3";
                break;
            case "7":
            case "8":
                cursem = "4";
                break;
            case "9":
            case "10":
                cursem = "5";
                break;
        }
        return cursem;
    }
    //Last modified by Idhris --21-05-2016
    protected void Interested_Click(object sender, EventArgs e)
    {
        try
        {
            int isval1 = 0;
            int fllg = 0;
            FpSpread2.SaveChanges();
            FpSpread3.SaveChanges();
            FpSpread1.SaveChanges();
            if (TabContainer1.ActiveTabIndex == 2)
            {
                //Recommended
                for (int i = 0; i < FpSpread2.Sheets[0].Rows.Count; i++)
                {
                    isval1 = Convert.ToInt32(FpSpread2.Sheets[0].Cells[i, 1].Value);
                    if (isval1 == 1)
                    {
                        fllg = 1;
                        string sel = "select * from textvaltable where TextVal='" + btnrejectreason.SelectedItem.Text + "' and TextCriteria='reres'and college_code='" + college_code + "'";
                        ds = dt.select_method_wo_parameter(sel, "text");
                        if (ds.Tables[0].Rows.Count > 0)
                        {
                            string approve = "update selectcriteria set isapprove='5',usercode='" + user_code + "',isview='0',  select_date='" + System.DateTime.Now.ToString("yyy/MM/dd") + "',textcode='" + ds.Tables[0].Rows[0]["TextCode"].ToString() + "' where app_no='" + FpSpread2.Sheets[0].Cells[i, 2].Text + "'  and degree_code='" + ddldept.SelectedValue + "' and college_code='" + college_code + "' ";
                            approve = approve + "update applyn set admission_status='0',selection_status='1' where app_no ='" + FpSpread2.Sheets[0].Cells[i, 2].Text + "'";
                            int a = dt.update_method_wo_parameter(approve, "text");
                        }
                    }
                }
            }
            else if (TabContainer1.ActiveTabIndex == 3)
            {
                //Admitted
                if (fllg == 0)
                {
                    for (int i = 0; i < FpSpread4.Sheets[0].Rows.Count; i++)
                    {
                        isval1 = Convert.ToInt32(FpSpread4.Sheets[0].Cells[i, 3].Value);
                        if (isval1 == 1)
                        {
                            fllg = 1;
                            string sel = "select * from textvaltable where TextVal='" + btnrejectreason.SelectedItem.Text + "' and TextCriteria='reres'and college_code='" + college_code + "'";
                            ds = dt.select_method_wo_parameter(sel, "text");
                            if (ds.Tables[0].Rows.Count > 0)
                            {
                                int setvalue = 0;
                                string allote = dt.GetFunction("select allot  from  admitcolumnset where column_name  ='" + Convert.ToString(FpSpread4.Sheets[0].Cells[i, 1].Tag) + "' and setcolumn ='" + ddldept.SelectedValue + "' and College_Code ='" + college_code + "'");
                                if (allote != "")
                                {
                                    setvalue = Convert.ToInt32(allote) - 1;
                                }
                                string approve = "update selectcriteria set isapprove='5',isview='0',usercode='" + user_code + "', select_date='" + System.DateTime.Now.ToString("yyy/MM/dd") + "',textcode='" + ds.Tables[0].Rows[0]["TextCode"].ToString() + "' where app_no='" + FpSpread4.Sheets[0].Cells[i, 2].Text + "' and degree_code='" + ddldept.SelectedValue + "' and college_code='" + college_code + "' ";
                                approve = approve + "update applyn set admission_status='0',selection_status='1' where app_no ='" + FpSpread4.Sheets[0].Cells[i, 2].Text + "'";
                                int a = dt.update_method_wo_parameter(approve, "text");
                            }
                        }
                    }
                }
            }
            else if (TabContainer1.ActiveTabIndex == 4)
            {
                //Fee Confirm
            }
            if (fllg == 1)
            {
                Button1_Click(sender, e);
                errorspan.InnerHtml = "Reject Successfully";
                poperrjs.Visible = true;
                panel2.Visible = false;
            }
            else
            {
                errorspan.InnerHtml = "Choose Atleast One Student And Than Proceed";
                poperrjs.Visible = true;
                panel2.Visible = false;
            }
        }
        catch (Exception ex)
        {
            d2.sendErrorMail(ex, college_code, "selectionprocess");
        }
    }
    //barath 22.04.17
    public void cb_religion_checkedchange(object sender, EventArgs e)
    {
        try
        {
            if (cb_religion.Checked == true)
            {
                for (int i = 0; i < cbl_religion.Items.Count; i++)
                {
                    cbl_religion.Items[i].Selected = true;
                }
                txt_religion.Text = "Religion(" + (cbl_religion.Items.Count) + ")";
            }
            else
            {
                for (int i = 0; i < cbl_religion.Items.Count; i++)
                {
                    cbl_religion.Items[i].Selected = false;
                }
                txt_religion.Text = "--Select--";
            }
        }
        catch
        {
        }
    }
    public void cbl_religion_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            int commcount = 0;
            txt_religion.Text = "--Select--";
            cb_religion.Checked = false;
            for (int i = 0; i < cbl_religion.Items.Count; i++)
            {
                if (cbl_religion.Items[i].Selected == true)
                {
                    commcount = commcount + 1;
                }
            }
            if (commcount == cbl_religion.Items.Count)
            {
                txt_religion.Text = "Religion(" + commcount.ToString() + ")";
                cb_religion.Checked = true;
            }
            else if (commcount == 0)
            {
                txt_religion.Text = "--Select--";
            }
            else
            {
                txt_religion.Text = "Religion(" + commcount.ToString() + ")";
            }
        }
        catch
        {
        }
    }
    protected void cb_BoardUniv_checkedchange(object sender, EventArgs e)
    {
        txtBoardUniv.Text = "Board";
        if (cb_BoardUniv.Checked)
        {
            for (int i = 0; i < cbl_BoardUniv.Items.Count; i++)
            {
                cbl_BoardUniv.Items[i].Selected = true;
            }
            txtBoardUniv.Text = "Board(" + cbl_BoardUniv.Items.Count + ")";
        }
        else
        {
            for (int i = 0; i < cbl_BoardUniv.Items.Count; i++)
            {
                cbl_BoardUniv.Items[i].Selected = false;
            }
        }
    }
    protected void cbl_BoardUniv_SelectedIndexChanged(object sender, EventArgs e)
    {
        cb_BoardUniv.Checked = false;
        int cnt = 0;
        for (int i = 0; i < cbl_BoardUniv.Items.Count; i++)
        {
            if (cbl_BoardUniv.Items[i].Selected)
            {
                cnt++;
            }
        }
        if (cnt == cbl_BoardUniv.Items.Count)
        {
            cb_BoardUniv.Checked = true;
        }
        txtBoardUniv.Text = "Board(" + cnt + ")";
    }
    protected void cbAttempt_checkedchange(object sender, EventArgs e)
    {
        txtAttempt.Text = "Attempt";
        if (cbAttempt.Checked)
        {
            for (int i = 0; i < cblAttempt.Items.Count; i++)
            {
                cblAttempt.Items[i].Selected = true;
            }
            txtAttempt.Text = "Attempt(" + cblAttempt.Items.Count + ")";
        }
        else
        {
            for (int i = 0; i < cblAttempt.Items.Count; i++)
            {
                cblAttempt.Items[i].Selected = false;
            }
        }
    }
    protected void cblAttempt_SelectedIndexChanged(object sender, EventArgs e)
    {
        cbAttempt.Checked = false;
        int cnt = 0;
        for (int i = 0; i < cblAttempt.Items.Count; i++)
        {
            if (cblAttempt.Items[i].Selected)
            {
                cnt++;
            }
        }
        if (cnt == cblAttempt.Items.Count)
        {
            cbAttempt.Checked = true;
        }
        txtAttempt.Text = "Attempt(" + cnt + ")";
    }
    public void cb_comm_checkedchange(object sender, EventArgs e)
    {
        try
        {
            if (cb_comm.Checked == true)
            {
                for (int i = 0; i < cbl_comm.Items.Count; i++)
                {
                    cbl_comm.Items[i].Selected = true;
                }
                txt_comm.Text = "Medium(" + (cbl_comm.Items.Count) + ")";
            }
            else
            {
                for (int i = 0; i < cbl_comm.Items.Count; i++)
                {
                    cbl_comm.Items[i].Selected = false;
                }
                txt_comm.Text = "--Select--";
            }
        }
        catch
        {
        }
    }
    public void cbl_comm_SelectedIndexChanged(object sender, EventArgs e)
    {
        try
        {
            int commcount = 0;
            txt_comm.Text = "--Select--";
            cb_comm.Checked = false;
            for (int i = 0; i < cbl_comm.Items.Count; i++)
            {
                if (cbl_comm.Items[i].Selected == true)
                {
                    commcount = commcount + 1;
                }
            }
            if (commcount == cbl_comm.Items.Count)
            {
                txt_comm.Text = "Medium(" + commcount.ToString() + ")";
                cb_comm.Checked = true;
            }
            else if (commcount == 0)
            {
                txt_comm.Text = "--Select--";
            }
            else
            {
                txt_comm.Text = "Medium(" + commcount.ToString() + ")";
            }
        }
        catch
        {
        }
    }
    public void btn_calltr_click2(object sender, EventArgs e)
    {
        Txt_callDate.Text = DateTime.Now.ToString("dd/MM/yyyy");
        Txt_callDate.Attributes.Add("readonly", "readonly");
        txtPrepDate.Text = DateTime.Now.ToString("dd/MM/yyyy");
        txtPrepDate.Attributes.Add("readonly", "readonly");
        Div2.Visible = true;
        ddlIntMin.Items.Clear();
        for (int i = 0; i < 60; i++)
        {
            string iv = i.ToString();
            if (i.ToString().Length == 1)
                iv = "0" + i;
            ListItem lst = new ListItem(iv, i.ToString());
            ddlIntMin.Items.Add(lst);
        }
        ddlIntMin.SelectedIndex = 0;
        ddlIntHr.SelectedIndex = 0;
        ddlIntMed.SelectedIndex = 0;
        txtVenue.Text = "";
        txtddAmount.Text = "0";
        //For different formats
        Label10.Visible = false;
        Label6.Text = "Date";
        txtPrepDate.Visible = false;
        Label13.Visible = false;
        ddlIntHr.Visible = false;
        ddlIntMed.Visible = false;
        ddlIntMin.Visible = false;
        Label11.Visible = false;
        txtVenue.Visible = false;
        Label12.Visible = false;
        txtddAmount.Visible = false;
        if (callLetterFormat() == 0)
        {
            //Jamal
            Label6.Text = "Interview Date";
            txtVenue.Text = "-";
            ddlIntHr.Visible = true;
            ddlIntMed.Visible = true;
            ddlIntMin.Visible = true;
            Label13.Visible = true;
        }
        else if (callLetterFormat() == 1)
        {
            //New College
            Label10.Visible = true;
            Label6.Text = "Interview Date";
            txtPrepDate.Visible = true;
            Label13.Visible = true;
            ddlIntHr.Visible = true;
            ddlIntMed.Visible = true;
            ddlIntMin.Visible = true;
            Label11.Visible = true;
            txtVenue.Visible = true;
            Label12.Visible = true;
            txtddAmount.Visible = true;
        }
    }
    public bool checkedOKInterv(out List<string> appNoList)
    {
        appNoList = new List<string>();
        bool Ok = false;
        FpSpread1.SaveChanges();
        for (int i = 0; i < FpSpread1.Sheets[0].Rows.Count; i++)
        {
            byte check = Convert.ToByte(FpSpread1.Sheets[0].Cells[i, 1].Value);
            if (check == 1)
            {
                Ok = true;
                appNoList.Add(Convert.ToString(FpSpread1.Sheets[0].Cells[i, 2].Text));
            }
        }
        return Ok;
    }
    private byte callLetterFormat()
    {
        //value 0 - Jamal, value 1 - New College
        byte format = 0;
        string callLetterQ = "select LinkValue from New_InsSettings where LinkName='AdmissionCallLetterSetting' and user_code ='" + user_code + "' ";
        format = Convert.ToByte(d2.GetFunction(callLetterQ).Trim());
        return format;
    }
    protected void Okay_clcik(object sender, EventArgs e)
    {
        List<string> appnolist = new List<string>();
        if (checkedOKInterv(out appnolist))
        {
            string stud_phoneno = string.Empty;
            string rollno = string.Empty;
            string name = string.Empty;
            string mail_id = string.Empty;
            string getgroup = "";
            string type = "";
            if (callLetterFormat() == 0)
            {
                foreach (string value in appnolist)
                {
                    //sendmail(mail_id, name, rollno);
                    string det = d2.GetFunction("select convert(varchar,stud_name)+'$'+convert(varchar,app_formno)+'$'+CONVERT(varchar,isnull(Student_Mobile,0))+'$'+isnull(c.Course_Name+'('+dt.Dept_Name+')','') +'$'+isnull(c.type,'') from applyn a,Degree d,Department dt,Course c where a.degree_code =d.Degree_Code and d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and a.app_no='" + Convert.ToString(value) + "'");
                    if (det.Trim() != "")
                    {
                        string[] val = det.Split('$');
                        if (val.Length > 0)
                        {
                            name = Convert.ToString(val[0]);
                            rollno = Convert.ToString(val[1]);
                            stud_phoneno = Convert.ToString(val[2]);
                            getgroup = Convert.ToString(val[3]);
                            type = Convert.ToString(val[4]);
                        }
                    }
                    if (stud_phoneno.Trim() != "" && rollno.Trim() != "")
                    { //sendsms(stud_phoneno, rollno);ddlIntHr
                        string Msg = "";
                        Msg = name.ToUpper() + " (" + rollno + ")  IS PROVISONALLY SELECTED FOR " + getgroup + " (" + type + " ). YOU ARE REQUIRED TO ATTEND AN INTERVIEW ON " + Txt_callDate.Text + " AT " + ddlIntHr.SelectedItem.Text + "." + ddlIntMin.SelectedItem.Text + " " + ddlIntMed.SelectedItem.Text + " WITH ALL ORIGINAL CERTIFICATES AND FEES.";
                        //Msg = "Application No:" + rollno + " You are provisionally selected for " + getgroup + ". Meet the Principal with your Parent on " + Txt_callDate.Text + " with original certificates.";
                        string user_id = d2.GetFunction("select SMS_User_ID from Track_Value where college_code='" + Convert.ToString(college_code) + "'");
                        int d1 = d2.send_sms(user_id, Convert.ToString(college_code), user_code, stud_phoneno, Msg, "0");
                    }
                    //loadprint();
                }
            }
            else if (callLetterFormat() == 1)
            {
                //sendmail(mail_id, name, rollno);
                //sendsms(stud_phoneno, rollno);
                //loadNewCallLetter(appnolist);
                foreach (string value in appnolist)
                {
                    //sendmail(mail_id, name, rollno);
                    string det = d2.GetFunction("select convert(varchar,stud_name)+'$'+convert(varchar,app_formno)+'$'+CONVERT(varchar,isnull(Student_Mobile,0))+'$'+isnull(c.Course_Name+'('+dt.Dept_Name+')','')  +'$'+isnull(c.type,'') from applyn a,Degree d,Department dt,Course c where a.degree_code =d.Degree_Code and d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and a.app_no='" + Convert.ToString(value) + "'");
                    if (det.Trim() != "")
                    {
                        string[] val = det.Split('$');
                        if (val.Length > 0)
                        {
                            name = Convert.ToString(val[0]);
                            rollno = Convert.ToString(val[1]);
                            stud_phoneno = Convert.ToString(val[2]);
                            getgroup = Convert.ToString(val[3]);
                            type = Convert.ToString(val[4]);
                        }
                    }
                    if (stud_phoneno.Trim() != "" && rollno.Trim() != "")
                    { //sendsms(stud_phoneno, rollno);
                        string Msg = "";
                        Msg = name.ToUpper() + " (" + rollno + ")  IS PROVISONALLY SELECTED FOR " + getgroup + " (" + type + " ). YOU ARE REQUIRED TO ATTEND AN INTERVIEW ON " + Txt_callDate.Text + " AT " + ddlIntHr.SelectedItem.Text + " " + ddlIntMin.SelectedItem.Text + " " + ddlIntMed.SelectedItem.Text + " WITH ALL ORIGINAL CERTIFICATES AND FEES.";
                        // Msg = "Application No:" + rollno + " You are provisionally selected for " + getgroup + ". Meet the Principal with your Parent on " + Txt_callDate.Text + " with original certificates.";
                        string user_id = d2.GetFunction("select SMS_User_ID from Track_Value where college_code='" + Convert.ToString(college_code) + "'");
                        int d1 = d2.send_sms(user_id, Convert.ToString(college_code), user_code, stud_phoneno, Msg, "0");
                    }
                }
            }
            Div2.Visible = false;
            errorspan.InnerHtml = "Send Successfully";
            poperrjs.Visible = true;
        }
        else
        {
            errorspan.InnerHtml = "No Student Selected";
            poperrjs.Visible = true;
        }
    }
    private void loadNewCallLetter(List<string> appNoList)
    {
        try
        {
            string colQ = "select * from collinfo where college_code='" + college_code + "'";
            DataSet dsCol = new DataSet();
            dsCol = dt.select_method_wo_parameter(colQ, "Text");
            string collegeName = string.Empty;
            string collegeCateg = string.Empty;
            string collegeAff = string.Empty;
            string collegeAdd = string.Empty;
            string collegePhone = string.Empty;
            string collegeFax = string.Empty;
            string collegeWeb = string.Empty;
            string collegeEmai = string.Empty;
            string collegePin = string.Empty;
            string City = string.Empty;
            if (dsCol.Tables.Count > 0 && dsCol.Tables[0].Rows.Count > 0)
            {
                collegeName = Convert.ToString(dsCol.Tables[0].Rows[0]["Collname"]);
                City = Convert.ToString(dsCol.Tables[0].Rows[0]["address3"]);
                collegeAff = "(Affiliated to " + Convert.ToString(dsCol.Tables[0].Rows[0]["university"]) + ")";
                collegeAdd = Convert.ToString(dsCol.Tables[0].Rows[0]["address1"]) + " , " + Convert.ToString(dsCol.Tables[0].Rows[0]["address2"]) + " , " + Convert.ToString(dsCol.Tables[0].Rows[0]["district"]) + " - " + Convert.ToString(dsCol.Tables[0].Rows[0]["pincode"]);
                collegePin = Convert.ToString(dsCol.Tables[0].Rows[0]["pincode"]);
                collegePhone = "OFFICE: " + Convert.ToString(dsCol.Tables[0].Rows[0]["phoneno"]);
                collegeFax = "FAX: " + Convert.ToString(dsCol.Tables[0].Rows[0]["faxno"]);
                collegeWeb = "Website: " + Convert.ToString(dsCol.Tables[0].Rows[0]["website"]);
                collegeEmai = "E-Mail: " + Convert.ToString(dsCol.Tables[0].Rows[0]["email"]);
                collegeCateg = "(" + Convert.ToString(dsCol.Tables[0].Rows[0]["category"]) + ")";
            }
            string prepDate = txtPrepDate.Text;//Prepared date
            string intDate = Txt_callDate.Text;//Interview date
            string intTime = ddlIntHr.SelectedItem.Text + ":" + ddlIntMin.SelectedItem.Text + " " + ddlIntMed.SelectedItem.Text;
            string[] prepDateAr = txtPrepDate.Text.Split('/');
            DateTime prepDateDt = Convert.ToDateTime(prepDateAr[1] + "/" + prepDateAr[0] + "/" + prepDateAr[2]);
            string[] intDateAr = Txt_callDate.Text.Split('/');
            DateTime intDateDt = Convert.ToDateTime(intDateAr[1] + "/" + intDateAr[0] + "/" + intDateAr[2]);
            string intDay = intDateDt.DayOfWeek.ToString();
            decimal ddAmt = 0;
            decimal.TryParse(txtddAmount.Text, out ddAmt);
            string ddAmtStr = DecimalToWords(ddAmt);
            string venue = txtVenue.Text;
            contentDiv.InnerHtml = "";
            foreach (string appNo in appNoList)
            {
                string queryNewvalue = "select stud_name,app_formno,parent_addressP,Streetp,cityp,parent_pincodep from applyn where app_no ='" + appNo + "'";
                string Namevalue = "";
                string Addressvalue = "";
                ds.Clear();
                ds = d2.select_method_wo_parameter(queryNewvalue, "Text");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    if (Convert.ToString(ds.Tables[0].Rows[0]["stud_name"]).Trim() != "")
                    {
                        Namevalue = Convert.ToString(ds.Tables[0].Rows[0]["stud_name"]) + " (Appl. ID :" + Convert.ToString(ds.Tables[0].Rows[0]["app_formno"]) + ")";
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["parent_addressP"]).Trim() != "")
                    {
                        Addressvalue = Convert.ToString(ds.Tables[0].Rows[0]["parent_addressP"]);
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["Streetp"]).Trim() != "")
                    {
                        Addressvalue = Addressvalue + ", " + Convert.ToString(ds.Tables[0].Rows[0]["Streetp"]);
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["cityp"]).Trim() != "")
                    {
                        Addressvalue = Addressvalue + ", " + Convert.ToString(ds.Tables[0].Rows[0]["cityp"]);
                    }
                    if (Convert.ToString(ds.Tables[0].Rows[0]["parent_pincodep"]).Trim() != "")
                    {
                        Addressvalue = Addressvalue + " - " + Convert.ToString(ds.Tables[0].Rows[0]["parent_pincodep"]);
                    }
                }
                string degCode = returnStudDeg(appNo);
                string course = d2.GetFunction("select type+' '+course_name+'('+Dept_name+')' from course c,Degree d,Department dt where d.course_id=c.course_id and d.dept_code=dt.dept_code and d.degree_code='" + degCode + "'").Trim();
                if (course == "0")
                {
                    course = string.Empty;
                }
                StringBuilder sbHtml = new StringBuilder();
                sbHtml.Append("<div style='padding-left:5px;height: 900px; width:650px;'><table cellpadding='0' cellspacing='0' style='text-align:center; width: 650px; padding-left:15px; font-family:Times New Roman; font-size:16px;'><tr><td rowspan='5'><img src='" + "college/Left_Logo.jpeg" + "' style='height:80px; width:80px;'/></td><td colspan='7' style='align:center'>" + collegeName + " " + collegeCateg + "</td></tr><tr><td colspan='7' style='align:center'>" + collegeAff + "</td></tr><tr><td colspan='7' style='align:center'>" + collegeAdd + "</td></tr><tr><td colspan='7' style='align:center'>" + collegePhone + " " + collegeFax + "</td></tr><tr><td colspan='7' style='align:center'>" + collegeWeb + " " + collegeEmai + "</td></tr><tr><td colspan='8'><hr style='height:2px; width:650px;'></td></tr></table>");
                string[] splitconlname = collegeName.Split('(');
                collegeName = splitconlname[0];
                string mphilPgAppend = "<tr><td colspan='8'>•	10th Std Mark Statement & HSC/Equivalent Course Mark Statement along with 3 photocopies of each. (Provisional Certificate in the case of  March " + DateTime.Now.Year + " candidates). </td></tr>";
                string pgchk = d2.GetFunction("select Upper(c.EDU_LEVEL) from degree d, course c,department dt,applyn a where d.course_id=c.course_id and d.dept_code=dt.dept_code and d.degree_code=a.degree_code and a.app_no=" + appNo + "").Trim().ToUpper();
                if (pgchk.Trim().ToUpper() == "PG")
                {
                    mphilPgAppend = "<tr><td colspan='8'>•	10th Std Mark Statement , HSC/Equivalent Course Mark Statement, UG Mark Statement of Provisional Certificate along with 3 photocopies of each.(Provisional Certificate in the case of March " + DateTime.Now.Year + " candidates)</td></tr>";
                }
                string MphilChk = d2.GetFunction("select Upper(c.EDU_LEVEL) from degree d, course c,department dt,applyn a where d.course_id=c.course_id and d.dept_code=dt.dept_code and d.degree_code=a.degree_code and a.app_no=" + appNo + "").Trim().ToUpper();
                if (MphilChk.Trim().ToUpper() == "M.PHIL" || MphilChk.Trim().ToUpper() == "M.PHIL." || MphilChk.Trim().ToUpper() == "MPHIL" || MphilChk.Trim().ToUpper() == "MPHIL.")
                {
                    mphilPgAppend = "<tr><td colspan='8'>•	10th Std Mark Statement , HSC/Equivalent Course Mark Statement, UG Mark Statement of Provisional Certificate , PG mark statement along with 3 photocopies of each.(Provisional Certificate in the case of March " + DateTime.Now.Year + " candidates)</td></tr>";
                }
                sbHtml.Append("<table cellpadding='2' cellspacing='0' style=' width: 650px; padding-left:15px;font-family:Times New Roman; font-size:14px;text-align:justify;'><tr><td colspan='8' style='text-align:center;' ><span style='height:30px; width:230px; border:1px solid black; font-size:16px; font-weight:bold;'>INTERVIEW LETTER</span></td></tr><tr><td colspan='8' style='text-align:right;'><span style='font-size:16px;font-weight:bold;'>" + prepDate + "</span></td></tr><tr><td colspan='8' style='align:left;'>To</td></tr><tr><td colspan='8' style='align:right;'>" + Namevalue + ",</td></tr><tr><td colspan='8' style='align:right;'>" + Addressvalue + ",</td></tr><tr><td colspan='8' style='align:right;'>Dear candidate,</td></tr><tr><td colspan='8' style='align:left; text-indent:20px;'><p>You have been provisionally selected for admission to <span style='font-size:16px;font-weight:bold;'>" + course + "</span></p></td></tr><tr><td colspan='8' style='align:left;'><b>*<u> Date & Time of Interview:</u></b> <span>" + intDay + ", " + intDate + " at " + intTime + "</span></td></tr><tr><td colspan='8' style='align:left;'><b>*<u>  Venue:</u></b> <span>" + venue.ToUpper() + "</span></td></tr><tr><td colspan='8' style='align:left;'><u><b>Documents to be produced at the time of interview:</b></u></td></tr><tr><td colspan='8' style='align:left;'><u><b># For Submission: </b></u></td></tr><tr><td colspan='8'><span style='font-weight:bold;'>* A crossed DD for Rs." + ddAmt + " (Rupees " + ddAmtStr + " only) drawn in favour of \" <span style='text-transform:capitalize;'>" + collegeName + "," + City + " " + collegePin + "\"</span>.</span></td></tr><tr><td colspan='8'><span style='font-weight:bold;font-family:courier new; font-size:11px;'>[The Demand Draft can be purchased from any Nationalised Bank. The candidate need not wait till the Interview Date to purchase the draft. It is advised to purchase the Demand Draft two or three days ahead of the interview date to have the DD ready for submission.]</span></td></tr>" + mphilPgAppend + "<tr><td colspan='8'>•	Transfer Certificate (Original plus 3 photocopies).</td></tr><tr><td colspan='8'>•	Three <b>recently taken</b> Passport Size Photographs (Size: 3.5 cm x 4.5 cm) – with <b>Sky Blue Background.</b></td></tr><tr><td colspan='8'>•	<u>Soft Copy of the Photograph (as mentioned above - in JPEG Format) saved in a CD. </u></td></tr><tr><td colspan='8'>•	 Eligibility Certificate from the University of Madras (applicable for candidates who have qualified from other State Boards/Universities).</td></tr><tr><td colspan='8'>•	Photocopies of all the documents required to be produced for <b>verification (see below)</b>.</td></tr><tr><td colspan='8' style='align:left;'><u><b># For Verification: </b></u></td></tr><tr><td colspan='8' style='align:left;'>•	Aadhar Card.</td></tr><tr><td colspan='8' style='align:left;'>•	Any other valid Identity Card for Address Proof.</td></tr><tr><td colspan='8'>•	Birth Certificate.</td></tr><tr><td>•	Community Certificate.</td></tr><tr><td colspan='8'>•	Documents in support of Distinction/participation in Sports/Athletics/NCC/NSS.</td></tr><tr><td colspan='8'>•	Differently-abled/Sons of Ex-Servicemen shall submit relevant documents. </td></tr><tr><td colspan='8'>-	Failing to turn up on the above mentioned Time & Date with necessary documents and Demand Draft (as mentioned above) would imply forfeiture of the seat allotted to you.</td></tr><tr><td colspan='8'>-	Fees once paid will not be refunded.</td></tr><tr><td colspan='8' style='font-weight:bold;font-family:courier new; font-size:11px;text-align:justify;'> -	மேற்குறிப்பிடப்பட்ட நேர்காணலுக்கு உரிய நாள் மற்றும் நேரத்தில் உரிய சான்றிதழ்களுடனும் கல்விக்கட்டணத் தொகைக்கான வரைவோலையுடனும் வரத்தவறும் மாணவர்கள் தங்களுக்கு ஒதுக்கப்பட்ட இடத்தை இழந்து விடுவர். அந்த இடம் தகுதியுள்ள வேறு ஒரு மாணவருக்கு உடனே வழங்கப்படும்.</td></tr><tr><td colspan='8' style='font-weight:bold;font-family:courier new; font-size:11px; text-align:justify;'>-	செலுத்தப்பட்ட கல்விக் கட்டணத் தொகையினைத் திருப்பித்தர இயலாது.</td></tr><tr><td colspan='8' style='text-align:right; font-weight:bold;font-size:14px;'>Principal</td></tr></table></div>");
                contentDiv.InnerHtml += sbHtml.ToString();
                string name = d2.GetFunction("select stud_name from applyn where app_no ='" + appNo + "'");
                string rollno = d2.GetFunction("select app_formno from applyn where app_no ='" + appNo + "'");
                string mail_id = d2.GetFunction("select StuPer_Id from applyn where app_no ='" + appNo + "'");
                string stud_phoneno = d2.GetFunction("select Student_Mobile from applyn where app_no ='" + appNo + "'");
                sendmail(mail_id, name, rollno, collegeName, sbHtml);
                //sendsms(stud_phoneno, rollno);
                string Msg = "";
                string getgroup = d2.GetFunction("select c.Course_Name+'('+dt.dept_acronym+')'  from applyn a,Degree d,Department dt,Course c where a.degree_code =d.Degree_Code and d.Dept_Code =dt.Dept_Code and c.Course_Id =d.Course_Id and a.app_formno ='" + rollno + "'");
                string tot = sumttoal(rollno);
                Msg = " Application No : " + rollno + ". You are provisionally selected for " + getgroup + ". Meet the Principal with your Parent on or before " + Convert.ToString(Txt_callDate.Text) + " with original certificates. Remit the College Fees Rs." + tot + " ";
                if (d2.GetFunction("select COLLNAME from collinfo where college_code='" + college_code + "'").Trim().ToUpper().Contains("JAMAL MOHAMED"))
                {
                    Msg += " and the Hostel Fees Rs.19350 on the same day. - PRINCIPAL, JMC";
                }
                else
                {
                    Msg = "Application No:" + rollno + " You are provisionally selected for " + getgroup + ". Meet the Principal with your Parent at " + ddlIntHr.SelectedItem.Text + ":" + ddlIntMin.SelectedItem.Text + " " + ddlIntMed.SelectedItem.Text + " on " + Convert.ToString(Txt_callDate.Text) + " with original certificates and DD for Rs." + Convert.ToString(txtddAmount.Text) + "(Fee) ";
                }
                string user_id = "";
                string ssr = "select * from Track_Value where college_code='" + Convert.ToString(college_code) + "'";
                ds.Clear();
                ds = d2.select_method_wo_parameter(ssr, "Text");
                if (ds.Tables[0].Rows.Count > 0)
                {
                    user_id = Convert.ToString(ds.Tables[0].Rows[0]["SMS_User_ID"]);
                }
                int d1 = d2.send_sms(user_id, college_code, user_code, stud_phoneno, Msg, "0");
            }
            contentDiv.Visible = true;
            ScriptManager.RegisterStartupScript(this, GetType(), "InvokeButton", "PrintDiv();", true);
            errorspan.InnerHtml = "Call Letter Generated";
            poperrjs.Visible = true;
        }
        catch { }
    }
    private string returnStudDeg(string appNo)
    {
        string deg = "0";
        string degQ = string.Empty;
        //if (cbAltCourse.Checked)
        //{
        //    degQ = "select degree_code from applyn where college_code=" + college_code + " and app_no =" + appNo + "";
        //}
        //else
        //{
        degQ = "select degree_code from applyn where college_code=" + college_code + " and app_no =" + appNo + "";
        //}
        deg = d2.GetFunction(degQ).Trim();
        return deg;
    }
    protected void Cancel_clcik(object sender, EventArgs e)
    {
        Div2.Visible = false;
    }
    public string sumttoal(string applno)
    {
        string total = "";
        string textcode = "";
        // string link = "select LinkValue from InsSettings where LinkName='Current Financial Year' and college_code='" + college_code + "'";
        string getfinid = d2.getCurrentFinanceYear(user_code, Convert.ToString(college_code));
        string seattype = d2.GetFunction("select TextCode from TextValTable where TextCriteria ='Seat' and college_code  ='" + college_code + "'");
        if (getfinid.Trim() != "" && getfinid.Trim() != "0" && seattype.Trim() != "" && seattype.Trim() != "0")
        {
            string linkvalue = d2.GetFunction("select LinkValue from New_InsSettings where linkname = 'Fee Yearwise' and user_code ='" + user_code + "' and college_code ='" + college_code + "'");
            if (linkvalue == "0")
            {
                textcode = d2.GetFunction("select TextCode from textvaltable where TextCriteria = 'FEECA'and textval like '1 Semester' and textval not like '-1%' and college_code ='" + college_code + "' order by textval asc");
            }
            else
            {
                textcode = d2.GetFunction("select TextCode from textvaltable where TextCriteria = 'FEECA'and textval like '1 Year' and textval not like '-1%' and college_code ='" + college_code + "'");
            }
            string GetDegreeCodeQuery = "";
            //if (cbAltCourse.Checked == true)
            //{
            //GetDegreeCodeQuery = d2.GetFunction("select  Alternativedegree_code  from applyn where app_formno ='" + applno + "'");
            //}
            //else
            //{
            GetDegreeCodeQuery = d2.GetFunction("select Degree_code from applyn where app_formno ='" + applno + "'");
            //}
            string qur = d2.GetFunction("select SUM(TotalAmount) from FT_FeeAllotDegree where DegreeCode='" + GetDegreeCodeQuery + "' and BatchYear ='" + Convert.ToString(txtbatch.Text) + "' and SeatType ='" + seattype + "' and FeeCategory ='" + textcode + "' and FinYearFK ='" + getfinid + "'");
            if (qur.Trim() != "0" && qur.Trim() != "")
            {
                total = qur.ToString();
            }
        }
        return total;
    }
    public void sendmail(string mail, string name, string app, string collegename, StringBuilder mailMessage)
    {
        try
        {
            string send_mail = "";
            string send_pw = "";
            string to_mail = Convert.ToString(mail);
            string subtext = collegename + " Admission-Regarding";
            string strstuname = Convert.ToString(name);
            string strquery = "select massemail,masspwd from collinfo where college_code = " + college_code + " ";
            ds.Clear();
            ds = dt.select_method_wo_parameter(strquery, "Text");
            if (ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                send_mail = Convert.ToString(ds.Tables[0].Rows[0]["massemail"]);
                send_pw = Convert.ToString(ds.Tables[0].Rows[0]["masspwd"]);
            }
            if (send_mail.Trim() != "" && send_pw.Trim() != "" && to_mail.Trim() != "")
            {
                SmtpClient Mail = new SmtpClient("smtp.gmail.com", 587);
                MailMessage mailmsg = new MailMessage();
                MailAddress mfrom = new MailAddress(send_mail);
                mailmsg.From = mfrom;
                mailmsg.To.Add(to_mail);
                mailmsg.Subject = subtext;
                mailmsg.IsBodyHtml = true;
                // mailmsg.Body = "Hi";
                //mailmsg.Body = mailmsg.Body + strstuname;
                //mailmsg.Body = mailmsg.Body + "<br><br>Thank You...";
                mailmsg.Body = mailMessage.ToString();
                string appPath = HttpContext.Current.Server.MapPath("~");
                if (appPath != "")
                {
                    string szPath = appPath + "/Report/";
                    string szFile = app + ".pdf";
                    string attachementpath = szPath + szFile;
                    if (File.Exists(HttpContext.Current.Server.MapPath("~/Report/" + szFile + "")))
                    {
                        Attachment data = new Attachment(attachementpath);
                        mailmsg.Attachments.Add(data);
                    }
                }
                Mail.EnableSsl = true;
                NetworkCredential credentials = new NetworkCredential(send_mail, send_pw);
                Mail.UseDefaultCredentials = false;
                Mail.Credentials = credentials;
                Mail.Send(mailmsg);
            }
        }
        catch
        {
        }
    }
    public void loadreligion()
    {
        try
        {
            string religion = "";
            cbl_religion.Items.Clear();
            string reliquery = "select distinct Textval,textcode from Textvaltable t,applyn a where a.religion=t.TextCode and TextCriteria ='relig' and batch_year='" + Convert.ToString(txtbatch.Text) + "' and a.college_code ='" + college_code + "'";
            ds.Clear();
            ds = dt.select_method_wo_parameter(reliquery, "Text");
            if (ds.Tables.Count > 0)
            {
                if (ds.Tables[0].Rows.Count > 0)
                {
                    cbl_religion.DataSource = ds;
                    cbl_religion.DataTextField = "TextVal";
                    cbl_religion.DataValueField = "textcode";
                    cbl_religion.DataBind();
                }
            }
            else
            {
                txt_religion.Text = "--Select--";
                cb_religion.Checked = false;
            }
        }
        catch
        {
        }
    }
    private void loadBoardUniv()
    {
        cbl_BoardUniv.Items.Clear();
        try
        {
            if (ddldept.Items.Count > 0)
            {
                string query = "   select distinct TextVal,TextCode from textvaltable t,Stud_prev_details s,applyn a where T.TextCode=S.Course_code and a.app_no=s.app_no and a.batch_year=" + Convert.ToString(txtbatch.Text) + " and a.degree_code ='" + ddldept.SelectedValue + "'  and t.college_code=" + college_code + " and Textval is not null and Textval<>'' order by Textval asc";
                DataSet dsBoardUniv = d2.select_method_wo_parameter(query, "Text");
                if (dsBoardUniv.Tables.Count > 0 && dsBoardUniv.Tables[0].Rows.Count > 0)
                {
                    cbl_BoardUniv.DataSource = dsBoardUniv;
                    cbl_BoardUniv.DataTextField = "textval";
                    cbl_BoardUniv.DataValueField = "TextCode";
                    cbl_BoardUniv.DataBind();
                    //for (int i = 0; i < cbl_BoardUniv.Items.Count; i++)
                    //{
                    //    cbl_BoardUniv.Items[i].Selected = true;
                    //}
                    txtBoardUniv.Text = "-- Select--";//Board(" + cbl_BoardUniv.Items.Count + ")";
                    cb_BoardUniv.Checked = true;
                }
            }
        }
        catch { }
    }
    private void loadAttempts()
    {
        cblAttempt.Items.Clear();
        try
        {
            for (int i = 0; i < 5; i++)
            {
                cblAttempt.Items.Add((i + 1).ToString());
            }
            txtAttempt.Text = "Attempt";
        }
        catch { }
    }
    private void bindmedium()
    {
        cbl_comm.Items.Clear();
        try
        {
            if (ddldept.Items.Count > 0)
            {
                string query = "   select distinct TextVal,TextCode from textvaltable t,Stud_prev_details s,applyn a where  convert(varchar, T.TextCode)=S.medium and a.app_no=s.app_no and a.batch_year=" + Convert.ToString(txtbatch.Text) + " and a.degree_code ='" + ddldept.SelectedValue + "'  and TextCriteria='PLang' and t.college_code=" + college_code + " and Textval is not null and Textval<>'' order by Textval asc";
                DataSet dsBoardUniv = d2.select_method_wo_parameter(query, "Text");
                if (dsBoardUniv.Tables.Count > 0 && dsBoardUniv.Tables[0].Rows.Count > 0)
                {
                    cbl_comm.DataSource = dsBoardUniv;
                    cbl_comm.DataTextField = "textval";
                    cbl_comm.DataValueField = "TextCode";
                    cbl_comm.DataBind();
                    //for (int i = 0; i < cbl_comm.Items.Count; i++)
                    //{
                    //    cbl_comm.Items[i].Selected = true;
                    //}
                    txt_comm.Text = "-- Select--";//Medium(" + cbl_comm.Items.Count + ")";
                    cb_comm.Checked = true;
                }
            }
        }
        catch { }
    }
    public string cblselecteditemcount(CheckBoxList cblSelected)
    {
        int count = 0;
        try
        {
            for (int sel = 0; sel < cblSelected.Items.Count; sel++)
            {
                if (cblSelected.Items[sel].Selected == true)
                {
                    count++;
                }
            }
        }
        catch { count = 0; }
        return count.ToString();
    }
    protected void grid_Details_OnRowDataBound(object sender, GridViewRowEventArgs e)
    {
        /*
        if (cb_exfees.Checked && rdo_receipt.Checked)
        {
            for (int i = 0; i < grid_Details.Rows.Count; i++)
            {
                grid_Details.Columns[15].Visible = true;
            }
        }
        else
        {
            for (int i = 0; i < grid_Details.Rows.Count; i++)
            {
                grid_Details.Columns[15].Visible = false;
            }
        }
        if (cb_govt.Checked && (rdo_receipt.Checked || cb_govt.Visible))
        {
            for (int i = 0; i < grid_Details.Rows.Count; i++)
            {
                grid_Details.Columns[16].Visible = true;
            }
        }
        else
        {
            for (int i = 0; i < grid_Details.Rows.Count; i++)
            {
                grid_Details.Columns[16].Visible = false;
            }
        }
        if (cb_CautionDep.Checked && rdo_receipt.Checked)
        {
            for (int i = 0; i < grid_Details.Rows.Count; i++)
            {
                grid_Details.Columns[17].Visible = true;
            }
        }
        else
        {
            for (int i = 0; i < grid_Details.Rows.Count; i++)
            {
                grid_Details.Columns[17].Visible = false;
            }
        }
        if (rbl_rollnoNew.SelectedIndex == 0)
        {
            for (int i = 0; i < grid_Details.Rows.Count; i++)
            {
                grid_Details.Columns[6].Visible = true;
            }
        }
        else
        {
            for (int i = 0; i < grid_Details.Rows.Count; i++)
            {
                grid_Details.Columns[6].Visible = false;
            }
        }
        if (!fromScript)
        {
            double totAmtToPay = 0;
            TextBox txt_payamt = (TextBox)e.Row.Cells[1].FindControl("txt_tobepaid_amt");
            if (e.Row.RowType == DataControlRowType.DataRow)
            {
                double partamt;
                if (partamt1 == 0 && partamt2 == 0)
                {
                    partamt2 = 1;
                    if (Txt_amt.Text.Trim() != "")
                    {
                        partamt = Convert.ToDouble(Txt_amt.Text.Trim());
                        partamt1 = partamt;
                    }
                    else
                    {
                        partamt = 0;
                    }
                }
                else
                {
                    partamt = partamt1;
                }
                CheckBox cbox_selectLedger = (CheckBox)e.Row.Cells[1].FindControl("cb_selectLedger");
                if (ddl_AmtPerc.SelectedIndex == 0)
                {
                    txt_payamt.Attributes.Remove("readonly");
                    if (rdo_receipt.Checked)
                    {
                        #region For Receipt
                        TextBox txtfee = (TextBox)e.Row.Cells[1].FindControl("txt_fee_amt");
                        TextBox txtpayamt = (TextBox)e.Row.Cells[1].FindControl("txt_tobepaid_amt");
                        TextBox txtbalamt = (TextBox)e.Row.Cells[1].FindControl("txt_bal_amt");
                        TextBox txttotamt = (TextBox)e.Row.Cells[1].FindControl("txt_tot_amt");
                        TextBox txtpaiamt = (TextBox)e.Row.Cells[1].FindControl("txt_paid_amt");
                        TextBox txtdeductamt = (TextBox)e.Row.Cells[1].FindControl("txt_deduct_amt");
                        TextBox txtgridexcessamt = (TextBox)e.Row.Cells[1].FindControl("txt_gridexcess_amt");
                        TextBox txtgridschlamt = (TextBox)e.Row.Cells[1].FindControl("txt_scholar_amt");
                        TextBox txtgridCautamt = (TextBox)e.Row.Cells[1].FindControl("txt_deposit_amt");
                        Label lblchltkn = (Label)e.Row.Cells[1].FindControl("lbl_chltkn");
                        txtbalamt.Attributes.Add("readonly", "readonly");
                        txtpaiamt.Attributes.Add("readonly", "readonly");
                        if (txttotamt.Text.Trim() != "")
                        {
                            tottotamt += Convert.ToDouble(txttotamt.Text.Trim());
                        }
                        else
                        {
                            tottotamt += 0;
                        }
                        if (txtpaiamt.Text.Trim() != "")
                        {
                            paitotamt += Convert.ToDouble(txtpaiamt.Text.Trim());
                        }
                        else
                        {
                            paitotamt += 0;
                        }
                        double curExcess = 0;
                        if (cb_exfees.Checked)
                        {
                            double.TryParse(txtgridexcessamt.Text.Trim(), out curExcess);
                        }
                        double scholAmt = 0;
                        if (cb_govt.Checked)
                        {
                            double.TryParse(txtgridschlamt.Text.Trim(), out scholAmt);
                        }
                        double curCautAmt = 0;
                        if (cb_CautionDep.Checked)
                        {
                            double.TryParse(txtgridCautamt.Text.Trim(), out curCautAmt);
                        }
                        double txtfeeamt = 0;
                        double curPay = 0;
                        if (txttotamt.Text.Trim() != "")
                        {
                            txtfeeamt = Convert.ToDouble(txttotamt.Text.Trim());
                            if ((txtfeeamt - ((Convert.ToDouble(txtpaiamt.Text) + curExcess + scholAmt + curCautAmt))) != 0)
                            {
                                if (partamt <= (txtfeeamt - (Convert.ToDouble(txtpaiamt.Text) + curExcess + scholAmt + curCautAmt)))
                                {
                                    txtbalamt.Text = ((txtfeeamt - ((Convert.ToDouble(txtpaiamt.Text) + curExcess + scholAmt + curCautAmt))) - partamt).ToString();
                                    if (partamt != 0)
                                    {
                                        txtpayamt.Text = (partamt).ToString();
                                        curPay = partamt;
                                    }
                                    else
                                    {
                                        txtpayamt.Text = "0.00";
                                        curPay = 0;
                                    }
                                    baltotalamt += txtfeeamt - ((Convert.ToDouble(txtpaiamt.Text) + curExcess + scholAmt + curCautAmt)) - partamt;
                                    tobepaidtotalamt += partamt;
                                    partamt = 0;
                                    partamt1 = partamt;
                                    txt_examt.Text = "0";
                                }
                                else
                                {
                                    baltotalamt += 0;
                                    curPay = txtfeeamt - ((Convert.ToDouble(txtpaiamt.Text) + curExcess + scholAmt + curCautAmt));
                                    txt_examt.Text = (partamt - curPay).ToString();
                                    txtpayamt.Text = (txtfeeamt - ((Convert.ToDouble(txtpaiamt.Text) + curExcess + scholAmt + curCautAmt))).ToString();
                                    tobepaidtotalamt += txtfeeamt - ((Convert.ToDouble(txtpaiamt.Text) + curExcess + scholAmt + curCautAmt));
                                    txtbalamt.Text = ((txtfeeamt - (Convert.ToDouble(txtpaiamt.Text) + curExcess + scholAmt + curCautAmt)) - Convert.ToDouble(txtpayamt.Text)).ToString();
                                    partamt -= txtfeeamt - (Convert.ToDouble(txtpaiamt.Text) + curExcess + scholAmt + curCautAmt);
                                    partamt1 = partamt;
                                }
                            }
                            else
                            {
                                txt_examt.Text = partamt.ToString();
                            }
                        }
                        if ((Convert.ToDouble(txttotamt.Text.Trim()) - Convert.ToDouble(txtpaiamt.Text.Trim()) > 0) && curPay > 0)
                        {
                            cbox_selectLedger.Checked = true;
                        }
                        else
                        {
                            cbox_selectLedger.Checked = false;
                        }
                        //txt_tbpaid.Text = tobepaidtotalamt.ToString();
                        Txt_amt.Text = tobepaidtotalamt.ToString();
                        //txt_examt.Text = (excessAmt - curPay).ToString();
                        lbl_Exfee.Text = "Excess Fee Amount Entered : Rs. " + txt_examt.Text + " /-";
                        txt_balamt.Text = baltotalamt.ToString();
                        txt_totamt.Text = tottotamt.ToString();
                        txt_paidamt.Text = paitotamt.ToString();
                        #endregion
                    }
                    else if (rdo_sngle.Checked && rdo_challan.Checked)
                    {
                        #region For CHallan
                        TextBox txtfee = (TextBox)e.Row.Cells[1].FindControl("txt_fee_amt");
                        TextBox txtpayamt = (TextBox)e.Row.Cells[1].FindControl("txt_tobepaid_amt");
                        TextBox txtbalamt = (TextBox)e.Row.Cells[1].FindControl("txt_bal_amt");
                        TextBox txttotamt = (TextBox)e.Row.Cells[1].FindControl("txt_tot_amt");
                        TextBox txtpaiamt = (TextBox)e.Row.Cells[1].FindControl("txt_paid_amt");
                        TextBox txtdeductamt = (TextBox)e.Row.Cells[1].FindControl("txt_deduct_amt");
                        TextBox txtgridschlamt = (TextBox)e.Row.Cells[1].FindControl("txt_scholar_amt");
                        Label lblchltkn = (Label)e.Row.Cells[1].FindControl("lbl_chltkn");
                        string totalamt = txttotamt.Text;
                        txtbalamt.Attributes.Add("readonly", "readonly");
                        txtpaiamt.Attributes.Add("readonly", "readonly");
                        txtpayamt.Attributes.Add("readonly", "readonly");
                        if (txttotamt.Text.Trim() != "")
                        {
                            tottotamt += Convert.ToDouble(txttotamt.Text.Trim());
                        }
                        else
                        {
                            tottotamt += 0;
                        }
                        if (txtpaiamt.Text.Trim() != "")
                        {
                            paitotamt += Convert.ToDouble(txtpaiamt.Text.Trim());
                        }
                        else
                        {
                            paitotamt += 0;
                        }
                        double scholAmt = 0;
                        if (cb_govt.Checked)
                        {
                            double.TryParse(txtgridschlamt.Text.Trim(), out scholAmt);
                        }
                        double txtfeeamt = 0;
                        double curPay = 0;
                        if (txttotamt.Text.Trim() != "")
                        {
                            txtfeeamt = Convert.ToDouble(txttotamt.Text.Trim());
                            if ((txtfeeamt - (Convert.ToDouble(txtpaiamt.Text) + scholAmt)) != 0)
                            {
                                if (partamt <= (txtfeeamt - (Convert.ToDouble(txtpaiamt.Text) + scholAmt) - Convert.ToDouble(lblchltkn.Text.Trim())))
                                {
                                    txtbalamt.Text = ((txtfeeamt - (Convert.ToDouble(txtpaiamt.Text) + scholAmt)) - partamt).ToString();
                                    if (partamt != 0)
                                    {
                                        txtpayamt.Text = (partamt).ToString();
                                        curPay = partamt;
                                    }
                                    else
                                    {
                                        txtpayamt.Text = "";
                                        curPay = 0;
                                    }
                                    baltotalamt += txtfeeamt - (Convert.ToDouble(txtpaiamt.Text) + scholAmt) - partamt;
                                    tobepaidtotalamt += partamt;
                                    partamt = 0;
                                    partamt1 = partamt;
                                    txt_examt.Text = "0";
                                }
                                else
                                {
                                    baltotalamt += 0;
                                    curPay = txtfeeamt - (Convert.ToDouble(txtpaiamt.Text) + scholAmt) - Convert.ToDouble(lblchltkn.Text.Trim());
                                    //  txt_examt.Text = (partamt - curPay).ToString();
                                    txt_examt.Text = "0";
                                    txtpayamt.Text = (txtfeeamt - (Convert.ToDouble(txtpaiamt.Text) + scholAmt) - Convert.ToDouble(lblchltkn.Text.Trim())).ToString();
                                    tobepaidtotalamt += txtfeeamt - (Convert.ToDouble(txtpaiamt.Text) + scholAmt) - Convert.ToDouble(lblchltkn.Text.Trim());
                                    txtbalamt.Text = ((txtfeeamt - (Convert.ToDouble(txtpaiamt.Text) + scholAmt)) - Convert.ToDouble(txtpayamt.Text)).ToString();
                                    partamt -= txtfeeamt - (Convert.ToDouble(txtpaiamt.Text) + scholAmt) - Convert.ToDouble(lblchltkn.Text.Trim());
                                    partamt1 = partamt;
                                }
                            }
                        }
                        else
                        {
                        }
                        if ((Convert.ToDouble(txttotamt.Text.Trim()) - Convert.ToDouble(txtpaiamt.Text.Trim()) > 0) && curPay > 0)
                        {
                            cbox_selectLedger.Checked = true;
                        }
                        else
                        {
                            cbox_selectLedger.Checked = false;
                        }
                        //txt_tbpaid.Text = tobepaidtotalamt.ToString();
                        Txt_amt.Text = tobepaidtotalamt.ToString();
                        //txt_examt.Text = (excessAmt - curPay).ToString();
                        txt_balamt.Text = baltotalamt.ToString();
                        txt_totamt.Text = tottotamt.ToString();
                        txt_paidamt.Text = paitotamt.ToString();
                        //if (cb_exfees.Checked)
                        //{
                        //    //if (txt_exfees.Text.Trim() != "0" && txt_exfees.Text.Trim() != "0.00")
                        //    //{
                        //    //    if (tobepaidtotalamt <= Convert.ToDouble(txt_exfees.Text.Trim()))
                        //    //    {
                        //    //        //Txt_amt.Text = (Convert.ToDouble(txt_exfees.Text.Trim()) - tobepaidtotalamt).ToString();
                        //    //        Txt_amt.Text = "0.00";
                        //    //    }
                        //    //    else
                        //    //    {
                        //    //        Txt_amt.Text = (tobepaidtotalamt - Convert.ToDouble(txt_exfees.Text.Trim())).ToString();
                        //    //    }
                        //    //}
                        //}
                        #endregion
                    }
                }
                else
                {
                    txt_payamt.Attributes.Add("readonly", "readonly");
                    //Percentage
                    if (Txt_amt.Text.Trim() == "")
                    {
                        Txt_amt.Text = "0";
                    }
                    double percAmount = Convert.ToDouble(Txt_amt.Text.Trim());
                    if (percAmount > 0 && percAmount <= 100)
                    {
                        if (rdo_receipt.Checked)
                        {
                            #region For Receipt
                            TextBox txtfee = (TextBox)e.Row.Cells[1].FindControl("txt_fee_amt");
                            TextBox txtpayamt = (TextBox)e.Row.Cells[1].FindControl("txt_tobepaid_amt");
                            TextBox txtbalamt = (TextBox)e.Row.Cells[1].FindControl("txt_bal_amt");
                            TextBox txttotamt = (TextBox)e.Row.Cells[1].FindControl("txt_tot_amt");
                            TextBox txtpaiamt = (TextBox)e.Row.Cells[1].FindControl("txt_paid_amt");
                            TextBox txtdeductamt = (TextBox)e.Row.Cells[1].FindControl("txt_deduct_amt");
                            TextBox txtgridexcessamt = (TextBox)e.Row.Cells[1].FindControl("txt_gridexcess_amt");
                            TextBox txtgridschlamt = (TextBox)e.Row.Cells[1].FindControl("txt_scholar_amt");
                            TextBox txtgridCautamt = (TextBox)e.Row.Cells[1].FindControl("txt_deposit_amt");
                            Label lblchltkn = (Label)e.Row.Cells[1].FindControl("lbl_chltkn");
                            txtbalamt.Attributes.Add("readonly", "readonly");
                            txtpaiamt.Attributes.Add("readonly", "readonly");
                            if (txttotamt.Text.Trim() != "")
                            {
                                tottotamt += Convert.ToDouble(txttotamt.Text.Trim());
                            }
                            else
                            {
                                tottotamt += 0;
                            }
                            if (txtpaiamt.Text.Trim() != "")
                            {
                                paitotamt += Convert.ToDouble(txtpaiamt.Text.Trim());
                            }
                            else
                            {
                                paitotamt += 0;
                            }
                            double curExcess = 0;
                            if (cb_exfees.Checked)
                            {
                                double.TryParse(txtgridexcessamt.Text.Trim(), out curExcess);
                            }
                            double scholAmt = 0;
                            if (cb_govt.Checked)
                            {
                                double.TryParse(txtgridschlamt.Text.Trim(), out scholAmt);
                            }
                            double curCautAmt = 0;
                            if (cb_CautionDep.Checked)
                            {
                                double.TryParse(txtgridCautamt.Text.Trim(), out curCautAmt);
                            }
                            double txtfeeamt = 0;
                            double curPay = 0;
                            if (txttotamt.Text.Trim() != "")
                            {
                                txtfeeamt = Convert.ToDouble(txttotamt.Text.Trim());
                                curPay = (txtfeeamt * percAmount) / 100;
                                if ((curPay - (Convert.ToDouble(txtpaiamt.Text) + curExcess + scholAmt + curCautAmt)) != 0)
                                {
                                    if (curPay <= (txtfeeamt - (Convert.ToDouble(txtpaiamt.Text) + curExcess + scholAmt + curCautAmt)))
                                    {
                                        txtbalamt.Text = ((txtfeeamt - (Convert.ToDouble(txtpaiamt.Text) + curExcess + scholAmt + curCautAmt)) - curPay).ToString();
                                        txtpayamt.Text = (curPay).ToString();
                                        baltotalamt += txtfeeamt - (Convert.ToDouble(txtpaiamt.Text) + curExcess + scholAmt + curCautAmt) - curPay;
                                        tobepaidtotalamt += curPay;
                                        txt_examt.Text = "0";
                                    }
                                }
                                else
                                {
                                    txt_examt.Text = partamt.ToString();
                                }
                            }
                            if ((Convert.ToDouble(txttotamt.Text.Trim()) - Convert.ToDouble(txtpaiamt.Text.Trim()) > 0) && curPay > 0)
                            {
                                cbox_selectLedger.Checked = true;
                            }
                            else
                            {
                                cbox_selectLedger.Checked = false;
                            }
                            //txt_tbpaid.Text = tobepaidtotalamt.ToString();
                            //txt_examt.Text = (excessAmt - curPay).ToString();
                            //Txt_amt.Text = tobepaidtotalamt.ToString();
                            lbl_Exfee.Text = "Excess Fee Amount Entered : Rs. " + txt_examt.Text + " /-";
                            txt_balamt.Text = baltotalamt.ToString();
                            txt_totamt.Text = tottotamt.ToString();
                            txt_paidamt.Text = paitotamt.ToString();
                            #endregion
                        }
                        else if (rdo_sngle.Checked && rdo_challan.Checked)
                        {
                            #region For CHallan
                            TextBox txtfee = (TextBox)e.Row.Cells[1].FindControl("txt_fee_amt");
                            TextBox txtpayamt = (TextBox)e.Row.Cells[1].FindControl("txt_tobepaid_amt");
                            TextBox txtbalamt = (TextBox)e.Row.Cells[1].FindControl("txt_bal_amt");
                            TextBox txttotamt = (TextBox)e.Row.Cells[1].FindControl("txt_tot_amt");
                            TextBox txtpaiamt = (TextBox)e.Row.Cells[1].FindControl("txt_paid_amt");
                            TextBox txtdeductamt = (TextBox)e.Row.Cells[1].FindControl("txt_deduct_amt");
                            TextBox txtgridschlamt = (TextBox)e.Row.Cells[1].FindControl("txt_scholar_amt");
                            Label lblchltkn = (Label)e.Row.Cells[1].FindControl("lbl_chltkn");
                            string totalamt = txttotamt.Text;
                            txtbalamt.Attributes.Add("readonly", "readonly");
                            txtpaiamt.Attributes.Add("readonly", "readonly");
                            txtpayamt.Attributes.Add("readonly", "readonly");
                            if (txttotamt.Text.Trim() != "")
                            {
                                tottotamt += Convert.ToDouble(txttotamt.Text.Trim());
                            }
                            else
                            {
                                tottotamt += 0;
                            }
                            if (txtpaiamt.Text.Trim() != "")
                            {
                                paitotamt += Convert.ToDouble(txtpaiamt.Text.Trim());
                            }
                            else
                            {
                                paitotamt += 0;
                            }
                            double scholAmt = 0;
                            if (cb_govt.Checked)
                            {
                                double.TryParse(txtgridschlamt.Text.Trim(), out scholAmt);
                            }
                            double txtfeeamt = 0;
                            double curPay = 0;
                            if (txttotamt.Text.Trim() != "")
                            {
                                txtfeeamt = Convert.ToDouble(txttotamt.Text.Trim());
                                curPay = (txtfeeamt * percAmount) / 100;
                                if ((curPay - (Convert.ToDouble(txtpaiamt.Text) + scholAmt)) != 0)
                                {
                                    if (curPay <= (txtfeeamt - (Convert.ToDouble(txtpaiamt.Text) + scholAmt) - Convert.ToDouble(lblchltkn.Text.Trim())))
                                    {
                                        txtbalamt.Text = ((txtfeeamt - (Convert.ToDouble(txtpaiamt.Text) + scholAmt)) - curPay).ToString();
                                        txtpayamt.Text = (curPay).ToString();
                                        baltotalamt += txtfeeamt - (Convert.ToDouble(txtpaiamt.Text) + scholAmt) - curPay;
                                        tobepaidtotalamt += curPay;
                                        txt_examt.Text = "0";
                                    }
                                }
                            }
                            else
                            {
                            }
                            if ((Convert.ToDouble(txttotamt.Text.Trim()) - Convert.ToDouble(txtpaiamt.Text.Trim()) > 0) && curPay > 0)
                            {
                                cbox_selectLedger.Checked = true;
                            }
                            else
                            {
                                cbox_selectLedger.Checked = false;
                            }
                            //Txt_amt.Text = tobepaidtotalamt.ToString();
                            txt_balamt.Text = baltotalamt.ToString();
                            txt_totamt.Text = tottotamt.ToString();
                            txt_paidamt.Text = paitotamt.ToString();
                            #endregion
                        }
                    }
                    else
                    {
                        //Txt_amt.Text = "0.00";
                    }
                }
            }
        }*/
    }
    protected void grid_Details_DataBound(object sender, EventArgs e)
    {
        /*
        if (Txt_amt.Text.Trim() == "" || Txt_amt.Text.Trim() == "0" || Txt_amt.Text.Trim() == "0.00")
        {
            if (rdo_challan.Checked)
            {
                chkGridSelectAll.Checked = true;
                selectLedgersChallan();
            }
            else
            {
                selectLedgers();
            }
        }
        else
        {
            double totAmtToPay = 0;
            for (int i = 0; i < grid_Details.Rows.Count; i++)
            {
                TextBox txt = (TextBox)grid_Details.Rows[i].Cells[1].FindControl("txt_tobepaid_amt");
                TextBox txtexgridamt = (TextBox)grid_Details.Rows[i].Cells[1].FindControl("txt_gridexcess_amt");
                TextBox txtgridschlamt = (TextBox)grid_Details.Rows[i].Cells[1].FindControl("txt_scholar_amt");
                TextBox txtgridCautamt = (TextBox)grid_Details.Rows[i].Cells[1].FindControl("txt_deposit_amt");
                CheckBox cbl = (CheckBox)grid_Details.Rows[i].Cells[1].FindControl("cb_selectLedger");
                if (txt.Text == "")
                {
                    txt.Text = "0.00";
                }
                double curExcess = 0.00;
                double scholamt = 0.00;
                double curCautamt = 0.00;
                if (rdo_challan.Checked == false)
                {
                    if (cb_exfees.Checked == true)
                    {
                        double.TryParse(txtexgridamt.Text.Trim(), out curExcess);
                    }
                    if (cb_govt.Checked == true)
                    {
                        double.TryParse(txtgridschlamt.Text.Trim(), out scholamt);
                    }
                    if (cb_CautionDep.Checked == true)
                    {
                        double.TryParse(txtgridCautamt.Text.Trim(), out curCautamt);
                    }
                }
                else if (cb_govt.Visible)
                {
                    if (cb_govt.Checked == true)
                    {
                        double.TryParse(txtgridschlamt.Text.Trim(), out scholamt);
                    }
                }
                totAmtToPay += Convert.ToDouble(txt.Text) + curExcess + scholamt + curCautamt;
                if ((Convert.ToDouble(txt.Text) + curExcess + scholamt + curCautamt) > 0)
                {
                    cbl.Checked = true;
                }
                else
                {
                    cbl.Checked = false;
                }
            }
            lbl_CurPay.Text = "Total Amount To Be Paid : Rs." + totAmtToPay + " /-";
        }
        try
        {
            double paiColor = 0;
            double totColor = 0;
            for (int i = 0; i < grid_Details.Rows.Count; i++)
            {
                TextBox txttotamt = (TextBox)grid_Details.Rows[i].FindControl("txt_tot_amt");
                TextBox txtpaiamt = (TextBox)grid_Details.Rows[i].FindControl("txt_paid_amt");
                if (txttotamt.Text.Trim() != "")
                {
                    totColor = Convert.ToDouble(txttotamt.Text.Trim());
                }
                if (txtpaiamt.Text.Trim() != "")
                {
                    paiColor = Convert.ToDouble(txtpaiamt.Text.Trim());
                }
                Color clr = new Color();
                if (paiColor == totColor)
                {
                    //Full fees paid 
                    clr = Color.FromArgb(144, 238, 144);
                }
                else if (paiColor > 0 && totColor > 0)
                {
                    //If Partial Paid
                    clr = Color.FromArgb(255, 182, 193);
                }
                else
                {
                    clr = Color.White;
                }
                for (int j = 0; j < grid_Details.Columns.Count; j++)
                {
                    grid_Details.Rows[i].Cells[j].BackColor = clr;
                }
            }
        }
        catch (Exception ex)
        { //d2.sendErrorMail(ex, collegecode1, "ChallanReceipt"); 
        }
        bool FeeAMT = hideGridFeeAmt();
        bool DedAMT = hideGridDedAmt();
        bool TotAMT = hideGridTotAmt();
        bool PaiAMT = hideGridPaidAmt();
        #region New
        if (!FeeAMT || !DedAMT || !TotAMT || !PaiAMT)
        {
            chkGridSelectAll.Visible = false;
            foreach (GridViewRow Gr in grid_Details.Rows)
            {
                TextBox tp = (TextBox)Gr.FindControl("txt_tobepaid_amt");
                tp.Attributes.Add("readonly", "readonly");
            }
        }
        else
        {
            chkGridSelectAll.Visible = true;
        }
        if (FeeAMT)
        {
            grid_Details.Columns[9].Visible = true;
        }
        else
        {
            grid_Details.Columns[9].Visible = false;
        }
        if (DedAMT)
        {
            grid_Details.Columns[10].Visible = true;
        }
        else
        {
            grid_Details.Columns[10].Visible = false;
        }
        if (TotAMT)
        {
            grid_Details.Columns[11].Visible = true;
        }
        else
        {
            grid_Details.Columns[11].Visible = false;
        }
        if (PaiAMT)
        {
            grid_Details.Columns[12].Visible = true;
        }
        else
        {
            grid_Details.Columns[12].Visible = false;
        }
        #endregion
         */
    }
    protected void btnExcel_Click(object sender, EventArgs e)
    {
        try
        {
            string reportname = txtexcelname.Text;
            if (reportname.ToString().Trim() != "")
            {
                if (TabContainer1.ActiveTabIndex == 0) d2.printexcelreport(FpSpread3, reportname);
                else if (TabContainer1.ActiveTabIndex == 1) d2.printexcelreport(FpSpread1, reportname);
                else if (TabContainer1.ActiveTabIndex == 2) d2.printexcelreport(FpSpread2, reportname);
                else if (TabContainer1.ActiveTabIndex == 3) d2.printexcelreport(FpSpread4, reportname);
                lblvalidation1.Visible = false;
            }
            else
            {
                lblvalidation1.Text = "Please Enter Your Report Name";
                lblvalidation1.Visible = true;
                txtexcelname.Focus();
            }
        }
        catch
        {
        }
    }
    protected void btnprintmaster_Click(object sender, EventArgs e)
    {
        try
        {
            string degreedetails = txtexcelname.Text;
            string pagename = "Selection_Process.aspx";
            if (TabContainer1.ActiveTabIndex == 0) Printcontrol.loadspreaddetails(FpSpread3, pagename, degreedetails);
            else if (TabContainer1.ActiveTabIndex == 1) Printcontrol.loadspreaddetails(FpSpread1, pagename, degreedetails);
            else if (TabContainer1.ActiveTabIndex == 2) Printcontrol.loadspreaddetails(FpSpread2, pagename, degreedetails);
            else if (TabContainer1.ActiveTabIndex == 3) Printcontrol.loadspreaddetails(FpSpread4, pagename, degreedetails);
            Printcontrol.Visible = true;
        }
        catch
        { }
    }

}